version: 2
jobs:
  build:
    docker:
      - image: cimg/ruby:2.7.1-node
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-
      - checkout
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - run:
          name: Python install
          command: sudo apt update && sudo apt-get install python3-pip python3.8 && python3.8 -m pip install pipenv
      - restore_cache:
          keys:
            - gem-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-{{ .Branch }}
            - gem-cache-
      - run:
          name: Bundle Install
          command: bundle install --path vendor/bundle
      - save_cache:
          key: gem-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          keys:
            - yarn-{{ .Branch }}-{{ checksum "Pipefile.lock" }}
            - yarn-{{ checksum "yarn.lock" }}
            - yarn-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-{{ .Branch}}-{{ checksum "yarn.lock" }}
          paths:
            - "~/.cache/yarn"
      - restore_cache:
          keys:
            - pip-packages-{{ .Branch }}-{{ checksum "Pipefile.lock" }}
            - pip-packages-{{ .Branch }}-
            - pip-packages-
      - run:
          name: Python Dependencies Install
          command: pipenv install
      - save_cache:
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8/site-packages"
          key: pip-packages-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Configure CircleCI Bot
          command: |
            git config --global user.email "facebook-circleci-bot@users.noreply.github.com"
            git config --global user.name "Website Deployment Script"
      - run:
          name: Build Jekyll site and push to master
          command: pipenv run ./scripts/deploy-site.sh build

workflows:
  version: 2
  workflow-build:
    jobs:
      - build:
          filters:
            branches:
              only: site
