Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "complex_numbers", "cond", "config_mod", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "deterministic", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "export", "export.ir_spec", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "future_mod", "futures", "fx", "fx.experimental", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/python.object-model", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.dynamic-value", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/exportdb/torch.mutation", "generated/exportdb/torch.operator", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dim_order", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.module_load", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.register_post_accumulate_grad_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.UnpackedDualTensor", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.enter_dual_level", "generated/torch.autograd.forward_ad.exit_dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.BackwardCFunction", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.function.InplaceFunction", "generated/torch.autograd.function.NestedIOFunction", "generated/torch.autograd.function.once_differentiable", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.grad_mode.inference_mode", "generated/torch.autograd.grad_mode.set_grad_enabled", "generated/torch.autograd.grad_mode.set_multithreading_enabled", "generated/torch.autograd.gradcheck.GradcheckError", "generated/torch.autograd.gradcheck.gradcheck", "generated/torch.autograd.gradcheck.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.graph.increment_version", "generated/torch.autograd.profiler.EnforceUnique", "generated/torch.autograd.profiler.KinetoStepTracker", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.parse_nvprof_trace", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.profiler.record_function", "generated/torch.autograd.profiler_util.Interval", "generated/torch.autograd.profiler_util.Kernel", "generated/torch.autograd.profiler_util.MemRecordsAcc", "generated/torch.autograd.profiler_util.StringTable", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.cudagraph_mark_step_begin", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.cond", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_device", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.set_device", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_file", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.fx.experimental.symbolic_shapes.DimConstraints", "generated/torch.fx.experimental.symbolic_shapes.DimDynamic", "generated/torch.fx.experimental.symbolic_shapes.EqualityConstraint", "generated/torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnv", "generated/torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint", "generated/torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.SymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr", "generated/torch.fx.experimental.symbolic_shapes.constrain_range", "generated/torch.fx.experimental.symbolic_shapes.constrain_unify", "generated/torch.fx.experimental.symbolic_shapes.definitely_false", "generated/torch.fx.experimental.symbolic_shapes.definitely_true", "generated/torch.fx.experimental.symbolic_shapes.guard_size_oblivious", "generated/torch.fx.experimental.symbolic_shapes.has_free_symbols", "generated/torch.fx.experimental.symbolic_shapes.hint_int", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_bool", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_int", "generated/torch.fx.experimental.symbolic_shapes.parallel_and", "generated/torch.fx.experimental.symbolic_shapes.parallel_or", "generated/torch.fx.experimental.symbolic_shapes.statically_known_true", "generated/torch.fx.experimental.symbolic_shapes.sym_eq", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_device", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.interface", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.event.Event", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.CircularPad1d", "generated/torch.nn.CircularPad2d", "generated/torch.nn.CircularPad3d", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LPPool3d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.attention.SDPBackend", "generated/torch.nn.attention.bias.CausalBias", "generated/torch.nn.attention.bias.CausalVariant", "generated/torch.nn.attention.bias.causal_lower_right", "generated/torch.nn.attention.bias.causal_upper_left", "generated/torch.nn.attention.sdpa_kernel", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.lp_pool3d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.convert_conv2d_weight_memory_format", "generated/torch.nn.utils.convert_conv3d_weight_memory_format", "generated/torch.nn.utils.fuse_conv_bn_eval", "generated/torch.nn.utils.fuse_conv_bn_weights", "generated/torch.nn.utils.fuse_linear_bn_eval", "generated/torch.nn.utils.fuse_linear_bn_weights", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrizations.weight_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.as_sparse_gradcheck", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_ite", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unravel_index", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.utils.swap_tensors", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.xpu.Stream", "generated/torch.xpu.StreamContext", "generated/torch.xpu.current_device", "generated/torch.xpu.current_stream", "generated/torch.xpu.device", "generated/torch.xpu.device_count", "generated/torch.xpu.device_of", "generated/torch.xpu.get_device_capability", "generated/torch.xpu.get_device_name", "generated/torch.xpu.get_device_properties", "generated/torch.xpu.init", "generated/torch.xpu.is_available", "generated/torch.xpu.is_initialized", "generated/torch.xpu.set_device", "generated/torch.xpu.set_stream", "generated/torch.xpu.stream", "generated/torch.xpu.synchronize", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "meta", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.attention", "nn.attention.bias", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/fsdp", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_dynamo", "onnx_dynamo_onnxruntime_backend", "onnx_torchscript", "onnx_torchscript_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler_aot_inductor", "torch.compiler_api", "torch.compiler_best_practices_for_backends", "torch.compiler_cudagraph_trees", "torch.compiler_custom_backends", "torch.compiler_deepdive", "torch.compiler_dynamic_shapes", "torch.compiler_fake_tensor", "torch.compiler_faq", "torch.compiler_fine_grain_apis", "torch.compiler_get_started", "torch.compiler_guards_overview", "torch.compiler_inductor_profiling", "torch.compiler_ir", "torch.compiler_nn_module", "torch.compiler_performance_dashboard", "torch.compiler_profiling_torch_compile", "torch.compiler_transformations", "torch.compiler_troubleshooting", "torch.overrides", "torch_cuda_memory", "type_info", "utils", "xpu"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "complex_numbers.rst", "cond.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "deterministic.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "export.ir_spec.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "future_mod.rst", "futures.rst", "fx.rst", "fx.experimental.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/python.object-model.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.dynamic-value.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/exportdb/torch.mutation.rst", "generated/exportdb/torch.operator.rst", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dim_order.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.module_load.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.register_post_accumulate_grad_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.UnpackedDualTensor.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.enter_dual_level.rst", "generated/torch.autograd.forward_ad.exit_dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.BackwardCFunction.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.function.InplaceFunction.rst", "generated/torch.autograd.function.NestedIOFunction.rst", "generated/torch.autograd.function.once_differentiable.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.grad_mode.inference_mode.rst", "generated/torch.autograd.grad_mode.set_grad_enabled.rst", "generated/torch.autograd.grad_mode.set_multithreading_enabled.rst", "generated/torch.autograd.gradcheck.GradcheckError.rst", "generated/torch.autograd.gradcheck.gradcheck.rst", "generated/torch.autograd.gradcheck.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.graph.increment_version.rst", "generated/torch.autograd.profiler.EnforceUnique.rst", "generated/torch.autograd.profiler.KinetoStepTracker.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.parse_nvprof_trace.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.profiler.record_function.rst", "generated/torch.autograd.profiler_util.Interval.rst", "generated/torch.autograd.profiler_util.Kernel.rst", "generated/torch.autograd.profiler_util.MemRecordsAcc.rst", "generated/torch.autograd.profiler_util.StringTable.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.cudagraph_mark_step_begin.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.cond.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_device.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.set_device.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_file.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.fx.experimental.symbolic_shapes.DimConstraints.rst", "generated/torch.fx.experimental.symbolic_shapes.DimDynamic.rst", "generated/torch.fx.experimental.symbolic_shapes.EqualityConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnv.rst", "generated/torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.SymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr.rst", "generated/torch.fx.experimental.symbolic_shapes.constrain_range.rst", "generated/torch.fx.experimental.symbolic_shapes.constrain_unify.rst", "generated/torch.fx.experimental.symbolic_shapes.definitely_false.rst", "generated/torch.fx.experimental.symbolic_shapes.definitely_true.rst", "generated/torch.fx.experimental.symbolic_shapes.guard_size_oblivious.rst", "generated/torch.fx.experimental.symbolic_shapes.has_free_symbols.rst", "generated/torch.fx.experimental.symbolic_shapes.hint_int.rst", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_bool.rst", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_int.rst", "generated/torch.fx.experimental.symbolic_shapes.parallel_and.rst", "generated/torch.fx.experimental.symbolic_shapes.parallel_or.rst", "generated/torch.fx.experimental.symbolic_shapes.statically_known_true.rst", "generated/torch.fx.experimental.symbolic_shapes.sym_eq.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_device.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.interface.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.event.Event.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.CircularPad1d.rst", "generated/torch.nn.CircularPad2d.rst", "generated/torch.nn.CircularPad3d.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LPPool3d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.attention.SDPBackend.rst", "generated/torch.nn.attention.bias.CausalBias.rst", "generated/torch.nn.attention.bias.CausalVariant.rst", "generated/torch.nn.attention.bias.causal_lower_right.rst", "generated/torch.nn.attention.bias.causal_upper_left.rst", "generated/torch.nn.attention.sdpa_kernel.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.lp_pool3d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.convert_conv2d_weight_memory_format.rst", "generated/torch.nn.utils.convert_conv3d_weight_memory_format.rst", "generated/torch.nn.utils.fuse_conv_bn_eval.rst", "generated/torch.nn.utils.fuse_conv_bn_weights.rst", "generated/torch.nn.utils.fuse_linear_bn_eval.rst", "generated/torch.nn.utils.fuse_linear_bn_weights.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrizations.weight_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.as_sparse_gradcheck.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_ite.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unravel_index.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.utils.swap_tensors.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.xpu.Stream.rst", "generated/torch.xpu.StreamContext.rst", "generated/torch.xpu.current_device.rst", "generated/torch.xpu.current_stream.rst", "generated/torch.xpu.device.rst", "generated/torch.xpu.device_count.rst", "generated/torch.xpu.device_of.rst", "generated/torch.xpu.get_device_capability.rst", "generated/torch.xpu.get_device_name.rst", "generated/torch.xpu.get_device_properties.rst", "generated/torch.xpu.init.rst", "generated/torch.xpu.is_available.rst", "generated/torch.xpu.is_initialized.rst", "generated/torch.xpu.set_device.rst", "generated/torch.xpu.set_stream.rst", "generated/torch.xpu.stream.rst", "generated/torch.xpu.synchronize.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "meta.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.attention.rst", "nn.attention.bias.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/fsdp.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_dynamo.rst", "onnx_dynamo_onnxruntime_backend.rst", "onnx_torchscript.rst", "onnx_torchscript_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.compiler.rst", "torch.compiler_aot_inductor.rst", "torch.compiler_api.rst", "torch.compiler_best_practices_for_backends.rst", "torch.compiler_cudagraph_trees.rst", "torch.compiler_custom_backends.rst", "torch.compiler_deepdive.rst", "torch.compiler_dynamic_shapes.rst", "torch.compiler_fake_tensor.rst", "torch.compiler_faq.rst", "torch.compiler_fine_grain_apis.rst", "torch.compiler_get_started.rst", "torch.compiler_guards_overview.rst", "torch.compiler_inductor_profiling.rst", "torch.compiler_ir.rst", "torch.compiler_nn_module.rst", "torch.compiler_performance_dashboard.rst", "torch.compiler_profiling_torch_compile.rst", "torch.compiler_transformations.rst", "torch.compiler_troubleshooting.rst", "torch.overrides.rst", "torch_cuda_memory.rst", "type_info.rst", "utils.rst", "xpu.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Complex Numbers", "Control Flow - Cond", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "torch.utils.deterministic", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.export", "torch.export IR Specification", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.__future__", "torch.futures", "torch.fx", "torch.fx.experimental", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "python.object-model", "torch.cond", "torch.dynamic-shape", "torch.dynamic-value", "torch.escape-hatch", "torch.map", "torch.mutation", "torch.operator", "FXE0007:fx-graph-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dim_order", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.module_load", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.register_post_accumulate_grad_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "UnpackedDualTensor", "dual_level", "torch.autograd.forward_ad.enter_dual_level", "torch.autograd.forward_ad.exit_dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "BackwardCFunction", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "InplaceFunction", "NestedIOFunction", "torch.autograd.function.once_differentiable", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "inference_mode", "set_grad_enabled", "set_multithreading_enabled", "torch.autograd.gradcheck.GradcheckError", "torch.autograd.gradcheck.gradcheck", "torch.autograd.gradcheck.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.graph.increment_version", "EnforceUnique", "KinetoStepTracker", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.parse_nvprof_trace", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "record_function", "Interval", "Kernel", "MemRecordsAcc", "StringTable", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.cudagraph_mark_step_begin", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.cond", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_device", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.set_device", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_file", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "DimConstraints", "DimDynamic", "EqualityConstraint", "RelaxedUnspecConstraint", "ShapeEnv", "StatefulSymbolicContext", "StatelessSymbolicContext", "StrictMinMaxConstraint", "SubclassSymbolicContext", "SymbolicContext", "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr", "torch.fx.experimental.symbolic_shapes.constrain_range", "torch.fx.experimental.symbolic_shapes.constrain_unify", "torch.fx.experimental.symbolic_shapes.definitely_false", "torch.fx.experimental.symbolic_shapes.definitely_true", "torch.fx.experimental.symbolic_shapes.guard_size_oblivious", "torch.fx.experimental.symbolic_shapes.has_free_symbols", "torch.fx.experimental.symbolic_shapes.hint_int", "torch.fx.experimental.symbolic_shapes.is_concrete_bool", "torch.fx.experimental.symbolic_shapes.is_concrete_int", "torch.fx.experimental.symbolic_shapes.parallel_and", "torch.fx.experimental.symbolic_shapes.parallel_or", "torch.fx.experimental.symbolic_shapes.statically_known_true", "torch.fx.experimental.symbolic_shapes.sym_eq", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_device", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.interface", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "Event", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "CircularPad1d", "CircularPad2d", "CircularPad3d", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LPPool3d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "SDPBackend", "torch.nn.attention.bias.CausalBias", "CausalVariant", "torch.nn.attention.bias.causal_lower_right", "torch.nn.attention.bias.causal_upper_left", "torch.nn.attention.sdpa_kernel", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.lp_pool3d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.convert_conv2d_weight_memory_format", "torch.nn.utils.convert_conv3d_weight_memory_format", "torch.nn.utils.fuse_conv_bn_eval", "torch.nn.utils.fuse_conv_bn_weights", "torch.nn.utils.fuse_linear_bn_eval", "torch.nn.utils.fuse_linear_bn_weights", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "torch.nn.utils.parametrizations.weight_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "torch.sparse.as_sparse_gradcheck", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_ite", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unravel_index", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.utils.swap_tensors", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "Stream", "StreamContext", "torch.xpu.current_device", "torch.xpu.current_stream", "device", "torch.xpu.device_count", "device_of", "torch.xpu.get_device_capability", "torch.xpu.get_device_name", "torch.xpu.get_device_properties", "torch.xpu.init", "torch.xpu.is_available", "torch.xpu.is_initialized", "torch.xpu.set_device", "torch.xpu.set_stream", "torch.xpu.stream", "torch.xpu.synchronize", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "Meta device", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.attention", "torch.nn.attention.bias", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "FSDP Notes", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "TorchDynamo-based ONNX Exporter", "ONNX Backend for TorchDynamo", "TorchScript-based ONNX Exporter", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "AOTInductor: Ahead-Of-Time Compilation for Torch.Export-ed Models", "torch.compiler API reference", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deep Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs for fine-grained tracing", "Getting Started", "Guards Overview", "TorchInductor GPU Profiling", "IRs", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.overrides", "Understanding CUDA Memory Usage", "Type Info", "torch.utils", "torch.xpu"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 14, 15, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 40, 42, 43, 44, 45, 46, 47, 49, 53, 57, 58, 59, 60, 70, 71, 146, 482, 599, 676, 685, 731, 734, 735, 736, 741, 742, 744, 752, 753, 756, 760, 784, 785, 795, 796, 810, 820, 837, 854, 889, 905, 907, 908, 909, 924, 935, 947, 952, 955, 974, 988, 1009, 1055, 1098, 1118, 1155, 1167, 1179, 1204, 1212, 1213, 1247, 1250, 1257, 1258, 1262, 1264, 1266, 1281, 1298, 1323, 1355, 1418, 1419, 1420, 1423, 1439, 1440, 1448, 1453, 1458, 1459, 1484, 1485, 1486, 1488, 1494, 1495, 1498, 1503, 1505, 1516, 1531, 1532, 1533, 1534, 1535, 1565, 1566, 1644, 1663, 1675, 1682, 1683, 1697, 1717, 1725, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1767, 1770, 1775, 1811, 1821, 1868, 1869, 1870, 1871, 1872, 1873, 1882, 1912, 1914, 1924, 1935, 1959, 1961, 1963, 1964, 1968, 1970, 1971, 1973, 1975, 1977, 1978, 1979, 1990, 1991, 1992, 1993, 1996, 1999, 2000, 2002, 2007, 2009, 2011, 2012, 2013, 2015, 2016, 2018, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2036, 2038, 2039, 2040, 2041, 2042, 2044, 2046, 2047, 2048, 2052, 2053, 2054, 2056, 2057], "conveni": [0, 3, 7, 14, 25, 39, 42, 43, 49, 55, 1167, 1172, 1308, 1666, 1829, 1924, 1926, 1935, 1959, 1963, 1972, 1986, 1987, 1990, 1992, 1998, 1999, 2012, 2019, 2039, 2041, 2042, 2047, 2048], "method": [0, 3, 7, 9, 14, 15, 18, 21, 25, 26, 27, 29, 31, 32, 33, 34, 40, 42, 46, 49, 56, 57, 58, 60, 62, 68, 69, 76, 217, 218, 319, 411, 482, 483, 484, 493, 494, 495, 516, 610, 789, 793, 795, 811, 812, 813, 834, 837, 850, 870, 871, 872, 888, 889, 896, 897, 898, 899, 900, 901, 902, 920, 921, 935, 1035, 1149, 1204, 1248, 1250, 1251, 1253, 1254, 1255, 1261, 1262, 1266, 1267, 1268, 1296, 1314, 1315, 1322, 1323, 1381, 1384, 1392, 1400, 1402, 1403, 1429, 1430, 1445, 1488, 1489, 1490, 1494, 1498, 1499, 1504, 1506, 1516, 1593, 1666, 1675, 1679, 1690, 1692, 1695, 1697, 1699, 1702, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1719, 1724, 1740, 1741, 1742, 1744, 1754, 1786, 1867, 1882, 1886, 1924, 1959, 1960, 1961, 1964, 1965, 1968, 1972, 1973, 1975, 1977, 1978, 1979, 1985, 1986, 1987, 1990, 1992, 1993, 1994, 1996, 1999, 2001, 2004, 2007, 2011, 2012, 2015, 2017, 2020, 2022, 2026, 2027, 2029, 2030, 2032, 2035, 2040, 2041, 2044, 2047, 2052, 2054, 2055], "where": [0, 1, 2, 3, 4, 7, 8, 9, 11, 14, 15, 21, 22, 25, 29, 30, 31, 33, 35, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 58, 82, 149, 219, 250, 396, 398, 482, 676, 689, 691, 692, 695, 731, 754, 756, 777, 816, 817, 829, 873, 891, 895, 904, 906, 927, 937, 946, 952, 959, 960, 961, 968, 984, 988, 1002, 1004, 1013, 1015, 1077, 1078, 1081, 1085, 1103, 1114, 1115, 1117, 1120, 1121, 1123, 1124, 1126, 1127, 1128, 1130, 1131, 1133, 1135, 1160, 1161, 1162, 1166, 1167, 1171, 1194, 1207, 1208, 1209, 1210, 1239, 1240, 1242, 1243, 1246, 1247, 1248, 1251, 1264, 1270, 1271, 1272, 1275, 1280, 1281, 1282, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1322, 1323, 1328, 1331, 1338, 1339, 1340, 1341, 1345, 1348, 1350, 1351, 1352, 1353, 1356, 1374, 1379, 1380, 1382, 1385, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1564, 1566, 1576, 1577, 1584, 1589, 1591, 1592, 1610, 1611, 1629, 1631, 1632, 1635, 1636, 1638, 1644, 1647, 1675, 1677, 1678, 1682, 1683, 1689, 1717, 1718, 1719, 1720, 1729, 1736, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1759, 1760, 1761, 1773, 1783, 1785, 1786, 1806, 1807, 1842, 1848, 1849, 1854, 1858, 1863, 1864, 1865, 1868, 1869, 1870, 1871, 1872, 1873, 1880, 1881, 1882, 1885, 1886, 1901, 1910, 1911, 1912, 1913, 1914, 1919, 1920, 1930, 1931, 1932, 1933, 1934, 1935, 1940, 1961, 1962, 1964, 1965, 1970, 1971, 1972, 1974, 1977, 1980, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1995, 1996, 1999, 2001, 2002, 2003, 2004, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2018, 2020, 2022, 2024, 2025, 2027, 2029, 2034, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2049, 2052, 2054, 2055, 2056], "some": [0, 1, 3, 7, 8, 9, 14, 20, 21, 22, 25, 27, 30, 31, 33, 35, 43, 44, 46, 47, 49, 52, 54, 55, 57, 58, 81, 83, 473, 482, 492, 563, 685, 744, 911, 931, 968, 999, 1033, 1051, 1055, 1058, 1098, 1119, 1121, 1129, 1130, 1131, 1146, 1156, 1167, 1172, 1181, 1182, 1247, 1248, 1250, 1251, 1261, 1264, 1266, 1296, 1314, 1320, 1345, 1352, 1355, 1392, 1396, 1400, 1401, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1447, 1450, 1451, 1452, 1453, 1454, 1458, 1479, 1480, 1488, 1491, 1492, 1493, 1495, 1502, 1503, 1504, 1519, 1520, 1536, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1578, 1605, 1610, 1629, 1632, 1637, 1644, 1666, 1675, 1676, 1677, 1678, 1689, 1723, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1761, 1767, 1785, 1805, 1829, 1835, 1849, 1886, 1926, 1935, 1959, 1961, 1962, 1963, 1964, 1965, 1968, 1969, 1970, 1971, 1972, 1973, 1977, 1978, 1979, 1986, 1987, 1990, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2009, 2011, 2012, 2014, 2015, 2016, 2018, 2020, 2021, 2022, 2024, 2029, 2035, 2041, 2042, 2043, 2045, 2046, 2047, 2050, 2051, 2052, 2053, 2054], "oper": [0, 2, 4, 5, 7, 8, 11, 12, 15, 18, 21, 24, 27, 30, 31, 32, 39, 40, 42, 43, 47, 50, 55, 57, 58, 59, 60, 75, 76, 78, 79, 80, 81, 82, 250, 309, 317, 331, 348, 398, 441, 442, 443, 444, 445, 482, 484, 489, 492, 495, 509, 511, 513, 585, 676, 682, 685, 737, 738, 739, 743, 744, 753, 754, 764, 765, 775, 781, 788, 789, 791, 792, 795, 819, 822, 855, 857, 858, 861, 885, 887, 896, 897, 899, 901, 902, 911, 922, 936, 937, 939, 941, 944, 946, 948, 950, 955, 958, 965, 968, 976, 980, 982, 1002, 1004, 1032, 1041, 1072, 1077, 1078, 1079, 1080, 1093, 1098, 1099, 1100, 1101, 1111, 1116, 1134, 1146, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1167, 1168, 1199, 1202, 1208, 1209, 1250, 1261, 1262, 1266, 1267, 1270, 1280, 1293, 1303, 1306, 1307, 1320, 1321, 1330, 1337, 1345, 1350, 1355, 1365, 1366, 1379, 1382, 1396, 1401, 1406, 1407, 1408, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1454, 1460, 1474, 1479, 1484, 1485, 1486, 1488, 1501, 1506, 1507, 1508, 1515, 1530, 1531, 1533, 1535, 1539, 1561, 1562, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1578, 1579, 1580, 1581, 1585, 1586, 1588, 1589, 1593, 1597, 1604, 1610, 1612, 1619, 1620, 1630, 1632, 1636, 1644, 1650, 1651, 1662, 1663, 1664, 1665, 1675, 1677, 1678, 1719, 1725, 1730, 1734, 1735, 1753, 1759, 1769, 1773, 1782, 1783, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1805, 1811, 1828, 1829, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1860, 1862, 1863, 1864, 1865, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1885, 1901, 1919, 1923, 1924, 1926, 1935, 1938, 1957, 1958, 1960, 1961, 1965, 1968, 1972, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1999, 2000, 2001, 2002, 2003, 2006, 2007, 2011, 2014, 2016, 2018, 2019, 2020, 2021, 2025, 2027, 2028, 2031, 2039, 2041, 2042, 2044, 2045, 2046, 2047, 2048, 2049, 2053, 2054], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 68, 69, 70, 71, 78, 79, 80, 82, 84, 93, 115, 146, 150, 169, 187, 204, 315, 317, 331, 338, 339, 402, 411, 431, 444, 454, 482, 483, 484, 492, 495, 509, 513, 516, 540, 553, 579, 580, 581, 583, 584, 613, 676, 682, 685, 708, 709, 710, 711, 712, 713, 716, 725, 726, 727, 728, 729, 731, 744, 753, 756, 764, 765, 768, 769, 770, 775, 777, 781, 782, 783, 786, 789, 790, 791, 792, 795, 798, 803, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 827, 828, 829, 830, 833, 850, 854, 855, 857, 858, 861, 874, 875, 876, 885, 886, 887, 889, 891, 892, 893, 894, 895, 896, 898, 899, 901, 902, 904, 905, 906, 907, 910, 911, 912, 913, 915, 916, 920, 921, 924, 928, 931, 936, 937, 938, 946, 948, 949, 956, 958, 968, 971, 976, 980, 981, 984, 986, 999, 1001, 1002, 1004, 1006, 1007, 1009, 1012, 1022, 1023, 1026, 1027, 1033, 1037, 1041, 1043, 1044, 1045, 1047, 1049, 1050, 1055, 1056, 1065, 1067, 1068, 1074, 1079, 1080, 1081, 1090, 1098, 1099, 1100, 1101, 1111, 1112, 1113, 1116, 1118, 1126, 1128, 1132, 1134, 1141, 1143, 1146, 1150, 1153, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1171, 1172, 1177, 1179, 1182, 1183, 1185, 1191, 1195, 1196, 1201, 1202, 1204, 1208, 1209, 1210, 1211, 1225, 1237, 1247, 1248, 1250, 1251, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1270, 1272, 1274, 1282, 1286, 1287, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1297, 1298, 1303, 1304, 1305, 1307, 1308, 1314, 1315, 1316, 1320, 1321, 1322, 1323, 1328, 1331, 1337, 1340, 1341, 1344, 1345, 1350, 1351, 1352, 1355, 1361, 1362, 1374, 1379, 1381, 1382, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1447, 1448, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1474, 1475, 1476, 1481, 1482, 1483, 1484, 1485, 1488, 1490, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1521, 1524, 1527, 1535, 1536, 1537, 1538, 1540, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1558, 1560, 1561, 1562, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1593, 1595, 1602, 1604, 1605, 1612, 1618, 1619, 1620, 1630, 1632, 1638, 1644, 1648, 1650, 1651, 1659, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1680, 1681, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1717, 1718, 1719, 1723, 1724, 1725, 1727, 1728, 1730, 1731, 1734, 1736, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1783, 1785, 1786, 1787, 1790, 1791, 1792, 1794, 1796, 1798, 1800, 1801, 1807, 1814, 1817, 1822, 1823, 1825, 1826, 1827, 1829, 1831, 1832, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1853, 1858, 1861, 1862, 1864, 1865, 1868, 1869, 1870, 1871, 1872, 1873, 1882, 1885, 1886, 1887, 1901, 1905, 1908, 1912, 1914, 1919, 1922, 1923, 1924, 1926, 1932, 1935, 1940, 1946, 1947, 1948, 1956, 1957, 1959, 1960, 1961, 1962, 1964, 1965, 1966, 1968, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1984, 1985, 1986, 1989, 1991, 1993, 1994, 1995, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2014, 2016, 2018, 2019, 2020, 2021, 2022, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2047, 2048, 2049, 2050, 2051, 2053, 2055, 2059], "float": [0, 1, 3, 11, 21, 22, 24, 25, 27, 29, 31, 33, 36, 44, 46, 47, 49, 56, 58, 149, 150, 215, 309, 311, 313, 317, 329, 396, 471, 477, 495, 509, 681, 683, 688, 690, 694, 728, 731, 734, 735, 736, 740, 741, 742, 744, 751, 752, 757, 758, 759, 760, 761, 766, 767, 768, 769, 770, 771, 773, 775, 776, 777, 781, 788, 789, 790, 795, 813, 815, 826, 834, 835, 848, 853, 854, 857, 858, 861, 876, 915, 916, 937, 938, 946, 953, 956, 960, 961, 977, 983, 984, 988, 998, 1068, 1081, 1092, 1093, 1099, 1100, 1101, 1103, 1116, 1134, 1143, 1144, 1145, 1146, 1148, 1172, 1194, 1198, 1207, 1208, 1209, 1212, 1213, 1232, 1239, 1240, 1242, 1243, 1244, 1245, 1248, 1250, 1266, 1267, 1270, 1274, 1276, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1328, 1337, 1339, 1341, 1369, 1373, 1374, 1378, 1380, 1381, 1382, 1385, 1388, 1392, 1396, 1402, 1403, 1404, 1406, 1409, 1410, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1436, 1441, 1442, 1443, 1446, 1447, 1448, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1474, 1476, 1480, 1488, 1493, 1494, 1496, 1497, 1502, 1506, 1509, 1510, 1511, 1512, 1513, 1519, 1525, 1527, 1530, 1531, 1533, 1535, 1536, 1537, 1540, 1541, 1542, 1575, 1576, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1590, 1595, 1604, 1630, 1632, 1637, 1644, 1663, 1675, 1680, 1681, 1685, 1687, 1690, 1700, 1701, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1719, 1720, 1724, 1730, 1731, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1767, 1768, 1769, 1771, 1773, 1779, 1782, 1786, 1787, 1788, 1789, 1801, 1805, 1806, 1826, 1827, 1830, 1833, 1842, 1843, 1845, 1846, 1848, 1883, 1886, 1890, 1908, 1910, 1923, 1961, 1962, 1963, 1964, 1965, 1971, 1975, 1977, 1978, 1980, 1981, 1985, 1986, 1990, 1992, 1994, 1999, 2002, 2007, 2009, 2010, 2012, 2014, 2015, 2016, 2020, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2042, 2044, 2046, 2049, 2053, 2057], "datatyp": [0, 58, 876, 1247, 1250, 1488, 1677, 1678, 1829, 2002, 2009, 2024], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 21, 22, 26, 27, 29, 31, 32, 33, 35, 39, 40, 42, 43, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 93, 94, 109, 125, 126, 129, 141, 142, 145, 146, 155, 156, 161, 162, 192, 193, 194, 203, 230, 235, 239, 240, 241, 251, 270, 271, 278, 279, 280, 281, 287, 288, 289, 290, 291, 292, 299, 300, 303, 304, 305, 306, 309, 311, 317, 320, 340, 348, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 374, 375, 390, 391, 404, 408, 411, 434, 435, 446, 447, 451, 452, 483, 484, 494, 516, 557, 558, 559, 560, 576, 579, 612, 613, 614, 617, 618, 676, 681, 690, 734, 735, 736, 737, 738, 739, 756, 810, 822, 857, 861, 867, 874, 875, 880, 886, 889, 891, 892, 893, 901, 910, 911, 912, 913, 915, 916, 920, 921, 940, 941, 943, 944, 945, 947, 952, 968, 983, 998, 999, 1002, 1004, 1006, 1013, 1023, 1033, 1044, 1086, 1092, 1093, 1094, 1095, 1102, 1103, 1104, 1118, 1125, 1143, 1144, 1145, 1146, 1149, 1156, 1157, 1158, 1159, 1162, 1166, 1171, 1172, 1173, 1192, 1193, 1194, 1205, 1206, 1207, 1216, 1217, 1219, 1220, 1225, 1227, 1239, 1248, 1250, 1254, 1262, 1271, 1273, 1274, 1275, 1277, 1278, 1283, 1287, 1301, 1303, 1306, 1307, 1320, 1328, 1329, 1330, 1332, 1334, 1335, 1338, 1339, 1345, 1348, 1349, 1353, 1354, 1358, 1361, 1373, 1375, 1385, 1388, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1424, 1434, 1439, 1441, 1453, 1488, 1489, 1498, 1516, 1531, 1535, 1539, 1548, 1568, 1569, 1570, 1595, 1604, 1644, 1663, 1666, 1675, 1680, 1681, 1682, 1683, 1706, 1728, 1732, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1764, 1765, 1771, 1773, 1801, 1805, 1821, 1826, 1829, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1883, 1884, 1901, 1907, 1911, 1913, 1919, 1932, 1933, 1938, 1939, 1940, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1973, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001, 2002, 2004, 2007, 2009, 2011, 2015, 2016, 2020, 2021, 2022, 2025, 2026, 2029, 2030, 2031, 2036, 2039, 2041, 2042, 2044, 2045, 2047, 2049, 2052, 2053, 2054, 2055], "lower": [0, 1, 8, 12, 22, 25, 31, 46, 47, 60, 68, 69, 70, 71, 789, 791, 855, 947, 952, 959, 960, 961, 963, 1112, 1113, 1168, 1175, 1211, 1212, 1280, 1287, 1289, 1297, 1298, 1305, 1308, 1313, 1351, 1374, 1381, 1392, 1506, 1547, 1548, 1549, 1568, 1569, 1570, 1642, 1643, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1761, 1767, 1769, 1784, 1786, 1806, 1821, 1829, 1866, 1910, 1911, 1912, 1961, 1962, 1964, 1972, 1981, 1985, 1987, 1999, 2004, 2010, 2015, 2025, 2031, 2049, 2054], "point": [0, 1, 7, 8, 9, 11, 21, 22, 24, 26, 29, 33, 39, 42, 43, 47, 49, 58, 84, 149, 150, 317, 329, 335, 477, 482, 495, 694, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 755, 757, 758, 759, 760, 761, 771, 773, 775, 776, 777, 781, 791, 795, 815, 816, 817, 818, 821, 826, 848, 857, 858, 861, 876, 905, 907, 908, 909, 915, 916, 937, 938, 946, 968, 983, 984, 988, 1047, 1049, 1058, 1062, 1063, 1099, 1100, 1101, 1144, 1145, 1146, 1198, 1204, 1208, 1209, 1213, 1232, 1247, 1250, 1266, 1267, 1274, 1276, 1297, 1298, 1321, 1323, 1328, 1337, 1381, 1388, 1397, 1398, 1399, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1434, 1481, 1482, 1483, 1488, 1539, 1540, 1558, 1584, 1593, 1604, 1644, 1663, 1675, 1682, 1683, 1730, 1739, 1770, 1786, 1787, 1788, 1792, 1801, 1814, 1826, 1827, 1833, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1923, 1924, 1960, 1961, 1963, 1964, 1965, 1968, 1975, 1981, 1985, 1986, 1987, 1990, 1991, 1995, 1996, 1999, 2002, 2013, 2014, 2015, 2016, 2018, 2020, 2021, 2024, 2027, 2029, 2030, 2031, 2033, 2040, 2041, 2044, 2046, 2047, 2050, 2053, 2056, 2057], "lower_precision_fp": 0, "half": [0, 1, 10, 22, 31, 613, 977, 1112, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1250, 1313, 1319, 1415, 1416, 1417, 1418, 1419, 1420, 1435, 1436, 1438, 1488, 1588, 1589, 1592, 1682, 1683, 1736, 1761, 1814, 1882, 1978, 1999, 2002, 2007, 2024, 2026, 2027, 2030], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 25, 27, 30, 31, 40, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 62, 332, 482, 585, 613, 756, 789, 837, 856, 874, 896, 899, 901, 915, 916, 935, 937, 946, 970, 976, 980, 1041, 1042, 1051, 1093, 1098, 1099, 1119, 1141, 1144, 1145, 1152, 1156, 1159, 1160, 1161, 1167, 1173, 1179, 1182, 1191, 1208, 1209, 1248, 1250, 1251, 1258, 1261, 1266, 1270, 1297, 1298, 1309, 1322, 1392, 1400, 1431, 1434, 1450, 1451, 1452, 1488, 1489, 1490, 1498, 1499, 1516, 1539, 1546, 1587, 1605, 1662, 1666, 1675, 1676, 1677, 1678, 1690, 1716, 1734, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1779, 1794, 1798, 1817, 1825, 1826, 1829, 1886, 1898, 1924, 1935, 1957, 1959, 1960, 1961, 1963, 1964, 1968, 1971, 1972, 1977, 1978, 1979, 1986, 1987, 1990, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2013, 2014, 2015, 2018, 2020, 2021, 2024, 2026, 2027, 2031, 2032, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2051, 2052, 2053, 2054, 2055, 2056], "linear": [0, 2, 9, 22, 25, 26, 29, 30, 31, 46, 47, 49, 51, 53, 55, 58, 60, 427, 468, 469, 470, 471, 472, 475, 707, 716, 724, 725, 761, 788, 789, 790, 792, 810, 850, 854, 855, 857, 858, 906, 961, 1004, 1098, 1155, 1157, 1165, 1167, 1204, 1250, 1254, 1262, 1276, 1282, 1287, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1311, 1313, 1341, 1381, 1400, 1406, 1429, 1437, 1438, 1446, 1473, 1488, 1490, 1503, 1505, 1506, 1507, 1515, 1517, 1524, 1527, 1531, 1533, 1535, 1538, 1540, 1582, 1591, 1592, 1604, 1639, 1647, 1652, 1663, 1666, 1675, 1686, 1687, 1689, 1690, 1691, 1695, 1705, 1706, 1707, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1723, 1724, 1727, 1764, 1767, 1775, 1786, 1923, 1935, 1940, 1960, 1962, 1963, 1969, 1972, 1973, 1980, 1985, 1990, 1991, 1992, 1994, 1995, 1999, 2004, 2007, 2009, 2010, 2011, 2013, 2015, 2016, 2017, 2018, 2020, 2036, 2052, 2054], "layer": [0, 8, 22, 25, 27, 29, 30, 49, 52, 730, 731, 756, 837, 854, 924, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1426, 1427, 1428, 1432, 1439, 1440, 1442, 1450, 1451, 1452, 1458, 1459, 1460, 1473, 1475, 1481, 1482, 1483, 1494, 1495, 1503, 1505, 1516, 1527, 1531, 1532, 1533, 1534, 1535, 1607, 1675, 1682, 1683, 1689, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1960, 1985, 1990, 1992, 1994, 1995, 1998, 1999, 2004, 2007, 2009, 2011, 2013, 2015, 2016, 2018, 2024, 2034], "convolut": [0, 1, 2, 46, 734, 735, 736, 737, 738, 739, 768, 769, 770, 968, 1260, 1415, 1416, 1417, 1418, 1419, 1420, 1426, 1427, 1428, 1432, 1464, 1465, 1466, 1467, 1468, 1469, 1500, 1501, 1506, 1536, 1537, 1539, 1568, 1569, 1570, 1571, 1572, 1573, 1592, 1593, 1682, 1683, 1684, 1685, 1829, 1960, 1962, 1973, 1985, 1989, 1990, 1996, 1999, 2010, 2014, 2015, 2018, 2049], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 39, 40, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 69, 77, 80, 81, 82, 83, 84, 93, 146, 229, 250, 315, 317, 331, 332, 335, 373, 398, 444, 467, 477, 482, 495, 509, 513, 540, 576, 585, 613, 676, 685, 686, 687, 693, 731, 752, 756, 757, 759, 760, 761, 775, 778, 779, 781, 782, 783, 788, 789, 790, 791, 792, 795, 810, 811, 812, 813, 815, 816, 817, 818, 821, 836, 850, 854, 855, 856, 857, 858, 861, 870, 871, 882, 883, 884, 886, 889, 896, 899, 901, 902, 904, 905, 906, 907, 908, 909, 911, 915, 916, 922, 924, 935, 937, 946, 947, 949, 950, 952, 955, 968, 977, 980, 983, 984, 987, 988, 1001, 1002, 1004, 1005, 1007, 1012, 1024, 1035, 1041, 1044, 1045, 1055, 1065, 1072, 1081, 1086, 1090, 1093, 1098, 1099, 1100, 1101, 1114, 1115, 1116, 1117, 1119, 1121, 1126, 1128, 1134, 1137, 1139, 1140, 1144, 1145, 1146, 1150, 1155, 1156, 1161, 1163, 1165, 1166, 1167, 1168, 1170, 1171, 1172, 1175, 1177, 1179, 1182, 1195, 1204, 1208, 1209, 1211, 1213, 1227, 1239, 1240, 1242, 1243, 1246, 1247, 1248, 1250, 1251, 1254, 1257, 1258, 1261, 1264, 1266, 1267, 1272, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1303, 1305, 1306, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1315, 1317, 1320, 1321, 1322, 1323, 1332, 1333, 1334, 1335, 1337, 1338, 1340, 1342, 1343, 1345, 1348, 1351, 1352, 1353, 1356, 1358, 1362, 1374, 1378, 1379, 1380, 1381, 1382, 1392, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1409, 1410, 1411, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1434, 1439, 1440, 1441, 1442, 1447, 1450, 1451, 1452, 1453, 1454, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1502, 1503, 1505, 1516, 1519, 1520, 1521, 1527, 1531, 1533, 1535, 1536, 1537, 1539, 1540, 1548, 1549, 1550, 1558, 1564, 1565, 1566, 1576, 1577, 1584, 1585, 1586, 1587, 1593, 1604, 1605, 1629, 1632, 1634, 1637, 1644, 1662, 1663, 1664, 1665, 1666, 1675, 1676, 1677, 1678, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1693, 1695, 1702, 1716, 1720, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1763, 1766, 1767, 1779, 1785, 1786, 1792, 1801, 1804, 1805, 1812, 1814, 1825, 1826, 1829, 1858, 1859, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1878, 1881, 1882, 1885, 1886, 1896, 1898, 1902, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1919, 1923, 1924, 1926, 1929, 1930, 1931, 1935, 1940, 1941, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1970, 1971, 1972, 1973, 1975, 1977, 1978, 1979, 1980, 1981, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2014, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2035, 2036, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057], "much": [0, 4, 7, 9, 15, 21, 22, 46, 146, 889, 905, 910, 1055, 1171, 1286, 1287, 1314, 1323, 1431, 1675, 1706, 1767, 1961, 1987, 1990, 1995, 1996, 1999, 2004, 2012, 2013, 2020, 2021, 2024, 2042, 2044, 2047], "faster": [0, 2, 8, 11, 21, 22, 25, 905, 915, 916, 1155, 1184, 1280, 1281, 1286, 1287, 1291, 1296, 1304, 1306, 1308, 1311, 1314, 1316, 1320, 1323, 1504, 1521, 1634, 1644, 1650, 1675, 1680, 1681, 1689, 1742, 1743, 1754, 1755, 1829, 1868, 1869, 1870, 1872, 1873, 1972, 1973, 1987, 1990, 1996, 2011, 2015, 2024, 2029, 2035, 2041, 2044, 2050], "reduct": [0, 2, 25, 49, 317, 509, 513, 968, 1296, 1328, 1381, 1400, 1401, 1407, 1421, 1423, 1431, 1441, 1447, 1448, 1453, 1454, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1536, 1537, 1565, 1566, 1574, 1576, 1577, 1585, 1590, 1601, 1602, 1605, 1606, 1617, 1625, 1626, 1627, 1628, 1629, 1637, 1648, 1649, 1660, 1661, 1675, 1786, 1863, 1962, 1978, 1991, 1996, 2012, 2015, 2048, 2054], "often": [0, 2, 4, 7, 8, 14, 21, 25, 31, 43, 49, 52, 58, 146, 889, 910, 1175, 1182, 1266, 1297, 1298, 1307, 1356, 1430, 1450, 1451, 1452, 1558, 1566, 1584, 1593, 1666, 1689, 1769, 1964, 1972, 1987, 1990, 1994, 1998, 1999, 2001, 2002, 2003, 2007, 2012, 2020, 2029, 2043, 2044, 2052, 2054], "requir": [0, 1, 5, 8, 9, 14, 15, 21, 22, 25, 26, 27, 29, 30, 31, 33, 41, 42, 46, 47, 49, 52, 54, 57, 58, 115, 146, 217, 331, 454, 482, 484, 492, 509, 511, 513, 556, 789, 791, 819, 822, 876, 885, 889, 896, 898, 901, 902, 904, 905, 906, 907, 908, 909, 910, 968, 999, 1054, 1098, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1139, 1140, 1163, 1167, 1192, 1247, 1264, 1290, 1321, 1323, 1337, 1423, 1430, 1431, 1531, 1532, 1533, 1534, 1535, 1537, 1585, 1644, 1666, 1675, 1676, 1693, 1695, 1697, 1745, 1773, 1870, 1882, 1923, 1935, 1959, 1961, 1964, 1966, 1968, 1971, 1973, 1977, 1979, 1980, 1986, 1987, 1989, 1990, 1991, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2003, 2004, 2007, 2008, 2009, 2012, 2013, 2015, 2016, 2020, 2021, 2022, 2024, 2029, 2031, 2034, 2035, 2036, 2039, 2040, 2041, 2043, 2044, 2050, 2052, 2055], "dynam": [0, 12, 14, 15, 21, 47, 59, 60, 61, 62, 65, 66, 68, 71, 72, 676, 725, 729, 756, 757, 758, 759, 760, 761, 790, 795, 811, 820, 822, 825, 840, 846, 847, 848, 849, 854, 855, 968, 1168, 1169, 1170, 1171, 1177, 1258, 1264, 1266, 1322, 1689, 1963, 1964, 1965, 1985, 1990, 1999, 2002, 2006, 2007, 2009, 2011, 2012, 2016, 2035, 2036, 2041, 2044, 2051, 2054], "rang": [0, 1, 3, 21, 25, 26, 29, 31, 42, 43, 45, 46, 47, 53, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 84, 297, 477, 680, 757, 759, 761, 791, 815, 816, 817, 818, 819, 821, 822, 823, 881, 938, 963, 973, 1059, 1060, 1068, 1098, 1148, 1165, 1175, 1179, 1211, 1212, 1213, 1317, 1328, 1343, 1352, 1369, 1381, 1392, 1423, 1433, 1435, 1436, 1440, 1446, 1459, 1478, 1490, 1495, 1499, 1503, 1505, 1521, 1522, 1523, 1527, 1588, 1589, 1593, 1650, 1675, 1681, 1757, 1758, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1786, 1865, 1921, 1922, 1961, 1962, 1964, 1987, 1989, 1990, 1994, 1999, 2001, 2002, 2009, 2010, 2011, 2014, 2015, 2018, 2019, 2025, 2027, 2029, 2030, 2031, 2032, 2040, 2041, 2042, 2047, 2052, 2054], "tri": [0, 2, 3, 7, 21, 31, 35, 58, 83, 576, 1250, 1488, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1963, 1964, 1990, 1994, 2009, 2012, 2043, 2044, 2046], "match": [0, 1, 3, 12, 25, 27, 29, 31, 42, 46, 49, 58, 60, 68, 69, 80, 146, 309, 311, 317, 469, 470, 495, 496, 576, 579, 689, 695, 775, 789, 790, 791, 850, 874, 889, 910, 915, 916, 980, 998, 1001, 1013, 1014, 1015, 1044, 1090, 1098, 1155, 1167, 1172, 1227, 1250, 1264, 1266, 1283, 1322, 1344, 1422, 1431, 1488, 1494, 1540, 1565, 1566, 1604, 1631, 1638, 1644, 1663, 1675, 1695, 1725, 1731, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1787, 1821, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1903, 1919, 1935, 1961, 1964, 1971, 1978, 1980, 1987, 1988, 1990, 1992, 1999, 2004, 2007, 2009, 2011, 2012, 2013, 2015, 2016, 2017, 2020, 2027, 2031, 2033, 2044, 2047, 2053], "each": [0, 1, 2, 5, 9, 14, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 40, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 58, 76, 77, 79, 82, 93, 115, 149, 150, 394, 398, 489, 509, 511, 513, 541, 603, 613, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 682, 689, 691, 692, 695, 731, 756, 788, 836, 837, 855, 857, 858, 861, 873, 882, 883, 884, 885, 887, 888, 889, 896, 898, 901, 902, 910, 936, 939, 948, 952, 956, 957, 959, 962, 966, 968, 970, 973, 988, 1010, 1011, 1015, 1044, 1047, 1049, 1055, 1057, 1061, 1064, 1070, 1075, 1076, 1077, 1078, 1081, 1082, 1093, 1096, 1098, 1115, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1133, 1135, 1139, 1140, 1142, 1147, 1152, 1157, 1158, 1162, 1166, 1167, 1172, 1192, 1204, 1210, 1212, 1213, 1214, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1250, 1266, 1267, 1272, 1304, 1322, 1323, 1338, 1340, 1348, 1350, 1351, 1352, 1353, 1356, 1358, 1365, 1366, 1374, 1380, 1382, 1392, 1397, 1400, 1401, 1405, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1439, 1440, 1442, 1447, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1468, 1469, 1473, 1475, 1479, 1480, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1502, 1503, 1505, 1516, 1519, 1520, 1522, 1527, 1530, 1536, 1537, 1539, 1548, 1563, 1565, 1566, 1571, 1572, 1573, 1576, 1577, 1579, 1580, 1581, 1584, 1585, 1586, 1590, 1593, 1603, 1605, 1629, 1630, 1632, 1634, 1637, 1644, 1657, 1666, 1675, 1682, 1683, 1716, 1717, 1719, 1729, 1730, 1731, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1778, 1782, 1783, 1786, 1793, 1801, 1806, 1807, 1812, 1816, 1821, 1829, 1833, 1844, 1850, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1885, 1886, 1902, 1904, 1905, 1908, 1919, 1920, 1921, 1929, 1935, 1936, 1959, 1963, 1964, 1970, 1978, 1979, 1980, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2001, 2002, 2003, 2004, 2007, 2009, 2011, 2013, 2014, 2015, 2020, 2021, 2022, 2024, 2025, 2027, 2029, 2030, 2031, 2033, 2034, 2035, 2038, 2039, 2041, 2042, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2056], "its": [0, 1, 4, 5, 7, 8, 9, 12, 14, 15, 18, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 42, 43, 44, 47, 49, 56, 57, 58, 60, 62, 77, 78, 79, 146, 254, 454, 483, 484, 500, 509, 511, 513, 579, 580, 581, 613, 676, 819, 822, 870, 871, 872, 874, 875, 876, 889, 894, 895, 912, 913, 920, 921, 960, 961, 976, 977, 984, 988, 1005, 1033, 1035, 1044, 1081, 1085, 1088, 1098, 1101, 1146, 1152, 1156, 1157, 1158, 1161, 1166, 1172, 1212, 1213, 1217, 1230, 1250, 1261, 1286, 1287, 1291, 1296, 1303, 1305, 1308, 1309, 1314, 1320, 1345, 1372, 1400, 1402, 1403, 1404, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1450, 1451, 1452, 1488, 1489, 1498, 1519, 1527, 1535, 1593, 1604, 1632, 1638, 1666, 1671, 1672, 1676, 1677, 1678, 1682, 1683, 1684, 1686, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1717, 1723, 1727, 1731, 1737, 1742, 1743, 1744, 1746, 1752, 1753, 1756, 1776, 1801, 1805, 1809, 1810, 1826, 1827, 1850, 1860, 1887, 1907, 1908, 1910, 1918, 1928, 1933, 1941, 1961, 1963, 1964, 1968, 1973, 1975, 1977, 1986, 1987, 1988, 1990, 1991, 1992, 1994, 1995, 1996, 1999, 2001, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2020, 2021, 2022, 2024, 2027, 2028, 2030, 2033, 2034, 2035, 2036, 2039, 2041, 2042, 2043, 2044, 2047, 2048, 2050, 2056], "appropri": [0, 7, 8, 9, 25, 26, 31, 49, 57, 58, 59, 482, 891, 922, 988, 1044, 1182, 1266, 1829, 1964, 1965, 1979, 1990, 1996, 2001, 2004, 2007, 2013, 2015, 2018, 2020, 2021, 2022, 2026, 2044, 2047, 2050, 2055], "ordinarili": [0, 1179, 1986], "train": [0, 1, 12, 15, 21, 22, 25, 26, 28, 29, 33, 40, 41, 42, 43, 49, 52, 53, 58, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 795, 797, 834, 835, 851, 852, 853, 855, 857, 858, 859, 911, 973, 980, 1043, 1044, 1047, 1049, 1056, 1165, 1250, 1255, 1262, 1265, 1266, 1392, 1396, 1402, 1403, 1404, 1423, 1424, 1425, 1430, 1431, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1488, 1494, 1495, 1506, 1527, 1535, 1559, 1563, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1642, 1643, 1644, 1675, 1690, 1693, 1695, 1724, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1959, 1961, 1962, 1973, 1975, 1985, 1987, 1990, 1991, 1994, 2000, 2002, 2004, 2006, 2009, 2011, 2012, 2013, 2014, 2018, 2020, 2022, 2029, 2035, 2038, 2039, 2040, 2041, 2046, 2048, 2049, 2051, 2054], "gradscal": [0, 1986, 1990], "togeth": [0, 3, 9, 21, 25, 30, 31, 50, 55, 58, 756, 1041, 1098, 1155, 1157, 1161, 1165, 1166, 1191, 1195, 1290, 1439, 1458, 1503, 1604, 1675, 1680, 1908, 1973, 1986, 1992, 1993, 1994, 1995, 1998, 1999, 2015, 2020, 2021, 2022, 2024, 2029, 2040, 2043, 2044, 2050], "shown": [0, 12, 22, 34, 43, 1041, 1051, 1460, 1695, 1737, 1767, 1833, 1961, 1964, 1986, 1990, 1992, 1994, 1999, 2007, 2013, 2015, 2024, 2036, 2040, 2041, 2045], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 14, 18, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 55, 57, 60, 62, 68, 69, 84, 187, 204, 229, 238, 250, 256, 285, 307, 309, 311, 313, 317, 331, 348, 397, 398, 411, 441, 442, 443, 444, 445, 467, 477, 479, 482, 483, 484, 489, 492, 495, 509, 511, 513, 519, 533, 540, 554, 556, 576, 577, 579, 580, 581, 582, 583, 584, 585, 603, 613, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 716, 724, 725, 730, 734, 735, 736, 737, 738, 739, 741, 742, 744, 752, 753, 754, 756, 757, 758, 759, 760, 761, 768, 769, 770, 781, 788, 789, 790, 792, 793, 806, 807, 808, 809, 810, 811, 812, 813, 820, 834, 850, 855, 856, 857, 858, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 891, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 912, 918, 920, 921, 922, 924, 931, 936, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 973, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 998, 1041, 1042, 1047, 1049, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1108, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1163, 1165, 1167, 1171, 1172, 1179, 1182, 1192, 1193, 1194, 1198, 1204, 1207, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1221, 1225, 1227, 1235, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1558, 1560, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1593, 1595, 1629, 1631, 1632, 1635, 1636, 1644, 1663, 1666, 1675, 1682, 1683, 1689, 1690, 1691, 1693, 1695, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1776, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1816, 1817, 1821, 1823, 1824, 1825, 1826, 1827, 1830, 1833, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1858, 1860, 1861, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1880, 1881, 1883, 1885, 1886, 1888, 1889, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1926, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1957, 1958, 1959, 1960, 1961, 1963, 1964, 1965, 1968, 1970, 1971, 1974, 1975, 1978, 1979, 1980, 1985, 1987, 1988, 1989, 1990, 1994, 1995, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2006, 2008, 2011, 2012, 2013, 2014, 2015, 2016, 2020, 2022, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2036, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2051, 2052, 2053, 2054, 2055], "recip": [0, 3, 29, 1488, 1675, 1697, 1986, 1999, 2043], "howev": [0, 2, 3, 4, 5, 7, 9, 14, 15, 21, 22, 25, 29, 31, 33, 39, 42, 46, 47, 49, 50, 51, 53, 54, 57, 58, 60, 65, 69, 77, 80, 81, 82, 254, 477, 541, 891, 904, 1001, 1023, 1044, 1086, 1088, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1155, 1156, 1160, 1161, 1163, 1166, 1167, 1171, 1179, 1250, 1253, 1254, 1261, 1263, 1290, 1305, 1306, 1308, 1322, 1323, 1340, 1400, 1402, 1403, 1404, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1431, 1488, 1568, 1569, 1570, 1593, 1666, 1675, 1716, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1868, 1869, 1870, 1871, 1872, 1873, 1935, 1960, 1964, 1980, 1986, 1987, 1990, 1992, 1997, 1999, 2001, 2003, 2004, 2005, 2006, 2009, 2012, 2013, 2020, 2022, 2024, 2030, 2039, 2041, 2042, 2043, 2044, 2045], "modular": [0, 1986, 2007], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 20, 21, 22, 25, 27, 29, 31, 32, 33, 35, 39, 41, 42, 46, 49, 50, 54, 57, 58, 59, 80, 192, 217, 250, 309, 317, 454, 482, 511, 513, 552, 599, 613, 676, 685, 811, 812, 813, 857, 888, 896, 899, 901, 902, 904, 906, 910, 915, 928, 939, 950, 962, 968, 981, 982, 984, 986, 999, 1001, 1002, 1010, 1023, 1033, 1034, 1035, 1041, 1042, 1044, 1055, 1057, 1061, 1075, 1076, 1098, 1137, 1141, 1146, 1149, 1152, 1159, 1160, 1162, 1171, 1172, 1176, 1179, 1181, 1182, 1183, 1190, 1213, 1247, 1250, 1253, 1254, 1260, 1261, 1263, 1264, 1266, 1272, 1281, 1282, 1286, 1287, 1288, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1306, 1308, 1309, 1312, 1313, 1314, 1320, 1322, 1323, 1328, 1345, 1355, 1369, 1392, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1453, 1458, 1484, 1485, 1486, 1488, 1495, 1503, 1533, 1535, 1540, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1585, 1593, 1595, 1604, 1610, 1632, 1644, 1662, 1663, 1664, 1665, 1666, 1675, 1689, 1692, 1693, 1695, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1761, 1785, 1805, 1808, 1826, 1829, 1835, 1853, 1866, 1882, 1886, 1910, 1923, 1959, 1960, 1961, 1963, 1964, 1968, 1970, 1971, 1972, 1973, 1975, 1979, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2002, 2003, 2004, 2005, 2007, 2009, 2011, 2012, 2014, 2015, 2016, 2018, 2020, 2022, 2024, 2026, 2032, 2036, 2039, 2042, 2043, 2044, 2047, 2048, 2052, 2054, 2055, 2056], "separ": [0, 1, 3, 9, 14, 21, 25, 29, 42, 43, 49, 50, 52, 55, 57, 58, 731, 756, 886, 901, 1098, 1115, 1117, 1123, 1124, 1127, 1128, 1133, 1135, 1155, 1168, 1261, 1296, 1311, 1442, 1450, 1451, 1452, 1494, 1496, 1612, 1731, 1798, 1959, 1962, 1964, 1970, 1986, 1987, 1989, 1990, 1993, 1995, 2004, 2007, 2011, 2012, 2021, 2024, 2025, 2029, 2039, 2054], "desir": [0, 1, 3, 21, 25, 30, 31, 49, 58, 84, 151, 166, 168, 171, 174, 175, 176, 191, 202, 205, 236, 250, 263, 293, 321, 389, 441, 442, 443, 444, 445, 493, 495, 496, 516, 521, 540, 541, 542, 556, 576, 579, 599, 600, 613, 789, 861, 875, 937, 946, 965, 1045, 1046, 1069, 1070, 1079, 1080, 1099, 1100, 1101, 1111, 1116, 1134, 1150, 1152, 1153, 1154, 1208, 1209, 1250, 1270, 1321, 1337, 1343, 1350, 1364, 1370, 1379, 1381, 1382, 1400, 1401, 1488, 1538, 1566, 1612, 1650, 1651, 1666, 1716, 1730, 1734, 1735, 1776, 1783, 1786, 1787, 1788, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1834, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1862, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1885, 1901, 1912, 1914, 1957, 1958, 1978, 1979, 1980, 1986, 1987, 1990, 1993, 1997, 1999, 2004, 2013, 2019, 2020, 2025, 2026, 2027, 2054], "As": [0, 1, 8, 22, 25, 27, 31, 46, 47, 49, 52, 53, 58, 250, 482, 950, 1098, 1254, 1282, 1286, 1287, 1297, 1298, 1309, 1314, 1392, 1426, 1427, 1428, 1432, 1453, 1488, 1519, 1662, 1682, 1683, 1729, 1735, 1958, 1961, 1963, 1964, 1971, 1980, 1987, 1990, 1992, 1994, 1995, 1999, 2002, 2004, 2005, 2006, 2007, 2009, 2012, 2013, 2019, 2020, 2021, 2022, 2024, 2035, 2038, 2040, 2044, 2045, 2046, 2047, 2054], "section": [0, 1, 7, 21, 31, 33, 34, 47, 53, 58, 82, 115, 1055, 1098, 1204, 1424, 1439, 1458, 1486, 1503, 1576, 1719, 1902, 1961, 1962, 1963, 1964, 1965, 1977, 1979, 1980, 1986, 1987, 1990, 1991, 1992, 1993, 1996, 1997, 1999, 2001, 2021, 2029, 2040, 2041, 2044, 2045, 2046, 2047, 2048, 2052, 2054], "infer": [0, 1, 2, 3, 5, 11, 12, 15, 27, 31, 42, 49, 576, 613, 857, 858, 861, 875, 876, 911, 973, 980, 1015, 1152, 1153, 1171, 1213, 1234, 1248, 1251, 1260, 1265, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1494, 1540, 1604, 1631, 1666, 1728, 1756, 1767, 1801, 1808, 1826, 1827, 1868, 1869, 1870, 1871, 1872, 1873, 1901, 1918, 1960, 1961, 1963, 1964, 1968, 1978, 1980, 1990, 1999, 2009, 2014, 2015, 2016, 2018, 2024, 2035, 2038, 2039, 2042, 2044, 2046, 2051], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 40, 42, 43, 46, 47, 49, 53, 54, 57, 58, 78, 79, 80, 115, 250, 307, 317, 319, 331, 348, 441, 442, 443, 444, 445, 454, 477, 482, 484, 509, 511, 513, 553, 579, 580, 581, 583, 584, 610, 613, 676, 691, 692, 731, 734, 735, 736, 737, 739, 768, 769, 770, 775, 781, 782, 783, 787, 789, 797, 810, 813, 816, 817, 820, 824, 838, 845, 854, 874, 891, 893, 896, 897, 898, 899, 900, 901, 902, 904, 906, 915, 922, 924, 937, 938, 946, 968, 980, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1001, 1002, 1004, 1011, 1013, 1015, 1033, 1041, 1042, 1044, 1065, 1095, 1099, 1101, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1144, 1145, 1149, 1150, 1151, 1156, 1167, 1172, 1181, 1182, 1204, 1208, 1209, 1213, 1221, 1231, 1239, 1248, 1250, 1253, 1254, 1262, 1266, 1267, 1270, 1281, 1286, 1287, 1289, 1290, 1291, 1292, 1294, 1296, 1297, 1298, 1299, 1309, 1311, 1312, 1314, 1315, 1322, 1323, 1340, 1345, 1392, 1418, 1419, 1420, 1423, 1424, 1430, 1431, 1434, 1458, 1460, 1488, 1491, 1493, 1494, 1496, 1504, 1527, 1535, 1539, 1540, 1576, 1585, 1587, 1593, 1604, 1632, 1644, 1662, 1663, 1666, 1669, 1670, 1671, 1672, 1675, 1677, 1678, 1682, 1683, 1696, 1716, 1717, 1718, 1730, 1738, 1739, 1742, 1743, 1745, 1752, 1755, 1756, 1759, 1763, 1766, 1767, 1769, 1773, 1785, 1794, 1798, 1800, 1802, 1825, 1829, 1831, 1835, 1860, 1863, 1867, 1877, 1882, 1886, 1901, 1912, 1914, 1919, 1920, 1923, 1924, 1926, 1932, 1933, 1934, 1935, 1959, 1962, 1963, 1964, 1968, 1970, 1971, 1972, 1973, 1974, 1975, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2018, 2020, 2021, 2022, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2035, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2053, 2054, 2056], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 30, 31, 33, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 75, 76, 77, 192, 250, 285, 309, 311, 317, 331, 348, 411, 467, 477, 482, 489, 495, 509, 511, 513, 579, 585, 599, 613, 682, 683, 684, 685, 686, 689, 695, 730, 734, 735, 736, 737, 738, 739, 756, 788, 789, 790, 810, 854, 855, 888, 901, 902, 915, 922, 936, 940, 942, 943, 945, 948, 957, 968, 973, 1033, 1047, 1049, 1055, 1079, 1080, 1081, 1098, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1142, 1150, 1165, 1167, 1171, 1172, 1175, 1183, 1192, 1204, 1213, 1227, 1250, 1261, 1262, 1264, 1266, 1267, 1282, 1286, 1287, 1290, 1293, 1294, 1295, 1296, 1298, 1307, 1308, 1310, 1314, 1323, 1330, 1338, 1345, 1351, 1355, 1392, 1396, 1400, 1401, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1430, 1431, 1433, 1434, 1439, 1441, 1448, 1453, 1458, 1460, 1488, 1491, 1492, 1493, 1494, 1502, 1503, 1509, 1510, 1511, 1512, 1513, 1514, 1519, 1524, 1538, 1539, 1543, 1544, 1545, 1547, 1548, 1549, 1550, 1566, 1568, 1569, 1570, 1579, 1580, 1581, 1586, 1593, 1604, 1630, 1632, 1644, 1652, 1666, 1675, 1693, 1716, 1717, 1718, 1720, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1769, 1798, 1814, 1823, 1860, 1861, 1871, 1877, 1886, 1902, 1904, 1908, 1916, 1919, 1924, 1926, 1933, 1934, 1935, 1959, 1960, 1961, 1964, 1966, 1968, 1970, 1971, 1973, 1975, 1978, 1979, 1980, 1981, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1999, 2001, 2002, 2003, 2008, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2020, 2021, 2022, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2050, 2051, 2053, 2054, 2055], "api": [0, 2, 3, 5, 8, 9, 14, 22, 25, 26, 27, 30, 33, 34, 35, 39, 40, 41, 42, 43, 49, 50, 53, 57, 59, 60, 65, 69, 70, 71, 229, 796, 820, 857, 891, 892, 893, 894, 895, 907, 912, 913, 957, 973, 999, 1033, 1034, 1035, 1041, 1042, 1044, 1071, 1102, 1142, 1156, 1159, 1160, 1162, 1167, 1179, 1261, 1262, 1264, 1369, 1675, 1725, 1727, 1728, 1736, 1814, 1825, 1916, 1926, 1935, 1950, 1954, 1959, 1970, 1971, 1972, 1973, 1976, 1977, 1978, 1980, 1987, 1991, 2004, 2006, 2016, 2020, 2021, 2024, 2027, 2029, 2032, 2035, 2036, 2041, 2046, 2055], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 25, 27, 29, 30, 31, 32, 33, 39, 42, 46, 47, 49, 53, 54, 55, 57, 58, 60, 68, 69, 83, 150, 214, 217, 218, 250, 319, 509, 511, 513, 519, 539, 610, 737, 738, 739, 756, 796, 810, 857, 876, 885, 886, 892, 893, 896, 899, 901, 902, 911, 924, 937, 946, 960, 961, 968, 974, 998, 1041, 1044, 1055, 1079, 1080, 1098, 1102, 1118, 1149, 1156, 1162, 1166, 1167, 1172, 1179, 1186, 1187, 1192, 1195, 1208, 1209, 1213, 1250, 1253, 1254, 1257, 1260, 1264, 1266, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1352, 1358, 1372, 1380, 1392, 1400, 1402, 1403, 1404, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1431, 1434, 1439, 1453, 1458, 1488, 1495, 1503, 1517, 1519, 1527, 1536, 1537, 1539, 1571, 1572, 1573, 1593, 1631, 1647, 1666, 1675, 1693, 1695, 1705, 1707, 1709, 1710, 1711, 1712, 1728, 1742, 1743, 1757, 1763, 1767, 1770, 1773, 1798, 1805, 1817, 1827, 1841, 1842, 1859, 1863, 1877, 1886, 1896, 1898, 1901, 1907, 1908, 1919, 1920, 1935, 1938, 1959, 1960, 1961, 1963, 1964, 1970, 1971, 1973, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2020, 2021, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2035, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056], "arg": [0, 1, 3, 4, 5, 14, 21, 22, 25, 27, 29, 31, 33, 34, 40, 41, 43, 44, 45, 46, 47, 49, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 576, 599, 676, 728, 743, 745, 747, 748, 749, 750, 756, 758, 759, 820, 857, 886, 888, 896, 897, 898, 901, 902, 931, 972, 1044, 1155, 1159, 1160, 1161, 1167, 1172, 1188, 1189, 1250, 1253, 1340, 1400, 1401, 1421, 1423, 1447, 1449, 1454, 1477, 1479, 1480, 1488, 1491, 1492, 1493, 1495, 1502, 1516, 1518, 1519, 1520, 1522, 1526, 1527, 1528, 1529, 1536, 1565, 1566, 1576, 1605, 1629, 1637, 1666, 1675, 1697, 1702, 1716, 1723, 1725, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1887, 1920, 1932, 1935, 1959, 1962, 1964, 1965, 1977, 1979, 1987, 1990, 1991, 1992, 1993, 2001, 2007, 2009, 2012, 2013, 2020, 2021, 2022, 2026, 2034, 2040, 2041, 2043, 2044, 2047, 2053, 2054, 2055], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 93, 146, 149, 150, 151, 166, 168, 169, 171, 174, 175, 176, 186, 187, 191, 192, 202, 204, 205, 214, 219, 229, 236, 250, 251, 254, 263, 282, 286, 293, 307, 309, 311, 315, 317, 319, 321, 324, 325, 326, 327, 328, 329, 331, 332, 334, 336, 337, 338, 339, 348, 389, 396, 398, 402, 411, 444, 454, 467, 468, 477, 479, 482, 483, 484, 489, 491, 492, 493, 494, 495, 496, 499, 500, 509, 511, 513, 516, 520, 521, 533, 539, 540, 541, 553, 556, 576, 577, 579, 580, 581, 583, 584, 585, 599, 600, 603, 610, 613, 614, 616, 620, 676, 677, 679, 680, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 721, 722, 723, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 764, 765, 768, 769, 770, 771, 772, 773, 774, 775, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 795, 797, 798, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 820, 822, 823, 829, 834, 835, 836, 853, 854, 855, 857, 858, 861, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 920, 921, 922, 923, 924, 928, 929, 931, 933, 935, 936, 937, 938, 939, 941, 944, 946, 948, 949, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 973, 976, 980, 981, 982, 983, 984, 985, 986, 987, 988, 994, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1013, 1015, 1018, 1019, 1020, 1022, 1026, 1027, 1030, 1033, 1034, 1035, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1108, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1177, 1178, 1179, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1194, 1195, 1196, 1198, 1204, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1221, 1225, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1270, 1271, 1272, 1274, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1333, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1372, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1519, 1520, 1521, 1523, 1524, 1527, 1528, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1558, 1561, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1590, 1591, 1592, 1593, 1595, 1602, 1604, 1605, 1610, 1611, 1612, 1614, 1615, 1616, 1618, 1619, 1620, 1629, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1644, 1647, 1650, 1651, 1659, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1731, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1792, 1794, 1795, 1796, 1798, 1799, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1813, 1814, 1816, 1817, 1821, 1823, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1851, 1853, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1878, 1880, 1881, 1882, 1885, 1886, 1887, 1888, 1889, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1921, 1923, 1926, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1943, 1944, 1946, 1947, 1948, 1950, 1951, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1970, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1985, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2038, 2039, 2040, 2042, 2045, 2046, 2047, 2048, 2049, 2050, 2052, 2053, 2054, 2055, 2056, 2057, 2059], "equival": [0, 1, 3, 5, 12, 21, 22, 29, 31, 35, 42, 43, 49, 53, 54, 58, 78, 151, 166, 168, 171, 174, 175, 176, 236, 251, 263, 293, 315, 321, 389, 444, 454, 482, 494, 496, 521, 600, 606, 613, 614, 616, 688, 740, 744, 751, 753, 755, 781, 782, 783, 872, 885, 886, 901, 902, 949, 951, 954, 956, 959, 966, 967, 980, 1086, 1090, 1093, 1096, 1097, 1098, 1100, 1115, 1117, 1120, 1123, 1124, 1127, 1128, 1130, 1133, 1135, 1154, 1156, 1159, 1161, 1167, 1172, 1182, 1214, 1216, 1227, 1249, 1250, 1261, 1266, 1267, 1270, 1282, 1303, 1307, 1315, 1320, 1352, 1357, 1372, 1379, 1392, 1402, 1403, 1404, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1430, 1431, 1442, 1448, 1450, 1451, 1452, 1453, 1458, 1460, 1488, 1503, 1519, 1527, 1539, 1541, 1548, 1549, 1550, 1602, 1612, 1634, 1644, 1663, 1664, 1665, 1675, 1735, 1756, 1792, 1795, 1798, 1799, 1823, 1829, 1836, 1858, 1865, 1878, 1888, 1889, 1896, 1901, 1920, 1935, 1936, 1937, 1958, 1961, 1963, 1964, 1972, 1987, 2007, 2009, 2012, 2016, 2024, 2025, 2027, 2030, 2031, 2040, 2041, 2047, 2055, 2057], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 21, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 42, 43, 46, 47, 49, 52, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 78, 79, 82, 83, 254, 307, 317, 454, 579, 613, 681, 682, 683, 685, 689, 691, 692, 695, 725, 734, 735, 736, 768, 769, 770, 775, 781, 782, 783, 788, 789, 790, 791, 797, 813, 829, 855, 857, 858, 888, 891, 896, 899, 901, 902, 915, 916, 936, 937, 941, 944, 946, 948, 960, 961, 968, 980, 983, 998, 1041, 1042, 1044, 1061, 1093, 1095, 1098, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1143, 1144, 1145, 1146, 1148, 1149, 1151, 1162, 1166, 1208, 1209, 1221, 1247, 1254, 1262, 1266, 1270, 1271, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1341, 1345, 1349, 1354, 1355, 1373, 1415, 1416, 1417, 1418, 1419, 1420, 1427, 1430, 1431, 1434, 1454, 1475, 1493, 1494, 1527, 1535, 1537, 1539, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1585, 1587, 1593, 1604, 1610, 1644, 1662, 1663, 1665, 1675, 1682, 1683, 1730, 1735, 1739, 1742, 1743, 1745, 1752, 1755, 1773, 1785, 1804, 1805, 1826, 1829, 1830, 1859, 1860, 1863, 1866, 1883, 1886, 1910, 1912, 1914, 1924, 1926, 1932, 1933, 1934, 1958, 1959, 1960, 1961, 1963, 1965, 1966, 1968, 1973, 1975, 1977, 1981, 1987, 1988, 1989, 1990, 1992, 1997, 1999, 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2011, 2012, 2013, 2014, 2018, 2019, 2020, 2025, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2035, 2036, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2053, 2054, 2055, 2059], "now": [0, 1, 12, 25, 32, 39, 43, 44, 46, 49, 54, 58, 492, 896, 900, 901, 902, 910, 924, 980, 1013, 1041, 1062, 1063, 1149, 1150, 1198, 1247, 1248, 1254, 1266, 1300, 1485, 1504, 1540, 1666, 1679, 1695, 1706, 1727, 1745, 1826, 1877, 1882, 1926, 1961, 1971, 1978, 1979, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1999, 2000, 2009, 2012, 2015, 2021, 2022, 2024, 2039, 2042, 2043, 2044, 2045, 2047, 2048, 2053, 2054, 2055, 2056], "new": [0, 1, 5, 8, 14, 18, 21, 23, 25, 27, 31, 33, 42, 43, 46, 49, 50, 53, 54, 55, 56, 57, 58, 82, 217, 250, 307, 411, 444, 479, 482, 483, 492, 495, 540, 576, 579, 613, 676, 680, 756, 787, 810, 815, 850, 875, 877, 878, 879, 880, 881, 892, 894, 901, 902, 911, 920, 921, 935, 951, 952, 955, 957, 966, 970, 973, 983, 985, 986, 1002, 1004, 1082, 1086, 1108, 1112, 1113, 1139, 1140, 1142, 1156, 1165, 1167, 1172, 1190, 1221, 1225, 1239, 1240, 1243, 1246, 1250, 1257, 1262, 1264, 1324, 1325, 1326, 1327, 1344, 1383, 1386, 1402, 1403, 1404, 1439, 1450, 1451, 1452, 1488, 1489, 1494, 1498, 1527, 1538, 1540, 1604, 1668, 1673, 1674, 1675, 1684, 1685, 1686, 1687, 1690, 1695, 1697, 1701, 1702, 1703, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1720, 1724, 1727, 1728, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1769, 1793, 1803, 1804, 1808, 1809, 1810, 1816, 1817, 1821, 1826, 1827, 1836, 1838, 1849, 1851, 1853, 1875, 1876, 1879, 1897, 1899, 1900, 1916, 1918, 1922, 1933, 1934, 1935, 1959, 1961, 1963, 1964, 1968, 1971, 1972, 1973, 1977, 1978, 1979, 1980, 1981, 1987, 1990, 1992, 1993, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2007, 2009, 2011, 2012, 2014, 2015, 2018, 2022, 2024, 2025, 2026, 2028, 2029, 2030, 2031, 2034, 2039, 2041, 2042, 2044, 2047, 2053, 2054], "version": [0, 1, 2, 5, 8, 12, 14, 20, 22, 25, 27, 31, 43, 46, 49, 52, 53, 58, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 117, 119, 121, 123, 126, 127, 129, 137, 139, 142, 143, 145, 148, 154, 156, 158, 160, 162, 164, 173, 182, 190, 194, 197, 199, 209, 211, 227, 232, 234, 240, 243, 245, 247, 249, 253, 258, 265, 267, 269, 273, 275, 279, 281, 288, 290, 292, 300, 302, 304, 306, 308, 310, 312, 314, 352, 354, 356, 358, 360, 362, 364, 367, 369, 371, 372, 379, 381, 383, 385, 387, 391, 395, 397, 416, 419, 422, 424, 435, 437, 439, 447, 452, 462, 465, 481, 486, 488, 504, 507, 508, 510, 512, 518, 523, 525, 528, 530, 532, 545, 547, 549, 552, 558, 560, 567, 571, 573, 589, 592, 594, 596, 598, 608, 618, 731, 732, 733, 745, 746, 747, 748, 749, 750, 771, 772, 773, 774, 776, 780, 781, 800, 801, 802, 835, 843, 851, 852, 854, 911, 922, 980, 1044, 1155, 1175, 1177, 1184, 1208, 1247, 1250, 1253, 1254, 1258, 1261, 1280, 1287, 1293, 1294, 1298, 1299, 1312, 1345, 1383, 1401, 1458, 1488, 1489, 1503, 1540, 1558, 1583, 1593, 1600, 1609, 1641, 1643, 1658, 1659, 1663, 1667, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1724, 1725, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1818, 1819, 1820, 1877, 1880, 1881, 1882, 1886, 1907, 1921, 1923, 1930, 1931, 1959, 1978, 1979, 1987, 1988, 1990, 1992, 1993, 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2005, 2007, 2009, 2011, 2012, 2014, 2018, 2024, 2031, 2032, 2036, 2042, 2044, 2045, 2052, 2054, 2056], "1": [0, 1, 2, 3, 11, 12, 14, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 45, 46, 47, 49, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 132, 147, 148, 169, 187, 201, 204, 221, 223, 224, 225, 229, 238, 250, 254, 259, 282, 285, 307, 308, 309, 311, 313, 317, 348, 373, 397, 398, 441, 443, 444, 450, 467, 477, 479, 483, 484, 489, 492, 495, 509, 511, 513, 533, 534, 538, 540, 550, 551, 552, 554, 556, 557, 558, 559, 560, 577, 579, 580, 581, 583, 584, 603, 604, 611, 613, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 721, 722, 723, 726, 727, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 747, 748, 749, 752, 753, 754, 756, 766, 768, 769, 770, 771, 774, 778, 779, 781, 792, 804, 805, 815, 816, 817, 818, 821, 823, 851, 857, 858, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 890, 891, 896, 897, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 912, 920, 921, 924, 931, 933, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 966, 967, 969, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 993, 998, 1010, 1041, 1042, 1057, 1061, 1068, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1104, 1108, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1172, 1175, 1179, 1192, 1193, 1194, 1204, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1221, 1222, 1225, 1227, 1235, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1254, 1256, 1261, 1262, 1266, 1267, 1270, 1271, 1272, 1274, 1275, 1276, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1296, 1297, 1298, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1326, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1344, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1369, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1527, 1530, 1531, 1533, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1548, 1549, 1550, 1558, 1560, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1591, 1592, 1593, 1595, 1597, 1599, 1600, 1601, 1602, 1603, 1611, 1613, 1618, 1619, 1620, 1626, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1638, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1654, 1659, 1660, 1661, 1662, 1663, 1666, 1675, 1682, 1683, 1689, 1690, 1691, 1695, 1700, 1701, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1778, 1779, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1816, 1817, 1821, 1824, 1825, 1826, 1827, 1828, 1830, 1833, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1853, 1854, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1962, 1963, 1964, 1965, 1968, 1971, 1972, 1973, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1994, 1995, 1996, 1997, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2017, 2020, 2021, 2022, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2036, 2039, 2040, 2041, 2042, 2044, 2046, 2047, 2048, 2049, 2052, 2053, 2054, 2055, 2057], "10": [0, 1, 3, 12, 20, 21, 22, 25, 26, 31, 32, 42, 44, 46, 60, 65, 68, 69, 309, 317, 331, 467, 509, 556, 577, 579, 580, 581, 681, 682, 693, 730, 741, 742, 756, 757, 758, 759, 761, 936, 948, 958, 961, 962, 966, 980, 988, 1077, 1078, 1079, 1080, 1081, 1096, 1098, 1115, 1117, 1120, 1121, 1123, 1124, 1127, 1128, 1130, 1131, 1133, 1135, 1141, 1149, 1150, 1193, 1204, 1214, 1239, 1255, 1261, 1262, 1268, 1273, 1276, 1303, 1305, 1306, 1321, 1323, 1325, 1330, 1332, 1333, 1334, 1335, 1337, 1345, 1374, 1390, 1391, 1392, 1394, 1395, 1401, 1404, 1407, 1408, 1414, 1417, 1420, 1430, 1431, 1439, 1440, 1441, 1442, 1452, 1458, 1459, 1460, 1485, 1489, 1490, 1495, 1498, 1499, 1503, 1505, 1527, 1531, 1532, 1533, 1534, 1535, 1539, 1545, 1570, 1573, 1577, 1584, 1585, 1595, 1666, 1675, 1682, 1683, 1706, 1714, 1728, 1731, 1737, 1741, 1761, 1767, 1769, 1787, 1788, 1796, 1821, 1829, 1833, 1839, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1849, 1858, 1874, 1886, 1887, 1898, 1902, 1903, 1906, 1908, 1921, 1923, 1936, 1959, 1961, 1962, 1963, 1964, 1965, 1971, 1987, 1990, 1991, 1992, 1995, 1999, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2015, 2024, 2025, 2027, 2029, 2030, 2031, 2036, 2039, 2040, 2041, 2044, 2046, 2047, 2052, 2054, 2057], "class": [0, 1, 2, 3, 12, 15, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 36, 39, 40, 42, 44, 46, 47, 49, 54, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 553, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 832, 833, 834, 835, 836, 837, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 890, 891, 896, 897, 898, 899, 900, 901, 902, 911, 912, 913, 923, 924, 931, 932, 933, 934, 935, 989, 990, 999, 1000, 1001, 1002, 1004, 1005, 1020, 1022, 1033, 1073, 1102, 1165, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1248, 1249, 1250, 1253, 1255, 1256, 1257, 1261, 1262, 1265, 1266, 1267, 1268, 1362, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1566, 1576, 1584, 1629, 1631, 1666, 1675, 1676, 1677, 1678, 1692, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1716, 1723, 1728, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1792, 1861, 1924, 1940, 1941, 1944, 1946, 1960, 1962, 1965, 1968, 1971, 1975, 1977, 1979, 1981, 1982, 1986, 1987, 1990, 1992, 1993, 1994, 1995, 1999, 2001, 2004, 2007, 2013, 2014, 2015, 2017, 2018, 2020, 2021, 2024, 2026, 2027, 2029, 2031, 2032, 2033, 2034, 2036, 2040, 2041, 2042, 2047, 2050, 2052, 2053, 2054, 2055, 2056, 2057], "device_typ": [0, 1, 25, 1986, 2019], "dtype": [0, 1, 5, 11, 12, 18, 19, 21, 22, 25, 27, 46, 47, 49, 56, 58, 60, 68, 69, 81, 149, 150, 187, 204, 208, 209, 210, 211, 238, 307, 309, 311, 313, 315, 317, 405, 425, 428, 441, 442, 443, 444, 445, 449, 454, 466, 477, 479, 509, 511, 561, 576, 577, 599, 613, 683, 685, 688, 689, 693, 695, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 756, 757, 760, 761, 768, 769, 770, 790, 791, 795, 815, 816, 817, 818, 819, 820, 821, 822, 823, 837, 854, 855, 857, 858, 861, 875, 876, 896, 897, 899, 901, 902, 904, 906, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 953, 960, 961, 977, 980, 981, 982, 988, 998, 1014, 1079, 1080, 1099, 1100, 1101, 1111, 1115, 1116, 1117, 1123, 1124, 1134, 1141, 1146, 1148, 1150, 1151, 1152, 1153, 1154, 1198, 1208, 1209, 1221, 1250, 1254, 1264, 1270, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1332, 1333, 1334, 1335, 1337, 1340, 1341, 1345, 1349, 1350, 1351, 1354, 1355, 1374, 1378, 1379, 1380, 1382, 1392, 1401, 1402, 1403, 1404, 1405, 1407, 1409, 1410, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1430, 1431, 1434, 1439, 1440, 1442, 1450, 1451, 1452, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1488, 1494, 1495, 1496, 1503, 1504, 1505, 1509, 1510, 1511, 1512, 1513, 1527, 1531, 1533, 1535, 1539, 1540, 1541, 1542, 1547, 1548, 1549, 1550, 1560, 1576, 1577, 1604, 1610, 1612, 1644, 1650, 1651, 1666, 1677, 1678, 1682, 1683, 1692, 1695, 1696, 1716, 1730, 1734, 1735, 1736, 1738, 1773, 1779, 1783, 1784, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1811, 1814, 1826, 1827, 1829, 1830, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1857, 1860, 1862, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1885, 1886, 1898, 1901, 1912, 1914, 1919, 1923, 1924, 1926, 1933, 1934, 1938, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1966, 1968, 1971, 1979, 1980, 1990, 1992, 1999, 2002, 2007, 2009, 2010, 2015, 2016, 2017, 2024, 2025, 2026, 2029, 2030, 2031, 2041, 2043, 2044, 2049, 2054, 2057], "none": [0, 1, 2, 3, 5, 12, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 39, 40, 42, 44, 46, 47, 49, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 108, 110, 111, 112, 114, 130, 131, 134, 146, 149, 150, 152, 169, 181, 182, 183, 184, 200, 201, 203, 205, 208, 209, 210, 211, 225, 229, 231, 232, 233, 234, 254, 282, 286, 297, 331, 347, 350, 373, 403, 405, 406, 407, 410, 417, 423, 424, 425, 426, 427, 428, 441, 442, 443, 444, 445, 449, 450, 466, 475, 477, 483, 484, 490, 499, 509, 516, 533, 534, 548, 549, 551, 552, 561, 576, 577, 579, 584, 586, 599, 604, 605, 606, 611, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 644, 646, 648, 651, 653, 655, 656, 658, 660, 662, 664, 666, 668, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 745, 746, 747, 748, 749, 750, 751, 762, 763, 764, 765, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 789, 790, 791, 793, 795, 810, 813, 815, 816, 817, 818, 821, 822, 834, 835, 836, 853, 854, 855, 856, 857, 858, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 885, 886, 887, 888, 889, 891, 893, 894, 895, 896, 899, 900, 901, 902, 905, 907, 908, 909, 910, 915, 916, 920, 921, 931, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 952, 955, 957, 958, 959, 960, 961, 963, 964, 966, 968, 974, 977, 978, 979, 982, 983, 985, 986, 987, 988, 992, 997, 998, 999, 1001, 1002, 1004, 1005, 1006, 1010, 1011, 1013, 1014, 1015, 1018, 1019, 1020, 1026, 1027, 1033, 1043, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1068, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1090, 1091, 1093, 1094, 1095, 1097, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1153, 1154, 1155, 1156, 1157, 1161, 1164, 1165, 1167, 1168, 1172, 1173, 1174, 1176, 1179, 1185, 1192, 1193, 1194, 1195, 1196, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1227, 1228, 1244, 1245, 1247, 1249, 1250, 1254, 1258, 1260, 1261, 1262, 1264, 1266, 1267, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1430, 1431, 1433, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1502, 1503, 1504, 1505, 1519, 1520, 1521, 1522, 1523, 1527, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1541, 1542, 1553, 1554, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1576, 1577, 1584, 1585, 1588, 1589, 1590, 1591, 1593, 1594, 1601, 1603, 1604, 1605, 1606, 1607, 1610, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1634, 1637, 1644, 1648, 1649, 1650, 1651, 1659, 1660, 1661, 1663, 1664, 1665, 1668, 1669, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1689, 1690, 1691, 1694, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1716, 1718, 1719, 1720, 1721, 1724, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1778, 1779, 1780, 1782, 1783, 1785, 1786, 1789, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1805, 1806, 1807, 1812, 1814, 1815, 1816, 1821, 1833, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1857, 1858, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1898, 1899, 1900, 1901, 1903, 1905, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1919, 1920, 1924, 1926, 1929, 1930, 1931, 1932, 1935, 1937, 1938, 1939, 1940, 1941, 1943, 1944, 1947, 1948, 1949, 1954, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1963, 1964, 1965, 1968, 1973, 1974, 1975, 1977, 1978, 1979, 1980, 1985, 1987, 1990, 1992, 1993, 1999, 2001, 2004, 2007, 2009, 2012, 2013, 2014, 2015, 2017, 2019, 2020, 2025, 2026, 2027, 2029, 2031, 2033, 2034, 2040, 2041, 2044, 2047, 2049, 2054, 2055, 2056], "enabl": [0, 1, 2, 5, 8, 12, 18, 19, 21, 22, 25, 26, 27, 29, 31, 33, 43, 46, 49, 56, 75, 81, 83, 484, 499, 500, 676, 756, 808, 809, 896, 899, 901, 911, 912, 913, 922, 968, 980, 999, 1044, 1098, 1102, 1233, 1234, 1252, 1259, 1365, 1366, 1439, 1458, 1503, 1504, 1534, 1551, 1644, 1675, 1692, 1693, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1728, 1755, 1830, 1833, 1861, 1923, 1926, 1964, 1970, 1971, 1973, 1976, 1980, 1986, 1987, 1988, 1989, 1990, 1992, 1995, 1998, 2000, 2002, 2003, 2007, 2009, 2013, 2014, 2019, 2020, 2021, 2024, 2032, 2034, 2035, 2036, 2038, 2040, 2041, 2043, 2044, 2047, 2048, 2052, 2054, 2055, 2056], "true": [0, 1, 2, 3, 5, 12, 14, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 44, 46, 49, 54, 55, 56, 57, 58, 60, 68, 69, 146, 192, 205, 256, 315, 317, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 347, 392, 396, 398, 411, 444, 454, 456, 467, 473, 483, 484, 491, 492, 495, 500, 512, 513, 552, 563, 576, 577, 586, 590, 599, 605, 613, 676, 683, 688, 689, 690, 691, 692, 693, 695, 714, 715, 716, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 742, 745, 750, 752, 756, 757, 760, 761, 764, 765, 775, 781, 782, 793, 810, 822, 855, 869, 871, 872, 876, 885, 888, 889, 891, 896, 897, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 918, 920, 921, 931, 937, 940, 943, 945, 946, 952, 953, 959, 967, 968, 971, 974, 980, 981, 1001, 1039, 1093, 1099, 1100, 1101, 1102, 1103, 1104, 1120, 1121, 1127, 1128, 1150, 1152, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1166, 1167, 1168, 1172, 1179, 1181, 1182, 1186, 1187, 1189, 1190, 1192, 1194, 1207, 1208, 1209, 1212, 1213, 1224, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1250, 1254, 1255, 1257, 1260, 1266, 1267, 1268, 1270, 1272, 1275, 1280, 1281, 1292, 1293, 1294, 1297, 1298, 1299, 1300, 1303, 1305, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1316, 1317, 1320, 1322, 1323, 1332, 1333, 1334, 1335, 1338, 1339, 1340, 1342, 1344, 1348, 1350, 1351, 1352, 1353, 1356, 1362, 1374, 1379, 1382, 1385, 1388, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1435, 1436, 1439, 1440, 1441, 1442, 1447, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1491, 1492, 1493, 1494, 1495, 1497, 1502, 1503, 1504, 1505, 1519, 1520, 1527, 1531, 1533, 1534, 1535, 1536, 1537, 1540, 1541, 1550, 1558, 1560, 1561, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1593, 1595, 1597, 1603, 1604, 1605, 1618, 1619, 1620, 1629, 1637, 1644, 1663, 1664, 1666, 1669, 1675, 1676, 1678, 1680, 1684, 1685, 1687, 1689, 1690, 1691, 1694, 1695, 1696, 1708, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1775, 1783, 1785, 1786, 1790, 1791, 1792, 1809, 1810, 1817, 1820, 1821, 1829, 1830, 1833, 1835, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1858, 1860, 1861, 1863, 1871, 1880, 1881, 1882, 1885, 1886, 1901, 1905, 1910, 1919, 1920, 1923, 1924, 1926, 1929, 1930, 1931, 1935, 1938, 1959, 1962, 1963, 1964, 1968, 1971, 1972, 1974, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2002, 2003, 2004, 2007, 2008, 2009, 2012, 2013, 2014, 2015, 2016, 2017, 2019, 2020, 2021, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2041, 2042, 2044, 2046, 2047, 2049, 2050, 2052, 2053, 2054, 2055], "cache_en": [0, 1044], "sourc": [0, 1, 2, 3, 4, 5, 9, 13, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 46, 47, 49, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 146, 192, 205, 229, 308, 309, 317, 336, 347, 392, 397, 398, 411, 412, 413, 449, 467, 483, 484, 509, 511, 513, 516, 520, 543, 552, 553, 555, 582, 599, 602, 605, 606, 620, 676, 691, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 832, 833, 834, 835, 836, 837, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 869, 882, 883, 884, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 934, 935, 947, 949, 950, 954, 956, 958, 968, 969, 970, 971, 972, 973, 974, 975, 976, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1098, 1102, 1149, 1152, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1197, 1199, 1200, 1203, 1222, 1223, 1224, 1226, 1231, 1236, 1237, 1238, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1322, 1323, 1343, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1558, 1559, 1563, 1565, 1566, 1567, 1574, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1590, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1611, 1612, 1614, 1615, 1616, 1617, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1637, 1639, 1640, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1654, 1655, 1656, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1775, 1792, 1817, 1822, 1825, 1826, 1827, 1828, 1829, 1833, 1834, 1835, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1860, 1861, 1867, 1874, 1882, 1887, 1890, 1891, 1892, 1893, 1894, 1895, 1903, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1959, 1961, 1962, 1963, 1968, 1970, 1971, 1973, 1974, 1975, 1977, 1979, 1980, 1985, 1994, 1997, 1998, 2002, 2004, 2007, 2009, 2011, 2013, 2014, 2015, 2019, 2020, 2021, 2026, 2029, 2031, 2032, 2033, 2034, 2041, 2044, 2045, 2047, 2054, 2055, 2056], "instanc": [0, 2, 3, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 39, 42, 43, 44, 46, 49, 54, 58, 135, 613, 676, 730, 744, 753, 789, 792, 820, 822, 837, 854, 999, 1098, 1149, 1248, 1250, 1262, 1266, 1323, 1430, 1431, 1434, 1450, 1451, 1452, 1460, 1488, 1498, 1532, 1534, 1535, 1539, 1548, 1549, 1550, 1603, 1675, 1690, 1702, 1716, 1724, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1871, 1902, 1961, 1963, 1965, 1970, 1973, 1977, 1979, 1986, 1987, 1990, 1991, 1992, 1994, 1995, 1999, 2003, 2007, 2012, 2015, 2020, 2021, 2022, 2024, 2026, 2031, 2039, 2047, 2053, 2055], "serv": [0, 7, 8, 15, 25, 83, 1971, 2007, 2011, 2020, 2021, 2040, 2044, 2049], "context": [0, 2, 5, 21, 25, 29, 33, 42, 43, 49, 58, 60, 146, 788, 885, 886, 887, 889, 891, 901, 902, 910, 911, 912, 913, 915, 931, 974, 990, 996, 1005, 1020, 1022, 1033, 1039, 1044, 1051, 1071, 1073, 1102, 1157, 1161, 1166, 1172, 1176, 1250, 1365, 1488, 1546, 1551, 1644, 1666, 1675, 1676, 1693, 1695, 1728, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1861, 1941, 1944, 1946, 1954, 1955, 1960, 1964, 1965, 1972, 1977, 1986, 1987, 1990, 1992, 1997, 1998, 2001, 2007, 2009, 2012, 2014, 2019, 2020, 2022, 2024, 2027, 2032, 2042, 2043, 2044, 2047, 2052, 2056], "manag": [0, 1, 2, 5, 7, 25, 29, 31, 33, 40, 42, 43, 44, 49, 58, 60, 84, 482, 891, 911, 912, 913, 931, 974, 990, 996, 999, 1002, 1005, 1006, 1007, 1009, 1020, 1022, 1023, 1024, 1033, 1034, 1044, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1062, 1063, 1064, 1071, 1073, 1102, 1157, 1161, 1166, 1172, 1365, 1504, 1546, 1551, 1644, 1675, 1692, 1693, 1695, 1728, 1861, 1941, 1944, 1946, 1954, 1955, 1960, 1964, 1965, 1972, 1987, 1992, 1994, 1995, 1998, 2007, 2009, 2013, 2014, 2019, 2020, 2021, 2024, 2027, 2032, 2042, 2043, 2044, 2047], "decor": [0, 1, 31, 35, 39, 43, 58, 71, 896, 899, 901, 911, 931, 970, 974, 1102, 1255, 1256, 1262, 1268, 1728, 1860, 1861, 1961, 1963, 1964, 1968, 1986, 1987, 1992, 2013, 2020, 2040, 2041, 2044, 2045, 2055], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 25, 26, 27, 31, 33, 34, 42, 43, 46, 49, 50, 52, 53, 54, 55, 58, 60, 62, 146, 509, 676, 731, 789, 793, 795, 820, 889, 893, 894, 910, 953, 967, 971, 980, 1041, 1044, 1068, 1098, 1160, 1172, 1176, 1250, 1255, 1268, 1306, 1328, 1369, 1383, 1397, 1398, 1399, 1423, 1424, 1441, 1481, 1482, 1483, 1488, 1491, 1494, 1516, 1531, 1675, 1681, 1729, 1738, 1754, 1863, 1923, 1959, 1963, 1964, 1971, 1972, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2004, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2017, 2020, 2024, 2027, 2028, 2029, 2031, 2041, 2042, 2043, 2044, 2047, 2050, 2053, 2054], "region": [0, 3, 5, 31, 39, 764, 765, 968, 1397, 1398, 1399, 1435, 1436, 1446, 1448, 1481, 1482, 1483, 1561, 1562, 1588, 1589, 1619, 1620, 1961, 1977, 1986, 1990, 2043, 2044, 2052], "your": [0, 1, 2, 4, 7, 8, 9, 11, 14, 15, 17, 21, 24, 25, 29, 30, 31, 34, 35, 39, 41, 42, 43, 44, 45, 46, 49, 53, 54, 57, 58, 482, 889, 896, 899, 901, 904, 905, 910, 911, 968, 971, 1169, 1171, 1172, 1250, 1254, 1255, 1260, 1263, 1266, 1267, 1268, 1488, 1495, 1535, 1675, 1692, 1695, 1728, 1756, 1830, 1919, 1924, 1926, 1961, 1963, 1964, 1968, 1970, 1972, 1977, 1978, 1979, 1981, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1997, 1998, 1999, 2000, 2002, 2003, 2005, 2009, 2011, 2013, 2016, 2019, 2021, 2024, 2029, 2030, 2032, 2035, 2036, 2038, 2039, 2040, 2041, 2043, 2044, 2045, 2046, 2048, 2050, 2051, 2052, 2054, 2055, 2056, 2059], "script": [0, 2, 4, 18, 21, 25, 28, 33, 35, 41, 43, 44, 46, 1251, 1253, 1254, 1255, 1256, 1257, 1260, 1261, 1263, 1265, 1266, 1268, 1959, 1960, 1963, 1964, 1973, 1989, 1998, 2000, 2004, 2006, 2007, 2012, 2015, 2020, 2035, 2038, 2040, 2046, 2048, 2051], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 14, 15, 18, 21, 22, 25, 26, 29, 31, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 57, 58, 60, 146, 482, 484, 676, 788, 794, 813, 815, 816, 817, 818, 821, 853, 857, 858, 859, 889, 910, 911, 915, 916, 931, 968, 1043, 1044, 1156, 1161, 1167, 1191, 1250, 1251, 1253, 1254, 1256, 1258, 1260, 1262, 1264, 1266, 1267, 1287, 1296, 1322, 1323, 1351, 1402, 1403, 1404, 1424, 1450, 1451, 1452, 1461, 1462, 1463, 1470, 1471, 1472, 1488, 1516, 1527, 1644, 1666, 1669, 1675, 1682, 1683, 1684, 1685, 1686, 1687, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1829, 1832, 1865, 1912, 1914, 1923, 1935, 1960, 1961, 1964, 1968, 1973, 1975, 1976, 1977, 1985, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2009, 2011, 2012, 2013, 2015, 2018, 2019, 2020, 2021, 2022, 2024, 2029, 2032, 2033, 2034, 2035, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2052, 2053, 2054, 2056], "In": [0, 2, 3, 4, 5, 7, 9, 15, 18, 21, 25, 27, 29, 31, 35, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54, 57, 58, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 117, 119, 121, 123, 126, 127, 129, 137, 139, 142, 143, 145, 148, 150, 154, 156, 158, 160, 162, 164, 173, 182, 190, 194, 197, 199, 209, 211, 217, 227, 232, 234, 240, 243, 245, 247, 249, 253, 254, 258, 265, 267, 269, 273, 275, 279, 281, 288, 290, 292, 300, 302, 304, 306, 352, 354, 356, 358, 360, 362, 364, 367, 369, 371, 372, 379, 381, 383, 385, 387, 391, 416, 419, 422, 424, 435, 437, 439, 447, 452, 462, 465, 481, 482, 486, 488, 504, 507, 518, 523, 525, 528, 530, 532, 545, 547, 549, 558, 560, 567, 571, 573, 589, 592, 594, 596, 598, 608, 618, 676, 756, 796, 820, 850, 896, 899, 901, 902, 935, 944, 952, 981, 982, 998, 1044, 1055, 1067, 1068, 1072, 1073, 1098, 1119, 1121, 1129, 1130, 1131, 1146, 1157, 1161, 1164, 1166, 1169, 1171, 1179, 1247, 1248, 1250, 1260, 1263, 1264, 1266, 1282, 1291, 1296, 1297, 1298, 1306, 1309, 1314, 1319, 1323, 1328, 1331, 1340, 1345, 1351, 1352, 1379, 1397, 1398, 1399, 1401, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1426, 1427, 1428, 1432, 1434, 1439, 1448, 1458, 1473, 1481, 1482, 1483, 1488, 1494, 1531, 1533, 1535, 1539, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1583, 1593, 1600, 1602, 1609, 1638, 1641, 1643, 1644, 1658, 1675, 1682, 1683, 1689, 1695, 1696, 1728, 1756, 1767, 1769, 1805, 1821, 1823, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1882, 1886, 1887, 1910, 1923, 1924, 1926, 1932, 1933, 1959, 1960, 1961, 1963, 1964, 1968, 1970, 1971, 1972, 1977, 1978, 1979, 1980, 1985, 1986, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2001, 2002, 2003, 2004, 2009, 2011, 2012, 2014, 2015, 2016, 2017, 2020, 2021, 2022, 2024, 2029, 2031, 2035, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2052, 2053, 2054, 2056], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 75, 76, 77, 79, 81, 82, 84, 146, 150, 186, 238, 250, 309, 311, 317, 319, 324, 331, 411, 482, 495, 509, 511, 513, 533, 541, 556, 603, 610, 613, 676, 683, 684, 731, 737, 738, 739, 752, 756, 761, 775, 781, 783, 785, 788, 792, 811, 813, 819, 822, 850, 857, 858, 860, 874, 875, 876, 885, 887, 888, 889, 894, 896, 897, 899, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 923, 924, 925, 927, 928, 935, 939, 955, 965, 968, 981, 982, 984, 999, 1001, 1002, 1004, 1011, 1012, 1013, 1014, 1015, 1033, 1034, 1041, 1042, 1044, 1056, 1058, 1068, 1072, 1073, 1083, 1096, 1098, 1099, 1100, 1101, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1138, 1141, 1149, 1152, 1155, 1156, 1159, 1160, 1161, 1163, 1165, 1167, 1168, 1169, 1171, 1172, 1175, 1177, 1179, 1185, 1192, 1195, 1204, 1212, 1213, 1214, 1247, 1248, 1250, 1253, 1254, 1256, 1258, 1261, 1262, 1264, 1266, 1267, 1268, 1269, 1280, 1281, 1286, 1287, 1292, 1294, 1296, 1299, 1300, 1304, 1307, 1309, 1312, 1313, 1320, 1322, 1323, 1340, 1342, 1345, 1351, 1362, 1369, 1374, 1383, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1447, 1451, 1452, 1455, 1456, 1457, 1458, 1460, 1470, 1471, 1472, 1473, 1475, 1476, 1478, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1503, 1505, 1507, 1516, 1519, 1521, 1522, 1523, 1527, 1531, 1532, 1533, 1534, 1535, 1536, 1539, 1541, 1542, 1546, 1547, 1550, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1560, 1568, 1569, 1570, 1571, 1572, 1573, 1578, 1584, 1585, 1587, 1588, 1589, 1593, 1604, 1611, 1612, 1614, 1615, 1616, 1618, 1619, 1620, 1644, 1648, 1663, 1665, 1666, 1669, 1675, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1693, 1695, 1702, 1719, 1726, 1728, 1730, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1785, 1790, 1791, 1792, 1811, 1813, 1817, 1825, 1828, 1836, 1842, 1863, 1866, 1867, 1871, 1874, 1879, 1882, 1886, 1901, 1902, 1918, 1919, 1920, 1921, 1923, 1926, 1933, 1934, 1935, 1936, 1958, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1985, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2051, 2052, 2053, 2054, 2055, 2056, 2057], "chosen": [0, 54, 1086, 1272, 1425, 1644, 1833, 1858, 1905, 1980, 1986, 1990, 1992, 2001, 2009, 2015, 2054], "improv": [0, 1, 3, 9, 14, 19, 22, 25, 46, 49, 58, 756, 800, 801, 802, 904, 906, 910, 984, 1204, 1425, 1439, 1458, 1503, 1534, 1644, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1769, 1960, 1961, 1986, 1991, 1992, 1993, 2002, 2003, 2007, 2015, 2016, 2020, 2044, 2048, 2050, 2052, 2054, 2056], "perform": [0, 1, 2, 3, 4, 5, 11, 14, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 42, 43, 46, 49, 53, 57, 58, 77, 115, 202, 205, 454, 482, 576, 599, 613, 682, 683, 684, 685, 686, 687, 756, 777, 800, 801, 802, 843, 854, 857, 896, 899, 901, 904, 906, 907, 910, 911, 915, 936, 948, 968, 981, 982, 1006, 1055, 1079, 1080, 1093, 1118, 1141, 1143, 1155, 1156, 1159, 1169, 1183, 1215, 1250, 1260, 1261, 1266, 1294, 1296, 1299, 1303, 1306, 1307, 1311, 1312, 1320, 1321, 1323, 1328, 1337, 1350, 1355, 1365, 1366, 1376, 1379, 1382, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1427, 1430, 1431, 1439, 1458, 1488, 1494, 1496, 1503, 1516, 1531, 1534, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1612, 1630, 1644, 1650, 1651, 1666, 1675, 1677, 1678, 1690, 1695, 1716, 1723, 1725, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1775, 1783, 1811, 1825, 1829, 1856, 1862, 1863, 1864, 1865, 1885, 1887, 1923, 1960, 1961, 1964, 1968, 1972, 1975, 1976, 1977, 1978, 1979, 1981, 1985, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 2000, 2001, 2002, 2003, 2009, 2011, 2012, 2014, 2015, 2016, 2018, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2031, 2035, 2038, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2048, 2050, 2055, 2056], "while": [0, 2, 3, 5, 7, 8, 11, 14, 21, 22, 25, 26, 27, 31, 44, 46, 47, 49, 54, 57, 58, 81, 691, 692, 731, 850, 880, 888, 901, 902, 1002, 1073, 1156, 1168, 1213, 1250, 1253, 1266, 1267, 1323, 1380, 1392, 1408, 1448, 1450, 1451, 1452, 1458, 1488, 1494, 1506, 1519, 1527, 1531, 1535, 1612, 1669, 1675, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1730, 1821, 1829, 1928, 1965, 1970, 1971, 1979, 1980, 1986, 1987, 1990, 1992, 1993, 1994, 1995, 1996, 1999, 2001, 2003, 2004, 2009, 2011, 2013, 2015, 2018, 2020, 2022, 2024, 2025, 2026, 2028, 2029, 2030, 2043, 2044, 2045, 2047, 2048, 2054], "maintain": [0, 7, 8, 21, 22, 25, 31, 46, 49, 53, 58, 924, 1173, 1396, 1427, 1432, 1586, 1675, 1716, 1730, 1960, 1980, 1986, 1987, 1990, 1992, 1999, 2007, 2015, 2042, 2043, 2047], "accuraci": [0, 22, 968, 1172, 1314, 1644, 1829, 1960, 1975, 1986, 1999, 2029, 2033, 2044], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 17, 20, 21, 25, 26, 27, 31, 34, 42, 43, 45, 46, 49, 54, 55, 56, 57, 58, 85, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 122, 124, 125, 128, 130, 131, 132, 133, 134, 136, 138, 140, 141, 144, 146, 147, 149, 150, 151, 152, 153, 155, 157, 159, 161, 163, 165, 166, 167, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 185, 188, 189, 193, 195, 196, 198, 200, 201, 203, 206, 207, 208, 210, 213, 214, 216, 220, 221, 222, 223, 224, 225, 226, 230, 231, 233, 235, 236, 237, 239, 241, 242, 244, 246, 248, 251, 252, 257, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 274, 276, 277, 278, 280, 283, 284, 287, 289, 291, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 309, 317, 318, 319, 320, 321, 323, 324, 330, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 355, 357, 359, 361, 363, 365, 366, 368, 370, 374, 375, 376, 377, 378, 380, 382, 384, 386, 388, 389, 390, 392, 393, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 420, 421, 423, 425, 426, 427, 428, 429, 430, 434, 436, 438, 446, 448, 449, 451, 453, 455, 456, 457, 458, 460, 461, 463, 464, 466, 473, 475, 476, 478, 480, 482, 483, 484, 485, 487, 489, 490, 491, 493, 494, 495, 497, 498, 501, 502, 503, 506, 511, 513, 514, 515, 517, 519, 520, 521, 522, 524, 526, 527, 529, 531, 534, 535, 536, 538, 539, 543, 544, 546, 548, 550, 551, 552, 557, 559, 561, 563, 564, 565, 566, 568, 569, 570, 572, 574, 575, 586, 587, 588, 590, 591, 593, 595, 597, 601, 602, 605, 606, 607, 610, 611, 612, 614, 615, 616, 617, 676, 689, 691, 692, 695, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 741, 742, 744, 752, 753, 756, 757, 758, 759, 760, 761, 762, 763, 764, 767, 768, 769, 770, 775, 776, 777, 778, 779, 780, 781, 789, 836, 855, 856, 857, 858, 861, 870, 871, 872, 875, 886, 888, 889, 890, 891, 894, 895, 896, 898, 899, 901, 902, 906, 910, 911, 912, 915, 920, 921, 923, 928, 937, 939, 946, 948, 951, 965, 968, 972, 973, 986, 999, 1001, 1002, 1004, 1006, 1007, 1009, 1023, 1024, 1033, 1034, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1062, 1063, 1064, 1093, 1096, 1098, 1099, 1101, 1102, 1111, 1116, 1134, 1137, 1150, 1153, 1158, 1159, 1160, 1162, 1168, 1172, 1175, 1181, 1183, 1195, 1204, 1208, 1209, 1213, 1214, 1222, 1223, 1224, 1250, 1254, 1262, 1266, 1267, 1269, 1270, 1272, 1282, 1287, 1290, 1293, 1296, 1298, 1305, 1307, 1308, 1316, 1320, 1321, 1323, 1329, 1331, 1337, 1338, 1340, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1365, 1366, 1372, 1379, 1381, 1382, 1392, 1400, 1401, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1430, 1431, 1433, 1439, 1441, 1447, 1448, 1453, 1454, 1458, 1479, 1480, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1494, 1495, 1500, 1501, 1502, 1503, 1515, 1517, 1519, 1520, 1532, 1533, 1534, 1535, 1536, 1537, 1540, 1546, 1547, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1663, 1664, 1665, 1675, 1676, 1689, 1690, 1691, 1695, 1701, 1710, 1719, 1724, 1727, 1728, 1729, 1730, 1734, 1773, 1783, 1784, 1794, 1796, 1798, 1800, 1801, 1805, 1808, 1811, 1817, 1826, 1829, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1853, 1861, 1862, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1880, 1881, 1882, 1885, 1896, 1898, 1901, 1907, 1908, 1912, 1914, 1919, 1923, 1926, 1930, 1931, 1936, 1938, 1957, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1968, 1969, 1970, 1971, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1996, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2013, 2014, 2015, 2016, 2019, 2020, 2021, 2024, 2025, 2026, 2027, 2028, 2030, 2031, 2032, 2035, 2037, 2040, 2041, 2042, 2045, 2046, 2047, 2048, 2052, 2053, 2054, 2055, 2056, 2057], "detail": [0, 1, 2, 3, 7, 8, 11, 13, 14, 15, 17, 18, 21, 25, 26, 27, 31, 33, 43, 47, 49, 55, 58, 75, 76, 77, 146, 319, 491, 520, 610, 676, 731, 734, 735, 736, 737, 738, 739, 756, 762, 763, 764, 767, 768, 769, 770, 775, 776, 778, 779, 780, 781, 789, 855, 856, 857, 858, 869, 886, 888, 889, 890, 891, 894, 895, 896, 899, 901, 902, 915, 951, 972, 973, 986, 1004, 1006, 1007, 1009, 1023, 1024, 1033, 1044, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1062, 1063, 1064, 1081, 1098, 1137, 1160, 1195, 1199, 1200, 1204, 1231, 1238, 1250, 1254, 1266, 1287, 1290, 1308, 1315, 1323, 1329, 1331, 1351, 1374, 1392, 1396, 1406, 1418, 1419, 1420, 1424, 1430, 1431, 1432, 1433, 1435, 1436, 1439, 1458, 1488, 1494, 1500, 1501, 1503, 1515, 1536, 1546, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1594, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1666, 1671, 1672, 1675, 1676, 1719, 1729, 1737, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1756, 1761, 1773, 1785, 1817, 1828, 1853, 1862, 1908, 1919, 1923, 1926, 1959, 1961, 1962, 1963, 1964, 1968, 1971, 1974, 1976, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2002, 2003, 2004, 2009, 2012, 2013, 2014, 2015, 2017, 2019, 2020, 2021, 2022, 2024, 2026, 2028, 2029, 2030, 2031, 2032, 2036, 2047, 2051, 2054, 2055, 2056], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 57, 58, 59, 78, 80, 81, 93, 146, 187, 204, 256, 309, 317, 411, 444, 482, 483, 484, 493, 494, 509, 511, 513, 540, 556, 576, 613, 676, 682, 685, 731, 764, 765, 775, 781, 787, 789, 820, 836, 854, 861, 873, 876, 889, 896, 904, 905, 906, 907, 908, 909, 910, 911, 915, 916, 920, 921, 922, 924, 931, 936, 939, 948, 956, 959, 960, 961, 967, 968, 981, 982, 986, 1001, 1003, 1013, 1015, 1037, 1043, 1044, 1056, 1081, 1098, 1137, 1141, 1146, 1152, 1156, 1157, 1162, 1165, 1166, 1167, 1172, 1179, 1182, 1183, 1191, 1204, 1239, 1240, 1242, 1243, 1246, 1250, 1251, 1253, 1262, 1263, 1264, 1266, 1267, 1271, 1272, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1320, 1321, 1322, 1323, 1331, 1337, 1340, 1345, 1351, 1352, 1355, 1374, 1379, 1380, 1381, 1392, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1430, 1431, 1434, 1437, 1439, 1440, 1442, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1475, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1502, 1503, 1515, 1516, 1519, 1520, 1521, 1522, 1524, 1527, 1533, 1534, 1535, 1536, 1538, 1539, 1540, 1541, 1542, 1548, 1558, 1560, 1561, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1585, 1591, 1593, 1602, 1604, 1605, 1629, 1632, 1634, 1637, 1638, 1644, 1652, 1663, 1664, 1665, 1666, 1675, 1676, 1677, 1678, 1682, 1683, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1719, 1724, 1728, 1729, 1730, 1731, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1775, 1782, 1785, 1786, 1808, 1814, 1821, 1826, 1829, 1835, 1853, 1859, 1863, 1865, 1866, 1867, 1871, 1877, 1882, 1886, 1896, 1901, 1903, 1908, 1912, 1914, 1923, 1924, 1935, 1938, 1959, 1960, 1961, 1963, 1968, 1970, 1973, 1975, 1977, 1978, 1979, 1985, 1988, 1989, 1990, 1991, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2007, 2011, 2012, 2013, 2014, 2019, 2020, 2021, 2022, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2036, 2040, 2041, 2042, 2043, 2045, 2047, 2048, 2050, 2052, 2053, 2054, 2056], "enter": [0, 25, 891, 892, 893, 911, 1992], "tensor": [0, 2, 5, 7, 8, 12, 14, 17, 18, 21, 22, 24, 25, 26, 27, 29, 31, 32, 47, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 84, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 716, 728, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 746, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 780, 781, 782, 783, 784, 785, 786, 790, 794, 795, 796, 797, 798, 815, 816, 817, 818, 820, 821, 823, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 918, 920, 921, 922, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 973, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 998, 1011, 1012, 1013, 1014, 1015, 1022, 1030, 1031, 1037, 1041, 1044, 1047, 1051, 1062, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1172, 1176, 1192, 1193, 1194, 1195, 1196, 1197, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1232, 1235, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1251, 1253, 1254, 1256, 1257, 1258, 1261, 1262, 1264, 1266, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1363, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1396, 1397, 1400, 1401, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1439, 1440, 1441, 1447, 1453, 1454, 1458, 1459, 1475, 1478, 1479, 1480, 1481, 1484, 1485, 1486, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1503, 1505, 1509, 1510, 1511, 1512, 1513, 1514, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1548, 1549, 1550, 1552, 1553, 1554, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1830, 1833, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1946, 1957, 1958, 1960, 1961, 1963, 1964, 1968, 1971, 1981, 1985, 1986, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003, 2005, 2007, 2010, 2011, 2012, 2013, 2014, 2016, 2019, 2020, 2021, 2025, 2026, 2029, 2031, 2033, 2034, 2035, 2036, 2039, 2040, 2041, 2042, 2044, 2046, 2047, 2049, 2053, 2054, 2055, 2056], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 14, 18, 21, 22, 25, 26, 27, 29, 31, 33, 35, 36, 40, 41, 42, 43, 45, 46, 47, 49, 54, 57, 58, 84, 146, 250, 482, 495, 541, 613, 693, 754, 777, 788, 789, 790, 796, 806, 807, 808, 809, 811, 812, 813, 814, 819, 820, 822, 850, 861, 885, 886, 887, 889, 896, 899, 901, 902, 904, 910, 915, 916, 924, 944, 950, 954, 955, 981, 1001, 1037, 1044, 1055, 1099, 1100, 1101, 1114, 1115, 1117, 1118, 1119, 1121, 1125, 1129, 1130, 1131, 1146, 1155, 1156, 1163, 1164, 1165, 1167, 1172, 1175, 1179, 1213, 1249, 1250, 1254, 1257, 1261, 1262, 1264, 1266, 1272, 1280, 1282, 1286, 1287, 1291, 1296, 1297, 1298, 1303, 1304, 1307, 1311, 1314, 1320, 1322, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1400, 1401, 1405, 1406, 1415, 1416, 1417, 1424, 1425, 1429, 1433, 1434, 1437, 1438, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1453, 1454, 1474, 1475, 1477, 1478, 1479, 1487, 1488, 1496, 1498, 1499, 1502, 1506, 1507, 1508, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1537, 1538, 1539, 1564, 1568, 1569, 1570, 1610, 1630, 1631, 1644, 1666, 1675, 1682, 1683, 1694, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1707, 1717, 1718, 1720, 1723, 1725, 1730, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1761, 1801, 1817, 1831, 1833, 1886, 1935, 1947, 1959, 1961, 1962, 1963, 1968, 1971, 1972, 1973, 1974, 1975, 1977, 1978, 1979, 1980, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2006, 2007, 2009, 2010, 2011, 2012, 2013, 2015, 2020, 2021, 2022, 2024, 2026, 2029, 2031, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2046, 2047, 2049, 2050, 2052, 2053, 2054, 2055, 2056], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 14, 15, 17, 20, 21, 22, 25, 29, 30, 31, 33, 34, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 70, 71, 78, 79, 146, 250, 331, 444, 482, 484, 495, 676, 685, 730, 731, 744, 753, 777, 885, 886, 887, 888, 889, 896, 898, 899, 901, 902, 904, 905, 906, 910, 911, 922, 950, 968, 999, 1022, 1033, 1035, 1044, 1045, 1065, 1098, 1155, 1156, 1159, 1160, 1161, 1162, 1167, 1169, 1171, 1172, 1182, 1250, 1254, 1255, 1263, 1266, 1267, 1268, 1296, 1314, 1322, 1345, 1352, 1355, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1458, 1484, 1485, 1486, 1488, 1493, 1494, 1495, 1503, 1522, 1531, 1533, 1535, 1540, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1604, 1610, 1644, 1662, 1663, 1666, 1675, 1690, 1717, 1725, 1727, 1728, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1767, 1785, 1808, 1817, 1825, 1868, 1869, 1870, 1872, 1873, 1877, 1924, 1926, 1935, 1946, 1959, 1961, 1963, 1964, 1966, 1968, 1971, 1972, 1973, 1975, 1977, 1978, 1980, 1985, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2024, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2036, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059], "should": [0, 1, 3, 4, 5, 9, 14, 15, 18, 21, 22, 25, 26, 27, 29, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 47, 49, 53, 54, 57, 58, 60, 65, 66, 69, 80, 115, 146, 150, 309, 317, 394, 398, 411, 441, 442, 443, 444, 445, 483, 484, 492, 509, 511, 513, 579, 580, 581, 583, 584, 682, 685, 686, 731, 756, 768, 769, 770, 789, 792, 796, 813, 820, 834, 835, 850, 851, 852, 855, 861, 885, 886, 887, 888, 889, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 910, 920, 921, 936, 937, 938, 939, 946, 959, 974, 988, 1001, 1004, 1014, 1015, 1033, 1035, 1044, 1089, 1099, 1100, 1101, 1111, 1116, 1119, 1120, 1121, 1129, 1130, 1131, 1134, 1149, 1152, 1153, 1154, 1156, 1157, 1161, 1165, 1166, 1167, 1171, 1175, 1177, 1208, 1209, 1212, 1213, 1247, 1248, 1250, 1251, 1255, 1260, 1262, 1263, 1266, 1267, 1268, 1270, 1295, 1320, 1321, 1322, 1328, 1337, 1340, 1341, 1342, 1362, 1392, 1400, 1401, 1405, 1421, 1423, 1424, 1426, 1427, 1428, 1431, 1432, 1453, 1458, 1480, 1488, 1494, 1495, 1496, 1510, 1515, 1536, 1540, 1558, 1564, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1585, 1593, 1644, 1666, 1668, 1669, 1670, 1673, 1674, 1675, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1716, 1717, 1718, 1721, 1723, 1734, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1785, 1787, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1808, 1824, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1868, 1869, 1870, 1871, 1872, 1873, 1886, 1901, 1910, 1935, 1940, 1957, 1958, 1959, 1960, 1961, 1963, 1964, 1968, 1970, 1971, 1972, 1974, 1975, 1977, 1979, 1980, 1985, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1999, 2001, 2002, 2003, 2005, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2020, 2022, 2024, 2028, 2029, 2031, 2036, 2038, 2040, 2041, 2043, 2044, 2046, 2047, 2048, 2050, 2052, 2053, 2054, 2055], "call": [0, 1, 2, 3, 8, 11, 14, 15, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 42, 44, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 60, 62, 69, 76, 82, 146, 286, 319, 331, 454, 482, 483, 484, 552, 576, 610, 613, 676, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 777, 786, 793, 820, 853, 857, 858, 889, 896, 897, 898, 899, 900, 901, 902, 904, 906, 907, 910, 911, 920, 921, 922, 924, 931, 935, 951, 968, 973, 974, 976, 999, 1002, 1004, 1033, 1035, 1045, 1046, 1055, 1062, 1063, 1065, 1066, 1096, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1150, 1155, 1156, 1167, 1195, 1214, 1235, 1247, 1250, 1253, 1255, 1261, 1262, 1263, 1270, 1306, 1314, 1318, 1320, 1322, 1323, 1352, 1396, 1402, 1403, 1404, 1424, 1425, 1426, 1427, 1428, 1430, 1432, 1434, 1473, 1484, 1485, 1486, 1488, 1495, 1496, 1516, 1527, 1539, 1571, 1572, 1573, 1579, 1580, 1581, 1586, 1604, 1644, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1682, 1683, 1692, 1695, 1702, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1718, 1724, 1725, 1727, 1728, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1798, 1825, 1831, 1832, 1861, 1880, 1881, 1882, 1903, 1919, 1923, 1924, 1926, 1930, 1931, 1935, 1936, 1959, 1961, 1965, 1968, 1972, 1975, 1977, 1979, 1980, 1981, 1986, 1987, 1989, 1990, 1991, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2033, 2035, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2053, 2054, 2055, 2056, 2057], "model": [0, 1, 2, 3, 4, 5, 8, 9, 12, 22, 25, 26, 27, 29, 30, 31, 41, 43, 45, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 78, 79, 788, 789, 790, 793, 794, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 820, 821, 822, 832, 833, 834, 835, 850, 853, 854, 855, 856, 857, 858, 859, 911, 924, 968, 1045, 1065, 1155, 1156, 1157, 1165, 1167, 1250, 1254, 1255, 1260, 1262, 1266, 1268, 1322, 1392, 1424, 1441, 1452, 1453, 1488, 1494, 1516, 1527, 1531, 1533, 1534, 1535, 1592, 1675, 1676, 1682, 1683, 1688, 1690, 1693, 1706, 1725, 1726, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1752, 1753, 1754, 1755, 1756, 1761, 1767, 1769, 1882, 1935, 1960, 1961, 1963, 1964, 1965, 1972, 1973, 1974, 1980, 1987, 1989, 1990, 1991, 1992, 1995, 1997, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2009, 2014, 2016, 2020, 2021, 2023, 2024, 2025, 2029, 2033, 2034, 2035, 2038, 2039, 2040, 2043, 2044, 2045, 2047, 2050, 2052, 2054], "": [0, 1, 2, 3, 4, 7, 8, 9, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 38, 39, 40, 42, 43, 46, 47, 49, 51, 53, 54, 57, 58, 76, 77, 82, 83, 459, 477, 489, 492, 509, 540, 554, 577, 620, 676, 685, 689, 690, 691, 692, 695, 731, 756, 789, 790, 791, 797, 811, 812, 813, 816, 819, 822, 850, 857, 858, 871, 873, 874, 875, 876, 895, 896, 897, 898, 901, 905, 906, 908, 916, 935, 952, 954, 967, 980, 981, 982, 983, 988, 997, 999, 1001, 1005, 1020, 1024, 1033, 1035, 1040, 1041, 1044, 1045, 1046, 1065, 1066, 1067, 1073, 1090, 1093, 1095, 1096, 1098, 1112, 1113, 1115, 1116, 1117, 1120, 1121, 1123, 1124, 1127, 1128, 1130, 1131, 1132, 1133, 1135, 1137, 1138, 1139, 1140, 1141, 1144, 1145, 1146, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1165, 1167, 1168, 1172, 1195, 1204, 1212, 1213, 1214, 1237, 1239, 1247, 1248, 1250, 1254, 1261, 1262, 1266, 1281, 1282, 1292, 1293, 1294, 1296, 1299, 1303, 1305, 1307, 1308, 1312, 1313, 1314, 1315, 1320, 1322, 1323, 1338, 1345, 1350, 1352, 1355, 1357, 1358, 1362, 1365, 1366, 1369, 1378, 1379, 1382, 1384, 1390, 1391, 1392, 1400, 1401, 1402, 1403, 1404, 1407, 1424, 1430, 1441, 1488, 1489, 1494, 1498, 1504, 1516, 1519, 1521, 1527, 1531, 1533, 1535, 1541, 1542, 1565, 1566, 1577, 1590, 1593, 1604, 1605, 1610, 1644, 1650, 1663, 1666, 1675, 1676, 1682, 1683, 1695, 1706, 1719, 1723, 1730, 1731, 1736, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1761, 1773, 1775, 1779, 1786, 1801, 1804, 1805, 1808, 1809, 1810, 1812, 1814, 1821, 1828, 1829, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1880, 1881, 1882, 1885, 1886, 1887, 1888, 1889, 1898, 1902, 1904, 1910, 1926, 1930, 1931, 1932, 1935, 1936, 1941, 1944, 1950, 1952, 1955, 1959, 1961, 1962, 1963, 1964, 1965, 1968, 1970, 1971, 1974, 1975, 1976, 1977, 1978, 1979, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2004, 2005, 2006, 2007, 2009, 2010, 2011, 2013, 2014, 2015, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2036, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2049, 2050, 2052, 2053, 2054, 2055], "wrap": [0, 1, 15, 21, 22, 25, 29, 35, 44, 46, 49, 53, 54, 56, 58, 60, 256, 786, 787, 1002, 1073, 1156, 1172, 1250, 1266, 1424, 1488, 1527, 1670, 1675, 1693, 1719, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1955, 1961, 1962, 1964, 1971, 1986, 1987, 1990, 1991, 1992, 1993, 1999, 2005, 2009, 2013, 2014, 2015, 2020, 2021, 2032, 2034, 2040, 2041, 2044, 2047, 2054, 2055], "forward": [0, 5, 7, 8, 12, 14, 22, 25, 26, 29, 31, 46, 47, 49, 50, 51, 53, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 146, 217, 218, 676, 731, 744, 753, 756, 796, 811, 812, 813, 816, 820, 857, 858, 885, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 906, 907, 910, 911, 912, 913, 915, 980, 1044, 1090, 1102, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1156, 1158, 1159, 1160, 1162, 1165, 1250, 1253, 1254, 1255, 1257, 1261, 1262, 1266, 1267, 1268, 1396, 1400, 1402, 1403, 1404, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1439, 1458, 1473, 1484, 1485, 1486, 1488, 1489, 1490, 1494, 1495, 1498, 1499, 1503, 1504, 1516, 1531, 1532, 1533, 1534, 1535, 1579, 1580, 1581, 1586, 1632, 1666, 1669, 1670, 1675, 1693, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1713, 1724, 1727, 1728, 1792, 1859, 1923, 1960, 1961, 1963, 1964, 1970, 1973, 1977, 1979, 1985, 1986, 1987, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1998, 1999, 2002, 2004, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2020, 2032, 2033, 2034, 2035, 2036, 2039, 2040, 2041, 2044, 2047, 2048, 2049, 2050, 2052, 2053, 2054], "pass": [0, 1, 3, 5, 6, 7, 14, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 54, 57, 58, 60, 68, 69, 75, 82, 146, 250, 444, 484, 509, 511, 513, 540, 556, 676, 789, 790, 819, 822, 855, 857, 876, 885, 886, 887, 888, 889, 896, 899, 901, 902, 910, 952, 968, 975, 999, 1033, 1044, 1088, 1119, 1120, 1121, 1129, 1130, 1131, 1137, 1150, 1152, 1155, 1156, 1160, 1161, 1162, 1165, 1166, 1172, 1179, 1186, 1187, 1213, 1248, 1250, 1251, 1254, 1256, 1260, 1262, 1266, 1267, 1295, 1311, 1313, 1322, 1369, 1392, 1393, 1394, 1395, 1402, 1403, 1404, 1424, 1430, 1431, 1435, 1436, 1488, 1493, 1494, 1516, 1532, 1533, 1534, 1535, 1540, 1558, 1588, 1589, 1593, 1604, 1605, 1632, 1644, 1666, 1669, 1670, 1675, 1693, 1695, 1697, 1702, 1716, 1719, 1723, 1725, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1817, 1821, 1825, 1886, 1959, 1961, 1965, 1968, 1972, 1973, 1975, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1989, 1991, 1992, 1993, 1995, 1996, 1998, 1999, 2002, 2004, 2007, 2009, 2011, 2012, 2013, 2020, 2022, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2034, 2035, 2040, 2041, 2042, 2043, 2044, 2047, 2051, 2054, 2055], "e": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 21, 22, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 56, 57, 58, 59, 60, 68, 69, 146, 254, 331, 373, 482, 576, 613, 731, 744, 753, 756, 789, 790, 811, 813, 850, 854, 855, 857, 858, 876, 885, 889, 896, 898, 901, 902, 911, 915, 916, 935, 947, 949, 952, 980, 1030, 1044, 1069, 1098, 1108, 1149, 1156, 1161, 1165, 1168, 1172, 1177, 1182, 1185, 1201, 1229, 1230, 1232, 1235, 1247, 1250, 1257, 1258, 1266, 1286, 1287, 1302, 1314, 1322, 1323, 1324, 1326, 1328, 1345, 1356, 1400, 1401, 1402, 1403, 1404, 1407, 1415, 1416, 1417, 1423, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1439, 1442, 1447, 1450, 1451, 1452, 1453, 1454, 1458, 1460, 1461, 1462, 1463, 1479, 1488, 1489, 1494, 1495, 1497, 1498, 1502, 1503, 1519, 1527, 1531, 1535, 1536, 1537, 1539, 1568, 1569, 1570, 1577, 1584, 1585, 1593, 1604, 1637, 1644, 1663, 1665, 1666, 1675, 1676, 1677, 1678, 1682, 1683, 1690, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1716, 1717, 1723, 1727, 1730, 1742, 1743, 1755, 1778, 1789, 1807, 1814, 1821, 1825, 1829, 1831, 1836, 1871, 1882, 1886, 1959, 1961, 1963, 1964, 1965, 1968, 1971, 1972, 1973, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1997, 1998, 1999, 2002, 2004, 2007, 2009, 2011, 2012, 2014, 2015, 2020, 2021, 2022, 2024, 2025, 2027, 2028, 2029, 2031, 2039, 2042, 2043, 2044, 2047, 2052, 2054, 2055, 2057], "network": [0, 1, 7, 8, 15, 29, 31, 42, 837, 1044, 1250, 1266, 1267, 1396, 1402, 1403, 1404, 1407, 1418, 1419, 1420, 1424, 1425, 1426, 1427, 1428, 1429, 1432, 1441, 1453, 1458, 1488, 1495, 1500, 1501, 1506, 1515, 1517, 1527, 1531, 1533, 1535, 1558, 1592, 1593, 1647, 1666, 1690, 1693, 1719, 1724, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1761, 1767, 1961, 1963, 1964, 1985, 1986, 1992, 2002, 2003, 2006, 2009, 2011, 2015, 2020, 2021, 2022, 2042], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 14, 15, 21, 22, 25, 27, 39, 42, 43, 46, 47, 49, 58, 77, 79, 317, 484, 513, 579, 764, 765, 855, 857, 970, 1126, 1128, 1212, 1248, 1250, 1251, 1280, 1359, 1360, 1397, 1398, 1399, 1405, 1407, 1424, 1433, 1441, 1475, 1484, 1485, 1486, 1488, 1494, 1531, 1532, 1533, 1534, 1535, 1538, 1548, 1560, 1561, 1562, 1577, 1590, 1610, 1675, 1682, 1683, 1717, 1718, 1720, 1849, 1911, 1912, 1913, 1914, 1959, 1961, 1963, 1964, 1971, 1973, 1975, 1977, 1987, 1989, 1990, 1994, 1995, 1998, 1999, 2004, 2006, 2009, 2011, 2014, 2015, 2020, 2022, 2029, 2032, 2035, 2036, 2038, 2040, 2041, 2043, 2044, 2045, 2050, 2051, 2052, 2054, 2055, 2056], "loss": [0, 1, 22, 25, 26, 29, 31, 49, 1157, 1247, 1286, 1287, 1296, 1314, 1392, 1400, 1401, 1407, 1421, 1423, 1430, 1441, 1447, 1448, 1453, 1454, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1536, 1537, 1565, 1566, 1576, 1577, 1590, 1602, 1605, 1629, 1637, 1648, 1660, 1661, 1675, 1717, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1752, 1753, 1754, 1755, 1756, 1760, 1769, 1829, 1959, 1960, 1975, 1979, 1987, 1990, 1991, 1994, 1996, 1999, 2011, 2015, 2016, 2020, 2021, 2029], "comput": [0, 3, 5, 7, 8, 11, 14, 17, 21, 22, 25, 27, 30, 31, 33, 35, 46, 47, 49, 50, 51, 53, 146, 286, 482, 483, 491, 676, 677, 679, 693, 694, 756, 764, 765, 796, 798, 815, 816, 817, 818, 820, 821, 885, 889, 891, 892, 894, 896, 897, 898, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 920, 921, 940, 941, 942, 943, 944, 945, 956, 958, 959, 960, 961, 967, 982, 984, 998, 1041, 1044, 1075, 1081, 1090, 1092, 1095, 1098, 1102, 1103, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1141, 1143, 1144, 1145, 1147, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1172, 1193, 1194, 1195, 1204, 1207, 1210, 1211, 1212, 1213, 1227, 1250, 1253, 1262, 1270, 1271, 1273, 1275, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1323, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1349, 1350, 1351, 1354, 1379, 1381, 1385, 1392, 1396, 1397, 1398, 1399, 1402, 1403, 1404, 1418, 1419, 1420, 1422, 1423, 1425, 1430, 1431, 1439, 1442, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1478, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1494, 1495, 1497, 1502, 1503, 1521, 1523, 1527, 1536, 1537, 1540, 1560, 1561, 1562, 1575, 1576, 1584, 1585, 1592, 1593, 1595, 1602, 1604, 1605, 1612, 1618, 1619, 1620, 1621, 1622, 1623, 1629, 1634, 1637, 1644, 1648, 1650, 1651, 1660, 1661, 1666, 1669, 1675, 1676, 1680, 1682, 1683, 1684, 1686, 1689, 1691, 1693, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1709, 1710, 1717, 1723, 1727, 1728, 1730, 1740, 1742, 1743, 1744, 1746, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1779, 1785, 1786, 1790, 1791, 1805, 1806, 1829, 1836, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1859, 1862, 1863, 1864, 1865, 1882, 1886, 1887, 1903, 1908, 1932, 1935, 1960, 1961, 1964, 1971, 1972, 1975, 1978, 1979, 1981, 1986, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2006, 2007, 2009, 2011, 2015, 2018, 2020, 2024, 2025, 2030, 2033, 2036, 2038, 2039, 2041, 2042, 2043, 2046, 2053, 2056], "backward": [0, 1, 5, 9, 25, 26, 27, 29, 31, 46, 49, 53, 54, 58, 60, 286, 331, 483, 484, 492, 499, 500, 509, 511, 513, 577, 676, 682, 685, 756, 811, 812, 813, 886, 894, 895, 896, 897, 898, 899, 900, 901, 902, 905, 907, 910, 913, 915, 920, 921, 931, 936, 948, 973, 1044, 1102, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1155, 1156, 1250, 1323, 1331, 1345, 1355, 1400, 1401, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1430, 1439, 1440, 1441, 1454, 1458, 1459, 1475, 1479, 1480, 1488, 1494, 1495, 1502, 1503, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1565, 1566, 1576, 1577, 1593, 1604, 1629, 1632, 1667, 1671, 1672, 1675, 1695, 1728, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1760, 1773, 1785, 1859, 1863, 1867, 1886, 1923, 1959, 1960, 1962, 1964, 1970, 1979, 1980, 1985, 1986, 1991, 1992, 1993, 1994, 1995, 1998, 1999, 2001, 2002, 2007, 2011, 2012, 2014, 2015, 2020, 2024, 2025, 2030, 2035, 2036, 2039, 2040, 2044, 2048, 2050, 2052, 2053, 2054], "under": [0, 1, 3, 4, 5, 9, 21, 25, 42, 46, 49, 50, 52, 54, 57, 77, 911, 915, 927, 953, 1171, 1250, 1407, 1488, 1558, 1584, 1585, 1689, 1692, 1695, 1737, 1806, 1968, 1977, 1986, 1987, 1990, 1991, 1993, 1995, 1996, 2001, 2007, 2012, 2013, 2015, 2018, 2019, 2022, 2025, 2029, 2032, 2034, 2041, 2042, 2043, 2047, 2049, 2052, 2054], "recommend": [0, 1, 5, 21, 22, 25, 27, 30, 31, 33, 42, 43, 49, 53, 57, 58, 60, 80, 81, 83, 444, 889, 976, 981, 982, 1119, 1120, 1121, 1129, 1130, 1131, 1237, 1253, 1296, 1323, 1369, 1392, 1424, 1605, 1675, 1792, 1919, 1924, 1959, 1961, 1968, 1974, 1977, 1979, 1985, 1986, 1987, 1989, 1990, 1992, 1993, 1999, 2001, 2002, 2004, 2007, 2009, 2012, 2015, 2030, 2045], "same": [0, 1, 3, 7, 12, 14, 15, 17, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 39, 40, 42, 43, 44, 45, 46, 47, 49, 52, 54, 57, 58, 60, 68, 69, 135, 149, 191, 217, 251, 307, 309, 311, 315, 317, 335, 441, 442, 443, 444, 445, 467, 479, 482, 493, 494, 496, 509, 511, 513, 516, 540, 576, 613, 614, 682, 685, 689, 691, 692, 693, 695, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 754, 757, 758, 759, 760, 761, 775, 781, 784, 785, 789, 790, 792, 796, 798, 810, 815, 818, 820, 821, 855, 857, 874, 875, 876, 888, 894, 896, 898, 901, 902, 904, 905, 906, 907, 908, 909, 915, 916, 936, 938, 939, 948, 950, 952, 955, 960, 961, 962, 968, 971, 977, 980, 998, 999, 1001, 1012, 1014, 1033, 1044, 1081, 1086, 1088, 1089, 1095, 1098, 1100, 1101, 1104, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1146, 1151, 1152, 1154, 1155, 1156, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1192, 1195, 1204, 1212, 1213, 1221, 1225, 1241, 1247, 1250, 1256, 1261, 1262, 1266, 1267, 1271, 1272, 1280, 1281, 1282, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1318, 1338, 1342, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1356, 1379, 1382, 1383, 1384, 1390, 1391, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1437, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1460, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1494, 1496, 1497, 1502, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1539, 1540, 1543, 1544, 1545, 1558, 1564, 1565, 1566, 1568, 1569, 1570, 1576, 1585, 1593, 1595, 1604, 1605, 1644, 1663, 1671, 1672, 1675, 1682, 1683, 1689, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1716, 1720, 1725, 1730, 1731, 1735, 1738, 1773, 1778, 1779, 1782, 1783, 1795, 1797, 1799, 1803, 1805, 1807, 1808, 1812, 1814, 1821, 1824, 1825, 1829, 1836, 1841, 1859, 1868, 1869, 1870, 1872, 1873, 1879, 1880, 1881, 1885, 1886, 1897, 1908, 1919, 1920, 1921, 1922, 1923, 1930, 1931, 1932, 1935, 1958, 1959, 1961, 1963, 1964, 1968, 1972, 1975, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2001, 2002, 2003, 2004, 2007, 2009, 2011, 2012, 2013, 2015, 2018, 2020, 2021, 2022, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2033, 2034, 2038, 2039, 2040, 2042, 2043, 2044, 2047, 2050, 2052, 2053, 2054, 2055], "correspond": [0, 1, 7, 18, 21, 22, 25, 27, 29, 30, 31, 42, 46, 49, 56, 58, 78, 411, 469, 470, 509, 511, 513, 540, 541, 676, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 731, 789, 793, 832, 834, 853, 854, 855, 860, 876, 885, 887, 888, 889, 896, 898, 901, 902, 904, 906, 915, 935, 983, 1044, 1064, 1093, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1170, 1172, 1204, 1213, 1239, 1250, 1267, 1281, 1286, 1287, 1292, 1295, 1314, 1321, 1323, 1337, 1352, 1374, 1401, 1424, 1430, 1458, 1488, 1494, 1510, 1534, 1584, 1593, 1631, 1675, 1690, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1724, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1761, 1778, 1779, 1789, 1812, 1821, 1836, 1871, 1880, 1881, 1886, 1918, 1921, 1922, 1930, 1931, 1959, 1961, 1962, 1964, 1968, 1975, 1978, 1979, 1986, 1987, 1990, 1991, 1992, 1993, 1995, 1996, 1998, 1999, 2003, 2007, 2009, 2012, 2014, 2015, 2020, 2021, 2024, 2025, 2026, 2029, 2031, 2033, 2034, 2045, 2051, 2052, 2054], "devic": [0, 1, 2, 5, 8, 14, 16, 18, 21, 22, 25, 26, 27, 29, 30, 43, 44, 47, 49, 53, 56, 57, 58, 60, 65, 69, 70, 71, 84, 192, 202, 205, 285, 309, 317, 331, 441, 442, 443, 444, 445, 511, 513, 576, 682, 685, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 745, 746, 747, 748, 749, 750, 751, 861, 873, 875, 876, 904, 906, 933, 936, 937, 939, 946, 948, 973, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1022, 1026, 1027, 1028, 1030, 1031, 1039, 1041, 1042, 1043, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1074, 1075, 1076, 1099, 1100, 1101, 1111, 1116, 1134, 1150, 1153, 1154, 1197, 1208, 1209, 1250, 1254, 1258, 1261, 1264, 1270, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1305, 1308, 1309, 1311, 1312, 1314, 1315, 1321, 1322, 1337, 1340, 1345, 1351, 1355, 1362, 1369, 1371, 1392, 1402, 1403, 1404, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1430, 1431, 1439, 1440, 1442, 1450, 1451, 1452, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1488, 1494, 1496, 1503, 1504, 1505, 1527, 1531, 1533, 1535, 1547, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1585, 1604, 1610, 1644, 1659, 1663, 1664, 1665, 1666, 1675, 1677, 1678, 1680, 1681, 1682, 1683, 1716, 1723, 1729, 1731, 1734, 1735, 1745, 1785, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1825, 1829, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1863, 1864, 1868, 1869, 1870, 1871, 1872, 1873, 1886, 1901, 1903, 1912, 1914, 1923, 1924, 1926, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1953, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1966, 1968, 1973, 1978, 1980, 1986, 1991, 1992, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2003, 2004, 2007, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2019, 2020, 2024, 2026, 2030, 2031, 2036, 2039, 2041, 2043, 2044, 2046, 2049, 2051, 2052, 2054, 2056], "creat": [0, 1, 3, 5, 6, 7, 9, 14, 21, 22, 25, 27, 29, 31, 33, 34, 40, 42, 43, 44, 45, 46, 47, 49, 57, 58, 60, 80, 81, 83, 84, 146, 218, 250, 331, 482, 576, 577, 579, 580, 581, 583, 584, 676, 728, 734, 735, 736, 741, 742, 752, 760, 788, 789, 790, 810, 811, 812, 813, 815, 820, 850, 874, 875, 876, 889, 894, 910, 911, 912, 913, 935, 947, 949, 960, 961, 965, 966, 968, 983, 1009, 1041, 1042, 1051, 1086, 1101, 1150, 1151, 1152, 1153, 1172, 1173, 1174, 1177, 1247, 1250, 1253, 1263, 1269, 1274, 1280, 1281, 1287, 1289, 1308, 1321, 1337, 1352, 1374, 1400, 1421, 1430, 1431, 1434, 1448, 1454, 1479, 1480, 1488, 1491, 1492, 1493, 1516, 1519, 1520, 1527, 1536, 1537, 1539, 1547, 1549, 1550, 1675, 1695, 1716, 1723, 1728, 1736, 1737, 1756, 1824, 1825, 1854, 1866, 1871, 1901, 1908, 1960, 1964, 1965, 1968, 1973, 1977, 1986, 1987, 1990, 1991, 1992, 1993, 1995, 1996, 1999, 2000, 2001, 2004, 2009, 2011, 2012, 2013, 2014, 2015, 2020, 2021, 2022, 2024, 2026, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2039, 2040, 2041, 2042, 2043, 2044, 2047, 2053, 2054, 2056, 2057], "optim": [0, 1, 2, 7, 8, 11, 14, 15, 22, 25, 26, 27, 31, 47, 49, 58, 815, 915, 924, 928, 968, 971, 1098, 1165, 1172, 1250, 1254, 1260, 1262, 1266, 1267, 1306, 1323, 1402, 1403, 1404, 1423, 1430, 1450, 1451, 1452, 1488, 1491, 1492, 1493, 1494, 1520, 1527, 1535, 1644, 1666, 1675, 1682, 1683, 1689, 1695, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1775, 1960, 1961, 1963, 1973, 1979, 1985, 1989, 1991, 1992, 1994, 1996, 1999, 2001, 2009, 2014, 2015, 2024, 2035, 2036, 2038, 2039, 2040, 2041, 2042, 2044, 2046, 2047, 2054, 2059], "default": [0, 2, 3, 5, 9, 11, 12, 14, 18, 24, 25, 26, 27, 29, 30, 31, 33, 34, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 53, 54, 55, 56, 58, 60, 64, 65, 68, 69, 70, 71, 73, 77, 80, 81, 83, 146, 151, 166, 168, 171, 174, 175, 176, 191, 202, 205, 236, 263, 286, 293, 321, 327, 389, 411, 441, 442, 443, 444, 445, 454, 492, 495, 496, 516, 521, 576, 577, 579, 676, 690, 693, 708, 709, 710, 711, 712, 713, 716, 726, 727, 728, 729, 731, 751, 754, 756, 764, 765, 766, 768, 769, 770, 775, 781, 789, 794, 799, 804, 805, 810, 813, 815, 816, 817, 818, 821, 824, 825, 826, 827, 828, 829, 830, 831, 837, 838, 839, 840, 841, 842, 844, 845, 850, 851, 852, 854, 861, 875, 876, 889, 891, 892, 893, 896, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 935, 937, 946, 952, 956, 959, 960, 961, 965, 968, 988, 998, 1001, 1004, 1006, 1010, 1013, 1014, 1015, 1018, 1019, 1026, 1027, 1030, 1041, 1043, 1044, 1047, 1049, 1050, 1051, 1053, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1068, 1069, 1072, 1074, 1075, 1076, 1079, 1080, 1081, 1086, 1087, 1088, 1089, 1090, 1093, 1098, 1099, 1100, 1101, 1111, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1166, 1167, 1168, 1169, 1195, 1197, 1198, 1204, 1208, 1209, 1212, 1213, 1239, 1241, 1247, 1250, 1251, 1254, 1262, 1266, 1267, 1270, 1271, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1337, 1340, 1342, 1348, 1350, 1351, 1352, 1356, 1362, 1378, 1379, 1381, 1382, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1503, 1505, 1506, 1507, 1508, 1515, 1519, 1520, 1524, 1525, 1527, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1539, 1540, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1590, 1592, 1593, 1595, 1597, 1604, 1605, 1612, 1618, 1619, 1620, 1629, 1630, 1632, 1637, 1644, 1650, 1651, 1659, 1663, 1669, 1675, 1676, 1677, 1678, 1680, 1681, 1684, 1685, 1687, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1717, 1718, 1720, 1722, 1723, 1724, 1725, 1727, 1729, 1730, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1775, 1783, 1785, 1786, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1807, 1813, 1814, 1817, 1821, 1825, 1826, 1827, 1828, 1829, 1833, 1835, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1880, 1881, 1882, 1885, 1886, 1887, 1901, 1902, 1908, 1910, 1912, 1914, 1919, 1920, 1923, 1924, 1926, 1929, 1930, 1931, 1935, 1940, 1943, 1947, 1948, 1956, 1957, 1958, 1959, 1960, 1961, 1964, 1968, 1970, 1973, 1974, 1977, 1980, 1985, 1986, 1989, 1991, 1992, 1993, 1994, 1995, 1997, 1999, 2002, 2003, 2004, 2005, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2019, 2020, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2035, 2040, 2042, 2043, 2044, 2048, 2050, 2051, 2053, 2054, 2056, 2057], "net": [0, 6, 15, 33, 52, 58, 1250, 1266, 1267, 1424, 1488, 1675, 1706, 1760, 1963, 1964, 1986, 1987, 1990, 1999, 2029], "sgd": [0, 21, 22, 29, 484, 924, 1430, 1666, 1675, 1761, 1767, 1769, 1986, 1990, 1991, 1999, 2001, 2011, 2020, 2021], "paramet": [0, 1, 2, 3, 5, 11, 12, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 36, 40, 42, 44, 46, 47, 49, 51, 53, 56, 57, 58, 60, 84, 146, 151, 166, 168, 169, 171, 174, 175, 176, 191, 192, 202, 205, 229, 236, 250, 251, 256, 263, 293, 309, 311, 313, 315, 317, 321, 327, 389, 396, 398, 411, 441, 442, 443, 444, 445, 454, 467, 489, 492, 493, 494, 495, 496, 509, 511, 513, 516, 521, 533, 540, 541, 542, 556, 562, 579, 580, 581, 583, 584, 599, 600, 603, 613, 614, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746, 751, 752, 754, 755, 756, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 787, 789, 791, 793, 795, 796, 797, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 834, 835, 836, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 889, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 925, 927, 928, 931, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 974, 975, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 992, 997, 998, 999, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1022, 1026, 1027, 1028, 1030, 1033, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1053, 1055, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1108, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1172, 1178, 1187, 1190, 1192, 1193, 1194, 1195, 1204, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1221, 1225, 1227, 1229, 1230, 1232, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1257, 1258, 1261, 1262, 1263, 1264, 1266, 1267, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1358, 1362, 1364, 1365, 1366, 1369, 1370, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1590, 1592, 1593, 1595, 1597, 1604, 1605, 1612, 1618, 1619, 1620, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1644, 1650, 1651, 1659, 1663, 1664, 1665, 1666, 1669, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1816, 1817, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1856, 1858, 1859, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1890, 1891, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1943, 1944, 1946, 1947, 1948, 1949, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1964, 1966, 1968, 1972, 1973, 1974, 1977, 1979, 1980, 1981, 1985, 1986, 1987, 1990, 1991, 1992, 1995, 1997, 1998, 1999, 2001, 2003, 2004, 2007, 2009, 2012, 2013, 2014, 2015, 2019, 2020, 2021, 2024, 2025, 2026, 2029, 2031, 2033, 2034, 2036, 2044, 2053, 2055, 2056], "target": [0, 14, 29, 46, 47, 49, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 495, 731, 762, 763, 788, 793, 855, 857, 858, 953, 1157, 1250, 1260, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1400, 1401, 1407, 1421, 1423, 1435, 1436, 1441, 1447, 1448, 1453, 1454, 1479, 1480, 1484, 1485, 1486, 1488, 1491, 1492, 1493, 1494, 1495, 1502, 1519, 1520, 1531, 1540, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1565, 1566, 1574, 1576, 1577, 1588, 1589, 1590, 1601, 1602, 1605, 1606, 1617, 1625, 1626, 1627, 1628, 1629, 1637, 1644, 1648, 1649, 1675, 1755, 1923, 1962, 1964, 1986, 1987, 1990, 2001, 2007, 2009, 2011, 2012, 2015, 2016, 2020, 2029, 2033, 2036, 2040, 2041, 2042, 2047, 2053, 2054], "data": [0, 1, 2, 3, 7, 11, 12, 18, 19, 22, 25, 27, 29, 31, 32, 33, 36, 39, 42, 44, 47, 49, 53, 56, 58, 60, 61, 65, 69, 135, 146, 191, 192, 322, 325, 329, 332, 337, 441, 444, 477, 489, 493, 495, 613, 734, 735, 736, 756, 768, 769, 770, 777, 788, 789, 790, 794, 815, 816, 817, 818, 819, 821, 823, 861, 875, 876, 886, 889, 901, 922, 937, 946, 952, 1002, 1079, 1080, 1099, 1100, 1101, 1111, 1112, 1113, 1116, 1118, 1119, 1121, 1129, 1130, 1131, 1134, 1137, 1138, 1139, 1140, 1149, 1150, 1152, 1153, 1154, 1156, 1165, 1170, 1177, 1179, 1183, 1185, 1208, 1209, 1211, 1229, 1232, 1258, 1262, 1266, 1270, 1321, 1322, 1323, 1337, 1342, 1350, 1352, 1365, 1366, 1379, 1381, 1382, 1405, 1407, 1415, 1416, 1417, 1424, 1439, 1442, 1450, 1451, 1452, 1458, 1460, 1475, 1495, 1503, 1504, 1540, 1558, 1563, 1564, 1568, 1569, 1570, 1603, 1610, 1612, 1650, 1651, 1675, 1676, 1677, 1678, 1682, 1683, 1716, 1717, 1718, 1719, 1721, 1730, 1734, 1735, 1736, 1737, 1761, 1767, 1775, 1783, 1786, 1787, 1788, 1792, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1808, 1821, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1862, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1885, 1886, 1901, 1910, 1912, 1914, 1922, 1923, 1924, 1957, 1958, 1960, 1961, 1962, 1965, 1968, 1971, 1972, 1973, 1975, 1977, 1980, 1986, 1987, 1988, 1990, 1992, 1993, 1998, 2001, 2003, 2004, 2005, 2006, 2007, 2010, 2011, 2012, 2013, 2015, 2018, 2020, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2031, 2032, 2033, 2034, 2038, 2042, 2043, 2044, 2046, 2047, 2052, 2056], "zero_grad": [0, 1, 29, 1250, 1488, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1760, 1986, 1990, 1994, 1999, 2001, 2011], "output": [0, 1, 4, 5, 7, 12, 18, 21, 22, 25, 27, 29, 30, 31, 33, 39, 40, 46, 53, 54, 55, 58, 60, 69, 76, 135, 309, 317, 441, 442, 443, 445, 509, 513, 562, 613, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 716, 724, 725, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 781, 782, 783, 788, 789, 790, 792, 795, 798, 810, 813, 854, 857, 858, 859, 861, 870, 871, 874, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 896, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 936, 938, 939, 940, 941, 942, 943, 944, 945, 948, 952, 955, 956, 957, 958, 959, 960, 961, 963, 966, 980, 982, 983, 985, 986, 998, 1011, 1013, 1014, 1015, 1041, 1042, 1044, 1054, 1055, 1077, 1078, 1079, 1080, 1082, 1085, 1086, 1088, 1090, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1103, 1108, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1153, 1154, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1172, 1192, 1193, 1194, 1195, 1204, 1207, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1225, 1227, 1244, 1245, 1247, 1250, 1254, 1262, 1266, 1267, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1584, 1585, 1587, 1588, 1589, 1590, 1593, 1595, 1604, 1605, 1610, 1612, 1618, 1619, 1620, 1629, 1630, 1634, 1635, 1636, 1637, 1644, 1659, 1663, 1664, 1665, 1669, 1675, 1690, 1691, 1692, 1693, 1696, 1717, 1719, 1720, 1724, 1727, 1729, 1730, 1731, 1734, 1735, 1737, 1738, 1756, 1760, 1773, 1774, 1782, 1783, 1786, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1805, 1806, 1807, 1809, 1810, 1814, 1816, 1821, 1829, 1833, 1836, 1838, 1850, 1851, 1853, 1858, 1863, 1864, 1866, 1867, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1898, 1899, 1900, 1905, 1908, 1910, 1911, 1913, 1916, 1918, 1919, 1920, 1923, 1929, 1930, 1931, 1932, 1935, 1937, 1938, 1957, 1958, 1959, 1961, 1962, 1964, 1968, 1970, 1972, 1973, 1978, 1979, 1980, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1999, 2002, 2003, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2017, 2021, 2024, 2025, 2027, 2028, 2029, 2031, 2033, 2034, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2053, 2054], "loss_fn": [0, 29, 1755, 1986, 1990, 1991, 2001, 2011], "exit": [0, 1, 2, 4, 18, 25, 33, 42, 49, 57, 58, 891, 893, 1551, 1675, 1964, 1977, 1987, 1992, 2001, 2009, 2022, 2026, 2047], "befor": [0, 1, 3, 6, 7, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 34, 39, 41, 42, 43, 44, 46, 47, 49, 58, 93, 146, 411, 482, 743, 756, 784, 785, 786, 889, 896, 897, 899, 901, 924, 966, 976, 1001, 1079, 1080, 1081, 1090, 1098, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1139, 1140, 1143, 1152, 1155, 1250, 1262, 1264, 1287, 1303, 1307, 1320, 1350, 1362, 1379, 1382, 1424, 1430, 1431, 1434, 1439, 1488, 1489, 1490, 1527, 1531, 1539, 1593, 1612, 1650, 1651, 1666, 1669, 1670, 1671, 1672, 1675, 1682, 1683, 1690, 1724, 1727, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1769, 1783, 1786, 1812, 1821, 1831, 1832, 1862, 1865, 1868, 1869, 1870, 1872, 1873, 1882, 1885, 1908, 1919, 1961, 1963, 1964, 1968, 1972, 1977, 1986, 1987, 1990, 1991, 1992, 1995, 1996, 1998, 1999, 2002, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2015, 2020, 2021, 2022, 2024, 2025, 2029, 2031, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2050], "step": [0, 1, 2, 4, 9, 14, 21, 22, 25, 26, 27, 29, 31, 43, 46, 49, 53, 58, 75, 534, 603, 682, 764, 765, 853, 861, 891, 894, 895, 924, 939, 963, 1210, 1298, 1321, 1322, 1323, 1337, 1340, 1352, 1435, 1436, 1458, 1561, 1562, 1588, 1589, 1675, 1716, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1792, 1801, 1829, 1854, 1926, 1961, 1962, 1968, 1979, 1986, 1987, 1990, 1991, 1992, 1994, 1999, 2001, 2003, 2005, 2007, 2009, 2012, 2014, 2015, 2020, 2021, 2024, 2029, 2036, 2044, 2047, 2048, 2049, 2052, 2054], "usag": [0, 1, 4, 7, 9, 12, 15, 21, 25, 27, 29, 31, 32, 33, 36, 39, 40, 42, 44, 49, 58, 60, 61, 744, 753, 788, 789, 790, 806, 807, 808, 809, 811, 812, 813, 850, 854, 886, 901, 968, 1047, 1067, 1071, 1098, 1149, 1155, 1159, 1160, 1161, 1181, 1264, 1323, 1675, 1954, 1960, 1961, 1964, 1968, 1975, 1979, 1986, 1987, 1992, 1994, 1995, 2007, 2009, 2014, 2022, 2029, 2030, 2032, 2033, 2034, 2042, 2043, 2044, 2045, 2054], "along": [0, 14, 18, 21, 25, 31, 35, 42, 46, 60, 66, 309, 311, 313, 317, 489, 509, 511, 513, 682, 693, 815, 871, 872, 955, 962, 987, 998, 1013, 1015, 1081, 1089, 1090, 1097, 1098, 1114, 1119, 1122, 1126, 1129, 1132, 1138, 1167, 1192, 1216, 1225, 1227, 1272, 1283, 1319, 1372, 1379, 1383, 1384, 1393, 1394, 1395, 1401, 1422, 1435, 1436, 1478, 1481, 1482, 1483, 1521, 1523, 1558, 1566, 1575, 1588, 1589, 1592, 1595, 1612, 1618, 1619, 1620, 1630, 1650, 1651, 1701, 1703, 1710, 1711, 1720, 1729, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1767, 1786, 1806, 1807, 1812, 1823, 1858, 1862, 1865, 1866, 1874, 1879, 1898, 1902, 1905, 1908, 1917, 1932, 1935, 1937, 1959, 1963, 1968, 1980, 1988, 1992, 1994, 1998, 1999, 2007, 2012, 2015, 2025], "more": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 17, 20, 21, 22, 25, 26, 27, 30, 31, 32, 33, 34, 38, 41, 42, 43, 44, 47, 49, 52, 53, 54, 55, 56, 58, 77, 79, 81, 82, 146, 250, 251, 309, 317, 482, 483, 484, 489, 491, 494, 509, 511, 513, 520, 541, 614, 676, 731, 767, 776, 780, 789, 850, 855, 856, 857, 869, 882, 883, 884, 886, 888, 889, 890, 896, 899, 901, 902, 904, 906, 910, 911, 912, 915, 916, 920, 921, 922, 923, 924, 939, 947, 950, 952, 958, 959, 960, 961, 968, 973, 980, 1001, 1002, 1004, 1006, 1007, 1023, 1042, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1062, 1063, 1064, 1068, 1076, 1081, 1087, 1096, 1098, 1102, 1114, 1115, 1117, 1119, 1138, 1139, 1140, 1141, 1152, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1169, 1181, 1182, 1183, 1199, 1200, 1204, 1213, 1214, 1231, 1235, 1237, 1238, 1250, 1264, 1267, 1280, 1281, 1282, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1323, 1326, 1329, 1331, 1341, 1342, 1365, 1366, 1369, 1374, 1380, 1392, 1396, 1401, 1406, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1430, 1431, 1432, 1448, 1458, 1484, 1485, 1486, 1488, 1494, 1500, 1501, 1502, 1503, 1515, 1527, 1535, 1546, 1558, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1582, 1584, 1585, 1593, 1596, 1597, 1598, 1599, 1604, 1608, 1612, 1613, 1624, 1631, 1638, 1639, 1640, 1642, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1662, 1663, 1664, 1665, 1666, 1671, 1672, 1675, 1676, 1682, 1683, 1689, 1692, 1693, 1728, 1729, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1773, 1784, 1785, 1811, 1817, 1821, 1829, 1861, 1862, 1886, 1908, 1910, 1919, 1923, 1926, 1935, 1936, 1959, 1960, 1961, 1963, 1964, 1968, 1970, 1971, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1985, 1987, 1989, 1990, 1991, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2002, 2004, 2006, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2021, 2022, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2036, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2052, 2054, 2055, 2056, 2057], "complex": [0, 1, 3, 7, 8, 21, 22, 24, 25, 30, 58, 307, 325, 479, 495, 681, 688, 915, 916, 960, 961, 981, 982, 1093, 1099, 1100, 1101, 1119, 1141, 1146, 1204, 1221, 1229, 1240, 1242, 1243, 1246, 1247, 1250, 1271, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1300, 1303, 1305, 1307, 1308, 1309, 1310, 1314, 1315, 1319, 1320, 1321, 1323, 1331, 1337, 1349, 1354, 1373, 1415, 1416, 1417, 1454, 1488, 1568, 1569, 1570, 1689, 1730, 1779, 1792, 1798, 1799, 1805, 1826, 1836, 1882, 1883, 1886, 1923, 1932, 1933, 1934, 1959, 1960, 1962, 1964, 1965, 1974, 2001, 2007, 2010, 2026, 2027, 2030, 2031, 2044, 2045, 2046], "scenario": [0, 21, 25, 42, 1401, 1736, 1924, 1990, 1996, 2001, 2007, 2009, 2014, 2020, 2044, 2045], "g": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 21, 22, 25, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 45, 46, 49, 52, 54, 56, 57, 58, 59, 60, 68, 69, 482, 576, 613, 744, 753, 756, 789, 790, 811, 813, 850, 855, 857, 858, 885, 896, 898, 901, 902, 911, 915, 916, 949, 980, 1044, 1098, 1149, 1156, 1160, 1161, 1177, 1182, 1185, 1201, 1204, 1247, 1250, 1257, 1258, 1266, 1322, 1407, 1408, 1424, 1426, 1427, 1428, 1432, 1434, 1439, 1447, 1453, 1458, 1459, 1488, 1489, 1498, 1503, 1519, 1577, 1593, 1675, 1676, 1677, 1678, 1682, 1683, 1691, 1727, 1730, 1740, 1741, 1742, 1743, 1746, 1752, 1753, 1754, 1755, 1807, 1814, 1825, 1829, 1831, 1849, 1871, 1882, 1959, 1961, 1963, 1964, 1965, 1968, 1971, 1972, 1977, 1986, 1987, 1990, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2002, 2003, 2007, 2009, 2011, 2012, 2014, 2015, 2020, 2024, 2027, 2028, 2029, 2040, 2042, 2043, 2044, 2052, 2054, 2055], "penalti": [0, 777, 1055, 1739, 1740, 1741, 1742, 1744, 1746, 1752, 1753, 1755, 2016, 2050], "multipl": [0, 1, 2, 3, 5, 21, 22, 25, 26, 27, 31, 32, 35, 42, 43, 44, 46, 49, 54, 57, 58, 75, 187, 204, 311, 509, 682, 684, 685, 691, 692, 756, 837, 870, 871, 874, 910, 922, 923, 924, 956, 958, 968, 984, 988, 1013, 1014, 1015, 1041, 1096, 1098, 1101, 1152, 1155, 1160, 1161, 1162, 1163, 1166, 1167, 1195, 1200, 1214, 1215, 1264, 1267, 1272, 1273, 1288, 1289, 1290, 1306, 1311, 1316, 1317, 1345, 1348, 1353, 1355, 1400, 1401, 1418, 1419, 1420, 1421, 1423, 1431, 1434, 1439, 1447, 1453, 1454, 1476, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1536, 1539, 1565, 1566, 1576, 1585, 1605, 1629, 1637, 1675, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1754, 1762, 1763, 1764, 1765, 1766, 1771, 1773, 1829, 1856, 1863, 1864, 1868, 1869, 1870, 1872, 1873, 1902, 1903, 1910, 1918, 1923, 1935, 1936, 1959, 1960, 1963, 1964, 1977, 1978, 1979, 1980, 1987, 1989, 1991, 1993, 1995, 1996, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2009, 2011, 2012, 2014, 2015, 2016, 2020, 2021, 2022, 2024, 2026, 2034, 2035, 2038, 2039, 2043, 2044, 2053], "custom": [0, 3, 5, 14, 15, 21, 25, 26, 27, 28, 29, 33, 35, 38, 39, 41, 46, 47, 49, 59, 60, 62, 76, 78, 79, 80, 81, 83, 495, 789, 793, 810, 811, 812, 813, 834, 836, 855, 856, 857, 858, 886, 896, 899, 901, 922, 968, 970, 1009, 1073, 1168, 1250, 1488, 1531, 1535, 1536, 1537, 1661, 1697, 1706, 1723, 1761, 1924, 1926, 1960, 1965, 1968, 1970, 1977, 1978, 1987, 1998, 2003, 2004, 2005, 2007, 2018, 2019, 2033, 2035, 2043, 2045, 2047], "autograd": [0, 4, 5, 7, 8, 12, 25, 29, 31, 46, 49, 50, 53, 60, 135, 331, 441, 442, 443, 444, 445, 482, 484, 492, 676, 685, 861, 875, 876, 890, 891, 896, 901, 902, 911, 912, 913, 923, 924, 931, 932, 933, 934, 935, 937, 946, 965, 970, 980, 1044, 1099, 1100, 1101, 1111, 1116, 1134, 1152, 1153, 1154, 1155, 1156, 1165, 1167, 1208, 1209, 1250, 1270, 1290, 1321, 1337, 1345, 1355, 1441, 1488, 1494, 1535, 1595, 1610, 1675, 1734, 1735, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1832, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1860, 1868, 1869, 1870, 1871, 1872, 1873, 1901, 1935, 1957, 1958, 1960, 1962, 1966, 1968, 1971, 1980, 1985, 1990, 1991, 1994, 1995, 1996, 1998, 1999, 2014, 2030, 2031, 2035, 2044, 2045, 2050, 2054, 2055], "function": [0, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 26, 27, 29, 32, 33, 35, 39, 40, 42, 43, 46, 47, 49, 52, 54, 57, 60, 63, 68, 69, 72, 74, 76, 77, 79, 80, 83, 84, 115, 146, 191, 254, 256, 285, 294, 317, 482, 483, 484, 489, 492, 513, 537, 552, 676, 685, 689, 690, 694, 695, 744, 753, 754, 756, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 788, 789, 793, 794, 796, 810, 811, 812, 813, 820, 822, 834, 837, 850, 853, 855, 857, 858, 859, 873, 874, 889, 891, 892, 893, 894, 895, 896, 901, 902, 910, 911, 912, 913, 915, 916, 920, 921, 922, 924, 928, 931, 937, 946, 948, 956, 958, 962, 965, 968, 970, 971, 972, 974, 976, 980, 981, 982, 991, 992, 993, 994, 995, 996, 997, 999, 1002, 1004, 1006, 1009, 1026, 1027, 1030, 1035, 1036, 1041, 1042, 1044, 1045, 1046, 1047, 1049, 1054, 1055, 1062, 1063, 1065, 1066, 1067, 1071, 1081, 1086, 1088, 1089, 1096, 1098, 1102, 1114, 1115, 1117, 1137, 1141, 1144, 1145, 1146, 1149, 1152, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1172, 1190, 1195, 1196, 1204, 1208, 1209, 1210, 1212, 1214, 1222, 1223, 1224, 1237, 1247, 1248, 1249, 1250, 1251, 1253, 1255, 1256, 1261, 1262, 1263, 1264, 1266, 1268, 1270, 1271, 1272, 1274, 1279, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1302, 1305, 1306, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1326, 1328, 1337, 1340, 1341, 1345, 1348, 1351, 1353, 1355, 1356, 1357, 1376, 1379, 1380, 1396, 1400, 1401, 1406, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1421, 1425, 1429, 1432, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1447, 1453, 1455, 1456, 1457, 1458, 1459, 1474, 1477, 1478, 1480, 1487, 1488, 1493, 1494, 1496, 1503, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1531, 1533, 1535, 1536, 1537, 1539, 1541, 1543, 1544, 1545, 1547, 1549, 1550, 1551, 1667, 1671, 1672, 1675, 1682, 1683, 1689, 1690, 1695, 1706, 1716, 1717, 1718, 1720, 1723, 1724, 1725, 1727, 1728, 1730, 1731, 1735, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1752, 1753, 1754, 1755, 1757, 1760, 1761, 1763, 1766, 1767, 1768, 1773, 1774, 1775, 1779, 1785, 1792, 1796, 1801, 1814, 1823, 1824, 1825, 1827, 1828, 1836, 1844, 1848, 1849, 1854, 1857, 1859, 1860, 1861, 1862, 1863, 1865, 1871, 1878, 1882, 1888, 1889, 1898, 1902, 1904, 1908, 1918, 1919, 1920, 1923, 1924, 1928, 1932, 1933, 1934, 1935, 1936, 1947, 1948, 1953, 1954, 1958, 1959, 1960, 1965, 1968, 1970, 1972, 1974, 1975, 1977, 1979, 1982, 1985, 1988, 1990, 1991, 1992, 1994, 1998, 1999, 2001, 2002, 2007, 2011, 2012, 2013, 2014, 2015, 2017, 2019, 2020, 2021, 2022, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2039, 2040, 2041, 2042, 2043, 2045, 2047, 2049, 2050, 2051, 2053, 2054], "autocastmodel": 0, "nn": [0, 3, 5, 12, 15, 21, 22, 25, 26, 27, 29, 30, 43, 46, 47, 49, 50, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 294, 411, 537, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 788, 789, 810, 850, 855, 856, 857, 858, 860, 1041, 1044, 1098, 1155, 1164, 1165, 1248, 1250, 1251, 1253, 1254, 1255, 1256, 1257, 1260, 1261, 1262, 1266, 1267, 1268, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1666, 1675, 1676, 1677, 1678, 1692, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1716, 1728, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1857, 1882, 1923, 1924, 1959, 1960, 1961, 1962, 1966, 1972, 1979, 1980, 1986, 1991, 1994, 1995, 1999, 2001, 2002, 2003, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2017, 2020, 2029, 2031, 2034, 2036, 2040, 2043, 2044, 2047, 2052, 2053, 2054], "modul": [0, 1, 3, 5, 6, 8, 11, 12, 14, 18, 22, 25, 27, 29, 30, 34, 36, 39, 42, 43, 46, 47, 49, 50, 52, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 411, 483, 484, 676, 682, 685, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 734, 735, 736, 741, 742, 743, 752, 757, 758, 759, 760, 761, 784, 785, 786, 787, 788, 789, 793, 795, 796, 798, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 834, 835, 836, 850, 853, 854, 855, 856, 857, 858, 860, 911, 920, 921, 924, 936, 948, 968, 1044, 1155, 1164, 1165, 1167, 1248, 1250, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1266, 1267, 1268, 1322, 1345, 1355, 1392, 1396, 1402, 1403, 1404, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1440, 1442, 1450, 1451, 1452, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1489, 1490, 1498, 1499, 1504, 1516, 1521, 1527, 1531, 1535, 1584, 1585, 1659, 1666, 1675, 1676, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1719, 1723, 1724, 1725, 1727, 1756, 1817, 1861, 1924, 1926, 1927, 1935, 1959, 1960, 1965, 1968, 1970, 1972, 1973, 1975, 1977, 1979, 1980, 1982, 1984, 1985, 1989, 1990, 1991, 1994, 1995, 1998, 2000, 2001, 2003, 2005, 2006, 2007, 2009, 2011, 2013, 2014, 2017, 2018, 2020, 2023, 2024, 2025, 2029, 2032, 2033, 2034, 2036, 2040, 2041, 2043, 2044, 2048, 2052, 2053, 2054, 2055], "def": [0, 1, 12, 21, 22, 25, 26, 27, 31, 33, 34, 35, 39, 40, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 394, 788, 789, 857, 858, 886, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 968, 973, 980, 1102, 1155, 1156, 1157, 1159, 1160, 1161, 1163, 1165, 1166, 1167, 1248, 1250, 1251, 1253, 1254, 1255, 1256, 1257, 1261, 1262, 1265, 1266, 1267, 1268, 1488, 1489, 1490, 1498, 1499, 1503, 1537, 1644, 1666, 1675, 1695, 1728, 1861, 1935, 1959, 1961, 1963, 1964, 1968, 1979, 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1999, 2001, 2003, 2004, 2005, 2007, 2008, 2009, 2011, 2012, 2013, 2014, 2015, 2020, 2021, 2022, 2036, 2039, 2040, 2041, 2042, 2044, 2046, 2047, 2052, 2053, 2054, 2055], "self": [0, 1, 9, 12, 18, 21, 22, 25, 27, 33, 34, 39, 44, 46, 47, 49, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 93, 135, 146, 149, 150, 151, 166, 168, 171, 174, 175, 176, 186, 187, 191, 192, 204, 212, 214, 228, 229, 236, 250, 251, 254, 255, 263, 282, 286, 293, 307, 309, 311, 313, 315, 317, 319, 321, 322, 324, 325, 326, 327, 329, 337, 373, 389, 394, 396, 397, 398, 411, 450, 467, 477, 479, 493, 494, 495, 496, 509, 511, 513, 516, 519, 521, 533, 539, 540, 541, 542, 554, 556, 576, 577, 579, 580, 581, 583, 584, 600, 603, 604, 610, 613, 614, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 857, 858, 929, 931, 1155, 1156, 1165, 1172, 1221, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1261, 1262, 1266, 1267, 1268, 1392, 1396, 1432, 1487, 1488, 1489, 1490, 1494, 1498, 1499, 1515, 1517, 1527, 1533, 1535, 1624, 1647, 1666, 1692, 1693, 1695, 1701, 1703, 1716, 1725, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1782, 1803, 1961, 1962, 1963, 1964, 1968, 1975, 1978, 1979, 1985, 1987, 1988, 1989, 1992, 1994, 1999, 2004, 2007, 2009, 2011, 2012, 2013, 2015, 2020, 2026, 2036, 2040, 2041, 2047, 2049, 2052, 2053, 2054], "produc": [0, 7, 14, 21, 25, 27, 32, 34, 36, 39, 44, 46, 47, 54, 55, 57, 58, 75, 84, 482, 728, 734, 735, 736, 741, 742, 752, 760, 788, 789, 939, 959, 1037, 1129, 1130, 1131, 1149, 1160, 1161, 1167, 1172, 1175, 1179, 1204, 1262, 1266, 1267, 1270, 1286, 1287, 1290, 1297, 1298, 1309, 1314, 1348, 1351, 1352, 1353, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1464, 1465, 1466, 1467, 1468, 1469, 1494, 1577, 1585, 1593, 1604, 1663, 1664, 1665, 1730, 1756, 1785, 1792, 1801, 1886, 1923, 1935, 1961, 1963, 1964, 1972, 1977, 1978, 1986, 1987, 1988, 1990, 1992, 1995, 1997, 1998, 1999, 2002, 2003, 2004, 2005, 2007, 2009, 2024, 2028, 2036, 2040, 2042, 2044, 2047, 2050, 2054], "after": [0, 1, 7, 9, 12, 14, 21, 22, 25, 26, 27, 29, 30, 42, 44, 49, 57, 58, 60, 65, 66, 256, 482, 484, 676, 756, 786, 853, 855, 857, 858, 889, 891, 896, 897, 901, 968, 976, 999, 1001, 1037, 1044, 1097, 1156, 1235, 1250, 1254, 1306, 1322, 1345, 1362, 1388, 1424, 1439, 1473, 1488, 1491, 1531, 1533, 1535, 1558, 1593, 1666, 1669, 1675, 1695, 1697, 1701, 1703, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1760, 1761, 1767, 1769, 1825, 1882, 1908, 1924, 1926, 1937, 1959, 1963, 1964, 1975, 1977, 1985, 1986, 1987, 1990, 1991, 1992, 1994, 1995, 1996, 1998, 1999, 2001, 2002, 2009, 2011, 2012, 2014, 2015, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2029, 2036, 2039, 2041, 2044, 2045, 2047, 2048, 2050, 2052, 2053, 2054], "return": [0, 1, 2, 3, 5, 11, 12, 13, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 44, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 84, 115, 149, 151, 166, 168, 171, 174, 175, 176, 186, 187, 191, 192, 202, 204, 205, 212, 214, 215, 217, 228, 229, 236, 238, 250, 256, 263, 285, 293, 307, 315, 319, 321, 322, 324, 325, 326, 327, 329, 333, 335, 337, 348, 373, 389, 411, 431, 441, 442, 443, 444, 445, 454, 468, 469, 470, 471, 472, 474, 479, 483, 484, 492, 493, 494, 509, 511, 519, 521, 533, 539, 540, 552, 553, 554, 555, 556, 576, 577, 578, 579, 585, 599, 600, 603, 605, 609, 610, 613, 680, 688, 689, 691, 692, 693, 694, 695, 731, 762, 763, 766, 767, 771, 772, 773, 774, 777, 780, 787, 788, 789, 790, 810, 811, 812, 813, 832, 836, 837, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 920, 921, 924, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 946, 947, 949, 952, 954, 956, 957, 958, 959, 961, 962, 963, 965, 967, 968, 969, 970, 971, 973, 975, 980, 981, 982, 984, 985, 986, 988, 991, 992, 993, 994, 996, 998, 999, 1001, 1002, 1004, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1092, 1098, 1099, 1100, 1101, 1102, 1103, 1108, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1134, 1137, 1138, 1139, 1140, 1141, 1142, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1172, 1178, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1190, 1194, 1195, 1197, 1199, 1200, 1201, 1202, 1203, 1207, 1208, 1209, 1211, 1212, 1213, 1217, 1221, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1250, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1275, 1276, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1330, 1331, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1359, 1360, 1362, 1363, 1369, 1374, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1388, 1392, 1393, 1394, 1395, 1400, 1401, 1421, 1422, 1423, 1424, 1431, 1435, 1436, 1447, 1453, 1454, 1478, 1479, 1480, 1481, 1482, 1483, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1502, 1503, 1516, 1519, 1520, 1521, 1522, 1523, 1527, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1549, 1550, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1563, 1565, 1566, 1567, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1637, 1639, 1640, 1642, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1657, 1659, 1660, 1661, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1775, 1776, 1778, 1781, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1816, 1821, 1822, 1823, 1824, 1830, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1858, 1860, 1861, 1862, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1881, 1882, 1885, 1886, 1887, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1925, 1926, 1929, 1931, 1933, 1934, 1935, 1938, 1940, 1942, 1943, 1945, 1947, 1948, 1949, 1951, 1952, 1955, 1957, 1958, 1959, 1961, 1965, 1968, 1973, 1974, 1975, 1977, 1979, 1980, 1985, 1986, 1987, 1989, 1990, 1992, 1993, 1996, 1997, 1998, 1999, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2011, 2012, 2013, 2014, 2015, 2019, 2020, 2021, 2024, 2025, 2026, 2027, 2028, 2030, 2031, 2032, 2033, 2034, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2052, 2053, 2054, 2055, 2056, 2057], "disabl": [0, 2, 5, 26, 31, 49, 58, 806, 807, 911, 912, 913, 968, 1044, 1098, 1102, 1155, 1250, 1252, 1266, 1267, 1488, 1494, 1527, 1535, 1644, 1675, 1676, 1725, 1728, 1830, 1833, 1861, 1960, 1963, 1970, 1986, 1989, 1990, 1991, 1992, 1997, 2002, 2003, 2009, 2013, 2019, 2024, 2031, 2043, 2048, 2051, 2054, 2056], "them": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 21, 25, 27, 33, 34, 39, 42, 44, 46, 49, 53, 54, 57, 58, 146, 217, 250, 482, 730, 889, 896, 899, 901, 906, 950, 1044, 1083, 1086, 1098, 1170, 1172, 1180, 1250, 1272, 1281, 1292, 1306, 1318, 1322, 1350, 1382, 1408, 1430, 1488, 1521, 1523, 1650, 1702, 1717, 1720, 1757, 1865, 1867, 1885, 1919, 1924, 1926, 1959, 1963, 1964, 1971, 1973, 1975, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1995, 1997, 1998, 1999, 2003, 2005, 2011, 2013, 2014, 2015, 2016, 2020, 2021, 2022, 2024, 2025, 2029, 2030, 2033, 2036, 2041, 2042, 2043, 2044, 2047, 2050, 2051, 2053, 2054], "differ": [0, 1, 3, 5, 8, 14, 18, 21, 25, 27, 29, 30, 31, 33, 34, 35, 39, 40, 42, 43, 45, 46, 47, 49, 50, 53, 54, 55, 56, 58, 192, 482, 489, 613, 676, 682, 685, 691, 692, 731, 756, 789, 792, 793, 818, 820, 821, 857, 858, 861, 875, 876, 915, 916, 936, 948, 949, 988, 1081, 1086, 1088, 1090, 1098, 1138, 1139, 1140, 1144, 1145, 1152, 1155, 1160, 1161, 1167, 1172, 1173, 1176, 1204, 1225, 1250, 1256, 1261, 1266, 1280, 1286, 1287, 1297, 1298, 1306, 1309, 1314, 1318, 1345, 1355, 1392, 1401, 1402, 1403, 1404, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1439, 1440, 1448, 1450, 1451, 1452, 1453, 1458, 1459, 1475, 1488, 1491, 1494, 1509, 1510, 1512, 1513, 1514, 1516, 1519, 1527, 1533, 1535, 1537, 1540, 1543, 1544, 1545, 1546, 1558, 1566, 1584, 1593, 1602, 1604, 1606, 1618, 1619, 1620, 1644, 1666, 1675, 1677, 1678, 1689, 1725, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1761, 1769, 1775, 1785, 1807, 1841, 1880, 1881, 1886, 1908, 1919, 1920, 1923, 1928, 1930, 1931, 1935, 1959, 1961, 1963, 1964, 1966, 1970, 1971, 1977, 1978, 1980, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1996, 1999, 2001, 2002, 2003, 2005, 2007, 2011, 2012, 2013, 2014, 2015, 2016, 2020, 2022, 2024, 2026, 2027, 2029, 2030, 2031, 2034, 2035, 2036, 2038, 2041, 2043, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2054], "caus": [0, 1, 2, 3, 5, 14, 18, 21, 24, 25, 29, 35, 41, 42, 43, 46, 54, 58, 80, 552, 613, 873, 876, 889, 971, 1152, 1174, 1181, 1182, 1262, 1266, 1286, 1287, 1314, 1369, 1604, 1605, 1663, 1666, 1675, 1729, 1738, 1825, 1835, 1882, 1923, 1961, 1964, 1977, 1988, 1990, 1992, 1994, 2001, 2003, 2005, 2009, 2012, 2015, 2016, 2022, 2024, 2027, 2039, 2043, 2045], "mismatch": [0, 25, 58, 81, 83, 876, 1251, 1737, 1738, 1963, 1986, 1991, 1992, 1994, 2009, 2031], "error": [0, 1, 5, 8, 14, 17, 18, 21, 22, 25, 26, 28, 31, 40, 42, 43, 46, 49, 52, 54, 57, 58, 60, 61, 78, 79, 80, 81, 83, 186, 217, 309, 311, 317, 319, 324, 484, 541, 552, 610, 613, 676, 815, 861, 874, 876, 896, 899, 901, 904, 905, 906, 907, 908, 909, 910, 914, 922, 923, 968, 999, 1009, 1033, 1044, 1055, 1068, 1072, 1096, 1155, 1159, 1160, 1162, 1167, 1182, 1185, 1214, 1250, 1255, 1265, 1280, 1281, 1290, 1292, 1294, 1297, 1298, 1299, 1309, 1312, 1322, 1340, 1369, 1374, 1400, 1401, 1437, 1448, 1454, 1479, 1488, 1517, 1519, 1591, 1602, 1625, 1644, 1647, 1648, 1675, 1677, 1678, 1680, 1725, 1730, 1737, 1738, 1781, 1821, 1828, 1871, 1877, 1882, 1923, 1926, 1935, 1936, 1959, 1960, 1961, 1963, 1964, 1970, 1971, 1977, 1978, 1979, 1980, 1986, 1987, 1990, 1992, 1993, 1996, 1997, 2003, 2007, 2009, 2012, 2018, 2020, 2025, 2030, 2031, 2033, 2034, 2039, 2042, 2043, 2044, 2056], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 19, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 68, 69, 70, 71, 78, 79, 80, 81, 83, 93, 146, 150, 191, 202, 205, 250, 311, 315, 317, 441, 442, 443, 444, 445, 454, 467, 477, 482, 492, 495, 513, 516, 533, 541, 576, 577, 579, 580, 581, 583, 584, 599, 603, 613, 676, 682, 685, 686, 687, 689, 691, 692, 693, 695, 731, 752, 756, 760, 775, 777, 781, 790, 791, 813, 816, 817, 818, 821, 850, 854, 857, 861, 870, 871, 872, 873, 874, 875, 876, 885, 887, 888, 889, 896, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 924, 935, 936, 937, 939, 946, 948, 949, 950, 952, 956, 958, 959, 962, 963, 968, 970, 973, 977, 981, 982, 983, 987, 988, 998, 1001, 1002, 1004, 1006, 1009, 1011, 1013, 1015, 1022, 1033, 1039, 1044, 1045, 1065, 1068, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1098, 1099, 1100, 1101, 1111, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1141, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1166, 1167, 1169, 1171, 1172, 1179, 1181, 1182, 1185, 1192, 1204, 1208, 1209, 1211, 1212, 1213, 1214, 1225, 1227, 1241, 1247, 1250, 1253, 1254, 1255, 1258, 1260, 1262, 1263, 1266, 1267, 1270, 1271, 1272, 1276, 1280, 1281, 1286, 1287, 1289, 1290, 1292, 1293, 1294, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1311, 1313, 1314, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1333, 1337, 1338, 1340, 1342, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1369, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1392, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1440, 1441, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1473, 1475, 1479, 1480, 1481, 1482, 1483, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1502, 1503, 1505, 1509, 1510, 1511, 1512, 1513, 1514, 1519, 1520, 1527, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1539, 1540, 1543, 1544, 1545, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1593, 1595, 1597, 1604, 1605, 1610, 1612, 1614, 1615, 1616, 1618, 1619, 1620, 1629, 1630, 1631, 1634, 1637, 1638, 1644, 1650, 1651, 1662, 1663, 1669, 1675, 1676, 1680, 1681, 1684, 1685, 1687, 1689, 1690, 1692, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1716, 1717, 1718, 1719, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1774, 1779, 1783, 1785, 1786, 1790, 1791, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1806, 1807, 1812, 1814, 1817, 1821, 1823, 1825, 1828, 1829, 1833, 1835, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1858, 1862, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1880, 1881, 1882, 1885, 1886, 1898, 1901, 1902, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1919, 1920, 1923, 1926, 1929, 1930, 1931, 1935, 1940, 1946, 1957, 1958, 1959, 1961, 1964, 1966, 1968, 1972, 1973, 1974, 1975, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2001, 2002, 2003, 2004, 2005, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2036, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2053, 2054, 2055, 2056], "so": [0, 1, 2, 3, 7, 9, 14, 17, 21, 22, 24, 25, 26, 27, 29, 31, 32, 34, 35, 42, 43, 45, 46, 47, 49, 52, 53, 54, 57, 58, 60, 70, 71, 331, 454, 482, 492, 676, 855, 891, 896, 899, 901, 904, 905, 910, 922, 965, 968, 973, 1000, 1023, 1086, 1088, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1149, 1152, 1155, 1159, 1160, 1162, 1163, 1170, 1172, 1180, 1182, 1190, 1237, 1247, 1250, 1253, 1254, 1260, 1262, 1264, 1306, 1308, 1318, 1323, 1328, 1340, 1361, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1431, 1434, 1441, 1488, 1504, 1521, 1523, 1539, 1549, 1550, 1558, 1568, 1569, 1570, 1593, 1650, 1651, 1666, 1675, 1729, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1850, 1865, 1877, 1882, 1886, 1907, 1919, 1924, 1929, 1961, 1963, 1964, 1970, 1972, 1973, 1975, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2011, 2012, 2015, 2019, 2020, 2024, 2025, 2027, 2029, 2030, 2032, 2036, 2039, 2042, 2043, 2044, 2045, 2047, 2048, 2050, 2053, 2054, 2056, 2059], "cast": [0, 6, 22, 40, 49, 82, 331, 599, 600, 953, 1079, 1080, 1250, 1303, 1307, 1320, 1350, 1379, 1382, 1488, 1612, 1650, 1651, 1730, 1783, 1862, 1865, 1871, 1885, 1890, 1891, 1961, 1986, 2002, 2009, 2025, 2026, 2027, 2044], "back": [0, 1, 2, 14, 21, 22, 25, 27, 31, 42, 46, 49, 54, 58, 60, 65, 69, 482, 731, 833, 915, 965, 968, 1118, 1150, 1156, 1251, 1264, 1316, 1322, 1534, 1680, 1681, 1682, 1683, 1867, 1959, 1961, 1964, 1987, 1992, 1993, 1995, 2001, 2002, 2003, 2009, 2011, 2012, 2015, 2020, 2024, 2026, 2039, 2044, 2046, 2047, 2055], "from": [0, 1, 3, 5, 6, 7, 8, 9, 14, 15, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 39, 40, 42, 44, 45, 46, 47, 49, 50, 52, 54, 55, 57, 60, 62, 63, 65, 66, 68, 69, 72, 75, 76, 77, 80, 84, 149, 150, 169, 192, 217, 218, 229, 254, 282, 309, 311, 315, 317, 373, 398, 444, 450, 467, 469, 470, 477, 482, 483, 484, 489, 495, 509, 511, 513, 540, 542, 556, 576, 603, 604, 606, 613, 676, 708, 709, 710, 711, 712, 713, 716, 724, 725, 728, 731, 734, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 768, 769, 770, 777, 784, 785, 788, 789, 790, 793, 796, 811, 812, 813, 820, 822, 836, 850, 854, 856, 857, 858, 860, 861, 875, 876, 887, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 915, 916, 920, 921, 935, 937, 938, 946, 947, 952, 953, 965, 1000, 1001, 1004, 1013, 1014, 1015, 1033, 1037, 1055, 1082, 1098, 1099, 1100, 1101, 1118, 1120, 1121, 1126, 1127, 1128, 1132, 1133, 1134, 1135, 1138, 1139, 1140, 1149, 1151, 1152, 1153, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1171, 1172, 1176, 1183, 1208, 1209, 1213, 1227, 1247, 1248, 1250, 1251, 1253, 1255, 1256, 1257, 1258, 1261, 1262, 1274, 1290, 1294, 1303, 1306, 1307, 1320, 1321, 1322, 1323, 1337, 1341, 1342, 1355, 1360, 1362, 1365, 1366, 1367, 1369, 1374, 1383, 1384, 1392, 1396, 1402, 1403, 1404, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1439, 1440, 1441, 1442, 1448, 1450, 1451, 1452, 1453, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1488, 1489, 1490, 1494, 1498, 1499, 1503, 1505, 1506, 1527, 1532, 1533, 1535, 1537, 1539, 1540, 1547, 1558, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1590, 1593, 1595, 1602, 1604, 1618, 1619, 1620, 1632, 1662, 1666, 1675, 1680, 1682, 1683, 1691, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1727, 1731, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1775, 1778, 1786, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1807, 1808, 1811, 1813, 1814, 1821, 1833, 1841, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1882, 1883, 1887, 1898, 1901, 1910, 1912, 1914, 1919, 1920, 1923, 1925, 1926, 1929, 1938, 1940, 1960, 1961, 1962, 1963, 1964, 1966, 1968, 1970, 1971, 1972, 1973, 1974, 1975, 1977, 1979, 1980, 1981, 1985, 1987, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2006, 2007, 2011, 2013, 2014, 2015, 2016, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2052, 2053, 2054, 2055, 2056], "alreadi": [0, 1, 11, 21, 22, 25, 26, 30, 42, 43, 49, 57, 58, 191, 202, 205, 459, 482, 520, 576, 599, 600, 788, 836, 850, 854, 875, 922, 924, 1009, 1035, 1172, 1250, 1260, 1322, 1488, 1670, 1675, 1716, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1917, 1919, 1926, 1950, 1959, 1961, 1971, 1974, 1978, 1979, 1986, 1987, 1990, 1992, 1995, 1996, 2001, 2009, 2011, 2012, 2015, 2021, 2022, 2024, 2026, 2028, 2039, 2041, 2043], "incur": [0, 5, 22, 25, 49, 958, 2001, 2020], "addit": [0, 1, 3, 5, 7, 9, 14, 15, 21, 25, 26, 27, 31, 36, 42, 43, 47, 49, 57, 58, 60, 69, 331, 509, 603, 745, 747, 748, 749, 750, 754, 756, 777, 791, 810, 855, 1055, 1247, 1250, 1254, 1260, 1265, 1392, 1403, 1404, 1405, 1418, 1419, 1420, 1431, 1438, 1439, 1441, 1448, 1451, 1452, 1460, 1467, 1468, 1469, 1473, 1474, 1475, 1476, 1478, 1484, 1485, 1486, 1488, 1494, 1496, 1521, 1523, 1527, 1531, 1533, 1535, 1537, 1564, 1571, 1572, 1573, 1610, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1829, 1919, 1920, 1923, 1933, 1961, 1963, 1964, 1970, 1975, 1978, 1979, 1980, 1987, 1989, 1990, 1992, 1993, 1995, 1998, 2001, 2002, 2005, 2007, 2009, 2014, 2015, 2016, 2018, 2020, 2021, 2022, 2024, 2028, 2031, 2039, 2042, 2044, 2050, 2051, 2054, 2056], "overhead": [0, 1, 3, 4, 8, 22, 25, 49, 777, 968, 973, 1055, 1262, 1675, 1682, 1683, 1987, 1989, 1990, 1991, 1997, 1998, 2001, 2013, 2014, 2021, 2024, 2030, 2039, 2043, 2044, 2046, 2047, 2048], "here": [0, 1, 7, 8, 9, 12, 15, 18, 21, 22, 25, 26, 31, 41, 43, 46, 47, 51, 52, 53, 54, 57, 58, 81, 83, 576, 789, 790, 901, 902, 986, 1007, 1098, 1115, 1117, 1118, 1123, 1124, 1125, 1127, 1128, 1133, 1135, 1155, 1165, 1248, 1262, 1402, 1403, 1404, 1418, 1419, 1420, 1450, 1451, 1452, 1496, 1527, 1593, 1595, 1682, 1683, 1692, 1753, 1756, 1767, 1829, 1853, 1959, 1961, 1963, 1964, 1966, 1978, 1979, 1980, 1986, 1987, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2005, 2009, 2011, 2012, 2013, 2015, 2018, 2024, 2028, 2029, 2031, 2036, 2039, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2051, 2052, 2054], "assum": [0, 11, 12, 21, 25, 30, 31, 33, 35, 42, 43, 46, 47, 49, 52, 55, 58, 813, 980, 1081, 1116, 1119, 1121, 1129, 1130, 1131, 1134, 1172, 1175, 1179, 1241, 1247, 1248, 1251, 1266, 1286, 1287, 1289, 1296, 1305, 1308, 1311, 1313, 1323, 1407, 1480, 1540, 1577, 1644, 1675, 1692, 1695, 1720, 1757, 1758, 1763, 1764, 1765, 1768, 1770, 1771, 1775, 1887, 1908, 1910, 1926, 1959, 1961, 1963, 1964, 1968, 1978, 1987, 1990, 1992, 1993, 1996, 1998, 2001, 2002, 2009, 2011, 2012, 2013, 2020, 2021, 2022, 2024, 2036, 2041, 2042, 2050], "a_float32": 0, "rand": [0, 1, 18, 31, 46, 58, 331, 689, 695, 904, 905, 906, 907, 908, 909, 973, 988, 1041, 1042, 1115, 1117, 1120, 1121, 1123, 1124, 1127, 1128, 1130, 1131, 1133, 1135, 1157, 1256, 1257, 1262, 1266, 1267, 1268, 1324, 1325, 1327, 1400, 1453, 1531, 1532, 1533, 1534, 1535, 1565, 1584, 1585, 1644, 1675, 1695, 1728, 1778, 1789, 1790, 1791, 1795, 1961, 1962, 1963, 1964, 1966, 1978, 1979, 1992, 2007, 2009, 2010, 2013, 2015, 2020, 2021, 2024, 2025, 2028, 2029, 2032, 2049, 2052], "8": [0, 1, 14, 20, 21, 22, 25, 30, 31, 33, 46, 60, 65, 309, 311, 313, 317, 397, 398, 467, 509, 513, 556, 603, 613, 681, 682, 693, 694, 741, 742, 757, 759, 761, 769, 770, 816, 817, 818, 821, 907, 939, 947, 958, 961, 962, 966, 1041, 1042, 1077, 1081, 1096, 1101, 1114, 1130, 1131, 1137, 1138, 1141, 1148, 1204, 1213, 1214, 1274, 1303, 1306, 1307, 1308, 1316, 1318, 1321, 1322, 1383, 1384, 1389, 1390, 1391, 1393, 1394, 1395, 1408, 1409, 1410, 1411, 1422, 1458, 1484, 1485, 1491, 1493, 1495, 1502, 1503, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1527, 1531, 1532, 1533, 1534, 1535, 1539, 1547, 1569, 1572, 1575, 1632, 1637, 1642, 1643, 1644, 1682, 1683, 1730, 1731, 1742, 1743, 1744, 1746, 1752, 1753, 1756, 1761, 1769, 1774, 1778, 1782, 1802, 1812, 1813, 1814, 1821, 1829, 1833, 1840, 1843, 1848, 1854, 1858, 1866, 1868, 1869, 1874, 1882, 1886, 1897, 1902, 1903, 1904, 1906, 1908, 1917, 1921, 1923, 1929, 1936, 1961, 1965, 1971, 1990, 1992, 1995, 2004, 2007, 2009, 2010, 2012, 2013, 2014, 2015, 2018, 2020, 2024, 2025, 2027, 2028, 2030, 2036, 2041, 2047, 2054], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 1254, 1306, 1345, 1498, 1499, 1785, 1886, 1923, 1962, 1963, 1978, 1986, 1989, 1992, 2002, 2010, 2024, 2048, 2049], "list": [0, 1, 3, 5, 6, 7, 9, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 31, 33, 42, 44, 46, 47, 49, 54, 57, 58, 60, 61, 65, 66, 68, 69, 79, 180, 237, 298, 441, 443, 445, 574, 579, 580, 581, 585, 615, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 788, 789, 794, 810, 811, 812, 813, 834, 850, 857, 875, 882, 883, 884, 950, 951, 954, 958, 962, 967, 968, 970, 975, 980, 1025, 1031, 1083, 1096, 1098, 1099, 1138, 1153, 1165, 1172, 1191, 1204, 1214, 1250, 1254, 1256, 1257, 1262, 1264, 1266, 1267, 1350, 1352, 1382, 1424, 1430, 1460, 1488, 1490, 1499, 1516, 1527, 1538, 1551, 1584, 1659, 1675, 1676, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1713, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1730, 1734, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1761, 1763, 1765, 1766, 1767, 1769, 1770, 1788, 1790, 1791, 1794, 1798, 1813, 1849, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1880, 1881, 1885, 1901, 1902, 1903, 1919, 1920, 1923, 1924, 1926, 1930, 1931, 1936, 1957, 1959, 1961, 1962, 1965, 1966, 1970, 1973, 1975, 1978, 1979, 1980, 1992, 1997, 1999, 2002, 2003, 2004, 2006, 2007, 2010, 2011, 2012, 2013, 2014, 2015, 2020, 2021, 2024, 2026, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2035, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2052, 2053, 2054, 2055, 2056], "No": [0, 9, 12, 27, 45, 47, 57, 60, 69, 896, 900, 901, 902, 1675, 1682, 1683, 1728, 1963, 1990, 2009, 2018, 2028, 2031, 2039], "manual": [0, 21, 25, 40, 42, 43, 45, 49, 58, 482, 793, 834, 874, 910, 973, 1172, 1213, 1254, 1400, 1401, 1423, 1492, 1493, 1495, 1516, 1535, 1565, 1566, 1576, 1629, 1695, 1716, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1961, 1964, 1972, 1977, 1986, 1990, 1992, 1993, 1994, 1996, 1999, 2005, 2009, 2015, 2016, 2029, 2042, 2051], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 14, 21, 22, 25, 26, 27, 29, 33, 34, 35, 42, 43, 49, 57, 58, 483, 484, 836, 886, 896, 900, 901, 902, 920, 921, 970, 983, 1001, 1016, 1043, 1056, 1098, 1144, 1145, 1167, 1168, 1250, 1281, 1424, 1488, 1535, 1537, 1593, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1805, 1850, 1887, 1935, 1959, 1975, 1977, 1979, 1990, 1992, 1993, 1994, 1996, 2001, 2006, 2007, 2009, 2012, 2015, 2020, 2022, 2031, 2032, 2039, 2043, 2045, 2047, 2050], "f_float16": 0, "g_float32": 0, "epoch": [0, 21, 35, 45, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1975, 1986, 2001, 2011, 2029], "eval": [0, 58, 810, 856, 857, 1165, 1250, 1254, 1260, 1266, 1402, 1403, 1404, 1450, 1451, 1452, 1461, 1462, 1463, 1470, 1471, 1472, 1488, 1494, 1527, 1535, 1684, 1686, 1690, 1964, 1973, 1999, 2006, 2009, 2015, 2034, 2042, 2055], "jit": [0, 2, 11, 14, 46, 1041, 1042, 1073, 1201, 1248, 1249, 1250, 1265, 1736, 1737, 1831, 1832, 1960, 1963, 1966, 1973, 1979, 1989, 1998, 2004, 2006, 2009, 2015, 2020, 2029, 2040, 2041, 2042, 2044, 2046], "trace": [0, 1, 5, 12, 15, 18, 21, 22, 25, 35, 46, 47, 60, 63, 64, 65, 66, 67, 70, 71, 75, 482, 676, 925, 927, 928, 931, 968, 980, 1098, 1169, 1171, 1175, 1253, 1262, 1263, 1267, 1323, 1365, 1366, 1367, 1738, 1925, 1960, 1962, 1963, 1964, 1966, 1970, 1987, 1990, 1995, 2004, 2006, 2007, 2010, 2012, 2029, 2035, 2040, 2042, 2043, 2046, 2047, 2048, 2050, 2054, 2056], "testmodel": 0, "__init__": [0, 1, 12, 21, 22, 25, 31, 46, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 857, 858, 1165, 1248, 1251, 1253, 1256, 1257, 1262, 1266, 1267, 1268, 1488, 1489, 1490, 1498, 1499, 1666, 1961, 1963, 1964, 1975, 1987, 1992, 1994, 1999, 2004, 2007, 2009, 2012, 2015, 2029, 2036, 2040, 2042, 2052, 2053, 2054], "input_s": [0, 730, 756, 757, 761, 1439, 1440, 1458, 1459, 1503, 1504, 1505, 1962], "num_class": [0, 1631, 1962, 2046], "super": [0, 9, 12, 21, 22, 25, 27, 46, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 857, 858, 1165, 1248, 1253, 1256, 1257, 1262, 1266, 1267, 1268, 1488, 1489, 1490, 1498, 1499, 1500, 1501, 1666, 1767, 1961, 1963, 1964, 1965, 1987, 1992, 1999, 2004, 2007, 2009, 2012, 2015, 2036, 2040, 2052, 2053, 2054], "fc1": [0, 22, 1666, 2007, 2013, 2036], "x": [0, 1, 3, 11, 12, 14, 21, 22, 25, 31, 33, 39, 46, 47, 49, 51, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 169, 250, 254, 282, 285, 307, 309, 311, 313, 317, 348, 373, 444, 479, 482, 489, 495, 554, 556, 579, 603, 604, 613, 688, 754, 756, 766, 775, 776, 780, 781, 792, 795, 798, 816, 817, 857, 858, 874, 880, 882, 883, 884, 891, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 912, 931, 950, 951, 952, 955, 956, 961, 968, 980, 981, 984, 987, 988, 1041, 1042, 1081, 1088, 1092, 1093, 1098, 1102, 1112, 1113, 1114, 1115, 1117, 1118, 1123, 1124, 1126, 1128, 1132, 1133, 1135, 1138, 1139, 1140, 1148, 1155, 1157, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1179, 1190, 1191, 1204, 1221, 1225, 1237, 1255, 1256, 1257, 1261, 1262, 1265, 1266, 1267, 1268, 1272, 1282, 1295, 1296, 1300, 1303, 1307, 1311, 1313, 1316, 1317, 1318, 1319, 1320, 1323, 1328, 1329, 1330, 1338, 1341, 1344, 1345, 1352, 1378, 1379, 1383, 1384, 1390, 1391, 1400, 1401, 1402, 1403, 1404, 1406, 1421, 1423, 1429, 1435, 1436, 1437, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1474, 1477, 1478, 1479, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1503, 1505, 1506, 1507, 1508, 1515, 1517, 1518, 1519, 1520, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1536, 1537, 1540, 1567, 1591, 1593, 1597, 1598, 1604, 1608, 1612, 1624, 1629, 1634, 1638, 1640, 1645, 1646, 1647, 1651, 1652, 1654, 1655, 1656, 1663, 1666, 1690, 1693, 1695, 1716, 1717, 1718, 1719, 1720, 1725, 1728, 1729, 1730, 1737, 1740, 1761, 1775, 1776, 1787, 1789, 1803, 1806, 1807, 1809, 1810, 1812, 1813, 1817, 1821, 1858, 1860, 1863, 1877, 1880, 1881, 1882, 1888, 1889, 1896, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1920, 1922, 1929, 1930, 1931, 1933, 1934, 1935, 1938, 1959, 1961, 1962, 1963, 1964, 1965, 1968, 1977, 1978, 1979, 1985, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1999, 2000, 2005, 2007, 2008, 2009, 2012, 2015, 2020, 2024, 2025, 2027, 2029, 2030, 2032, 2033, 2034, 2035, 2036, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2052, 2054], "2": [0, 1, 3, 5, 11, 12, 14, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 40, 42, 46, 47, 49, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 169, 187, 204, 221, 229, 230, 250, 256, 282, 309, 311, 313, 317, 331, 373, 397, 398, 441, 442, 443, 444, 445, 477, 483, 484, 489, 492, 495, 509, 511, 513, 540, 554, 556, 576, 577, 579, 580, 581, 583, 584, 585, 603, 613, 676, 677, 679, 680, 681, 682, 685, 686, 687, 688, 689, 691, 693, 694, 695, 730, 734, 735, 736, 737, 738, 739, 741, 742, 751, 754, 756, 758, 789, 792, 816, 861, 870, 871, 872, 873, 874, 875, 876, 880, 882, 883, 884, 886, 896, 899, 901, 902, 904, 905, 906, 907, 908, 909, 911, 912, 920, 921, 924, 931, 933, 935, 937, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 954, 955, 956, 958, 959, 960, 961, 962, 966, 967, 977, 981, 982, 983, 984, 987, 988, 998, 1072, 1077, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1108, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1160, 1161, 1162, 1166, 1167, 1168, 1172, 1179, 1192, 1193, 1194, 1204, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1225, 1227, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1253, 1254, 1260, 1262, 1264, 1266, 1270, 1271, 1272, 1274, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1327, 1328, 1329, 1330, 1337, 1339, 1340, 1341, 1342, 1344, 1345, 1348, 1349, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1369, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1388, 1391, 1396, 1397, 1398, 1399, 1400, 1401, 1406, 1407, 1408, 1409, 1410, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1441, 1443, 1444, 1445, 1446, 1448, 1455, 1456, 1457, 1458, 1459, 1460, 1474, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1493, 1494, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1536, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1558, 1560, 1565, 1566, 1577, 1584, 1585, 1591, 1593, 1595, 1597, 1604, 1610, 1618, 1619, 1620, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1644, 1660, 1666, 1675, 1679, 1680, 1682, 1683, 1689, 1690, 1695, 1707, 1708, 1709, 1710, 1712, 1713, 1716, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1775, 1776, 1778, 1779, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1796, 1798, 1800, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1817, 1821, 1823, 1824, 1826, 1827, 1828, 1829, 1833, 1838, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1854, 1858, 1859, 1860, 1861, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1926, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1957, 1958, 1962, 1963, 1964, 1965, 1968, 1971, 1972, 1973, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1988, 1989, 1991, 1992, 1995, 1996, 1997, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2014, 2017, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2035, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2052, 2053], "we": [0, 1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 21, 22, 25, 27, 29, 30, 31, 32, 33, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 70, 71, 82, 482, 492, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 775, 781, 784, 785, 787, 789, 790, 834, 853, 855, 857, 858, 861, 889, 891, 896, 897, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 924, 937, 946, 968, 995, 1055, 1098, 1116, 1118, 1119, 1120, 1121, 1128, 1133, 1134, 1135, 1149, 1159, 1160, 1162, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1177, 1178, 1179, 1181, 1182, 1183, 1204, 1208, 1209, 1225, 1248, 1250, 1253, 1254, 1262, 1264, 1266, 1306, 1309, 1314, 1322, 1323, 1342, 1374, 1392, 1400, 1401, 1435, 1453, 1488, 1540, 1593, 1595, 1604, 1663, 1670, 1675, 1682, 1683, 1689, 1692, 1701, 1703, 1706, 1710, 1711, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1758, 1764, 1769, 1786, 1829, 1919, 1924, 1935, 1959, 1960, 1961, 1963, 1964, 1966, 1968, 1971, 1972, 1973, 1977, 1978, 1979, 1980, 1987, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1999, 2001, 2002, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2016, 2018, 2020, 2021, 2022, 2024, 2027, 2029, 2030, 2033, 2034, 2036, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054], "suggest": [0, 9, 22, 46, 50, 78, 79, 81, 83, 1421, 1959, 1966, 1986, 1987, 1994, 2024, 2048, 2054], "issu": [0, 2, 3, 5, 9, 10, 11, 14, 20, 21, 25, 31, 32, 46, 49, 50, 52, 54, 58, 60, 80, 81, 904, 910, 924, 968, 970, 971, 1149, 1161, 1163, 1167, 1178, 1296, 1340, 1352, 1453, 1458, 1484, 1485, 1486, 1503, 1540, 1604, 1605, 1727, 1825, 1935, 1959, 1960, 1964, 1966, 1971, 1977, 1978, 1979, 1980, 1986, 1987, 1990, 1992, 1995, 2001, 2002, 2003, 2005, 2009, 2012, 2015, 2016, 2020, 2024, 2025, 2026, 2027, 2030, 2039, 2041, 2044, 2045, 2054, 2056], "http": [0, 2, 3, 4, 7, 9, 12, 14, 15, 22, 23, 25, 31, 42, 43, 49, 146, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 788, 789, 889, 924, 968, 980, 1098, 1156, 1178, 1183, 1323, 1352, 1407, 1458, 1484, 1485, 1486, 1507, 1531, 1534, 1537, 1691, 1727, 1775, 1792, 1825, 1829, 1849, 1923, 1926, 1959, 1965, 1968, 1974, 1976, 1987, 1988, 1996, 1997, 1999, 2003, 2005, 2009, 2012, 2014, 2027, 2029, 2030, 2041, 2046, 2048, 2053, 2057], "github": [0, 7, 9, 14, 23, 25, 38, 49, 50, 54, 146, 788, 789, 889, 910, 924, 1156, 1178, 1183, 1352, 1484, 1485, 1486, 1531, 1727, 1761, 1825, 1926, 1959, 1966, 1971, 1996, 2003, 2009, 2014, 2015, 2024, 2025, 2027, 2030, 2041, 2044, 2048, 2053], "com": [0, 7, 14, 23, 25, 41, 43, 49, 146, 788, 789, 889, 924, 1156, 1178, 1183, 1352, 1484, 1485, 1486, 1531, 1727, 1825, 1923, 1926, 1959, 1968, 1974, 1976, 1996, 1997, 2003, 2005, 2009, 2014, 2027, 2030, 2041, 2048, 2053], "pytorch": [0, 1, 2, 3, 4, 11, 12, 13, 14, 17, 18, 21, 22, 27, 28, 29, 30, 31, 32, 33, 35, 42, 43, 47, 49, 50, 53, 55, 58, 59, 60, 78, 79, 80, 81, 82, 83, 146, 509, 579, 676, 694, 726, 727, 728, 729, 741, 742, 752, 756, 757, 758, 759, 760, 761, 788, 789, 806, 807, 808, 809, 876, 889, 922, 924, 953, 958, 959, 968, 969, 980, 1023, 1024, 1035, 1040, 1098, 1143, 1149, 1156, 1157, 1161, 1166, 1167, 1183, 1196, 1236, 1237, 1261, 1281, 1287, 1292, 1294, 1295, 1296, 1299, 1312, 1321, 1337, 1340, 1341, 1352, 1400, 1401, 1407, 1439, 1453, 1484, 1485, 1486, 1531, 1548, 1549, 1550, 1566, 1644, 1675, 1682, 1683, 1716, 1724, 1725, 1727, 1730, 1738, 1785, 1817, 1825, 1826, 1827, 1835, 1882, 1886, 1910, 1923, 1926, 1935, 1950, 1952, 1959, 1963, 1964, 1968, 1970, 1971, 1974, 1975, 1979, 1980, 1981, 1988, 1989, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2005, 2006, 2007, 2011, 2012, 2014, 2016, 2017, 2020, 2021, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2036, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2052, 2053, 2055, 2056, 2057], "75956": 0, "_c": [0, 21, 22, 25, 57, 904, 910, 1249, 1262, 1736, 1962, 1964, 1975, 1990, 1998, 2002, 2005, 2009, 2020], "_jit_set_autocast_mod": 0, "fals": [0, 1, 2, 3, 5, 12, 14, 21, 22, 25, 26, 27, 29, 30, 31, 33, 46, 49, 52, 56, 58, 60, 65, 68, 69, 70, 71, 108, 109, 110, 111, 112, 114, 130, 131, 132, 146, 177, 178, 179, 192, 205, 256, 297, 314, 315, 317, 324, 328, 331, 332, 334, 338, 339, 340, 347, 350, 388, 392, 403, 405, 406, 407, 410, 417, 425, 426, 427, 428, 441, 442, 443, 444, 445, 449, 454, 456, 466, 467, 475, 491, 492, 500, 513, 538, 551, 552, 561, 576, 590, 599, 605, 606, 611, 613, 676, 689, 690, 691, 692, 693, 695, 708, 709, 710, 711, 712, 713, 730, 731, 741, 742, 747, 748, 749, 751, 754, 756, 764, 765, 772, 774, 775, 776, 778, 779, 781, 793, 795, 810, 815, 816, 817, 818, 820, 821, 822, 834, 835, 853, 854, 859, 861, 870, 871, 872, 876, 889, 891, 896, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 928, 937, 940, 943, 945, 946, 952, 953, 959, 960, 961, 967, 968, 980, 981, 1001, 1039, 1044, 1056, 1098, 1099, 1100, 1101, 1103, 1104, 1111, 1115, 1116, 1117, 1118, 1123, 1124, 1129, 1130, 1131, 1133, 1134, 1135, 1150, 1152, 1153, 1154, 1155, 1157, 1158, 1160, 1161, 1162, 1164, 1166, 1172, 1181, 1182, 1188, 1190, 1192, 1194, 1207, 1208, 1209, 1212, 1213, 1235, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1250, 1255, 1257, 1258, 1266, 1267, 1268, 1270, 1272, 1275, 1280, 1281, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1303, 1305, 1307, 1308, 1311, 1312, 1313, 1314, 1315, 1320, 1321, 1322, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1344, 1348, 1350, 1351, 1353, 1356, 1362, 1365, 1366, 1374, 1379, 1380, 1381, 1382, 1385, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1421, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1436, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1473, 1474, 1475, 1479, 1480, 1481, 1482, 1483, 1487, 1488, 1491, 1492, 1493, 1494, 1495, 1497, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1515, 1517, 1519, 1520, 1527, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1540, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1565, 1566, 1567, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1588, 1589, 1590, 1593, 1595, 1597, 1598, 1599, 1604, 1605, 1608, 1614, 1615, 1616, 1618, 1619, 1620, 1624, 1629, 1633, 1637, 1639, 1640, 1642, 1643, 1644, 1645, 1647, 1657, 1660, 1661, 1663, 1669, 1675, 1677, 1679, 1680, 1684, 1685, 1687, 1689, 1692, 1694, 1695, 1696, 1708, 1717, 1718, 1719, 1720, 1722, 1725, 1728, 1729, 1730, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1783, 1785, 1786, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1809, 1810, 1817, 1821, 1829, 1830, 1833, 1835, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1858, 1868, 1869, 1870, 1871, 1872, 1873, 1880, 1881, 1882, 1885, 1886, 1901, 1905, 1910, 1919, 1923, 1924, 1926, 1929, 1930, 1931, 1938, 1957, 1958, 1959, 1961, 1962, 1963, 1964, 1970, 1971, 1973, 1974, 1977, 1979, 1980, 1986, 1987, 1990, 1991, 1992, 1994, 1995, 1999, 2002, 2003, 2004, 2007, 2008, 2009, 2012, 2013, 2014, 2016, 2019, 2020, 2024, 2025, 2026, 2028, 2029, 2031, 2032, 2034, 2039, 2041, 2042, 2044, 2047, 2049, 2050, 2053, 2054, 2055], "randn": [0, 1, 11, 12, 25, 31, 46, 51, 53, 54, 55, 58, 60, 62, 68, 69, 285, 307, 479, 540, 576, 580, 581, 582, 583, 584, 585, 613, 679, 680, 681, 682, 683, 684, 685, 686, 691, 692, 695, 716, 724, 725, 730, 734, 735, 736, 737, 738, 739, 752, 754, 756, 757, 758, 759, 760, 761, 768, 769, 770, 857, 858, 870, 871, 872, 874, 877, 878, 879, 880, 881, 931, 936, 948, 955, 957, 958, 959, 960, 961, 963, 983, 984, 985, 986, 987, 998, 1077, 1078, 1079, 1085, 1086, 1087, 1088, 1092, 1098, 1112, 1113, 1142, 1150, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1221, 1225, 1227, 1262, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1304, 1305, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1326, 1330, 1331, 1338, 1340, 1341, 1342, 1344, 1345, 1348, 1350, 1351, 1353, 1355, 1357, 1358, 1372, 1373, 1376, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1487, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1514, 1515, 1517, 1518, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1536, 1538, 1539, 1543, 1544, 1545, 1547, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1588, 1589, 1595, 1629, 1635, 1636, 1733, 1776, 1781, 1782, 1783, 1785, 1786, 1799, 1803, 1804, 1816, 1851, 1853, 1858, 1864, 1867, 1875, 1876, 1885, 1886, 1896, 1899, 1900, 1903, 1907, 1910, 1911, 1913, 1916, 1918, 1923, 1933, 1934, 1935, 1938, 1962, 1963, 1964, 1966, 1968, 1972, 1978, 1979, 1980, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1997, 1999, 2003, 2004, 2007, 2008, 2009, 2010, 2012, 2015, 2020, 2024, 2025, 2027, 2029, 2032, 2034, 2036, 2039, 2040, 2041, 2044, 2046, 2047, 2049, 2052, 2054], "freez": [0, 49, 1172, 1250, 1260, 1430, 1431, 1488, 1987], "_": [0, 1, 3, 21, 22, 25, 26, 29, 35, 55, 58, 677, 679, 680, 694, 861, 877, 878, 879, 880, 881, 891, 896, 900, 901, 902, 912, 938, 957, 973, 982, 983, 985, 986, 988, 1142, 1147, 1162, 1166, 1217, 1271, 1279, 1330, 1338, 1402, 1403, 1404, 1450, 1451, 1452, 1503, 1527, 1675, 1690, 1724, 1753, 1755, 1775, 1798, 1801, 1804, 1816, 1836, 1838, 1844, 1851, 1853, 1875, 1886, 1899, 1900, 1968, 1987, 1990, 1993, 1994, 1999, 2005, 2011, 2012, 2014, 2025, 2040, 2041, 2047, 2048, 2052, 2054], "3": [0, 1, 3, 4, 6, 9, 11, 12, 18, 19, 21, 22, 25, 27, 29, 31, 32, 33, 35, 40, 42, 46, 49, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 187, 204, 229, 250, 256, 285, 309, 311, 313, 317, 397, 398, 441, 442, 443, 444, 445, 467, 483, 484, 489, 492, 495, 509, 511, 513, 519, 533, 540, 554, 556, 577, 579, 580, 581, 583, 584, 603, 613, 676, 677, 681, 682, 683, 684, 685, 686, 687, 688, 689, 693, 694, 695, 730, 734, 735, 736, 737, 738, 739, 742, 744, 753, 756, 757, 758, 759, 761, 768, 769, 770, 781, 789, 820, 857, 858, 861, 871, 872, 874, 875, 876, 883, 884, 904, 905, 906, 907, 908, 909, 911, 931, 936, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 951, 952, 954, 955, 956, 958, 959, 960, 961, 962, 966, 967, 977, 981, 982, 987, 988, 998, 1041, 1042, 1044, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1111, 1114, 1119, 1122, 1126, 1132, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1155, 1157, 1162, 1163, 1165, 1167, 1192, 1193, 1194, 1204, 1207, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1225, 1227, 1235, 1237, 1239, 1241, 1250, 1254, 1257, 1260, 1262, 1266, 1267, 1271, 1272, 1273, 1274, 1275, 1276, 1280, 1282, 1283, 1284, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1328, 1331, 1333, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1397, 1398, 1399, 1400, 1401, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1423, 1430, 1431, 1434, 1435, 1436, 1437, 1439, 1440, 1442, 1444, 1445, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1491, 1493, 1495, 1500, 1501, 1503, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1521, 1522, 1523, 1527, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1548, 1549, 1550, 1558, 1560, 1565, 1566, 1569, 1570, 1572, 1573, 1576, 1584, 1585, 1588, 1589, 1591, 1593, 1597, 1598, 1604, 1612, 1629, 1631, 1632, 1635, 1636, 1642, 1643, 1650, 1651, 1663, 1675, 1682, 1683, 1690, 1705, 1707, 1709, 1710, 1711, 1712, 1716, 1718, 1719, 1720, 1721, 1724, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1764, 1767, 1768, 1770, 1774, 1776, 1778, 1782, 1783, 1785, 1786, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1798, 1800, 1801, 1802, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1813, 1814, 1817, 1821, 1826, 1827, 1833, 1836, 1838, 1840, 1842, 1843, 1844, 1848, 1849, 1850, 1858, 1860, 1861, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1885, 1886, 1888, 1889, 1896, 1897, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1929, 1932, 1935, 1936, 1937, 1938, 1957, 1958, 1961, 1962, 1963, 1964, 1965, 1968, 1971, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1999, 2000, 2004, 2005, 2007, 2009, 2011, 2012, 2014, 2015, 2017, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2036, 2039, 2041, 2044, 2046, 2047, 2048, 2049, 2051, 2052, 2053, 2054], "bug": [0, 14, 18, 25, 46, 58, 1159, 1160, 1162, 1340, 1986, 2001, 2024, 2044, 2054], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 68, 69, 75, 76, 77, 78, 79, 80, 81, 82, 83, 115, 146, 150, 191, 192, 202, 205, 217, 218, 219, 251, 256, 285, 286, 309, 317, 319, 331, 333, 336, 348, 411, 441, 442, 443, 444, 445, 454, 482, 483, 484, 489, 491, 492, 493, 494, 495, 496, 499, 500, 509, 511, 513, 520, 552, 562, 579, 580, 581, 583, 584, 585, 599, 600, 610, 613, 614, 676, 680, 682, 685, 689, 690, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 731, 732, 733, 740, 744, 745, 746, 747, 748, 749, 750, 751, 753, 755, 756, 771, 772, 773, 774, 775, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 798, 806, 807, 808, 809, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 850, 855, 857, 858, 870, 871, 872, 873, 874, 881, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 920, 921, 922, 924, 928, 935, 936, 939, 941, 944, 948, 949, 952, 956, 958, 959, 962, 963, 965, 968, 970, 971, 972, 973, 974, 976, 981, 982, 984, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1001, 1002, 1004, 1005, 1006, 1009, 1020, 1022, 1025, 1026, 1027, 1029, 1030, 1033, 1034, 1035, 1036, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1051, 1054, 1055, 1056, 1062, 1063, 1065, 1066, 1067, 1071, 1072, 1073, 1079, 1080, 1081, 1086, 1088, 1089, 1093, 1096, 1097, 1098, 1102, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1137, 1138, 1139, 1140, 1141, 1144, 1145, 1146, 1149, 1152, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1179, 1180, 1182, 1183, 1190, 1193, 1195, 1196, 1204, 1208, 1214, 1216, 1237, 1247, 1248, 1250, 1251, 1253, 1255, 1256, 1258, 1260, 1261, 1262, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1326, 1328, 1331, 1340, 1341, 1345, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1362, 1365, 1366, 1376, 1379, 1380, 1381, 1382, 1384, 1392, 1396, 1400, 1401, 1402, 1403, 1404, 1407, 1408, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1440, 1442, 1447, 1448, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1473, 1475, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1491, 1494, 1495, 1498, 1500, 1503, 1504, 1516, 1519, 1521, 1524, 1527, 1533, 1534, 1535, 1536, 1539, 1540, 1541, 1542, 1546, 1547, 1548, 1549, 1550, 1551, 1558, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1593, 1595, 1597, 1602, 1604, 1610, 1612, 1618, 1619, 1620, 1630, 1632, 1634, 1644, 1650, 1651, 1659, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1679, 1682, 1683, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1725, 1727, 1728, 1730, 1731, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1764, 1765, 1767, 1769, 1771, 1773, 1774, 1775, 1779, 1783, 1785, 1792, 1796, 1798, 1801, 1805, 1807, 1814, 1821, 1823, 1824, 1825, 1827, 1828, 1829, 1833, 1835, 1836, 1841, 1854, 1859, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1878, 1880, 1881, 1882, 1885, 1886, 1888, 1889, 1896, 1898, 1902, 1904, 1908, 1910, 1918, 1919, 1920, 1922, 1923, 1924, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1944, 1946, 1947, 1948, 1950, 1953, 1954, 1955, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1982, 1985, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2059], "what": [0, 1, 3, 5, 7, 8, 9, 25, 27, 31, 35, 39, 40, 46, 49, 51, 53, 54, 58, 60, 888, 901, 902, 1160, 1171, 1172, 1179, 1266, 1267, 1340, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1482, 1483, 1516, 1539, 1618, 1619, 1620, 1644, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1786, 1959, 1960, 1961, 1963, 1964, 1968, 1972, 1978, 1990, 1992, 1993, 1995, 1996, 1999, 2001, 2009, 2011, 2014, 2015, 2020, 2021, 2024, 2039, 2040, 2042, 2043, 2045, 2046, 2047, 2054, 2056], "observ": [0, 22, 33, 42, 482, 752, 785, 786, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 804, 805, 807, 809, 811, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 837, 855, 857, 858, 860, 923, 984, 988, 1185, 1264, 1352, 1400, 1401, 1402, 1403, 1404, 1421, 1423, 1447, 1450, 1451, 1452, 1453, 1454, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1527, 1536, 1565, 1566, 1576, 1605, 1629, 1637, 1986, 1987, 1990, 1998, 2001, 2016, 2034, 2038, 2039, 2044, 2052, 2054, 2056], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22, 25, 27, 31, 34, 37, 38, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 58, 60, 70, 71, 77, 82, 250, 251, 494, 509, 614, 685, 726, 727, 728, 729, 730, 731, 737, 738, 739, 741, 742, 752, 757, 758, 759, 760, 761, 857, 858, 888, 891, 894, 895, 901, 902, 904, 906, 907, 910, 924, 950, 980, 1081, 1155, 1159, 1160, 1161, 1162, 1163, 1167, 1247, 1250, 1314, 1345, 1355, 1407, 1418, 1453, 1488, 1593, 1604, 1605, 1610, 1632, 1644, 1662, 1675, 1724, 1725, 1727, 1742, 1743, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1799, 1825, 1827, 1871, 1935, 1966, 1968, 1971, 1978, 1979, 1980, 1981, 1986, 1987, 1992, 1993, 1995, 1997, 2002, 2003, 2005, 2009, 2011, 2012, 2015, 2018, 2020, 2021, 2024, 2025, 2026, 2027, 2028, 2029, 2031, 2036, 2040, 2041, 2043, 2044, 2051, 2054], "file": [0, 1, 3, 6, 7, 9, 11, 14, 18, 21, 27, 33, 35, 40, 42, 44, 46, 47, 52, 54, 58, 904, 910, 911, 925, 927, 1000, 1037, 1150, 1159, 1160, 1162, 1163, 1250, 1258, 1261, 1322, 1737, 1817, 1861, 1959, 1961, 1964, 1965, 1966, 1972, 1974, 1978, 1979, 1980, 1987, 1990, 1992, 1998, 2001, 2003, 2005, 2007, 2009, 2014, 2018, 2021, 2024, 2026, 2029, 2036, 2040, 2042, 2044, 2046, 2048, 2051, 2052, 2054, 2056], "subregion": 0, "nest": [0, 1, 5, 12, 14, 27, 46, 49, 58, 60, 63, 68, 69, 585, 789, 811, 813, 891, 906, 980, 1059, 1060, 1157, 1167, 1250, 1253, 1266, 1488, 1494, 1534, 1535, 1682, 1683, 1738, 1935, 1960, 1993, 1995, 2007, 2009, 2014, 2020], "local": [0, 5, 25, 27, 29, 30, 33, 40, 42, 43, 44, 45, 49, 58, 911, 912, 913, 1041, 1102, 1156, 1250, 1323, 1426, 1427, 1428, 1432, 1434, 1476, 1488, 1539, 1587, 1611, 1662, 1675, 1676, 1728, 1861, 1959, 1960, 1963, 1977, 1986, 1990, 1991, 1994, 2004, 2009, 2012, 2013, 2017, 2020, 2021, 2022, 2029, 2041, 2044, 2047, 2054, 2056], "want": [0, 1, 7, 8, 9, 14, 21, 25, 30, 31, 39, 46, 49, 51, 52, 53, 54, 57, 58, 60, 444, 482, 492, 495, 777, 787, 834, 1037, 1155, 1156, 1171, 1172, 1263, 1266, 1267, 1352, 1435, 1436, 1540, 1588, 1589, 1604, 1663, 1675, 1676, 1725, 1728, 1742, 1743, 1755, 1756, 1817, 1926, 1959, 1968, 1971, 1986, 1987, 1989, 1990, 1992, 1993, 1995, 1996, 1999, 2009, 2011, 2012, 2015, 2024, 2029, 2030, 2033, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2050, 2053], "forc": [0, 1, 14, 18, 49, 454, 876, 968, 1037, 1169, 1253, 1265, 1269, 1835, 1871, 1959, 1961, 1964, 1986, 1990, 2029, 2032, 2039, 2041], "particular": [0, 1, 3, 7, 21, 27, 33, 39, 42, 43, 46, 47, 49, 58, 60, 65, 69, 482, 556, 676, 857, 858, 1072, 1167, 1168, 1250, 1345, 1424, 1488, 1935, 1961, 1963, 1971, 1980, 1990, 1992, 1994, 1995, 1998, 1999, 2002, 2007, 2009, 2011, 2024, 2026, 2032, 2039, 2043, 2044, 2045, 2054, 2055, 2056], "give": [0, 3, 4, 7, 9, 12, 18, 21, 22, 27, 29, 41, 46, 49, 58, 915, 916, 988, 1116, 1118, 1119, 1121, 1125, 1134, 1159, 1160, 1161, 1172, 1251, 1264, 1265, 1280, 1287, 1415, 1416, 1417, 1493, 1539, 1540, 1689, 1729, 1742, 1743, 1755, 1882, 1923, 1959, 1961, 1977, 1979, 1985, 1987, 1990, 1992, 1993, 1995, 1996, 1997, 1999, 2003, 2009, 2011, 2013, 2024, 2039, 2042, 2043, 2051, 2054, 2055], "explicit": [0, 8, 12, 25, 46, 49, 53, 58, 1033, 1171, 1204, 1237, 1605, 1825, 1903, 1959, 1960, 1964, 1965, 1978, 1986, 1990, 1992, 1995, 2012, 2027, 2028, 2049], "control": [0, 1, 2, 14, 21, 22, 25, 26, 27, 31, 33, 38, 41, 42, 47, 60, 66, 69, 751, 795, 854, 857, 872, 876, 891, 937, 946, 980, 1085, 1086, 1087, 1088, 1089, 1169, 1208, 1209, 1262, 1263, 1264, 1266, 1281, 1287, 1289, 1292, 1294, 1297, 1299, 1303, 1309, 1312, 1314, 1320, 1340, 1392, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1474, 1482, 1483, 1539, 1644, 1675, 1773, 1829, 1830, 1843, 1858, 1861, 1866, 1882, 1886, 1905, 1911, 1912, 1913, 1914, 1960, 1961, 1970, 1987, 1989, 1990, 1991, 1999, 2001, 2002, 2004, 2006, 2007, 2009, 2011, 2014, 2015, 2022, 2024, 2039, 2040, 2042, 2044, 2047], "execut": [0, 1, 2, 3, 4, 5, 7, 14, 15, 21, 25, 27, 29, 33, 34, 36, 43, 46, 47, 49, 54, 57, 58, 77, 483, 484, 896, 920, 921, 968, 1004, 1015, 1076, 1156, 1250, 1251, 1253, 1266, 1267, 1322, 1365, 1366, 1424, 1488, 1494, 1531, 1532, 1533, 1534, 1535, 1669, 1675, 1831, 1940, 1960, 1961, 1963, 1965, 1973, 1986, 1988, 1989, 1994, 1995, 1998, 1999, 2001, 2003, 2005, 2007, 2009, 2014, 2015, 2020, 2021, 2024, 2036, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2053, 2054], "surround": [0, 58, 786, 1963, 1986, 1990], "ensur": [0, 1, 4, 6, 7, 9, 21, 25, 26, 27, 29, 30, 33, 42, 43, 45, 46, 49, 57, 58, 477, 482, 731, 815, 896, 897, 899, 901, 976, 1156, 1250, 1396, 1401, 1481, 1488, 1491, 1531, 1593, 1618, 1619, 1620, 1644, 1675, 1682, 1683, 1832, 1959, 1961, 1963, 1971, 1974, 1977, 1986, 1987, 1990, 1992, 1993, 1996, 2001, 2003, 2004, 2012, 2015, 2016, 2020, 2021, 2026, 2039, 2043, 2044, 2054], "necessari": [0, 1, 3, 9, 14, 21, 27, 30, 33, 42, 43, 46, 49, 56, 57, 84, 187, 204, 482, 556, 585, 896, 900, 901, 902, 1156, 1172, 1225, 1262, 1494, 1717, 1718, 1961, 1964, 1979, 1985, 1987, 1988, 1990, 1991, 1997, 1999, 2002, 2005, 2012, 2015, 2020, 2021, 2022, 2027, 2036, 2044, 2054], "becaus": [0, 1, 3, 4, 5, 7, 8, 14, 21, 22, 25, 27, 29, 31, 35, 46, 47, 49, 53, 54, 57, 58, 60, 68, 69, 482, 492, 906, 915, 916, 1119, 1120, 1121, 1129, 1130, 1131, 1157, 1161, 1166, 1167, 1171, 1172, 1177, 1179, 1185, 1247, 1251, 1254, 1258, 1297, 1298, 1322, 1340, 1402, 1403, 1404, 1424, 1527, 1666, 1675, 1676, 1759, 1801, 1829, 1882, 1935, 1960, 1961, 1964, 1966, 1972, 1977, 1978, 1979, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2007, 2009, 2012, 2015, 2016, 2020, 2022, 2024, 2029, 2031, 2034, 2036, 2039, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2052, 2054, 2055, 2056], "wa": [0, 1, 3, 7, 18, 22, 25, 40, 41, 42, 43, 46, 47, 49, 57, 58, 331, 482, 492, 676, 781, 788, 850, 922, 958, 969, 1001, 1002, 1025, 1029, 1044, 1057, 1076, 1118, 1167, 1247, 1257, 1266, 1281, 1292, 1294, 1298, 1322, 1340, 1362, 1374, 1458, 1484, 1485, 1486, 1517, 1540, 1558, 1593, 1647, 1663, 1675, 1676, 1719, 1761, 1767, 1880, 1881, 1919, 1920, 1930, 1931, 1935, 1959, 1961, 1963, 1964, 1965, 1968, 1970, 1971, 1975, 1977, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1995, 1998, 2000, 2007, 2009, 2011, 2013, 2015, 2019, 2020, 2024, 2026, 2031, 2036, 2042, 2043, 2044, 2047, 2053, 2056], "f_float32": 0, "re": [0, 1, 4, 5, 7, 14, 21, 25, 29, 30, 32, 39, 42, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 484, 948, 999, 1033, 1149, 1250, 1254, 1488, 1650, 1676, 1719, 1798, 1812, 1865, 1961, 1964, 1968, 1971, 1977, 1986, 1987, 1990, 1992, 1993, 1996, 2001, 2015, 2021, 2022, 2025, 2039, 2041, 2042, 2043, 2044, 2053, 2054, 2055], "again": [0, 18, 21, 25, 29, 33, 46, 52, 1374, 1987, 1992, 1993, 1999, 2039, 2043, 2047, 2048], "regardless": [0, 3, 21, 25, 41, 46, 49, 982, 1175, 1250, 1254, 1260, 1488, 1669, 1919, 1986, 1990, 2004, 2020, 2031, 2044], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 12, 14, 15, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 53, 54, 55, 56, 57, 60, 68, 69, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 146, 187, 192, 204, 205, 217, 229, 251, 286, 307, 309, 311, 315, 317, 394, 396, 397, 398, 444, 454, 479, 482, 483, 484, 489, 491, 494, 495, 509, 511, 513, 533, 540, 579, 599, 613, 614, 676, 680, 683, 684, 685, 686, 690, 691, 692, 693, 731, 744, 753, 756, 762, 763, 764, 765, 768, 769, 770, 775, 776, 778, 779, 781, 782, 783, 788, 789, 790, 791, 795, 798, 811, 813, 815, 816, 817, 818, 821, 823, 833, 834, 850, 855, 860, 873, 874, 876, 880, 881, 885, 886, 888, 889, 891, 894, 895, 901, 902, 904, 905, 907, 908, 909, 910, 915, 916, 920, 921, 924, 927, 929, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 953, 954, 967, 971, 974, 977, 980, 984, 988, 1001, 1007, 1014, 1030, 1041, 1042, 1044, 1045, 1046, 1055, 1068, 1069, 1070, 1075, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1098, 1099, 1103, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1146, 1148, 1149, 1151, 1152, 1153, 1156, 1159, 1162, 1165, 1166, 1167, 1169, 1175, 1176, 1190, 1194, 1195, 1204, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1221, 1225, 1227, 1247, 1250, 1253, 1255, 1258, 1261, 1262, 1264, 1266, 1267, 1270, 1271, 1275, 1276, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1300, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1313, 1314, 1315, 1317, 1320, 1322, 1323, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1351, 1359, 1360, 1364, 1365, 1366, 1369, 1370, 1374, 1380, 1383, 1385, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1476, 1478, 1479, 1480, 1481, 1482, 1483, 1488, 1491, 1493, 1495, 1502, 1503, 1504, 1505, 1506, 1516, 1517, 1519, 1527, 1530, 1531, 1536, 1537, 1539, 1540, 1548, 1549, 1550, 1558, 1561, 1562, 1576, 1577, 1584, 1585, 1586, 1588, 1589, 1592, 1593, 1595, 1604, 1605, 1611, 1618, 1619, 1620, 1632, 1644, 1647, 1663, 1666, 1668, 1669, 1670, 1673, 1674, 1675, 1677, 1678, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1689, 1690, 1691, 1693, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1709, 1710, 1713, 1719, 1723, 1724, 1727, 1729, 1730, 1731, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1775, 1776, 1779, 1782, 1785, 1790, 1791, 1792, 1794, 1796, 1798, 1803, 1805, 1807, 1809, 1810, 1812, 1814, 1817, 1824, 1825, 1826, 1827, 1829, 1833, 1834, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1854, 1860, 1861, 1863, 1864, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1880, 1881, 1882, 1886, 1887, 1897, 1903, 1904, 1905, 1907, 1908, 1911, 1912, 1913, 1914, 1921, 1922, 1923, 1926, 1929, 1930, 1931, 1933, 1935, 1938, 1959, 1961, 1962, 1963, 1965, 1966, 1968, 1970, 1971, 1972, 1973, 1974, 1975, 1977, 1978, 1979, 1980, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2012, 2013, 2014, 2015, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2035, 2036, 2038, 2039, 2040, 2041, 2043, 2044, 2045, 2046, 2047, 2048, 2051, 2052, 2053, 2054, 2056, 2057], "state": [0, 1, 2, 5, 9, 21, 25, 27, 29, 31, 33, 35, 42, 45, 46, 47, 49, 56, 58, 84, 411, 744, 756, 832, 976, 1030, 1031, 1035, 1040, 1044, 1054, 1069, 1070, 1156, 1165, 1203, 1250, 1253, 1266, 1323, 1363, 1370, 1439, 1440, 1458, 1459, 1488, 1503, 1505, 1535, 1551, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1792, 1834, 1861, 1926, 1950, 1952, 1960, 1973, 1986, 1987, 1990, 1991, 1992, 1997, 2001, 2004, 2007, 2009, 2011, 2019, 2033, 2039, 2041, 2042, 2043, 2044, 2050], "thread": [0, 1, 3, 21, 25, 27, 33, 44, 49, 57, 911, 912, 913, 999, 1001, 1033, 1102, 1201, 1202, 1362, 1424, 1728, 1831, 1832, 1925, 1960, 1961, 1975, 1986, 1990, 1995, 1998, 2001, 2020, 2022, 2026, 2032, 2041, 2044], "must": [0, 3, 5, 6, 9, 12, 14, 21, 25, 27, 29, 31, 32, 33, 40, 43, 44, 46, 47, 49, 52, 54, 57, 58, 60, 68, 69, 84, 93, 135, 149, 150, 192, 256, 309, 311, 317, 394, 396, 398, 482, 509, 540, 541, 562, 579, 580, 581, 583, 584, 613, 682, 683, 684, 685, 686, 687, 693, 744, 753, 768, 769, 770, 789, 811, 813, 855, 856, 874, 880, 885, 886, 887, 888, 891, 896, 900, 901, 902, 905, 907, 908, 909, 915, 916, 936, 938, 940, 941, 942, 943, 944, 945, 948, 952, 955, 977, 980, 988, 1001, 1011, 1012, 1013, 1015, 1041, 1042, 1044, 1086, 1088, 1089, 1090, 1092, 1095, 1096, 1098, 1119, 1120, 1121, 1126, 1128, 1129, 1130, 1131, 1132, 1139, 1140, 1149, 1150, 1152, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1171, 1175, 1179, 1180, 1192, 1193, 1204, 1213, 1214, 1217, 1227, 1247, 1250, 1261, 1266, 1273, 1276, 1305, 1306, 1307, 1308, 1314, 1316, 1317, 1320, 1321, 1323, 1337, 1341, 1343, 1344, 1345, 1351, 1358, 1374, 1380, 1383, 1384, 1388, 1401, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1430, 1431, 1434, 1435, 1436, 1441, 1442, 1448, 1481, 1488, 1491, 1492, 1494, 1519, 1525, 1540, 1566, 1575, 1577, 1585, 1604, 1618, 1619, 1620, 1638, 1675, 1684, 1686, 1706, 1716, 1717, 1723, 1725, 1730, 1745, 1765, 1767, 1774, 1775, 1778, 1779, 1782, 1790, 1791, 1812, 1821, 1824, 1832, 1848, 1859, 1863, 1864, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1882, 1887, 1898, 1902, 1903, 1907, 1912, 1914, 1918, 1921, 1923, 1926, 1932, 1933, 1935, 1936, 1938, 1961, 1962, 1963, 1964, 1968, 1971, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1997, 2001, 2004, 2005, 2007, 2009, 2011, 2012, 2013, 2015, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2031, 2039, 2040, 2042, 2044, 2045, 2047, 2053, 2054, 2055], "invok": [0, 2, 8, 15, 18, 21, 25, 40, 42, 43, 57, 58, 904, 906, 1041, 1042, 1250, 1253, 1260, 1424, 1488, 1668, 1670, 1673, 1674, 1727, 1761, 1767, 1961, 1964, 1965, 1973, 1986, 1989, 1990, 1991, 1992, 1993, 1998, 1999, 2012, 2020, 2021, 2036, 2039, 2043, 2044, 2045, 2047], "affect": [0, 1, 2, 7, 9, 18, 20, 32, 46, 49, 217, 218, 781, 911, 912, 913, 1002, 1004, 1102, 1149, 1150, 1250, 1365, 1366, 1458, 1488, 1503, 1540, 1663, 1676, 1682, 1683, 1728, 1825, 1828, 1829, 1986, 1987, 1990, 1995, 1996, 1999, 2002, 2003, 2026, 2050, 2052], "dataparallel": [0, 25, 1659, 1675, 1719, 1960, 1987, 1994, 2001, 2020], "parallel": [0, 13, 14, 21, 22, 25, 26, 27, 29, 42, 43, 49, 1201, 1202, 1253, 1424, 1494, 1527, 1593, 1644, 1675, 1831, 1832, 1960, 1964, 1986, 1987, 1989, 2001, 2005, 2020, 2022, 2038, 2044], "distributeddataparallel": [0, 21, 22, 25, 26, 27, 29, 43, 49, 676, 1424, 1527, 2001, 2013, 2020, 2044], "than": [0, 3, 4, 5, 6, 8, 9, 11, 14, 21, 22, 25, 26, 27, 31, 32, 33, 35, 39, 42, 43, 44, 46, 49, 54, 56, 58, 60, 61, 69, 146, 250, 482, 495, 541, 613, 676, 775, 781, 889, 905, 906, 923, 928, 939, 950, 957, 958, 962, 963, 1013, 1051, 1055, 1068, 1086, 1087, 1138, 1139, 1140, 1142, 1146, 1152, 1163, 1182, 1194, 1207, 1211, 1225, 1235, 1247, 1248, 1251, 1262, 1271, 1272, 1275, 1280, 1281, 1287, 1291, 1296, 1304, 1305, 1307, 1308, 1311, 1316, 1322, 1326, 1339, 1342, 1348, 1351, 1353, 1356, 1369, 1374, 1384, 1400, 1401, 1415, 1416, 1417, 1424, 1430, 1431, 1448, 1458, 1480, 1494, 1502, 1510, 1519, 1525, 1535, 1536, 1537, 1558, 1568, 1569, 1570, 1584, 1585, 1593, 1604, 1631, 1644, 1660, 1662, 1663, 1666, 1675, 1682, 1683, 1689, 1690, 1692, 1693, 1719, 1724, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1767, 1769, 1783, 1784, 1805, 1806, 1829, 1833, 1867, 1868, 1869, 1870, 1872, 1873, 1904, 1912, 1914, 1923, 1959, 1961, 1963, 1964, 1966, 1972, 1979, 1980, 1981, 1985, 1987, 1988, 1990, 1992, 1993, 1994, 1995, 1996, 1999, 2001, 2002, 2003, 2004, 2009, 2011, 2012, 2013, 2015, 2016, 2020, 2024, 2025, 2027, 2029, 2030, 2031, 2039, 2040, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2052, 2054, 2056], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 39, 42, 44, 45, 46, 47, 49, 53, 54, 55, 57, 58, 60, 65, 68, 69, 78, 79, 80, 81, 83, 146, 217, 250, 348, 398, 482, 509, 516, 541, 556, 693, 744, 753, 789, 850, 851, 852, 876, 882, 888, 889, 891, 894, 896, 897, 901, 902, 906, 911, 912, 924, 939, 950, 952, 962, 966, 970, 980, 997, 1002, 1004, 1009, 1011, 1015, 1042, 1065, 1076, 1087, 1098, 1102, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1128, 1129, 1130, 1131, 1132, 1134, 1137, 1141, 1144, 1145, 1146, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1172, 1204, 1213, 1214, 1229, 1232, 1235, 1254, 1260, 1264, 1270, 1271, 1281, 1282, 1292, 1295, 1296, 1298, 1303, 1307, 1309, 1311, 1314, 1320, 1321, 1337, 1345, 1349, 1354, 1374, 1380, 1392, 1397, 1400, 1401, 1402, 1403, 1404, 1407, 1415, 1418, 1419, 1420, 1431, 1435, 1436, 1441, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1467, 1468, 1469, 1479, 1488, 1492, 1494, 1527, 1535, 1540, 1558, 1568, 1571, 1572, 1573, 1588, 1589, 1590, 1595, 1631, 1644, 1662, 1666, 1675, 1676, 1690, 1691, 1692, 1696, 1706, 1717, 1727, 1728, 1729, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1763, 1765, 1766, 1767, 1787, 1788, 1805, 1821, 1829, 1833, 1836, 1877, 1886, 1902, 1907, 1908, 1910, 1918, 1919, 1921, 1922, 1923, 1926, 1935, 1960, 1961, 1964, 1968, 1970, 1973, 1975, 1977, 1978, 1979, 1980, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1998, 1999, 2001, 2003, 2004, 2005, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2020, 2022, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2051, 2053, 2054, 2056], "gpu": [0, 1, 2, 3, 4, 7, 14, 17, 19, 21, 22, 27, 33, 43, 44, 49, 57, 192, 205, 285, 328, 599, 756, 968, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1015, 1021, 1022, 1023, 1030, 1036, 1037, 1043, 1045, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1061, 1062, 1063, 1064, 1065, 1066, 1069, 1075, 1076, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1146, 1250, 1260, 1297, 1322, 1351, 1359, 1360, 1361, 1365, 1366, 1392, 1424, 1439, 1458, 1488, 1503, 1504, 1527, 1659, 1675, 1716, 1886, 1960, 1961, 1973, 1976, 1990, 1992, 1995, 1997, 1999, 2000, 2002, 2003, 2005, 2015, 2020, 2024, 2026, 2030, 2032, 2035, 2036, 2039, 2041, 2043, 2046, 2051, 2052, 2054, 2056, 2059], "per": [0, 14, 21, 22, 25, 26, 27, 29, 30, 32, 33, 35, 41, 43, 44, 49, 50, 55, 468, 469, 470, 730, 731, 797, 804, 815, 818, 821, 829, 841, 849, 888, 901, 902, 904, 906, 924, 968, 1005, 1081, 1112, 1157, 1167, 1323, 1400, 1401, 1402, 1403, 1404, 1421, 1423, 1424, 1431, 1442, 1447, 1450, 1451, 1452, 1453, 1454, 1460, 1479, 1480, 1488, 1491, 1492, 1493, 1494, 1495, 1502, 1519, 1520, 1527, 1531, 1532, 1533, 1534, 1535, 1536, 1565, 1566, 1576, 1605, 1629, 1637, 1675, 1691, 1727, 1731, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1761, 1767, 1775, 1787, 1833, 1835, 1887, 1904, 1908, 1926, 1935, 1941, 1975, 1979, 1981, 1989, 1990, 1991, 1993, 1995, 1998, 2013, 2015, 2016, 2018, 2021, 2024, 2029, 2042, 2056], "process": [0, 1, 3, 11, 14, 22, 25, 26, 27, 29, 31, 33, 34, 35, 36, 42, 43, 44, 45, 46, 49, 58, 75, 76, 77, 80, 82, 1001, 1037, 1043, 1068, 1150, 1181, 1182, 1250, 1261, 1323, 1360, 1369, 1400, 1401, 1421, 1423, 1430, 1431, 1447, 1454, 1479, 1480, 1484, 1485, 1486, 1488, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1527, 1531, 1533, 1535, 1536, 1565, 1566, 1576, 1605, 1629, 1637, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1764, 1770, 1799, 1835, 1849, 1926, 1959, 1960, 1961, 1968, 1975, 1977, 1978, 1979, 1987, 1989, 1990, 1991, 1992, 1995, 1998, 1999, 2001, 2003, 2005, 2007, 2009, 2012, 2013, 2014, 2015, 2018, 2020, 2022, 2024, 2026, 2033, 2036, 2038, 2042, 2044, 2047, 2052, 2054], "work": [0, 1, 2, 3, 5, 7, 8, 9, 11, 14, 15, 17, 25, 26, 27, 29, 31, 32, 33, 42, 43, 44, 45, 46, 49, 50, 54, 58, 60, 68, 69, 77, 115, 146, 348, 441, 442, 443, 444, 445, 482, 583, 584, 817, 857, 858, 889, 896, 910, 968, 999, 1001, 1002, 1004, 1033, 1044, 1045, 1065, 1099, 1101, 1118, 1138, 1139, 1140, 1150, 1156, 1175, 1180, 1250, 1254, 1262, 1263, 1286, 1287, 1314, 1315, 1323, 1362, 1424, 1485, 1488, 1504, 1521, 1632, 1644, 1650, 1675, 1737, 1767, 1794, 1798, 1800, 1826, 1831, 1898, 1901, 1926, 1928, 1940, 1959, 1960, 1961, 1964, 1965, 1976, 1977, 1978, 1979, 1980, 1983, 1985, 1987, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1999, 2001, 2004, 2005, 2009, 2012, 2013, 2015, 2018, 2020, 2021, 2030, 2032, 2036, 2040, 2041, 2042, 2045, 2046, 2047, 2050, 2051, 2054, 2055, 2056], "str": [0, 1, 2, 3, 5, 14, 21, 22, 25, 27, 29, 30, 31, 33, 36, 40, 42, 44, 46, 47, 49, 58, 317, 509, 513, 599, 775, 781, 788, 789, 790, 811, 812, 813, 850, 904, 906, 918, 925, 927, 931, 956, 968, 975, 991, 999, 1011, 1012, 1013, 1015, 1024, 1025, 1027, 1028, 1029, 1033, 1041, 1042, 1043, 1055, 1056, 1058, 1060, 1072, 1093, 1098, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1150, 1155, 1156, 1160, 1165, 1167, 1172, 1200, 1248, 1249, 1250, 1251, 1253, 1254, 1257, 1260, 1296, 1309, 1314, 1315, 1322, 1323, 1352, 1365, 1366, 1381, 1400, 1401, 1407, 1415, 1416, 1417, 1421, 1423, 1431, 1437, 1441, 1447, 1448, 1453, 1454, 1464, 1465, 1466, 1479, 1480, 1488, 1489, 1491, 1492, 1493, 1495, 1498, 1502, 1505, 1516, 1519, 1520, 1531, 1533, 1535, 1536, 1537, 1538, 1540, 1565, 1566, 1576, 1577, 1585, 1590, 1593, 1604, 1605, 1629, 1632, 1637, 1663, 1675, 1689, 1690, 1691, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1724, 1725, 1727, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1761, 1767, 1769, 1786, 1817, 1821, 1828, 1829, 1863, 1882, 1925, 1926, 1935, 1944, 1947, 1948, 1949, 1953, 1959, 1961, 1962, 1963, 1964, 1965, 1968, 1973, 1974, 1975, 1977, 1979, 1985, 1987, 2004, 2007, 2009, 2010, 2011, 2012, 2013, 2014, 2019, 2020, 2026, 2029, 2031, 2033, 2034, 2044, 2047, 2049, 2053, 2054, 2055, 2056], "possibl": [0, 2, 9, 14, 15, 18, 25, 27, 31, 46, 53, 54, 58, 493, 494, 576, 613, 854, 875, 876, 962, 968, 1008, 1099, 1100, 1101, 1146, 1159, 1171, 1179, 1181, 1182, 1250, 1264, 1291, 1304, 1307, 1308, 1311, 1316, 1322, 1401, 1407, 1488, 1494, 1584, 1585, 1604, 1638, 1663, 1695, 1696, 1805, 1808, 1823, 1874, 1882, 1901, 1961, 1963, 1964, 1968, 1977, 1978, 1985, 1987, 1989, 1990, 1991, 1992, 1995, 1996, 2001, 2002, 2003, 2005, 2012, 2015, 2020, 2022, 2027, 2031, 2035, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2050, 2054], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 18, 21, 22, 24, 26, 27, 29, 31, 33, 34, 36, 39, 40, 42, 43, 46, 47, 49, 51, 54, 56, 57, 58, 60, 62, 65, 69, 71, 84, 97, 98, 99, 100, 115, 146, 150, 231, 232, 233, 234, 250, 255, 256, 268, 269, 295, 307, 309, 311, 312, 313, 314, 315, 317, 319, 322, 348, 395, 396, 411, 415, 416, 418, 419, 467, 477, 479, 495, 509, 511, 513, 533, 540, 556, 579, 580, 581, 583, 584, 595, 596, 676, 677, 680, 683, 684, 687, 691, 692, 693, 731, 752, 760, 766, 767, 775, 780, 781, 783, 789, 791, 792, 795, 798, 815, 816, 817, 818, 821, 822, 823, 850, 855, 861, 870, 871, 872, 876, 881, 885, 887, 889, 890, 894, 895, 896, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 924, 933, 935, 937, 938, 939, 944, 946, 952, 956, 960, 961, 963, 974, 983, 984, 987, 1002, 1032, 1041, 1042, 1055, 1068, 1077, 1078, 1081, 1089, 1090, 1099, 1100, 1101, 1103, 1112, 1113, 1115, 1117, 1119, 1120, 1121, 1126, 1128, 1129, 1130, 1131, 1132, 1141, 1146, 1153, 1155, 1156, 1157, 1158, 1162, 1163, 1165, 1166, 1168, 1169, 1171, 1172, 1173, 1175, 1179, 1181, 1182, 1183, 1185, 1186, 1187, 1192, 1194, 1199, 1200, 1204, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1221, 1235, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1250, 1251, 1253, 1257, 1258, 1266, 1269, 1271, 1272, 1275, 1279, 1280, 1282, 1284, 1286, 1287, 1288, 1289, 1290, 1293, 1294, 1295, 1296, 1300, 1303, 1305, 1307, 1308, 1310, 1314, 1315, 1320, 1321, 1322, 1323, 1326, 1331, 1337, 1339, 1340, 1343, 1348, 1350, 1351, 1353, 1356, 1369, 1372, 1374, 1378, 1379, 1380, 1381, 1384, 1385, 1388, 1392, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1429, 1430, 1431, 1432, 1434, 1441, 1442, 1443, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1473, 1474, 1475, 1478, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1502, 1516, 1519, 1521, 1522, 1523, 1524, 1525, 1527, 1530, 1531, 1533, 1535, 1536, 1537, 1539, 1540, 1548, 1549, 1550, 1565, 1566, 1568, 1569, 1570, 1575, 1576, 1585, 1586, 1590, 1593, 1595, 1604, 1605, 1606, 1618, 1619, 1620, 1629, 1630, 1631, 1632, 1634, 1637, 1644, 1657, 1658, 1663, 1665, 1666, 1668, 1670, 1673, 1674, 1675, 1681, 1689, 1690, 1692, 1693, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1709, 1710, 1716, 1719, 1720, 1723, 1725, 1729, 1730, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1761, 1767, 1775, 1779, 1782, 1786, 1788, 1789, 1801, 1803, 1805, 1806, 1807, 1812, 1813, 1814, 1821, 1824, 1833, 1836, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1854, 1858, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1882, 1886, 1887, 1898, 1902, 1905, 1908, 1911, 1912, 1913, 1914, 1916, 1919, 1920, 1922, 1938, 1957, 1958, 1959, 1960, 1961, 1962, 1965, 1971, 1972, 1974, 1975, 1977, 1980, 1985, 1986, 1987, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1999, 2001, 2003, 2004, 2007, 2009, 2010, 2011, 2012, 2014, 2015, 2018, 2019, 2020, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2039, 2041, 2042, 2044, 2047, 2048, 2049, 2053, 2054], "xpu": [0, 1250, 1488, 1940, 1941, 1944, 1946, 1960, 1968, 2014, 2027], "hpu": [0, 2026], "attribut": [0, 1, 11, 12, 21, 22, 25, 26, 32, 47, 58, 60, 62, 67, 76, 81, 146, 286, 491, 492, 723, 734, 735, 736, 737, 738, 739, 741, 742, 752, 760, 787, 797, 798, 811, 812, 813, 834, 835, 836, 854, 855, 885, 889, 894, 896, 899, 901, 902, 1149, 1247, 1249, 1250, 1251, 1253, 1254, 1256, 1261, 1262, 1323, 1424, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1488, 1531, 1675, 1676, 1695, 1696, 1717, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1882, 1923, 1924, 1927, 1960, 1962, 1965, 1980, 1986, 1987, 1990, 1992, 1993, 1999, 2004, 2009, 2012, 2015, 2020, 2030, 2031, 2044, 2047, 2053, 2055, 2057], "thu": [0, 1, 11, 21, 25, 31, 43, 47, 49, 58, 781, 818, 821, 850, 1098, 1119, 1314, 1345, 1427, 1540, 1663, 1675, 1742, 1743, 1753, 1755, 1871, 1961, 1964, 1971, 1973, 1987, 1989, 1992, 1994, 1996, 1998, 1999, 2009, 2015, 2020, 2024, 2028, 2030, 2031], "obtain": [0, 3, 21, 25, 31, 35, 57, 58, 492, 1195, 1369, 1407, 1495, 1577, 1675, 1746, 1752, 1775, 1792, 1887, 1964, 1977, 1978, 1989, 2003, 2009, 2011, 2014, 2015, 2052], "bool": [0, 1, 2, 3, 5, 12, 14, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 36, 42, 44, 46, 47, 49, 56, 57, 58, 146, 192, 205, 241, 256, 315, 317, 324, 325, 326, 327, 329, 330, 335, 337, 441, 442, 443, 444, 445, 454, 467, 492, 513, 577, 599, 676, 689, 690, 691, 692, 693, 695, 731, 754, 775, 776, 781, 790, 810, 861, 869, 870, 871, 872, 876, 889, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 924, 937, 940, 942, 943, 945, 946, 952, 953, 959, 960, 961, 967, 968, 969, 980, 994, 1001, 1008, 1038, 1044, 1056, 1099, 1100, 1101, 1104, 1111, 1116, 1134, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1158, 1160, 1161, 1162, 1166, 1168, 1172, 1183, 1184, 1186, 1187, 1190, 1192, 1208, 1209, 1212, 1213, 1231, 1235, 1238, 1239, 1241, 1247, 1250, 1254, 1257, 1258, 1266, 1267, 1270, 1272, 1280, 1281, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1303, 1305, 1307, 1308, 1311, 1312, 1313, 1314, 1320, 1321, 1322, 1323, 1332, 1333, 1334, 1335, 1337, 1338, 1340, 1342, 1348, 1350, 1351, 1353, 1356, 1362, 1365, 1366, 1374, 1379, 1380, 1381, 1382, 1383, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1436, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1479, 1480, 1481, 1482, 1483, 1488, 1491, 1492, 1493, 1494, 1495, 1497, 1502, 1505, 1506, 1507, 1508, 1515, 1519, 1520, 1527, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1540, 1548, 1549, 1550, 1558, 1565, 1566, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1590, 1593, 1595, 1597, 1604, 1605, 1629, 1637, 1644, 1663, 1669, 1675, 1676, 1680, 1681, 1684, 1685, 1687, 1689, 1692, 1694, 1695, 1696, 1717, 1718, 1719, 1720, 1722, 1725, 1730, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1775, 1781, 1783, 1785, 1786, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1821, 1826, 1830, 1835, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1858, 1868, 1869, 1870, 1871, 1872, 1873, 1880, 1881, 1882, 1885, 1886, 1895, 1901, 1905, 1910, 1919, 1920, 1923, 1924, 1926, 1929, 1930, 1931, 1951, 1957, 1958, 1959, 1961, 1962, 1963, 1964, 1974, 1975, 1977, 1978, 1979, 1980, 1997, 2004, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2019, 2020, 2024, 2026, 2027, 2029, 2030, 2031, 2032, 2034, 2042, 2044, 2049, 2053, 2055], "option": [0, 1, 2, 3, 5, 14, 21, 25, 27, 29, 30, 31, 33, 36, 40, 41, 42, 44, 45, 46, 49, 58, 60, 67, 77, 79, 84, 146, 151, 166, 168, 171, 174, 175, 176, 191, 202, 205, 236, 263, 293, 321, 327, 389, 441, 442, 443, 444, 445, 483, 495, 496, 509, 516, 521, 533, 556, 576, 577, 579, 580, 581, 583, 584, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 731, 754, 775, 776, 781, 788, 790, 795, 814, 850, 855, 858, 861, 872, 874, 875, 876, 877, 878, 879, 880, 881, 888, 889, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 919, 920, 921, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 952, 955, 957, 958, 959, 960, 961, 963, 965, 966, 967, 968, 974, 975, 982, 983, 985, 986, 987, 988, 992, 997, 998, 999, 1001, 1002, 1004, 1006, 1010, 1011, 1013, 1014, 1015, 1018, 1019, 1026, 1027, 1030, 1033, 1041, 1042, 1043, 1047, 1049, 1050, 1051, 1053, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1068, 1069, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1103, 1108, 1111, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1150, 1152, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1172, 1192, 1193, 1194, 1195, 1204, 1207, 1208, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1225, 1227, 1239, 1241, 1244, 1245, 1247, 1248, 1250, 1251, 1254, 1257, 1264, 1266, 1267, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1362, 1365, 1366, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1388, 1390, 1391, 1392, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1406, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1441, 1444, 1445, 1446, 1447, 1448, 1453, 1454, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1474, 1479, 1480, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1502, 1506, 1507, 1508, 1515, 1519, 1520, 1527, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1539, 1540, 1541, 1542, 1558, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1584, 1585, 1588, 1589, 1590, 1593, 1595, 1604, 1605, 1612, 1618, 1619, 1620, 1629, 1630, 1632, 1637, 1644, 1650, 1651, 1663, 1675, 1676, 1684, 1685, 1687, 1689, 1690, 1691, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1752, 1753, 1754, 1755, 1756, 1760, 1773, 1774, 1775, 1778, 1782, 1783, 1785, 1786, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1805, 1806, 1807, 1814, 1816, 1821, 1833, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1858, 1859, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1898, 1899, 1900, 1901, 1902, 1905, 1907, 1910, 1911, 1912, 1913, 1914, 1916, 1919, 1920, 1923, 1929, 1930, 1931, 1932, 1937, 1938, 1940, 1943, 1947, 1948, 1956, 1957, 1958, 1959, 1961, 1962, 1964, 1966, 1968, 1970, 1973, 1974, 1975, 1980, 1985, 1990, 1992, 1993, 1994, 1995, 1998, 1999, 2003, 2004, 2007, 2009, 2012, 2014, 2015, 2020, 2024, 2025, 2026, 2027, 2029, 2031, 2034, 2035, 2036, 2044, 2047, 2051, 2053, 2054, 2056], "whether": [0, 1, 2, 5, 7, 14, 21, 22, 25, 26, 27, 30, 31, 33, 41, 42, 49, 56, 58, 83, 315, 317, 467, 513, 613, 676, 689, 691, 692, 695, 795, 820, 870, 871, 876, 885, 896, 897, 900, 901, 902, 904, 906, 911, 912, 913, 915, 916, 922, 937, 946, 959, 960, 961, 967, 969, 971, 974, 1040, 1056, 1150, 1155, 1167, 1168, 1170, 1208, 1209, 1247, 1250, 1258, 1259, 1267, 1272, 1280, 1281, 1287, 1289, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1305, 1307, 1308, 1311, 1312, 1313, 1314, 1322, 1338, 1340, 1348, 1350, 1351, 1353, 1356, 1374, 1379, 1380, 1381, 1382, 1407, 1447, 1453, 1488, 1497, 1502, 1537, 1555, 1556, 1557, 1577, 1605, 1637, 1669, 1675, 1689, 1692, 1695, 1708, 1722, 1725, 1730, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1761, 1773, 1783, 1786, 1830, 1880, 1881, 1882, 1885, 1886, 1905, 1910, 1919, 1920, 1923, 1924, 1930, 1931, 1935, 1952, 1959, 1964, 1970, 1971, 1974, 1980, 1986, 1990, 1992, 1995, 1997, 2007, 2009, 2013, 2015, 2020, 2024, 2026, 2028, 2029, 2034, 2041, 2044, 2047, 2054], "torch_dtyp": 0, "weight": [0, 21, 25, 27, 31, 46, 47, 49, 55, 58, 60, 152, 297, 357, 358, 492, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 741, 742, 745, 747, 748, 749, 750, 752, 756, 757, 759, 760, 761, 768, 769, 770, 777, 788, 789, 790, 804, 805, 829, 831, 837, 841, 845, 846, 847, 848, 849, 854, 855, 857, 858, 939, 988, 1155, 1157, 1165, 1167, 1212, 1213, 1250, 1254, 1260, 1262, 1267, 1276, 1374, 1400, 1401, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1430, 1431, 1439, 1440, 1442, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1488, 1492, 1493, 1494, 1495, 1496, 1503, 1505, 1517, 1531, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1584, 1585, 1594, 1603, 1607, 1610, 1626, 1628, 1629, 1638, 1647, 1666, 1675, 1682, 1683, 1684, 1685, 1687, 1689, 1690, 1691, 1693, 1695, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1723, 1724, 1725, 1727, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1789, 1923, 1935, 1959, 1960, 1962, 1963, 1964, 1968, 1973, 1974, 1979, 1980, 1985, 1992, 1994, 1995, 1999, 2004, 2007, 2015, 2016, 2017, 2018, 2024, 2029, 2033, 2034, 2044, 2049], "cach": [0, 2, 3, 31, 58, 482, 968, 976, 1023, 1024, 1041, 1044, 1049, 1051, 1053, 1055, 1063, 1068, 1173, 1359, 1360, 1361, 1676, 1695, 1727, 1977, 1994, 2039, 2041, 2044, 2048, 2052, 2054, 2056], "insid": [0, 1, 7, 21, 42, 47, 49, 54, 57, 58, 896, 897, 898, 899, 900, 901, 902, 1007, 1044, 1157, 1161, 1166, 1172, 1262, 1675, 1961, 1963, 1964, 1968, 1973, 1986, 1990, 1992, 1993, 1998, 2009, 2024, 2033, 2043, 2047, 2054], "custom_fwd": [0, 1986], "fwd": [0, 2048], "cast_input": [0, 1986], "helper": [0, 3, 25, 53, 58, 1959, 1960, 1963, 1990, 1991, 2009, 2012, 2020, 2053, 2055], "subclass": [0, 1, 14, 21, 27, 31, 35, 54, 58, 135, 533, 885, 886, 887, 901, 902, 1176, 1248, 1251, 1261, 1488, 1676, 1697, 1702, 1723, 1961, 1964, 1965, 1971, 1983, 1986, 1999, 2009, 2020, 2024, 2041, 2044, 2047, 2055], "page": [0, 6, 7, 9, 21, 26, 43, 45, 1323, 1531, 1533, 1535, 1990, 1991, 1999, 2010, 2020, 2051], "incom": [0, 25, 44, 777, 815, 816, 817, 818, 821, 1405, 1475, 1564, 1610, 1977, 1987], "non": [0, 1, 2, 3, 5, 14, 20, 22, 25, 26, 27, 31, 33, 35, 42, 44, 45, 47, 49, 57, 60, 71, 74, 80, 84, 146, 331, 482, 484, 500, 509, 513, 541, 694, 730, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 761, 768, 769, 770, 834, 861, 873, 885, 887, 889, 896, 898, 900, 901, 902, 915, 916, 931, 939, 952, 955, 968, 981, 982, 987, 1055, 1144, 1145, 1152, 1156, 1161, 1167, 1175, 1178, 1183, 1227, 1250, 1253, 1263, 1266, 1267, 1286, 1287, 1294, 1298, 1299, 1312, 1314, 1323, 1333, 1340, 1345, 1350, 1374, 1379, 1380, 1384, 1397, 1398, 1399, 1416, 1417, 1419, 1420, 1423, 1433, 1439, 1456, 1457, 1458, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1493, 1495, 1503, 1505, 1519, 1576, 1595, 1624, 1629, 1675, 1729, 1756, 1778, 1821, 1822, 1836, 1841, 1848, 1863, 1864, 1868, 1869, 1870, 1871, 1872, 1873, 1903, 1919, 1921, 1935, 1959, 1960, 1961, 1963, 1964, 1966, 1977, 1980, 1985, 1988, 1992, 1993, 1994, 1995, 1999, 2003, 2009, 2011, 2013, 2014, 2019, 2020, 2022, 2024, 2025, 2027, 2028, 2029, 2031, 2036, 2039, 2042, 2043, 2044, 2045, 2052, 2053, 2055], "intern": [0, 3, 8, 9, 14, 21, 22, 25, 27, 31, 33, 39, 46, 49, 54, 58, 896, 999, 1033, 1054, 1156, 1250, 1287, 1289, 1305, 1308, 1331, 1402, 1403, 1404, 1441, 1527, 1568, 1569, 1570, 1593, 1692, 1736, 1829, 1871, 1923, 1965, 1986, 1987, 1989, 1990, 1995, 1996, 2002, 2003, 2007, 2021, 2022, 2026, 2028, 2035, 2044, 2047, 2054], "current": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 21, 25, 27, 29, 30, 31, 33, 35, 42, 43, 46, 47, 49, 50, 57, 58, 76, 84, 146, 205, 217, 493, 494, 495, 737, 739, 777, 789, 791, 813, 855, 857, 858, 861, 875, 876, 886, 889, 891, 892, 893, 901, 904, 905, 906, 915, 937, 946, 980, 991, 992, 994, 995, 999, 1001, 1002, 1004, 1009, 1010, 1013, 1014, 1016, 1017, 1018, 1019, 1022, 1023, 1024, 1026, 1027, 1030, 1032, 1033, 1036, 1038, 1039, 1043, 1044, 1045, 1047, 1049, 1050, 1051, 1053, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1065, 1067, 1069, 1071, 1074, 1075, 1076, 1099, 1101, 1111, 1116, 1134, 1150, 1151, 1153, 1169, 1172, 1179, 1198, 1199, 1200, 1208, 1209, 1233, 1234, 1250, 1254, 1266, 1270, 1321, 1323, 1337, 1352, 1359, 1361, 1362, 1427, 1430, 1434, 1488, 1527, 1535, 1539, 1587, 1593, 1604, 1644, 1662, 1663, 1665, 1675, 1696, 1700, 1701, 1702, 1703, 1704, 1709, 1710, 1711, 1712, 1734, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1785, 1794, 1796, 1798, 1800, 1801, 1825, 1829, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1861, 1868, 1869, 1870, 1871, 1872, 1873, 1882, 1901, 1912, 1914, 1919, 1925, 1926, 1940, 1942, 1943, 1946, 1947, 1948, 1951, 1953, 1954, 1956, 1957, 1960, 1961, 1963, 1964, 1965, 1966, 1968, 1971, 1975, 1977, 1980, 1986, 1987, 1990, 1995, 1997, 1998, 1999, 2000, 2001, 2004, 2005, 2009, 2011, 2012, 2013, 2015, 2018, 2020, 2021, 2024, 2026, 2027, 2029, 2030, 2033, 2043, 2044, 2047, 2050, 2051, 2054, 2055, 2056], "outsid": [0, 5, 9, 21, 35, 46, 47, 49, 54, 60, 70, 71, 680, 791, 881, 1155, 1157, 1161, 1166, 1251, 1593, 1675, 1758, 1759, 1764, 1765, 1771, 1963, 1964, 1985, 1987, 1990, 1993, 1994, 2031, 2039, 2044, 2050], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 57, 58, 146, 192, 205, 251, 256, 331, 441, 442, 443, 444, 445, 469, 470, 482, 484, 492, 494, 540, 576, 577, 599, 600, 614, 676, 685, 689, 691, 692, 693, 695, 731, 756, 775, 777, 781, 783, 787, 793, 834, 836, 843, 854, 860, 870, 871, 873, 885, 888, 889, 894, 896, 897, 901, 902, 906, 915, 916, 924, 935, 938, 956, 959, 960, 961, 968, 970, 973, 980, 981, 982, 983, 998, 1001, 1002, 1004, 1009, 1037, 1040, 1041, 1086, 1088, 1102, 1134, 1146, 1155, 1156, 1159, 1160, 1163, 1167, 1204, 1213, 1214, 1225, 1247, 1250, 1254, 1258, 1261, 1262, 1263, 1266, 1271, 1272, 1280, 1281, 1282, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1302, 1304, 1305, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1317, 1318, 1322, 1331, 1338, 1340, 1345, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1362, 1379, 1380, 1381, 1382, 1400, 1401, 1402, 1403, 1404, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1431, 1434, 1435, 1436, 1439, 1442, 1447, 1450, 1451, 1452, 1458, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1492, 1493, 1494, 1495, 1496, 1503, 1519, 1521, 1527, 1535, 1539, 1540, 1558, 1568, 1569, 1570, 1576, 1585, 1588, 1589, 1593, 1604, 1629, 1631, 1632, 1634, 1638, 1644, 1650, 1663, 1665, 1666, 1669, 1670, 1675, 1689, 1692, 1694, 1697, 1701, 1703, 1706, 1716, 1717, 1724, 1725, 1729, 1731, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1759, 1760, 1761, 1763, 1767, 1769, 1773, 1783, 1785, 1786, 1787, 1788, 1805, 1807, 1817, 1829, 1850, 1864, 1865, 1866, 1871, 1877, 1879, 1880, 1881, 1882, 1885, 1886, 1898, 1904, 1910, 1921, 1930, 1931, 1935, 1940, 1952, 1961, 1963, 1964, 1968, 1970, 1971, 1975, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1997, 1998, 1999, 2001, 2002, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2019, 2020, 2021, 2022, 2024, 2026, 2027, 2029, 2030, 2031, 2032, 2035, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2050, 2054], "effect": [0, 3, 5, 7, 14, 21, 22, 25, 31, 44, 46, 47, 49, 54, 58, 60, 63, 192, 205, 599, 731, 775, 781, 1033, 1081, 1167, 1250, 1293, 1294, 1295, 1296, 1352, 1392, 1407, 1418, 1419, 1420, 1425, 1426, 1427, 1428, 1432, 1488, 1494, 1540, 1604, 1632, 1663, 1669, 1675, 1676, 1702, 1753, 1761, 1861, 1866, 1886, 1908, 1924, 1935, 1959, 1961, 1968, 1973, 1985, 1986, 1987, 1990, 1992, 1995, 2015, 2018, 2026, 2027, 2029, 2039, 2044], "custom_bwd": [0, 1986], "bwd": 0, "small": [0, 3, 7, 9, 21, 22, 25, 31, 42, 46, 861, 915, 916, 968, 1012, 1055, 1313, 1314, 1326, 1328, 1392, 1422, 1497, 1502, 1516, 1536, 1540, 1575, 1630, 1637, 1675, 1758, 1764, 1773, 1886, 1961, 1963, 1964, 1972, 1990, 1992, 1994, 1999, 2002, 2004, 2009, 2012, 2015, 2016, 2024, 2025, 2031, 2039, 2042, 2043, 2044, 2045, 2048, 2052, 2054, 2056], "magnitud": [0, 983, 1691, 1727, 1836, 1985, 1986, 1990], "represent": [0, 3, 14, 21, 25, 27, 40, 46, 47, 58, 77, 477, 754, 797, 822, 1002, 1114, 1115, 1117, 1141, 1195, 1250, 1290, 1293, 1295, 1298, 1378, 1488, 1494, 1773, 1960, 1961, 1964, 1972, 1980, 1992, 2002, 2007, 2009, 2012, 2015, 2024, 2031, 2042, 2044, 2054, 2057], "These": [0, 1, 2, 3, 8, 14, 15, 21, 25, 26, 31, 50, 52, 55, 58, 59, 482, 790, 876, 988, 1098, 1163, 1247, 1250, 1293, 1358, 1392, 1488, 1666, 1690, 1960, 1961, 1962, 1963, 1964, 1972, 1975, 1978, 1979, 1981, 1986, 1987, 1990, 1991, 1992, 1999, 2002, 2004, 2009, 2012, 2013, 2018, 2020, 2021, 2027, 2032, 2036, 2039, 2041, 2042, 2044, 2047, 2050, 2054, 2055], "flush": [0, 1, 27, 46, 1055, 1261, 1817, 1830, 2002, 2029], "zero": [0, 1, 2, 22, 25, 26, 29, 31, 44, 47, 49, 54, 58, 60, 67, 146, 254, 256, 311, 482, 509, 511, 540, 541, 580, 581, 583, 584, 619, 675, 687, 694, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 755, 756, 760, 764, 765, 768, 769, 770, 771, 773, 776, 777, 791, 795, 815, 816, 817, 818, 821, 826, 873, 882, 883, 884, 889, 896, 898, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 938, 939, 959, 960, 961, 966, 983, 987, 1044, 1055, 1059, 1060, 1089, 1093, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1137, 1146, 1152, 1155, 1163, 1172, 1210, 1211, 1214, 1235, 1247, 1250, 1262, 1280, 1281, 1282, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1323, 1331, 1332, 1333, 1334, 1335, 1340, 1341, 1374, 1378, 1382, 1396, 1397, 1398, 1399, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1439, 1440, 1442, 1455, 1456, 1457, 1458, 1459, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1494, 1497, 1500, 1501, 1502, 1503, 1505, 1525, 1539, 1540, 1543, 1544, 1545, 1560, 1561, 1562, 1571, 1572, 1573, 1575, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1593, 1614, 1615, 1616, 1630, 1631, 1632, 1644, 1700, 1701, 1702, 1703, 1718, 1725, 1729, 1733, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1773, 1785, 1787, 1788, 1789, 1798, 1805, 1814, 1824, 1841, 1850, 1854, 1864, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1886, 1901, 1902, 1904, 1910, 1958, 1961, 1962, 1964, 1966, 1975, 1977, 1978, 1979, 1980, 1985, 1987, 1990, 1992, 1999, 2002, 2005, 2009, 2010, 2012, 2014, 2015, 2018, 2020, 2024, 2025, 2027, 2029, 2030, 2031, 2032, 2043, 2046], "underflow": [0, 1453, 1986], "updat": [0, 9, 11, 21, 22, 29, 33, 42, 46, 49, 52, 53, 58, 82, 484, 509, 511, 756, 795, 796, 820, 892, 893, 922, 935, 1155, 1164, 1250, 1287, 1402, 1403, 1404, 1424, 1430, 1431, 1439, 1450, 1451, 1452, 1488, 1489, 1498, 1527, 1584, 1585, 1682, 1683, 1690, 1695, 1725, 1739, 1745, 1750, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1959, 1961, 1973, 1986, 1987, 1990, 1991, 1992, 1999, 2001, 2004, 2005, 2007, 2009, 2010, 2011, 2013, 2015, 2020, 2021, 2022, 2029, 2039, 2053], "lost": [0, 33, 43, 45, 1424, 1484, 1485, 1486, 2044], "To": [0, 1, 2, 3, 4, 5, 6, 9, 14, 15, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 40, 41, 43, 44, 46, 47, 49, 54, 58, 75, 78, 79, 82, 331, 495, 553, 730, 891, 910, 924, 965, 968, 1045, 1065, 1086, 1088, 1098, 1126, 1128, 1132, 1143, 1250, 1251, 1253, 1254, 1261, 1262, 1296, 1318, 1323, 1351, 1392, 1401, 1427, 1453, 1484, 1485, 1486, 1488, 1541, 1542, 1566, 1675, 1691, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1727, 1767, 1775, 1786, 1825, 1829, 1832, 1871, 1887, 1959, 1961, 1963, 1964, 1968, 1977, 1978, 1979, 1981, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001, 2004, 2009, 2011, 2012, 2013, 2014, 2015, 2020, 2021, 2022, 2024, 2027, 2028, 2029, 2030, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2052, 2053, 2054, 2056], "prevent": [0, 7, 8, 21, 22, 25, 26, 27, 33, 49, 58, 482, 495, 731, 896, 899, 901, 1001, 1079, 1080, 1099, 1100, 1101, 1247, 1350, 1362, 1379, 1382, 1425, 1494, 1519, 1612, 1650, 1651, 1666, 1675, 1740, 1783, 1862, 1865, 1885, 1912, 1914, 1923, 1977, 1986, 1987, 1990, 1991, 1994, 1995, 1999, 2003, 2012, 2014, 2022, 2024, 2025, 2039, 2043, 2044, 2047], "multipli": [0, 25, 309, 317, 419, 509, 681, 682, 683, 684, 685, 686, 687, 756, 775, 781, 782, 783, 936, 948, 1068, 1081, 1098, 1204, 1215, 1274, 1286, 1287, 1291, 1304, 1306, 1308, 1314, 1316, 1345, 1355, 1369, 1373, 1376, 1400, 1415, 1416, 1417, 1420, 1439, 1458, 1540, 1541, 1542, 1604, 1663, 1664, 1665, 1695, 1758, 1764, 1766, 1773, 1829, 1856, 1859, 1863, 1864, 1878, 1882, 1883, 1886, 1908, 1962, 1978, 1990, 1996, 1999, 2002, 2010, 2024, 2025, 2044], "factor": [0, 3, 22, 31, 58, 685, 686, 687, 795, 815, 936, 959, 1293, 1294, 1295, 1298, 1300, 1340, 1341, 1342, 1425, 1448, 1476, 1500, 1501, 1602, 1635, 1636, 1644, 1753, 1754, 1755, 1757, 1758, 1760, 1762, 1763, 1764, 1765, 1766, 1769, 1770, 1771, 1785, 1842, 1864, 1886, 1985, 1986, 2015, 2024, 2044], "flow": [0, 47, 60, 66, 69, 965, 980, 1263, 1266, 1558, 1593, 1675, 1960, 1961, 1985, 1987, 1990, 1992, 2004, 2006, 2009, 2022, 2039, 2040, 2042, 2044, 2047, 2052], "through": [0, 5, 7, 9, 15, 21, 25, 27, 31, 35, 46, 47, 49, 54, 57, 58, 60, 63, 65, 67, 75, 492, 788, 836, 850, 857, 858, 896, 899, 901, 902, 915, 916, 1006, 1044, 1125, 1159, 1167, 1248, 1251, 1253, 1266, 1267, 1269, 1286, 1287, 1308, 1314, 1331, 1495, 1532, 1533, 1534, 1535, 1595, 1666, 1675, 1682, 1683, 1695, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1785, 1935, 1959, 1960, 1963, 1964, 1968, 1970, 1975, 1977, 1978, 1979, 1987, 1990, 1992, 1994, 1996, 1998, 1999, 2005, 2006, 2007, 2009, 2012, 2013, 2015, 2018, 2020, 2021, 2022, 2024, 2028, 2032, 2034, 2035, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2053, 2054, 2057], "word": [0, 1, 8, 25, 42, 43, 47, 52, 57, 58, 952, 1171, 1392, 1415, 1416, 1417, 1430, 1431, 1531, 1584, 1585, 1604, 1663, 1675, 1689, 1821, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1963, 1987, 1994, 1995, 2012, 2021], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 58, 60, 68, 69, 80, 149, 150, 217, 218, 309, 311, 317, 331, 394, 398, 444, 454, 467, 482, 483, 484, 499, 509, 511, 513, 516, 540, 613, 676, 685, 689, 691, 692, 693, 695, 811, 813, 837, 876, 885, 889, 901, 902, 904, 906, 911, 920, 921, 924, 937, 938, 946, 955, 956, 968, 971, 980, 988, 1004, 1013, 1014, 1044, 1055, 1089, 1097, 1104, 1118, 1128, 1133, 1135, 1149, 1155, 1156, 1167, 1172, 1179, 1192, 1193, 1208, 1209, 1212, 1213, 1225, 1247, 1249, 1250, 1253, 1254, 1256, 1258, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1272, 1273, 1282, 1286, 1287, 1303, 1310, 1311, 1314, 1316, 1322, 1331, 1333, 1338, 1345, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1374, 1379, 1380, 1382, 1384, 1392, 1396, 1400, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1430, 1431, 1435, 1436, 1441, 1446, 1450, 1451, 1452, 1480, 1488, 1491, 1492, 1493, 1494, 1495, 1535, 1537, 1575, 1584, 1585, 1588, 1589, 1593, 1610, 1629, 1631, 1634, 1668, 1669, 1670, 1673, 1674, 1675, 1676, 1680, 1681, 1682, 1683, 1684, 1686, 1689, 1692, 1695, 1719, 1723, 1728, 1730, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1783, 1809, 1810, 1824, 1829, 1836, 1859, 1863, 1867, 1868, 1869, 1870, 1872, 1873, 1880, 1881, 1882, 1885, 1886, 1898, 1902, 1908, 1910, 1923, 1926, 1928, 1930, 1931, 1933, 1935, 1937, 1940, 1959, 1961, 1962, 1963, 1964, 1966, 1968, 1970, 1971, 1972, 1973, 1975, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2009, 2011, 2012, 2013, 2015, 2016, 2019, 2020, 2021, 2022, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2036, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2053, 2054, 2055, 2056], "larger": [0, 9, 25, 31, 58, 250, 495, 916, 939, 1055, 1156, 1305, 1308, 1392, 1424, 1430, 1431, 1480, 1537, 1540, 1584, 1585, 1987, 1990, 1994, 1996, 1998, 2002, 2004, 2024, 2029, 2047, 2048, 2051, 2052, 2053], "thei": [0, 1, 3, 5, 7, 9, 11, 12, 17, 18, 21, 25, 27, 30, 31, 32, 42, 46, 47, 49, 52, 53, 57, 58, 80, 317, 331, 332, 482, 682, 685, 686, 693, 796, 811, 812, 813, 820, 837, 850, 855, 886, 896, 899, 901, 911, 912, 916, 936, 968, 1044, 1102, 1149, 1155, 1165, 1169, 1172, 1177, 1180, 1182, 1239, 1240, 1247, 1250, 1258, 1263, 1272, 1286, 1287, 1293, 1314, 1322, 1344, 1348, 1351, 1353, 1356, 1374, 1397, 1398, 1399, 1418, 1419, 1420, 1434, 1473, 1481, 1482, 1483, 1488, 1494, 1504, 1516, 1539, 1593, 1595, 1666, 1675, 1676, 1680, 1689, 1693, 1716, 1719, 1728, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1763, 1766, 1825, 1882, 1886, 1923, 1924, 1929, 1959, 1961, 1963, 1964, 1966, 1968, 1970, 1971, 1973, 1975, 1977, 1978, 1979, 1980, 1981, 1985, 1986, 1987, 1990, 1991, 1992, 1993, 1995, 1997, 1999, 2001, 2002, 2004, 2005, 2007, 2009, 2011, 2012, 2013, 2015, 2020, 2024, 2029, 2030, 2031, 2032, 2033, 2039, 2042, 2043, 2044, 2045, 2046, 2050, 2054, 2055], "don": [0, 1, 4, 7, 9, 11, 25, 27, 41, 50, 52, 54, 58, 60, 70, 71, 146, 781, 791, 889, 891, 910, 1072, 1155, 1171, 1172, 1177, 1179, 1183, 1266, 1344, 1450, 1451, 1452, 1540, 1663, 1666, 1675, 1731, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1828, 1959, 1961, 1965, 1977, 1978, 1979, 1987, 1990, 1992, 1994, 1999, 2001, 2005, 2009, 2011, 2012, 2013, 2015, 2020, 2021, 2024, 2039, 2041, 2042, 2043, 2044, 2045, 2047, 2055], "t": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 21, 22, 25, 27, 31, 32, 35, 39, 41, 42, 46, 47, 50, 52, 54, 55, 57, 58, 60, 70, 71, 77, 80, 146, 309, 311, 317, 454, 482, 519, 533, 567, 683, 684, 693, 756, 777, 781, 791, 819, 822, 873, 874, 875, 876, 885, 887, 889, 891, 896, 897, 899, 901, 902, 905, 910, 922, 959, 960, 961, 966, 980, 988, 999, 1002, 1023, 1041, 1042, 1072, 1096, 1114, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1137, 1149, 1150, 1151, 1152, 1155, 1156, 1157, 1167, 1171, 1172, 1173, 1177, 1179, 1182, 1183, 1190, 1192, 1204, 1214, 1247, 1248, 1250, 1251, 1253, 1257, 1258, 1262, 1264, 1266, 1269, 1271, 1280, 1281, 1287, 1289, 1290, 1293, 1300, 1308, 1309, 1314, 1322, 1323, 1331, 1344, 1357, 1358, 1372, 1381, 1401, 1405, 1407, 1415, 1416, 1417, 1424, 1430, 1431, 1439, 1448, 1450, 1451, 1452, 1453, 1458, 1475, 1488, 1503, 1519, 1521, 1531, 1539, 1540, 1564, 1568, 1569, 1570, 1577, 1584, 1585, 1605, 1610, 1630, 1650, 1663, 1666, 1669, 1670, 1675, 1676, 1689, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1717, 1719, 1720, 1731, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1759, 1769, 1775, 1781, 1785, 1802, 1825, 1827, 1828, 1836, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1859, 1863, 1882, 1886, 1887, 1892, 1898, 1901, 1907, 1910, 1935, 1936, 1959, 1961, 1962, 1963, 1965, 1968, 1975, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1995, 1996, 1998, 1999, 2001, 2004, 2005, 2009, 2010, 2011, 2012, 2013, 2015, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2039, 2041, 2042, 2043, 2045, 2047, 2049, 2052, 2054, 2055], "grad": [0, 1, 5, 25, 31, 50, 53, 54, 58, 146, 331, 454, 483, 484, 491, 492, 499, 500, 577, 676, 876, 885, 889, 891, 892, 893, 896, 900, 901, 902, 904, 906, 911, 912, 915, 916, 920, 921, 1044, 1102, 1155, 1156, 1158, 1162, 1166, 1167, 1233, 1250, 1323, 1488, 1675, 1728, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1863, 1923, 1935, 1960, 1961, 1962, 1978, 1979, 1980, 1986, 1991, 1992, 1993, 1996, 1999, 2001, 2010, 2020, 2021, 2024, 2030, 2050], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 14, 24, 25, 29, 31, 33, 35, 39, 41, 42, 44, 46, 47, 49, 52, 53, 54, 57, 58, 60, 146, 250, 254, 331, 431, 454, 579, 613, 676, 691, 692, 744, 753, 756, 786, 790, 857, 876, 912, 913, 935, 948, 1035, 1039, 1089, 1098, 1102, 1152, 1155, 1167, 1172, 1225, 1249, 1251, 1254, 1261, 1266, 1276, 1281, 1293, 1294, 1298, 1299, 1306, 1312, 1314, 1320, 1323, 1340, 1344, 1345, 1351, 1355, 1359, 1376, 1402, 1403, 1404, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1427, 1430, 1431, 1434, 1439, 1440, 1450, 1451, 1452, 1458, 1459, 1461, 1462, 1463, 1470, 1471, 1472, 1482, 1483, 1489, 1495, 1498, 1503, 1505, 1527, 1539, 1576, 1629, 1675, 1676, 1682, 1683, 1692, 1695, 1699, 1725, 1728, 1730, 1735, 1736, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1770, 1774, 1779, 1821, 1824, 1825, 1829, 1854, 1859, 1886, 1907, 1910, 1923, 1924, 1935, 1950, 1958, 1959, 1960, 1961, 1963, 1964, 1966, 1968, 1973, 1977, 1978, 1979, 1980, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1999, 2001, 2002, 2003, 2006, 2007, 2009, 2012, 2013, 2015, 2020, 2022, 2024, 2026, 2027, 2031, 2039, 2042, 2047, 2054, 2056], "interfer": [0, 1975, 1990, 2009, 2044], "learn": [0, 7, 8, 15, 31, 41, 46, 49, 58, 82, 1405, 1421, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1447, 1460, 1473, 1475, 1496, 1517, 1531, 1533, 1535, 1536, 1537, 1647, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1960, 1968, 1981, 1985, 1990, 1997, 1999, 2000, 2006, 2012, 2015, 2020, 2022, 2035, 2038, 2040, 2042, 2047], "rate": [0, 2, 8, 22, 31, 49, 1426, 1427, 1428, 1432, 1534, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1778, 1960, 1998, 2029, 2044, 2051], "fp16": [0, 2, 725, 1675, 1682, 1683, 2015, 2016], "everi": [0, 1, 2, 8, 9, 21, 22, 25, 27, 29, 31, 33, 47, 49, 54, 58, 477, 483, 606, 676, 777, 815, 896, 897, 901, 920, 921, 924, 968, 1081, 1098, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1156, 1204, 1213, 1250, 1282, 1296, 1306, 1309, 1340, 1396, 1425, 1426, 1427, 1428, 1432, 1481, 1488, 1521, 1523, 1527, 1579, 1580, 1581, 1586, 1603, 1618, 1619, 1620, 1634, 1651, 1668, 1669, 1670, 1673, 1674, 1675, 1690, 1724, 1727, 1728, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1825, 1886, 1920, 1964, 1970, 1975, 1986, 1987, 1990, 1991, 1992, 1993, 1995, 1996, 2000, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2020, 2021, 2022, 2024, 2026, 2027, 2029, 2031, 2042, 2043, 2047, 2051, 2052, 2053, 2054], "most": [0, 1, 3, 4, 7, 8, 15, 21, 25, 27, 29, 31, 32, 33, 34, 41, 42, 44, 45, 49, 54, 55, 57, 58, 60, 482, 495, 789, 896, 897, 898, 899, 901, 907, 911, 915, 928, 968, 1067, 1081, 1098, 1156, 1235, 1248, 1251, 1356, 1392, 1535, 1593, 1644, 1675, 1682, 1683, 1695, 1750, 1829, 1861, 1908, 1959, 1961, 1963, 1964, 1966, 1971, 1972, 1977, 1979, 1980, 1987, 1990, 1992, 1995, 2001, 2002, 2003, 2007, 2011, 2014, 2015, 2021, 2022, 2024, 2027, 2029, 2031, 2035, 2038, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2053, 2054], "bf16": [0, 2], "pretrain": [0, 27, 858, 1430, 1431, 1959, 1987, 2009], "cannot": [0, 3, 8, 9, 12, 21, 22, 25, 27, 31, 32, 35, 42, 46, 49, 50, 54, 55, 57, 58, 218, 250, 520, 541, 876, 980, 1119, 1121, 1129, 1130, 1131, 1137, 1150, 1155, 1247, 1255, 1374, 1407, 1430, 1540, 1577, 1644, 1675, 1736, 1887, 1959, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1972, 1975, 1979, 1980, 1987, 1991, 1992, 2004, 2005, 2009, 2015, 2020, 2022, 2024, 2026, 2027, 2039, 2041, 2044, 2045, 2055], "numer": [0, 21, 31, 47, 50, 55, 683, 789, 915, 916, 952, 1254, 1266, 1267, 1282, 1286, 1287, 1291, 1296, 1304, 1305, 1308, 1311, 1314, 1316, 1338, 1340, 1401, 1402, 1403, 1404, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1521, 1524, 1527, 1536, 1584, 1605, 1612, 1644, 1650, 1652, 1690, 1724, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1756, 1789, 1821, 1841, 1886, 1960, 1964, 1965, 1969, 1973, 1990, 1992, 1993, 2009, 2015, 2025, 2030, 2044, 2054, 2057], "max": [0, 21, 25, 33, 35, 41, 42, 44, 46, 49, 58, 60, 70, 71, 112, 181, 182, 183, 184, 296, 691, 692, 693, 754, 766, 767, 776, 778, 779, 798, 815, 816, 817, 818, 821, 870, 924, 939, 956, 963, 964, 968, 988, 1077, 1112, 1113, 1179, 1211, 1262, 1282, 1296, 1303, 1305, 1307, 1308, 1320, 1393, 1394, 1395, 1406, 1407, 1421, 1422, 1431, 1435, 1436, 1441, 1446, 1447, 1455, 1456, 1457, 1474, 1476, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1491, 1492, 1493, 1496, 1507, 1508, 1515, 1536, 1537, 1539, 1555, 1556, 1557, 1567, 1575, 1585, 1588, 1589, 1604, 1608, 1618, 1619, 1620, 1630, 1634, 1638, 1640, 1645, 1663, 1680, 1719, 1742, 1743, 1744, 1754, 1759, 1760, 1769, 1790, 1791, 1863, 1880, 1881, 1893, 1894, 1923, 1930, 1931, 1961, 1962, 1971, 1975, 1980, 1988, 1990, 1994, 2010, 2015, 2018, 2036, 2043, 2048, 2049, 2057], "65504": 0, "overflow": [0, 1079, 1080, 1350, 1379, 1382, 1612, 1650, 1651, 1783, 1814, 1862, 1865, 1885, 1912, 1914, 1990, 2002, 2025], "instead": [0, 1, 3, 5, 8, 9, 14, 21, 22, 25, 27, 30, 31, 33, 39, 42, 43, 46, 47, 49, 52, 53, 54, 56, 58, 60, 69, 402, 454, 482, 495, 509, 744, 753, 764, 765, 789, 813, 822, 876, 886, 901, 902, 904, 905, 906, 907, 910, 915, 952, 958, 1133, 1135, 1160, 1161, 1162, 1163, 1166, 1167, 1182, 1185, 1196, 1237, 1248, 1250, 1251, 1255, 1280, 1281, 1287, 1289, 1305, 1308, 1314, 1320, 1322, 1351, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1421, 1423, 1424, 1426, 1427, 1428, 1432, 1439, 1447, 1453, 1454, 1455, 1456, 1457, 1458, 1479, 1480, 1481, 1482, 1483, 1488, 1491, 1492, 1493, 1495, 1502, 1503, 1515, 1519, 1520, 1521, 1527, 1536, 1560, 1561, 1562, 1565, 1566, 1576, 1586, 1593, 1605, 1618, 1619, 1620, 1629, 1637, 1650, 1675, 1725, 1727, 1736, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1760, 1761, 1767, 1790, 1791, 1801, 1821, 1825, 1867, 1882, 1886, 1923, 1935, 1961, 1963, 1964, 1971, 1972, 1979, 1985, 1986, 1987, 1991, 1992, 1993, 1994, 1996, 1997, 2001, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2014, 2015, 2018, 2021, 2024, 2030, 2031, 2032, 2034, 2039, 2040, 2042, 2043, 2044, 2047, 2050, 2053, 2054, 2055], "case": [0, 1, 3, 4, 8, 9, 11, 14, 15, 21, 22, 25, 27, 29, 30, 31, 33, 34, 35, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 57, 58, 60, 80, 146, 150, 192, 348, 482, 492, 495, 676, 756, 780, 787, 790, 816, 817, 819, 822, 854, 861, 889, 901, 902, 904, 906, 910, 931, 935, 937, 939, 944, 983, 998, 1023, 1045, 1046, 1065, 1066, 1067, 1098, 1119, 1121, 1129, 1130, 1131, 1146, 1157, 1161, 1166, 1172, 1179, 1182, 1210, 1235, 1248, 1251, 1260, 1263, 1264, 1266, 1280, 1282, 1286, 1287, 1291, 1296, 1297, 1298, 1300, 1306, 1309, 1314, 1316, 1320, 1322, 1323, 1328, 1331, 1340, 1351, 1374, 1392, 1397, 1398, 1399, 1400, 1401, 1415, 1416, 1417, 1419, 1420, 1421, 1423, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1443, 1444, 1445, 1446, 1447, 1448, 1454, 1455, 1456, 1457, 1474, 1479, 1481, 1482, 1483, 1494, 1495, 1496, 1506, 1519, 1525, 1530, 1535, 1537, 1539, 1558, 1576, 1585, 1593, 1597, 1598, 1629, 1631, 1638, 1675, 1677, 1678, 1682, 1683, 1689, 1692, 1695, 1696, 1729, 1730, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1767, 1805, 1808, 1821, 1823, 1836, 1839, 1871, 1886, 1887, 1918, 1919, 1923, 1938, 1959, 1964, 1969, 1972, 1977, 1978, 1979, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1999, 2001, 2002, 2004, 2009, 2011, 2012, 2013, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2028, 2029, 2030, 2031, 2035, 2042, 2043, 2044, 2045, 2047, 2050, 2052, 2053, 2054, 2055, 2057], "decreas": [0, 31, 1055, 1296, 1426, 1427, 1428, 1432, 1501, 1717, 1718, 1754, 1761, 1769, 1970, 1973, 2001, 2003, 2024, 2027], "attempt": [0, 1, 8, 14, 25, 27, 42, 43, 49, 54, 81, 962, 968, 971, 984, 1254, 1261, 1340, 1644, 1677, 1678, 1742, 1743, 1755, 1923, 1926, 1961, 1964, 1977, 1978, 1979, 1986, 1990, 1992, 2005, 2006, 2011, 2012, 2020, 2042, 2043, 2044, 2054], "bring": [0, 50, 58, 1119, 1558, 1593, 2013, 2048, 2051], "number": [0, 1, 2, 3, 4, 5, 7, 14, 21, 22, 25, 27, 29, 31, 33, 40, 41, 42, 45, 46, 50, 52, 55, 58, 60, 65, 81, 84, 150, 169, 214, 228, 250, 309, 348, 373, 394, 398, 431, 442, 467, 469, 470, 477, 489, 493, 495, 509, 511, 513, 539, 541, 542, 554, 579, 580, 581, 583, 584, 585, 604, 613, 681, 682, 683, 684, 685, 686, 687, 694, 754, 756, 764, 765, 768, 769, 770, 777, 815, 861, 873, 886, 890, 901, 915, 931, 933, 936, 938, 939, 944, 948, 950, 954, 962, 963, 967, 983, 987, 988, 993, 1004, 1006, 1012, 1021, 1030, 1031, 1042, 1044, 1045, 1046, 1055, 1065, 1066, 1069, 1070, 1090, 1093, 1095, 1098, 1099, 1103, 1111, 1141, 1143, 1146, 1150, 1152, 1154, 1169, 1192, 1194, 1201, 1202, 1203, 1207, 1211, 1212, 1213, 1225, 1226, 1247, 1248, 1250, 1264, 1271, 1274, 1275, 1282, 1296, 1305, 1314, 1318, 1323, 1328, 1339, 1343, 1351, 1363, 1364, 1368, 1370, 1373, 1374, 1378, 1382, 1385, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1405, 1406, 1407, 1408, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1453, 1454, 1458, 1459, 1464, 1465, 1466, 1467, 1468, 1469, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1487, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1502, 1503, 1505, 1506, 1507, 1508, 1515, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1560, 1561, 1562, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1584, 1585, 1588, 1589, 1594, 1604, 1605, 1607, 1610, 1618, 1619, 1620, 1629, 1631, 1637, 1638, 1644, 1666, 1675, 1690, 1695, 1700, 1701, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1716, 1717, 1718, 1720, 1724, 1729, 1730, 1731, 1733, 1734, 1737, 1745, 1758, 1759, 1760, 1761, 1764, 1765, 1767, 1768, 1769, 1775, 1778, 1782, 1792, 1794, 1795, 1796, 1798, 1799, 1800, 1805, 1807, 1808, 1811, 1812, 1813, 1814, 1822, 1826, 1829, 1830, 1831, 1832, 1833, 1834, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1859, 1864, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1878, 1879, 1880, 1881, 1882, 1883, 1887, 1902, 1903, 1904, 1912, 1914, 1919, 1920, 1925, 1926, 1929, 1930, 1931, 1932, 1933, 1934, 1940, 1945, 1957, 1960, 1962, 1963, 1964, 1965, 1966, 1968, 1971, 1975, 1977, 1980, 1985, 1988, 1990, 1992, 1996, 1999, 2001, 2002, 2004, 2009, 2011, 2012, 2013, 2014, 2016, 2019, 2020, 2021, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2039, 2042, 2043, 2044, 2051, 2054, 2056, 2057], "expect": [0, 1, 3, 5, 7, 9, 12, 21, 22, 25, 27, 29, 33, 40, 42, 44, 46, 47, 49, 54, 55, 58, 76, 411, 482, 676, 693, 756, 850, 904, 905, 906, 907, 908, 909, 1044, 1119, 1121, 1138, 1139, 1140, 1160, 1161, 1172, 1179, 1225, 1247, 1250, 1266, 1267, 1295, 1316, 1317, 1351, 1403, 1404, 1423, 1439, 1440, 1441, 1442, 1451, 1452, 1453, 1458, 1459, 1460, 1470, 1471, 1472, 1488, 1494, 1495, 1503, 1505, 1521, 1527, 1531, 1533, 1535, 1540, 1584, 1590, 1604, 1629, 1637, 1638, 1650, 1663, 1664, 1665, 1666, 1675, 1717, 1770, 1826, 1896, 1933, 1959, 1960, 1966, 1972, 1987, 1991, 1994, 1995, 1996, 1999, 2009, 2011, 2012, 2015, 2016, 2017, 2020, 2024, 2029, 2031, 2040, 2043, 2044, 2048, 2050], "alwai": [0, 5, 7, 14, 17, 21, 22, 25, 31, 40, 44, 46, 47, 49, 53, 58, 336, 411, 444, 454, 790, 876, 896, 898, 901, 904, 910, 937, 946, 956, 962, 968, 991, 993, 1044, 1055, 1085, 1093, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1129, 1130, 1131, 1132, 1134, 1137, 1141, 1169, 1182, 1208, 1209, 1250, 1261, 1266, 1281, 1286, 1287, 1288, 1289, 1291, 1292, 1304, 1307, 1308, 1309, 1310, 1314, 1316, 1380, 1400, 1402, 1403, 1404, 1424, 1450, 1451, 1452, 1461, 1462, 1463, 1470, 1471, 1472, 1488, 1524, 1527, 1666, 1675, 1716, 1809, 1810, 1835, 1882, 1886, 1919, 1923, 1964, 1965, 1972, 1977, 1980, 1987, 1988, 1989, 1990, 1991, 1992, 1995, 1996, 1998, 1999, 2012, 2013, 2019, 2020, 2022, 2024, 2027, 2030, 2031, 2039, 2042, 2043, 2059], "abov": [0, 1, 3, 12, 15, 25, 27, 30, 31, 35, 42, 44, 46, 47, 49, 50, 55, 58, 60, 62, 613, 676, 788, 789, 876, 937, 946, 1055, 1081, 1085, 1086, 1087, 1088, 1089, 1098, 1195, 1208, 1209, 1250, 1251, 1271, 1282, 1286, 1287, 1305, 1307, 1308, 1311, 1314, 1317, 1320, 1323, 1400, 1401, 1434, 1488, 1516, 1524, 1539, 1644, 1666, 1731, 1761, 1785, 1796, 1797, 1829, 1833, 1846, 1866, 1908, 1911, 1912, 1913, 1914, 1959, 1961, 1963, 1964, 1968, 1971, 1987, 1988, 1989, 1990, 1992, 1993, 1996, 1999, 2001, 2003, 2004, 2007, 2009, 2012, 2015, 2020, 2021, 2022, 2024, 2025, 2031, 2035, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2048, 2054], "our": [0, 3, 7, 8, 38, 41, 42, 43, 45, 53, 54, 55, 58, 59, 896, 897, 901, 1118, 1156, 1168, 1172, 1400, 1682, 1683, 1742, 1743, 1829, 1987, 1992, 1995, 1996, 2001, 2006, 2009, 2011, 2015, 2021, 2024, 2035, 2039, 2042, 2043, 2044, 2046, 2047, 2048, 2053, 2054], "NOT": [0, 21, 25, 33, 42, 43, 44, 46, 58, 942, 999, 1033, 1250, 1333, 1427, 1675, 1676, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1713, 1728, 1736, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1987, 2007, 2022, 2024, 2026], "make": [0, 1, 2, 3, 4, 5, 8, 14, 15, 21, 22, 25, 27, 28, 31, 33, 34, 39, 42, 43, 44, 45, 46, 53, 54, 58, 59, 60, 71, 135, 218, 482, 492, 775, 781, 857, 858, 889, 892, 959, 1001, 1002, 1004, 1086, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1138, 1139, 1140, 1169, 1171, 1172, 1250, 1254, 1260, 1261, 1280, 1281, 1293, 1294, 1295, 1323, 1362, 1400, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1448, 1488, 1498, 1535, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1593, 1595, 1604, 1644, 1663, 1675, 1689, 1706, 1723, 1763, 1826, 1858, 1868, 1869, 1870, 1872, 1873, 1905, 1923, 1926, 1928, 1959, 1961, 1963, 1964, 1972, 1975, 1977, 1978, 1980, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1996, 1999, 2001, 2003, 2005, 2009, 2011, 2012, 2014, 2015, 2016, 2020, 2021, 2022, 2024, 2026, 2027, 2029, 2033, 2035, 2036, 2041, 2042, 2043, 2044, 2046, 2048, 2050, 2053, 2054, 2055], "guarante": [0, 1, 5, 9, 21, 25, 27, 29, 31, 42, 44, 46, 47, 54, 57, 58, 60, 482, 872, 968, 1172, 1179, 1250, 1260, 1424, 1488, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1858, 1860, 1923, 1987, 1989, 1990, 2002, 2003, 2012, 2014, 2016, 2020, 2022, 2042], "encount": [0, 5, 25, 46, 54, 57, 58, 676, 1675, 1682, 1683, 1961, 1964, 1966, 1970, 1989, 2002, 2012, 2015, 2040, 2044, 2047, 2050, 2052, 2054], "nan": [0, 1, 24, 31, 423, 424, 495, 680, 682, 685, 686, 687, 690, 693, 694, 877, 881, 936, 952, 1099, 1100, 1101, 1144, 1145, 1146, 1211, 1239, 1240, 1242, 1243, 1290, 1297, 1310, 1313, 1326, 1331, 1349, 1350, 1354, 1378, 1379, 1380, 1381, 1382, 1593, 1680, 1779, 1816, 1821, 1875, 1910, 1962, 1971, 1986, 1987, 1993, 2002, 2025, 2031], "verifi": [0, 25, 46, 58, 83, 915, 1081, 1737, 1738, 1756, 1908, 1959, 1961, 1974, 1992, 1996, 2009, 2013, 2046], "compat": [0, 1, 14, 21, 27, 30, 31, 33, 46, 49, 53, 54, 58, 60, 493, 494, 599, 613, 676, 811, 812, 813, 886, 901, 902, 949, 981, 982, 1250, 1255, 1268, 1281, 1292, 1305, 1308, 1488, 1494, 1531, 1532, 1533, 1534, 1535, 1604, 1682, 1683, 1727, 1736, 1808, 1959, 1960, 1963, 1964, 1970, 1977, 1978, 1986, 1992, 2004, 2007, 2012, 2014, 2015, 2018, 2020, 2024, 2026, 2030, 2032, 2036], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 12, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 44, 46, 47, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 150, 152, 169, 180, 187, 204, 220, 221, 222, 223, 224, 229, 250, 254, 256, 259, 282, 285, 294, 296, 307, 309, 311, 313, 317, 348, 397, 398, 423, 424, 441, 444, 445, 450, 477, 479, 483, 484, 492, 503, 504, 509, 511, 513, 516, 534, 539, 540, 543, 552, 554, 556, 574, 576, 577, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 601, 603, 604, 613, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 721, 722, 723, 726, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 747, 748, 749, 751, 752, 753, 754, 756, 764, 765, 766, 768, 769, 770, 771, 774, 776, 778, 779, 781, 790, 792, 795, 798, 813, 816, 817, 818, 821, 850, 852, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 890, 896, 898, 901, 902, 904, 905, 906, 908, 915, 916, 918, 920, 921, 928, 931, 933, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 955, 956, 957, 958, 959, 960, 962, 963, 966, 978, 979, 980, 983, 984, 985, 986, 987, 988, 998, 1004, 1013, 1015, 1041, 1042, 1068, 1072, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1096, 1098, 1100, 1101, 1108, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1166, 1167, 1172, 1175, 1179, 1192, 1193, 1204, 1208, 1210, 1211, 1212, 1213, 1214, 1217, 1221, 1225, 1227, 1235, 1246, 1247, 1248, 1250, 1254, 1256, 1257, 1258, 1262, 1270, 1271, 1272, 1273, 1274, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1312, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1340, 1344, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1369, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1388, 1390, 1391, 1392, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1407, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1476, 1478, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1519, 1521, 1522, 1523, 1525, 1527, 1530, 1531, 1533, 1535, 1536, 1537, 1539, 1540, 1543, 1544, 1545, 1548, 1549, 1550, 1558, 1559, 1560, 1561, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1593, 1596, 1597, 1598, 1601, 1602, 1603, 1604, 1608, 1609, 1611, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1640, 1644, 1645, 1648, 1650, 1653, 1659, 1660, 1661, 1662, 1663, 1666, 1675, 1679, 1680, 1682, 1683, 1689, 1690, 1691, 1695, 1700, 1701, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1716, 1717, 1719, 1720, 1722, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1776, 1778, 1779, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1811, 1812, 1813, 1814, 1816, 1817, 1821, 1823, 1824, 1825, 1828, 1830, 1833, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1858, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1888, 1889, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1925, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1938, 1940, 1957, 1958, 1959, 1961, 1962, 1963, 1964, 1968, 1971, 1978, 1979, 1980, 1985, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2017, 2020, 2021, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2035, 2036, 2039, 2040, 2041, 2042, 2044, 2046, 2047, 2048, 2049, 2052, 2053, 2055, 2057], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 11, 12, 14, 18, 19, 21, 22, 25, 31, 40, 46, 53, 54, 55, 57, 58, 60, 61, 65, 66, 68, 69, 70, 71, 150, 187, 204, 229, 256, 285, 294, 309, 311, 313, 317, 397, 398, 441, 467, 495, 509, 511, 513, 519, 533, 540, 554, 556, 580, 581, 582, 583, 584, 603, 681, 682, 686, 693, 730, 735, 736, 737, 738, 739, 741, 742, 756, 758, 769, 770, 857, 858, 861, 876, 882, 883, 884, 904, 907, 909, 936, 939, 946, 947, 948, 952, 954, 958, 960, 961, 962, 963, 966, 973, 983, 987, 1077, 1079, 1081, 1088, 1090, 1092, 1093, 1096, 1097, 1098, 1101, 1114, 1116, 1118, 1119, 1125, 1126, 1129, 1134, 1137, 1138, 1141, 1144, 1146, 1147, 1148, 1150, 1157, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1193, 1204, 1210, 1212, 1214, 1216, 1217, 1227, 1235, 1239, 1257, 1261, 1262, 1271, 1272, 1273, 1276, 1279, 1280, 1297, 1300, 1303, 1306, 1307, 1308, 1309, 1314, 1315, 1318, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1333, 1337, 1344, 1345, 1351, 1352, 1381, 1383, 1384, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1401, 1402, 1403, 1404, 1408, 1409, 1410, 1412, 1413, 1414, 1416, 1417, 1419, 1420, 1421, 1423, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1441, 1442, 1443, 1448, 1450, 1451, 1452, 1453, 1454, 1458, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1476, 1479, 1484, 1485, 1488, 1495, 1498, 1502, 1503, 1509, 1510, 1511, 1512, 1513, 1516, 1519, 1525, 1527, 1531, 1533, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1559, 1560, 1568, 1569, 1571, 1572, 1576, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1591, 1593, 1596, 1604, 1629, 1631, 1637, 1653, 1663, 1664, 1665, 1675, 1695, 1705, 1708, 1710, 1711, 1713, 1718, 1719, 1721, 1723, 1729, 1730, 1731, 1733, 1734, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1758, 1764, 1768, 1774, 1776, 1778, 1779, 1781, 1782, 1785, 1786, 1789, 1790, 1791, 1792, 1796, 1801, 1802, 1805, 1806, 1812, 1813, 1814, 1821, 1833, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1858, 1864, 1866, 1867, 1868, 1869, 1871, 1874, 1882, 1885, 1886, 1887, 1888, 1889, 1897, 1899, 1901, 1902, 1903, 1905, 1906, 1908, 1917, 1918, 1921, 1923, 1929, 1935, 1936, 1937, 1957, 1961, 1962, 1963, 1964, 1965, 1971, 1972, 1979, 1980, 1985, 1986, 1987, 1988, 1990, 1992, 1994, 1996, 1999, 2000, 2004, 2005, 2007, 2009, 2011, 2013, 2015, 2020, 2024, 2025, 2027, 2029, 2030, 2031, 2041, 2052, 2053, 2054], "growth_interv": 0, "2000": [0, 25, 29, 1116, 1118, 1125, 1134, 1147, 1328, 1540, 1761, 1789, 1838, 1839, 1901], "float64": [0, 11, 236, 442, 445, 576, 876, 977, 1141, 1150, 1151, 1198, 1232, 1250, 1280, 1286, 1287, 1289, 1291, 1307, 1488, 1644, 1742, 1743, 1755, 1779, 1787, 1826, 1827, 1830, 1860, 1868, 1869, 1870, 1871, 1872, 1873, 1901, 1933, 1938, 1999, 2002, 2024, 2026, 2027, 2030, 2031, 2057], "out": [0, 1, 2, 3, 7, 8, 9, 11, 15, 18, 21, 25, 27, 31, 39, 40, 43, 46, 50, 53, 58, 60, 64, 66, 229, 308, 310, 312, 314, 395, 397, 444, 492, 508, 510, 512, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 752, 756, 760, 768, 769, 770, 775, 777, 781, 793, 832, 834, 835, 853, 854, 861, 862, 863, 864, 865, 866, 867, 868, 873, 877, 878, 879, 880, 881, 891, 894, 895, 896, 899, 901, 911, 915, 924, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 948, 952, 955, 957, 958, 959, 960, 961, 963, 964, 966, 968, 977, 978, 979, 982, 983, 985, 986, 998, 1003, 1011, 1013, 1015, 1042, 1043, 1055, 1056, 1068, 1072, 1077, 1078, 1079, 1080, 1082, 1085, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1152, 1153, 1156, 1157, 1159, 1160, 1162, 1167, 1192, 1193, 1194, 1195, 1196, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1227, 1228, 1244, 1245, 1250, 1256, 1262, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1321, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1369, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1384, 1385, 1386, 1387, 1388, 1389, 1393, 1394, 1395, 1397, 1398, 1399, 1405, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1425, 1426, 1427, 1428, 1430, 1432, 1435, 1436, 1439, 1440, 1455, 1456, 1457, 1458, 1473, 1475, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1500, 1501, 1503, 1505, 1509, 1510, 1511, 1512, 1513, 1514, 1531, 1532, 1533, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1564, 1568, 1569, 1570, 1571, 1572, 1573, 1579, 1580, 1581, 1586, 1589, 1593, 1604, 1610, 1630, 1632, 1663, 1675, 1682, 1683, 1700, 1701, 1702, 1703, 1729, 1730, 1731, 1732, 1734, 1735, 1756, 1773, 1774, 1778, 1779, 1780, 1782, 1785, 1786, 1792, 1793, 1794, 1796, 1798, 1800, 1801, 1804, 1805, 1806, 1810, 1814, 1815, 1816, 1818, 1819, 1820, 1821, 1836, 1837, 1838, 1850, 1851, 1852, 1853, 1858, 1863, 1864, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1886, 1898, 1899, 1900, 1903, 1905, 1907, 1910, 1911, 1913, 1915, 1916, 1923, 1930, 1931, 1932, 1935, 1937, 1938, 1939, 1957, 1958, 1959, 1960, 1961, 1962, 1964, 1971, 1972, 1975, 1977, 1979, 1980, 1987, 1988, 1990, 1991, 1992, 1993, 1995, 1999, 2001, 2007, 2009, 2011, 2012, 2015, 2016, 2018, 2020, 2021, 2022, 2024, 2025, 2027, 2029, 2030, 2034, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2052, 2053, 2055, 2056], "place": [0, 3, 7, 11, 12, 21, 22, 25, 27, 32, 33, 46, 49, 52, 53, 56, 58, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 117, 119, 121, 123, 126, 127, 129, 137, 139, 142, 143, 145, 148, 154, 156, 158, 160, 162, 164, 173, 182, 190, 194, 197, 199, 209, 211, 217, 218, 227, 232, 234, 240, 243, 245, 247, 249, 250, 253, 256, 258, 265, 267, 269, 273, 275, 279, 281, 288, 290, 292, 300, 302, 304, 306, 308, 310, 312, 314, 352, 354, 356, 358, 360, 362, 364, 367, 369, 371, 372, 379, 381, 383, 385, 387, 391, 395, 397, 416, 419, 422, 424, 435, 437, 439, 447, 452, 462, 465, 481, 482, 483, 484, 486, 488, 492, 495, 504, 507, 508, 510, 512, 518, 523, 525, 528, 530, 532, 545, 547, 549, 558, 560, 567, 571, 573, 589, 592, 594, 596, 598, 599, 608, 618, 754, 789, 793, 810, 834, 835, 853, 854, 896, 897, 899, 901, 920, 921, 922, 924, 950, 980, 1011, 1012, 1014, 1015, 1035, 1098, 1149, 1155, 1156, 1164, 1250, 1295, 1313, 1374, 1396, 1406, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1444, 1445, 1446, 1474, 1488, 1505, 1506, 1507, 1508, 1515, 1530, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1597, 1600, 1609, 1641, 1643, 1658, 1662, 1666, 1675, 1680, 1681, 1682, 1683, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1725, 1756, 1812, 1814, 1818, 1819, 1820, 1866, 1903, 1960, 1961, 1963, 1964, 1971, 1979, 1986, 1990, 1992, 1998, 2006, 2007, 2011, 2012, 2013, 2020, 2021, 2026, 2028, 2030, 2042, 2043, 2044, 2047, 2051, 2053], "variant": [0, 5, 22, 854, 1281, 1292, 1305, 1308, 1381, 1384, 1547, 1548, 1549, 1550, 1742, 1743, 1744, 1756, 1860, 1910, 1960, 1998, 2018, 2030, 2049, 2050, 2053], "explicitli": [0, 5, 8, 14, 25, 35, 49, 82, 922, 1035, 1086, 1088, 1098, 1213, 1291, 1304, 1308, 1316, 1358, 1604, 1663, 1767, 1829, 1882, 1961, 1963, 1964, 1965, 1970, 1972, 1990, 1992, 1995, 1996, 1998, 2004, 2009, 2012, 2013, 2019, 2020, 2024, 2044], "suppli": [0, 5, 7, 14, 15, 25, 1033, 1494, 1738, 1964, 1990, 2009, 2024, 2044, 2054], "won": [0, 8, 22, 27, 42, 52, 454, 1172, 1250, 1262, 1488, 1630, 1669, 1670, 1959, 1987, 1992, 2020, 2032, 2043, 2044, 2047, 2052, 2054], "go": [0, 1, 7, 15, 21, 25, 27, 39, 44, 53, 58, 495, 496, 556, 896, 898, 901, 920, 924, 1177, 1323, 1397, 1398, 1399, 1481, 1482, 1483, 1682, 1683, 1963, 1964, 1971, 1977, 1978, 1979, 1987, 1989, 1990, 1992, 1993, 1998, 1999, 2001, 2005, 2009, 2012, 2027, 2029, 2040, 2041, 2042, 2043, 2044, 2047], "addmm": [0, 46, 47, 60, 102, 1878, 1962, 1978, 2002, 2010, 2024, 2049, 2053], "b": [0, 1, 3, 11, 12, 21, 25, 27, 31, 40, 46, 58, 60, 63, 81, 83, 256, 331, 394, 613, 681, 682, 744, 753, 777, 820, 876, 896, 897, 899, 900, 901, 902, 918, 920, 921, 936, 947, 948, 950, 954, 956, 958, 961, 966, 980, 983, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1041, 1042, 1090, 1093, 1097, 1098, 1143, 1144, 1145, 1146, 1152, 1156, 1168, 1180, 1193, 1216, 1227, 1247, 1253, 1261, 1262, 1270, 1271, 1273, 1282, 1283, 1291, 1295, 1296, 1300, 1303, 1304, 1305, 1306, 1307, 1308, 1311, 1312, 1313, 1316, 1317, 1320, 1323, 1332, 1334, 1335, 1341, 1349, 1354, 1356, 1373, 1401, 1405, 1430, 1431, 1438, 1475, 1564, 1566, 1585, 1592, 1610, 1689, 1717, 1718, 1719, 1720, 1721, 1722, 1730, 1753, 1755, 1786, 1792, 1805, 1808, 1824, 1835, 1854, 1863, 1868, 1869, 1870, 1872, 1873, 1877, 1882, 1883, 1885, 1892, 1893, 1894, 1903, 1910, 1911, 1913, 1932, 1937, 1961, 1962, 1963, 1964, 1978, 1979, 1980, 1985, 1986, 1988, 1990, 1992, 1994, 1996, 1997, 2002, 2004, 2007, 2014, 2015, 2021, 2022, 2024, 2025, 2028, 2029, 2034, 2040, 2041, 2044, 2046, 2047, 2049, 2053, 2054, 2056], "c": [0, 1, 3, 8, 9, 14, 21, 25, 31, 40, 46, 47, 52, 58, 81, 83, 256, 331, 495, 516, 613, 681, 817, 873, 876, 896, 899, 901, 902, 947, 958, 984, 1035, 1041, 1075, 1090, 1093, 1098, 1144, 1145, 1146, 1156, 1157, 1161, 1166, 1193, 1204, 1250, 1261, 1273, 1280, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1296, 1297, 1300, 1302, 1306, 1307, 1309, 1311, 1313, 1314, 1373, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1423, 1426, 1427, 1428, 1432, 1434, 1435, 1436, 1442, 1450, 1451, 1452, 1455, 1456, 1457, 1459, 1460, 1470, 1471, 1472, 1476, 1481, 1482, 1483, 1484, 1485, 1486, 1491, 1492, 1493, 1495, 1500, 1501, 1509, 1510, 1511, 1512, 1513, 1514, 1522, 1527, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1558, 1566, 1576, 1577, 1589, 1593, 1629, 1635, 1636, 1644, 1689, 1718, 1720, 1721, 1722, 1729, 1730, 1773, 1789, 1805, 1842, 1863, 1877, 1882, 1903, 1920, 1925, 1926, 1960, 1961, 1962, 1963, 1964, 1968, 1972, 1978, 1979, 1989, 1990, 1991, 1993, 1996, 1998, 2005, 2012, 2021, 2022, 2024, 2025, 2028, 2029, 2035, 2041, 2042, 2043, 2044, 2046, 2047, 2049, 2053, 2054, 2055, 2056], "addmm_": [0, 1962, 1978, 2024], "d": [0, 1, 11, 21, 22, 25, 30, 31, 50, 58, 309, 317, 331, 467, 509, 511, 513, 540, 579, 613, 682, 686, 861, 876, 896, 899, 901, 902, 935, 936, 937, 939, 946, 947, 948, 952, 955, 958, 1085, 1087, 1097, 1098, 1111, 1115, 1116, 1117, 1118, 1123, 1124, 1127, 1128, 1133, 1134, 1135, 1138, 1139, 1140, 1167, 1168, 1192, 1208, 1209, 1216, 1225, 1247, 1251, 1255, 1293, 1294, 1344, 1355, 1376, 1391, 1399, 1400, 1404, 1417, 1421, 1422, 1426, 1427, 1428, 1430, 1432, 1434, 1439, 1441, 1452, 1458, 1460, 1472, 1483, 1497, 1503, 1527, 1536, 1537, 1539, 1558, 1593, 1604, 1610, 1638, 1662, 1663, 1690, 1724, 1729, 1730, 1754, 1774, 1792, 1798, 1801, 1813, 1821, 1826, 1877, 1882, 1896, 1897, 1903, 1906, 1911, 1912, 1913, 1914, 1929, 1935, 1937, 1959, 1962, 1968, 1971, 1978, 1979, 1980, 1985, 1987, 1990, 1992, 1993, 1995, 1996, 1997, 2004, 2009, 2020, 2021, 2024, 2025, 2029, 2030, 2043, 2044, 2046, 2052, 2054, 2056], "best": [0, 1, 7, 15, 18, 21, 25, 31, 43, 49, 52, 857, 858, 928, 955, 968, 1172, 1266, 1267, 1296, 1494, 1756, 1769, 1960, 1961, 1963, 1977, 1985, 1986, 1987, 1992, 1994, 2012, 2020, 2024, 2026, 2035, 2041, 2044, 2048], "stabil": [0, 1282, 1287, 1338, 1401, 1402, 1403, 1404, 1441, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1524, 1527, 1536, 1590, 1652, 1690, 1724, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1756, 1789, 1993, 2044, 2054], "argument": [0, 1, 3, 4, 5, 8, 9, 12, 14, 18, 21, 25, 26, 27, 29, 30, 31, 33, 40, 43, 45, 46, 47, 49, 53, 54, 57, 58, 60, 66, 68, 69, 80, 84, 146, 192, 205, 309, 317, 441, 442, 443, 444, 445, 483, 484, 509, 513, 556, 576, 577, 579, 580, 581, 583, 584, 599, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 730, 734, 735, 736, 737, 738, 739, 789, 790, 795, 815, 816, 817, 820, 821, 822, 837, 853, 854, 857, 859, 861, 876, 877, 878, 879, 880, 881, 885, 886, 887, 888, 889, 896, 897, 898, 899, 901, 902, 905, 907, 908, 909, 910, 912, 913, 920, 921, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 948, 952, 955, 957, 958, 959, 960, 961, 963, 965, 966, 972, 977, 980, 982, 983, 985, 986, 988, 998, 1020, 1022, 1026, 1027, 1033, 1041, 1042, 1044, 1067, 1071, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1095, 1096, 1097, 1099, 1100, 1101, 1103, 1108, 1111, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1172, 1188, 1189, 1192, 1193, 1194, 1195, 1204, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1225, 1227, 1244, 1245, 1247, 1250, 1253, 1262, 1266, 1267, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1344, 1345, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1388, 1402, 1403, 1404, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1431, 1434, 1437, 1439, 1446, 1449, 1450, 1451, 1452, 1453, 1458, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1484, 1485, 1486, 1488, 1489, 1494, 1495, 1496, 1503, 1527, 1535, 1539, 1541, 1542, 1550, 1591, 1593, 1630, 1644, 1666, 1669, 1670, 1675, 1695, 1697, 1701, 1702, 1706, 1710, 1716, 1725, 1729, 1731, 1734, 1735, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1761, 1773, 1774, 1778, 1779, 1782, 1783, 1785, 1786, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1805, 1806, 1807, 1814, 1816, 1821, 1825, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1858, 1861, 1863, 1864, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1919, 1923, 1930, 1931, 1935, 1936, 1937, 1938, 1944, 1946, 1947, 1948, 1953, 1954, 1957, 1958, 1959, 1962, 1963, 1964, 1966, 1968, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2003, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2019, 2020, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2039, 2041, 2043, 2044, 2048, 2053, 2055, 2057], "respect": [0, 1, 5, 8, 25, 26, 29, 31, 40, 42, 49, 55, 57, 58, 192, 205, 483, 576, 599, 685, 686, 687, 756, 791, 815, 837, 881, 887, 889, 901, 902, 910, 916, 920, 921, 963, 988, 1086, 1088, 1089, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1166, 1204, 1250, 1282, 1286, 1287, 1296, 1306, 1309, 1311, 1314, 1323, 1355, 1378, 1400, 1401, 1407, 1418, 1419, 1420, 1424, 1439, 1441, 1458, 1488, 1489, 1503, 1533, 1535, 1536, 1537, 1538, 1540, 1584, 1593, 1697, 1701, 1703, 1725, 1727, 1739, 1740, 1741, 1742, 1743, 1744, 1753, 1754, 1755, 1756, 1769, 1859, 1863, 1886, 1903, 1979, 1986, 1987, 1990, 1992, 1996, 1999, 2000, 2013, 2018, 2024, 2025, 2026, 2031, 2043, 2048], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 33, 39, 40, 41, 42, 43, 46, 47, 49, 51, 53, 54, 56, 58, 60, 62, 68, 69, 78, 79, 80, 483, 484, 613, 676, 756, 775, 781, 788, 789, 790, 796, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 850, 857, 858, 885, 886, 887, 894, 901, 902, 920, 921, 935, 952, 957, 961, 973, 980, 1041, 1055, 1098, 1116, 1118, 1142, 1152, 1165, 1179, 1204, 1250, 1251, 1260, 1264, 1271, 1282, 1293, 1303, 1306, 1307, 1320, 1323, 1342, 1345, 1392, 1401, 1407, 1423, 1431, 1434, 1439, 1458, 1488, 1503, 1519, 1535, 1539, 1598, 1612, 1644, 1668, 1669, 1670, 1673, 1674, 1675, 1682, 1683, 1689, 1730, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1764, 1767, 1775, 1786, 1814, 1821, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1861, 1862, 1863, 1864, 1871, 1882, 1908, 1916, 1923, 1926, 1959, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1970, 1971, 1973, 1974, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2016, 2018, 2020, 2021, 2022, 2024, 2025, 2027, 2028, 2030, 2031, 2035, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2052, 2054, 2055, 2056, 2057], "describ": [0, 5, 7, 8, 9, 21, 22, 25, 27, 29, 30, 33, 34, 40, 42, 46, 47, 58, 229, 509, 788, 789, 790, 811, 812, 813, 837, 855, 953, 1024, 1041, 1058, 1098, 1204, 1271, 1311, 1392, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1425, 1426, 1427, 1428, 1429, 1432, 1434, 1435, 1436, 1442, 1445, 1448, 1450, 1451, 1452, 1454, 1460, 1479, 1481, 1482, 1483, 1494, 1495, 1502, 1506, 1519, 1527, 1535, 1536, 1537, 1539, 1576, 1588, 1589, 1598, 1632, 1767, 1908, 1960, 1961, 1963, 1964, 1972, 1985, 1986, 1987, 1990, 1991, 1992, 1994, 1996, 1998, 1999, 2004, 2009, 2012, 2014, 2015, 2018, 2021, 2022, 2031, 2044, 2045, 2050], "part": [0, 1, 3, 4, 5, 6, 7, 9, 14, 15, 18, 21, 22, 25, 27, 31, 42, 43, 46, 47, 49, 53, 54, 58, 78, 79, 837, 910, 977, 1098, 1240, 1242, 1243, 1246, 1250, 1261, 1263, 1266, 1267, 1281, 1287, 1289, 1298, 1305, 1308, 1488, 1527, 1644, 1675, 1693, 1759, 1786, 1798, 1867, 1908, 1911, 1912, 1913, 1914, 1959, 1960, 1961, 1963, 1964, 1973, 1974, 1986, 1987, 1990, 1992, 1994, 1995, 1996, 1999, 2004, 2009, 2012, 2013, 2015, 2020, 2021, 2022, 2024, 2029, 2031, 2040, 2043, 2044, 2045, 2052, 2053, 2054], "expos": [0, 1, 8, 25, 29, 49, 57, 58, 791, 1152, 1987, 1990, 1998, 2012, 2015, 2055], "namespac": [0, 58, 1072, 1961, 1965, 1968, 1992, 1999, 2007, 2009, 2013, 2018, 2035, 2041, 2055], "below": [0, 1, 5, 9, 12, 14, 21, 22, 25, 27, 30, 31, 33, 34, 39, 42, 43, 44, 45, 46, 47, 58, 60, 68, 69, 676, 730, 744, 753, 791, 810, 1041, 1085, 1086, 1087, 1088, 1089, 1098, 1126, 1128, 1132, 1168, 1175, 1195, 1204, 1250, 1267, 1307, 1308, 1313, 1320, 1352, 1418, 1419, 1420, 1439, 1441, 1448, 1458, 1460, 1484, 1485, 1486, 1488, 1503, 1519, 1540, 1576, 1602, 1648, 1675, 1695, 1729, 1756, 1826, 1829, 1866, 1898, 1908, 1911, 1912, 1913, 1914, 1961, 1963, 1964, 1966, 1970, 1971, 1977, 1978, 1986, 1987, 1990, 1991, 1992, 1996, 1997, 1999, 2001, 2003, 2004, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2017, 2020, 2021, 2022, 2025, 2028, 2031, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2048, 2050, 2052, 2054], "do": [0, 1, 4, 7, 8, 9, 11, 14, 15, 21, 22, 25, 27, 29, 32, 33, 35, 42, 43, 44, 46, 49, 50, 51, 54, 55, 57, 58, 80, 491, 509, 511, 513, 754, 819, 822, 859, 888, 891, 896, 899, 901, 902, 911, 915, 922, 924, 954, 967, 968, 995, 999, 1033, 1044, 1077, 1078, 1079, 1080, 1149, 1150, 1152, 1161, 1172, 1179, 1192, 1213, 1237, 1247, 1250, 1253, 1262, 1266, 1296, 1314, 1323, 1330, 1340, 1342, 1351, 1374, 1384, 1396, 1406, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1444, 1445, 1446, 1474, 1506, 1507, 1508, 1515, 1530, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1595, 1597, 1612, 1666, 1675, 1682, 1683, 1731, 1736, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1773, 1779, 1829, 1923, 1959, 1960, 1961, 1962, 1964, 1966, 1968, 1972, 1977, 1978, 1979, 1986, 1987, 1988, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2009, 2011, 2014, 2015, 2016, 2020, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2031, 2039, 2042, 2043, 2046, 2047, 2050, 2051, 2053, 2054, 2056], "defin": [0, 1, 3, 5, 9, 14, 15, 21, 22, 25, 26, 27, 30, 31, 33, 34, 40, 42, 43, 46, 47, 49, 54, 58, 411, 431, 441, 443, 445, 513, 562, 788, 793, 794, 795, 797, 798, 834, 855, 856, 857, 858, 885, 886, 887, 888, 901, 902, 1055, 1081, 1098, 1099, 1118, 1146, 1153, 1172, 1193, 1195, 1210, 1212, 1213, 1239, 1250, 1256, 1273, 1280, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1296, 1297, 1300, 1302, 1303, 1307, 1308, 1309, 1311, 1313, 1314, 1320, 1356, 1424, 1429, 1435, 1436, 1443, 1444, 1445, 1446, 1453, 1455, 1456, 1457, 1488, 1494, 1506, 1521, 1523, 1528, 1530, 1547, 1548, 1558, 1593, 1644, 1650, 1666, 1669, 1675, 1701, 1703, 1710, 1711, 1731, 1734, 1736, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1761, 1764, 1767, 1785, 1794, 1796, 1798, 1805, 1833, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1863, 1865, 1908, 1911, 1912, 1913, 1914, 1938, 1957, 1959, 1960, 1961, 1964, 1966, 1968, 1977, 1978, 1980, 1983, 1987, 1990, 1991, 1995, 1996, 1997, 1999, 2001, 2005, 2009, 2011, 2012, 2013, 2014, 2015, 2018, 2020, 2024, 2025, 2030, 2031, 2032, 2039, 2040, 2043, 2045, 2047, 2051, 2055], "still": [0, 1, 2, 7, 8, 21, 24, 25, 31, 33, 42, 46, 49, 57, 58, 482, 790, 795, 896, 898, 901, 906, 1171, 1172, 1254, 1260, 1268, 1454, 1479, 1675, 1676, 1677, 1678, 1769, 1817, 1961, 1964, 1977, 1978, 1979, 1980, 1986, 1987, 1990, 1991, 1992, 1994, 1995, 1997, 2004, 2005, 2009, 2011, 2012, 2013, 2015, 2020, 2021, 2022, 2024, 2036, 2043, 2047, 2049, 2050, 2054, 2056], "chang": [0, 1, 2, 3, 7, 11, 12, 18, 22, 25, 27, 29, 30, 31, 33, 41, 46, 47, 49, 50, 53, 54, 56, 57, 58, 59, 135, 229, 250, 317, 454, 492, 495, 513, 516, 552, 613, 676, 815, 873, 915, 916, 968, 980, 981, 982, 998, 999, 1009, 1020, 1022, 1033, 1034, 1041, 1042, 1044, 1086, 1134, 1150, 1155, 1169, 1182, 1198, 1204, 1225, 1247, 1250, 1261, 1262, 1281, 1292, 1294, 1295, 1296, 1299, 1312, 1352, 1427, 1430, 1448, 1458, 1488, 1519, 1540, 1546, 1547, 1548, 1551, 1558, 1593, 1618, 1619, 1620, 1644, 1666, 1667, 1675, 1677, 1678, 1682, 1683, 1692, 1695, 1696, 1725, 1729, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1761, 1764, 1765, 1767, 1769, 1771, 1785, 1825, 1829, 1866, 1877, 1880, 1881, 1882, 1907, 1926, 1930, 1931, 1944, 1946, 1959, 1960, 1961, 1968, 1970, 1971, 1972, 1973, 1975, 1977, 1978, 1979, 1980, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1995, 1996, 1997, 1999, 2001, 2002, 2004, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2020, 2022, 2024, 2026, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2036, 2039, 2042, 2043, 2045, 2046, 2047, 2050, 2051, 2054], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 22, 26, 27, 29, 30, 31, 32, 33, 35, 40, 41, 42, 43, 44, 46, 47, 49, 53, 54, 57, 58, 60, 68, 69, 84, 146, 254, 285, 309, 311, 313, 315, 317, 331, 468, 482, 483, 495, 509, 511, 513, 533, 556, 600, 603, 613, 620, 680, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 756, 760, 777, 786, 787, 793, 795, 815, 819, 822, 834, 850, 853, 854, 855, 857, 872, 876, 881, 888, 889, 891, 901, 902, 904, 905, 906, 907, 908, 909, 910, 920, 921, 928, 939, 952, 955, 958, 962, 968, 970, 980, 986, 987, 988, 998, 999, 1004, 1011, 1012, 1013, 1014, 1015, 1026, 1027, 1028, 1055, 1057, 1062, 1063, 1074, 1076, 1081, 1085, 1086, 1087, 1088, 1089, 1098, 1114, 1119, 1122, 1126, 1129, 1132, 1137, 1138, 1139, 1140, 1141, 1146, 1149, 1155, 1156, 1159, 1160, 1161, 1162, 1163, 1167, 1171, 1172, 1175, 1179, 1183, 1192, 1195, 1213, 1225, 1235, 1241, 1247, 1248, 1250, 1251, 1253, 1256, 1260, 1261, 1262, 1266, 1283, 1286, 1287, 1296, 1300, 1302, 1303, 1306, 1307, 1311, 1313, 1314, 1316, 1319, 1320, 1322, 1328, 1344, 1351, 1356, 1374, 1380, 1383, 1384, 1390, 1391, 1392, 1394, 1395, 1396, 1398, 1399, 1402, 1403, 1404, 1407, 1416, 1417, 1419, 1420, 1423, 1424, 1431, 1438, 1439, 1448, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1474, 1478, 1482, 1483, 1484, 1485, 1486, 1488, 1491, 1493, 1494, 1516, 1519, 1521, 1523, 1527, 1536, 1537, 1551, 1575, 1592, 1593, 1595, 1605, 1612, 1631, 1632, 1650, 1651, 1659, 1666, 1675, 1682, 1683, 1689, 1691, 1692, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1725, 1727, 1730, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1775, 1787, 1801, 1805, 1807, 1808, 1812, 1814, 1821, 1825, 1829, 1833, 1835, 1841, 1853, 1858, 1862, 1863, 1865, 1866, 1874, 1877, 1882, 1902, 1907, 1908, 1911, 1912, 1913, 1914, 1918, 1919, 1922, 1923, 1926, 1935, 1940, 1947, 1948, 1949, 1956, 1959, 1961, 1963, 1964, 1966, 1970, 1971, 1972, 1973, 1974, 1975, 1977, 1979, 1980, 1985, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2003, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2033, 2034, 2035, 2036, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057], "unlist": 0, "downstream": [0, 3, 1975, 2044, 2045, 2047, 2054], "stabl": [0, 1, 2, 12, 25, 31, 42, 43, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 872, 980, 1098, 1286, 1287, 1291, 1296, 1304, 1308, 1311, 1314, 1316, 1323, 1401, 1858, 1960, 1962, 1985, 1988, 2003, 2020], "believ": [0, 8, 2044], "unstabl": [0, 31, 1286, 1287, 1314, 1331, 1340, 1612, 1886, 2025], "__matmul__": 0, "addbmm": [0, 96, 936, 1962, 2002, 2010], "addmv": [0, 104, 1962, 1978, 2010], "addr": [0, 25, 106, 1962, 2010, 2056], "baddbmm": [0, 148, 1962, 2002, 2010], "bmm": [0, 1923, 1962, 1978, 1980, 2002, 2003, 2010, 2024, 2049], "chain_matmul": [0, 1962, 2010], "multi_dot": [0, 958], "conv1d": [0, 704, 708, 711, 721, 737, 1418, 1426, 1464, 1923, 1962, 2010, 2015, 2017], "conv2d": [0, 46, 705, 709, 712, 714, 722, 738, 788, 810, 1250, 1260, 1262, 1266, 1267, 1419, 1427, 1465, 1488, 1489, 1495, 1516, 1539, 1682, 1710, 1923, 1961, 1962, 1973, 2007, 2009, 2010, 2015, 2017, 2018, 2029, 2034], "conv3d": [0, 706, 710, 713, 715, 723, 739, 1420, 1428, 1466, 1683, 1923, 1962, 2010, 2015, 2017], "conv_transpose1d": [0, 1962, 2010, 2017], "conv_transpose2d": [0, 1962, 2010, 2017], "conv_transpose3d": [0, 1962, 2010, 2017], "grucel": [0, 2002, 2015, 2017, 2018], "lstmcell": [0, 2002, 2015, 2017, 2018], "matmul": [0, 2, 11, 948, 968, 1166, 1355, 1539, 1775, 1785, 1829, 1886, 1962, 1978, 1980, 1990, 2002, 2010, 2017, 2024, 2039], "mv": [0, 11, 1262, 1923, 1962, 1978, 2010, 2024], "prelu": [0, 1489, 1962, 2010, 2017], "rnncell": [0, 2015, 2017, 2018], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 90, 623, 624, 862, 1962, 1978, 2010, 2031, 2049], "asin": [0, 137, 625, 626, 864, 1962, 1978, 2010, 2024, 2049], "cosh": [0, 199, 633, 634, 680, 1962, 1978, 2010, 2049], "cosine_embedding_loss": [0, 1962, 2010], "cdist": [0, 1990, 2010], "cosine_similar": [0, 1537, 1962, 2010], "cross_entropi": [0, 1962], "cumprod": [0, 209, 1962, 1978, 2010], "cumsum": [0, 211, 1081, 1923, 1962, 1978, 2010, 2049], "dist": [0, 22, 25, 26, 29, 31, 43, 49, 959, 960, 961, 1280, 1286, 1287, 1288, 1290, 1291, 1292, 1296, 1297, 1308, 1309, 1312, 1314, 1315, 1338, 1341, 1497, 1527, 1675, 1689, 1886, 1962, 1991, 2010, 2020, 2022], "erfinv": [0, 247, 1962, 1978, 2010, 2024, 2025], "exp": [0, 1, 31, 249, 639, 640, 766, 906, 907, 909, 1141, 1310, 1330, 1338, 1401, 1406, 1423, 1429, 1453, 1477, 1478, 1492, 1502, 1515, 1518, 1520, 1521, 1523, 1524, 1528, 1567, 1613, 1637, 1645, 1646, 1650, 1652, 1655, 1689, 1782, 1842, 1843, 1865, 1882, 1962, 1978, 1987, 2009, 2010, 2025, 2049], "expm1": [0, 253, 641, 642, 1962, 1978, 2010, 2024, 2025, 2049], "group_norm": [0, 1962, 2010, 2017], "hinge_embedding_loss": [0, 1962, 2010], "kl_div": [0, 1962, 2010], "l1_loss": [0, 1962, 2010], "layer_norm": [0, 1460, 1962, 2010, 2017], "log": [0, 2, 14, 21, 22, 31, 33, 35, 36, 39, 40, 44, 75, 77, 372, 373, 649, 656, 676, 1108, 1326, 1328, 1330, 1331, 1338, 1366, 1392, 1400, 1401, 1423, 1441, 1453, 1477, 1478, 1492, 1495, 1502, 1520, 1521, 1524, 1590, 1595, 1605, 1612, 1613, 1629, 1637, 1650, 1652, 1675, 1960, 1962, 1970, 1975, 1978, 1987, 1990, 1991, 1992, 2007, 2009, 2010, 2014, 2025, 2029, 2032, 2033, 2034, 2046, 2047, 2048, 2049, 2051, 2052, 2054], "log_softmax": [0, 1407, 1453, 1577, 1629, 1650, 1962, 1979, 2007, 2010, 2025], "log10": [0, 367, 650, 651, 1962, 1978, 2010, 2049], "log1p": [0, 369, 652, 653, 1962, 1978, 2010, 2024, 2025, 2049], "log2": [0, 371, 654, 655, 1962, 1978, 2010, 2025, 2049], "margin_ranking_loss": [0, 1962, 2010], "mse_loss": [0, 53, 1155, 1962, 2010], "multilabel_margin_loss": [0, 1962, 2010], "multi_margin_loss": [0, 1962, 2010], "nll_loss": [0, 1962, 2010], "norm": [0, 31, 49, 51, 58, 698, 699, 700, 701, 702, 703, 956, 1092, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1282, 1286, 1295, 1296, 1303, 1308, 1320, 1430, 1431, 1479, 1497, 1532, 1533, 1534, 1535, 1536, 1584, 1585, 1630, 1634, 1679, 1680, 1690, 1691, 1700, 1701, 1706, 1709, 1710, 1724, 1727, 1744, 1806, 1962, 1966, 1986, 1987, 1996, 1999, 2002, 2010], "normal": [0, 1, 22, 25, 29, 42, 46, 49, 58, 78, 332, 347, 373, 450, 552, 988, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1172, 1212, 1247, 1250, 1255, 1286, 1328, 1396, 1402, 1403, 1404, 1426, 1427, 1428, 1432, 1442, 1450, 1451, 1452, 1460, 1470, 1471, 1472, 1476, 1515, 1527, 1531, 1532, 1533, 1534, 1535, 1563, 1593, 1594, 1603, 1607, 1611, 1638, 1680, 1681, 1690, 1691, 1706, 1714, 1715, 1724, 1727, 1753, 1769, 1789, 1798, 1799, 1806, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1882, 1923, 1959, 1960, 1961, 1962, 1966, 1978, 1980, 1985, 1987, 1990, 1993, 2009, 2010, 2012, 2017, 2020, 2025, 2029, 2031, 2032, 2038, 2049, 2057], "pdist": [0, 1497, 1962, 2010], "poisson_nll_loss": [0, 1962, 2010], "pow": [0, 1, 465, 492, 904, 905, 908, 931, 1141, 1962, 1964, 1978, 1986, 1987, 2010, 2024, 2030, 2049], "prod": [0, 39, 317, 513, 1115, 1117, 1120, 1121, 1123, 1124, 1127, 1128, 1130, 1131, 1133, 1135, 1316, 1317, 1430, 1434, 1539, 1921, 1923, 1962, 1978, 2010, 2024, 2044, 2049], "reciproc": [0, 481, 659, 660, 1816, 1962, 1978, 2010, 2049], "rsqrt": [0, 507, 1962, 1978, 2010, 2049], "sinh": [0, 532, 667, 668, 878, 1962, 1978, 2010, 2024, 2049], "smooth_l1_loss": [0, 1962, 2010], "soft_margin_loss": [0, 1962, 2010], "softmax": [0, 31, 792, 1392, 1423, 1453, 1478, 1522, 1576, 1595, 1605, 1612, 1644, 1651, 1862, 1962, 1978, 1979, 1980, 1990, 2010, 2017, 2024, 2025], "softmin": [0, 1962], "softplu": [0, 31, 1487, 1624, 1962, 2010], "sum": [0, 1, 3, 12, 21, 25, 26, 29, 31, 33, 49, 54, 55, 58, 60, 67, 74, 492, 513, 562, 742, 889, 904, 905, 906, 907, 908, 909, 910, 920, 921, 929, 988, 1013, 1014, 1015, 1080, 1081, 1098, 1159, 1160, 1161, 1166, 1227, 1282, 1303, 1307, 1320, 1328, 1329, 1330, 1338, 1374, 1382, 1400, 1401, 1407, 1420, 1421, 1423, 1424, 1431, 1434, 1441, 1447, 1448, 1453, 1454, 1455, 1456, 1457, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1521, 1523, 1536, 1537, 1539, 1565, 1566, 1576, 1577, 1585, 1590, 1595, 1605, 1614, 1615, 1616, 1629, 1637, 1650, 1651, 1675, 1706, 1711, 1712, 1730, 1761, 1807, 1829, 1844, 1863, 1865, 1906, 1908, 1923, 1960, 1962, 1964, 1968, 1975, 1978, 1986, 1987, 1990, 1991, 1992, 1993, 1999, 2002, 2009, 2010, 2020, 2021, 2024, 2025, 2030, 2039, 2040, 2041, 2044, 2047, 2049, 2052, 2054, 2056], "renorm": [0, 488, 1430, 1431, 1584, 1585, 1962, 2010], "tan": [0, 571, 671, 672, 879, 1962, 1978, 2010, 2024, 2029, 2049], "triplet_margin_loss": [0, 1962, 2010], "take": [0, 1, 2, 3, 4, 5, 7, 9, 14, 21, 22, 25, 27, 29, 31, 33, 41, 42, 43, 44, 46, 49, 51, 52, 54, 55, 57, 58, 60, 68, 69, 83, 756, 789, 794, 810, 816, 822, 858, 904, 905, 906, 907, 908, 909, 915, 916, 924, 998, 1035, 1086, 1088, 1089, 1114, 1116, 1119, 1122, 1126, 1127, 1129, 1132, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1179, 1283, 1305, 1308, 1392, 1401, 1431, 1435, 1436, 1439, 1458, 1482, 1483, 1484, 1485, 1486, 1488, 1496, 1503, 1531, 1541, 1542, 1588, 1589, 1606, 1631, 1644, 1675, 1728, 1753, 1757, 1782, 1910, 1924, 1935, 1959, 1961, 1962, 1964, 1971, 1972, 1973, 1977, 1978, 1979, 1980, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1997, 1999, 2003, 2004, 2005, 2009, 2010, 2012, 2014, 2015, 2020, 2021, 2022, 2024, 2027, 2028, 2029, 2033, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2052, 2053], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 31, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 57, 58, 84, 146, 256, 309, 311, 317, 331, 482, 484, 509, 511, 513, 542, 556, 603, 606, 613, 676, 682, 683, 688, 690, 694, 695, 731, 756, 787, 789, 790, 810, 836, 850, 854, 857, 870, 873, 885, 886, 887, 889, 891, 893, 896, 897, 898, 899, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 924, 928, 929, 930, 934, 935, 938, 947, 949, 954, 955, 959, 962, 963, 967, 968, 970, 976, 980, 987, 997, 1001, 1002, 1004, 1005, 1013, 1014, 1023, 1031, 1035, 1041, 1045, 1046, 1054, 1055, 1062, 1063, 1065, 1066, 1070, 1072, 1074, 1115, 1116, 1117, 1118, 1121, 1124, 1125, 1128, 1131, 1133, 1135, 1150, 1152, 1155, 1156, 1162, 1163, 1165, 1166, 1172, 1178, 1192, 1213, 1216, 1246, 1247, 1250, 1258, 1261, 1262, 1265, 1266, 1286, 1313, 1322, 1338, 1340, 1348, 1350, 1353, 1361, 1362, 1371, 1379, 1380, 1381, 1382, 1392, 1399, 1401, 1405, 1407, 1409, 1410, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1430, 1431, 1434, 1439, 1440, 1441, 1442, 1447, 1453, 1454, 1458, 1459, 1475, 1479, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1503, 1505, 1509, 1510, 1511, 1512, 1513, 1514, 1527, 1531, 1533, 1535, 1536, 1539, 1544, 1545, 1551, 1558, 1564, 1566, 1584, 1585, 1590, 1595, 1614, 1615, 1616, 1644, 1650, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1689, 1695, 1702, 1706, 1716, 1720, 1728, 1729, 1730, 1731, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1761, 1764, 1765, 1768, 1769, 1770, 1771, 1783, 1829, 1861, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1879, 1880, 1881, 1882, 1885, 1902, 1904, 1911, 1912, 1913, 1914, 1917, 1919, 1920, 1921, 1926, 1930, 1931, 1933, 1937, 1940, 1941, 1956, 1959, 1961, 1962, 1963, 1964, 1968, 1970, 1971, 1972, 1973, 1975, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1997, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2010, 2012, 2013, 2014, 2015, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2029, 2031, 2032, 2033, 2034, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2050, 2051, 2052, 2053, 2054, 2055, 2056], "addcdiv": [0, 98, 1962, 2010], "addcmul": [0, 100, 1962, 2010], "atan2": [0, 142, 867, 1962, 1978, 2010, 2049], "bilinear": [0, 775, 781, 782, 1098, 1540, 1541, 1593, 1604, 1663, 1664, 1923, 1962, 2010], "cross": [0, 7, 8, 25, 27, 31, 33, 1400, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1565, 1566, 1576, 1962, 1990, 2005, 2010, 2047], "dot": [0, 2, 14, 54, 55, 613, 905, 907, 908, 909, 1077, 1078, 1079, 1080, 1157, 1167, 1227, 1271, 1318, 1319, 1345, 1400, 1401, 1423, 1434, 1447, 1454, 1479, 1494, 1495, 1537, 1546, 1551, 1644, 1882, 1932, 1933, 1934, 1935, 1962, 1978, 1996, 2010, 2012], "grid_sampl": [0, 1558, 1923, 1962, 2010], "index_put": [0, 1923, 1962, 2010, 2049], "scatter_add": [0, 1962, 2010, 2049], "tensordot": [0, 1227, 1316, 1317, 1966, 1990, 2010], "binari": [0, 2, 14, 15, 22, 31, 33, 35, 40, 42, 58, 150, 731, 938, 1344, 1400, 1401, 1494, 1565, 1566, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1737, 1960, 1965, 1978, 1979, 1998, 2007, 2009, 2012, 2029, 2036], "add": [0, 1, 3, 7, 12, 15, 17, 21, 25, 27, 29, 39, 42, 46, 47, 49, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 72, 78, 82, 94, 286, 309, 509, 511, 682, 683, 684, 687, 743, 744, 753, 786, 789, 834, 855, 857, 858, 924, 931, 1014, 1044, 1055, 1098, 1156, 1168, 1171, 1177, 1250, 1262, 1392, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1464, 1465, 1466, 1467, 1468, 1469, 1488, 1490, 1494, 1495, 1499, 1502, 1595, 1637, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1829, 1878, 1959, 1961, 1962, 1963, 1964, 1968, 1973, 1975, 1978, 1980, 1986, 1988, 1989, 1991, 1992, 1993, 1997, 1998, 1999, 2001, 2006, 2007, 2009, 2010, 2012, 2014, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2024, 2027, 2028, 2029, 2033, 2034, 2039, 2040, 2041, 2042, 2044, 2045, 2048, 2049, 2052, 2053, 2054, 2055, 2056], "nativ": [0, 11, 22, 49, 58, 1024, 1156, 1261, 1680, 1681, 1829, 1961, 1964, 1977, 1990, 2004, 2006, 2011, 2012, 2020, 2044], "without": [0, 1, 3, 5, 7, 8, 9, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 35, 42, 46, 49, 50, 55, 57, 58, 59, 60, 61, 250, 482, 484, 613, 965, 968, 1002, 1004, 1039, 1119, 1120, 1121, 1129, 1130, 1131, 1172, 1179, 1191, 1247, 1248, 1250, 1251, 1297, 1298, 1313, 1320, 1374, 1402, 1403, 1404, 1427, 1431, 1450, 1451, 1452, 1485, 1488, 1496, 1527, 1535, 1585, 1666, 1675, 1707, 1723, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1761, 1792, 1808, 1825, 1826, 1917, 1959, 1963, 1964, 1968, 1971, 1972, 1973, 1975, 1977, 1979, 1986, 1987, 1988, 1990, 1991, 1992, 1996, 1997, 1999, 2001, 2003, 2004, 2007, 2009, 2012, 2013, 2015, 2019, 2020, 2024, 2026, 2029, 2034, 2039, 2041, 2042, 2043, 2044, 2054, 2057], "intervent": [0, 8, 2020], "mixtur": [0, 31, 1423, 1576], "bceloss": [0, 1401, 1565], "aren": [0, 8, 54, 58, 77, 1156, 1172, 1978, 1987, 1995, 2021, 2055], "mean": [0, 2, 3, 5, 7, 8, 12, 15, 18, 21, 22, 25, 27, 29, 31, 42, 44, 46, 47, 49, 50, 52, 55, 57, 58, 250, 254, 317, 331, 373, 450, 484, 491, 513, 754, 756, 777, 790, 792, 857, 858, 924, 936, 949, 980, 988, 1155, 1157, 1179, 1261, 1351, 1369, 1374, 1379, 1383, 1384, 1390, 1391, 1392, 1394, 1395, 1396, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1421, 1423, 1425, 1429, 1431, 1432, 1433, 1437, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1458, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1474, 1475, 1477, 1478, 1479, 1480, 1487, 1491, 1492, 1493, 1495, 1496, 1502, 1503, 1506, 1507, 1508, 1515, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1536, 1537, 1538, 1564, 1565, 1566, 1574, 1576, 1577, 1585, 1586, 1590, 1601, 1602, 1605, 1606, 1610, 1617, 1625, 1626, 1627, 1628, 1629, 1637, 1648, 1649, 1660, 1661, 1675, 1685, 1687, 1731, 1756, 1789, 1798, 1799, 1829, 1842, 1863, 1880, 1881, 1887, 1923, 1930, 1931, 1959, 1961, 1962, 1963, 1975, 1976, 1977, 1978, 1979, 1980, 1985, 1986, 1987, 1990, 1991, 1992, 1994, 1995, 1996, 1999, 2005, 2009, 2010, 2011, 2012, 2014, 2015, 2016, 2017, 2020, 2021, 2022, 2024, 2042, 2043, 2044, 2047, 2048, 2049, 2050, 2051], "doesn": [0, 1, 2, 5, 7, 8, 11, 12, 21, 25, 27, 47, 52, 54, 57, 58, 80, 819, 822, 876, 896, 897, 901, 910, 922, 980, 1002, 1023, 1156, 1167, 1171, 1172, 1179, 1182, 1190, 1258, 1264, 1290, 1314, 1322, 1331, 1415, 1416, 1417, 1424, 1453, 1521, 1568, 1569, 1570, 1605, 1650, 1675, 1676, 1706, 1745, 1825, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1859, 1863, 1935, 1961, 1964, 1965, 1978, 1980, 1987, 1988, 1990, 1992, 1993, 1998, 2001, 2005, 2011, 2013, 2021, 2024, 2043, 2049, 2054], "help": [0, 1, 4, 7, 8, 11, 14, 21, 22, 25, 27, 39, 42, 49, 54, 58, 915, 916, 928, 1023, 1055, 1156, 1157, 1167, 1171, 1172, 1250, 1251, 1270, 1352, 1365, 1366, 1426, 1427, 1428, 1432, 1488, 1689, 1740, 1835, 1935, 1959, 1964, 1971, 1972, 1978, 1979, 1986, 1987, 1988, 1990, 1991, 1993, 1997, 1999, 2002, 2007, 2009, 2012, 2020, 2021, 2024, 2032, 2043, 2046, 2047, 2048, 2052, 2054], "revers": [0, 31, 55, 58, 509, 730, 789, 904, 906, 1116, 1118, 1138, 1159, 1161, 1166, 1318, 1458, 1501, 1636, 1675, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1713, 1910, 1929, 1962, 1963, 1964, 1987, 1991, 1993, 2010, 2030], "therefor": [0, 3, 5, 21, 22, 25, 31, 32, 40, 49, 52, 60, 65, 66, 82, 444, 540, 910, 937, 946, 970, 1044, 1132, 1149, 1152, 1155, 1208, 1209, 1263, 1266, 1296, 1309, 1430, 1431, 1539, 1584, 1585, 1593, 1725, 1761, 1964, 1986, 1987, 1990, 1992, 1994, 1995, 1998, 2009, 2022, 2024, 2041, 2045, 2047], "rais": [0, 1, 5, 7, 14, 25, 27, 29, 31, 33, 35, 42, 46, 49, 54, 57, 58, 60, 84, 309, 311, 317, 693, 890, 896, 899, 901, 904, 905, 906, 907, 908, 909, 910, 914, 915, 916, 923, 933, 935, 949, 958, 968, 1003, 1068, 1141, 1146, 1185, 1248, 1250, 1255, 1258, 1266, 1268, 1280, 1282, 1290, 1291, 1294, 1298, 1299, 1304, 1311, 1312, 1316, 1317, 1322, 1343, 1369, 1488, 1644, 1669, 1695, 1696, 1701, 1703, 1706, 1716, 1736, 1737, 1823, 1871, 1923, 1959, 1965, 1971, 1977, 1987, 1990, 1992, 1994, 2002, 2007, 2009, 2012, 2013, 2019, 2020, 2031, 2042, 2043, 2044, 2047, 2053, 2054, 2055], "mani": [0, 3, 7, 11, 14, 21, 22, 25, 31, 42, 49, 53, 54, 58, 84, 398, 676, 885, 887, 901, 902, 904, 906, 1098, 1179, 1263, 1407, 1756, 1854, 1904, 1911, 1912, 1913, 1914, 1961, 1963, 1972, 1978, 1985, 1987, 1988, 1989, 1990, 1992, 1993, 1998, 1999, 2002, 2006, 2009, 2011, 2015, 2022, 2024, 2027, 2029, 2030, 2032, 2040, 2042, 2043, 2044, 2046, 2047, 2048, 2050, 2053, 2054, 2056], "sigmoid": [0, 31, 58, 523, 663, 664, 756, 791, 1400, 1401, 1430, 1439, 1440, 1458, 1459, 1517, 1565, 1592, 1647, 1962, 1978, 1979, 1985, 2007, 2010, 2017, 2025, 2036, 2049], "right": [0, 2, 7, 9, 12, 25, 27, 31, 49, 58, 816, 861, 937, 944, 946, 947, 952, 957, 961, 980, 1092, 1098, 1139, 1142, 1143, 1147, 1204, 1208, 1209, 1213, 1217, 1247, 1270, 1295, 1300, 1311, 1313, 1314, 1322, 1328, 1329, 1374, 1392, 1397, 1398, 1399, 1400, 1401, 1415, 1416, 1417, 1434, 1441, 1454, 1455, 1456, 1457, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1491, 1492, 1493, 1497, 1498, 1504, 1536, 1539, 1540, 1541, 1542, 1547, 1548, 1549, 1593, 1613, 1632, 1681, 1695, 1745, 1759, 1760, 1801, 1821, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1882, 1903, 1908, 1910, 1926, 1929, 1959, 1962, 1964, 1977, 1978, 1979, 1987, 1992, 1996, 2007, 2009, 2011, 2018, 2022, 2025, 2041, 2043, 2052], "entropi": [0, 31, 1400, 1423, 1492, 1565, 1566, 1576, 2025], "combin": [0, 3, 21, 22, 25, 27, 42, 55, 57, 613, 685, 708, 709, 710, 711, 712, 713, 714, 715, 789, 850, 886, 901, 1055, 1127, 1128, 1133, 1135, 1182, 1213, 1345, 1355, 1401, 1434, 1448, 1494, 1535, 1539, 1587, 1610, 1702, 1961, 1962, 1963, 1986, 1990, 1993, 2009, 2010, 2011, 2013, 2015, 2018, 2020, 2040, 2047], "two": [0, 1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 18, 21, 22, 25, 26, 27, 29, 31, 33, 39, 40, 42, 43, 46, 47, 49, 53, 54, 58, 80, 81, 579, 580, 581, 583, 584, 603, 613, 676, 688, 690, 756, 789, 883, 886, 901, 902, 906, 915, 956, 958, 1008, 1047, 1049, 1077, 1078, 1086, 1095, 1098, 1104, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1144, 1145, 1155, 1165, 1170, 1171, 1180, 1212, 1214, 1239, 1248, 1250, 1261, 1264, 1271, 1274, 1276, 1281, 1283, 1286, 1287, 1292, 1293, 1298, 1303, 1306, 1307, 1309, 1310, 1312, 1314, 1319, 1322, 1345, 1348, 1351, 1353, 1356, 1381, 1398, 1400, 1401, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1434, 1439, 1447, 1448, 1454, 1456, 1458, 1479, 1480, 1482, 1488, 1491, 1492, 1493, 1495, 1496, 1502, 1503, 1519, 1520, 1535, 1536, 1537, 1539, 1547, 1548, 1565, 1566, 1576, 1595, 1605, 1612, 1629, 1637, 1644, 1689, 1691, 1695, 1717, 1727, 1729, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1760, 1761, 1763, 1767, 1786, 1801, 1814, 1829, 1866, 1871, 1886, 1903, 1907, 1908, 1910, 1919, 1928, 1932, 1936, 1959, 1961, 1963, 1964, 1968, 1970, 1971, 1972, 1978, 1979, 1980, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1999, 2004, 2005, 2006, 2009, 2011, 2012, 2013, 2015, 2016, 2020, 2021, 2022, 2024, 2025, 2029, 2030, 2031, 2033, 2034, 2039, 2040, 2042, 2043, 2049, 2052, 2054], "bcewithlogitsloss": [0, 1566], "bcewithlogit": 0, "safe": [0, 25, 42, 46, 57, 58, 81, 83, 482, 1045, 1046, 1065, 1066, 1182, 1675, 1739, 1742, 1743, 1744, 1746, 1752, 1961, 1964, 1986, 1987, 1990, 1993, 1995, 1998, 2020, 2026, 2035, 2039, 2044, 2045, 2047, 2054], "_convolut": [0, 2010], "avg_pool3d": [0, 1962, 2010, 2017, 2049], "grid_sampler_2d": [0, 1962, 2010, 2049], "_grid_sampler_2d_cpu_fallback": [0, 2010], "grid_sampler_3d": [0, 1962, 2010], "polar": [0, 31, 1310, 1962, 2010], "quantil": [0, 1351, 1381, 1962, 2010, 2025], "nanquantil": [0, 1962, 2010], "stft": [0, 937, 946, 1208, 1209, 1247, 1270, 1962, 2010], "view_as_complex": [0, 11, 1962, 2010], "choleski": [0, 2, 31, 960, 961, 1281, 1287, 1323, 1962, 2010], "cholesky_invers": [0, 2, 1962, 2010], "cholesky_solv": [0, 2, 1962, 2010], "invers": [0, 31, 679, 680, 878, 881, 955, 960, 961, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1247, 1291, 1292, 1304, 1308, 1311, 1316, 1317, 1418, 1419, 1420, 1430, 1431, 1434, 1484, 1485, 1486, 1539, 1584, 1585, 1621, 1622, 1623, 1692, 1695, 1719, 1761, 1767, 1918, 1960, 1962, 1964, 2002, 2010, 2025], "lu_solv": [0, 2, 1298, 1962, 2010], "orgqr": [0, 1962, 2010], "ormqr": [0, 1195, 1290, 1962, 2010], "pinvers": [0, 1296, 1962, 2010], "max_pool3d": [0, 1962, 2010, 2017], "max_unpool2d": [0, 1588, 1619, 1962, 2010], "max_unpool3d": [0, 1589, 1620, 1962, 2010], "adaptive_avg_pool3d": [0, 1962, 1992, 2010, 2017], "reflection_pad1d": [0, 1962, 2010, 2049], "reflection_pad2d": [0, 1962, 2010, 2049], "replication_pad1d": [0, 1962, 2010], "replication_pad2d": [0, 1962, 2010, 2049], "replication_pad3d": [0, 1962, 2010, 2049], "ctc_loss": [0, 1407, 1962, 2010], "fft_fft": [0, 1962, 2010], "fft_ifft": [0, 1962, 2010], "fft_fft2": [0, 1962, 2010], "fft_ifft2": [0, 1962, 2010], "fft_fftn": [0, 1962, 2010], "fft_ifftn": [0, 1962, 2010], "fft_rfft": [0, 1962, 2010], "fft_irfft": [0, 1962, 2010], "fft_rfft2": [0, 1962, 2010], "fft_irfft2": [0, 1962, 2010], "fft_rfftn": [0, 1962, 2010], "fft_irfftn": [0, 1962, 2010], "fft_hfft": [0, 1962, 2010], "fft_ihfft": [0, 1962, 2010], "linalg_matrix_norm": [0, 1962, 2010], "linalg_cond": [0, 1962, 2010], "linalg_matrix_rank": [0, 1962, 2010], "linalg_solv": [0, 1962, 2010], "linalg_choleski": [0, 1962, 2010], "linalg_svdv": [0, 1962, 2010], "linalg_eigv": [0, 1962, 2010], "linalg_eigvalsh": [0, 1962, 2010], "linalg_inv": [0, 1962, 2010], "linalg_householder_product": [0, 1962, 2010], "linalg_tensorinv": [0, 1962, 2010], "linalg_tensorsolv": [0, 1962, 2010], "fake_quantize_per_tensor_affin": [0, 1962, 2010], "eig": [0, 1287, 1288, 1314, 2002], "geqrf": [0, 1290, 1773, 1962, 2010], "lstsq": [0, 1195, 1282, 1308], "_lu_with_info": [0, 2010], "qr": [0, 2, 1195, 1286, 1287, 1290, 1296, 1314, 1689, 1773, 1962, 2010], "solv": [0, 7, 11, 1168, 1195, 1204, 1282, 1291, 1293, 1294, 1297, 1298, 1300, 1304, 1312, 1313, 1317, 1323, 1341, 1910, 1987, 1996, 2002, 2005, 2035, 2044], "svd": [0, 2, 11, 1286, 1287, 1296, 1308, 1315, 1331, 1695, 1775, 1887, 1962, 2002, 2010, 2024, 2049], "symeig": 0, "triangular_solv": [0, 1962, 2010], "fractional_max_pool2d": [0, 1962, 2010], "fractional_max_pool3d": [0, 1962, 2010], "adaptive_max_pool3d": [0, 1962, 2010], "multilabel_margin_loss_forward": [0, 2010], "linalg_qr": [0, 1962, 2010], "linalg_cholesky_ex": [0, 1962, 2010], "linalg_svd": [0, 1962, 2010], "linalg_eig": [0, 1962, 2010], "linalg_eigh": [0, 1962, 2010], "linalg_lstsq": [0, 1962, 2010], "linalg_inv_ex": [0, 1962, 2010], "cat": [0, 25, 31, 58, 540, 743, 744, 753, 789, 792, 978, 979, 1352, 1507, 1867, 1879, 1961, 1962, 1978, 2009, 2010, 2012, 2015, 2017, 2024, 2033, 2042, 2049], "stack": [0, 8, 18, 21, 22, 25, 31, 35, 42, 46, 47, 53, 54, 58, 756, 928, 955, 966, 1059, 1060, 1097, 1165, 1167, 1172, 1216, 1352, 1407, 1439, 1458, 1459, 1503, 1532, 1534, 1720, 1925, 1935, 1937, 1960, 1962, 1968, 1980, 1990, 1991, 1994, 2010, 2012, 2014, 2017, 2024, 2041, 2043, 2044, 2047, 2054, 2056], "index_copi": [0, 1923, 1962, 2010], "implement": [1, 2, 5, 8, 12, 16, 17, 21, 22, 25, 26, 27, 29, 31, 34, 39, 40, 43, 46, 49, 54, 58, 59, 76, 80, 146, 411, 509, 511, 513, 683, 734, 735, 736, 737, 738, 739, 756, 775, 777, 781, 789, 796, 815, 816, 817, 820, 821, 822, 874, 876, 889, 905, 915, 916, 980, 986, 1098, 1141, 1146, 1152, 1159, 1160, 1162, 1163, 1250, 1256, 1258, 1260, 1261, 1264, 1306, 1309, 1322, 1323, 1351, 1392, 1407, 1424, 1439, 1442, 1455, 1456, 1457, 1460, 1488, 1494, 1500, 1503, 1504, 1507, 1524, 1533, 1535, 1593, 1598, 1632, 1644, 1652, 1675, 1680, 1681, 1689, 1690, 1695, 1706, 1719, 1723, 1724, 1727, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1759, 1761, 1767, 1785, 1792, 1805, 1814, 1817, 1841, 1853, 1863, 1886, 1887, 1903, 1919, 1923, 1924, 1926, 1963, 1964, 1965, 1968, 1971, 1972, 1977, 1980, 1981, 1985, 1986, 1987, 1989, 1990, 1992, 1993, 1994, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2007, 2011, 2012, 2013, 2015, 2020, 2021, 2024, 2025, 2028, 2030, 2039, 2042, 2044, 2047, 2050, 2055], "arbitrari": [1, 3, 25, 29, 46, 60, 63, 68, 250, 886, 901, 1081, 1172, 1314, 1322, 1424, 1430, 1454, 1479, 1539, 1565, 1566, 1584, 1605, 1632, 1716, 1886, 1908, 1921, 1964, 1970, 1972, 1987, 1993, 1998, 1999, 2011, 2013, 2015, 2024, 2032, 2044, 2050, 2054, 2055], "scalar": [1, 12, 25, 31, 47, 60, 69, 93, 146, 150, 256, 309, 442, 585, 683, 684, 734, 735, 736, 737, 738, 739, 875, 876, 889, 904, 905, 908, 910, 941, 944, 952, 984, 988, 1093, 1098, 1113, 1146, 1153, 1204, 1211, 1227, 1241, 1275, 1276, 1345, 1352, 1381, 1392, 1400, 1401, 1407, 1421, 1423, 1424, 1441, 1447, 1448, 1453, 1454, 1460, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1536, 1537, 1595, 1638, 1729, 1734, 1735, 1736, 1769, 1782, 1784, 1786, 1804, 1805, 1821, 1869, 1870, 1871, 1872, 1873, 1901, 1919, 1920, 1938, 1957, 1958, 1962, 1963, 1964, 1975, 1980, 1985, 1987, 1992, 1996, 2009, 2020, 2024, 2027, 2029, 2031, 2043, 2044, 2049, 2053], "It": [1, 2, 3, 4, 5, 7, 8, 12, 17, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 39, 40, 41, 42, 43, 44, 46, 47, 49, 51, 53, 54, 55, 57, 58, 60, 80, 146, 192, 411, 469, 470, 509, 511, 513, 540, 553, 885, 886, 887, 888, 889, 896, 897, 901, 902, 912, 913, 922, 931, 968, 970, 974, 976, 980, 981, 982, 1015, 1020, 1026, 1027, 1045, 1046, 1065, 1066, 1074, 1121, 1151, 1156, 1159, 1167, 1169, 1172, 1173, 1182, 1192, 1212, 1247, 1250, 1251, 1256, 1257, 1261, 1283, 1287, 1291, 1294, 1296, 1298, 1299, 1304, 1308, 1309, 1311, 1312, 1314, 1316, 1319, 1320, 1322, 1323, 1331, 1392, 1401, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1434, 1482, 1483, 1484, 1485, 1486, 1488, 1495, 1516, 1519, 1539, 1541, 1595, 1605, 1650, 1668, 1669, 1670, 1673, 1674, 1675, 1690, 1692, 1695, 1716, 1719, 1720, 1728, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1773, 1792, 1805, 1821, 1836, 1843, 1865, 1918, 1935, 1944, 1947, 1948, 1956, 1959, 1963, 1964, 1968, 1975, 1977, 1979, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2015, 2020, 2021, 2022, 2024, 2025, 2026, 2028, 2032, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2047, 2048, 2053, 2054, 2056], "minim": [1, 7, 8, 815, 871, 1353, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1753, 1754, 1755, 1756, 1769, 1959, 1975, 1986, 1990, 1999, 2001, 2004, 2009, 2013, 2015, 2044, 2054], "exist": [1, 7, 8, 9, 11, 14, 21, 25, 26, 27, 31, 33, 35, 40, 42, 43, 47, 49, 53, 56, 58, 60, 78, 79, 250, 495, 788, 850, 874, 904, 905, 906, 907, 908, 909, 910, 915, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1039, 1171, 1181, 1182, 1250, 1254, 1266, 1286, 1291, 1297, 1298, 1323, 1381, 1488, 1489, 1498, 1547, 1861, 1879, 1926, 1959, 1961, 1968, 1971, 1977, 1978, 1980, 1981, 1987, 1988, 1990, 1992, 1993, 1995, 1997, 1998, 1999, 2000, 2002, 2004, 2009, 2012, 2013, 2014, 2015, 2020, 2022, 2024, 2028, 2030, 2039, 2040, 2043, 2045, 2049, 2052, 2056], "code": [1, 3, 4, 8, 9, 11, 14, 15, 16, 21, 22, 25, 31, 33, 43, 44, 46, 47, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 115, 676, 911, 931, 968, 970, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1041, 1042, 1055, 1156, 1172, 1250, 1254, 1255, 1261, 1262, 1263, 1266, 1267, 1268, 1281, 1292, 1294, 1322, 1504, 1516, 1548, 1549, 1550, 1675, 1832, 1959, 1960, 1963, 1964, 1970, 1972, 1979, 1987, 1988, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2003, 2004, 2005, 2007, 2009, 2011, 2019, 2020, 2021, 2022, 2024, 2027, 2028, 2035, 2036, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2052, 2053, 2054, 2055, 2056], "need": [1, 3, 5, 6, 7, 8, 9, 14, 15, 21, 22, 25, 26, 27, 29, 30, 31, 34, 35, 40, 42, 43, 45, 46, 47, 49, 51, 52, 54, 58, 59, 60, 70, 71, 81, 82, 146, 250, 467, 484, 491, 495, 579, 676, 730, 731, 815, 816, 817, 820, 821, 822, 837, 854, 885, 889, 896, 897, 898, 901, 902, 910, 922, 949, 950, 958, 1035, 1044, 1051, 1086, 1088, 1098, 1119, 1121, 1141, 1150, 1155, 1172, 1250, 1344, 1374, 1423, 1430, 1484, 1485, 1486, 1488, 1494, 1531, 1533, 1535, 1568, 1569, 1570, 1662, 1675, 1682, 1683, 1695, 1697, 1701, 1703, 1731, 1756, 1802, 1807, 1821, 1879, 1908, 1924, 1926, 1960, 1961, 1963, 1964, 1968, 1971, 1972, 1973, 1977, 1979, 1980, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 2001, 2002, 2003, 2004, 2005, 2007, 2009, 2011, 2012, 2013, 2015, 2018, 2020, 2021, 2022, 2024, 2026, 2027, 2030, 2031, 2034, 2035, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2050, 2052, 2054, 2055], "declar": [1, 9, 14, 21, 43, 1179, 1963, 1964, 1965, 1992, 2009, 2012, 2013], "requires_grad": [1, 5, 27, 31, 49, 55, 331, 441, 442, 443, 444, 445, 483, 484, 492, 861, 876, 896, 897, 899, 900, 901, 902, 911, 912, 915, 916, 918, 920, 921, 931, 937, 946, 1044, 1099, 1100, 1101, 1102, 1111, 1116, 1134, 1152, 1153, 1154, 1157, 1167, 1208, 1209, 1250, 1270, 1321, 1337, 1400, 1401, 1421, 1423, 1430, 1431, 1441, 1453, 1454, 1479, 1480, 1488, 1494, 1495, 1502, 1535, 1536, 1565, 1566, 1576, 1629, 1675, 1676, 1677, 1678, 1723, 1728, 1734, 1735, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1863, 1868, 1869, 1870, 1871, 1872, 1873, 1901, 1923, 1935, 1957, 1958, 1962, 1966, 1978, 1979, 1980, 1990, 1992, 1993, 1999, 2004, 2009, 2010, 2020, 2021, 2030, 2031, 2032, 2041, 2043, 2044, 2049, 2052], "keyword": [1, 5, 21, 25, 26, 29, 30, 46, 47, 54, 58, 60, 66, 80, 84, 309, 317, 441, 442, 443, 444, 445, 577, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 857, 861, 876, 877, 878, 879, 880, 881, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 948, 952, 955, 957, 959, 960, 961, 963, 965, 966, 977, 982, 983, 985, 986, 988, 998, 1011, 1013, 1015, 1041, 1042, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1090, 1093, 1095, 1097, 1099, 1100, 1101, 1103, 1108, 1111, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1150, 1152, 1153, 1154, 1155, 1192, 1193, 1194, 1195, 1204, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1225, 1227, 1244, 1245, 1250, 1253, 1266, 1267, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1344, 1345, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1388, 1424, 1446, 1449, 1488, 1644, 1669, 1670, 1675, 1695, 1697, 1702, 1706, 1725, 1729, 1731, 1734, 1735, 1773, 1774, 1778, 1779, 1782, 1783, 1785, 1786, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1805, 1806, 1807, 1814, 1816, 1821, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1858, 1861, 1864, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1898, 1899, 1900, 1901, 1905, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1923, 1930, 1931, 1932, 1937, 1938, 1957, 1958, 1959, 1964, 1965, 1979, 1980, 1992, 2002, 2007, 2009, 2011, 2020, 2024, 2025, 2029, 2044, 2055], "type": [1, 2, 3, 5, 12, 14, 15, 17, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 40, 42, 43, 44, 46, 49, 54, 56, 57, 58, 60, 62, 65, 66, 69, 70, 71, 76, 77, 81, 83, 84, 146, 187, 192, 204, 322, 325, 329, 337, 441, 442, 443, 444, 445, 477, 555, 600, 676, 681, 682, 683, 684, 685, 686, 730, 731, 734, 735, 736, 745, 747, 748, 749, 750, 752, 760, 762, 763, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 780, 788, 789, 790, 793, 811, 812, 813, 815, 816, 817, 818, 819, 821, 823, 836, 850, 851, 852, 853, 854, 855, 856, 857, 858, 861, 869, 875, 885, 886, 887, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 920, 921, 924, 936, 937, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 954, 955, 956, 958, 967, 968, 969, 975, 980, 991, 992, 993, 994, 996, 1008, 1010, 1017, 1018, 1019, 1021, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1036, 1038, 1041, 1042, 1043, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1061, 1073, 1075, 1076, 1079, 1080, 1093, 1098, 1099, 1100, 1101, 1111, 1112, 1113, 1116, 1134, 1141, 1143, 1144, 1145, 1146, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1163, 1164, 1165, 1167, 1168, 1172, 1178, 1183, 1184, 1185, 1186, 1187, 1190, 1193, 1197, 1199, 1200, 1203, 1208, 1209, 1211, 1212, 1213, 1226, 1229, 1231, 1232, 1235, 1238, 1246, 1247, 1248, 1250, 1251, 1253, 1256, 1257, 1260, 1262, 1264, 1266, 1267, 1269, 1270, 1273, 1282, 1286, 1303, 1307, 1314, 1320, 1321, 1322, 1323, 1337, 1340, 1343, 1350, 1352, 1359, 1360, 1363, 1373, 1379, 1382, 1392, 1396, 1415, 1416, 1417, 1424, 1431, 1478, 1488, 1489, 1490, 1494, 1498, 1499, 1516, 1521, 1522, 1523, 1531, 1532, 1533, 1534, 1535, 1548, 1549, 1550, 1553, 1554, 1558, 1559, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1590, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1611, 1612, 1614, 1615, 1616, 1617, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1637, 1639, 1640, 1642, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1657, 1659, 1660, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1727, 1729, 1730, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1775, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1805, 1807, 1811, 1814, 1821, 1822, 1825, 1826, 1827, 1829, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1862, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1882, 1883, 1885, 1886, 1887, 1901, 1910, 1912, 1914, 1919, 1920, 1921, 1923, 1924, 1925, 1929, 1935, 1938, 1942, 1943, 1945, 1947, 1948, 1949, 1951, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1965, 1968, 1972, 1973, 1974, 1975, 1978, 1980, 1985, 1986, 1987, 1989, 1990, 1996, 1997, 1998, 1999, 2002, 2004, 2005, 2007, 2008, 2010, 2013, 2014, 2015, 2017, 2018, 2019, 2020, 2024, 2025, 2026, 2027, 2029, 2031, 2032, 2033, 2034, 2040, 2041, 2042, 2044, 2047, 2049, 2053, 2055], "doubl": [1, 3, 31, 33, 47, 477, 483, 613, 745, 747, 748, 749, 750, 752, 762, 763, 777, 896, 897, 899, 901, 902, 907, 915, 916, 924, 953, 960, 961, 977, 998, 1044, 1113, 1141, 1204, 1250, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1331, 1332, 1333, 1334, 1335, 1341, 1431, 1488, 1553, 1556, 1585, 1666, 1736, 1773, 1779, 1868, 1869, 1870, 1872, 1873, 1886, 1901, 1910, 1938, 1964, 1978, 1990, 1992, 1993, 1995, 2002, 2009, 2012, 2026, 2027, 2030], "bfloat16": [1, 22, 49, 1232, 1250, 1302, 1319, 1488, 1736, 1742, 1743, 1755, 1829, 1978, 1990, 2024, 2026, 2027, 2030, 2031, 2057], "cfloat": [1, 11, 25, 307, 479, 613, 960, 961, 998, 1221, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1341, 1773, 1803, 1886, 1910, 1934, 2027, 2030], "cdoubl": [1, 11, 960, 961, 998, 1250, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1341, 1488, 1773, 1886, 1910, 2027, 2030], "beta": [1, 2, 11, 50, 57, 95, 96, 101, 102, 103, 104, 105, 106, 147, 148, 317, 513, 550, 682, 685, 686, 687, 936, 999, 1033, 1034, 1041, 1042, 1044, 1208, 1270, 1345, 1355, 1402, 1403, 1404, 1442, 1448, 1450, 1451, 1452, 1460, 1476, 1519, 1524, 1527, 1546, 1551, 1602, 1610, 1611, 1644, 1648, 1652, 1742, 1743, 1744, 1746, 1752, 1756, 1789, 1846, 1848, 1859, 1864, 1878, 1960, 1962, 1970, 1973, 1990, 2006, 2007, 2008, 2009, 2015, 2020, 2024, 2027, 2032, 2049], "even": [1, 2, 8, 21, 22, 25, 33, 49, 57, 58, 83, 482, 540, 576, 676, 811, 812, 813, 889, 988, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1129, 1130, 1131, 1134, 1166, 1171, 1175, 1179, 1181, 1182, 1190, 1235, 1263, 1280, 1282, 1286, 1287, 1288, 1289, 1303, 1307, 1309, 1310, 1314, 1315, 1320, 1345, 1351, 1424, 1527, 1568, 1569, 1570, 1632, 1675, 1682, 1683, 1689, 1728, 1730, 1767, 1814, 1825, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1886, 1933, 1961, 1964, 1965, 1975, 1980, 1986, 1987, 1990, 1992, 1994, 1995, 1997, 1999, 2001, 2002, 2003, 2004, 2011, 2012, 2013, 2022, 2026, 2027, 2039, 2042, 2043, 2044, 2046, 2047, 2056], "though": [1, 25, 58, 60, 63, 146, 482, 790, 886, 889, 901, 906, 1114, 1115, 1117, 1172, 1175, 1179, 1181, 1182, 1248, 1251, 1345, 1730, 1961, 1965, 1979, 1980, 1987, 1990, 1992, 1993, 1995, 2001, 2002, 2011, 2015, 2026, 2043, 2056], "signatur": [1, 12, 21, 35, 46, 47, 49, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 80, 394, 483, 484, 552, 901, 902, 920, 921, 980, 1250, 1488, 1668, 1669, 1670, 1673, 1674, 1675, 1695, 1716, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1882, 1968, 1990, 1992, 1993, 2007, 2009, 2012, 2013, 2020, 2024, 2041, 2046, 2047, 2055], "veri": [1, 4, 7, 8, 18, 21, 22, 53, 55, 58, 970, 986, 1157, 1165, 1167, 1171, 1313, 1450, 1451, 1452, 1675, 1676, 1689, 1745, 1767, 1773, 1849, 1853, 1910, 1935, 1963, 1977, 1987, 1992, 1994, 1996, 1997, 1999, 2001, 2002, 2005, 2011, 2012, 2019, 2020, 2021, 2024, 2030, 2043, 2044, 2046, 2047, 2053, 2054], "unlik": [1, 3, 7, 31, 47, 49, 55, 484, 489, 911, 1095, 1134, 1137, 1141, 1286, 1287, 1306, 1309, 1314, 1318, 1348, 1351, 1353, 1460, 1677, 1678, 1804, 1826, 1932, 1963, 1964, 1977, 1980, 1990, 2001, 2003, 2027, 2032, 2042, 2044], "coverag": [1, 7, 46, 50, 58, 1159, 1160, 1960, 1961, 1966, 1979, 2015, 2024, 2055], "plan": [1, 2, 7, 9, 25, 27, 30, 891, 1675, 1785, 1980, 1987, 1992, 2012, 2024, 2030, 2053, 2054], "consid": [1, 5, 8, 22, 25, 30, 33, 42, 46, 47, 49, 54, 57, 58, 59, 482, 690, 775, 781, 790, 904, 906, 907, 915, 988, 1085, 1086, 1087, 1088, 1089, 1119, 1155, 1239, 1243, 1246, 1250, 1291, 1293, 1294, 1295, 1296, 1304, 1305, 1308, 1313, 1316, 1423, 1434, 1488, 1491, 1539, 1558, 1593, 1604, 1663, 1676, 1689, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1725, 1755, 1823, 1842, 1877, 1882, 1911, 1912, 1913, 1914, 1959, 1961, 1964, 1971, 1986, 1987, 1988, 1992, 1994, 1995, 1996, 1999, 2002, 2007, 2011, 2012, 2014, 2016, 2021, 2022, 2024, 2027, 2030, 2031, 2042, 2044, 2053, 2055, 2056], "ad": [1, 3, 9, 14, 21, 22, 25, 29, 31, 39, 49, 52, 54, 55, 57, 58, 217, 218, 309, 315, 467, 511, 676, 682, 683, 684, 685, 686, 687, 731, 891, 894, 895, 896, 904, 905, 906, 907, 911, 912, 913, 915, 924, 936, 1098, 1102, 1159, 1160, 1162, 1168, 1172, 1250, 1264, 1328, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1494, 1495, 1497, 1502, 1516, 1527, 1531, 1536, 1539, 1571, 1572, 1573, 1590, 1618, 1619, 1620, 1644, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1695, 1702, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1728, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1789, 1790, 1791, 1859, 1864, 1878, 1959, 1961, 1963, 1975, 1979, 1986, 1993, 1995, 1996, 1998, 1999, 2004, 2012, 2015, 2018, 2024, 2029, 2032, 2040, 2042, 2043, 2044, 2049, 2050, 2053, 2056], "tutori": [1, 3, 9, 15, 25, 26, 29, 58, 891, 894, 895, 896, 899, 901, 1926, 1960, 1961, 1968, 1971, 1981, 1992, 1998, 1999, 2001, 2004, 2009, 2015, 2036, 2043, 2044, 2046], "how": [1, 3, 5, 7, 8, 9, 12, 15, 17, 21, 25, 27, 30, 34, 42, 43, 44, 46, 49, 50, 51, 53, 54, 58, 60, 68, 69, 76, 229, 411, 482, 483, 484, 781, 788, 789, 792, 837, 855, 857, 858, 891, 894, 895, 896, 899, 901, 902, 911, 912, 920, 921, 1081, 1102, 1156, 1165, 1169, 1177, 1183, 1204, 1250, 1261, 1322, 1434, 1488, 1539, 1540, 1632, 1663, 1675, 1716, 1728, 1805, 1829, 1843, 1854, 1960, 1961, 1963, 1964, 1968, 1971, 1972, 1974, 1977, 1978, 1979, 1981, 1986, 1989, 1990, 1991, 1993, 1994, 1995, 1996, 1999, 2001, 2003, 2004, 2009, 2013, 2015, 2018, 2020, 2021, 2022, 2024, 2029, 2036, 2042, 2046, 2047, 2048, 2056], "major": [1, 6, 7, 8, 9, 1026, 1886, 1960, 1964, 1995, 2011, 2042, 2044, 2046, 2048], "contain": [1, 2, 3, 5, 11, 14, 15, 21, 25, 26, 27, 29, 30, 31, 33, 35, 36, 40, 43, 46, 47, 49, 57, 58, 60, 61, 66, 69, 79, 84, 146, 150, 187, 191, 204, 286, 307, 309, 311, 315, 317, 467, 479, 540, 599, 603, 682, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 756, 810, 833, 837, 873, 888, 889, 890, 901, 902, 904, 905, 906, 907, 908, 909, 910, 928, 936, 937, 938, 946, 948, 952, 970, 983, 984, 988, 1011, 1012, 1013, 1014, 1015, 1044, 1098, 1132, 1133, 1135, 1141, 1150, 1162, 1163, 1166, 1167, 1208, 1209, 1212, 1213, 1221, 1225, 1241, 1248, 1250, 1251, 1257, 1258, 1261, 1266, 1267, 1270, 1281, 1287, 1288, 1289, 1290, 1292, 1294, 1296, 1297, 1313, 1322, 1340, 1344, 1351, 1374, 1380, 1392, 1401, 1423, 1424, 1430, 1431, 1434, 1439, 1440, 1442, 1447, 1458, 1459, 1480, 1488, 1489, 1490, 1495, 1498, 1503, 1505, 1516, 1520, 1527, 1539, 1546, 1576, 1584, 1585, 1587, 1659, 1666, 1669, 1670, 1675, 1682, 1683, 1690, 1691, 1692, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1723, 1724, 1727, 1729, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1775, 1778, 1803, 1817, 1821, 1881, 1882, 1886, 1903, 1910, 1912, 1914, 1919, 1920, 1921, 1925, 1926, 1931, 1935, 1960, 1961, 1963, 1964, 1965, 1968, 1971, 1972, 1975, 1979, 1980, 1982, 1984, 1986, 1987, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2002, 2003, 2004, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2017, 2018, 2020, 2022, 2024, 2026, 2027, 2029, 2030, 2032, 2033, 2034, 2038, 2040, 2041, 2043, 2044, 2046, 2047, 2048, 2051, 2053, 2054, 2055, 2056], "build": [1, 2, 8, 9, 14, 15, 25, 31, 58, 1250, 1260, 1488, 1534, 1558, 1593, 1960, 1961, 1971, 1981, 1987, 2009, 2013, 2015, 2021, 2029, 2030, 2035, 2036, 2039, 2054], "basic": [1, 3, 7, 9, 12, 27, 42, 58, 60, 61, 1159, 1160, 1161, 1257, 1323, 1675, 1761, 1960, 1965, 1981, 1988, 1990, 1991, 1996, 2012, 2021, 2028, 2029, 2041, 2044, 2046, 2047], "jacobian": [1, 31, 50, 51, 53, 54, 889, 894, 904, 907, 909, 910, 915, 916, 1160, 1161, 1162, 1166, 1167, 1935, 1987, 1992, 1996], "hessian": [1, 50, 53, 54, 905, 908, 1160, 1161, 1985, 1993], "etc": [1, 3, 5, 11, 12, 21, 22, 25, 31, 33, 42, 43, 47, 49, 855, 856, 857, 924, 970, 980, 1173, 1247, 1250, 1423, 1488, 1675, 1807, 1959, 1963, 1964, 1968, 1971, 1992, 1993, 1994, 1999, 2001, 2007, 2009, 2011, 2012, 2015, 2020, 2024, 2026, 2029, 2032, 2039, 2041, 2047], "user": [1, 2, 5, 7, 8, 9, 10, 11, 12, 15, 21, 22, 25, 26, 27, 30, 31, 32, 33, 35, 39, 42, 43, 45, 47, 49, 50, 53, 54, 57, 58, 60, 73, 80, 146, 331, 482, 728, 734, 735, 736, 741, 742, 752, 760, 790, 793, 795, 834, 850, 857, 858, 889, 896, 899, 901, 902, 910, 1002, 1035, 1149, 1155, 1156, 1172, 1250, 1287, 1322, 1488, 1531, 1533, 1534, 1535, 1644, 1669, 1670, 1675, 1682, 1683, 1692, 1706, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1959, 1960, 1961, 1963, 1964, 1968, 1971, 1977, 1979, 1980, 1986, 1987, 1988, 1990, 1992, 1996, 1997, 1998, 1999, 2001, 2004, 2007, 2009, 2011, 2013, 2014, 2015, 2017, 2020, 2021, 2024, 2026, 2028, 2029, 2031, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2050, 2052, 2054, 2055], "input": [1, 2, 3, 5, 9, 11, 12, 15, 19, 21, 22, 24, 25, 26, 29, 30, 31, 32, 35, 47, 49, 50, 51, 52, 53, 54, 55, 58, 60, 67, 68, 69, 73, 76, 78, 80, 81, 82, 84, 146, 256, 276, 297, 397, 479, 495, 513, 605, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 716, 724, 725, 730, 731, 734, 735, 736, 737, 738, 739, 741, 742, 752, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 798, 810, 813, 815, 833, 834, 835, 836, 853, 854, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 896, 897, 899, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 928, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 954, 956, 957, 959, 960, 961, 962, 963, 964, 965, 967, 968, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 998, 1014, 1041, 1042, 1044, 1077, 1078, 1079, 1080, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1167, 1192, 1193, 1194, 1195, 1196, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1232, 1235, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1250, 1253, 1254, 1257, 1258, 1262, 1264, 1266, 1267, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1673, 1674, 1675, 1682, 1683, 1693, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1709, 1710, 1711, 1712, 1716, 1717, 1718, 1720, 1725, 1728, 1729, 1730, 1732, 1733, 1735, 1737, 1738, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1760, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1795, 1797, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1816, 1818, 1819, 1820, 1823, 1824, 1825, 1826, 1829, 1836, 1837, 1838, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1910, 1911, 1913, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1939, 1958, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1971, 1973, 1979, 1980, 1981, 1985, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1998, 1999, 2002, 2003, 2004, 2006, 2007, 2009, 2011, 2013, 2014, 2015, 2016, 2018, 2019, 2020, 2021, 2024, 2025, 2027, 2028, 2031, 2033, 2034, 2036, 2039, 2041, 2042, 2043, 2044, 2049, 2052, 2053, 2054, 2055], "set": [1, 2, 3, 5, 8, 9, 13, 14, 20, 21, 22, 24, 25, 26, 27, 29, 31, 33, 35, 40, 42, 43, 44, 45, 46, 47, 49, 52, 53, 56, 57, 58, 60, 75, 77, 84, 146, 150, 250, 326, 441, 442, 443, 444, 445, 454, 492, 495, 516, 576, 577, 676, 731, 737, 739, 756, 775, 781, 788, 789, 790, 793, 811, 812, 813, 816, 817, 818, 821, 822, 837, 850, 854, 855, 857, 858, 861, 874, 886, 888, 889, 896, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 912, 913, 935, 947, 952, 963, 967, 968, 982, 995, 999, 1009, 1024, 1033, 1045, 1046, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1099, 1100, 1101, 1150, 1155, 1164, 1168, 1213, 1230, 1231, 1250, 1254, 1258, 1260, 1262, 1264, 1266, 1267, 1286, 1287, 1290, 1296, 1303, 1305, 1307, 1308, 1320, 1321, 1322, 1323, 1337, 1340, 1343, 1364, 1368, 1369, 1370, 1392, 1396, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1432, 1439, 1442, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1473, 1475, 1479, 1480, 1484, 1485, 1486, 1488, 1491, 1492, 1493, 1494, 1495, 1498, 1502, 1503, 1519, 1520, 1527, 1531, 1533, 1535, 1536, 1537, 1549, 1550, 1558, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1578, 1579, 1580, 1581, 1586, 1593, 1597, 1604, 1605, 1614, 1615, 1616, 1629, 1631, 1637, 1644, 1663, 1675, 1677, 1678, 1690, 1696, 1725, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1771, 1785, 1792, 1794, 1798, 1800, 1801, 1809, 1810, 1821, 1822, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1835, 1850, 1866, 1871, 1880, 1881, 1901, 1911, 1912, 1913, 1914, 1923, 1926, 1927, 1930, 1931, 1953, 1954, 1959, 1961, 1963, 1964, 1965, 1968, 1970, 1973, 1974, 1975, 1977, 1980, 1985, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2007, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2019, 2020, 2029, 2031, 2033, 2034, 2036, 2038, 2043, 2044, 2045, 2047, 2049, 2050, 2051, 2053, 2054, 2055], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 78, 79, 80, 81, 82, 83, 146, 150, 250, 254, 319, 331, 454, 482, 483, 484, 509, 511, 541, 610, 613, 676, 683, 725, 737, 738, 739, 744, 753, 754, 756, 764, 765, 768, 769, 770, 781, 787, 788, 789, 790, 793, 795, 810, 816, 819, 820, 822, 833, 837, 850, 854, 855, 857, 858, 859, 875, 876, 885, 886, 887, 889, 891, 892, 894, 895, 896, 899, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 920, 921, 924, 927, 938, 955, 968, 971, 975, 981, 988, 999, 1001, 1011, 1013, 1015, 1022, 1023, 1033, 1041, 1043, 1047, 1049, 1051, 1055, 1056, 1081, 1098, 1099, 1102, 1103, 1116, 1118, 1119, 1120, 1121, 1134, 1137, 1150, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1175, 1179, 1181, 1182, 1190, 1194, 1195, 1204, 1207, 1212, 1213, 1241, 1247, 1248, 1250, 1251, 1253, 1254, 1256, 1257, 1261, 1262, 1264, 1266, 1267, 1272, 1275, 1282, 1290, 1293, 1297, 1298, 1303, 1306, 1309, 1310, 1314, 1320, 1322, 1339, 1340, 1342, 1352, 1361, 1362, 1381, 1383, 1384, 1385, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1429, 1430, 1431, 1432, 1435, 1436, 1439, 1444, 1445, 1446, 1448, 1454, 1456, 1457, 1458, 1461, 1462, 1463, 1474, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1493, 1494, 1495, 1497, 1498, 1499, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1515, 1516, 1519, 1524, 1527, 1530, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1540, 1551, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1588, 1589, 1604, 1618, 1619, 1620, 1638, 1644, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1680, 1695, 1716, 1717, 1723, 1728, 1730, 1734, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1764, 1765, 1767, 1771, 1773, 1782, 1786, 1794, 1798, 1808, 1814, 1817, 1829, 1831, 1833, 1858, 1861, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1880, 1881, 1882, 1886, 1901, 1905, 1908, 1910, 1918, 1919, 1922, 1924, 1926, 1930, 1931, 1935, 1946, 1957, 1959, 1960, 1961, 1962, 1963, 1964, 1968, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2018, 2020, 2021, 2022, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2049, 2052, 2053, 2054, 2055, 2056, 2057, 2059], "lambda": [1, 12, 21, 27, 31, 52, 55, 57, 58, 60, 63, 68, 69, 72, 254, 483, 484, 920, 921, 956, 1157, 1162, 1166, 1167, 1172, 1286, 1287, 1288, 1289, 1322, 1443, 1525, 1537, 1634, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1755, 1761, 1763, 1766, 1860, 1935, 1965, 1987, 1992, 1993, 2011, 2012, 2020, 2031, 2044, 2055], "captur": [1, 12, 15, 46, 47, 58, 60, 63, 68, 69, 676, 968, 980, 999, 1001, 1033, 1039, 1044, 1253, 1362, 1739, 1742, 1743, 1744, 1746, 1752, 1961, 1965, 1970, 1992, 1993, 1997, 2006, 2007, 2009, 2012, 2015, 2034, 2035, 2036, 2039, 2041, 2042, 2044, 2047, 2052, 2054], "f": [1, 10, 22, 25, 31, 33, 34, 39, 40, 46, 47, 50, 51, 54, 55, 57, 58, 60, 61, 169, 254, 331, 373, 604, 894, 895, 935, 988, 1116, 1118, 1125, 1134, 1156, 1157, 1159, 1160, 1161, 1162, 1166, 1167, 1204, 1250, 1258, 1261, 1262, 1322, 1453, 1455, 1456, 1457, 1459, 1488, 1537, 1547, 1560, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1584, 1585, 1588, 1589, 1595, 1629, 1631, 1632, 1644, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1817, 1892, 1935, 1961, 1963, 1964, 1968, 1978, 1979, 1987, 1990, 1992, 1994, 1996, 1997, 1999, 2005, 2007, 2008, 2009, 2012, 2013, 2020, 2024, 2029, 2031, 2040, 2042, 2044, 2047, 2053, 2055], "three": [1, 2, 6, 9, 25, 29, 49, 51, 54, 58, 83, 884, 1096, 1098, 1204, 1213, 1294, 1297, 1298, 1299, 1314, 1342, 1399, 1417, 1420, 1457, 1460, 1483, 1644, 1689, 1730, 1761, 1829, 1964, 1987, 1990, 1991, 1992, 2009, 2012, 2013, 2015, 2020, 2022, 2024, 2029, 2051], "anoth": [1, 5, 7, 12, 21, 22, 25, 27, 31, 32, 33, 44, 46, 49, 58, 482, 976, 999, 1001, 1002, 1004, 1149, 1172, 1177, 1188, 1189, 1260, 1286, 1287, 1290, 1314, 1430, 1431, 1489, 1498, 1666, 1682, 1683, 1690, 1825, 1961, 1963, 1964, 1970, 1972, 1986, 1987, 1989, 1990, 1992, 1995, 1999, 2001, 2003, 2005, 2012, 2013, 2021, 2022, 2024, 2030, 2032, 2039, 2040, 2044, 2046, 2047, 2050, 2053, 2056], "constant": [1, 12, 21, 46, 47, 58, 60, 61, 65, 66, 69, 71, 740, 771, 817, 818, 971, 1081, 1138, 1139, 1140, 1178, 1190, 1247, 1250, 1254, 1266, 1298, 1323, 1412, 1413, 1414, 1431, 1434, 1441, 1497, 1519, 1536, 1539, 1590, 1593, 1632, 1690, 1737, 1753, 1758, 1761, 1908, 1962, 1964, 1986, 1992, 1999, 2003, 2009, 2011, 2024, 2043, 2046, 2047], "boolean": [1, 12, 14, 31, 42, 58, 60, 68, 69, 396, 398, 885, 901, 902, 911, 940, 942, 943, 945, 974, 980, 1001, 1002, 1004, 1103, 1172, 1178, 1183, 1194, 1207, 1239, 1240, 1241, 1242, 1243, 1246, 1275, 1323, 1339, 1344, 1385, 1402, 1403, 1404, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1488, 1527, 1644, 1692, 1695, 1785, 1880, 1881, 1905, 1930, 1931, 1940, 1963, 1965, 1990, 1992, 2026, 2027, 2029, 2030, 2031, 2032, 2044], "flag": [1, 2, 5, 14, 25, 26, 32, 43, 45, 49, 52, 54, 58, 731, 869, 904, 906, 911, 912, 913, 937, 946, 959, 960, 961, 968, 1029, 1149, 1155, 1157, 1158, 1160, 1161, 1162, 1166, 1167, 1208, 1209, 1231, 1238, 1322, 1342, 1494, 1551, 1604, 1605, 1675, 1692, 1695, 1725, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1829, 1835, 1861, 1871, 1910, 1923, 1935, 1960, 1961, 1964, 1977, 1987, 1990, 1992, 2002, 2003, 2009, 2012, 2015, 2029, 2030, 2044, 2045, 2053, 2054], "inform": [1, 2, 3, 4, 5, 7, 8, 9, 17, 18, 20, 21, 22, 25, 26, 27, 29, 30, 33, 34, 35, 38, 42, 43, 46, 47, 49, 51, 56, 58, 75, 187, 204, 251, 309, 317, 483, 484, 494, 511, 513, 614, 676, 731, 906, 911, 912, 915, 916, 920, 921, 939, 1102, 1133, 1135, 1156, 1183, 1247, 1250, 1267, 1280, 1287, 1296, 1415, 1416, 1417, 1418, 1419, 1420, 1448, 1458, 1484, 1485, 1486, 1488, 1494, 1503, 1515, 1531, 1533, 1535, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1585, 1604, 1644, 1663, 1664, 1665, 1675, 1716, 1728, 1737, 1752, 1784, 1811, 1829, 1835, 1861, 1923, 1961, 1964, 1970, 1971, 1980, 1981, 1987, 1989, 1990, 1991, 1992, 1998, 1999, 2002, 2007, 2009, 2012, 2014, 2015, 2027, 2029, 2030, 2031, 2034, 2038, 2042, 2043, 2044, 2047, 2048, 2052, 2054, 2056, 2057], "between": [1, 2, 3, 7, 17, 18, 22, 25, 31, 32, 42, 43, 44, 46, 47, 49, 56, 57, 58, 192, 482, 509, 579, 580, 581, 583, 584, 603, 613, 685, 686, 687, 691, 692, 756, 768, 769, 770, 798, 853, 861, 880, 889, 894, 905, 907, 908, 909, 915, 916, 956, 968, 988, 1001, 1008, 1010, 1057, 1061, 1075, 1076, 1081, 1098, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1149, 1150, 1171, 1179, 1204, 1211, 1247, 1250, 1262, 1286, 1287, 1309, 1314, 1381, 1400, 1401, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1426, 1427, 1428, 1432, 1434, 1439, 1448, 1454, 1464, 1465, 1466, 1467, 1468, 1469, 1479, 1481, 1482, 1483, 1488, 1491, 1492, 1493, 1497, 1516, 1519, 1520, 1521, 1536, 1537, 1539, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1592, 1618, 1619, 1620, 1634, 1650, 1660, 1675, 1682, 1683, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1760, 1761, 1767, 1769, 1778, 1786, 1790, 1791, 1796, 1797, 1801, 1826, 1879, 1880, 1881, 1882, 1886, 1907, 1908, 1930, 1931, 1961, 1963, 1964, 1965, 1971, 1977, 1980, 1986, 1987, 1989, 1990, 1991, 1996, 1997, 1999, 2001, 2003, 2004, 2006, 2007, 2009, 2011, 2013, 2015, 2016, 2020, 2022, 2024, 2026, 2029, 2033, 2039, 2047, 2052, 2054], "well": [1, 3, 5, 7, 9, 14, 22, 25, 42, 46, 49, 54, 55, 58, 59, 613, 787, 818, 821, 857, 1041, 1160, 1161, 1250, 1254, 1261, 1266, 1286, 1287, 1288, 1290, 1296, 1309, 1314, 1360, 1402, 1403, 1404, 1423, 1458, 1488, 1527, 1614, 1615, 1616, 1675, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1785, 1919, 1961, 1964, 1968, 1971, 1978, 1980, 1986, 1987, 1990, 1992, 1993, 1995, 1996, 1999, 2001, 2003, 2007, 2009, 2012, 2015, 2018, 2020, 2022, 2024, 2028, 2029, 2032, 2036, 2040, 2043, 2044, 2045, 2050], "relat": [1, 6, 7, 9, 21, 25, 33, 46, 47, 48, 49, 54, 60, 61, 66, 69, 75, 676, 1204, 1290, 1434, 1519, 1539, 1675, 1775, 1924, 1980, 1987, 2004, 2011, 2012, 2020, 2024, 2025, 2031, 2036, 2044, 2055], "mechan": [1, 8, 25, 36, 40, 42, 46, 47, 58, 875, 911, 912, 1102, 1250, 1488, 1548, 1644, 1728, 1901, 1960, 1977, 1980, 1992, 1995, 1998, 1999, 2018, 2020, 2021, 2039], "confus": [1, 8, 60, 1250, 1488, 1987, 1990, 2012, 2024, 2045, 2047], "spars": [1, 11, 186, 187, 204, 214, 319, 324, 338, 339, 431, 539, 540, 541, 542, 577, 579, 580, 581, 582, 583, 584, 610, 685, 741, 742, 915, 916, 1072, 1192, 1215, 1235, 1323, 1345, 1355, 1384, 1430, 1431, 1521, 1584, 1585, 1610, 1756, 1775, 1823, 1856, 1861, 1868, 1869, 1870, 1871, 1872, 1873, 1878, 1887, 1907, 1923, 1924, 1960, 1962, 1966, 1971, 1985, 2002, 2003, 2010, 2017, 2027, 2028, 2031, 2042, 2049], "param": [1, 2, 27, 29, 31, 34, 42, 49, 51, 53, 56, 58, 484, 760, 791, 1155, 1165, 1186, 1250, 1269, 1488, 1494, 1498, 1499, 1674, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1769, 1962, 1973, 1985, 1986, 1990, 1991, 2011, 2055], "receiv": [1, 7, 9, 21, 25, 29, 31, 47, 54, 57, 1055, 1250, 1488, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1770, 1964, 1975, 1977, 1986, 1987, 2001, 2013, 2020, 2021, 2022, 2024, 2042, 2047, 2054, 2056], "dure": [1, 5, 14, 18, 22, 25, 27, 33, 34, 36, 42, 46, 49, 57, 58, 60, 67, 77, 79, 80, 331, 484, 499, 500, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 789, 823, 885, 886, 896, 899, 901, 902, 999, 1033, 1043, 1044, 1056, 1057, 1076, 1261, 1263, 1264, 1266, 1322, 1396, 1402, 1403, 1404, 1424, 1425, 1430, 1431, 1450, 1451, 1452, 1506, 1527, 1533, 1535, 1578, 1584, 1585, 1666, 1675, 1677, 1678, 1723, 1737, 1770, 1867, 1912, 1914, 1963, 1970, 1971, 1973, 1975, 1978, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1998, 1999, 2002, 2003, 2007, 2009, 2012, 2014, 2015, 2018, 2020, 2022, 2031, 2039, 2040, 2044, 2047, 2051, 2052, 2053, 2054, 2056], "accumul": [1, 2, 49, 146, 286, 309, 314, 315, 317, 467, 484, 682, 889, 910, 1172, 1320, 1675, 1740, 1741, 1923, 1961, 1962, 1975, 1987, 1990, 1991, 1994, 2002, 2011, 2016, 2020, 2021, 2024, 2042, 2044, 2049, 2054], "initi": [1, 2, 3, 4, 8, 17, 18, 21, 22, 27, 29, 33, 35, 42, 43, 45, 49, 76, 84, 492, 495, 576, 708, 709, 710, 711, 712, 713, 716, 726, 727, 728, 729, 741, 742, 752, 756, 760, 857, 858, 875, 924, 976, 1001, 1009, 1030, 1035, 1036, 1039, 1040, 1065, 1099, 1100, 1101, 1198, 1226, 1248, 1250, 1263, 1264, 1322, 1323, 1340, 1402, 1403, 1404, 1405, 1407, 1418, 1419, 1420, 1424, 1430, 1431, 1439, 1440, 1442, 1450, 1451, 1452, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1488, 1496, 1503, 1504, 1505, 1527, 1537, 1584, 1666, 1675, 1677, 1678, 1689, 1692, 1695, 1723, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1771, 1825, 1826, 1827, 1868, 1869, 1870, 1871, 1872, 1873, 1901, 1950, 1952, 1960, 1962, 1963, 1964, 1972, 1975, 1980, 1985, 1987, 1990, 1991, 1992, 1995, 1998, 2005, 2007, 2009, 2011, 2012, 2013, 2015, 2019, 2020, 2021, 2039, 2047, 2052, 2053, 2059], "memori": [1, 2, 3, 5, 11, 22, 24, 27, 29, 31, 32, 47, 49, 53, 58, 146, 151, 166, 168, 171, 174, 175, 176, 191, 202, 205, 229, 236, 250, 263, 293, 321, 327, 333, 335, 336, 389, 441, 442, 443, 444, 445, 454, 459, 482, 495, 496, 520, 521, 576, 599, 613, 730, 759, 874, 876, 889, 896, 899, 901, 915, 916, 922, 950, 965, 968, 999, 1000, 1003, 1006, 1007, 1009, 1023, 1024, 1033, 1034, 1037, 1041, 1043, 1044, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1062, 1063, 1064, 1068, 1098, 1099, 1100, 1101, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1161, 1163, 1167, 1250, 1268, 1296, 1322, 1359, 1360, 1361, 1369, 1431, 1458, 1459, 1488, 1531, 1532, 1533, 1535, 1644, 1662, 1675, 1682, 1683, 1689, 1716, 1728, 1735, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1794, 1795, 1797, 1798, 1799, 1800, 1825, 1901, 1923, 1935, 1958, 1960, 1961, 1972, 1973, 1977, 1979, 1980, 1981, 1987, 1992, 1995, 2001, 2007, 2009, 2013, 2014, 2015, 2020, 2024, 2026, 2027, 2028, 2030, 2031, 2039, 2043, 2044, 2046, 2051, 2053], "overlap": [1, 21, 22, 25, 29, 49, 58, 482, 676, 874, 915, 916, 1101, 1156, 1247, 1434, 1539, 1675, 1882, 1923, 1990, 1991, 1995, 2027, 2042, 2044, 2053], "dens": [1, 29, 214, 541, 542, 579, 580, 581, 582, 583, 584, 937, 946, 1208, 1209, 1270, 1323, 1756, 1856, 1859, 1863, 1864, 1867, 1868, 1869, 1870, 1872, 1873, 1878, 1887, 1923, 1980, 2003, 2024, 2027, 2042], "stride": [1, 11, 47, 134, 250, 335, 441, 442, 443, 444, 445, 495, 516, 540, 577, 579, 580, 581, 583, 584, 613, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 764, 765, 768, 769, 770, 778, 779, 861, 874, 937, 946, 1099, 1101, 1111, 1116, 1134, 1150, 1153, 1154, 1172, 1182, 1208, 1209, 1215, 1250, 1260, 1264, 1270, 1321, 1337, 1355, 1397, 1398, 1399, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1455, 1456, 1457, 1464, 1465, 1466, 1467, 1468, 1469, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1500, 1539, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1587, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1662, 1675, 1734, 1790, 1791, 1794, 1796, 1797, 1798, 1800, 1801, 1808, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1860, 1863, 1907, 1912, 1914, 1933, 1957, 1962, 1965, 1968, 1978, 1980, 2009, 2010, 2020, 2024, 2026, 2027, 2029, 2030, 2031, 2041, 2042, 2043, 2044, 2049, 2054], "otherwis": [1, 2, 3, 5, 7, 9, 11, 14, 21, 25, 26, 32, 35, 46, 49, 50, 54, 58, 84, 205, 317, 324, 328, 332, 334, 338, 339, 491, 500, 556, 576, 577, 579, 599, 613, 676, 682, 683, 684, 685, 686, 689, 691, 692, 693, 695, 731, 756, 764, 765, 780, 790, 813, 816, 817, 857, 858, 861, 888, 894, 901, 902, 906, 915, 935, 936, 952, 1039, 1098, 1104, 1137, 1149, 1171, 1172, 1182, 1185, 1241, 1247, 1250, 1253, 1257, 1263, 1272, 1296, 1311, 1320, 1322, 1323, 1338, 1343, 1348, 1350, 1351, 1353, 1355, 1356, 1379, 1382, 1398, 1399, 1421, 1423, 1426, 1427, 1428, 1432, 1439, 1443, 1444, 1445, 1446, 1448, 1458, 1474, 1488, 1492, 1493, 1494, 1495, 1496, 1498, 1503, 1504, 1506, 1519, 1525, 1527, 1530, 1531, 1533, 1535, 1536, 1537, 1561, 1562, 1595, 1597, 1598, 1602, 1638, 1648, 1675, 1689, 1694, 1695, 1716, 1720, 1728, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1752, 1753, 1754, 1755, 1756, 1773, 1775, 1783, 1785, 1792, 1801, 1808, 1821, 1829, 1836, 1880, 1881, 1882, 1885, 1918, 1919, 1920, 1930, 1931, 1938, 1959, 1961, 1963, 1964, 1971, 1973, 1978, 1986, 1992, 1993, 2001, 2007, 2008, 2009, 2015, 2016, 2018, 2019, 2020, 2022, 2025, 2026, 2027, 2028, 2029, 2031, 2036, 2055], "rowmajor": [1, 1675], "contigu": [1, 11, 22, 27, 327, 495, 516, 613, 1433, 1491, 1634, 1675, 1682, 1683, 1802, 1808, 1886, 1962, 1979, 1980, 2010, 2017, 2024, 2026, 2028], "create_graph": [1, 146, 484, 889, 904, 905, 906, 907, 908, 909, 910, 1962, 1986, 1992], "preserv": [1, 5, 12, 21, 31, 46, 49, 58, 495, 775, 781, 850, 872, 875, 1139, 1140, 1156, 1182, 1250, 1254, 1261, 1488, 1489, 1498, 1540, 1604, 1663, 1738, 1817, 1821, 1858, 1901, 1928, 1961, 1973, 1978, 1980, 1985, 1990, 1993, 2003, 2006, 2007, 2009, 2020, 2024, 2027, 2039, 2043], "replac": [1, 14, 21, 22, 25, 27, 41, 43, 46, 49, 51, 52, 53, 54, 55, 58, 80, 81, 83, 115, 417, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 743, 810, 835, 854, 959, 1044, 1098, 1155, 1156, 1172, 1255, 1258, 1268, 1340, 1341, 1374, 1378, 1519, 1530, 1666, 1691, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1725, 1727, 1785, 1882, 1886, 1910, 1961, 1962, 1964, 1973, 1990, 1992, 1993, 1996, 1998, 2001, 2005, 2009, 2010, 2012, 2015, 2031, 2040, 2042, 2044, 2046, 2053], "preexist": [1, 2014, 2042, 2043], "behavior": [1, 2, 7, 14, 20, 22, 25, 26, 27, 29, 31, 32, 35, 40, 43, 46, 47, 49, 53, 54, 57, 58, 82, 250, 315, 467, 495, 509, 540, 613, 683, 781, 789, 822, 874, 888, 901, 902, 944, 950, 952, 954, 967, 998, 1093, 1098, 1099, 1100, 1101, 1143, 1151, 1152, 1156, 1183, 1250, 1261, 1264, 1266, 1296, 1303, 1307, 1320, 1321, 1322, 1337, 1345, 1352, 1424, 1427, 1448, 1458, 1488, 1503, 1527, 1540, 1558, 1593, 1662, 1663, 1666, 1667, 1675, 1676, 1727, 1729, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1779, 1785, 1801, 1808, 1849, 1886, 1908, 1923, 1959, 1961, 1965, 1966, 1968, 1970, 1972, 1978, 1980, 1982, 1988, 1990, 1992, 1993, 2002, 2003, 2004, 2009, 2011, 2012, 2013, 2016, 2017, 2020, 2025, 2028, 2042, 2043, 2045, 2047], "let": [1, 7, 8, 21, 22, 31, 43, 54, 58, 482, 492, 960, 961, 963, 1172, 1204, 1250, 1270, 1280, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1296, 1297, 1300, 1302, 1309, 1311, 1313, 1314, 1488, 1675, 1689, 1901, 1968, 1978, 1979, 1987, 1990, 1991, 1992, 1993, 1995, 1999, 2001, 2002, 2003, 2004, 2005, 2012, 2021, 2022, 2024, 2029, 2039, 2040, 2043, 2044, 2045, 2046, 2047, 2048, 2053, 2054], "first": [1, 4, 5, 7, 9, 14, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 35, 39, 42, 43, 46, 47, 49, 55, 58, 60, 69, 72, 212, 250, 282, 286, 585, 606, 682, 685, 687, 690, 756, 789, 790, 810, 850, 853, 855, 870, 871, 880, 885, 886, 887, 888, 890, 901, 902, 910, 915, 924, 933, 935, 936, 940, 941, 943, 944, 945, 948, 950, 952, 966, 998, 1001, 1012, 1086, 1088, 1089, 1090, 1095, 1098, 1103, 1116, 1118, 1137, 1152, 1157, 1158, 1160, 1161, 1162, 1166, 1167, 1182, 1194, 1204, 1207, 1215, 1216, 1217, 1227, 1239, 1248, 1258, 1263, 1264, 1270, 1275, 1280, 1283, 1290, 1306, 1309, 1316, 1317, 1319, 1322, 1323, 1339, 1345, 1348, 1351, 1352, 1353, 1355, 1372, 1374, 1380, 1385, 1388, 1392, 1398, 1399, 1405, 1416, 1417, 1419, 1420, 1430, 1431, 1433, 1438, 1439, 1453, 1456, 1457, 1458, 1473, 1480, 1482, 1483, 1503, 1516, 1575, 1662, 1666, 1675, 1682, 1683, 1692, 1693, 1695, 1706, 1716, 1722, 1742, 1743, 1744, 1745, 1746, 1752, 1755, 1756, 1760, 1764, 1767, 1769, 1775, 1785, 1786, 1812, 1813, 1821, 1829, 1848, 1863, 1866, 1871, 1902, 1903, 1907, 1912, 1914, 1920, 1929, 1932, 1935, 1937, 1950, 1959, 1961, 1963, 1964, 1968, 1971, 1974, 1977, 1978, 1980, 1986, 1987, 1990, 1992, 1994, 1995, 1996, 1999, 2001, 2002, 2003, 2004, 2005, 2007, 2009, 2011, 2013, 2014, 2015, 2020, 2021, 2022, 2024, 2025, 2029, 2033, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2047, 2052, 2053, 2054, 2055], "accord": [1, 9, 30, 33, 46, 793, 857, 858, 876, 938, 950, 1096, 1214, 1311, 1344, 1374, 1392, 1431, 1500, 1666, 1675, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1761, 1767, 1786, 1849, 1874, 1902, 1936, 1964, 1975, 1979, 1980, 1999, 2003, 2005, 2012, 2022, 2031], "retain": [1, 9, 25, 689, 691, 692, 695, 870, 871, 876, 1254, 1272, 1303, 1307, 1320, 1338, 1348, 1350, 1351, 1353, 1356, 1379, 1380, 1381, 1382, 1730, 1783, 1786, 1817, 1880, 1881, 1885, 1911, 1912, 1913, 1914, 1930, 1931, 1977, 2001, 2024], "over": [1, 9, 12, 21, 22, 25, 26, 31, 33, 40, 43, 46, 49, 50, 51, 52, 53, 54, 55, 58, 60, 63, 68, 69, 72, 477, 676, 693, 734, 735, 736, 737, 738, 739, 762, 763, 768, 769, 770, 778, 779, 888, 901, 902, 924, 928, 955, 1010, 1055, 1057, 1061, 1076, 1077, 1078, 1079, 1080, 1098, 1155, 1159, 1161, 1165, 1167, 1204, 1212, 1250, 1266, 1283, 1303, 1307, 1319, 1320, 1322, 1330, 1350, 1352, 1382, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1431, 1434, 1435, 1436, 1442, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1460, 1476, 1479, 1480, 1481, 1482, 1483, 1488, 1491, 1492, 1493, 1495, 1502, 1516, 1519, 1520, 1522, 1527, 1536, 1539, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1588, 1589, 1605, 1611, 1614, 1615, 1616, 1618, 1619, 1620, 1629, 1630, 1637, 1644, 1670, 1680, 1691, 1727, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1790, 1791, 1806, 1865, 1867, 1880, 1881, 1882, 1885, 1903, 1918, 1930, 1931, 1935, 1964, 1975, 1977, 1978, 1979, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1999, 2001, 2002, 2007, 2011, 2015, 2020, 2021, 2024, 2032, 2039, 2041, 2042, 2043, 2044, 2047, 2054, 2056], "time": [1, 3, 4, 7, 8, 9, 14, 21, 22, 25, 26, 27, 29, 31, 32, 33, 39, 42, 43, 44, 46, 47, 49, 54, 57, 58, 60, 70, 71, 84, 286, 309, 482, 483, 489, 613, 676, 681, 682, 683, 684, 685, 686, 687, 690, 741, 742, 752, 756, 760, 764, 765, 795, 797, 820, 837, 873, 910, 920, 921, 922, 923, 929, 931, 936, 948, 956, 958, 968, 981, 988, 1001, 1002, 1004, 1044, 1057, 1076, 1079, 1090, 1112, 1113, 1119, 1120, 1121, 1127, 1138, 1139, 1140, 1148, 1152, 1161, 1162, 1163, 1166, 1167, 1169, 1175, 1183, 1239, 1247, 1250, 1258, 1263, 1266, 1267, 1271, 1276, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1295, 1296, 1297, 1300, 1302, 1306, 1309, 1311, 1313, 1314, 1322, 1323, 1345, 1355, 1362, 1373, 1374, 1376, 1386, 1394, 1395, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1431, 1434, 1435, 1436, 1439, 1450, 1451, 1452, 1458, 1460, 1474, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1500, 1501, 1503, 1524, 1527, 1539, 1540, 1541, 1542, 1558, 1561, 1562, 1588, 1589, 1634, 1635, 1636, 1652, 1668, 1669, 1670, 1673, 1674, 1675, 1689, 1690, 1693, 1695, 1729, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1763, 1773, 1774, 1785, 1807, 1813, 1863, 1877, 1882, 1883, 1903, 1935, 1950, 1960, 1963, 1964, 1965, 1970, 1972, 1973, 1977, 1985, 1987, 1989, 1991, 1992, 1994, 1995, 1996, 1998, 1999, 2001, 2003, 2004, 2005, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2020, 2021, 2022, 2024, 2029, 2034, 2035, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2047, 2050, 2051, 2053, 2054, 2056], "4": [1, 3, 5, 11, 12, 18, 19, 21, 22, 25, 27, 29, 31, 32, 33, 40, 42, 46, 47, 54, 58, 60, 61, 62, 65, 66, 68, 69, 71, 187, 204, 238, 250, 285, 307, 309, 311, 313, 317, 397, 398, 441, 442, 467, 479, 483, 489, 492, 495, 509, 513, 519, 533, 540, 552, 554, 556, 580, 581, 603, 613, 679, 680, 681, 682, 685, 687, 688, 689, 691, 692, 693, 695, 735, 737, 738, 739, 742, 744, 753, 756, 769, 770, 820, 861, 870, 871, 872, 876, 877, 878, 879, 880, 881, 883, 884, 896, 899, 901, 902, 904, 907, 908, 909, 936, 939, 942, 946, 947, 948, 952, 954, 957, 958, 961, 962, 963, 966, 973, 977, 980, 983, 984, 985, 986, 998, 1078, 1081, 1088, 1090, 1092, 1093, 1096, 1097, 1098, 1101, 1103, 1113, 1114, 1116, 1118, 1126, 1132, 1134, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1148, 1149, 1152, 1155, 1157, 1165, 1166, 1167, 1172, 1192, 1193, 1194, 1204, 1207, 1211, 1212, 1213, 1214, 1216, 1217, 1221, 1225, 1227, 1239, 1241, 1247, 1256, 1257, 1262, 1264, 1271, 1272, 1273, 1274, 1275, 1276, 1280, 1282, 1283, 1289, 1291, 1293, 1294, 1295, 1298, 1300, 1303, 1305, 1307, 1309, 1311, 1313, 1316, 1317, 1318, 1320, 1321, 1324, 1326, 1327, 1332, 1334, 1335, 1337, 1339, 1344, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1372, 1373, 1374, 1382, 1383, 1384, 1385, 1392, 1397, 1408, 1409, 1410, 1412, 1413, 1416, 1417, 1419, 1420, 1428, 1430, 1431, 1432, 1434, 1438, 1439, 1458, 1459, 1484, 1485, 1491, 1493, 1495, 1500, 1501, 1503, 1509, 1510, 1511, 1512, 1513, 1527, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1548, 1549, 1550, 1558, 1560, 1569, 1572, 1584, 1585, 1593, 1604, 1629, 1632, 1635, 1636, 1662, 1663, 1664, 1665, 1666, 1675, 1682, 1683, 1689, 1695, 1706, 1718, 1719, 1721, 1723, 1729, 1730, 1731, 1733, 1735, 1739, 1752, 1757, 1758, 1764, 1768, 1769, 1770, 1774, 1778, 1779, 1782, 1783, 1785, 1786, 1788, 1792, 1794, 1796, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1812, 1813, 1814, 1816, 1817, 1821, 1833, 1840, 1842, 1843, 1848, 1849, 1851, 1853, 1858, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1882, 1885, 1888, 1889, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1929, 1932, 1933, 1934, 1935, 1936, 1937, 1958, 1961, 1962, 1963, 1964, 1965, 1971, 1977, 1979, 1980, 1985, 1987, 1988, 1990, 1991, 1992, 1995, 1999, 2001, 2004, 2005, 2007, 2009, 2012, 2013, 2015, 2017, 2020, 2024, 2025, 2027, 2028, 2029, 2030, 2031, 2039, 2041, 2042, 2044, 2047, 2049, 2052, 2054], "fact": [1, 3, 8, 49, 491, 937, 946, 982, 1179, 1204, 1208, 1209, 1286, 1287, 1314, 1961, 1992, 1995, 1996, 2009, 2021, 2024, 2039, 2043, 2048], "reset": [1, 25, 27, 756, 816, 821, 889, 999, 1047, 1049, 1062, 1063, 1064, 1250, 1439, 1488, 1504, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1775, 1792, 1887, 1975, 2009, 2019], "phase": [1, 22, 789, 1286, 1287, 1767, 1886, 1962, 2005, 2044, 2054], "iter": [1, 2, 3, 7, 22, 25, 26, 27, 29, 31, 43, 45, 46, 49, 58, 60, 65, 924, 935, 973, 1011, 1012, 1013, 1014, 1015, 1044, 1047, 1049, 1070, 1250, 1323, 1488, 1489, 1490, 1498, 1499, 1675, 1676, 1679, 1680, 1681, 1688, 1690, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1724, 1726, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1759, 1760, 1761, 1764, 1775, 1844, 1887, 1962, 1964, 1965, 1977, 1979, 1986, 1987, 1988, 1990, 1991, 1992, 1995, 1996, 1999, 2011, 2014, 2019, 2029, 2039, 2044, 2047, 2053, 2054, 2055], "recreat": [1, 1987, 2053], "valid": [1, 24, 25, 27, 31, 40, 42, 46, 47, 58, 80, 84, 743, 744, 753, 787, 959, 971, 975, 1041, 1098, 1172, 1179, 1248, 1250, 1251, 1272, 1286, 1287, 1296, 1297, 1298, 1309, 1314, 1345, 1415, 1416, 1417, 1568, 1569, 1570, 1593, 1666, 1701, 1706, 1710, 1736, 1737, 1757, 1758, 1763, 1764, 1765, 1766, 1768, 1769, 1770, 1771, 1785, 1961, 1962, 1963, 1964, 1968, 1979, 1980, 1987, 1990, 1992, 1997, 2003, 2009, 2011, 2014, 2020, 2021, 2041, 2042, 2047, 2050, 2054], "altern": [1, 9, 21, 25, 58, 676, 810, 1159, 1160, 1213, 1258, 1322, 1516, 1533, 1535, 1612, 1675, 1735, 1756, 1827, 1828, 1923, 1958, 1959, 1965, 1987, 1997, 1999, 2002, 2003, 2005, 2030, 2044, 2052], "assign": [1, 7, 9, 10, 21, 25, 33, 42, 43, 54, 56, 58, 676, 834, 835, 836, 931, 1248, 1250, 1251, 1392, 1423, 1488, 1495, 1498, 1499, 1676, 1695, 1961, 1965, 1986, 1992, 1993, 1994, 1995, 2009, 2015, 2021, 2022, 2028, 2029], "never": [1, 5, 7, 22, 25, 42, 43, 46, 47, 217, 218, 792, 875, 956, 968, 1247, 1297, 1298, 1309, 1322, 1675, 1716, 1987, 1990, 1992, 2012, 2013, 2020, 2031, 2042], "long": [1, 7, 9, 21, 42, 46, 57, 730, 745, 747, 748, 749, 750, 752, 759, 777, 973, 1156, 1182, 1226, 1351, 1380, 1407, 1423, 1431, 1458, 1459, 1495, 1577, 1736, 1784, 1898, 1902, 1912, 1914, 1919, 1960, 1964, 1971, 1977, 1978, 1979, 1987, 1988, 1990, 1992, 1994, 2001, 2003, 2009, 2012, 2014, 2019, 2026, 2027, 2029, 2030, 2039, 2044, 2049, 2052, 2054], "indic": [1, 2, 3, 12, 21, 22, 25, 26, 27, 30, 31, 42, 46, 47, 76, 79, 80, 187, 204, 309, 311, 313, 314, 315, 317, 467, 509, 511, 513, 540, 568, 569, 579, 610, 691, 692, 731, 741, 742, 795, 820, 870, 871, 872, 873, 874, 896, 898, 901, 915, 916, 952, 959, 960, 961, 973, 974, 980, 994, 999, 1001, 1002, 1004, 1038, 1077, 1078, 1101, 1157, 1158, 1160, 1161, 1162, 1166, 1167, 1192, 1204, 1225, 1248, 1250, 1255, 1264, 1267, 1268, 1272, 1281, 1292, 1294, 1305, 1308, 1322, 1330, 1338, 1340, 1342, 1348, 1351, 1353, 1356, 1362, 1374, 1380, 1384, 1392, 1393, 1394, 1395, 1423, 1430, 1431, 1435, 1436, 1482, 1483, 1484, 1485, 1486, 1491, 1493, 1494, 1555, 1556, 1557, 1576, 1584, 1585, 1588, 1589, 1605, 1621, 1622, 1623, 1631, 1644, 1659, 1675, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1709, 1710, 1729, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1765, 1767, 1786, 1821, 1858, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1897, 1898, 1902, 1905, 1911, 1912, 1913, 1914, 1919, 1920, 1921, 1923, 1924, 1926, 1935, 1938, 1940, 1951, 1961, 1962, 1964, 1968, 1978, 1979, 1992, 2001, 2004, 2009, 2010, 2020, 2024, 2028, 2029, 2031, 2045, 2047, 2049, 2054], "hard": [1, 7, 8, 25, 43, 970, 1098, 1323, 1443, 1595, 1596, 1961, 1962, 1963, 1987, 1995, 2009, 2012, 2044, 2045], "matter": [1, 4, 25, 49, 896, 897, 901, 1086, 1098, 1182, 1258, 1261, 1266, 1675, 1980, 1987, 2012], "discourag": [1, 1067, 1071, 1954, 1987, 2020], "aggress": [1, 49, 1247, 1682, 1683, 1987, 2020, 2044], "buffer": [1, 4, 21, 22, 25, 46, 47, 49, 53, 56, 411, 876, 1012, 1044, 1152, 1155, 1165, 1250, 1258, 1261, 1272, 1322, 1402, 1403, 1404, 1424, 1461, 1462, 1463, 1488, 1527, 1668, 1675, 1677, 1684, 1686, 1692, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1723, 1725, 1753, 1755, 1817, 1858, 1905, 1963, 1981, 1987, 1991, 1992, 1999, 2004, 2007, 2009, 2013, 2044], "free": [1, 7, 25, 27, 31, 33, 42, 43, 49, 58, 60, 68, 69, 973, 1050, 1068, 1253, 1266, 1323, 1973, 1985, 1987, 1990, 1992, 1994, 1995, 2001, 2005, 2009, 2024, 2039, 2042, 2044, 2056], "reus": [1, 25, 58, 482, 1173, 1987, 1990, 2020, 2039, 2042, 2044, 2049, 2054, 2056], "effici": [1, 2, 3, 8, 11, 21, 31, 49, 50, 55, 146, 756, 889, 896, 898, 901, 910, 958, 1163, 1170, 1195, 1268, 1306, 1323, 1342, 1392, 1426, 1427, 1428, 1431, 1432, 1439, 1494, 1500, 1501, 1503, 1535, 1644, 1973, 1980, 1987, 1991, 1992, 1996, 2000, 2001, 2002, 2011, 2013, 2015, 2020, 2021, 2024, 2027, 2028, 2032], "few": [1, 7, 8, 22, 27, 33, 1098, 1156, 1431, 1675, 1959, 1964, 1987, 1990, 1992, 1994, 1997, 2002, 2005, 2009, 2011, 2013, 2015, 2018, 2024, 2028, 2030, 2032, 2042, 2044, 2046, 2047, 2048, 2052, 2054], "occas": [1, 7, 1987], "actual": [1, 8, 27, 33, 35, 47, 49, 54, 58, 254, 676, 786, 981, 1116, 1134, 1179, 1262, 1266, 1418, 1419, 1420, 1593, 1675, 1707, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1761, 1959, 1963, 1964, 1972, 1978, 1987, 1990, 1991, 1992, 1995, 1996, 2001, 2003, 2005, 2007, 2015, 2020, 2026, 2031, 2042, 2043, 2044, 2046, 2047], "signific": [1, 3, 27, 1769, 1829, 1987, 1990, 2024, 2046, 2050], "amount": [1, 2, 3, 4, 7, 21, 25, 27, 33, 42, 58, 916, 1023, 1049, 1051, 1055, 1247, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1434, 1476, 1491, 1539, 1576, 1700, 1701, 1703, 1704, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1979, 1987, 1989, 1990, 1993, 1994, 1997, 2007, 2020, 2024, 2042, 2048, 2052, 2054, 2056], "unless": [1, 2, 4, 7, 22, 25, 44, 46, 49, 50, 58, 146, 484, 495, 836, 854, 896, 897, 901, 939, 999, 1033, 1155, 1250, 1294, 1299, 1312, 1322, 1351, 1441, 1488, 1535, 1670, 1706, 1725, 1750, 1756, 1821, 1923, 1964, 1970, 1987, 1990, 1995, 2003, 2004, 2009, 2012, 2016, 2042], "heavi": [1, 25, 1987, 2005, 2043], "pressur": [1, 49, 1987], "might": [1, 2, 3, 4, 9, 14, 15, 18, 25, 27, 29, 30, 31, 42, 46, 54, 57, 58, 81, 83, 146, 482, 540, 889, 998, 1266, 1267, 1593, 1675, 1676, 1682, 1683, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1959, 1961, 1975, 1980, 1987, 1989, 1990, 1991, 1992, 1996, 1998, 2003, 2004, 2006, 2009, 2012, 2013, 2015, 2020, 2021, 2022, 2024, 2028, 2030, 2031, 2035, 2039, 2042, 2043, 2044, 2045, 2046, 2047, 2053, 2054], "keep": [1, 3, 5, 7, 21, 22, 27, 29, 30, 33, 42, 46, 47, 49, 60, 482, 1002, 1172, 1322, 1402, 1403, 1404, 1408, 1430, 1450, 1451, 1452, 1497, 1527, 1593, 1604, 1675, 1702, 1738, 1806, 1829, 1959, 1960, 1961, 1977, 1979, 1980, 1987, 1990, 1991, 1993, 1994, 1996, 2001, 2007, 2011, 2015, 2020, 2021, 2022, 2041, 2042, 2043, 2044, 2047, 2052, 2056], "track": [1, 30, 33, 46, 47, 60, 75, 76, 77, 82, 331, 911, 922, 1007, 1047, 1049, 1062, 1063, 1064, 1155, 1156, 1172, 1352, 1402, 1403, 1404, 1450, 1451, 1452, 1461, 1462, 1463, 1470, 1471, 1472, 1527, 1675, 1702, 1975, 1977, 1979, 1980, 1987, 1990, 1992, 1993, 1994, 1998, 1999, 2007, 2011, 2013, 2014, 2021, 2022, 2024, 2042, 2043, 2044, 2047, 2051], "appli": [1, 3, 5, 8, 12, 22, 27, 29, 30, 31, 33, 35, 42, 49, 53, 54, 55, 58, 60, 71, 77, 78, 79, 115, 317, 394, 468, 482, 509, 513, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 731, 734, 735, 736, 737, 738, 739, 754, 756, 762, 763, 764, 765, 766, 767, 768, 769, 770, 776, 777, 778, 779, 780, 806, 807, 808, 809, 836, 854, 896, 897, 899, 900, 901, 902, 912, 913, 915, 941, 944, 970, 980, 983, 1086, 1088, 1093, 1102, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1146, 1155, 1156, 1163, 1166, 1167, 1169, 1172, 1179, 1250, 1254, 1300, 1323, 1340, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1429, 1435, 1436, 1437, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1487, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1502, 1503, 1506, 1507, 1508, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1541, 1542, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1586, 1588, 1589, 1590, 1591, 1594, 1596, 1597, 1598, 1599, 1603, 1604, 1605, 1607, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1624, 1629, 1637, 1638, 1639, 1640, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1666, 1675, 1682, 1683, 1689, 1690, 1691, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1716, 1717, 1724, 1725, 1727, 1728, 1730, 1740, 1752, 1756, 1769, 1782, 1787, 1788, 1789, 1790, 1791, 1862, 1863, 1865, 1882, 1919, 1920, 1922, 1935, 1961, 1964, 1968, 1971, 1977, 1979, 1981, 1986, 1987, 1990, 1991, 1992, 1993, 1995, 1996, 1999, 2002, 2009, 2011, 2012, 2013, 2015, 2018, 2021, 2024, 2025, 2038, 2039, 2041, 2044, 2045, 2053], "save": [1, 5, 7, 11, 15, 22, 25, 27, 29, 46, 49, 492, 833, 885, 886, 896, 899, 901, 902, 1163, 1249, 1250, 1255, 1258, 1266, 1268, 1322, 1488, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1763, 1766, 1770, 1960, 1961, 1962, 1972, 1974, 1979, 1992, 1993, 1995, 1999, 2001, 2003, 2007, 2010, 2011, 2012, 2014, 2020, 2024, 2029, 2033, 2036, 2039, 2044, 2046, 2056], "modifi": [1, 18, 21, 22, 25, 26, 27, 29, 49, 58, 60, 256, 483, 484, 787, 834, 835, 836, 896, 897, 899, 900, 901, 902, 920, 921, 922, 970, 981, 982, 1204, 1247, 1250, 1253, 1254, 1270, 1430, 1488, 1531, 1533, 1535, 1584, 1585, 1668, 1669, 1670, 1673, 1674, 1675, 1680, 1681, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1752, 1753, 1754, 1755, 1756, 1759, 1767, 1848, 1961, 1964, 1978, 1986, 1990, 1992, 1993, 1999, 2004, 2012, 2013, 2015, 2020, 2025, 2028, 2030, 2034, 2041, 2042, 2043, 2044, 2050, 2054], "afterward": [1, 46, 1488, 1666, 1675, 1995, 2024], "onc": [1, 7, 9, 15, 21, 22, 25, 26, 27, 29, 31, 32, 34, 35, 42, 49, 52, 54, 57, 58, 896, 897, 898, 899, 901, 902, 904, 906, 923, 1098, 1250, 1254, 1322, 1424, 1488, 1675, 1693, 1695, 1727, 1765, 1769, 1785, 1831, 1835, 1926, 1961, 1964, 1968, 1973, 1975, 1977, 1986, 1987, 1989, 1990, 1992, 1995, 1996, 1998, 1999, 2011, 2012, 2024, 2029, 2039, 2041, 2044, 2047, 2051], "start": [1, 3, 4, 8, 9, 21, 22, 25, 27, 31, 33, 39, 41, 42, 43, 44, 49, 53, 57, 58, 229, 398, 429, 430, 492, 534, 694, 861, 890, 932, 933, 973, 1047, 1049, 1060, 1062, 1063, 1120, 1121, 1137, 1152, 1248, 1263, 1276, 1321, 1337, 1383, 1384, 1392, 1397, 1398, 1399, 1431, 1433, 1481, 1482, 1483, 1489, 1491, 1585, 1632, 1675, 1697, 1701, 1703, 1716, 1739, 1761, 1767, 1801, 1831, 1841, 1854, 1868, 1869, 1870, 1872, 1873, 1959, 1960, 1962, 1963, 1968, 1971, 1977, 1979, 1987, 1988, 1990, 1991, 1992, 1994, 1995, 1999, 2000, 2001, 2005, 2009, 2011, 2014, 2015, 2020, 2021, 2022, 2024, 2038, 2039, 2042, 2044, 2049, 2051], "sure": [1, 7, 9, 21, 25, 27, 32, 34, 43, 45, 52, 58, 857, 858, 889, 1149, 1254, 1266, 1267, 1323, 1675, 1728, 1763, 1905, 1964, 1978, 1987, 1991, 1994, 1996, 2005, 2009, 2014, 2015, 2020, 2021, 2022, 2024, 2026, 2029, 2044, 2046, 2054], "been": [1, 5, 7, 9, 11, 21, 22, 25, 26, 29, 30, 31, 33, 35, 42, 45, 49, 52, 53, 58, 80, 482, 484, 676, 756, 896, 897, 901, 973, 1002, 1004, 1009, 1037, 1040, 1097, 1102, 1156, 1253, 1254, 1260, 1265, 1322, 1439, 1446, 1458, 1503, 1558, 1593, 1675, 1682, 1683, 1692, 1697, 1701, 1703, 1723, 1724, 1739, 1759, 1760, 1761, 1767, 1769, 1785, 1882, 1898, 1926, 1937, 1940, 1952, 1968, 1970, 1972, 1975, 1977, 1978, 1979, 1986, 1987, 1989, 1990, 1995, 1996, 1997, 1999, 2001, 2003, 2005, 2007, 2009, 2011, 2012, 2020, 2022, 2024, 2029, 2036, 2039, 2040, 2044, 2050, 2054], "longer": [1, 25, 44, 53, 54, 482, 683, 886, 901, 915, 916, 1247, 1254, 1675, 1727, 1730, 1975, 1987, 1990, 2007, 2020, 2022, 2039, 2054], "find": [1, 7, 14, 25, 42, 54, 58, 78, 1098, 1168, 1170, 1204, 1272, 1323, 1418, 1419, 1420, 1458, 1737, 1775, 1786, 1821, 1887, 1959, 1972, 1973, 1977, 1979, 1987, 1989, 1990, 1991, 1992, 1994, 1996, 2001, 2003, 2007, 2009, 2010, 2015, 2020, 2024, 2027, 2029, 2031, 2033, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2053, 2054, 2055], "quick": [1, 7, 52, 1971, 1999, 2008, 2037, 2052], "guid": [1, 8, 21, 76, 78, 79, 1262, 1727, 1960, 1968, 1990, 1993, 2012, 2015, 2047, 2052], "var": [1, 35, 40, 42, 45, 1402, 1403, 1404, 1441, 1442, 1450, 1451, 1452, 1460, 1527, 1590, 1789, 1931, 1962, 1964, 1978, 2010, 2042, 2047, 2049, 2054], "thing": [1, 3, 7, 8, 25, 46, 54, 58, 1156, 1260, 1352, 1400, 1595, 1859, 1963, 1987, 1990, 1992, 1993, 1994, 1996, 2001, 2009, 2012, 2015, 2016, 2022, 2039, 2043, 2044, 2047, 2052, 2054], "detach": [1, 5, 218, 411, 444, 454, 965, 1155, 1250, 1407, 1488, 1577, 1595, 1863, 1901, 1961, 1962, 1978, 1980, 1992, 1994, 2009, 2010, 2017, 2024, 2028, 2030, 2053], "register_hook": [1, 1978, 1987], "name": [1, 2, 3, 14, 22, 25, 27, 30, 31, 33, 35, 36, 39, 40, 42, 44, 46, 47, 49, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 83, 676, 693, 743, 744, 753, 788, 810, 811, 812, 813, 820, 836, 850, 854, 928, 931, 933, 975, 1027, 1150, 1155, 1165, 1168, 1172, 1248, 1250, 1251, 1258, 1261, 1266, 1267, 1281, 1286, 1287, 1293, 1294, 1296, 1297, 1298, 1299, 1309, 1310, 1312, 1314, 1315, 1322, 1488, 1538, 1546, 1668, 1673, 1674, 1675, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1724, 1725, 1727, 1736, 1737, 1817, 1827, 1924, 1926, 1929, 1948, 1959, 1960, 1961, 1962, 1964, 1965, 1968, 1970, 1974, 1975, 1977, 1985, 1987, 1990, 1991, 1992, 1996, 1998, 1999, 2007, 2009, 2010, 2011, 2012, 2013, 2014, 2020, 2021, 2026, 2029, 2030, 2031, 2032, 2033, 2034, 2036, 2040, 2041, 2044, 2047, 2048, 2051, 2053, 2054, 2055, 2056, 2057], "factori": [1, 2, 11, 31, 33, 36, 40, 54, 820, 935, 1098, 1547, 1728, 1737, 1825, 1960, 1962, 1972, 1979, 1990, 1992, 2010, 2027, 2030, 2042, 2043], "ones": [1, 21, 25, 29, 31, 46, 49, 54, 55, 57, 58, 60, 62, 65, 67, 68, 69, 70, 71, 146, 250, 309, 398, 441, 442, 444, 511, 790, 855, 889, 905, 907, 908, 909, 910, 911, 915, 938, 950, 968, 1081, 1089, 1111, 1155, 1162, 1163, 1166, 1247, 1250, 1262, 1271, 1297, 1313, 1322, 1401, 1421, 1430, 1434, 1441, 1442, 1460, 1488, 1492, 1493, 1495, 1497, 1539, 1548, 1549, 1550, 1584, 1644, 1662, 1666, 1675, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1720, 1722, 1725, 1735, 1736, 1789, 1806, 1824, 1829, 1854, 1904, 1908, 1926, 1938, 1962, 1964, 1966, 1972, 1978, 1979, 1987, 1988, 1990, 1992, 2000, 2002, 2003, 2009, 2010, 2011, 2012, 2015, 2020, 2022, 2025, 2027, 2030, 2048, 2053, 2054], "autograd_tensor": 1, "kwarg": [1, 5, 14, 21, 25, 26, 27, 29, 42, 46, 47, 49, 58, 60, 576, 599, 743, 756, 758, 759, 815, 816, 817, 818, 820, 821, 886, 901, 902, 972, 1002, 1004, 1041, 1042, 1155, 1166, 1167, 1169, 1172, 1250, 1253, 1255, 1314, 1340, 1449, 1477, 1488, 1518, 1522, 1526, 1528, 1529, 1666, 1675, 1697, 1702, 1706, 1716, 1723, 1725, 1728, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1817, 1920, 1935, 1940, 1959, 1964, 1965, 1992, 1993, 1999, 2007, 2011, 2020, 2026, 2034, 2040, 2041, 2053, 2054, 2055], "base": [1, 3, 7, 9, 12, 14, 15, 21, 25, 26, 27, 29, 30, 31, 33, 35, 40, 42, 43, 44, 46, 47, 49, 54, 58, 81, 82, 83, 787, 792, 796, 798, 816, 817, 818, 820, 821, 857, 858, 896, 899, 901, 912, 913, 922, 968, 988, 1059, 1060, 1075, 1096, 1098, 1141, 1177, 1185, 1204, 1214, 1252, 1264, 1276, 1314, 1325, 1327, 1329, 1337, 1401, 1424, 1461, 1488, 1491, 1492, 1493, 1497, 1504, 1531, 1533, 1535, 1610, 1644, 1675, 1680, 1681, 1689, 1697, 1701, 1703, 1744, 1755, 1756, 1782, 1792, 1817, 1829, 1886, 1887, 1902, 1912, 1914, 1936, 1960, 1962, 1964, 1989, 1990, 1991, 1992, 1995, 1999, 2013, 2014, 2015, 2020, 2021, 2024, 2025, 2028, 2029, 2031, 2033, 2034, 2041, 2042, 2044, 2046, 2047], "static": [1, 3, 8, 14, 26, 31, 33, 46, 47, 49, 60, 65, 66, 69, 790, 795, 811, 813, 820, 822, 828, 853, 855, 885, 886, 887, 888, 901, 902, 1168, 1169, 1172, 1177, 1190, 1264, 1531, 1675, 1861, 1961, 1962, 1963, 1964, 1990, 1995, 1998, 2006, 2007, 2013, 2016, 2020, 2026, 2039, 2041, 2042, 2047], "Then": [1, 26, 43, 58, 924, 1434, 1539, 1692, 1737, 1924, 1987, 1988, 1990, 1991, 1992, 1993, 2002, 2003, 2009, 2011, 2012, 2020, 2021, 2033, 2039, 2041, 2045], "op": [1, 4, 22, 25, 46, 47, 49, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 78, 82, 83, 146, 499, 520, 600, 753, 788, 789, 790, 819, 822, 850, 857, 858, 889, 896, 899, 901, 902, 910, 958, 968, 1005, 1020, 1022, 1026, 1027, 1041, 1042, 1067, 1071, 1073, 1156, 1201, 1251, 1264, 1266, 1267, 1322, 1328, 1504, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1773, 1831, 1910, 1941, 1944, 1946, 1947, 1948, 1953, 1954, 1955, 1960, 1964, 1968, 1970, 1971, 1973, 1975, 1978, 1979, 1989, 1990, 1991, 1992, 2001, 2007, 2012, 2014, 2015, 2016, 2017, 2018, 2024, 2026, 2028, 2030, 2034, 2039, 2040, 2043, 2044, 2045, 2046, 2047, 2049, 2053, 2054], "directli": [1, 3, 7, 9, 14, 15, 21, 22, 25, 27, 30, 31, 32, 33, 41, 46, 47, 49, 53, 58, 60, 73, 553, 728, 743, 886, 896, 899, 901, 970, 1081, 1149, 1156, 1163, 1165, 1195, 1281, 1494, 1521, 1540, 1604, 1650, 1717, 1908, 1961, 1963, 1964, 1968, 1972, 1975, 1987, 1990, 1991, 1992, 1993, 1995, 1996, 1998, 1999, 2000, 2001, 2004, 2012, 2014, 2015, 2020, 2024, 2029, 2031, 2036, 2041, 2042, 2043, 2044, 2046, 2048, 2053, 2054], "ctx": [1, 40, 60, 64, 885, 886, 887, 896, 897, 898, 899, 900, 901, 902, 1968, 1986, 1992, 1993, 2009], "gradcheck": [1, 1860, 1960, 1992, 2024], "extend": [1, 21, 25, 27, 31, 34, 44, 58, 857, 886, 888, 896, 899, 901, 902, 1490, 1499, 1860, 1924, 1960, 1968, 1980, 1987, 1998, 2000, 2001, 2009, 2010, 2012, 2018, 2024, 2042, 2055], "staticmethod": [1, 60, 886, 888, 896, 897, 898, 899, 900, 901, 902, 1964, 1986, 1992, 2009, 2020], "result": [1, 3, 4, 5, 7, 8, 9, 12, 14, 18, 21, 22, 25, 27, 31, 33, 35, 40, 43, 46, 47, 49, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 83, 149, 217, 218, 250, 251, 311, 331, 394, 492, 494, 495, 552, 579, 580, 581, 583, 584, 614, 682, 683, 684, 685, 686, 689, 691, 692, 693, 695, 756, 789, 873, 875, 894, 895, 904, 905, 906, 907, 908, 909, 915, 916, 924, 936, 939, 950, 954, 959, 965, 967, 968, 971, 980, 984, 986, 1011, 1013, 1015, 1041, 1042, 1055, 1077, 1078, 1079, 1080, 1081, 1093, 1098, 1116, 1119, 1125, 1134, 1141, 1143, 1146, 1151, 1152, 1155, 1156, 1157, 1160, 1161, 1166, 1167, 1169, 1183, 1191, 1195, 1212, 1213, 1215, 1227, 1241, 1250, 1253, 1254, 1262, 1266, 1267, 1269, 1271, 1272, 1276, 1290, 1292, 1294, 1295, 1303, 1307, 1309, 1311, 1312, 1313, 1320, 1330, 1331, 1338, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1379, 1382, 1424, 1426, 1427, 1428, 1432, 1434, 1439, 1453, 1458, 1488, 1494, 1503, 1531, 1532, 1533, 1534, 1535, 1539, 1575, 1593, 1604, 1659, 1662, 1663, 1675, 1689, 1692, 1725, 1728, 1729, 1730, 1731, 1737, 1740, 1767, 1773, 1775, 1782, 1783, 1786, 1792, 1805, 1811, 1826, 1841, 1853, 1864, 1866, 1867, 1871, 1878, 1880, 1881, 1882, 1885, 1886, 1887, 1897, 1901, 1902, 1907, 1908, 1910, 1911, 1913, 1926, 1930, 1931, 1935, 1961, 1962, 1963, 1964, 1968, 1971, 1972, 1973, 1978, 1979, 1980, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1996, 1997, 1999, 2001, 2002, 2003, 2004, 2006, 2007, 2009, 2011, 2013, 2014, 2015, 2016, 2017, 2020, 2021, 2024, 2027, 2029, 2030, 2031, 2034, 2035, 2036, 2040, 2042, 2043, 2047, 2048, 2051, 2052, 2053, 2054, 2055], "save_for_backward": [1, 886, 896, 898, 900, 901, 902, 1986, 1987, 1992, 1993, 2009], "grad_output": [1, 60, 885, 896, 897, 901, 902, 910, 916, 920, 921, 1250, 1488, 1962, 1987, 1990, 1992, 1993, 1999, 2049], "saved_tensor": [1, 896, 898, 899, 900, 901, 902, 1986, 1987, 1992, 1993], "avail": [1, 2, 5, 8, 9, 14, 15, 21, 25, 27, 33, 42, 43, 47, 78, 79, 994, 1021, 1023, 1024, 1035, 1038, 1045, 1046, 1065, 1066, 1068, 1098, 1185, 1257, 1314, 1315, 1340, 1531, 1540, 1604, 1644, 1663, 1775, 1829, 1882, 1887, 1923, 1926, 1945, 1951, 1959, 1960, 1961, 1963, 1964, 1968, 1971, 1977, 1987, 1990, 1992, 1997, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2011, 2012, 2014, 2015, 2016, 2020, 2034, 2035, 2041, 2046, 2054, 2055], "inspect": [1, 25, 46, 49, 58, 927, 1250, 1262, 1986, 1992, 1998, 2012, 2016, 2027, 2044, 2046, 2048, 2055], "cost": [1, 3, 4, 8, 9, 22, 49, 482, 958, 968, 1306, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1644, 1825, 1990, 1995, 2003, 2016, 2021, 2027, 2050, 2054], "both": [1, 2, 3, 14, 21, 22, 25, 26, 27, 31, 35, 40, 41, 42, 43, 46, 47, 49, 57, 58, 60, 68, 69, 93, 335, 495, 725, 764, 765, 768, 769, 770, 789, 847, 888, 895, 901, 902, 905, 906, 907, 908, 909, 936, 974, 988, 1022, 1093, 1099, 1100, 1101, 1114, 1144, 1145, 1146, 1155, 1193, 1195, 1204, 1211, 1227, 1240, 1241, 1247, 1250, 1264, 1272, 1273, 1321, 1337, 1345, 1351, 1365, 1366, 1397, 1398, 1402, 1403, 1404, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1442, 1448, 1450, 1451, 1452, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1481, 1482, 1483, 1488, 1494, 1527, 1535, 1539, 1540, 1543, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1618, 1619, 1620, 1644, 1675, 1684, 1686, 1695, 1725, 1742, 1743, 1755, 1767, 1790, 1791, 1829, 1859, 1861, 1863, 1882, 1886, 1907, 1908, 1946, 1961, 1963, 1964, 1968, 1971, 1978, 1979, 1981, 1986, 1987, 1988, 1992, 1993, 1995, 1996, 1999, 2002, 2003, 2004, 2009, 2012, 2013, 2015, 2018, 2020, 2022, 2024, 2025, 2026, 2031, 2033, 2034, 2035, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2054], "cpu": [1, 4, 5, 14, 17, 21, 25, 27, 47, 49, 60, 65, 69, 70, 71, 84, 115, 192, 285, 322, 331, 441, 442, 443, 444, 445, 454, 482, 576, 585, 861, 876, 929, 931, 937, 946, 986, 989, 990, 1001, 1011, 1012, 1013, 1015, 1099, 1101, 1111, 1116, 1134, 1146, 1150, 1152, 1153, 1201, 1202, 1208, 1209, 1250, 1258, 1260, 1261, 1270, 1280, 1282, 1286, 1287, 1288, 1289, 1291, 1293, 1296, 1298, 1299, 1305, 1308, 1311, 1314, 1315, 1321, 1322, 1337, 1340, 1351, 1362, 1424, 1430, 1488, 1659, 1675, 1680, 1681, 1716, 1717, 1731, 1734, 1785, 1794, 1796, 1798, 1800, 1801, 1825, 1830, 1831, 1832, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1853, 1863, 1868, 1869, 1870, 1871, 1872, 1873, 1886, 1901, 1902, 1903, 1912, 1914, 1919, 1923, 1957, 1960, 1961, 1962, 1964, 1968, 1972, 1973, 1977, 1978, 1980, 1990, 1992, 1993, 1995, 1997, 1999, 2002, 2003, 2005, 2009, 2010, 2013, 2014, 2016, 2019, 2020, 2024, 2026, 2027, 2030, 2031, 2032, 2035, 2036, 2039, 2041, 2043, 2044, 2046, 2048, 2051, 2052, 2054], "There": [1, 5, 6, 7, 9, 12, 14, 20, 25, 27, 42, 46, 47, 50, 54, 55, 58, 80, 81, 83, 676, 730, 789, 886, 901, 902, 968, 1156, 1424, 1458, 1503, 1644, 1675, 1682, 1683, 1723, 1728, 1959, 1961, 1963, 1964, 1970, 1971, 1979, 1987, 1990, 1992, 1993, 1994, 1998, 2001, 2005, 2006, 2009, 2012, 2014, 2015, 2016, 2020, 2022, 2030, 2032, 2039, 2042, 2043, 2044, 2047, 2053, 2054], "moment": [1, 60, 66, 768, 769, 770, 984, 1742, 1743, 1744, 1746, 1752, 1756, 1973, 1977, 1980, 2014, 2020, 2047, 2051], "nvprof": [1, 4, 925, 1990], "regist": [1, 15, 22, 25, 29, 31, 42, 44, 46, 47, 49, 58, 76, 78, 79, 80, 81, 83, 483, 484, 676, 788, 789, 850, 920, 921, 968, 1044, 1250, 1322, 1488, 1489, 1490, 1498, 1499, 1516, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1689, 1690, 1692, 1693, 1695, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1924, 1926, 1968, 1975, 1977, 1991, 1992, 1998, 1999, 2004, 2007, 2009, 2012, 2020, 2035, 2043, 2046, 2050], "activ": [1, 5, 7, 9, 30, 44, 46, 49, 55, 75, 77, 788, 790, 792, 799, 803, 837, 838, 847, 857, 858, 1009, 1024, 1037, 1055, 1155, 1157, 1167, 1323, 1396, 1426, 1427, 1428, 1432, 1442, 1460, 1487, 1489, 1506, 1517, 1531, 1533, 1535, 1586, 1624, 1647, 1675, 1693, 1695, 1725, 1730, 1935, 1960, 1973, 1977, 1990, 1992, 1993, 1995, 1999, 2009, 2011, 2013, 2014, 2015, 2016, 2017, 2020, 2024, 2033, 2034, 2039, 2043, 2049, 2054], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 2014], "use_devic": 1, "record_shap": [1, 2014], "with_flop": [1, 2014], "profile_memori": [1, 2014], "with_stack": [1, 2014], "with_modul": [1, 2014], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 2014], "hold": [1, 25, 27, 40, 42, 44, 45, 46, 49, 53, 57, 58, 533, 1323, 1434, 1489, 1490, 1498, 1499, 1539, 1666, 1675, 1677, 1678, 1692, 1702, 1716, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1868, 1869, 1870, 1871, 1872, 1873, 1988, 1990, 1992, 1994, 1998, 2001, 2011, 2014, 2020, 2021, 2022, 2024, 2026, 2027, 2029, 2030, 2042, 2044, 2047], "summari": [1, 3, 43, 1056, 1833, 1960, 1975, 1995, 2029, 2034, 2048, 2054, 2056], "hood": [1, 46, 57, 1977, 1987, 1990, 1991, 2001, 2012, 2022, 2041, 2043, 2047], "just": [1, 2, 7, 14, 22, 25, 31, 33, 40, 46, 58, 585, 683, 693, 786, 819, 822, 885, 887, 901, 902, 924, 928, 981, 982, 1172, 1266, 1267, 1305, 1308, 1313, 1314, 1340, 1426, 1427, 1428, 1432, 1675, 1695, 1696, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1825, 1911, 1912, 1913, 1914, 1924, 1959, 1961, 1977, 1986, 1987, 1992, 1993, 1996, 1998, 1999, 2000, 2004, 2012, 2013, 2020, 2021, 2024, 2027, 2028, 2030, 2034, 2039, 2040, 2041, 2042, 2043, 2044, 2047, 2053], "record": [1, 5, 29, 34, 35, 36, 40, 43, 46, 57, 58, 441, 442, 443, 444, 445, 482, 492, 815, 816, 817, 818, 821, 823, 861, 934, 937, 946, 1001, 1002, 1004, 1099, 1100, 1101, 1111, 1116, 1134, 1152, 1153, 1154, 1208, 1209, 1250, 1266, 1270, 1321, 1337, 1362, 1365, 1366, 1424, 1488, 1734, 1735, 1737, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1868, 1869, 1870, 1871, 1872, 1873, 1901, 1957, 1958, 1961, 1963, 1972, 1980, 1986, 1987, 1990, 1992, 1995, 2006, 2007, 2009, 2014, 2020, 2029, 2030, 2031, 2032, 2033, 2034, 2039, 2042, 2044, 2054, 2056], "event": [1, 28, 31, 33, 41, 44, 57, 482, 928, 929, 930, 1002, 1004, 1055, 1058, 1266, 1267, 1328, 1365, 1366, 1644, 1960, 1975, 1977, 1990, 2014, 2029, 2052, 2056], "being": [1, 3, 5, 9, 12, 21, 25, 27, 29, 31, 33, 35, 42, 43, 44, 46, 47, 49, 53, 54, 57, 58, 60, 69, 77, 93, 398, 411, 756, 789, 795, 888, 901, 902, 904, 910, 966, 980, 1002, 1010, 1057, 1061, 1075, 1076, 1111, 1144, 1145, 1156, 1165, 1166, 1171, 1239, 1250, 1254, 1340, 1349, 1354, 1400, 1401, 1421, 1423, 1430, 1431, 1435, 1436, 1441, 1447, 1454, 1479, 1480, 1488, 1491, 1492, 1493, 1494, 1495, 1502, 1519, 1520, 1536, 1558, 1565, 1566, 1576, 1588, 1589, 1593, 1605, 1629, 1637, 1675, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1709, 1710, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1785, 1786, 1880, 1881, 1882, 1930, 1931, 1961, 1964, 1971, 1975, 1978, 1979, 1980, 1986, 1987, 1990, 1992, 1993, 1994, 1995, 1996, 1999, 2001, 2002, 2003, 2007, 2009, 2012, 2015, 2018, 2020, 2021, 2024, 2031, 2033, 2036, 2039, 2042, 2043, 2044, 2047, 2052, 2054, 2055], "those": [1, 2, 4, 5, 14, 21, 22, 25, 27, 29, 31, 46, 49, 54, 57, 58, 77, 676, 820, 915, 1013, 1023, 1086, 1088, 1167, 1182, 1266, 1308, 1314, 1322, 1361, 1392, 1400, 1401, 1421, 1423, 1431, 1447, 1454, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1536, 1540, 1565, 1566, 1576, 1585, 1605, 1629, 1637, 1671, 1672, 1737, 1756, 1886, 1908, 1935, 1963, 1978, 1979, 1986, 1987, 1990, 1992, 1993, 1995, 1997, 1999, 2003, 2004, 2009, 2011, 2018, 2020, 2022, 2039, 2041, 2043, 2044, 2046, 2047, 2048, 2051, 2054], "python": [1, 3, 4, 9, 12, 14, 15, 18, 21, 29, 31, 32, 33, 35, 36, 39, 40, 42, 43, 46, 47, 49, 58, 60, 68, 69, 348, 585, 620, 676, 777, 876, 904, 905, 906, 907, 908, 909, 911, 915, 916, 954, 955, 967, 968, 970, 980, 1035, 1041, 1042, 1044, 1093, 1098, 1116, 1118, 1146, 1152, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1226, 1248, 1250, 1251, 1253, 1254, 1255, 1261, 1262, 1266, 1322, 1489, 1490, 1498, 1499, 1644, 1675, 1779, 1801, 1805, 1825, 1826, 1861, 1926, 1927, 1935, 1950, 1959, 1968, 1970, 1972, 1976, 1977, 1979, 1987, 1988, 1989, 1990, 1991, 1993, 1994, 1998, 2001, 2004, 2005, 2006, 2007, 2012, 2015, 2019, 2020, 2021, 2022, 2027, 2030, 2031, 2035, 2036, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2050, 2051, 2054, 2055, 2056], "report": [1, 3, 4, 18, 25, 35, 43, 57, 58, 80, 81, 83, 1001, 1055, 1159, 1160, 1162, 1986, 1990, 2013, 2024, 2044, 2048, 2051, 2054, 2056], "runtim": [1, 3, 5, 14, 25, 30, 33, 46, 47, 58, 823, 874, 928, 1096, 1098, 1172, 1179, 1185, 1190, 1214, 1250, 1256, 1266, 1488, 1677, 1678, 1738, 1781, 1923, 1936, 1964, 1978, 1979, 1987, 1990, 1992, 2001, 2006, 2007, 2008, 2009, 2015, 2035, 2042, 2044, 2050], "note": [1, 2, 3, 5, 8, 11, 12, 14, 15, 18, 20, 21, 22, 25, 27, 29, 30, 31, 32, 33, 40, 42, 44, 46, 47, 49, 53, 55, 57, 58, 60, 68, 69, 80, 81, 82, 83, 146, 254, 373, 482, 484, 495, 496, 509, 511, 513, 731, 737, 738, 739, 787, 789, 790, 791, 795, 837, 857, 861, 880, 889, 896, 899, 901, 904, 905, 906, 907, 908, 909, 910, 911, 916, 922, 924, 931, 952, 958, 968, 980, 998, 1073, 1081, 1086, 1098, 1119, 1149, 1152, 1167, 1192, 1204, 1237, 1247, 1248, 1250, 1251, 1257, 1323, 1345, 1365, 1366, 1400, 1401, 1407, 1418, 1419, 1420, 1421, 1423, 1430, 1431, 1435, 1439, 1441, 1447, 1453, 1454, 1458, 1479, 1480, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1498, 1499, 1502, 1503, 1510, 1519, 1520, 1527, 1531, 1536, 1540, 1548, 1565, 1566, 1576, 1584, 1585, 1593, 1604, 1605, 1629, 1632, 1637, 1638, 1651, 1666, 1675, 1676, 1682, 1683, 1730, 1736, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1759, 1761, 1767, 1769, 1785, 1792, 1867, 1868, 1869, 1870, 1872, 1873, 1878, 1882, 1886, 1908, 1923, 1924, 1926, 1935, 1959, 1961, 1962, 1965, 1971, 1977, 1980, 1981, 1987, 1988, 1989, 1991, 1992, 1993, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2007, 2009, 2011, 2012, 2014, 2016, 2018, 2019, 2021, 2022, 2024, 2026, 2028, 2029, 2036, 2041, 2042, 2045, 2052, 2053, 2054, 2057], "propag": [1, 27, 28, 31, 33, 42, 58, 60, 69, 509, 682, 685, 686, 687, 691, 692, 693, 694, 762, 763, 764, 765, 775, 778, 779, 781, 782, 783, 834, 836, 936, 1144, 1145, 1379, 1682, 1683, 1867, 1960, 1977, 1978, 1986, 1990, 1992, 1996, 1998, 2020, 2033, 2034, 2042, 2043, 2044, 2047, 2053], "async": [1, 25, 26, 57, 599, 1675, 1965, 1990, 1998, 2026], "task": [1, 3, 7, 22, 50, 55, 1253, 1269, 1450, 1451, 1452, 1964, 1989, 1998, 1999, 2001, 2005, 2044], "cuda": [1, 3, 4, 5, 14, 16, 20, 21, 22, 25, 27, 29, 30, 49, 56, 84, 146, 285, 309, 317, 331, 336, 482, 511, 513, 520, 576, 861, 873, 875, 889, 910, 931, 937, 939, 946, 968, 973, 999, 1000, 1001, 1002, 1004, 1005, 1020, 1022, 1033, 1099, 1100, 1101, 1111, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1150, 1153, 1208, 1209, 1250, 1270, 1272, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1299, 1305, 1308, 1311, 1312, 1314, 1315, 1321, 1322, 1337, 1340, 1356, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1430, 1458, 1488, 1503, 1527, 1547, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1585, 1593, 1604, 1632, 1644, 1663, 1664, 1665, 1666, 1675, 1677, 1678, 1680, 1681, 1682, 1683, 1729, 1731, 1734, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1785, 1794, 1796, 1798, 1800, 1801, 1825, 1829, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1864, 1868, 1869, 1870, 1871, 1872, 1873, 1886, 1901, 1903, 1912, 1914, 1919, 1923, 1957, 1960, 1962, 1968, 1972, 1978, 1980, 1992, 1993, 1995, 1999, 2002, 2009, 2010, 2011, 2013, 2014, 2019, 2020, 2024, 2026, 2027, 2030, 2031, 2032, 2035, 2036, 2041, 2043, 2046, 2051, 2054], "cudaev": 1, "approxim": [1, 3, 22, 29, 42, 58, 1163, 1204, 1314, 1323, 1392, 1437, 1502, 1517, 1524, 1591, 1637, 1647, 1690, 1739, 1756, 1775, 1829, 1887, 1908, 1962, 1964, 1990, 1991, 1992, 1996, 2009, 2049, 2057], "4u": 1, "shape": [1, 5, 8, 11, 12, 22, 25, 30, 31, 47, 49, 51, 53, 55, 58, 59, 60, 61, 62, 65, 66, 68, 72, 93, 167, 187, 204, 214, 396, 398, 441, 443, 445, 467, 493, 494, 509, 511, 513, 540, 562, 613, 676, 681, 683, 684, 693, 731, 741, 742, 752, 754, 756, 760, 762, 763, 764, 765, 768, 769, 770, 777, 792, 874, 880, 896, 898, 901, 905, 907, 908, 909, 928, 938, 939, 941, 944, 949, 951, 955, 956, 960, 961, 968, 980, 983, 1014, 1088, 1089, 1090, 1092, 1093, 1098, 1099, 1101, 1103, 1118, 1119, 1120, 1121, 1129, 1130, 1131, 1137, 1143, 1144, 1145, 1146, 1153, 1160, 1161, 1165, 1166, 1167, 1172, 1185, 1192, 1194, 1207, 1212, 1213, 1217, 1225, 1227, 1241, 1247, 1264, 1266, 1267, 1270, 1275, 1276, 1280, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1339, 1340, 1344, 1352, 1357, 1358, 1373, 1374, 1385, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1548, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1584, 1585, 1589, 1593, 1595, 1604, 1605, 1610, 1618, 1619, 1620, 1630, 1631, 1634, 1635, 1636, 1638, 1644, 1663, 1666, 1675, 1677, 1678, 1689, 1692, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1731, 1734, 1736, 1738, 1773, 1782, 1786, 1790, 1791, 1794, 1796, 1797, 1798, 1805, 1807, 1808, 1812, 1821, 1824, 1848, 1863, 1864, 1866, 1869, 1871, 1877, 1882, 1883, 1886, 1897, 1904, 1908, 1918, 1919, 1920, 1921, 1935, 1938, 1957, 1961, 1962, 1964, 1968, 1978, 1979, 1980, 1987, 1988, 1990, 1992, 1993, 1994, 2007, 2010, 2014, 2017, 2020, 2024, 2025, 2029, 2030, 2031, 2032, 2035, 2041, 2044, 2049, 2053, 2054], "about": [1, 8, 9, 12, 17, 21, 25, 26, 27, 29, 33, 35, 39, 41, 43, 46, 50, 54, 58, 82, 251, 482, 494, 614, 915, 916, 922, 973, 980, 1006, 1007, 1023, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1062, 1063, 1064, 1156, 1171, 1172, 1179, 1280, 1287, 1431, 1716, 1752, 1756, 1767, 1828, 1950, 1959, 1961, 1963, 1964, 1968, 1971, 1989, 1990, 1991, 1992, 1994, 1995, 1998, 2001, 2002, 2004, 2006, 2012, 2014, 2015, 2018, 2021, 2022, 2024, 2028, 2030, 2040, 2042, 2044, 2047, 2050, 2054], "dimens": [1, 11, 21, 25, 30, 31, 46, 49, 54, 55, 58, 60, 65, 69, 72, 80, 214, 228, 229, 250, 256, 309, 311, 313, 317, 429, 430, 468, 469, 470, 489, 509, 511, 513, 533, 539, 541, 542, 556, 579, 580, 581, 583, 584, 603, 613, 682, 688, 689, 691, 692, 693, 695, 731, 754, 775, 777, 781, 870, 871, 872, 873, 882, 883, 884, 888, 901, 902, 910, 947, 955, 958, 959, 960, 961, 962, 998, 1013, 1015, 1077, 1078, 1079, 1080, 1081, 1086, 1087, 1088, 1089, 1090, 1096, 1098, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1137, 1167, 1168, 1169, 1170, 1171, 1175, 1179, 1192, 1204, 1213, 1214, 1225, 1227, 1247, 1271, 1272, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1330, 1331, 1338, 1341, 1345, 1348, 1350, 1351, 1352, 1353, 1356, 1358, 1372, 1379, 1380, 1381, 1382, 1383, 1384, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1427, 1429, 1430, 1431, 1433, 1434, 1437, 1438, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1460, 1468, 1469, 1474, 1475, 1476, 1477, 1478, 1479, 1482, 1483, 1487, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1506, 1507, 1508, 1510, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1535, 1536, 1537, 1538, 1539, 1558, 1564, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1592, 1593, 1594, 1595, 1604, 1607, 1610, 1611, 1612, 1630, 1631, 1632, 1644, 1650, 1651, 1663, 1682, 1683, 1689, 1690, 1691, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1710, 1711, 1717, 1718, 1720, 1722, 1724, 1727, 1729, 1730, 1773, 1776, 1783, 1785, 1786, 1787, 1792, 1806, 1807, 1808, 1812, 1821, 1823, 1824, 1833, 1854, 1858, 1862, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1879, 1880, 1881, 1882, 1885, 1886, 1896, 1898, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1922, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1960, 1962, 1963, 1964, 1980, 1985, 1988, 1990, 1993, 1994, 1996, 2002, 2007, 2013, 2015, 2024, 2025, 2027, 2029, 2030, 2036, 2042, 2049], "collect": [1, 3, 7, 21, 26, 27, 29, 33, 42, 49, 57, 58, 795, 796, 820, 857, 858, 956, 1037, 1099, 1213, 1352, 1675, 1706, 1734, 1794, 1798, 1957, 1960, 1962, 1963, 1964, 1968, 1975, 1990, 1991, 1993, 2011, 2014, 2015, 2018, 2022, 2024, 2029, 2031, 2044, 2047, 2051, 2053, 2054, 2056], "further": [1, 4, 9, 12, 14, 22, 25, 49, 57, 60, 70, 71, 482, 1172, 1195, 1254, 1290, 1392, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1675, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1773, 1964, 1971, 1995, 1999, 2001, 2012, 2014, 2022, 2029, 2034, 2038, 2042, 2049, 2052, 2054], "group": [1, 3, 9, 21, 22, 26, 27, 29, 33, 39, 42, 43, 44, 45, 49, 52, 58, 606, 676, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 768, 769, 770, 876, 928, 1172, 1408, 1415, 1416, 1417, 1418, 1419, 1420, 1442, 1464, 1465, 1466, 1467, 1468, 1469, 1527, 1568, 1569, 1570, 1571, 1572, 1573, 1594, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1920, 1959, 1960, 1962, 1964, 1977, 1985, 1990, 1991, 1995, 2009, 2011, 2012, 2014, 2020, 2029, 2040, 2044, 2049, 2054], "prof": [1, 39, 931, 2014, 2044, 2052, 2054], "key_averag": [1, 931, 2014], "group_by_input_shap": [1, 928, 2014], "skew": [1, 3, 4, 1302, 1689], "neglig": [1, 1263, 1829], "bottom": [1, 49, 1593, 1971, 2052], "But": [1, 7, 49, 57, 482, 1266, 1296, 1675, 1987, 1992, 1994, 1996, 2003, 2012, 2013, 2024, 2028, 2043, 2044, 2047, 2048, 2055], "total": [1, 3, 4, 7, 21, 22, 25, 39, 41, 42, 43, 49, 873, 929, 931, 1015, 1050, 1055, 1068, 1152, 1212, 1213, 1360, 1407, 1434, 1447, 1454, 1479, 1494, 1539, 1631, 1675, 1680, 1729, 1731, 1733, 1761, 1767, 1807, 1833, 1882, 1959, 1963, 1975, 1990, 1995, 1997, 2001, 2011, 2024], "artifici": [1, 2024], "increas": [1, 3, 7, 22, 25, 31, 39, 49, 676, 850, 896, 898, 901, 952, 1023, 1055, 1098, 1212, 1213, 1392, 1401, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1500, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1635, 1636, 1644, 1754, 1760, 1761, 1765, 1767, 1769, 1821, 1829, 1908, 1929, 1962, 1970, 1976, 1989, 1990, 1997, 2001, 2016, 2024, 2039, 2044, 2048], "estim": [1, 3, 21, 31, 984, 988, 1204, 1247, 1402, 1403, 1404, 1437, 1441, 1442, 1450, 1451, 1452, 1460, 1527, 1591, 1690, 1753, 1849, 2014], "flop": [1, 2014], "hardwar": [1, 8, 855, 857, 858, 1286, 1287, 1314, 1923, 1990, 2001, 2003, 2016, 2024, 2044, 2046, 2054], "matrix": [1, 2, 22, 25, 31, 187, 204, 682, 685, 686, 687, 756, 936, 938, 947, 948, 956, 958, 959, 960, 961, 968, 984, 988, 1081, 1085, 1086, 1088, 1098, 1167, 1195, 1200, 1215, 1271, 1280, 1281, 1282, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1318, 1320, 1323, 1331, 1340, 1342, 1345, 1355, 1374, 1376, 1430, 1431, 1439, 1458, 1539, 1548, 1549, 1550, 1584, 1585, 1689, 1695, 1724, 1730, 1773, 1774, 1775, 1785, 1829, 1856, 1859, 1863, 1864, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1878, 1886, 1887, 1903, 1906, 1908, 1910, 1911, 1912, 1913, 1914, 1929, 1935, 1960, 1964, 1978, 1979, 1980, 1985, 1989, 1990, 1992, 1996, 1999, 2002, 2014, 2024, 2029, 2030, 2044], "2d": [1, 27, 31, 583, 584, 696, 699, 702, 731, 735, 738, 762, 764, 769, 775, 779, 781, 782, 783, 984, 988, 1086, 1098, 1306, 1307, 1390, 1394, 1398, 1401, 1402, 1403, 1416, 1419, 1423, 1427, 1431, 1435, 1450, 1451, 1456, 1482, 1491, 1493, 1494, 1495, 1540, 1541, 1542, 1553, 1556, 1558, 1561, 1566, 1569, 1572, 1580, 1585, 1588, 1615, 1619, 1629, 1632, 1690, 1724, 1791, 1866, 1871, 1910, 1973, 1985, 1992, 2014, 2015, 2024], "alloc": [1, 4, 11, 18, 22, 27, 31, 33, 42, 49, 250, 327, 441, 442, 443, 444, 445, 482, 1000, 1002, 1004, 1006, 1007, 1009, 1022, 1023, 1024, 1047, 1049, 1051, 1053, 1054, 1055, 1056, 1063, 1064, 1068, 1099, 1101, 1150, 1169, 1174, 1177, 1179, 1197, 1359, 1360, 1361, 1369, 1794, 1798, 1800, 1825, 1901, 1940, 1946, 1960, 1977, 1980, 1987, 1991, 1995, 1997, 2001, 2007, 2014, 2027, 2038, 2039, 2042, 2043, 2052], "dealloc": [1, 58, 482, 1152, 1977, 1990, 1994, 1997, 2014], "line": [1, 4, 18, 25, 33, 46, 47, 58, 676, 911, 928, 1098, 1156, 1250, 1261, 1488, 1558, 1593, 1833, 1861, 1961, 1964, 1965, 1972, 1980, 1988, 1992, 1996, 1997, 2003, 2005, 2009, 2014, 2024, 2038, 2041, 2044, 2046, 2047, 2048, 2051, 2054, 2056], "hierarchi": [1, 27, 46, 58, 836, 1254, 1742, 1743, 1755, 1965, 1992, 2014, 2015, 2042], "callstack": [1, 25, 2014], "A": [1, 2, 3, 5, 7, 8, 9, 12, 14, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 39, 42, 43, 44, 46, 47, 49, 50, 55, 57, 60, 61, 62, 65, 81, 84, 556, 576, 579, 580, 581, 590, 620, 676, 688, 693, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 741, 742, 752, 757, 758, 759, 760, 761, 786, 788, 810, 854, 855, 857, 858, 930, 937, 946, 947, 949, 954, 959, 960, 961, 967, 968, 970, 973, 974, 975, 980, 984, 988, 1001, 1002, 1004, 1012, 1014, 1015, 1083, 1098, 1103, 1111, 1112, 1113, 1125, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1172, 1173, 1194, 1204, 1207, 1208, 1209, 1213, 1240, 1241, 1242, 1243, 1246, 1248, 1250, 1253, 1258, 1261, 1263, 1266, 1267, 1271, 1275, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1320, 1323, 1331, 1339, 1340, 1341, 1342, 1346, 1385, 1401, 1405, 1407, 1423, 1426, 1427, 1428, 1430, 1431, 1432, 1440, 1441, 1449, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1478, 1487, 1488, 1494, 1516, 1521, 1523, 1531, 1536, 1537, 1547, 1551, 1558, 1564, 1576, 1595, 1605, 1612, 1624, 1644, 1650, 1651, 1666, 1676, 1677, 1678, 1684, 1686, 1689, 1692, 1695, 1717, 1718, 1721, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1750, 1752, 1753, 1754, 1755, 1756, 1760, 1761, 1763, 1766, 1767, 1769, 1775, 1785, 1787, 1788, 1789, 1790, 1791, 1802, 1808, 1814, 1817, 1849, 1858, 1861, 1862, 1865, 1877, 1881, 1882, 1886, 1887, 1905, 1910, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1922, 1923, 1931, 1935, 1938, 1940, 1959, 1961, 1962, 1963, 1964, 1968, 1971, 1973, 1978, 1979, 1985, 1986, 1989, 1990, 1992, 1993, 1994, 1995, 2001, 2002, 2004, 2009, 2011, 2012, 2013, 2014, 2015, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2029, 2030, 2034, 2039, 2040, 2041, 2043, 2044, 2046, 2047, 2049, 2052, 2053, 2054, 2055, 2056, 2057], "aten": [1, 3, 12, 14, 18, 46, 47, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 78, 81, 1041, 1156, 1374, 1736, 1737, 1861, 1961, 1962, 1968, 1989, 1992, 2005, 2007, 2010, 2014, 2015, 2024, 2035, 2040, 2045, 2048, 2054], "torchscript": [1, 3, 8, 29, 46, 47, 58, 613, 1248, 1251, 1253, 1254, 1255, 1257, 1262, 1266, 1268, 1737, 1960, 1965, 2004, 2014, 2020, 2056], "eager": [1, 8, 46, 968, 1073, 1169, 1171, 1248, 1251, 1262, 1832, 1964, 1990, 1995, 2014, 2016, 2018, 2030, 2039, 2044, 2045, 2046, 2051, 2054], "experiment": [1, 2, 22, 25, 27, 29, 30, 46, 47, 49, 58, 60, 63, 68, 69, 72, 229, 904, 906, 910, 968, 975, 1072, 1156, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1281, 1292, 1294, 1295, 1299, 1312, 1675, 1756, 1960, 1961, 1963, 1972, 1978, 1979, 1990, 1991, 2003, 2005, 2007, 2009, 2012, 2013, 2014, 2042, 2043, 2044, 2054], "kineto": [1, 924, 2014], "_experimentalconfig": [1, 2014], "librari": [1, 2, 3, 4, 8, 9, 11, 14, 15, 21, 25, 32, 40, 44, 50, 53, 54, 55, 58, 676, 924, 986, 1002, 1025, 1029, 1041, 1149, 1263, 1294, 1340, 1853, 1975, 1989, 1990, 1991, 1992, 1993, 1994, 1998, 1999, 2001, 2002, 2005, 2009, 2012, 2014, 2015, 2020, 2036, 2044, 2055], "100": [1, 21, 25, 29, 31, 58, 60, 68, 69, 74, 296, 734, 735, 738, 739, 924, 1211, 1250, 1262, 1268, 1306, 1321, 1328, 1337, 1352, 1373, 1392, 1400, 1401, 1402, 1403, 1404, 1416, 1417, 1419, 1420, 1422, 1423, 1450, 1451, 1452, 1488, 1495, 1497, 1527, 1536, 1575, 1576, 1629, 1745, 1757, 1758, 1763, 1764, 1765, 1766, 1768, 1770, 1771, 1787, 1842, 1921, 1962, 1964, 1977, 1989, 1990, 2009, 2011, 2016, 2022, 2024, 2029, 2040, 2041, 2047, 2048], "realli": [1, 7, 58, 970, 1172, 1964, 1987, 2012, 2043], "y": [1, 11, 14, 21, 31, 39, 46, 47, 49, 54, 55, 58, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 482, 613, 616, 777, 880, 882, 883, 884, 894, 895, 896, 899, 901, 902, 904, 905, 906, 907, 908, 909, 911, 912, 931, 950, 956, 981, 988, 1041, 1042, 1081, 1092, 1098, 1102, 1155, 1157, 1160, 1161, 1162, 1166, 1167, 1191, 1257, 1262, 1266, 1319, 1328, 1329, 1352, 1400, 1401, 1402, 1403, 1404, 1405, 1421, 1423, 1442, 1447, 1448, 1450, 1451, 1452, 1454, 1460, 1475, 1479, 1480, 1491, 1492, 1493, 1495, 1497, 1519, 1520, 1527, 1530, 1536, 1537, 1564, 1593, 1610, 1634, 1666, 1695, 1728, 1789, 1807, 1809, 1810, 1863, 1877, 1904, 1908, 1909, 1935, 1938, 1961, 1962, 1963, 1964, 1968, 1978, 1979, 1985, 1987, 1988, 1989, 1990, 1993, 1996, 1997, 2000, 2007, 2009, 2012, 2015, 2020, 2022, 2025, 2029, 2032, 2033, 2034, 2039, 2040, 2042, 2044, 2047, 2053, 2054], "column": [1, 3, 22, 25, 30, 187, 256, 580, 583, 931, 966, 984, 988, 1081, 1111, 1139, 1140, 1216, 1286, 1287, 1290, 1306, 1309, 1314, 1318, 1323, 1374, 1497, 1539, 1584, 1585, 1689, 1775, 1785, 1866, 1868, 1869, 1870, 1872, 1873, 1886, 1908, 1912, 1914, 1929, 1985, 1996, 2024], "were": [1, 2, 3, 18, 25, 33, 42, 45, 49, 54, 57, 58, 146, 317, 331, 467, 482, 850, 885, 887, 889, 901, 902, 910, 931, 1044, 1156, 1167, 1258, 1322, 1558, 1675, 1680, 1702, 1719, 1821, 1825, 1897, 1904, 1935, 1963, 1971, 1986, 1990, 1992, 2004, 2009, 2012, 2039, 2043, 2044, 2050, 2053, 2054], "remov": [1, 3, 21, 22, 25, 27, 30, 31, 43, 45, 49, 58, 483, 484, 509, 542, 553, 693, 793, 811, 812, 813, 855, 920, 921, 924, 931, 935, 958, 959, 1044, 1156, 1168, 1196, 1247, 1250, 1254, 1340, 1341, 1345, 1409, 1410, 1411, 1488, 1489, 1498, 1595, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1709, 1710, 1711, 1712, 1714, 1715, 1725, 1727, 1730, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1785, 1801, 1823, 1877, 1886, 1910, 1917, 1919, 1959, 1960, 1973, 1981, 1987, 1992, 1999, 2004, 2009, 2010, 2012, 2022, 2026, 2031, 2044, 2046, 2050, 2053], "breviti": [1, 58, 931, 988, 2009], "print": [1, 3, 5, 12, 18, 21, 25, 33, 34, 39, 40, 43, 46, 47, 49, 54, 57, 716, 724, 725, 730, 741, 742, 752, 760, 918, 920, 921, 931, 1155, 1156, 1165, 1172, 1250, 1254, 1257, 1258, 1262, 1340, 1405, 1408, 1449, 1475, 1488, 1500, 1501, 1575, 1632, 1635, 1636, 1695, 1705, 1706, 1707, 1708, 1711, 1721, 1725, 1737, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1833, 1927, 1959, 1961, 1962, 1972, 1987, 1989, 1990, 1992, 1999, 2000, 2007, 2008, 2009, 2010, 2012, 2014, 2020, 2029, 2030, 2033, 2034, 2039, 2040, 2041, 2044, 2046, 2047, 2054], "tabl": [1, 3, 25, 58, 931, 1430, 1584, 1962, 1964, 1992, 2011, 2012, 2014, 2015, 2020, 2024, 2031, 2043, 2045, 2048, 2051, 2054], "sort_bi": [1, 931, 2014], "self_cpu_time_tot": [1, 931, 2014], "avg": [1, 25, 931, 1740], "mul": [1, 18, 46, 58, 60, 63, 66, 68, 73, 416, 743, 744, 753, 931, 1227, 1375, 1961, 1962, 1964, 1978, 1980, 1992, 2009, 2010, 2017, 2021, 2024, 2027, 2033, 2040, 2042, 2049, 2053], "32": [1, 2, 22, 25, 46, 84, 742, 1152, 1247, 1260, 1340, 1398, 1426, 1427, 1428, 1432, 1433, 1435, 1436, 1456, 1476, 1482, 1493, 1531, 1532, 1533, 1534, 1535, 1547, 1558, 1588, 1589, 1595, 1644, 1979, 1980, 1999, 2003, 2007, 2009, 2018, 2024, 2027, 2029, 2030, 2041, 2047, 2048], "048m": 1, "200": [1, 29, 1250, 1328, 1488, 1787, 1964, 2024, 2054], "27": [1, 613, 1318, 1760, 1782, 1929, 2009], "041m": 1, "powbackward0": [1, 931], "9": [1, 7, 21, 22, 25, 32, 58, 60, 65, 309, 311, 313, 317, 397, 398, 467, 509, 556, 577, 579, 693, 741, 742, 850, 952, 958, 962, 966, 988, 1080, 1081, 1096, 1099, 1120, 1121, 1130, 1131, 1141, 1144, 1145, 1148, 1149, 1204, 1214, 1280, 1282, 1303, 1305, 1307, 1318, 1320, 1383, 1384, 1390, 1391, 1394, 1395, 1408, 1410, 1430, 1431, 1484, 1485, 1500, 1501, 1510, 1513, 1584, 1585, 1632, 1635, 1636, 1730, 1731, 1740, 1742, 1743, 1744, 1745, 1746, 1752, 1755, 1756, 1757, 1761, 1767, 1769, 1770, 1774, 1778, 1814, 1821, 1830, 1833, 1843, 1848, 1858, 1866, 1874, 1901, 1902, 1906, 1908, 1917, 1929, 1936, 1961, 1965, 1971, 1994, 1999, 2004, 2005, 2009, 2010, 2011, 2012, 2020, 2024, 2025, 2027, 2031], "727m": 1, "55": [1, 1441, 2009], "483m": 1, "accumulategrad": [1, 931, 1987], "148m": 1, "graphroot": [1, 931], "691": 1, "816u": 1, "emit": [1, 14, 34, 39, 58, 676, 1172, 1266, 1835, 1964, 1970, 2007, 2019, 2024], "nvtx": [1, 4, 1960], "program": [1, 3, 4, 8, 12, 18, 21, 24, 25, 34, 43, 45, 46, 47, 49, 58, 613, 924, 981, 982, 1047, 1049, 1156, 1182, 1829, 1961, 1963, 1965, 1976, 1987, 1990, 1994, 1998, 2000, 2001, 2003, 2004, 2005, 2007, 2015, 2029, 2035, 2039, 2041, 2042, 2043, 2044, 2046, 2050, 2052, 2054, 2056], "off": [1, 5, 7, 8, 14, 24, 25, 33, 49, 58, 77, 912, 913, 937, 946, 1059, 1156, 1208, 1209, 1247, 1266, 1314, 1397, 1398, 1399, 1401, 1481, 1482, 1483, 1593, 1632, 1989, 1990, 1991, 1994, 1998, 2002, 2003, 2014, 2015, 2016, 2020, 2021, 2042, 2043, 2047, 2051], "o": [1, 22, 25, 26, 27, 31, 43, 44, 45, 46, 58, 1250, 1322, 1365, 1366, 1367, 1459, 1488, 1494, 1675, 1817, 1959, 1965, 1977, 1987, 1990, 1991, 1994, 2005, 2012, 2013, 2020, 2036], "trace_nam": 1, "regular": [1, 3, 4, 25, 33, 43, 49, 52, 58, 1041, 1042, 1155, 1172, 1183, 1298, 1299, 1407, 1425, 1426, 1427, 1428, 1432, 1473, 1487, 1488, 1489, 1490, 1498, 1499, 1586, 1624, 1666, 1677, 1678, 1725, 1743, 1752, 1964, 1968, 1979, 1980, 1990, 1992, 1993, 1998, 1999, 2007, 2009, 2012, 2015, 2018, 2020, 2024, 2025, 2032, 2034, 2047], "command": [1, 4, 25, 33, 40, 43, 58, 1990, 1997, 2001, 2005, 2013, 2014, 2021, 2036, 2048, 2051], "unfortun": [1, 9, 21, 46, 1675, 1987, 1992, 2041, 2043], "wai": [1, 3, 5, 7, 8, 9, 14, 21, 22, 25, 27, 29, 31, 35, 39, 46, 49, 51, 52, 57, 58, 146, 576, 676, 792, 815, 818, 821, 857, 858, 886, 889, 901, 902, 905, 907, 908, 909, 910, 915, 922, 1119, 1121, 1156, 1172, 1182, 1183, 1204, 1250, 1280, 1281, 1296, 1311, 1400, 1431, 1450, 1451, 1452, 1458, 1470, 1471, 1472, 1488, 1516, 1533, 1535, 1585, 1638, 1671, 1672, 1675, 1693, 1723, 1756, 1760, 1767, 1961, 1963, 1964, 1970, 1971, 1972, 1975, 1977, 1978, 1979, 1987, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1999, 2001, 2002, 2005, 2007, 2009, 2011, 2012, 2015, 2020, 2021, 2024, 2028, 2030, 2034, 2039, 2040, 2042, 2043, 2044, 2047, 2052, 2053, 2054, 2056], "disk": [1, 21, 1322, 1817, 1987, 1999, 2012, 2029], "annot": [1, 30, 35, 40, 58, 925, 1248, 1256, 1262, 1961, 1963, 1965, 2009, 2020, 2044, 2045, 2047], "wait": [1, 18, 25, 33, 40, 42, 57, 482, 820, 997, 1001, 1002, 1004, 1074, 1253, 1362, 1365, 1366, 1371, 1769, 1940, 1956, 1962, 1964, 1977, 1989, 1990, 1991, 2010, 2014, 2020, 2044, 2052, 2056], "either": [1, 8, 9, 14, 18, 21, 22, 25, 27, 29, 30, 31, 33, 35, 40, 42, 43, 44, 46, 47, 49, 54, 57, 58, 150, 217, 309, 317, 509, 511, 613, 676, 728, 734, 735, 736, 741, 742, 752, 760, 775, 781, 787, 854, 886, 888, 896, 899, 901, 902, 911, 915, 916, 935, 955, 968, 1012, 1098, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1152, 1156, 1204, 1227, 1243, 1250, 1266, 1306, 1321, 1322, 1337, 1352, 1390, 1391, 1394, 1395, 1398, 1399, 1400, 1401, 1415, 1416, 1417, 1419, 1420, 1421, 1423, 1431, 1441, 1447, 1454, 1456, 1457, 1479, 1480, 1482, 1483, 1488, 1491, 1492, 1493, 1494, 1495, 1502, 1503, 1505, 1519, 1520, 1535, 1536, 1538, 1540, 1541, 1542, 1565, 1566, 1576, 1604, 1605, 1629, 1637, 1663, 1670, 1675, 1708, 1730, 1742, 1743, 1745, 1752, 1755, 1767, 1782, 1784, 1826, 1829, 1882, 1886, 1938, 1959, 1961, 1963, 1964, 1966, 1970, 1979, 1985, 1987, 1988, 1990, 1992, 1993, 1994, 1996, 1998, 1999, 2001, 2003, 2007, 2009, 2011, 2012, 2013, 2015, 2021, 2022, 2024, 2025, 2028, 2031, 2042, 2045, 2057], "nvidia": [1, 14, 25, 1010, 1023, 1051, 1057, 1061, 1075, 1076, 1923, 1960, 1990, 1994, 1997, 2003, 2005, 2015, 2024, 2032, 2035, 2051, 2052, 2054], "visual": [1, 58, 1352, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1481, 1482, 1483, 1539, 1960, 1990, 1999, 2005, 2007, 2014, 2029, 2044, 2052, 2054], "nvvp": 1, "timelin": [1, 4, 1365, 1366, 1960, 2014], "load_nvprof": 1, "load": [1, 11, 14, 15, 22, 27, 29, 46, 49, 56, 411, 833, 858, 927, 968, 1000, 1250, 1254, 1261, 1266, 1431, 1488, 1666, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1817, 1960, 1961, 1972, 1973, 1974, 1979, 1987, 1990, 1998, 1999, 2003, 2005, 2009, 2020, 2029, 2036, 2046, 2048, 2052, 2054], "repl": [1, 2046], "append": [1, 3, 27, 57, 58, 60, 65, 225, 250, 603, 757, 759, 761, 1044, 1088, 1090, 1345, 1440, 1459, 1490, 1499, 1503, 1505, 1516, 1675, 1962, 1963, 1964, 1987, 1989, 1990, 2001, 2005, 2009, 2010, 2024, 2029, 2044, 2047, 2053], "size": [1, 2, 3, 7, 18, 21, 22, 25, 27, 30, 31, 33, 42, 46, 47, 49, 52, 58, 60, 61, 66, 68, 69, 74, 134, 204, 238, 250, 251, 309, 311, 317, 335, 441, 442, 443, 445, 483, 489, 494, 495, 496, 509, 511, 513, 516, 519, 540, 541, 542, 562, 577, 579, 580, 581, 583, 584, 602, 603, 613, 614, 676, 686, 687, 689, 691, 692, 693, 695, 716, 724, 725, 731, 737, 738, 739, 741, 742, 752, 760, 762, 763, 764, 765, 775, 781, 782, 783, 792, 854, 861, 873, 874, 876, 888, 901, 902, 904, 905, 906, 907, 908, 909, 928, 936, 937, 939, 946, 948, 949, 950, 951, 952, 955, 959, 962, 968, 988, 998, 1006, 1012, 1013, 1015, 1055, 1079, 1080, 1086, 1089, 1096, 1098, 1099, 1100, 1101, 1104, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1150, 1152, 1153, 1154, 1161, 1162, 1167, 1171, 1172, 1175, 1179, 1183, 1192, 1208, 1209, 1213, 1214, 1225, 1227, 1247, 1250, 1272, 1281, 1290, 1295, 1303, 1307, 1311, 1314, 1316, 1317, 1318, 1320, 1321, 1323, 1331, 1337, 1338, 1340, 1341, 1345, 1348, 1350, 1351, 1352, 1353, 1356, 1357, 1358, 1359, 1360, 1374, 1376, 1379, 1382, 1384, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1430, 1431, 1433, 1434, 1435, 1436, 1439, 1441, 1442, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1476, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1491, 1492, 1493, 1494, 1495, 1500, 1501, 1503, 1509, 1510, 1511, 1512, 1513, 1514, 1519, 1527, 1531, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1548, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1566, 1571, 1572, 1573, 1576, 1577, 1584, 1585, 1588, 1589, 1593, 1604, 1611, 1618, 1619, 1620, 1629, 1630, 1632, 1635, 1636, 1638, 1644, 1663, 1664, 1665, 1666, 1675, 1691, 1706, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1727, 1729, 1731, 1734, 1735, 1745, 1754, 1773, 1774, 1775, 1776, 1778, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1807, 1812, 1821, 1824, 1842, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1879, 1880, 1881, 1882, 1885, 1886, 1887, 1901, 1902, 1903, 1908, 1910, 1918, 1919, 1920, 1921, 1922, 1930, 1931, 1933, 1934, 1935, 1936, 1957, 1958, 1960, 1961, 1962, 1964, 1968, 1972, 1973, 1975, 1978, 1979, 1986, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1996, 1997, 1998, 2003, 2004, 2009, 2010, 2013, 2014, 2015, 2017, 2020, 2024, 2026, 2027, 2029, 2030, 2036, 2039, 2041, 2042, 2043, 2044, 2048, 2049, 2052, 2054, 2056], "format": [1, 19, 22, 25, 27, 35, 44, 47, 58, 77, 151, 166, 168, 171, 174, 175, 176, 191, 202, 205, 236, 263, 293, 321, 327, 389, 495, 496, 521, 576, 579, 580, 581, 582, 583, 584, 676, 731, 756, 788, 789, 965, 1044, 1098, 1099, 1100, 1154, 1168, 1172, 1175, 1247, 1250, 1264, 1293, 1407, 1431, 1439, 1458, 1488, 1503, 1535, 1675, 1682, 1683, 1717, 1719, 1735, 1737, 1795, 1797, 1799, 1817, 1859, 1863, 1868, 1869, 1870, 1871, 1872, 1873, 1882, 1958, 1959, 1961, 1964, 1965, 1970, 1981, 1990, 1992, 1999, 2006, 2007, 2009, 2010, 2014, 2015, 2020, 2021, 2024, 2027, 2029, 2031, 2052, 2054], "arg0": [1, 25, 2007], "arg1": [1, 25, 40, 41, 43, 47, 2007], "repres": [1, 8, 11, 21, 22, 25, 27, 30, 31, 32, 33, 35, 36, 42, 44, 46, 47, 49, 58, 76, 78, 229, 756, 788, 789, 792, 885, 901, 902, 970, 975, 984, 988, 999, 1031, 1034, 1098, 1119, 1121, 1126, 1128, 1129, 1130, 1131, 1156, 1170, 1180, 1204, 1211, 1239, 1240, 1243, 1246, 1249, 1266, 1267, 1298, 1340, 1392, 1407, 1488, 1494, 1535, 1537, 1539, 1547, 1548, 1549, 1550, 1675, 1688, 1692, 1697, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1716, 1726, 1737, 1761, 1767, 1773, 1775, 1786, 1829, 1868, 1869, 1870, 1872, 1873, 1882, 1886, 1919, 1920, 1926, 1933, 1934, 1961, 1963, 1964, 1968, 1971, 1972, 1975, 1980, 1987, 1992, 1993, 1996, 1998, 1999, 2002, 2006, 2007, 2009, 2013, 2015, 2016, 2018, 2020, 2024, 2027, 2042, 2043, 2047, 2056, 2057], "order": [1, 3, 5, 25, 26, 27, 29, 31, 43, 46, 49, 50, 55, 57, 58, 146, 187, 204, 229, 309, 311, 313, 317, 327, 398, 483, 484, 676, 788, 789, 798, 850, 872, 889, 891, 910, 920, 921, 935, 947, 958, 1002, 1044, 1055, 1086, 1089, 1090, 1098, 1116, 1118, 1119, 1125, 1137, 1138, 1139, 1140, 1157, 1167, 1204, 1250, 1270, 1281, 1287, 1289, 1296, 1303, 1306, 1307, 1314, 1315, 1318, 1320, 1323, 1352, 1358, 1372, 1374, 1392, 1401, 1407, 1424, 1488, 1489, 1498, 1515, 1516, 1558, 1566, 1593, 1618, 1619, 1620, 1644, 1666, 1675, 1692, 1702, 1716, 1717, 1718, 1719, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1767, 1773, 1776, 1786, 1821, 1824, 1848, 1858, 1886, 1905, 1912, 1914, 1919, 1923, 1929, 1935, 1959, 1960, 1961, 1962, 1964, 1965, 1968, 1977, 1978, 1979, 1980, 1985, 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1999, 2002, 2004, 2007, 2009, 2011, 2012, 2013, 2015, 2017, 2020, 2021, 2022, 2024, 2025, 2027, 2031, 2034, 2036, 2039, 2040, 2042, 2044, 2048, 2052, 2054], "backend": [1, 14, 41, 45, 47, 49, 737, 738, 739, 788, 789, 829, 851, 852, 855, 857, 858, 904, 910, 968, 975, 1024, 1055, 1098, 1156, 1171, 1175, 1264, 1287, 1294, 1296, 1314, 1365, 1366, 1367, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1546, 1551, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1593, 1632, 1644, 1675, 1737, 1738, 1829, 1924, 1926, 1960, 1962, 1963, 1973, 1976, 1989, 1990, 1992, 2002, 2003, 2009, 2016, 2018, 2024, 2041, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2059], "side": [1, 14, 25, 42, 44, 46, 47, 54, 58, 60, 63, 482, 764, 765, 768, 769, 770, 961, 1033, 1092, 1114, 1115, 1117, 1120, 1121, 1126, 1128, 1129, 1130, 1131, 1134, 1247, 1248, 1295, 1300, 1311, 1313, 1397, 1398, 1399, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1464, 1465, 1466, 1467, 1468, 1469, 1481, 1482, 1483, 1509, 1510, 1512, 1513, 1514, 1539, 1543, 1544, 1545, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1618, 1619, 1620, 1632, 1761, 1790, 1791, 1821, 1882, 1910, 1959, 1961, 1962, 1964, 1986, 1987, 1990, 1992, 1996, 2020, 2036, 2039, 2044, 2047], "creation": [1, 2, 21, 25, 27, 58, 482, 741, 742, 752, 760, 820, 1001, 1156, 1675, 1676, 1697, 1961, 1965, 1975, 1977, 1987, 1990, 2020, 2022, 2024, 2030, 2042, 2047], "warmup": [1, 3, 1044, 1990, 2014, 2039, 2044, 2052], "correl": [1, 31, 43, 984, 1415, 1416, 1417, 1418, 1419, 1420, 1426, 1427, 1428, 1432], "view": [1, 7, 8, 11, 18, 21, 22, 27, 29, 33, 47, 49, 58, 60, 69, 75, 218, 250, 431, 493, 494, 495, 603, 614, 688, 693, 756, 874, 882, 883, 884, 895, 911, 935, 950, 962, 981, 982, 1088, 1089, 1096, 1137, 1138, 1139, 1140, 1156, 1214, 1250, 1306, 1317, 1366, 1431, 1439, 1458, 1488, 1503, 1539, 1540, 1541, 1542, 1585, 1631, 1675, 1680, 1776, 1808, 1812, 1813, 1817, 1823, 1824, 1854, 1874, 1885, 1897, 1902, 1906, 1918, 1933, 1934, 1936, 1960, 1961, 1962, 1977, 1979, 1980, 1988, 1992, 1995, 2007, 2010, 2017, 2020, 2022, 2024, 2026, 2027, 2030, 2043, 2049, 2051, 2053, 2054], "difficult": [1, 7, 9, 46, 54, 1167, 1935, 2043, 2044, 2050, 2052, 2054], "eas": [1, 58, 1989, 1992, 1997, 2042, 2053], "sequenc": [1, 21, 27, 29, 31, 46, 49, 146, 562, 731, 756, 810, 876, 889, 910, 952, 954, 955, 958, 966, 1004, 1011, 1012, 1015, 1083, 1097, 1099, 1167, 1212, 1213, 1216, 1266, 1306, 1352, 1392, 1402, 1407, 1415, 1424, 1431, 1439, 1458, 1494, 1503, 1516, 1531, 1532, 1533, 1534, 1535, 1548, 1585, 1644, 1692, 1695, 1702, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1731, 1734, 1738, 1753, 1792, 1794, 1798, 1821, 1879, 1882, 1921, 1935, 1937, 1940, 1957, 1961, 1962, 1963, 1968, 1980, 1990, 1994, 1995, 2007, 2009, 2012, 2013, 2020, 2030, 2031, 2039, 2041, 2042, 2044, 2053, 2054], "gener": [1, 2, 3, 7, 8, 14, 21, 22, 25, 31, 35, 36, 43, 46, 49, 50, 51, 59, 60, 65, 69, 80, 149, 150, 169, 254, 282, 373, 417, 450, 477, 604, 676, 916, 938, 968, 970, 1030, 1033, 1041, 1042, 1045, 1046, 1065, 1066, 1068, 1069, 1070, 1098, 1120, 1121, 1156, 1167, 1169, 1172, 1179, 1203, 1208, 1226, 1254, 1260, 1271, 1282, 1287, 1296, 1313, 1314, 1318, 1323, 1343, 1351, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1374, 1423, 1434, 1448, 1531, 1539, 1540, 1549, 1550, 1558, 1584, 1602, 1666, 1690, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1724, 1727, 1731, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1773, 1775, 1778, 1792, 1794, 1796, 1797, 1798, 1800, 1822, 1834, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1887, 1903, 1907, 1924, 1926, 1929, 1935, 1960, 1961, 1962, 1963, 1964, 1965, 1970, 1973, 1978, 1985, 1987, 1990, 1992, 1994, 1995, 1996, 1998, 1999, 2001, 2005, 2007, 2009, 2010, 2011, 2012, 2014, 2019, 2020, 2021, 2024, 2027, 2029, 2031, 2033, 2035, 2036, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2052, 2053, 2054, 2055], "seq": [1, 601, 756, 955, 967, 1352, 1439, 1458, 1494, 1503, 1531, 1533, 1535, 1719, 1917], "n": [1, 3, 25, 27, 30, 31, 33, 35, 40, 43, 47, 58, 225, 256, 402, 461, 462, 482, 682, 685, 686, 687, 731, 754, 756, 777, 873, 928, 936, 937, 939, 946, 948, 952, 958, 959, 960, 961, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1079, 1080, 1090, 1111, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1159, 1162, 1167, 1175, 1179, 1204, 1208, 1209, 1213, 1247, 1250, 1262, 1266, 1267, 1270, 1271, 1280, 1281, 1282, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1323, 1331, 1340, 1345, 1347, 1352, 1355, 1376, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1447, 1448, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1470, 1471, 1472, 1476, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1491, 1492, 1493, 1494, 1495, 1497, 1503, 1505, 1509, 1510, 1511, 1512, 1513, 1514, 1519, 1521, 1522, 1523, 1527, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1558, 1564, 1576, 1577, 1585, 1589, 1593, 1629, 1632, 1634, 1644, 1675, 1689, 1701, 1710, 1729, 1773, 1774, 1775, 1780, 1785, 1786, 1792, 1798, 1800, 1813, 1821, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1863, 1864, 1880, 1881, 1882, 1886, 1887, 1902, 1903, 1908, 1912, 1914, 1929, 1930, 1931, 1932, 1935, 1962, 1964, 1968, 1978, 1979, 1985, 1987, 1990, 1992, 1994, 1996, 2001, 2012, 2014, 2015, 2016, 2024, 2025, 2029, 2030, 2031, 2044, 2047, 2049], "counter": [1, 25, 911, 922, 1037, 1055, 1424, 1975, 1977, 1987], "increment": [1, 25, 42, 46, 922, 924, 1152, 1213, 1254, 1424, 1961, 1963, 1987, 2007, 2020], "object": [1, 3, 5, 6, 8, 14, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 42, 44, 46, 47, 49, 57, 58, 60, 62, 84, 202, 205, 411, 599, 789, 790, 797, 850, 857, 876, 886, 887, 888, 896, 901, 902, 928, 930, 935, 968, 1022, 1033, 1073, 1098, 1137, 1149, 1152, 1157, 1158, 1160, 1161, 1162, 1166, 1172, 1186, 1187, 1236, 1237, 1250, 1257, 1258, 1261, 1262, 1266, 1267, 1282, 1303, 1307, 1320, 1322, 1323, 1343, 1424, 1426, 1427, 1428, 1432, 1450, 1451, 1452, 1488, 1498, 1527, 1675, 1693, 1708, 1717, 1718, 1721, 1722, 1723, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1817, 1890, 1891, 1895, 1924, 1927, 1928, 1946, 1959, 1963, 1964, 1965, 1968, 1972, 1973, 1974, 1977, 1981, 1987, 1989, 1990, 1992, 1993, 1994, 1996, 1998, 2001, 2003, 2004, 2005, 2007, 2009, 2011, 2015, 2017, 2018, 2019, 2020, 2022, 2026, 2027, 2029, 2031, 2040, 2041, 2043, 2047, 2050, 2053, 2055, 2056, 2057], "stash": [1, 5, 1990, 1992, 2013], "associ": [1, 8, 9, 25, 27, 36, 46, 47, 49, 893, 894, 968, 1007, 1058, 1060, 1212, 1213, 1250, 1300, 1311, 1313, 1322, 1407, 1488, 1498, 1577, 1675, 1690, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1842, 1844, 1961, 1964, 1970, 1978, 1979, 1987, 1996, 1999, 2002, 2004, 2007, 2012, 2013, 2014, 2020, 2021, 2026, 2027, 2030, 2043, 2044, 2047, 2054, 2056], "tell": [1, 7, 58, 492, 1181, 1182, 1251, 1258, 1322, 1738, 1961, 1971, 1987, 1992, 1993, 2012, 2041, 2056], "top": [1, 3, 7, 8, 12, 21, 27, 30, 31, 35, 47, 49, 53, 58, 743, 928, 1400, 1401, 1423, 1447, 1454, 1479, 1495, 1537, 1540, 1593, 1697, 1701, 1703, 1849, 1905, 1925, 1965, 1968, 1971, 1977, 1992, 2007, 2011, 2041, 2051, 2052], "m": [1, 4, 8, 22, 25, 30, 31, 39, 43, 46, 58, 682, 685, 686, 687, 716, 724, 725, 734, 735, 736, 737, 738, 739, 741, 742, 752, 754, 760, 810, 856, 857, 858, 936, 948, 952, 956, 1111, 1165, 1213, 1248, 1250, 1255, 1257, 1261, 1262, 1268, 1271, 1282, 1290, 1296, 1297, 1298, 1299, 1303, 1304, 1305, 1307, 1308, 1309, 1314, 1315, 1316, 1317, 1323, 1340, 1341, 1345, 1355, 1374, 1376, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1435, 1436, 1437, 1438, 1442, 1443, 1444, 1445, 1446, 1449, 1450, 1451, 1452, 1455, 1456, 1457, 1474, 1475, 1477, 1478, 1481, 1482, 1483, 1487, 1488, 1495, 1496, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1538, 1540, 1541, 1542, 1543, 1544, 1545, 1632, 1634, 1675, 1689, 1691, 1695, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1723, 1724, 1727, 1773, 1774, 1775, 1785, 1792, 1821, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1863, 1864, 1882, 1886, 1887, 1903, 1910, 1961, 1962, 1963, 1964, 1972, 1990, 1992, 1994, 1996, 1999, 2001, 2004, 2015, 2024, 2034, 2035, 2038, 2044], "By": [1, 2, 3, 5, 14, 21, 25, 30, 34, 39, 46, 49, 58, 441, 442, 443, 444, 445, 876, 968, 988, 1004, 1047, 1049, 1081, 1093, 1116, 1118, 1119, 1120, 1121, 1129, 1130, 1131, 1157, 1158, 1160, 1161, 1167, 1204, 1212, 1213, 1254, 1303, 1314, 1322, 1351, 1356, 1378, 1400, 1401, 1402, 1403, 1404, 1421, 1423, 1441, 1447, 1450, 1451, 1452, 1453, 1454, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1527, 1536, 1565, 1566, 1576, 1605, 1629, 1637, 1691, 1727, 1775, 1786, 1807, 1861, 1908, 1935, 1940, 1959, 1963, 1968, 1971, 1987, 1990, 1992, 1994, 1995, 1999, 2001, 2002, 2004, 2007, 2009, 2011, 2019, 2020, 2024, 2031, 2041, 2044, 2048, 2050, 2054], "compar": [1, 3, 5, 14, 21, 46, 49, 58, 81, 690, 861, 872, 910, 911, 912, 1055, 1102, 1103, 1126, 1127, 1128, 1132, 1133, 1134, 1135, 1144, 1145, 1172, 1194, 1207, 1239, 1275, 1339, 1349, 1354, 1385, 1494, 1675, 1728, 1919, 1964, 1975, 1990, 1992, 1996, 2002, 2005, 2015, 2016, 2020, 2024, 2029, 2031, 2033, 2034, 2039, 2045, 2051], "down": [1, 7, 14, 21, 31, 33, 40, 41, 43, 58, 775, 1055, 1093, 1140, 1146, 1260, 1296, 1604, 1786, 1814, 1992, 1998, 2001, 2009, 2020, 2022, 2024, 2029, 2048, 2054], "irrelev": [1, 3, 1965], "simpli": [1, 3, 14, 21, 25, 27, 30, 31, 35, 43, 46, 57, 58, 859, 1156, 1237, 1248, 1396, 1425, 1675, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1829, 1961, 1963, 1987, 1993, 1996, 1999, 2000, 2014, 2024, 2042, 2044, 2050], "earlier": [1, 6, 49, 1682, 1683, 1886, 1987, 1990, 1994, 1995, 1998, 2004, 2009, 2014], "hand": [1, 4, 49, 54, 58, 961, 1092, 1098, 1248, 1295, 1300, 1311, 1313, 1396, 1498, 1516, 1910, 1923, 1961, 1963, 1964, 1987, 1996, 1999, 2001, 2004, 2012, 2024, 2043, 2044, 2047], "underwai": [1, 1039, 1990], "up": [1, 6, 7, 8, 9, 14, 21, 22, 25, 29, 31, 33, 35, 39, 41, 42, 44, 45, 49, 52, 58, 775, 781, 886, 901, 902, 924, 968, 1041, 1042, 1044, 1081, 1098, 1127, 1128, 1133, 1135, 1140, 1156, 1190, 1241, 1254, 1260, 1263, 1264, 1309, 1392, 1407, 1434, 1494, 1533, 1535, 1539, 1540, 1558, 1584, 1593, 1604, 1663, 1675, 1682, 1683, 1756, 1792, 1814, 1919, 1920, 1959, 1961, 1963, 1971, 1975, 1977, 1978, 1979, 1987, 1988, 1989, 1990, 1994, 1995, 1996, 1997, 1999, 2002, 2009, 2012, 2014, 2015, 2020, 2021, 2031, 2039, 2041, 2043, 2047, 2050, 2052, 2054, 2056], "given": [1, 2, 3, 7, 9, 14, 21, 22, 25, 26, 27, 29, 31, 33, 40, 42, 44, 46, 49, 55, 57, 58, 146, 215, 309, 311, 313, 317, 322, 373, 394, 398, 468, 469, 470, 471, 472, 474, 509, 511, 513, 580, 581, 600, 603, 676, 689, 691, 692, 694, 695, 731, 756, 775, 781, 788, 789, 790, 791, 795, 796, 798, 816, 820, 833, 836, 850, 854, 861, 872, 885, 887, 889, 894, 896, 897, 899, 901, 902, 904, 906, 907, 908, 909, 916, 922, 924, 934, 935, 938, 939, 942, 950, 954, 955, 960, 961, 962, 967, 968, 982, 984, 987, 988, 990, 992, 996, 998, 1001, 1002, 1004, 1005, 1006, 1010, 1018, 1019, 1022, 1026, 1027, 1043, 1047, 1049, 1050, 1051, 1053, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1073, 1074, 1075, 1076, 1083, 1085, 1090, 1098, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1138, 1155, 1165, 1166, 1170, 1172, 1173, 1174, 1175, 1176, 1180, 1217, 1247, 1250, 1258, 1266, 1267, 1272, 1276, 1286, 1288, 1289, 1298, 1300, 1306, 1314, 1323, 1330, 1332, 1333, 1334, 1335, 1338, 1348, 1350, 1352, 1353, 1356, 1382, 1392, 1400, 1401, 1407, 1415, 1416, 1417, 1419, 1420, 1421, 1423, 1424, 1430, 1431, 1435, 1436, 1439, 1447, 1458, 1480, 1484, 1485, 1486, 1488, 1490, 1492, 1493, 1495, 1497, 1499, 1503, 1516, 1522, 1536, 1537, 1540, 1541, 1542, 1558, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1584, 1585, 1588, 1589, 1593, 1604, 1629, 1644, 1659, 1660, 1663, 1664, 1665, 1669, 1670, 1690, 1691, 1716, 1723, 1724, 1727, 1730, 1731, 1737, 1763, 1766, 1768, 1770, 1773, 1778, 1783, 1786, 1787, 1788, 1801, 1807, 1812, 1823, 1824, 1829, 1854, 1858, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1879, 1882, 1885, 1887, 1897, 1898, 1903, 1905, 1907, 1917, 1919, 1921, 1923, 1927, 1941, 1943, 1946, 1947, 1948, 1955, 1956, 1959, 1960, 1961, 1964, 1968, 1970, 1971, 1974, 1977, 1980, 1981, 1985, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 1998, 1999, 2003, 2004, 2007, 2009, 2011, 2014, 2015, 2020, 2021, 2024, 2025, 2026, 2029, 2031, 2034, 2038, 2043, 2044, 2047, 2053, 2054, 2055], "nonzero": [1, 49, 1179, 1247, 1332, 1334, 1335, 1340, 1938, 1962, 1968, 1972, 2010, 2042, 2043, 2049], "themselv": [1, 9, 31, 42, 49, 789, 837, 1905, 1990, 2012, 2055], "later": [1, 2, 3, 7, 20, 22, 25, 27, 49, 57, 58, 482, 741, 742, 752, 760, 927, 1033, 1322, 1458, 1481, 1482, 1483, 1503, 1517, 1618, 1619, 1620, 1647, 1675, 1886, 1961, 1987, 1989, 1991, 1999, 2004, 2021, 2022, 2036, 2047, 2050], "origin": [1, 5, 11, 12, 18, 21, 22, 25, 27, 35, 46, 47, 49, 52, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 202, 205, 217, 482, 541, 599, 603, 613, 676, 756, 793, 834, 835, 850, 853, 854, 953, 958, 1002, 1118, 1119, 1121, 1125, 1129, 1130, 1131, 1137, 1155, 1165, 1225, 1247, 1258, 1262, 1263, 1266, 1267, 1344, 1358, 1392, 1396, 1408, 1423, 1424, 1439, 1517, 1527, 1576, 1647, 1682, 1683, 1689, 1690, 1691, 1692, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1716, 1719, 1722, 1724, 1725, 1727, 1737, 1752, 1767, 1776, 1812, 1823, 1858, 1874, 1908, 1919, 1920, 1961, 1964, 1970, 1977, 1979, 1987, 1990, 1992, 1994, 1995, 1998, 2001, 2002, 2004, 2009, 2012, 2013, 2015, 2016, 2024, 2026, 2033, 2034, 2040, 2041, 2043, 2044, 2045, 2047, 2048, 2053, 2054, 2055], "did": [1, 7, 8, 25, 42, 1182, 1381, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1963, 1964, 1996, 2004, 2012, 2046, 2047, 2056], "relationship": [1, 9, 39, 58, 965, 1204, 1537, 1987, 1990, 2004, 2012, 2043, 2047], "conceptu": [1, 3, 1987, 1993, 2022, 2041], "tag": [1, 3, 7, 25, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 975, 1322, 1959, 1960, 1968, 1998, 2004, 2012, 2015, 2029], "eventu": [1, 7, 42, 49, 1959, 2013, 2043], "itt": [1, 2014], "intel": [1, 4, 1960, 2005, 2051, 2059], "r": [1, 31, 55, 146, 885, 887, 889, 901, 902, 910, 915, 956, 967, 984, 1098, 1157, 1159, 1162, 1167, 1173, 1192, 1195, 1204, 1262, 1280, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1296, 1297, 1300, 1302, 1309, 1311, 1313, 1314, 1323, 1430, 1431, 1440, 1500, 1501, 1519, 1584, 1585, 1635, 1636, 1689, 1754, 1785, 1935, 1961, 1962, 1963, 1987, 1989, 1992, 1996, 2005, 2024, 2027, 2029, 2047, 2054], "instrument": [1, 3, 22, 1366, 1960, 1998, 2034], "technologi": [1, 46, 1960, 2007, 2008, 2035], "applic": [1, 2, 9, 31, 42, 484, 795, 806, 807, 808, 809, 896, 899, 901, 968, 1023, 1161, 1172, 1179, 1361, 1423, 1424, 1533, 1535, 1576, 1675, 1923, 1960, 1971, 1980, 1987, 1989, 1990, 1991, 1992, 1997, 1998, 1999, 2003, 2009, 2011, 2015, 2020, 2021, 2022, 2024, 2030, 2044, 2056], "across": [1, 8, 14, 21, 22, 25, 27, 29, 33, 43, 49, 54, 58, 613, 731, 815, 870, 929, 1015, 1054, 1055, 1098, 1112, 1167, 1261, 1266, 1352, 1401, 1424, 1434, 1476, 1494, 1496, 1527, 1539, 1563, 1566, 1595, 1611, 1659, 1675, 1702, 1706, 1730, 1817, 1935, 1960, 1961, 1975, 1978, 1980, 1987, 1991, 1994, 1998, 1999, 2001, 2002, 2003, 2011, 2013, 2016, 2020, 2021, 2026, 2029, 2034, 2039, 2042, 2044, 2047, 2054], "tool": [1, 4, 8, 9, 18, 25, 43, 47, 58, 857, 927, 1366, 1861, 1959, 1960, 1961, 1963, 1989, 1990, 2005, 2009, 2012, 2014, 2034, 2041, 2044, 2048, 2052, 2054, 2056], "With": [1, 18, 21, 25, 31, 49, 57, 735, 736, 737, 738, 739, 781, 1055, 1119, 1120, 1121, 1129, 1130, 1131, 1267, 1402, 1403, 1404, 1416, 1417, 1419, 1420, 1433, 1450, 1451, 1452, 1527, 1538, 1540, 1569, 1572, 1604, 1630, 1663, 1753, 1796, 1965, 1987, 1990, 1992, 2015, 2020, 2024, 2029, 2038, 2045, 2047, 2051, 2054], "abl": [1, 2, 7, 8, 18, 25, 27, 42, 46, 54, 482, 1156, 1171, 1248, 1261, 1531, 1961, 1972, 1978, 1987, 1992, 1993, 1995, 2004, 2009, 2012, 2015, 2020, 2024, 2031, 2040, 2042, 2043, 2044, 2045, 2050, 2054, 2056], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 11, 15, 331, 737, 738, 739, 896, 897, 901, 910, 922, 1167, 1792, 1935, 1987, 1990, 1991, 1992, 2006, 2007, 2020, 2021, 2035, 2044], "traceback": [1, 18, 35, 43, 57, 58, 911, 1172, 1235, 1861, 1963, 1964, 1965, 1972, 1977, 1980, 1992, 2003, 2024, 2031, 2054, 2056], "fail": [1, 7, 25, 27, 33, 34, 35, 40, 41, 42, 43, 45, 46, 57, 58, 60, 65, 69, 80, 482, 915, 916, 1002, 1055, 1179, 1251, 1258, 1261, 1280, 1309, 1314, 1322, 1323, 1340, 1736, 1964, 1966, 1977, 1987, 1990, 1992, 2001, 2002, 2005, 2009, 2012, 2020, 2040, 2041, 2042, 2044, 2045, 2047, 2054, 2056], "test": [1, 3, 14, 18, 25, 40, 42, 43, 58, 60, 68, 69, 689, 695, 968, 1115, 1117, 1118, 1123, 1124, 1129, 1130, 1131, 1133, 1135, 1172, 1183, 1186, 1187, 1191, 1236, 1237, 1241, 1242, 1244, 1245, 1737, 1850, 1960, 1961, 1965, 1975, 1977, 1987, 1995, 1996, 2003, 2009, 2011, 2029, 2034, 2043, 2054, 2055], "slow": [1, 915, 1260, 1264, 1280, 1281, 1680, 1681, 1723, 1919, 1996, 2001, 2029, 2042, 2043], "import": [1, 2, 3, 5, 7, 9, 12, 14, 17, 18, 21, 22, 25, 26, 27, 29, 30, 31, 32, 34, 36, 39, 40, 44, 46, 47, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 676, 730, 737, 738, 739, 768, 769, 770, 788, 856, 857, 858, 911, 918, 920, 947, 954, 988, 1149, 1152, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1165, 1247, 1248, 1251, 1253, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1266, 1267, 1268, 1302, 1303, 1306, 1307, 1320, 1352, 1453, 1488, 1547, 1675, 1693, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1718, 1719, 1720, 1721, 1722, 1723, 1730, 1755, 1756, 1779, 1921, 1961, 1963, 1964, 1965, 1968, 1972, 1975, 1977, 1980, 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1998, 1999, 2001, 2002, 2003, 2004, 2007, 2008, 2009, 2015, 2018, 2020, 2021, 2022, 2024, 2027, 2029, 2030, 2031, 2034, 2035, 2036, 2039, 2040, 2041, 2042, 2044, 2046, 2047, 2052, 2053, 2054, 2055, 2059], "myfunc": [1, 1993], "inp": [1, 12, 21, 25, 58, 891, 894, 895, 1539, 1675, 2049, 2052, 2055], "clone": [1, 15, 21, 49, 60, 250, 444, 896, 897, 900, 901, 902, 911, 912, 913, 918, 920, 921, 950, 1254, 1430, 1662, 1901, 1910, 1962, 1977, 1980, 2004, 2010, 2014, 2024, 2026, 2027, 2031, 2039, 2049], "runtimeerror": [1, 14, 25, 29, 54, 58, 80, 84, 579, 693, 896, 897, 901, 911, 949, 1146, 1235, 1250, 1280, 1281, 1282, 1290, 1291, 1292, 1294, 1298, 1304, 1311, 1316, 1317, 1343, 1374, 1488, 1736, 1823, 1861, 1923, 1961, 1963, 1964, 1978, 1980, 1986, 1988, 1994, 2003, 2005, 2009, 2015, 2019, 2024, 2027, 2039], "run_fn": [1, 5, 853, 859], "recent": [1, 7, 8, 45, 57, 911, 1235, 1861, 1963, 1964, 1972, 1980, 1992, 2002, 2003, 2024, 2031, 2051, 2054], "last": [1, 5, 6, 11, 21, 22, 26, 29, 30, 31, 42, 47, 57, 58, 311, 613, 688, 756, 873, 911, 935, 937, 946, 952, 962, 1041, 1081, 1086, 1090, 1115, 1117, 1120, 1121, 1123, 1124, 1127, 1128, 1130, 1131, 1133, 1135, 1137, 1208, 1209, 1213, 1227, 1235, 1247, 1272, 1306, 1309, 1314, 1351, 1356, 1392, 1405, 1423, 1431, 1433, 1439, 1458, 1460, 1475, 1495, 1498, 1502, 1503, 1516, 1532, 1533, 1539, 1564, 1585, 1594, 1607, 1631, 1632, 1675, 1676, 1682, 1683, 1729, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1812, 1821, 1829, 1858, 1861, 1868, 1869, 1870, 1872, 1873, 1874, 1882, 1886, 1903, 1905, 1908, 1933, 1934, 1963, 1964, 1972, 1975, 1978, 1980, 1987, 1990, 1992, 1996, 2003, 2007, 2009, 2012, 2013, 2024, 2030, 2031, 2040, 2048, 2054], "stdin": [1, 25, 911, 1861, 1972, 1980, 1992, 2003, 2024], "instal": [1, 3, 14, 15, 25, 58, 1959, 1999, 2000, 2007, 2008, 2009, 2012, 2020, 2029, 2036, 2040, 2041, 2042, 2047, 2050], "_tensor": [1, 150], "py": [1, 4, 14, 18, 25, 29, 31, 34, 41, 43, 47, 49, 58, 82, 856, 1675, 1959, 1961, 1964, 1970, 1991, 1996, 1998, 2001, 2009, 2012, 2015, 2021, 2036, 2038, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2051, 2053, 2054, 2056], "93": [1, 613, 1080], "retain_graph": [1, 146, 889, 910, 920, 921, 1167, 1935, 1962, 1986, 1987, 1992, 2020], "90": [1, 1082, 1771, 1813], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 14, 25, 40, 42, 1959, 1990, 2014, 2048], "53": [1, 477], "44": [1, 317, 441, 1101, 1399, 1457, 1483, 1723, 2041], "set_detect_anomali": 1, "behaviour": [1, 689, 690, 695, 1593, 1632, 1767, 1835, 1959, 2002], "interpos": [1, 1992], "grad_fn": [1, 146, 331, 484, 876, 889, 904, 905, 906, 907, 908, 909, 918, 920, 921, 1155, 1690, 1863, 1987, 1992, 1999, 2004], "node": [1, 25, 29, 33, 35, 41, 42, 46, 49, 58, 60, 69, 75, 78, 676, 815, 816, 817, 820, 821, 822, 896, 931, 1044, 1165, 1172, 1265, 1407, 1424, 1675, 1737, 1973, 1990, 2007, 2009, 2012, 2013, 2020, 2021, 2022, 2032, 2034, 2042, 2043, 2044, 2051, 2053, 2054], "grad_mod": [1, 911, 912, 913, 1962], "least": [1, 5, 6, 8, 22, 27, 31, 41, 42, 49, 256, 398, 693, 939, 1086, 1088, 1089, 1098, 1139, 1140, 1150, 1171, 1204, 1212, 1213, 1247, 1273, 1296, 1323, 1345, 1378, 1392, 1675, 1717, 1959, 1964, 1979, 1985, 1987, 1988, 1990, 1994, 1995, 2013, 2016, 2022, 2024, 2025, 2026, 2031, 2044, 2046, 2054], "intermediari": [1, 14, 31, 896, 899, 901, 1987, 1996, 2044], "access": [1, 9, 18, 21, 25, 27, 46, 47, 49, 57, 60, 62, 76, 484, 553, 730, 896, 899, 901, 902, 934, 1008, 1250, 1253, 1266, 1313, 1392, 1488, 1666, 1677, 1678, 1690, 1695, 1717, 1727, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1950, 1960, 1961, 1962, 1964, 1965, 1968, 1973, 1976, 1977, 1979, 1980, 1987, 1990, 1994, 1996, 1998, 1999, 2007, 2020, 2024, 2027, 2028, 2030, 2036, 2039, 2041, 2042, 2043, 2044, 2046, 2050, 2057], "isinst": [1, 21, 31, 58, 918, 920, 921, 1237, 1248, 1962, 1964, 1987, 1992, 1999, 2012, 2024, 2044, 2053, 2054], "dir": [1, 1041, 1737, 1959, 1964, 2012], "__call__": [1, 1250, 1488], "__class__": [1, 60], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1965], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1965], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1964], "__ne__": 1, "__new__": [1, 1963, 1965], "__reduce__": [1, 2012], "__reduce_ex__": 1, "__repr__": [1, 3, 1992], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 58, 1962, 1964], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1987], "metadata": [1, 3, 12, 27, 35, 36, 46, 60, 68, 69, 922, 980, 1322, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1817, 1972, 1980, 1987, 1992, 1993, 2004, 2007, 2012, 2014, 2020, 2021, 2024, 2029, 2043, 2053], "next_funct": 1, "register_prehook": [1, 1987], "allclos": [1, 54, 55, 58, 915, 916, 1041, 1120, 1121, 1127, 1128, 1156, 1157, 1159, 1160, 1161, 1162, 1166, 1167, 1298, 1300, 1311, 1313, 1316, 1317, 1342, 1695, 1722, 1785, 1935, 1962, 1968, 1993, 2010, 2024], "pack": [1, 29, 734, 735, 736, 737, 738, 739, 741, 742, 756, 777, 1266, 1267, 1342, 1424, 1439, 1458, 1503, 1716, 1717, 1718, 1719, 1962, 1973, 1980, 1987, 1994, 2005, 2015], "unpack": [1, 60, 65, 66, 756, 892, 895, 1266, 1298, 1342, 1424, 1719, 1721, 1728, 1738, 1964, 1965, 1987, 1992, 1994], "hook": [1, 26, 29, 49, 483, 484, 744, 753, 896, 899, 901, 920, 921, 924, 1044, 1250, 1424, 1488, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1691, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1708, 1713, 1724, 1727, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1960, 1981, 1991, 1992, 1998, 2006, 2007, 2012, 2015, 2041, 2043, 2044, 2045, 2047], "common": [1, 3, 8, 21, 33, 42, 54, 60, 77, 82, 681, 789, 861, 941, 944, 949, 983, 1093, 1098, 1143, 1144, 1145, 1146, 1179, 1193, 1273, 1322, 1373, 1402, 1403, 1404, 1407, 1527, 1575, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1805, 1817, 1883, 1926, 1960, 1964, 1969, 1979, 1987, 1990, 1992, 1993, 1994, 1999, 2001, 2004, 2009, 2012, 2024, 2025, 2028, 2031, 2040, 2042, 2044, 2047, 2050, 2052, 2053, 2054, 2056], "trade": [1, 5, 8, 49, 1314, 1401, 1829, 1989, 1994, 2016], "leav": [1, 8, 33, 43, 146, 889, 1168, 1255, 1268, 1693, 1696, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1877, 1961, 1963, 1964, 1972, 1987, 1990, 2007, 2012, 2016, 2047], "especi": [1, 9, 11, 21, 25, 47, 58, 250, 950, 968, 976, 1662, 1963, 1972, 1987, 1992, 1993, 2002, 2004, 2015, 2020, 2024, 2039, 2043, 2044, 2046, 2047], "notic": [1, 12, 25, 47, 59, 685, 1118, 1132, 1169, 1345, 1355, 1400, 1540, 1610, 1758, 1759, 1764, 1765, 1771, 1919, 1960, 1961, 1987, 2024, 2044, 2048, 2050, 2052], "fit": [1, 9, 34, 53, 54, 495, 928, 1247, 1745, 1807, 1990, 2007, 2013, 2031, 2054], "evalu": [1, 4, 8, 9, 29, 31, 46, 52, 58, 689, 695, 794, 859, 915, 1055, 1162, 1163, 1172, 1188, 1189, 1190, 1250, 1392, 1396, 1402, 1403, 1404, 1425, 1442, 1450, 1451, 1452, 1460, 1488, 1502, 1506, 1527, 1637, 1659, 1693, 1745, 1761, 1792, 1964, 1965, 1992, 1999, 2006, 2007, 2024, 2032, 2035, 2041, 2042, 2043], "saved_tensors_hook": [1, 896, 899, 901, 1987], "pack_hook": [1, 1987], "unpack_hook": [1, 1987], "pair": [1, 25, 27, 30, 31, 42, 44, 613, 731, 861, 935, 956, 988, 1132, 1170, 1172, 1264, 1314, 1352, 1480, 1489, 1494, 1498, 1634, 1754, 1801, 1963, 1964, 1970, 1978, 1987, 1990, 2013, 2020, 2021, 2022, 2029, 2031, 2034, 2044], "retriev": [1, 21, 22, 25, 29, 33, 42, 58, 533, 885, 886, 901, 902, 1185, 1430, 1434, 1539, 1584, 1675, 1717, 1737, 1861, 1980, 1987, 1998, 2009, 2012, 2013, 2020, 2021, 2022, 2036, 2041, 2047, 2056], "everytim": 1, "store": [1, 3, 5, 14, 18, 22, 27, 33, 43, 46, 47, 49, 58, 322, 328, 394, 682, 818, 821, 886, 901, 948, 1011, 1013, 1015, 1173, 1195, 1250, 1256, 1258, 1261, 1281, 1292, 1293, 1294, 1323, 1328, 1340, 1402, 1403, 1404, 1430, 1488, 1516, 1675, 1689, 1692, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1716, 1829, 1866, 1959, 1960, 1961, 1972, 1979, 1980, 1981, 1991, 1992, 1993, 1994, 1998, 2007, 2012, 2015, 2020, 2021, 2022, 2024, 2026, 2029, 2030, 2034, 2036, 2041, 2043, 2046, 2047], "content": [1, 3, 7, 27, 35, 46, 47, 58, 896, 899, 901, 1258, 1261, 1281, 1292, 1294, 1299, 1312, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1877, 1907, 1928, 1959, 1964, 1974, 1977, 1987, 1990, 2001, 2020, 2028, 2029, 2030, 2050, 2054], "equal": [1, 12, 22, 25, 31, 42, 43, 44, 46, 58, 256, 495, 541, 613, 676, 690, 691, 692, 735, 736, 737, 738, 739, 756, 764, 765, 816, 817, 818, 821, 857, 872, 937, 944, 946, 957, 958, 977, 988, 1013, 1015, 1068, 1087, 1103, 1142, 1157, 1158, 1168, 1170, 1172, 1179, 1180, 1191, 1194, 1208, 1209, 1211, 1212, 1213, 1235, 1239, 1275, 1296, 1309, 1313, 1316, 1317, 1340, 1341, 1352, 1369, 1385, 1389, 1390, 1391, 1393, 1394, 1395, 1400, 1401, 1407, 1416, 1417, 1419, 1420, 1424, 1431, 1434, 1435, 1436, 1439, 1441, 1458, 1493, 1494, 1502, 1503, 1539, 1548, 1561, 1562, 1566, 1569, 1572, 1584, 1585, 1588, 1589, 1595, 1602, 1675, 1717, 1720, 1773, 1786, 1842, 1843, 1848, 1874, 1882, 1902, 1918, 1924, 1938, 1962, 1965, 1971, 1978, 1979, 1980, 1987, 1988, 1996, 2002, 2010, 2011, 2013, 2025, 2029, 2031, 2053], "term": [1, 8, 9, 31, 42, 47, 58, 554, 730, 759, 788, 958, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1129, 1130, 1131, 1134, 1146, 1172, 1178, 1282, 1392, 1400, 1441, 1448, 1458, 1459, 1493, 1502, 1519, 1590, 1602, 1637, 1648, 1675, 1689, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1756, 1805, 1841, 1849, 1960, 1964, 1986, 1987, 1992, 1993, 1994, 1996, 2001, 2009, 2011, 2012, 2015, 2021, 2024, 2035, 2042, 2044], "mulbackward0": [1, 905, 908, 909, 1992], "inplac": [1, 27, 46, 52, 54, 58, 60, 68, 69, 751, 754, 772, 774, 776, 787, 793, 810, 834, 835, 836, 853, 854, 859, 896, 897, 901, 922, 1156, 1250, 1396, 1406, 1425, 1426, 1427, 1428, 1429, 1432, 1444, 1445, 1446, 1474, 1487, 1488, 1506, 1507, 1508, 1515, 1517, 1530, 1559, 1567, 1578, 1579, 1580, 1581, 1582, 1586, 1597, 1598, 1599, 1608, 1624, 1639, 1640, 1642, 1645, 1647, 1657, 1669, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1923, 1962, 1971, 1987, 1992, 2009, 2034, 2049, 2053], "lead": [1, 5, 7, 20, 25, 32, 47, 49, 55, 58, 896, 897, 901, 904, 906, 910, 916, 970, 1149, 1167, 1172, 1281, 1458, 1503, 1519, 1871, 1877, 1935, 1964, 1979, 1980, 1987, 1989, 1991, 1992, 1993, 1995, 2001, 2002, 2005, 2011, 2012, 2015, 2020, 2024, 2029, 2030, 2039, 2044, 2045], "undefin": [1, 25, 32, 35, 49, 315, 467, 613, 874, 896, 900, 901, 902, 915, 916, 944, 952, 1101, 1151, 1152, 1400, 1736, 1779, 1987, 1990, 1992, 1993, 2003, 2020], "recurs": [1, 31, 46, 49, 58, 970, 974, 1090, 1178, 1191, 1250, 1262, 1264, 1488, 1682, 1683, 1759, 1963, 1992, 1999, 2012, 2020, 2041, 2044, 2045, 2047], "inner": [1, 3, 49, 50, 55, 811, 813, 904, 1081, 1157, 1161, 1166, 1176, 1908, 1962, 1992, 2010, 2020, 2034], "save_on_cpu": 1, "pin_memori": [1, 21, 60, 65, 69, 70, 71, 441, 442, 443, 444, 445, 1099, 1101, 1150, 1794, 1798, 1800, 1901, 1961, 1962, 1980, 1990, 1992, 2010, 2026, 2049], "within": [1, 5, 9, 12, 21, 22, 25, 29, 31, 42, 43, 44, 46, 47, 49, 57, 58, 75, 76, 84, 484, 874, 891, 915, 916, 922, 968, 980, 1005, 1081, 1175, 1250, 1254, 1343, 1397, 1398, 1399, 1407, 1426, 1427, 1428, 1432, 1434, 1481, 1482, 1483, 1488, 1494, 1527, 1539, 1593, 1603, 1618, 1619, 1620, 1675, 1693, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1709, 1710, 1711, 1712, 1713, 1790, 1791, 1821, 1842, 1922, 1926, 1941, 1961, 1963, 1964, 1975, 1977, 1980, 1985, 1989, 1990, 1992, 1997, 1998, 1999, 2002, 2009, 2011, 2012, 2015, 2018, 2019, 2020, 2021, 2029, 2036, 2042, 2044, 2046, 2053, 2054], "move": [1, 5, 7, 8, 9, 14, 25, 27, 49, 56, 58, 520, 585, 817, 1118, 1178, 1250, 1258, 1317, 1322, 1358, 1402, 1403, 1404, 1461, 1462, 1463, 1488, 1527, 1632, 1677, 1678, 1753, 1963, 1973, 1974, 1977, 1979, 1990, 1993, 1994, 1999, 2000, 2001, 2004, 2011, 2012, 2013, 2015, 2020, 2026, 2031, 2044, 2047, 2054], "copi": [1, 7, 11, 21, 22, 25, 27, 33, 40, 46, 49, 53, 54, 58, 186, 192, 202, 205, 311, 398, 444, 454, 459, 467, 489, 495, 576, 577, 578, 579, 599, 613, 788, 810, 834, 835, 875, 876, 894, 911, 912, 913, 935, 957, 965, 968, 1011, 1012, 1137, 1138, 1139, 1140, 1142, 1156, 1172, 1250, 1262, 1322, 1323, 1384, 1424, 1434, 1488, 1498, 1539, 1675, 1716, 1726, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1802, 1808, 1814, 1901, 1910, 1916, 1961, 1962, 1972, 1977, 1980, 1987, 1988, 1990, 1992, 1995, 2001, 2010, 2012, 2013, 2014, 2015, 2020, 2024, 2026, 2027, 2028, 2030, 2034, 2043, 2044, 2046, 2049, 2053], "pin": [1, 205, 333, 441, 442, 443, 444, 445, 459, 576, 599, 1099, 1101, 1150, 1250, 1488, 1716, 1794, 1798, 1800, 1901, 1960, 1980, 2026], "asynchron": [1, 3, 4, 57, 192, 205, 576, 599, 1024, 1250, 1253, 1269, 1488, 1960, 1965, 1989, 1991, 2020, 2026, 2029, 2052], "prod_1": 1, "prod_2": 1, "del": [1, 482, 1965, 1977, 1992, 1994], "illustr": [1, 1964, 1986, 1992, 2024, 2036, 2039, 2047, 2048], "aliv": [1, 5, 21, 33, 42, 1002, 1987, 1990, 1994, 2001, 2020, 2021, 2022], "live": [1, 29, 482, 1041, 1044, 1250, 1488, 1961, 1990, 1994, 1995, 2020, 2022, 2039, 2043, 2056], "releas": [1, 7, 20, 25, 42, 44, 53, 58, 509, 683, 958, 959, 998, 999, 1006, 1023, 1033, 1034, 1037, 1041, 1042, 1044, 1055, 1196, 1247, 1250, 1281, 1292, 1294, 1295, 1296, 1299, 1312, 1340, 1341, 1361, 1427, 1458, 1488, 1503, 1618, 1619, 1620, 1730, 1785, 1801, 1817, 1882, 1886, 1910, 1959, 1960, 1963, 1975, 1977, 1987, 1989, 1990, 1997, 2002, 2003, 2004, 2005, 2009, 2015, 2020, 2030, 2031, 2036, 2044, 2054], "delet": [1, 25, 58, 891, 893, 999, 1007, 1959, 1973, 1977, 1987, 2010, 2019, 2020, 2022, 2026, 2053], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 11, 12, 15, 18, 25, 27, 29, 43, 46, 49, 50, 57, 60, 77, 676, 685, 756, 764, 765, 904, 906, 910, 980, 1072, 1169, 1262, 1345, 1355, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1402, 1420, 1425, 1426, 1427, 1428, 1432, 1435, 1436, 1439, 1440, 1450, 1458, 1459, 1494, 1503, 1505, 1522, 1531, 1533, 1535, 1536, 1537, 1538, 1561, 1562, 1579, 1580, 1581, 1586, 1588, 1589, 1610, 1675, 1775, 1923, 1960, 1961, 1963, 1964, 1965, 1970, 1979, 1980, 1987, 1992, 1994, 1996, 2003, 2006, 2009, 2014, 2015, 2020, 2024, 2029, 2032, 2035, 2036, 2045, 2046], "messag": [1, 2, 5, 18, 25, 35, 44, 46, 54, 58, 60, 61, 79, 80, 620, 676, 1058, 1060, 1168, 1172, 1280, 1281, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1959, 1961, 1962, 1964, 1965, 1970, 1994, 2007, 2009, 2013, 2014, 2020, 2022, 2031, 2046, 2054], "get": [1, 8, 12, 14, 21, 25, 26, 27, 33, 42, 43, 44, 45, 46, 49, 54, 57, 58, 84, 146, 331, 682, 730, 784, 785, 857, 858, 889, 895, 911, 924, 935, 952, 1026, 1027, 1028, 1045, 1085, 1156, 1159, 1160, 1161, 1172, 1197, 1198, 1266, 1318, 1409, 1410, 1411, 1430, 1431, 1455, 1456, 1457, 1484, 1485, 1486, 1498, 1515, 1675, 1676, 1690, 1717, 1724, 1806, 1821, 1926, 1947, 1948, 1949, 1959, 1960, 1961, 1964, 1972, 1975, 1977, 1978, 1987, 1990, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2004, 2007, 2010, 2012, 2015, 2020, 2022, 2024, 2028, 2029, 2030, 2039, 2041, 2042, 2043, 2047, 2048, 2054, 2055], "register_multi_grad_hook": [1, 1987], "fn": [1, 33, 34, 35, 39, 44, 46, 49, 58, 903, 920, 921, 970, 971, 974, 1157, 1163, 1167, 1250, 1251, 1263, 1268, 1488, 1935, 1961, 1963, 1964, 1968, 1977, 1987, 1998, 2020, 2040, 2044, 2045, 2046, 2047, 2052, 2053, 2054], "multi": [1, 4, 33, 42, 756, 1002, 1045, 1065, 1098, 1118, 1213, 1250, 1401, 1424, 1439, 1458, 1488, 1491, 1492, 1493, 1494, 1503, 1531, 1533, 1540, 1566, 1675, 1960, 1961, 1964, 1987, 1989, 1990, 1999, 2003, 2011, 2020, 2024, 2027, 2030, 2032], "specifi": [1, 2, 3, 5, 8, 12, 14, 21, 22, 25, 27, 29, 30, 31, 33, 35, 40, 41, 42, 43, 46, 47, 49, 58, 93, 146, 191, 255, 315, 327, 467, 477, 489, 493, 495, 496, 509, 511, 513, 533, 541, 542, 556, 576, 579, 580, 581, 583, 584, 599, 676, 731, 737, 738, 739, 764, 765, 789, 790, 791, 795, 810, 819, 822, 836, 850, 854, 855, 857, 874, 876, 888, 889, 901, 902, 905, 908, 910, 935, 939, 962, 968, 987, 988, 999, 1001, 1002, 1011, 1012, 1013, 1015, 1030, 1033, 1044, 1069, 1079, 1080, 1081, 1085, 1086, 1088, 1098, 1101, 1112, 1115, 1117, 1118, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1133, 1135, 1157, 1158, 1161, 1167, 1170, 1175, 1177, 1192, 1204, 1212, 1213, 1247, 1250, 1254, 1266, 1267, 1293, 1303, 1305, 1307, 1308, 1317, 1320, 1322, 1323, 1333, 1350, 1352, 1358, 1378, 1379, 1382, 1398, 1399, 1400, 1401, 1407, 1419, 1421, 1423, 1424, 1430, 1431, 1434, 1441, 1447, 1448, 1453, 1454, 1458, 1479, 1480, 1485, 1488, 1491, 1492, 1493, 1494, 1495, 1502, 1519, 1520, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1561, 1562, 1565, 1566, 1576, 1577, 1584, 1585, 1590, 1593, 1605, 1612, 1629, 1630, 1637, 1644, 1650, 1651, 1675, 1681, 1682, 1683, 1689, 1690, 1691, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1727, 1730, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1752, 1753, 1754, 1755, 1756, 1761, 1766, 1767, 1775, 1783, 1792, 1808, 1813, 1814, 1817, 1833, 1860, 1862, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1880, 1881, 1882, 1885, 1902, 1904, 1908, 1918, 1919, 1920, 1921, 1922, 1926, 1929, 1930, 1931, 1935, 1959, 1961, 1963, 1964, 1968, 1970, 1971, 1972, 1974, 1975, 1978, 1979, 1987, 1990, 1992, 1997, 1999, 2001, 2005, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2019, 2020, 2024, 2025, 2026, 2027, 2029, 2031, 2036, 2040, 2042, 2053], "ignor": [1, 5, 7, 25, 29, 34, 40, 49, 58, 146, 495, 540, 682, 685, 686, 687, 731, 790, 791, 854, 857, 858, 889, 910, 915, 916, 936, 958, 960, 961, 988, 992, 997, 1045, 1046, 1065, 1066, 1119, 1121, 1129, 1130, 1131, 1172, 1195, 1211, 1250, 1262, 1268, 1271, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1320, 1342, 1379, 1380, 1381, 1397, 1398, 1399, 1400, 1401, 1421, 1423, 1431, 1439, 1441, 1447, 1453, 1454, 1458, 1479, 1480, 1481, 1482, 1483, 1488, 1491, 1492, 1493, 1494, 1495, 1502, 1503, 1519, 1520, 1531, 1536, 1565, 1566, 1576, 1585, 1605, 1629, 1637, 1675, 1730, 1738, 1761, 1769, 1773, 1833, 1864, 1865, 1882, 1886, 1910, 1961, 1964, 1965, 1971, 1979, 1987, 1990, 1992, 2009, 2024, 2031, 2041, 2050, 2053], "rel": [1, 8, 9, 14, 22, 25, 31, 49, 58, 483, 484, 690, 872, 915, 916, 920, 921, 988, 1178, 1239, 1305, 1308, 1536, 1537, 1558, 1593, 1738, 1742, 1743, 1755, 1769, 1971, 1975, 1989, 1990, 1995, 1998, 2009, 2012, 2031, 2047], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 12, 46, 47, 58, 60, 67, 68, 69, 793, 834, 835, 853, 854, 968, 980, 1156, 1254, 2007, 2012, 2030, 2043, 2044], "_allowmutationonsavedcontext": 1, "purpos": [1, 22, 25, 58, 83, 467, 495, 756, 915, 1260, 1345, 1407, 1439, 1494, 1669, 1670, 1671, 1672, 1833, 1975, 1980, 1987, 1992, 2012, 2021, 2040, 2044, 2047, 2048, 2054], "clear": [1, 2, 8, 9, 44, 58, 935, 976, 1173, 1250, 1488, 1489, 1498, 1737, 1959, 1987, 1990, 1999, 2004, 2010, 2011], "upon": [1, 2, 21, 26, 33, 35, 58, 968, 1551, 1675, 1692, 1695, 1919, 1977, 1987, 1990, 2009, 2015, 2022], "sin_": [1, 1962, 1978], "8415": [1, 1992, 2024], "sinbackward0": 1, "gradientedg": [1, 889, 910], "output_nr": [1, 1962, 2010], "edg": [1, 47, 775, 781, 1204, 1212, 1213, 1604, 1663, 1969, 1993, 2021, 2050], "get_gradient_edg": 1, "variou": [2, 5, 14, 21, 25, 46, 58, 676, 1323, 1924, 1926, 1968, 1971, 1977, 1980, 1992, 1999, 2001, 2011, 2015, 2017, 2024, 2035, 2043, 2055], "get_cpu_cap": 2, "capabl": [2, 8, 14, 15, 25, 1026, 1682, 1683, 1792, 1947, 1990, 1997, 1998, 2000, 2032], "string": [2, 3, 5, 13, 14, 21, 25, 33, 39, 40, 42, 46, 47, 58, 599, 797, 810, 850, 975, 1024, 1041, 1042, 1098, 1156, 1172, 1250, 1258, 1261, 1322, 1415, 1416, 1417, 1488, 1489, 1498, 1531, 1533, 1535, 1568, 1569, 1570, 1706, 1785, 1817, 1825, 1827, 1925, 1926, 1959, 1962, 1963, 1964, 1965, 1968, 1979, 1987, 1992, 1998, 1999, 2004, 2007, 2009, 2012, 2014, 2020, 2026, 2027, 2029, 2034, 2040, 2044, 2047, 2054, 2055, 2056], "vsx": 2, "z": [2, 3, 10, 31, 49, 54, 60, 63, 68, 69, 613, 816, 873, 896, 899, 901, 902, 931, 959, 977, 1098, 1102, 1352, 1440, 1593, 1695, 1728, 1729, 1779, 1809, 1810, 1961, 1962, 1963, 1979, 1987, 1989, 1990, 1996, 1997, 2007, 2009, 2012, 2018, 2020, 2022, 2039, 2042, 2044, 2053, 2054], "vector": [2, 11, 22, 31, 49, 50, 54, 250, 309, 311, 317, 685, 686, 687, 880, 889, 894, 904, 905, 906, 907, 908, 909, 910, 949, 950, 956, 967, 984, 988, 998, 1079, 1080, 1085, 1087, 1162, 1166, 1167, 1195, 1283, 1290, 1298, 1306, 1307, 1311, 1314, 1318, 1319, 1320, 1340, 1345, 1352, 1374, 1376, 1402, 1403, 1404, 1407, 1424, 1430, 1431, 1434, 1442, 1450, 1451, 1452, 1497, 1527, 1536, 1539, 1584, 1585, 1593, 1595, 1630, 1634, 1662, 1680, 1688, 1690, 1695, 1726, 1730, 1774, 1775, 1866, 1886, 1929, 1932, 1935, 1981, 1987, 1996, 2015, 2024, 2029, 2036, 2046], "NO": [2, 81, 83, 1171], "avx": [2, 2038], "avx2": [2, 2015, 2038], "avx512": [2, 2038], "is_built": [2, 2000], "built": [2, 3, 7, 8, 14, 22, 25, 30, 35, 52, 58, 969, 1024, 1260, 1537, 1761, 1960, 1968, 1980, 1987, 1989, 1990, 1992, 1997, 1999, 2000, 2001, 2015, 2017, 2040, 2041, 2047, 2054, 2055], "necessarili": [2, 22, 25, 31, 33, 42, 46, 80, 467, 915, 1287, 1309, 1320, 1351, 1423, 1495, 1682, 1683, 1990, 1992], "machin": [2, 25, 33, 42, 49, 50, 55, 1254, 1260, 1296, 1524, 1997, 1998, 1999, 2000, 2001, 2003, 2006, 2007, 2012, 2019, 2020, 2021, 2035, 2036, 2038, 2046], "driver": [2, 1195, 1296, 1314, 1315, 1360, 1962, 1990, 2002, 2020, 2052, 2054], "would": [2, 3, 5, 8, 9, 11, 14, 21, 25, 31, 33, 35, 42, 43, 46, 47, 49, 51, 54, 58, 146, 441, 442, 443, 444, 445, 482, 694, 756, 790, 850, 889, 896, 897, 901, 910, 958, 1099, 1101, 1119, 1150, 1160, 1161, 1171, 1172, 1181, 1182, 1183, 1248, 1250, 1251, 1255, 1258, 1266, 1267, 1365, 1366, 1374, 1397, 1398, 1399, 1400, 1401, 1439, 1453, 1458, 1481, 1482, 1483, 1488, 1498, 1503, 1593, 1604, 1666, 1675, 1676, 1682, 1683, 1716, 1728, 1756, 1794, 1798, 1800, 1811, 1821, 1901, 1902, 1907, 1961, 1963, 1964, 1972, 1978, 1979, 1980, 1981, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1995, 1996, 2001, 2004, 2009, 2011, 2012, 2013, 2015, 2020, 2021, 2022, 2024, 2039, 2040, 2042, 2043, 2044, 2046, 2048, 2050, 2053, 2054], "allow_tf32": [2, 1829, 1962, 1990, 2002], "tensorfloat": 2, "core": [2, 3, 7, 8, 46, 53, 76, 968, 993, 1055, 1736, 1964, 1968, 1989, 1990, 1991, 2001, 2002, 2012, 2032, 2042, 2044, 2047, 2051], "amper": [2, 2024], "newer": [2, 14, 46, 1061, 1724, 1989, 1990, 2004, 2006, 2011, 2012, 2016, 2046], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1990, 2002], "reduc": [2, 3, 14, 22, 25, 26, 27, 29, 49, 317, 509, 512, 513, 682, 689, 691, 692, 693, 695, 815, 816, 817, 818, 821, 823, 870, 871, 968, 973, 1012, 1023, 1055, 1169, 1224, 1303, 1307, 1309, 1314, 1320, 1338, 1348, 1350, 1351, 1353, 1356, 1379, 1380, 1381, 1382, 1400, 1401, 1402, 1403, 1404, 1421, 1423, 1431, 1447, 1453, 1454, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1527, 1536, 1565, 1566, 1574, 1576, 1585, 1601, 1604, 1605, 1606, 1617, 1625, 1626, 1627, 1628, 1629, 1630, 1637, 1648, 1649, 1660, 1663, 1675, 1690, 1728, 1745, 1769, 1783, 1785, 1786, 1820, 1863, 1867, 1880, 1881, 1885, 1886, 1908, 1923, 1930, 1931, 1962, 1977, 1978, 1987, 1989, 1991, 1992, 1995, 1999, 2001, 2003, 2004, 2005, 2010, 2011, 2012, 2013, 2015, 2024, 2039, 2042, 2044, 2049, 2050, 2054, 2055], "precis": [2, 3, 8, 11, 14, 22, 31, 49, 682, 685, 915, 916, 936, 948, 1044, 1141, 1200, 1296, 1314, 1320, 1345, 1355, 1397, 1398, 1399, 1401, 1415, 1416, 1417, 1418, 1419, 1420, 1440, 1459, 1475, 1481, 1482, 1483, 1540, 1604, 1644, 1675, 1814, 1829, 1833, 1960, 1964, 1975, 1981, 1987, 1999, 2012, 2015, 2016, 2018, 2025, 2027, 2029, 2030, 2051, 2057], "gemm": [2, 1989, 2009, 2044], "allow_bf16_reduced_precision_reduct": [2, 1990, 2002], "cufft_plan_cach": [2, 1990], "cufft": 2, "queri": [2, 25, 42, 58, 731, 1001, 1002, 1004, 1010, 1057, 1061, 1075, 1076, 1179, 1250, 1362, 1488, 1494, 1548, 1644, 1694, 1940, 1962, 1990, 2012, 2042, 2043, 2047], "specif": [2, 3, 7, 8, 9, 14, 25, 27, 29, 30, 31, 33, 40, 42, 44, 46, 49, 54, 58, 60, 75, 77, 82, 84, 509, 850, 857, 928, 1004, 1089, 1118, 1213, 1247, 1254, 1260, 1264, 1266, 1267, 1351, 1434, 1460, 1644, 1669, 1670, 1697, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1752, 1753, 1754, 1755, 1756, 1824, 1829, 1863, 1924, 1940, 1959, 1961, 1963, 1964, 1966, 1968, 1970, 1975, 1979, 1981, 1987, 1990, 1992, 1997, 2001, 2003, 2007, 2009, 2011, 2012, 2014, 2015, 2016, 2018, 2020, 2022, 2029, 2030, 2036, 2038, 2042, 2043, 2044, 2046, 2047, 2051, 2053, 2054, 2059], "via": [2, 7, 14, 15, 21, 25, 27, 31, 40, 46, 47, 49, 53, 56, 58, 411, 482, 513, 613, 915, 916, 924, 955, 999, 1035, 1055, 1102, 1159, 1173, 1174, 1176, 1178, 1323, 1402, 1403, 1404, 1424, 1442, 1450, 1451, 1452, 1460, 1527, 1689, 1724, 1727, 1767, 1961, 1963, 1964, 1968, 1975, 1977, 1980, 1985, 1987, 1990, 1992, 1993, 1994, 1997, 1999, 2001, 2002, 2009, 2012, 2015, 2020, 2021, 2024, 2027, 2028, 2040, 2042, 2043, 2047, 2050, 2055], "readonli": 2, "int": [2, 3, 12, 18, 21, 22, 25, 27, 29, 30, 31, 33, 36, 39, 40, 42, 43, 45, 46, 47, 49, 58, 60, 68, 69, 71, 74, 84, 212, 214, 228, 229, 238, 250, 309, 311, 313, 317, 433, 440, 441, 443, 445, 453, 468, 472, 489, 493, 495, 509, 511, 513, 516, 533, 539, 541, 542, 554, 556, 562, 579, 580, 581, 583, 584, 603, 613, 676, 689, 691, 692, 693, 695, 751, 752, 771, 773, 775, 776, 781, 782, 783, 815, 870, 871, 872, 874, 888, 896, 899, 901, 902, 919, 924, 931, 937, 939, 946, 953, 955, 962, 967, 987, 988, 992, 993, 997, 998, 1002, 1004, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1026, 1027, 1028, 1030, 1032, 1036, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1096, 1099, 1101, 1111, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1150, 1152, 1153, 1157, 1158, 1159, 1160, 1161, 1167, 1185, 1187, 1192, 1199, 1201, 1202, 1204, 1208, 1209, 1211, 1212, 1213, 1214, 1225, 1226, 1247, 1248, 1250, 1251, 1253, 1256, 1257, 1262, 1270, 1272, 1282, 1283, 1303, 1304, 1307, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1330, 1337, 1338, 1343, 1348, 1350, 1351, 1353, 1356, 1358, 1359, 1360, 1364, 1374, 1379, 1380, 1381, 1382, 1383, 1384, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1431, 1433, 1434, 1435, 1436, 1438, 1440, 1442, 1450, 1451, 1452, 1455, 1456, 1457, 1459, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1473, 1475, 1476, 1478, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1490, 1493, 1495, 1496, 1499, 1500, 1501, 1505, 1509, 1510, 1511, 1512, 1513, 1514, 1521, 1523, 1524, 1527, 1531, 1533, 1535, 1536, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1575, 1576, 1577, 1584, 1585, 1592, 1595, 1604, 1612, 1629, 1630, 1631, 1635, 1636, 1650, 1651, 1659, 1663, 1664, 1665, 1675, 1690, 1691, 1700, 1701, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1717, 1719, 1724, 1727, 1730, 1731, 1733, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1775, 1776, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1796, 1797, 1798, 1800, 1806, 1807, 1808, 1811, 1812, 1813, 1814, 1817, 1822, 1823, 1824, 1828, 1831, 1832, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1854, 1858, 1862, 1865, 1866, 1867, 1874, 1877, 1879, 1880, 1881, 1882, 1885, 1887, 1891, 1898, 1902, 1903, 1905, 1907, 1908, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1922, 1925, 1926, 1929, 1930, 1931, 1935, 1936, 1940, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1953, 1956, 1957, 1961, 1962, 1963, 1964, 1965, 1975, 1977, 1978, 1980, 1985, 1990, 1993, 2001, 2004, 2007, 2009, 2010, 2013, 2014, 2015, 2019, 2020, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2036, 2042, 2044, 2047, 2049, 2053, 2056, 2057], "show": [2, 4, 7, 13, 18, 21, 22, 25, 27, 32, 46, 49, 58, 76, 904, 910, 968, 1149, 1250, 1352, 1488, 1666, 1737, 1959, 1960, 1964, 1978, 1989, 1990, 1991, 1992, 1996, 1997, 1999, 2007, 2009, 2011, 2012, 2020, 2022, 2046, 2048, 2051, 2052, 2054, 2056], "max_siz": [2, 41, 43, 1990], "capac": [2, 1068, 1990, 2001], "preferred_linalg_librari": [2, 1287], "overrid": [2, 5, 14, 22, 25, 26, 31, 35, 43, 49, 54, 58, 788, 789, 850, 886, 888, 901, 902, 1041, 1400, 1401, 1421, 1423, 1447, 1454, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1504, 1519, 1520, 1536, 1565, 1566, 1576, 1605, 1629, 1637, 1697, 1756, 1817, 1833, 1960, 1964, 1968, 1972, 2004, 2011, 2012, 2015, 2020, 2024, 2029, 2034, 2053], "heurist": [2, 14, 21, 42, 43, 58, 973, 1098, 1995, 2039, 2048], "choos": [2, 9, 15, 58, 888, 901, 902, 928, 1024, 1296, 1309, 1314, 1400, 1985, 1986, 1989, 2012, 2016, 2029], "cusolv": [2, 1314, 1315, 1886], "magma": [2, 1296, 1340, 1785, 1886, 2005, 2024], "algebra": [2, 9, 1098, 1287, 1308, 1960, 1969], "subject": [2, 3, 11, 18, 25, 27, 29, 30, 49, 57, 58, 59, 229, 861, 1546, 1547, 1548, 1551, 1644, 1675, 1964, 1978, 1979, 1987, 1992, 2009, 2013, 2014, 2015, 2016, 2020, 2024, 2027, 2032, 2033, 2034, 2036, 2042, 2051], "decid": [2, 4, 7, 25, 42, 53, 482, 1706, 1971, 2009, 2024, 2043, 2044, 2048], "wherev": [2, 9, 1978, 2047], "pick": [2, 25, 41, 43, 509, 968, 1987, 2020, 2041, 2042, 2048], "prefer": [2, 9, 21, 25, 27, 33, 49, 858, 874, 906, 1182, 1248, 1291, 1304, 1308, 1316, 1323, 1495, 1644, 1821, 1882, 1901, 1961, 1972, 1987, 1990, 2011, 2012, 2024, 2044], "environ": [2, 3, 7, 14, 15, 18, 20, 22, 31, 33, 35, 40, 45, 46, 58, 75, 77, 676, 1260, 1266, 1458, 1503, 1923, 1959, 1961, 1970, 1987, 1989, 1990, 1991, 1997, 2002, 2003, 2005, 2013, 2020, 2036, 2038, 2040, 2044, 2054], "variabl": [2, 3, 5, 12, 14, 18, 20, 22, 31, 33, 35, 40, 45, 47, 49, 54, 58, 60, 63, 68, 69, 75, 77, 444, 676, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 724, 725, 726, 727, 728, 730, 734, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 795, 896, 897, 901, 980, 984, 988, 1067, 1099, 1167, 1172, 1264, 1266, 1323, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1430, 1431, 1439, 1440, 1458, 1459, 1460, 1473, 1475, 1488, 1491, 1496, 1503, 1505, 1675, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1734, 1738, 1740, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1794, 1796, 1798, 1923, 1935, 1957, 1959, 1960, 1970, 1971, 1979, 1980, 1987, 1989, 1990, 1991, 1994, 1996, 2002, 2003, 2005, 2007, 2009, 2011, 2015, 2020, 2026, 2029, 2036, 2041, 2042, 2044, 2046, 2054], "torch_linalg_prefer_cusolv": 2, "global": [2, 3, 5, 8, 12, 21, 25, 27, 29, 31, 33, 43, 49, 54, 57, 58, 60, 63, 68, 69, 850, 857, 861, 869, 924, 937, 946, 980, 999, 1033, 1050, 1057, 1099, 1101, 1111, 1116, 1134, 1150, 1153, 1156, 1208, 1209, 1231, 1238, 1250, 1253, 1266, 1270, 1321, 1337, 1488, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1702, 1706, 1734, 1794, 1796, 1798, 1801, 1825, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1957, 1961, 1964, 1965, 1981, 1986, 1992, 1998, 1999, 2001, 2003, 2004, 2015, 2020, 2021, 2022, 2024, 2027, 2029, 2041, 2043, 2044, 2045, 2053, 2054], "overridden": [2, 14, 58, 885, 886, 887, 901, 902, 1041, 1488, 1861, 1964, 1987, 1992, 2002, 2013, 2054, 2055], "achiev": [2, 21, 22, 25, 30, 31, 43, 49, 1098, 1163, 1250, 1401, 1407, 1488, 1494, 1495, 1566, 1595, 1675, 1976, 1990, 1998, 2001, 2012, 2020, 2022, 2054], "better": [2, 3, 7, 8, 9, 14, 21, 24, 25, 33, 46, 53, 911, 968, 1067, 1155, 1159, 1160, 1169, 1237, 1266, 1423, 1521, 1644, 1650, 1675, 1682, 1683, 1767, 1792, 1964, 1986, 1987, 1989, 1990, 1995, 1996, 2003, 2005, 2009, 2011, 2014, 2015, 2016, 2024, 2029, 2034, 2040, 2041, 2047, 2051], "select": [2, 5, 15, 19, 21, 25, 27, 31, 33, 47, 309, 311, 313, 317, 756, 958, 990, 992, 996, 1005, 1006, 1010, 1017, 1018, 1019, 1020, 1022, 1043, 1047, 1049, 1050, 1051, 1053, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1067, 1068, 1071, 1073, 1075, 1076, 1118, 1323, 1352, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1439, 1458, 1503, 1551, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1644, 1711, 1712, 1824, 1898, 1926, 1938, 1941, 1942, 1943, 1944, 1946, 1953, 1954, 1955, 1961, 1962, 1964, 1977, 1978, 1979, 1980, 1987, 1989, 1990, 1996, 2003, 2010, 2015, 2024, 2028, 2031, 2041, 2047, 2049, 2051, 2056], "incorrect": [2, 4, 5, 49, 58, 80, 81, 83, 250, 509, 552, 896, 899, 901, 915, 924, 950, 1266, 1309, 1322, 1494, 1531, 1532, 1533, 1534, 1535, 1662, 1730, 1871, 1882, 1961, 1964, 1990, 2002, 2009], "linalg": [2, 11, 402, 958, 959, 960, 961, 998, 1084, 1195, 1228, 1331, 1340, 1341, 1342, 1346, 1347, 1689, 1690, 1695, 1730, 1772, 1777, 1779, 1785, 1855, 1886, 1887, 1910, 1932, 1960], "inv": [2, 31, 1228, 1282, 1286, 1292, 1308, 1312, 1316], "inv_ex": 2, "cholesky_ex": [2, 1280], "lu_factor": [2, 1299, 1300, 1340, 1341, 1342], "lu": [2, 10, 1292, 1298, 1299, 1300, 1341, 1342, 1962], "eigh": [2, 1280, 1286, 1289, 1308, 1314, 2002], "eighval": 2, "svdval": [2, 1282, 1296, 1305, 1314, 1886, 2002], "_linalgbackend": 2, "sdpaparam": 2, "flash_sdp_en": 2, "flash": 2, "scale": [2, 7, 21, 31, 33, 41, 43, 93, 169, 469, 471, 613, 681, 685, 686, 687, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 755, 766, 768, 769, 770, 771, 773, 776, 777, 791, 795, 798, 815, 816, 817, 818, 821, 936, 1112, 1113, 1116, 1134, 1166, 1167, 1337, 1396, 1425, 1430, 1431, 1432, 1448, 1460, 1515, 1540, 1541, 1542, 1546, 1551, 1584, 1585, 1586, 1602, 1604, 1644, 1645, 1650, 1740, 1761, 1787, 1788, 1789, 1790, 1791, 1864, 1865, 1883, 1935, 1960, 1962, 1979, 1985, 1990, 1994, 1999, 2007, 2015, 2016, 2018, 2025, 2044], "product": [2, 15, 25, 31, 42, 146, 682, 685, 686, 687, 756, 889, 894, 905, 907, 908, 909, 910, 936, 948, 954, 958, 984, 998, 1010, 1057, 1061, 1075, 1076, 1079, 1095, 1098, 1162, 1166, 1167, 1227, 1271, 1283, 1290, 1316, 1317, 1319, 1345, 1352, 1355, 1376, 1439, 1440, 1458, 1459, 1546, 1551, 1592, 1644, 1689, 1773, 1774, 1783, 1829, 1903, 1918, 1932, 1935, 1960, 1961, 1978, 1987, 1996, 1998, 2002, 2012, 2015, 2024, 2056], "attent": [2, 7, 30, 731, 1401, 1494, 1531, 1533, 1535, 1546, 1548, 1566, 1644, 1960, 2005, 2028], "enable_mem_efficient_sdp": [2, 1644], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1644], "math_sdp_en": 2, "math": [2, 21, 58, 1108, 1300, 1302, 1605, 1644, 1775, 1792, 1887, 1960, 1961, 1963, 1964, 1995, 2002, 2024, 2025, 2031, 2054], "enable_math_sdp": [2, 1644], "cudnn_sdp_en": 2, "enable_cudnn_sdp": 2, "can_use_flash_attent": 2, "debug": [2, 4, 5, 8, 21, 39, 46, 75, 77, 676, 823, 824, 828, 839, 915, 916, 968, 970, 975, 999, 1032, 1072, 1199, 1280, 1669, 1670, 1671, 1672, 1828, 1835, 1960, 1963, 1970, 1987, 1989, 1990, 1991, 1997, 1998, 1999, 2003, 2005, 2007, 2009, 2012, 2033, 2041, 2042, 2045, 2046, 2050, 2056], "check": [2, 3, 4, 5, 11, 14, 21, 25, 26, 27, 31, 33, 42, 49, 60, 61, 66, 69, 217, 336, 495, 690, 857, 896, 897, 899, 900, 901, 902, 915, 916, 922, 970, 1001, 1002, 1004, 1008, 1037, 1055, 1170, 1172, 1186, 1187, 1237, 1247, 1250, 1266, 1267, 1280, 1281, 1286, 1287, 1289, 1292, 1294, 1299, 1305, 1308, 1312, 1314, 1315, 1340, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1488, 1666, 1675, 1692, 1695, 1708, 1718, 1737, 1738, 1861, 1868, 1869, 1870, 1871, 1872, 1873, 1924, 1926, 1940, 1959, 1960, 1963, 1964, 1965, 1978, 1979, 1986, 1990, 1992, 1993, 1994, 1995, 1998, 1999, 2000, 2003, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2020, 2024, 2029, 2031, 2038, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2053, 2054, 2055], "flashattent": [2, 1535, 1644], "util": [2, 7, 17, 43, 46, 47, 49, 50, 57, 58, 60, 495, 728, 731, 734, 735, 736, 741, 742, 752, 756, 760, 786, 794, 902, 1015, 1099, 1100, 1101, 1149, 1186, 1187, 1250, 1439, 1458, 1488, 1503, 1504, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1692, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1716, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1761, 1767, 1890, 1891, 1893, 1894, 1895, 1923, 1960, 1964, 1968, 1972, 1975, 1986, 1988, 1989, 1990, 1992, 1994, 1996, 1998, 1999, 2001, 2003, 2009, 2011, 2012, 2013, 2042, 2044, 2052, 2054], "scaled_dot_product_attent": [2, 1494, 1547, 1550, 1962, 1982, 1983, 1984, 2010], "_sdpaparam": 2, "kei": [2, 3, 21, 27, 33, 40, 42, 43, 47, 49, 56, 58, 411, 599, 676, 731, 850, 855, 923, 928, 935, 1064, 1155, 1165, 1250, 1266, 1267, 1322, 1488, 1489, 1494, 1498, 1531, 1532, 1533, 1534, 1535, 1548, 1644, 1709, 1725, 1924, 1926, 1960, 1962, 1963, 1964, 1968, 1990, 1992, 1998, 1999, 2004, 2009, 2010, 2011, 2014, 2015, 2018, 2020, 2021, 2026, 2029, 2031, 2033, 2035, 2045, 2047, 2051, 2052, 2053], "mask": [2, 40, 395, 396, 397, 398, 399, 540, 731, 915, 916, 1344, 1396, 1407, 1432, 1494, 1531, 1532, 1533, 1534, 1535, 1586, 1644, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1756, 1960, 1962, 1978, 1979, 2024, 2044], "dropout": [2, 5, 58, 730, 731, 756, 1250, 1396, 1426, 1427, 1428, 1432, 1439, 1458, 1488, 1494, 1503, 1504, 1531, 1533, 1535, 1559, 1579, 1580, 1581, 1586, 1644, 1960, 1962, 1973, 1979, 1980, 1987, 1990, 2010, 2017], "causal": [2, 731, 1494, 1531, 1532, 1533, 1534, 1535, 1547, 1548, 1549, 1550, 1644], "warn": [2, 14, 18, 22, 25, 29, 46, 80, 81, 83, 676, 904, 910, 958, 1010, 1057, 1061, 1072, 1075, 1076, 1167, 1172, 1231, 1247, 1266, 1308, 1322, 1352, 1494, 1531, 1532, 1533, 1534, 1535, 1546, 1692, 1695, 1828, 1835, 1882, 1923, 1935, 1959, 1970, 1975, 1988, 1992, 2007, 2010, 2012, 2019, 2047, 2054], "why": [2, 3, 7, 21, 54, 58, 1098, 1254, 1644, 1960, 1971, 1993, 1995, 2042, 2043, 2052, 2056], "could": [2, 4, 5, 7, 8, 21, 25, 30, 31, 33, 42, 49, 54, 57, 58, 579, 580, 581, 583, 584, 924, 970, 1037, 1119, 1121, 1129, 1130, 1131, 1247, 1256, 1281, 1322, 1340, 1365, 1366, 1682, 1683, 1760, 1863, 1919, 1963, 1964, 1971, 1977, 1987, 1990, 1991, 2005, 2009, 2012, 2015, 2016, 2020, 2021, 2022, 2024, 2028, 2029, 2040, 2044, 2045, 2050, 2054], "depend": [2, 4, 5, 12, 14, 21, 25, 27, 29, 31, 33, 42, 43, 44, 47, 49, 58, 311, 781, 874, 1010, 1057, 1061, 1075, 1076, 1119, 1121, 1129, 1130, 1131, 1157, 1161, 1166, 1172, 1179, 1181, 1182, 1183, 1185, 1262, 1266, 1286, 1287, 1314, 1340, 1345, 1400, 1401, 1421, 1423, 1431, 1434, 1447, 1453, 1454, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1536, 1539, 1540, 1558, 1565, 1566, 1576, 1585, 1593, 1605, 1629, 1637, 1644, 1663, 1666, 1675, 1695, 1696, 1702, 1761, 1773, 1775, 1792, 1808, 1868, 1869, 1870, 1872, 1873, 1886, 1910, 1938, 1959, 1961, 1963, 1964, 1968, 1971, 1972, 1977, 1987, 1989, 1990, 1992, 1993, 1995, 1996, 1999, 2001, 2006, 2008, 2009, 2014, 2015, 2020, 2024, 2030, 2031, 2035, 2036, 2039, 2040, 2042, 2043, 2044, 2046, 2047, 2050, 2053, 2056], "can_use_efficient_attent": 2, "efficient_attent": 2, "sdp_kernel": [2, 1644], "enable_flash": 2, "enable_math": [2, 1644], "enable_mem_effici": 2, "enable_cudnn": 2, "temporarili": [2, 33, 1825, 1987, 2009, 2014, 2048], "previou": [2, 18, 25, 42, 46, 49, 58, 552, 756, 968, 1033, 1143, 1204, 1261, 1321, 1337, 1439, 1458, 1503, 1551, 1675, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1737, 1792, 1882, 1973, 1987, 1990, 1992, 1999, 2005, 2007, 2015, 2022, 2036, 2044], "restor": [2, 5, 27, 29, 58, 84, 976, 1143, 1321, 1337, 1551, 1727, 1812, 1833, 1999, 2004, 2041], "is_avail": [2, 17, 25, 1926, 1960, 1990, 1997, 2000, 2004, 2014, 2036, 2059], "determinist": [2, 3, 5, 20, 25, 31, 58, 80, 84, 482, 495, 509, 869, 1099, 1100, 1101, 1199, 1231, 1253, 1266, 1267, 1348, 1351, 1353, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1458, 1503, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1644, 1822, 1828, 1923, 1960, 1962, 1987, 1995, 2003, 2011, 2019], "algorithm": [2, 3, 7, 11, 19, 22, 26, 29, 31, 33, 49, 84, 756, 775, 781, 958, 1247, 1291, 1298, 1304, 1308, 1314, 1323, 1340, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1437, 1439, 1458, 1503, 1539, 1540, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1593, 1604, 1644, 1663, 1675, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1756, 1775, 1814, 1829, 1886, 1887, 1923, 1960, 1987, 1990, 2002, 2020, 2024], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 24, 495, 869, 1099, 1100, 1101, 1231, 1828, 2003], "benchmark": [2, 1960, 1962, 1990, 1997, 2039, 2044, 2051], "fastest": [2, 873, 1675, 1729, 1742, 1743, 1755, 1996, 2003, 2011], "benchmark_limit": 2, "maximum": [2, 24, 31, 42, 43, 46, 495, 691, 693, 767, 791, 816, 817, 818, 821, 822, 870, 1012, 1047, 1049, 1055, 1062, 1063, 1077, 1078, 1099, 1100, 1101, 1144, 1161, 1211, 1212, 1213, 1323, 1348, 1369, 1446, 1584, 1585, 1681, 1759, 1767, 1792, 1806, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1925, 1962, 1970, 1985, 1986, 1990, 2001, 2010, 2018, 2031, 2042, 2049, 2056], "try": [2, 3, 4, 7, 8, 25, 27, 34, 35, 39, 42, 46, 49, 53, 54, 78, 79, 968, 1068, 1152, 1161, 1167, 1172, 1190, 1255, 1257, 1266, 1287, 1369, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1531, 1532, 1534, 1540, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1644, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1935, 1959, 1961, 1964, 1965, 1968, 1987, 1990, 1992, 1994, 1996, 2001, 2009, 2011, 2012, 2015, 2016, 2020, 2024, 2040, 2042, 2043, 2044, 2046, 2054, 2056], "dispatch": [2, 25, 49, 58, 80, 81, 83, 1255, 1365, 1366, 1924, 1926, 1964, 1968, 1990, 1992, 2007, 2009, 2044, 2045, 2055], "v8": 2, "get_fastpath_en": 2, "fast": [2, 7, 8, 21, 25, 915, 1429, 1450, 1451, 1452, 1519, 1535, 1682, 1683, 1767, 1773, 1792, 1814, 1829, 1960, 1989, 1990, 1992, 1997, 2011, 2020, 2024, 2027, 2028, 2035, 2043, 2046, 2048, 2056], "path": [2, 3, 4, 8, 14, 25, 27, 40, 42, 44, 45, 46, 49, 58, 730, 925, 926, 927, 999, 1098, 1250, 1488, 1504, 1535, 1737, 1959, 1960, 1962, 1963, 1987, 1990, 1992, 1995, 1997, 2004, 2007, 2012, 2014, 2024, 2033, 2036, 2039, 2046, 2047, 2048], "transformerencod": 2, "multiheadattent": [2, 1531, 1533, 1535, 2015], "fastpath": [2, 1494, 2043], "condit": [2, 5, 12, 19, 21, 46, 47, 54, 58, 60, 63, 68, 69, 613, 616, 620, 690, 756, 905, 915, 916, 980, 1247, 1266, 1280, 1282, 1287, 1290, 1296, 1297, 1298, 1309, 1314, 1439, 1458, 1503, 1535, 1718, 1723, 1910, 1938, 1961, 1962, 1963, 1965, 1980, 1987, 1992, 2002, 2013, 2029, 2041, 2042, 2043, 2049], "met": [2, 12, 613, 980, 1290, 1297, 1298, 1309, 1323, 1535, 1871], "set_fastpath_en": 2, "verbos": [2, 14, 25, 58, 676, 1172, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1959, 1970, 1979, 2009, 2029, 2054], "On": [2, 14, 20, 21, 25, 26, 31, 43, 49, 54, 58, 682, 685, 936, 948, 1298, 1345, 1355, 1415, 1416, 1417, 1418, 1419, 1420, 1440, 1455, 1456, 1457, 1458, 1459, 1475, 1498, 1503, 1516, 1675, 1742, 1743, 1752, 1755, 1960, 1961, 1971, 1987, 1989, 1990, 1992, 2002, 2012, 2020, 2021, 2022, 2024, 2039, 2042, 2043, 2044], "demand": [2, 21, 1035, 1963, 1998, 2001, 2020], "onemkl": 2, "easier": [2, 7, 21, 46, 58, 1961, 1963, 1980, 1987, 1988, 1992, 1993, 1995, 2024, 2044, 2054], "dump": [2, 58, 999, 1991, 2005, 2044, 2047, 2054], "durat": [2, 25, 39, 42, 933, 1365, 1366, 1975, 2007, 2014, 2044, 2054], "kernel": [2, 3, 4, 11, 14, 18, 25, 49, 57, 482, 735, 736, 737, 738, 739, 768, 769, 770, 922, 968, 997, 1002, 1004, 1005, 1041, 1042, 1074, 1076, 1371, 1397, 1398, 1399, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1435, 1436, 1455, 1456, 1457, 1464, 1465, 1466, 1467, 1468, 1469, 1481, 1482, 1483, 1484, 1485, 1486, 1539, 1568, 1569, 1570, 1571, 1572, 1573, 1588, 1589, 1644, 1682, 1683, 1693, 1924, 1926, 1940, 1941, 1956, 1961, 1968, 1973, 1980, 1990, 1992, 1993, 1995, 2000, 2002, 2009, 2011, 2014, 2016, 2024, 2039, 2041, 2043, 2044, 2045, 2046, 2052, 2054], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 21, 25, 58, 676, 854, 986, 988, 1055, 1287, 1296, 1314, 1392, 1434, 1539, 1587, 1675, 1767, 1853, 1866, 1960, 1977, 1979, 1980, 1989, 1990, 1994, 1999, 2002, 2004, 2007, 2009, 2012, 2013, 2016, 2020, 2024, 2027, 2030, 2039, 2044, 2052, 2054, 2056], "moreov": [2, 49, 77, 509, 1675, 1755], "investig": [2, 7, 25, 54, 2052], "singl": [2, 3, 5, 12, 14, 22, 25, 27, 29, 31, 33, 35, 41, 42, 49, 50, 52, 53, 54, 55, 57, 58, 60, 68, 69, 250, 676, 691, 692, 762, 763, 764, 765, 768, 769, 770, 810, 891, 904, 905, 906, 907, 908, 909, 910, 922, 937, 946, 950, 968, 980, 984, 988, 1041, 1044, 1155, 1157, 1158, 1161, 1163, 1167, 1208, 1209, 1213, 1235, 1249, 1250, 1266, 1267, 1270, 1328, 1352, 1365, 1366, 1390, 1391, 1394, 1395, 1398, 1399, 1401, 1415, 1416, 1417, 1419, 1420, 1423, 1424, 1435, 1436, 1442, 1455, 1456, 1457, 1460, 1482, 1483, 1488, 1496, 1500, 1501, 1516, 1527, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1588, 1589, 1590, 1618, 1619, 1620, 1662, 1668, 1670, 1673, 1674, 1675, 1680, 1681, 1684, 1686, 1688, 1725, 1726, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1752, 1753, 1754, 1755, 1756, 1761, 1782, 1808, 1829, 1874, 1880, 1881, 1919, 1920, 1923, 1930, 1931, 1935, 1960, 1961, 1963, 1964, 1971, 1973, 1977, 1979, 1980, 1981, 1987, 1989, 1990, 1992, 1993, 1995, 1996, 1999, 2001, 2002, 2003, 2004, 2009, 2011, 2012, 2013, 2014, 2015, 2021, 2022, 2024, 2027, 2030, 2031, 2034, 2038, 2039, 2041, 2042, 2043, 2044, 2046, 2047, 2053, 2054], "enough": [2, 8, 22, 58, 1172, 1178, 1262, 1374, 1537, 1868, 1869, 1870, 1871, 1872, 1873, 1923, 1963, 1977, 1980, 1990, 1992, 1996, 2011, 2012, 2027, 2044, 2055], "scope": [2, 7, 12, 44, 58, 77, 980, 1152, 1527, 1706, 1961, 1963, 1964, 1990, 1994, 2009, 2012, 2022, 2043, 2053], "second": [2, 5, 14, 18, 25, 29, 33, 35, 42, 44, 46, 55, 58, 682, 685, 687, 690, 756, 790, 870, 871, 872, 880, 888, 901, 902, 915, 916, 936, 940, 941, 943, 944, 945, 948, 998, 1010, 1057, 1061, 1075, 1076, 1086, 1088, 1089, 1095, 1103, 1144, 1145, 1157, 1160, 1161, 1162, 1166, 1167, 1182, 1193, 1194, 1204, 1207, 1215, 1216, 1217, 1227, 1239, 1273, 1275, 1283, 1319, 1322, 1328, 1329, 1339, 1345, 1349, 1351, 1352, 1354, 1355, 1380, 1385, 1388, 1392, 1398, 1399, 1405, 1416, 1417, 1419, 1420, 1430, 1431, 1438, 1439, 1453, 1456, 1457, 1458, 1476, 1480, 1482, 1483, 1503, 1516, 1575, 1577, 1611, 1666, 1706, 1742, 1743, 1746, 1752, 1756, 1767, 1813, 1863, 1871, 1907, 1912, 1914, 1929, 1932, 1935, 1963, 1964, 1968, 1987, 1990, 1992, 1993, 1994, 1995, 1996, 1999, 2003, 2007, 2009, 2014, 2020, 2025, 2029, 2036, 2039, 2047], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 12, 15, 18, 21, 25, 33, 34, 35, 39, 46, 47, 49, 53, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 495, 676, 743, 891, 892, 893, 894, 895, 907, 1156, 1169, 1179, 1182, 1195, 1401, 1424, 1675, 1928, 1960, 1961, 1964, 1965, 1970, 1975, 1977, 1980, 1985, 1987, 1989, 1992, 1995, 1996, 2007, 2012, 2014, 2015, 2016, 2020, 2024, 2029, 2033, 2034, 2035, 2041, 2042, 2044, 2045, 2047, 2049, 2052, 2053, 2054, 2055], "verbose_off": 2, "dnn": [2, 1989], "onednn": [2, 851, 852, 855, 1252, 1259, 2010, 2015], "former": [2, 49, 1458, 1488, 1987], "dnnl_verbos": 2, "verbose_on_cr": 2, "set_flag": 2, "_enabl": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 16, 17, 22, 31, 46, 53, 57, 1593, 1959, 1960, 1976, 1992, 1999, 2007, 2011, 2018, 2020, 2029, 2032, 2036, 2040, 2059], "els": [2, 7, 12, 21, 25, 27, 31, 33, 34, 42, 46, 58, 60, 599, 756, 935, 939, 980, 1262, 1268, 1453, 1527, 1631, 1644, 1675, 1742, 1743, 1746, 1752, 1753, 1754, 1755, 1809, 1810, 1842, 1848, 1926, 1961, 1963, 1965, 1966, 1971, 1977, 1980, 1990, 1992, 1993, 1995, 1999, 2000, 2007, 2008, 2009, 2011, 2012, 2026, 2036, 2039, 2040, 2042, 2053], "einsum": [2, 1962, 2010], "readthedoc": [2, 1098], "io": [2, 7, 14, 21, 27, 46, 1098, 1258, 1261, 1322, 1458, 1459, 1535, 1817, 2005, 2007, 2015], "en": [2, 14, 22, 1098, 1997, 2029, 2057], "path_find": [2, 1098], "html": [2, 3, 4, 7, 14, 15, 43, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 968, 1098, 1537, 1923, 1926, 1988, 1997, 1999, 2003, 2012, 2014, 2029], "calcul": [2, 21, 25, 27, 39, 756, 764, 765, 795, 798, 815, 816, 820, 912, 956, 988, 1086, 1090, 1098, 1102, 1241, 1247, 1306, 1328, 1329, 1331, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1407, 1418, 1419, 1420, 1434, 1439, 1441, 1442, 1450, 1451, 1452, 1460, 1527, 1536, 1539, 1540, 1560, 1561, 1562, 1566, 1585, 1590, 1593, 1604, 1634, 1690, 1702, 1724, 1728, 1730, 1761, 1807, 1880, 1881, 1912, 1914, 1930, 1931, 1987, 1988, 1991, 1995, 1996, 2002, 2005, 2015, 2024, 2034], "contract": [2, 47, 1098, 1903, 1960, 1979, 2012, 2040, 2047], "fall": [2, 7, 14, 21, 46, 791, 915, 968, 1182, 1213, 1264, 1322, 1448, 1519, 1602, 1648, 1680, 1681, 1959, 2009, 2015, 2044], "left": [2, 21, 58, 456, 495, 810, 816, 861, 937, 941, 944, 946, 947, 952, 957, 1098, 1118, 1125, 1139, 1142, 1143, 1147, 1204, 1208, 1209, 1213, 1247, 1248, 1255, 1270, 1291, 1300, 1304, 1308, 1311, 1312, 1313, 1314, 1316, 1328, 1329, 1374, 1392, 1397, 1398, 1399, 1400, 1401, 1415, 1416, 1417, 1434, 1441, 1454, 1455, 1456, 1457, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1491, 1492, 1493, 1497, 1498, 1536, 1539, 1540, 1541, 1542, 1548, 1550, 1593, 1613, 1632, 1644, 1681, 1759, 1760, 1773, 1801, 1814, 1821, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1882, 1903, 1908, 1929, 1961, 1962, 1964, 1987, 1992, 1995, 1999, 2018, 2025, 2052, 2056], "strategi": [2, 3, 7, 21, 22, 25, 29, 35, 49, 904, 906, 1098, 1159, 1264, 1392, 1675, 1682, 1683, 1767, 1963, 1993, 1996, 2016, 2044], "auto": [2, 25, 50, 78, 79, 1098, 1400, 1401, 1964, 2009, 2029, 2043], "greedi": [2, 29, 1098], "doc": [2, 3, 4, 9, 15, 42, 43, 47, 82, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 836, 968, 1167, 1269, 1532, 1533, 1534, 1535, 1923, 1935, 1965, 1968, 1977, 1988, 1991, 1992, 1999, 2003, 2012, 2015, 2020, 2024, 2029, 2036, 2045, 2050], "timer": [3, 28, 1960], "stmt": [3, 1989], "setup": [3, 14, 22, 42, 43, 49, 59, 816, 817, 818, 821, 1167, 1675, 1935, 1989, 1990, 2000, 2020, 2021, 2040], "global_setup": 3, "perf_count": 3, "label": [3, 6, 7, 21, 25, 29, 931, 1098, 1392, 1401, 1407, 1421, 1423, 1447, 1480, 1491, 1492, 1577, 1717, 1760, 1991, 1995, 2001, 2003, 2029], "sub_label": 3, "descript": [3, 7, 13, 14, 21, 35, 42, 58, 730, 1222, 1223, 1224, 1296, 1323, 1558, 1785, 1829, 1963, 1964, 1990, 1992, 1996, 1998, 1999, 2009, 2035, 2045, 2057], "env": [3, 25, 31, 35, 40, 42, 43, 45, 58, 1055, 1172, 1991, 2002, 2007, 2008, 2020, 2044, 2054], "num_thread": [3, 2001], "languag": [3, 14, 35, 46, 1262, 1392, 1531, 1592, 1994, 2006], "measur": [3, 31, 39, 1001, 1047, 1049, 1282, 1362, 1400, 1401, 1421, 1447, 1454, 1479, 1480, 1536, 1537, 1565, 1625, 1769, 1960, 1990, 1998, 1999, 2011, 2024], "statement": [3, 12, 31, 47, 54, 58, 60, 65, 68, 69, 980, 1251, 1266, 1965, 1987, 1992, 2001, 2004, 2006, 2009, 2012, 2018, 2020, 2040, 2047], "full": [3, 7, 8, 14, 15, 21, 22, 25, 27, 29, 31, 42, 45, 46, 49, 50, 54, 58, 482, 509, 896, 900, 901, 902, 937, 946, 968, 1126, 1127, 1128, 1132, 1133, 1135, 1154, 1166, 1167, 1208, 1209, 1254, 1288, 1289, 1296, 1297, 1298, 1309, 1314, 1315, 1323, 1340, 1401, 1407, 1441, 1502, 1531, 1568, 1569, 1570, 1577, 1590, 1637, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1833, 1886, 1887, 1935, 1959, 1961, 1962, 1963, 1964, 1966, 1979, 1986, 1990, 1991, 1992, 1995, 1996, 1999, 2002, 2003, 2007, 2010, 2012, 2015, 2018, 2021, 2028, 2031, 2041, 2044, 2047, 2048, 2049, 2054], "org": [3, 4, 7, 9, 10, 12, 15, 22, 31, 43, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 968, 980, 1323, 1458, 1507, 1534, 1537, 1691, 1727, 1775, 1829, 1849, 1926, 1959, 1965, 1987, 1988, 1999, 2003, 2005, 2009, 2012, 2029, 2030, 2056, 2057], "timeit": [3, 1989], "sever": [3, 12, 15, 21, 25, 31, 49, 58, 734, 735, 736, 737, 738, 739, 762, 763, 768, 769, 770, 778, 779, 911, 912, 1044, 1102, 1188, 1189, 1250, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1415, 1416, 1417, 1418, 1419, 1420, 1435, 1436, 1455, 1456, 1457, 1476, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1541, 1542, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1568, 1569, 1570, 1571, 1572, 1573, 1588, 1589, 1611, 1614, 1615, 1616, 1618, 1619, 1620, 1675, 1692, 1693, 1695, 1696, 1728, 1736, 1790, 1791, 1918, 1923, 1961, 1986, 1987, 1989, 1990, 1998, 1999, 2001, 2009, 2011, 2015, 2020, 2041, 2044], "awar": [3, 7, 80, 482, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 834, 835, 851, 858, 859, 1535, 1675, 1890, 1891, 1893, 1894, 1895, 1979, 1987, 1990, 2012, 2018, 2021, 2024, 2051], "element": [3, 12, 21, 25, 31, 47, 54, 55, 58, 60, 66, 68, 69, 93, 115, 146, 150, 192, 212, 238, 250, 254, 282, 309, 311, 313, 315, 317, 348, 394, 396, 398, 431, 450, 467, 469, 470, 493, 495, 509, 511, 513, 516, 541, 542, 554, 556, 605, 606, 613, 677, 679, 680, 683, 684, 689, 690, 694, 695, 731, 754, 756, 766, 767, 768, 769, 770, 776, 780, 789, 870, 872, 873, 874, 877, 878, 879, 880, 881, 889, 904, 905, 907, 908, 909, 915, 916, 938, 947, 950, 957, 963, 967, 980, 982, 984, 985, 986, 1041, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1087, 1088, 1089, 1093, 1095, 1098, 1101, 1103, 1104, 1108, 1128, 1132, 1133, 1135, 1137, 1142, 1144, 1145, 1147, 1150, 1152, 1157, 1158, 1160, 1161, 1162, 1166, 1167, 1192, 1193, 1194, 1195, 1204, 1207, 1210, 1211, 1212, 1213, 1227, 1235, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1270, 1272, 1273, 1275, 1292, 1294, 1298, 1309, 1313, 1324, 1325, 1327, 1330, 1332, 1333, 1334, 1335, 1339, 1340, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1372, 1374, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1396, 1397, 1400, 1401, 1402, 1403, 1404, 1406, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1439, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1453, 1454, 1458, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1474, 1477, 1479, 1480, 1481, 1482, 1483, 1487, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1515, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1536, 1537, 1539, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1578, 1582, 1585, 1586, 1591, 1592, 1596, 1597, 1598, 1599, 1602, 1605, 1606, 1608, 1613, 1618, 1619, 1620, 1624, 1625, 1629, 1630, 1632, 1635, 1636, 1637, 1638, 1639, 1640, 1644, 1645, 1646, 1647, 1648, 1650, 1652, 1654, 1655, 1656, 1657, 1662, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1709, 1710, 1716, 1717, 1719, 1720, 1729, 1730, 1731, 1733, 1738, 1778, 1779, 1782, 1783, 1790, 1791, 1793, 1804, 1807, 1808, 1812, 1814, 1816, 1833, 1836, 1838, 1850, 1851, 1853, 1854, 1858, 1865, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1880, 1881, 1885, 1897, 1899, 1900, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1930, 1931, 1932, 1935, 1938, 1962, 1964, 1968, 1971, 1980, 1985, 1988, 1989, 1992, 1996, 2002, 2004, 2009, 2011, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2043, 2046, 2055], "lazili": [3, 17, 27, 1001, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1666, 1961, 1992, 2052, 2059], "threadpool": 3, "comparison": [3, 22, 25, 46, 58, 1250, 1266, 1267, 1488, 1738, 1965, 1992, 2031, 2034, 2041], "appl": [3, 1976], "synchron": [3, 4, 17, 18, 22, 27, 29, 33, 42, 49, 57, 482, 873, 1001, 1002, 1004, 1012, 1032, 1072, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1298, 1299, 1305, 1308, 1311, 1312, 1314, 1315, 1323, 1362, 1527, 1675, 1729, 1731, 1807, 1940, 1960, 1989, 1990, 1991, 1997, 2001, 2013, 2020, 2026, 2044], "focu": [3, 47, 1769, 2047], "replic": [3, 21, 27, 30, 49, 82, 1204, 1261, 1415, 1416, 1417, 1424, 1434, 1464, 1465, 1466, 1512, 1513, 1514, 1539, 1632, 1659, 2013], "particularli": [3, 21, 22, 44, 1423, 1424, 1495, 1961, 1990, 2042, 2052], "variat": [3, 31, 1964, 1992, 2011, 2016, 2054], "confound": 3, "quantifi": [3, 1537], "nois": [3, 1962, 2003, 2054], "median": [3, 31, 169, 1380, 1923, 1962, 1978, 2010], "robust": [3, 1323, 1977, 1999], "deviat": [3, 31, 49, 373, 1396, 1402, 1403, 1404, 1442, 1450, 1451, 1452, 1460, 1527, 1731, 1843, 1848, 1880, 1881, 1985, 2044], "merg": [3, 6, 7, 9, 21, 25, 27, 43, 1489, 1494, 1498], "repeat": [3, 31, 46, 54, 490, 988, 1098, 1179, 1314, 1340, 1484, 1485, 1486, 1565, 1566, 1775, 1807, 1866, 1886, 1887, 1904, 1962, 1964, 1990, 2010, 2014, 2017, 2024, 2049], "autorang": 3, "exact": [3, 14, 21, 33, 44, 47, 81, 335, 737, 738, 739, 791, 870, 871, 872, 915, 916, 968, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1351, 1419, 1458, 1535, 1604, 1675, 1770, 1859, 1985, 1990, 1991, 2001, 2024, 2043, 2044, 2051, 2054, 2055], "discuss": [3, 5, 8, 9, 10, 31, 46, 58, 1448, 1604, 1971, 1987, 1992, 1995, 1999, 2003, 2020, 2022, 2024, 2041], "docstr": [3, 14, 46, 58, 857, 858, 1250, 1488, 1959, 1990], "adapt": [3, 46, 762, 763, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1425, 1552, 1553, 1554, 1555, 1556, 1557, 1740, 1741, 1752, 1754, 1761, 1990, 2007, 2042], "field": [3, 7, 25, 27, 29, 30, 33, 35, 39, 40, 47, 49, 58, 484, 822, 889, 890, 933, 1248, 1250, 1392, 1400, 1401, 1421, 1423, 1447, 1453, 1454, 1479, 1480, 1488, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1536, 1558, 1565, 1566, 1576, 1593, 1605, 1629, 1637, 1716, 1750, 1756, 1975, 1987, 1991, 2001, 2009, 2020, 2021, 2029, 2047, 2053, 2054], "displai": [3, 18, 1043, 1056, 1172, 1604, 1663, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1959, 1965, 1970, 1974, 2009, 2029, 2031, 2036, 2044, 2054], "instruct": [3, 4, 11, 14, 44, 57, 1829, 1961, 1964, 1990, 2002, 2009, 2015, 2031, 2038, 2043, 2047, 2054], "count": [3, 21, 31, 39, 58, 890, 924, 933, 939, 987, 1037, 1152, 1212, 1213, 1248, 1288, 1289, 1716, 1919, 1920, 1962, 1975, 1990, 1995, 2010, 2014, 2020, 2022, 2024, 2047], "wall": [3, 2048], "callgrind": 3, "analog": [3, 46, 58, 482, 690, 911, 1081, 1119, 1121, 1300, 1458, 1755, 1886, 1904, 1980, 1999, 2042, 2047], "constructor": [3, 14, 21, 22, 29, 49, 58, 60, 69, 820, 857, 858, 1392, 1493, 1498, 1499, 1516, 1541, 1542, 1675, 1723, 1861, 1960, 1961, 1964, 1965, 1990, 1991, 1999, 2020, 2024, 2026, 2027, 2030, 2057], "snippet": [3, 43, 1959, 1999, 2004, 2036, 2046, 2047], "loop": [3, 22, 44, 46, 47, 50, 54, 55, 58, 60, 65, 858, 859, 910, 1044, 1047, 1049, 1161, 1167, 1266, 1675, 1693, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1935, 1961, 1962, 1964, 1975, 1989, 1990, 1994, 1996, 1999, 2002, 2006, 2009, 2011, 2014, 2015, 2029, 2039, 2043, 2047, 2053], "callabl": [3, 5, 12, 21, 22, 25, 29, 31, 33, 35, 40, 42, 44, 46, 47, 49, 57, 58, 115, 394, 837, 968, 970, 980, 1041, 1042, 1044, 1156, 1157, 1158, 1163, 1166, 1167, 1250, 1253, 1256, 1262, 1266, 1322, 1323, 1488, 1531, 1533, 1535, 1537, 1669, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1752, 1753, 1754, 1755, 1756, 1763, 1766, 1935, 1959, 1961, 1963, 1964, 1965, 1975, 1990, 1992, 1999, 2004, 2007, 2009, 2012, 2013, 2014, 2020, 2031, 2033, 2034, 2040, 2041, 2045, 2047, 2053, 2055], "present": [3, 9, 21, 25, 27, 42, 47, 49, 890, 933, 935, 1248, 1340, 1392, 1458, 1498, 1716, 1736, 1882, 1959, 1974, 1977, 1978, 1979, 1986, 1987, 1990, 1992, 1996, 1999, 2004, 2009, 2012, 2021, 2024, 2027, 2045, 2050, 2056], "default_tim": 3, "dict": [3, 5, 12, 21, 22, 25, 26, 27, 29, 30, 31, 33, 36, 40, 44, 46, 47, 49, 51, 53, 56, 58, 411, 676, 788, 789, 790, 811, 812, 813, 832, 850, 917, 924, 935, 968, 980, 1041, 1042, 1055, 1064, 1155, 1165, 1167, 1248, 1249, 1250, 1251, 1257, 1262, 1266, 1267, 1322, 1323, 1424, 1434, 1488, 1489, 1498, 1539, 1666, 1675, 1706, 1725, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1935, 1947, 1959, 1961, 1962, 1964, 1965, 1974, 1975, 1992, 1999, 2004, 2007, 2009, 2010, 2011, 2020, 2021, 2029, 2033, 2034, 2041, 2050, 2053, 2055], "summar": [3, 4, 43, 1833, 1964, 1980, 1995, 2024, 2041, 2047, 2054], "relu": [3, 22, 46, 54, 55, 58, 696, 697, 701, 702, 703, 704, 705, 706, 707, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 761, 788, 789, 810, 850, 856, 1041, 1157, 1167, 1256, 1262, 1488, 1503, 1505, 1516, 1524, 1531, 1533, 1535, 1641, 1642, 1666, 1737, 1935, 1961, 1962, 1973, 1979, 1980, 1985, 1987, 1999, 2004, 2009, 2010, 2015, 2017, 2018, 2036, 2040, 2046, 2049, 2052, 2053, 2054], "readabl": [3, 13, 21, 40, 46, 58, 1043, 1056, 1901, 2009, 2011, 2041, 2054, 2055], "supplement": 3, "disambigu": [3, 40, 58, 1328, 2054], "ident": [3, 14, 21, 25, 31, 58, 784, 810, 915, 916, 1086, 1182, 1288, 1289, 1290, 1291, 1304, 1316, 1319, 1323, 1340, 1379, 1380, 1396, 1425, 1634, 1682, 1683, 1689, 1692, 1928, 1932, 1938, 1965, 1985, 2002, 2003, 2012, 2017, 2024, 2043, 2054], "easi": [3, 21, 25, 27, 42, 46, 1961, 1987, 1994, 1998, 1999, 2001, 2012, 2015, 2020, 2021, 2024, 2040, 2041, 2044, 2046, 2047, 2052], "differenti": [3, 31, 50, 55, 146, 348, 585, 798, 885, 887, 889, 894, 895, 896, 898, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 965, 1044, 1160, 1161, 1162, 1166, 1265, 1297, 1298, 1309, 1340, 1406, 1407, 1430, 1595, 1630, 1675, 1695, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1923, 1960, 1971, 1992, 1994, 1996, 2009, 2011, 2020, 2030, 2044], "distinguish": [3, 1171, 2015, 2024], "princip": [3, 1297, 1775], "signal": [3, 11, 27, 33, 42, 44, 734, 735, 736, 762, 763, 778, 779, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1247, 1313, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1415, 1416, 1417, 1435, 1436, 1455, 1456, 1457, 1476, 1481, 1482, 1483, 1541, 1542, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1568, 1571, 1588, 1589, 1611, 1614, 1615, 1616, 1618, 1619, 1620, 1882, 1960, 1977, 2001, 2014, 2020], "form": [3, 7, 9, 11, 21, 25, 31, 41, 42, 43, 46, 47, 49, 54, 58, 756, 775, 781, 959, 1086, 1126, 1128, 1168, 1250, 1290, 1293, 1298, 1309, 1314, 1390, 1391, 1394, 1395, 1407, 1435, 1436, 1439, 1458, 1488, 1503, 1539, 1540, 1577, 1588, 1589, 1592, 1604, 1632, 1663, 1695, 1755, 1773, 1903, 1959, 1961, 1965, 1980, 1987, 1992, 1999, 2007, 2009, 2012, 2015, 2024, 2029, 2041, 2046, 2053], "treat": [3, 31, 41, 52, 58, 60, 65, 66, 317, 467, 789, 915, 916, 1041, 1155, 1183, 1250, 1303, 1306, 1308, 1320, 1322, 1332, 1333, 1334, 1335, 1352, 1382, 1431, 1441, 1460, 1492, 1493, 1494, 1495, 1498, 1516, 1521, 1585, 1675, 1725, 1729, 1761, 1814, 1829, 1882, 1897, 1898, 1904, 1919, 1963, 1964, 1978, 1987, 2007, 2009, 2020, 2024, 2027, 2034, 2044, 2045, 2050, 2053], "distinct": [3, 76, 1155, 1286, 1287, 1331, 1401, 1964, 1992, 2004, 2009, 2011, 2020, 2021, 2042], "workload": [3, 8, 21, 25, 49, 1044, 1990, 1995, 1998, 2002, 2020, 2038, 2052], "good": [3, 7, 8, 14, 58, 968, 1159, 1178, 1496, 1849, 1959, 1968, 1977, 1990, 1992, 1995, 1998, 1999, 2001, 2009, 2012, 2013, 2015, 2041, 2042, 2043, 2047, 2051], "intrins": [3, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 788, 789, 2016, 2017], "contrast": [3, 31, 33, 46, 756, 1439, 1755, 1985, 1987, 1993, 1995, 2024, 2049], "adaptive_autorang": 3, "threshold": [3, 22, 58, 1305, 1308, 1448, 1519, 1524, 1652, 1658, 1769, 1833, 1962, 1986, 1990, 2010, 2029], "min_run_tim": 3, "01": [3, 26, 29, 44, 484, 751, 776, 817, 818, 1099, 1141, 1474, 1608, 1609, 1666, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1761, 1767, 1787, 1840, 1842, 1843, 1848, 1849, 1962, 1985, 1998, 2009, 2011, 2049], "max_run_tim": 3, "callback": [3, 22, 42, 44, 57, 58, 1675, 1975, 1992, 1998, 2014, 2020], "similar": [3, 7, 9, 21, 25, 31, 39, 47, 49, 54, 57, 58, 489, 511, 708, 709, 710, 711, 712, 713, 716, 726, 727, 728, 729, 741, 742, 752, 760, 798, 873, 888, 901, 902, 949, 954, 967, 968, 1144, 1145, 1250, 1421, 1422, 1434, 1447, 1450, 1451, 1452, 1488, 1536, 1575, 1716, 1730, 1731, 1756, 1779, 1807, 1814, 1863, 1898, 1904, 1920, 1963, 1964, 1977, 1978, 1980, 1987, 1989, 1990, 1992, 1993, 1996, 2002, 2009, 2012, 2013, 2015, 2020, 2021, 2024, 2025, 2030, 2042, 2043, 2044, 2046, 2047, 2050, 2054, 2057], "blocked_autorang": 3, "variablil": 3, "until": [3, 5, 7, 21, 22, 25, 29, 33, 42, 49, 57, 58, 482, 1001, 1002, 1004, 1035, 1152, 1271, 1323, 1362, 1365, 1366, 1593, 1666, 1675, 1758, 1764, 1904, 1950, 1977, 1985, 1990, 1994, 1995, 2004, 2007, 2009, 2014, 2020, 2022, 2026, 2044], "iqr": 3, "smaller": [3, 21, 58, 495, 541, 988, 1458, 1675, 1769, 1784, 1829, 1874, 1990, 2004, 2012, 2040, 2056, 2057], "reach": [3, 7, 8, 9, 21, 22, 25, 26, 33, 42, 46, 50, 1323, 1675, 1758, 1761, 1764, 1765, 1987, 1992, 2001, 2013, 2016, 2020, 2041], "At": [3, 5, 6, 7, 15, 21, 1132, 1402, 1403, 1404, 1415, 1416, 1417, 1418, 1419, 1420, 1455, 1456, 1457, 1924, 1928, 1973, 1980, 1989, 1996, 2015, 2020, 2025, 2041, 2044, 2047, 2054], "high": [3, 4, 7, 8, 9, 10, 15, 22, 25, 31, 33, 39, 41, 43, 58, 115, 1407, 1534, 1796, 1797, 1829, 1928, 1962, 1972, 1975, 1977, 1992, 1996, 1997, 1999, 2000, 2001, 2011, 2015, 2016, 2020, 2024, 2029, 2030, 2031, 2034, 2038, 2039, 2047, 2049, 2054], "pseudo": [3, 84], "block_siz": 3, "enough_data": 3, "len": [3, 21, 27, 58, 60, 65, 214, 541, 689, 691, 692, 695, 1117, 1121, 1124, 1128, 1131, 1135, 1166, 1254, 1317, 1338, 1350, 1379, 1382, 1424, 1632, 1701, 1703, 1719, 1760, 1767, 1871, 1874, 1880, 1881, 1885, 1929, 1930, 1931, 1961, 1962, 1964, 1992, 2010, 2024, 2029, 2053], "small_iqr": 3, "break": [3, 7, 25, 31, 52, 58, 676, 889, 968, 970, 1172, 1250, 1296, 1488, 1814, 1833, 1960, 1965, 1970, 1972, 1991, 2011, 2024, 2032, 2036, 2039, 2041, 2042, 2045, 2047, 2048, 2050], "stop": [3, 5, 25, 31, 33, 42, 43, 44, 47, 861, 890, 933, 1037, 1172, 1248, 1323, 1407, 1716, 1769, 1801, 1961, 1964, 2020, 2045], "repetit": [3, 1807, 1904], "statist": [3, 22, 25, 31, 795, 796, 816, 817, 818, 820, 821, 1010, 1047, 1049, 1050, 1051, 1053, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1075, 1076, 1328, 1402, 1403, 1404, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1527, 1975, 1987, 1994, 2011, 2013, 2015, 2018, 2044, 2054], "minimum": [3, 14, 22, 33, 42, 43, 46, 692, 693, 767, 791, 816, 817, 818, 821, 822, 871, 939, 1078, 1145, 1211, 1212, 1213, 1353, 1407, 1446, 1537, 1759, 1760, 1767, 1849, 1868, 1869, 1870, 1871, 1872, 1873, 1962, 1985, 1987, 1996, 2010, 2018, 2027, 2049], "total_tim": 3, "choic": [3, 8, 9, 25, 1266, 1314, 1489, 1498, 1792, 1989, 2009, 2018, 2024, 2042, 2054], "block": [3, 7, 8, 21, 25, 29, 30, 42, 44, 49, 57, 58, 482, 579, 580, 581, 931, 947, 1001, 1055, 1271, 1323, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1464, 1465, 1466, 1467, 1468, 1469, 1491, 1539, 1587, 1662, 1675, 1868, 1869, 1870, 1961, 1963, 1964, 1975, 1977, 1981, 1987, 1990, 1991, 1995, 1996, 2009, 2015, 2020, 2024, 2035, 2052, 2056], "qualiti": [3, 7, 22], "balanc": [3, 968], "compet": [3, 2001], "amort": 3, "invoc": [3, 5, 58, 837, 968, 973, 1253, 1266, 1961, 1964, 1990, 1992, 1998, 2009, 2020, 2022, 2039, 2047, 2052], "less": [3, 6, 7, 14, 21, 22, 25, 31, 33, 44, 46, 49, 360, 676, 904, 906, 915, 916, 988, 1051, 1068, 1098, 1142, 1146, 1155, 1275, 1287, 1323, 1339, 1340, 1392, 1448, 1502, 1510, 1519, 1525, 1719, 1805, 1912, 1914, 1959, 1962, 1964, 1980, 1990, 1992, 1995, 2001, 2002, 2010, 2013, 2015, 2044], "bias": [3, 22, 730, 756, 790, 1402, 1403, 1404, 1439, 1440, 1442, 1450, 1451, 1452, 1458, 1459, 1460, 1503, 1505, 1527, 1547, 1548, 2011], "trivial": [3, 33, 35, 731, 958, 1168, 1172, 1689, 1871, 2009, 2022, 2043], "low": [3, 7, 18, 22, 31, 49, 495, 907, 1179, 1195, 1407, 1775, 1792, 1796, 1797, 1814, 1887, 1960, 1962, 1975, 1977, 1990, 2001, 2014, 2031, 2048, 2049, 2055], "digit": [3, 952, 1833, 1959, 1974, 1998, 2002], "microsecond": [3, 1990], "bia": [3, 9, 25, 46, 60, 708, 709, 710, 711, 712, 713, 714, 715, 716, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 745, 747, 748, 749, 750, 752, 756, 757, 760, 761, 768, 769, 770, 777, 788, 1165, 1250, 1260, 1392, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1439, 1440, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1488, 1494, 1503, 1504, 1505, 1531, 1533, 1535, 1548, 1563, 1564, 1568, 1569, 1570, 1571, 1572, 1573, 1594, 1603, 1607, 1610, 1666, 1675, 1685, 1687, 1689, 1690, 1691, 1705, 1707, 1709, 1724, 1727, 1789, 1962, 1968, 1972, 1973, 1984, 1992, 1999, 2004, 2007, 2011, 2015, 2017, 2024, 2029, 2049], "period": [3, 9, 29, 42, 937, 946, 1010, 1043, 1056, 1057, 1061, 1075, 1076, 1118, 1208, 1209, 1270, 1771, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1962, 1975, 2001], "overal": [3, 9, 21, 42, 915, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1534, 1987, 1989, 1990, 2001, 2015, 2016, 2048], "main": [3, 7, 21, 22, 25, 26, 27, 31, 33, 34, 35, 40, 42, 43, 44, 45, 46, 58, 256, 492, 968, 1085, 1086, 1087, 1088, 1089, 1313, 1595, 1866, 1911, 1912, 1913, 1914, 1959, 1961, 1975, 1977, 1979, 1980, 1986, 1987, 1990, 1991, 1992, 1993, 1995, 1999, 2001, 2005, 2006, 2007, 2015, 2020, 2021, 2029, 2030, 2035, 2036, 2040, 2044, 2047, 2053], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1960], "tupl": [3, 5, 12, 14, 21, 25, 27, 30, 33, 39, 40, 42, 46, 47, 49, 58, 229, 315, 441, 443, 445, 493, 516, 533, 556, 579, 580, 581, 689, 691, 692, 693, 695, 731, 762, 763, 764, 765, 768, 769, 770, 775, 781, 782, 783, 789, 813, 814, 850, 857, 858, 874, 875, 882, 883, 884, 885, 886, 888, 901, 902, 904, 905, 906, 907, 908, 909, 910, 915, 916, 919, 920, 921, 935, 951, 970, 975, 980, 987, 1011, 1012, 1015, 1026, 1044, 1050, 1077, 1078, 1096, 1099, 1101, 1115, 1117, 1118, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1130, 1131, 1133, 1135, 1138, 1148, 1153, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1191, 1195, 1212, 1214, 1250, 1257, 1262, 1266, 1267, 1272, 1281, 1286, 1287, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1303, 1307, 1309, 1310, 1312, 1314, 1317, 1320, 1338, 1340, 1342, 1348, 1350, 1352, 1353, 1356, 1358, 1379, 1382, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1434, 1435, 1436, 1455, 1456, 1457, 1464, 1465, 1466, 1467, 1468, 1469, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1494, 1498, 1509, 1510, 1511, 1512, 1513, 1514, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1553, 1554, 1556, 1557, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1588, 1589, 1604, 1618, 1619, 1620, 1630, 1632, 1663, 1664, 1665, 1670, 1675, 1685, 1687, 1695, 1706, 1719, 1725, 1729, 1730, 1734, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1775, 1776, 1785, 1794, 1796, 1798, 1808, 1812, 1813, 1858, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1880, 1881, 1885, 1886, 1887, 1901, 1902, 1903, 1904, 1905, 1910, 1917, 1918, 1919, 1920, 1921, 1930, 1931, 1935, 1936, 1938, 1957, 1961, 1962, 1965, 1977, 1980, 1987, 1990, 1992, 1993, 1999, 2004, 2007, 2009, 2011, 2012, 2015, 2020, 2024, 2029, 2031, 2034, 2044, 2047, 2053, 2055], "modulo": [3, 31, 1146, 1182, 1805], "determin": [3, 5, 8, 11, 14, 17, 18, 20, 21, 22, 25, 31, 33, 40, 42, 49, 54, 58, 81, 82, 83, 819, 822, 904, 906, 915, 916, 937, 946, 953, 958, 1045, 1100, 1119, 1129, 1154, 1155, 1173, 1174, 1208, 1209, 1212, 1213, 1264, 1284, 1296, 1307, 1310, 1331, 1345, 1431, 1435, 1436, 1458, 1494, 1497, 1503, 1585, 1588, 1589, 1604, 1638, 1663, 1694, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1725, 1735, 1767, 1795, 1797, 1799, 1826, 1868, 1869, 1870, 1871, 1872, 1873, 1882, 1958, 1964, 1965, 1979, 1990, 1991, 1992, 1995, 1999, 2007, 2009, 2012, 2015, 2020, 2022, 2024, 2026, 2027, 2029, 2031, 2042, 2043, 2044, 2053, 2054, 2059], "itself": [3, 5, 7, 8, 25, 26, 46, 49, 55, 58, 484, 689, 695, 875, 988, 1160, 1161, 1250, 1262, 1266, 1488, 1521, 1650, 1675, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1713, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1860, 1961, 1977, 1992, 1999, 2001, 2003, 2006, 2009, 2012, 2020, 2024, 2028, 2040, 2043, 2047, 2054], "jitter": 3, "interpret": [3, 21, 25, 29, 31, 33, 42, 44, 46, 47, 775, 781, 876, 910, 1054, 1119, 1120, 1121, 1126, 1128, 1129, 1130, 1131, 1152, 1201, 1213, 1250, 1255, 1262, 1266, 1303, 1323, 1427, 1593, 1604, 1605, 1663, 1826, 1831, 1959, 1963, 1964, 1977, 1989, 1990, 2009, 2024, 2026, 2028, 2041, 2047], "ideal": [3, 41, 43, 49, 1266, 1756, 1979, 2044], "analysi": [3, 22, 31, 58, 1270, 1775, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1965, 1972, 1999, 2006, 2007, 2034, 2040, 2041, 2043, 2048], "valgrind": 3, "degrad": [3, 14, 49, 1989, 1991, 1992, 2024], "due": [3, 4, 5, 7, 22, 25, 31, 41, 49, 54, 58, 60, 62, 80, 482, 876, 904, 905, 910, 984, 1263, 1286, 1287, 1314, 1340, 1427, 1441, 1531, 1540, 1604, 1644, 1723, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1887, 1961, 1980, 1990, 1996, 1997, 2003, 2007, 2009, 2015, 2016, 2020, 2022, 2044, 2047, 2050, 2054, 2056], "amelior": 3, "suffici": [3, 14, 22, 31, 34, 42, 47, 49, 482, 1742, 1743, 1755, 1959, 2024, 2027, 2044], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 58, 775, 781, 952, 1204, 1409, 1410, 1411, 1412, 1413, 1414, 1509, 1510, 1511, 1512, 1513, 1514, 1540, 1543, 1544, 1545, 1604, 1663, 1761, 1767, 1962, 1991, 2012, 2013, 2020, 2044], "caller": [3, 33, 42, 58, 850, 1250, 1488, 1535, 1871, 1987, 1990, 2020, 2022], "structur": [3, 5, 9, 12, 21, 22, 25, 32, 33, 35, 43, 46, 47, 49, 58, 60, 61, 65, 69, 888, 901, 902, 934, 980, 1149, 1162, 1167, 1170, 1176, 1177, 1266, 1488, 1547, 1702, 1706, 1738, 1775, 1887, 1935, 1960, 1963, 1965, 1971, 1975, 1980, 1990, 1991, 1992, 1993, 1995, 2001, 2004, 2005, 2007, 2009, 2011, 2012, 2020, 2029, 2030, 2031, 2032, 2034, 2036, 2041, 2042, 2044, 2045, 2050, 2056], "restrict": [3, 8, 12, 21, 31, 47, 49, 54, 55, 980, 1322, 1345, 1423, 1963, 1964, 1965, 1979, 1980, 1987, 1990, 1996, 2013, 2015, 2042], "builtin": [3, 25, 58, 60, 69, 1263, 1322, 1801, 1961, 1963, 1965, 2020, 2022, 2044, 2054], "surpris": [3, 8, 49, 1959, 1996, 2002, 2043], "serial": [3, 15, 21, 25, 27, 29, 42, 1250, 1260, 1261, 1322, 1488, 1666, 1817, 1959, 1960, 1962, 1974, 1979, 1987, 1990, 1995, 1998, 1999, 2001, 2007, 2012, 2015, 2020, 2021], "subsequ": [3, 7, 14, 15, 25, 46, 49, 58, 968, 1002, 1250, 1262, 1266, 1415, 1416, 1417, 1418, 1419, 1420, 1488, 1516, 1990, 2003, 2009, 2020, 2024, 2036, 2039, 2044, 2047], "deseri": [3, 27, 1322, 1666, 1959, 1974, 2004, 2020], "globalsbridg": 3, "care": [3, 7, 14, 25, 31, 57, 58, 970, 1119, 1121, 1171, 1172, 1488, 1977, 1989, 1990, 1991, 1992, 1994, 1999, 2001, 2004, 2009, 2020, 2024, 2039, 2043, 2044, 2045], "reli": [3, 9, 14, 21, 22, 25, 33, 35, 49, 58, 146, 889, 915, 970, 1098, 1424, 1756, 1987, 1989, 1991, 1992, 1995, 2003, 2004, 2024, 2028, 2043, 2044, 2045, 2048], "pickl": [3, 21, 22, 25, 1250, 1322, 1488, 1817, 1959, 1974, 1977, 2004, 2012, 2020, 2056], "transfer": [3, 21, 25, 49, 1973, 1977, 1990, 1997, 1999, 2012, 2020], "properli": [3, 7, 21, 22, 27, 29, 33, 42, 57, 1119, 1120, 1121, 1129, 1130, 1131, 1352, 1489, 1490, 1498, 1499, 1675, 1924, 1959, 1971, 1992, 1996, 1999, 2001, 2004, 2007, 2020, 2021, 2027], "profil": [3, 4, 39, 58, 482, 923, 924, 931, 968, 1264, 1669, 1670, 1671, 1672, 1833, 1960, 1995, 2010, 2020, 2035, 2044], "empti": [3, 24, 25, 27, 33, 40, 47, 49, 54, 58, 229, 317, 509, 511, 519, 533, 541, 813, 935, 938, 939, 949, 955, 1098, 1100, 1248, 1251, 1276, 1296, 1297, 1302, 1309, 1332, 1333, 1334, 1335, 1342, 1401, 1423, 1431, 1495, 1566, 1585, 1632, 1723, 1735, 1736, 1871, 1886, 1901, 1958, 1961, 1962, 1963, 1964, 1966, 1973, 1978, 1979, 1980, 1985, 1988, 1990, 1992, 2003, 2009, 2010, 2012, 2024, 2025, 2030, 2032, 2042, 2043, 2049, 2052], "drive": [3, 9, 25, 1987, 2047], "facil": [3, 1322, 1977], "analyz": [3, 4, 18, 58, 1991, 1992, 1995, 2002, 2054], "manipul": [3, 49, 57, 1254, 1960, 1986, 1994, 1999, 2013, 2018, 2053], "1000000": [3, 1739], "mirror": [3, 135, 1675], "semant": [3, 9, 17, 25, 42, 43, 46, 47, 49, 56, 58, 146, 790, 870, 871, 872, 889, 910, 950, 1004, 1055, 1156, 1167, 1182, 1183, 1254, 1261, 1320, 1401, 1566, 1638, 1682, 1683, 1756, 1920, 1935, 1960, 1963, 1964, 1968, 1971, 1980, 1993, 1999, 2009, 2020, 2024, 2044], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 22, 1961], "consum": [3, 21, 27, 32, 44, 47, 57, 431, 1098, 1977, 1990, 1995, 2001, 2006, 2007, 2009, 2029, 2047], "extrapol": 3, "sinc": [3, 7, 21, 22, 25, 27, 30, 31, 35, 44, 46, 49, 58, 311, 484, 530, 743, 781, 789, 804, 805, 958, 970, 1047, 1049, 1051, 1098, 1138, 1139, 1140, 1155, 1247, 1250, 1255, 1261, 1264, 1340, 1400, 1430, 1484, 1485, 1486, 1488, 1540, 1548, 1558, 1593, 1595, 1663, 1666, 1669, 1706, 1725, 1730, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1882, 1961, 1962, 1963, 1964, 1968, 1970, 1973, 1975, 1980, 1986, 1987, 1990, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2004, 2005, 2006, 2009, 2010, 2012, 2013, 2014, 2015, 2019, 2020, 2021, 2022, 2024, 2025, 2027, 2028, 2030, 2031, 2039, 2044, 2047, 2050, 2053, 2054], "properti": [3, 21, 25, 26, 27, 29, 31, 34, 39, 42, 46, 47, 49, 58, 788, 876, 902, 919, 929, 1028, 1114, 1115, 1117, 1119, 1120, 1121, 1129, 1130, 1131, 1250, 1396, 1488, 1521, 1546, 1650, 1666, 1676, 1677, 1678, 1716, 1949, 1960, 1964, 1968, 1975, 1987, 1990, 1992, 1996, 2007, 2011, 2014, 2020, 2024, 2026, 2027, 2030, 2032, 2036, 2041, 2042, 2043, 2055, 2057], "significant_figur": 3, "figur": [3, 7, 8, 27, 58, 924, 1989, 1991, 1992, 2009, 2013, 2022, 2029, 2034, 2044], "intend": [3, 42, 46, 58, 886, 896, 899, 901, 1006, 1172, 1270, 1558, 1669, 1670, 1671, 1672, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1964, 1980, 1985, 1987, 1999, 2012], "interquartil": 3, "mitig": [3, 60, 1995, 2026], "tail": [3, 21, 40], "645": 3, "conjunct": [3, 21, 25, 29, 49, 820, 1558, 1593, 1675, 2018, 2020], "trim_sigfig": 3, "human": [3, 13, 40, 46, 1043, 1056, 1985, 2009, 2041, 2055], "raw": [3, 58, 1152, 1309, 1990, 2012, 2014], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 15, 21, 25, 27, 29, 31, 33, 40, 47, 49, 57, 58, 482, 492, 676, 756, 915, 922, 1115, 1117, 1120, 1121, 1123, 1124, 1127, 1128, 1130, 1131, 1133, 1135, 1266, 1340, 1402, 1403, 1404, 1424, 1427, 1439, 1450, 1451, 1452, 1462, 1463, 1470, 1471, 1472, 1473, 1498, 1527, 1533, 1535, 1585, 1675, 1877, 1964, 1973, 1977, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1999, 2002, 2007, 2009, 2011, 2013, 2015, 2016, 2020, 2022, 2040, 2042, 2043, 2047, 2051, 2053], "functioncount": [3, 1960], "stat": [3, 52, 822, 832, 833, 1055, 1062, 1063, 1064, 1527, 1675, 1975, 1990, 2033, 2044, 2054], "as_standard": 3, "strip": [3, 1595, 1675, 1961, 2010, 2024], "prefix": [3, 25, 27, 33, 42, 49, 744, 753, 1250, 1488, 1675, 1959, 1970, 1987, 2009, 2012, 2015, 2033], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 15, 18, 25, 31, 58, 676, 890, 915, 1118, 1119, 1121, 1129, 1130, 1131, 1290, 1531, 1532, 1533, 1534, 1535, 1666, 1775, 1882, 1933, 1934, 1965, 1970, 1987, 1991, 1992, 1998, 1999, 2007, 2013, 2024, 2040, 2045, 2047, 2054], "locat": [3, 9, 14, 25, 31, 39, 83, 146, 150, 250, 482, 509, 676, 950, 952, 1013, 1077, 1078, 1272, 1322, 1348, 1353, 1356, 1374, 1424, 1434, 1522, 1539, 1558, 1593, 1659, 1662, 1675, 1695, 1786, 1821, 1842, 1864, 1867, 1923, 1959, 1961, 1974, 1990, 2004, 2009, 2012, 2014, 2020, 2022, 2024, 2029, 2033, 2036, 2039, 2043], "someth": [3, 7, 46, 47, 51, 58, 60, 62, 904, 906, 1098, 1179, 1250, 1266, 1488, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1966, 1975, 1977, 1978, 1987, 1997, 2005, 2009, 2020, 2040, 2042, 2044, 2046, 2047, 2053, 2054, 2055], "resembl": [3, 15, 2036], "23234231": 3, "first_build_dir": 3, "foo": [3, 14, 25, 39, 40, 46, 57, 58, 60, 68, 69, 820, 850, 855, 968, 1155, 1156, 1165, 1248, 1253, 1258, 1261, 1262, 1265, 1266, 1725, 1924, 1926, 1959, 1961, 1963, 1964, 1968, 1972, 1992, 1999, 2009, 2012, 2031, 2039], "9823794": 3, "bar": [3, 7, 39, 46, 58, 60, 68, 69, 850, 855, 988, 1155, 1253, 1261, 1880, 1881, 1930, 1931, 1959, 1961, 1963, 1974, 1999, 2009, 2012, 2031, 2047], "53453": 3, "src": [3, 25, 58, 192, 224, 309, 317, 467, 508, 509, 510, 511, 512, 513, 515, 534, 1089, 1156, 1374, 1531, 1534, 1535, 1736, 1818, 1819, 1820, 1824, 1854, 1897, 1923, 1962, 2012, 2049], "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1247], "site": [3, 7, 2036], "denois": 3, "explan": [3, 9, 35, 858, 1250, 1488, 1960, 1991, 1992, 1999, 2044, 2051, 2054], "delta": [3, 31, 756, 988, 1439, 1448, 1458, 1519, 1602, 1740, 1880, 1881, 1908, 1930, 1931, 1962, 1985], "inclus": [3, 31, 46, 84, 509, 1175, 1179, 1211, 1213, 1321, 1337, 1343, 1549, 1550, 1796, 1797, 1879, 2019, 2031], "diff": [3, 7, 1961, 1962, 2010], "One": [3, 8, 14, 25, 27, 47, 49, 52, 54, 58, 579, 947, 1156, 1167, 1241, 1540, 1631, 1682, 1683, 1689, 1693, 1756, 1761, 1769, 1796, 1797, 1918, 1935, 1961, 1963, 1964, 1979, 1980, 1988, 1989, 1990, 1992, 1998, 2013, 2022, 2029, 2040, 2041, 2042, 2043, 2052], "reason": [3, 8, 9, 21, 25, 27, 46, 49, 54, 59, 77, 676, 837, 901, 902, 1119, 1121, 1250, 1266, 1267, 1286, 1287, 1314, 1351, 1400, 1427, 1488, 1595, 1644, 1695, 1817, 1961, 1963, 1964, 1970, 1987, 1991, 1993, 1995, 2002, 2004, 2009, 2020, 2027, 2040, 2042, 2043, 2044, 2047, 2048, 2054, 2055], "unit": [3, 11, 14, 31, 33, 43, 49, 58, 756, 757, 1116, 1134, 1396, 1406, 1429, 1432, 1437, 1438, 1439, 1440, 1506, 1507, 1517, 1558, 1582, 1586, 1591, 1592, 1639, 1647, 1699, 1700, 1704, 1707, 1709, 1712, 1798, 1910, 1976, 1987, 1989, 1995, 1996, 2012, 2038, 2039], "next": [3, 21, 25, 31, 42, 47, 49, 58, 556, 756, 1254, 1388, 1440, 1459, 1505, 1675, 1718, 1977, 1986, 1987, 1989, 1990, 1992, 1993, 1995, 1999, 2001, 2007, 2013, 2014, 2020, 2021, 2024, 2027, 2029, 2036, 2039, 2041, 2044, 2047], "logic": [3, 5, 12, 14, 21, 45, 49, 58, 940, 942, 943, 945, 1115, 1117, 1120, 1121, 1123, 1124, 1127, 1128, 1130, 1131, 1133, 1135, 1156, 1188, 1189, 1254, 1332, 1333, 1334, 1335, 1345, 1494, 1675, 1784, 1811, 1895, 1964, 1965, 1990, 1991, 1992, 1993, 1996, 2015, 2047], "question": [3, 10, 21, 58, 1727, 1960, 1987, 1995, 2035, 2042, 2043], "involv": [3, 5, 7, 9, 11, 21, 25, 46, 49, 52, 54, 58, 76, 1675, 1829, 1964, 1978, 1980, 1987, 1990, 1991, 1994, 1999, 2009, 2015, 2020, 2021, 2022, 2024, 2042, 2043], "look": [3, 4, 7, 8, 9, 12, 15, 25, 31, 41, 42, 46, 47, 51, 54, 58, 60, 70, 71, 482, 858, 904, 906, 980, 1250, 1345, 1392, 1488, 1584, 1708, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1868, 1869, 1870, 1872, 1873, 1961, 1963, 1968, 1978, 1986, 1987, 1990, 1993, 1998, 1999, 2001, 2005, 2009, 2012, 2015, 2020, 2021, 2034, 2039, 2040, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2053, 2054, 2056], "autom": [3, 8, 58, 1961, 2015, 2036, 2044, 2054], "easili": [3, 7, 8, 11, 22, 25, 27, 1156, 1495, 1593, 1632, 1756, 1814, 1924, 1992, 1993, 1996, 1999, 2004, 2011, 2019, 2020, 2022, 2029, 2044, 2053, 2054], "exclus": [3, 21, 25, 31, 33, 42, 46, 58, 731, 1213, 1675, 1796, 1797, 1800, 1987, 2031], "basi": [3, 9, 10, 31, 1323, 1761, 1990, 1998, 2015, 2020], "thought": [3, 39, 58, 1116, 1118, 1134, 1175], "path_and_function_nam": 3, "children": [3, 35, 49, 58, 787, 1250, 1488, 1977, 1995, 1999, 2012, 2022], "identifi": [3, 7, 9, 25, 33, 36, 39, 42, 43, 44, 58, 482, 813, 1213, 1322, 1527, 1965, 1977, 1988, 1998, 1999, 2012, 2020, 2021, 2022, 2029, 2042, 2047, 2052], "hot": [3, 31, 1595, 1631, 1996, 2039, 2047], "spot": [3, 1682, 1683], "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 309, 560, 861, 1152, 1595, 1868, 1869, 1870, 1872, 1873, 1883, 1962, 1980, 2010, 2024], "index": [3, 15, 21, 22, 27, 31, 40, 46, 58, 187, 204, 277, 308, 309, 310, 311, 312, 313, 315, 317, 318, 467, 468, 508, 509, 510, 511, 512, 513, 514, 515, 691, 692, 813, 850, 873, 888, 890, 901, 902, 933, 952, 1017, 1020, 1077, 1078, 1118, 1159, 1160, 1161, 1165, 1167, 1192, 1222, 1223, 1224, 1225, 1248, 1267, 1272, 1280, 1298, 1316, 1330, 1338, 1340, 1344, 1348, 1351, 1352, 1353, 1356, 1374, 1380, 1383, 1384, 1392, 1407, 1423, 1430, 1431, 1489, 1490, 1495, 1498, 1499, 1537, 1539, 1584, 1585, 1631, 1701, 1703, 1710, 1711, 1716, 1729, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1770, 1771, 1786, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1854, 1865, 1866, 1868, 1869, 1870, 1872, 1873, 1882, 1897, 1918, 1919, 1921, 1922, 1923, 1926, 1935, 1942, 1944, 1960, 1961, 1962, 1964, 1971, 1977, 1978, 1979, 1980, 1987, 1990, 1991, 1993, 1997, 2003, 2010, 2022, 2024, 2027, 2028, 2029, 2030, 2031, 2043, 2044, 2049, 2054], "cpython": [3, 46, 58, 2035, 2041], "known": [3, 7, 9, 20, 24, 25, 29, 36, 47, 50, 53, 55, 60, 70, 71, 1162, 1163, 1172, 1266, 1267, 1322, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1458, 1503, 1517, 1519, 1539, 1604, 1647, 1666, 1841, 1842, 1901, 1960, 1962, 1966, 1975, 1977, 1980, 1985, 1987, 1989, 2003, 2009, 2011, 2020, 2022, 2025, 2035, 2042, 2045, 2054], "quit": [3, 7, 58, 1682, 1683, 1964, 1992, 1994, 2012, 2020, 2052], "noisi": 3, "higher": [3, 7, 8, 22, 25, 49, 50, 55, 60, 65, 69, 146, 889, 891, 910, 1004, 1044, 1055, 1090, 1157, 1163, 1167, 1169, 1179, 1182, 1211, 1227, 1381, 1423, 1480, 1495, 1644, 1740, 1786, 1887, 1935, 1940, 1960, 1968, 1990, 1992, 1993, 1996, 1998, 2004, 2015, 2016, 2020, 2027, 2042], "filter": [3, 540, 768, 769, 770, 1247, 1270, 1415, 1416, 1417, 1418, 1419, 1420, 1568, 1569, 1570, 1571, 1572, 1573, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1882, 1964, 2012, 2054], "transform": [3, 12, 21, 27, 30, 46, 49, 54, 56, 75, 76, 77, 411, 777, 793, 834, 835, 853, 854, 959, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1155, 1156, 1157, 1161, 1166, 1178, 1247, 1260, 1405, 1442, 1450, 1451, 1452, 1460, 1475, 1516, 1532, 1533, 1534, 1535, 1558, 1564, 1593, 1610, 1630, 1666, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1849, 1882, 1960, 1972, 1993, 1995, 2007, 2013, 2015, 2024, 2029, 2034, 2035, 2036, 2041, 2046, 2047], "rather": [3, 8, 9, 14, 25, 33, 35, 44, 46, 49, 58, 60, 69, 775, 781, 928, 958, 1248, 1251, 1322, 1384, 1558, 1593, 1604, 1663, 1690, 1829, 1833, 1961, 1964, 1979, 1980, 1988, 1990, 1992, 1993, 2009, 2012, 2015, 2020, 2024, 2029, 2039, 2040, 2043, 2044, 2045, 2046, 2047], "unicod": [3, 1965], "dictionari": [3, 14, 21, 22, 27, 31, 53, 58, 411, 676, 788, 789, 790, 793, 811, 812, 813, 834, 835, 836, 850, 854, 860, 935, 968, 1055, 1155, 1165, 1168, 1172, 1250, 1251, 1258, 1262, 1266, 1267, 1322, 1323, 1430, 1431, 1488, 1489, 1498, 1584, 1706, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1947, 1963, 1965, 1992, 1999, 2007, 2009, 2011, 2020, 2029, 2033, 2050, 2055, 2056], "lookup": [3, 27, 31, 1430, 1584, 1961, 1965, 1989, 2021, 2047, 2048], "map": [3, 14, 25, 27, 31, 33, 39, 40, 42, 43, 46, 47, 49, 54, 55, 58, 60, 69, 76, 680, 731, 788, 789, 793, 795, 810, 811, 813, 835, 836, 850, 851, 852, 853, 854, 860, 881, 949, 1150, 1156, 1167, 1172, 1176, 1204, 1213, 1258, 1261, 1322, 1323, 1418, 1419, 1420, 1426, 1427, 1428, 1432, 1434, 1484, 1485, 1486, 1489, 1498, 1579, 1580, 1581, 1586, 1689, 1706, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1786, 1788, 1919, 1920, 1935, 1965, 1979, 1981, 1987, 1990, 1991, 1992, 1993, 2000, 2005, 2007, 2012, 2015, 2018, 2020, 2021, 2022, 2026, 2031, 2041, 2043, 2047, 2053, 2055], "agnost": [3, 16, 42, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1593, 1682, 1683, 1979], "reliabl": 3, "warrant": 3, "except": [3, 5, 7, 9, 14, 25, 26, 27, 31, 33, 34, 35, 39, 43, 46, 47, 49, 57, 58, 579, 583, 584, 613, 680, 689, 691, 692, 695, 756, 881, 914, 915, 916, 955, 962, 966, 1003, 1013, 1015, 1043, 1056, 1090, 1096, 1098, 1144, 1145, 1165, 1167, 1173, 1214, 1250, 1258, 1266, 1268, 1272, 1306, 1322, 1338, 1348, 1350, 1351, 1353, 1356, 1379, 1382, 1384, 1439, 1458, 1488, 1503, 1540, 1631, 1669, 1675, 1690, 1716, 1723, 1724, 1728, 1730, 1783, 1807, 1823, 1859, 1871, 1878, 1880, 1881, 1885, 1908, 1930, 1931, 1935, 1936, 1960, 1961, 1963, 1964, 1965, 1966, 1971, 1977, 1980, 1990, 1992, 1995, 1999, 2002, 2005, 2007, 2012, 2013, 2020, 2022, 2024, 2026, 2027, 2031, 2040, 2043, 2052, 2053, 2056], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 319, 324, 540, 610, 1012, 1867, 1871, 1918, 1962, 1991, 2010, 2024, 2044, 2047], "entri": [3, 25, 26, 29, 31, 33, 40, 42, 43, 311, 731, 854, 855, 928, 1041, 1042, 1088, 1139, 1140, 1225, 1250, 1271, 1430, 1431, 1488, 1494, 1584, 1585, 1701, 1702, 1710, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1865, 1961, 1964, 1965, 1971, 1980, 1987, 1991, 1992, 1996, 1999, 2004, 2018, 2024, 2029, 2033, 2040, 2041, 2042, 2047], "h": [4, 10, 14, 31, 483, 484, 737, 738, 739, 756, 960, 961, 1280, 1287, 1290, 1300, 1314, 1390, 1391, 1398, 1399, 1401, 1403, 1404, 1408, 1416, 1417, 1419, 1427, 1428, 1430, 1432, 1439, 1440, 1451, 1452, 1458, 1459, 1460, 1471, 1472, 1482, 1483, 1500, 1501, 1503, 1505, 1522, 1538, 1541, 1542, 1558, 1566, 1593, 1629, 1635, 1636, 1689, 1690, 1724, 1736, 1886, 1962, 1978, 1979, 1987, 1990, 1991, 1992, 1994, 1996, 2009, 2028, 2029, 2030, 2036, 2042, 2051], "finit": [4, 31, 915, 916, 1239, 1240, 1286, 1287, 1297, 1298, 1314, 1340, 1374, 1378, 1400, 1886, 1992, 1996, 2031], "natur": [4, 7, 8, 11, 27, 31, 49, 60, 62, 80, 915, 916, 1279, 1284, 1310, 1324, 1326, 1331, 1392, 1535, 1644, 1995, 1996, 2006, 2007, 2024, 2025], "against": [4, 5, 14, 25, 33, 42, 790, 861, 915, 916, 1126, 1127, 1128, 1132, 1133, 1135, 1192, 1241, 1250, 1266, 1267, 1488, 1494, 1737, 1959, 1964, 2012, 2034, 2051], "cprofil": 4, "mode": [4, 8, 21, 22, 25, 27, 31, 42, 44, 54, 55, 58, 75, 217, 218, 484, 742, 743, 768, 769, 770, 775, 781, 782, 783, 811, 813, 819, 822, 855, 856, 885, 887, 891, 894, 895, 896, 901, 902, 904, 905, 906, 907, 911, 912, 913, 915, 968, 973, 999, 1032, 1072, 1073, 1102, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1156, 1159, 1160, 1161, 1162, 1165, 1166, 1169, 1171, 1199, 1233, 1234, 1248, 1250, 1251, 1254, 1266, 1268, 1309, 1322, 1352, 1365, 1366, 1402, 1403, 1404, 1415, 1416, 1417, 1431, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1488, 1504, 1527, 1540, 1541, 1568, 1569, 1570, 1585, 1593, 1604, 1632, 1663, 1664, 1665, 1676, 1684, 1686, 1690, 1695, 1728, 1761, 1769, 1785, 1828, 1830, 1923, 1960, 1962, 1973, 1978, 1985, 1990, 1991, 1993, 1994, 1995, 1999, 2006, 2007, 2010, 2014, 2016, 2017, 2018, 2020, 2030, 2032, 2036, 2039, 2041, 2043, 2044, 2045, 2046, 2049, 2054, 2055], "correct": [4, 6, 7, 22, 25, 26, 27, 31, 42, 46, 201, 202, 205, 217, 551, 576, 599, 600, 611, 896, 897, 901, 916, 988, 1119, 1121, 1129, 1130, 1131, 1176, 1225, 1248, 1251, 1266, 1267, 1286, 1424, 1441, 1453, 1666, 1675, 1716, 1832, 1880, 1881, 1930, 1931, 1961, 1962, 1963, 1972, 1978, 1979, 1990, 1992, 1996, 2026, 2049, 2053], "launch": [4, 14, 21, 28, 33, 34, 35, 40, 41, 42, 45, 57, 1002, 1675, 1960, 1987, 1989, 1990, 1991, 1992, 2020, 2039, 2046], "spent": [4, 25, 929, 1767, 1989, 1999, 2044, 2052, 2054], "appear": [4, 22, 25, 31, 46, 47, 58, 850, 1044, 1098, 1139, 1140, 1167, 1322, 1356, 1358, 1676, 1807, 1835, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1935, 1961, 1964, 1978, 1979, 1992, 1993, 1999, 2009, 2012, 2044], "extrem": [4, 25, 1675, 1987, 2009, 2043, 2047], "expens": [4, 21, 31, 49, 1689, 1990, 1996, 1998, 2014, 2020, 2030, 2042, 2044, 2048, 2051, 2054], "bound": [4, 15, 22, 25, 46, 49, 477, 791, 952, 963, 1112, 1113, 1168, 1172, 1175, 1250, 1397, 1398, 1399, 1481, 1482, 1483, 1488, 1506, 1593, 1769, 1800, 1821, 1964, 1965, 1985, 1987, 1995, 2012, 2015, 2025, 2042, 2043, 2054], "greater": [4, 25, 42, 60, 61, 288, 613, 676, 944, 957, 958, 963, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1194, 1207, 1305, 1369, 1400, 1536, 1593, 1604, 1631, 1644, 1660, 1663, 1690, 1724, 1923, 1962, 1987, 1990, 2003, 2010, 2024, 2025], "spend": [4, 7, 1323, 1972, 2048], "sens": [4, 31, 42, 58, 1706, 1919, 1920, 1964, 1987, 1995], "respons": [4, 7, 9, 25, 27, 29, 31, 33, 39, 44, 49, 57, 1002, 1173, 1476, 1611, 1675, 1871, 1987, 1990, 1992, 1993, 1999, 2007, 2020, 2043], "Of": [4, 1729, 1959, 1991, 1992, 2035, 2044], "cours": [4, 58, 1959, 1991, 1992, 2020, 2044, 2047], "realiti": [4, 1995], "complic": [4, 22, 30, 58, 789, 1829, 1968, 1979, 1988, 2012, 2020, 2022, 2043], "account": [4, 40, 58, 1401, 1675, 1985, 1989, 1995, 2024, 2039], "heavili": [4, 59, 1745, 1989, 1992, 2012], "similarli": [4, 7, 46, 57, 58, 756, 786, 790, 854, 959, 1118, 1250, 1306, 1488, 1535, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1713, 1911, 1912, 1913, 1914, 1963, 1987, 1992, 1994, 1996, 2002, 2024, 2043, 2046], "platform": [4, 8, 9, 14, 25, 34, 35, 39, 1297, 1298, 1309, 1785, 1886, 1973, 1997, 2002, 2003, 2015], "startup": 4, "slower": [4, 14, 25, 872, 905, 1138, 1139, 1140, 1280, 1287, 1612, 1689, 1740, 1992, 2003, 2011, 2025, 2043], "rerun": [5, 25, 1990], "segment": [5, 1055, 1152, 1519, 1990, 2012, 2044, 2050, 2056], "persist": [5, 19, 27, 46, 49, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 756, 811, 812, 813, 1250, 1439, 1458, 1488, 1503, 1999, 2004, 2005, 2007, 2026, 2039, 2043, 2048], "rng": [5, 21, 1030, 1069, 1822, 1990, 2003, 2019], "advanc": [5, 15, 21, 22, 33, 49, 1531, 1533, 1535, 1729, 1926, 1971, 1979, 1990, 1992, 1997, 2001, 2007, 2028, 2029, 2044], "juggl": 5, "moder": 5, "hit": [5, 8, 14, 1173, 1675, 1959, 1990, 2039, 2044, 2048, 2054], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1960], "omit": [5, 14, 25, 43, 1132, 1133, 1135, 1172, 1441, 1502, 2005, 2009, 2020, 2031, 2045], "exclud": [5, 9, 22, 42, 58, 975, 1213, 1431, 1585, 1634, 1737, 1829, 1911, 1912, 1913, 1914, 1987, 1997, 2004, 2012, 2021, 2041, 2044], "_infer_device_typ": 5, "remain": [5, 8, 31, 42, 58, 1358, 1430, 1431, 1584, 1585, 1666, 1675, 1682, 1683, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1713, 1786, 1808, 1975, 1977, 1986, 1994, 1999, 2026, 2036, 2041], "consequ": [5, 54, 1314, 1458, 1886, 1964, 1987, 1990, 2001, 2003, 2006], "random": [5, 31, 33, 42, 43, 50, 58, 80, 84, 150, 756, 888, 901, 902, 938, 1030, 1031, 1036, 1045, 1046, 1065, 1066, 1069, 1070, 1160, 1167, 1203, 1226, 1323, 1343, 1363, 1364, 1368, 1370, 1396, 1407, 1432, 1439, 1458, 1506, 1586, 1637, 1642, 1666, 1690, 1697, 1703, 1704, 1711, 1712, 1731, 1775, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1822, 1834, 1887, 1926, 1935, 1959, 1960, 1962, 1970, 1985, 1993, 1996, 2002, 2009, 2010, 2029, 2044, 2054], "gradient": [5, 11, 21, 22, 25, 29, 31, 49, 50, 53, 146, 217, 218, 286, 331, 483, 484, 491, 509, 691, 692, 876, 885, 887, 889, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 920, 921, 939, 965, 1102, 1155, 1156, 1157, 1158, 1162, 1167, 1192, 1250, 1286, 1287, 1290, 1297, 1298, 1314, 1323, 1340, 1342, 1348, 1351, 1353, 1400, 1407, 1418, 1419, 1420, 1423, 1424, 1430, 1431, 1441, 1455, 1456, 1457, 1488, 1495, 1519, 1576, 1577, 1584, 1585, 1595, 1604, 1612, 1614, 1615, 1616, 1629, 1663, 1664, 1665, 1675, 1676, 1679, 1680, 1681, 1689, 1695, 1728, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1759, 1760, 1773, 1867, 1886, 1935, 1960, 1961, 1962, 1971, 1979, 1980, 1981, 1985, 1990, 1991, 1992, 1994, 1995, 1996, 1999, 2002, 2010, 2011, 2020, 2021, 2024, 2052], "among": [5, 21, 22, 25, 29, 31, 42, 1011, 1012, 1015, 1213, 1424, 1731, 1964, 2001, 2043], "detect": [5, 14, 17, 18, 21, 25, 26, 33, 35, 49, 904, 905, 906, 907, 908, 909, 968, 1156, 1254, 1531, 1532, 1534, 1675, 1923, 1960, 1977, 1980, 1990, 1996, 2002, 2009, 2012, 2020, 2042, 2044, 2054], "priorit": [5, 1159, 1160, 1162, 1742, 1743, 1755, 2024], "defaultdevicetyp": 5, "anticip": [5, 2056], "belong": [5, 25, 27, 29, 31, 39, 58, 952, 1004, 1757, 1940, 1959, 1990, 2011, 2047, 2053, 2055], "use_reentr": [5, 1675], "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 58, 1425, 1697, 1908, 1981, 1999, 2006, 2007, 2011, 2013, 2015, 2038, 2047, 2054], "recomput": [5, 896, 899, 901, 1540, 1604, 1727, 2011, 2042], "refer": [5, 7, 14, 21, 22, 25, 26, 27, 29, 31, 34, 37, 38, 42, 43, 49, 50, 57, 75, 76, 77, 80, 82, 250, 730, 731, 752, 760, 788, 789, 790, 815, 816, 817, 820, 821, 822, 855, 869, 874, 889, 950, 1037, 1042, 1101, 1152, 1172, 1199, 1200, 1231, 1238, 1250, 1253, 1262, 1269, 1282, 1287, 1303, 1307, 1320, 1323, 1374, 1407, 1441, 1488, 1537, 1558, 1566, 1575, 1593, 1604, 1605, 1662, 1671, 1672, 1675, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1775, 1792, 1799, 1828, 1829, 1849, 1887, 1923, 1959, 1960, 1962, 1977, 1978, 1980, 1981, 1986, 1987, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1999, 2001, 2003, 2009, 2011, 2016, 2017, 2020, 2021, 2024, 2026, 2027, 2028, 2029, 2032, 2035, 2036, 2040, 2041, 2046, 2047, 2050, 2054], "potenti": [5, 8, 42, 44, 49, 80, 187, 204, 482, 1260, 1296, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1644, 1675, 1923, 1963, 1971, 1977, 1987, 1990, 1992, 1995, 2012, 2024, 2027, 2028, 2042, 2044, 2047], "silent": [5, 25, 1045, 1046, 1065, 1066, 1225, 1266, 1488, 1680, 1681, 1871, 1990, 2002, 2009], "consider": [5, 7, 77, 880, 1247, 1431, 1675, 1682, 1683, 1964, 1989], "limit": [5, 8, 9, 12, 21, 47, 49, 50, 55, 77, 980, 1068, 1156, 1264, 1369, 1407, 1430, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1644, 1675, 1706, 1833, 1960, 1964, 1968, 1977, 1979, 1980, 1987, 1990, 1991, 1999, 2002, 2003, 2004, 2006, 2012, 2015, 2018, 2020, 2021, 2024, 2030, 2031, 2042, 2043, 2047, 2051, 2054], "reentrant": [5, 1675], "soon": [5, 42, 46, 49, 789, 1987, 2015, 2020, 2022, 2044, 2047], "intermedi": [5, 12, 14, 32, 46, 47, 54, 58, 77, 949, 980, 1149, 1156, 1163, 1340, 1431, 1531, 1533, 1535, 1585, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1961, 1964, 1968, 1990, 1992, 1993, 1994, 2002, 2034, 2042, 2043], "set_checkpoint_early_stop": 5, "entireti": 5, "graph": [5, 8, 12, 25, 27, 31, 49, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 135, 146, 217, 218, 676, 743, 788, 789, 811, 812, 813, 819, 822, 889, 896, 899, 901, 910, 968, 970, 973, 999, 1034, 1039, 1044, 1156, 1169, 1172, 1175, 1179, 1250, 1253, 1254, 1260, 1262, 1266, 1675, 1737, 1739, 1742, 1743, 1744, 1746, 1752, 1960, 1964, 1970, 1973, 1981, 1986, 1991, 1992, 1995, 1996, 1999, 2000, 2006, 2007, 2009, 2012, 2016, 2017, 2018, 2020, 2021, 2022, 2024, 2029, 2034, 2035, 2036, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2051], "no_grad": [5, 484, 857, 911, 1102, 1157, 1161, 1166, 1250, 1430, 1488, 1494, 1535, 1676, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1985, 1987, 1999, 2015, 2032, 2036], "unmet": 5, "particip": [5, 9, 21, 25, 26, 29, 42, 43, 1675, 2021, 2042], "wherea": [5, 31, 46, 282, 1306, 1365, 1366, 1379, 1756, 1886, 1964, 1987, 2011, 2031, 2043], "avoid": [5, 8, 9, 21, 25, 31, 40, 43, 49, 58, 60, 68, 69, 187, 204, 444, 777, 861, 889, 949, 968, 1055, 1188, 1189, 1250, 1296, 1322, 1422, 1453, 1454, 1479, 1488, 1497, 1502, 1539, 1575, 1605, 1630, 1637, 1675, 1690, 1756, 1807, 1835, 1882, 1901, 1919, 1950, 1968, 1975, 1979, 1987, 1989, 1990, 1994, 1996, 1999, 2011, 2013, 2020, 2021, 2028, 2029, 2030, 2042, 2043, 2044, 2045, 2047], "know": [5, 7, 8, 14, 25, 26, 32, 58, 482, 896, 897, 901, 905, 922, 1149, 1156, 1172, 1179, 1183, 1261, 1675, 1961, 1964, 1971, 1972, 1986, 1987, 1990, 1992, 1995, 1996, 2009, 2012, 2020, 2021, 2022, 2024, 2039, 2041, 2042, 2043, 2044, 2047], "lstm": [5, 759, 1459, 1504, 1962, 1990, 2009, 2010, 2015, 2017, 2018, 2029], "hidden": [5, 756, 1165, 1439, 1440, 1458, 1459, 1503, 1505, 1676, 1990, 2029], "correctli": [5, 21, 25, 42, 49, 482, 1156, 1250, 1266, 1488, 1612, 1961, 1963, 1964, 1975, 1979, 1986, 1987, 1991, 1992, 1993, 2001, 2003, 2015, 2020], "compil": [5, 12, 14, 15, 46, 47, 49, 50, 58, 59, 676, 980, 1025, 1029, 1041, 1042, 1156, 1169, 1171, 1183, 1248, 1250, 1251, 1254, 1255, 1262, 1263, 1264, 1266, 1267, 1268, 1488, 1960, 1961, 1963, 1964, 1965, 1966, 1970, 1986, 1989, 1991, 1998, 2005, 2008, 2009, 2020, 2030, 2032, 2038, 2039, 2040, 2041, 2042, 2043, 2046, 2048, 2049, 2050, 2051], "turn": [5, 14, 21, 24, 54, 58, 77, 676, 869, 968, 1238, 1266, 1532, 1534, 1868, 1869, 1870, 1871, 1872, 1873, 1923, 1971, 1987, 1990, 2002, 2003, 2009, 2014, 2015, 2021, 2024, 2042, 2043, 2046, 2047, 2052], "open": [5, 8, 9, 14, 21, 31, 42, 46, 50, 685, 925, 952, 1148, 1258, 1322, 1345, 1355, 1610, 1961, 1971, 1977, 1980, 1997, 2005, 2006, 2009, 2012, 2015, 2020, 2024, 2025, 2026, 2044, 2052, 2056], "ran": [5, 18, 49, 2044, 2050, 2054], "sequenti": [5, 21, 29, 46, 47, 49, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 789, 1167, 1250, 1260, 1433, 1488, 1527, 1538, 1682, 1683, 1692, 1706, 1770, 1935, 1961, 1977, 1980, 1990, 1999, 2009, 2011, 2013, 2015, 2034, 2044, 2052, 2054], "divid": [5, 22, 25, 29, 234, 579, 580, 581, 1015, 1093, 1096, 1116, 1134, 1143, 1213, 1214, 1261, 1400, 1401, 1407, 1408, 1421, 1447, 1448, 1454, 1479, 1480, 1491, 1492, 1493, 1502, 1519, 1520, 1536, 1537, 1565, 1566, 1576, 1577, 1605, 1629, 1637, 1675, 1886, 1936, 1962, 2010], "func": [5, 25, 52, 54, 58, 60, 62, 858, 888, 891, 896, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 911, 915, 916, 1253, 1266, 1267, 1546, 1725, 1926, 1935, 1960, 1964, 1968, 1986, 2020, 2022, 2055], "compris": [5, 43, 46, 1995], "chunk": [5, 21, 25, 27, 49, 955, 1015, 1161, 1424, 1675, 1874, 1961, 1962, 1978, 1995, 2010, 2011, 2013, 2020, 2024, 2028], "input_var": [5, 1424], "set_checkpoint_debug_en": [5, 1960], "defer": [5, 22, 49, 1990, 2013], "person": [6, 7, 9], "land": [6, 9, 10, 2051], "six": [6, 76, 1417], "commit": [6, 7, 9, 14, 50, 1959, 1960, 2002, 2003, 2051], "repositori": [6, 9, 53, 58, 1959, 2001, 2015], "submit": [6, 9, 1001, 1002, 1004, 1362, 1940, 1990, 2003, 2041, 2044, 2051], "month": [6, 9], "qualifi": [6, 25, 27, 30, 39, 58, 676, 1250, 1488, 1968, 1970, 2007, 2012], "pr": [6, 7, 1775, 1887, 2034, 2044], "interest": [6, 7, 9, 77, 1987, 1993, 1996, 1999, 2006, 2041, 2043, 2048, 2052], "merge_rul": 6, "vote": [6, 9], "decis": [6, 27, 33, 42, 44, 58, 676, 1172, 1266, 1971, 1986, 2042], "criteria": [6, 9, 1323], "approv": [6, 9], "Not": [6, 43, 76, 1178, 1382, 1535, 1882, 1961, 1963, 1964, 1965, 1990, 1992, 2010, 2015, 2020, 2047], "busi": [6, 9, 2048], "dai": [6, 7, 2043, 2051], "contributor": [6, 7, 8, 9], "seen": [6, 12, 18, 31, 58, 217, 923, 955, 968, 988, 1352, 1418, 1419, 1420, 1519, 1618, 1619, 1620, 1769, 1961, 1971, 1987, 1990, 2009, 2024, 2047], "thumb": [6, 25], "deprec": [7, 25, 27, 30, 33, 42, 43, 46, 49, 53, 402, 509, 553, 599, 781, 782, 783, 789, 822, 910, 958, 959, 998, 1048, 1052, 1196, 1250, 1305, 1308, 1340, 1341, 1400, 1401, 1421, 1423, 1446, 1447, 1453, 1454, 1479, 1480, 1488, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1536, 1541, 1542, 1565, 1566, 1576, 1605, 1629, 1637, 1663, 1664, 1665, 1667, 1675, 1679, 1724, 1725, 1727, 1730, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1785, 1801, 1827, 1882, 1886, 1910, 1960, 1961, 1966, 1977, 1988, 2014, 2018, 2026, 2030, 2031, 2044], "wiki": [7, 9, 22, 2006, 2057], "acceler": [7, 22, 934, 1402, 1403, 1404, 1527, 1739, 1997, 2035, 2039, 2044], "deep": [7, 9, 58, 1402, 1403, 1404, 1429, 1527, 1755, 1960, 1985, 1990, 1999, 2015, 2038, 2042, 2054], "neural": [7, 8, 15, 58, 1396, 1407, 1425, 1432, 1441, 1453, 1487, 1488, 1495, 1500, 1501, 1515, 1517, 1531, 1533, 1535, 1624, 1647, 1693, 1753, 1761, 1767, 1961, 1963, 1964, 1985, 1990, 1992, 2002, 2006, 2015, 2042], "tape": [7, 2039], "system": [7, 8, 14, 15, 17, 21, 43, 46, 54, 58, 59, 961, 976, 1168, 1204, 1258, 1282, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1311, 1312, 1313, 1317, 1322, 1341, 1369, 1531, 1533, 1535, 1675, 1693, 1695, 1830, 1910, 1965, 1970, 1975, 1987, 1989, 1990, 1998, 1999, 2001, 2005, 2007, 2012, 2020, 2036, 2042, 2052, 2059], "organ": [7, 1991, 1998, 2012, 2044, 2047], "govern": [7, 8, 1960], "technic": [7, 9, 42, 46, 49, 58, 1250, 1488, 1987, 1994, 1995, 2001, 2012, 2042], "found": [7, 14, 15, 16, 18, 25, 42, 46, 58, 60, 67, 69, 79, 81, 82, 83, 935, 952, 998, 1077, 1078, 1250, 1254, 1272, 1348, 1351, 1353, 1356, 1380, 1396, 1406, 1432, 1488, 1515, 1752, 1821, 1959, 1961, 1964, 1980, 1986, 1992, 1995, 1996, 1999, 2001, 2009, 2012, 2014, 2015, 2020, 2029, 2040, 2043, 2048, 2051, 2053, 2055], "md": [7, 58, 788, 2012], "healthi": [7, 33, 42], "team": [7, 25, 50, 80, 81, 83, 2004, 2013], "commun": [7, 8, 9, 26, 27, 29, 33, 42, 44, 49, 482, 676, 1675, 1987, 1991, 2006, 2020, 2021, 2044], "project": [7, 27, 1352, 1458, 1494, 1695, 1775, 1959, 1995, 1997, 2006, 2036, 2053], "ve": [7, 52, 53, 54, 58, 1169, 1254, 1926, 1971, 1977, 1987, 1993, 2021, 2029, 2043, 2044, 2047], "come": [7, 8, 9, 21, 31, 32, 39, 42, 46, 50, 54, 482, 968, 1098, 1149, 1156, 1250, 1322, 1426, 1427, 1428, 1432, 1453, 1736, 1973, 1991, 1993, 1998, 2012, 2020, 2022, 2024, 2041, 2047, 2050], "peopl": [7, 25, 1987, 2015, 2046], "scratch": [7, 1987, 2054], "own": [7, 9, 25, 26, 29, 31, 34, 42, 44, 46, 49, 58, 676, 1033, 1132, 1152, 1213, 1250, 1322, 1415, 1416, 1417, 1418, 1419, 1420, 1488, 1692, 1695, 1964, 1981, 1986, 1990, 1995, 2012, 2015, 2016, 2020, 2022, 2024, 2043, 2046], "itch": 7, "acquaint": 7, "tip": [7, 1990, 2044], "tracker": [7, 1323], "confirm": [7, 1959, 1961, 1992, 2009, 2020, 2022, 2050], "tend": [7, 906, 1923], "bootcamp": 7, "1hr": 7, "although": [7, 8, 31, 54, 58, 59, 1418, 1419, 1420, 1488, 1496, 1675, 1960, 1964, 1972, 1986, 1992, 2002, 2013, 2015, 2052, 2053], "join": [7, 22, 25, 29, 42, 43, 57, 58, 1191, 1675, 1959, 1960, 1965, 1977, 1987, 1991, 2001, 2010, 2030, 2036], "u": [7, 8, 12, 27, 50, 55, 58, 60, 756, 904, 959, 1171, 1287, 1289, 1293, 1297, 1298, 1314, 1340, 1342, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1439, 1440, 1458, 1459, 1473, 1475, 1503, 1505, 1506, 1527, 1538, 1695, 1775, 1886, 1887, 1961, 1962, 1971, 1979, 1985, 1987, 1990, 1991, 1992, 1993, 1999, 2012, 2014, 2024, 2028, 2029, 2036, 2039, 2042, 2044, 2047, 2048, 2049, 2054], "dev": [7, 10, 34, 39, 2041, 2054], "happi": 7, "research": [7, 8, 9, 1675, 1959, 1987, 1996, 2004], "partner": [7, 2035], "speed": [7, 8, 14, 29, 49, 1010, 1098, 1155, 1241, 1254, 1260, 1314, 1392, 1494, 1682, 1683, 1829, 1886, 1972, 1987, 1989, 1990, 1991, 1992, 1994, 1997, 2002, 2015, 2020, 2041, 2047], "design": [7, 9, 21, 31, 39, 42, 47, 50, 53, 54, 55, 915, 916, 1250, 1270, 1401, 1488, 1546, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1898, 1959, 1960, 1975, 1984, 1990, 1992, 1995, 1997, 1999, 2007, 2012, 2036, 2041, 2042, 2044, 2046, 2049, 2054], "comment": [7, 58, 1727, 1825, 1964, 1965, 1992, 2027, 2029, 2048], "crack": 7, "usual": [7, 14, 21, 22, 27, 42, 43, 46, 47, 49, 58, 81, 477, 827, 828, 829, 830, 837, 889, 904, 906, 910, 1167, 1426, 1427, 1428, 1432, 1447, 1450, 1451, 1452, 1453, 1666, 1675, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1935, 1961, 1964, 1980, 1986, 1987, 1989, 1990, 1992, 1994, 1998, 2011, 2016, 2018, 2020, 2029, 2038, 2043, 2048, 2055], "idea": [7, 50, 924, 1098, 1175, 1392, 1675, 1990, 1998, 2009, 2021, 2044], "rfc": [7, 1987, 2015, 2021], "big": [7, 1742, 1743, 1746, 1752, 1753, 1868, 1869, 1870, 1871, 1872, 1873, 1990, 2004, 2011, 2015, 2042, 2043, 2048], "post": [7, 8, 26, 27, 29, 49, 482, 484, 676, 852, 853, 857, 1250, 1488, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1960, 1968, 1987, 1991, 1992, 1994, 2005, 2024, 2041, 2043, 2054], "standard": [7, 14, 18, 22, 31, 35, 36, 40, 47, 54, 58, 348, 373, 585, 1118, 1172, 1396, 1402, 1403, 1404, 1442, 1450, 1451, 1452, 1453, 1460, 1527, 1533, 1535, 1548, 1731, 1775, 1798, 1843, 1848, 1880, 1881, 1963, 1965, 1980, 1985, 1989, 1990, 2001, 2002, 2006, 2009, 2012, 2025], "lot": [7, 14, 21, 46, 1179, 1977, 1987, 1990, 1996, 2001, 2012, 2013, 2019, 2021, 2029, 2042, 2043, 2047, 2048, 2056], "boil": 7, "mostli": [7, 31, 1248, 1675, 1990, 2015, 2024, 2042, 2055], "evid": 7, "peer": [7, 25, 29, 42, 49, 1008, 1675, 1990, 2020], "paper": [7, 9, 22, 31, 47, 756, 1392, 1396, 1402, 1403, 1404, 1406, 1418, 1419, 1420, 1425, 1426, 1427, 1428, 1429, 1432, 1435, 1436, 1439, 1442, 1445, 1450, 1451, 1452, 1460, 1494, 1500, 1501, 1506, 1515, 1519, 1527, 1531, 1533, 1535, 1536, 1537, 1588, 1589, 1598, 1742, 1743, 1752, 1754, 1761, 1767, 1996, 2013], "framework": [7, 8, 9, 31, 39, 50, 57, 59, 756, 1006, 1360, 1439, 1675, 1689, 1755, 1833, 1960, 1972, 2000, 2013, 2015, 2021, 2022], "bit": [7, 58, 84, 326, 454, 757, 759, 761, 815, 816, 817, 818, 821, 823, 854, 941, 944, 981, 982, 1152, 1230, 1809, 1810, 1822, 1829, 1850, 1990, 1995, 1999, 2002, 2005, 2015, 2018, 2019, 2024, 2027, 2030, 2047, 2048, 2057], "accept": [7, 9, 21, 25, 27, 30, 46, 49, 50, 51, 53, 55, 146, 509, 798, 885, 886, 887, 888, 889, 896, 898, 901, 902, 910, 958, 1041, 1044, 1151, 1167, 1171, 1213, 1250, 1254, 1423, 1488, 1495, 1516, 1535, 1702, 1716, 1717, 1723, 1738, 1826, 1863, 1877, 1935, 1964, 1968, 1979, 1990, 1992, 1993, 2009, 2011, 2020, 2027, 2029, 2044, 2054], "overwhelm": [7, 2020, 2054], "newli": [7, 49, 58, 1112, 1113, 1430, 1431, 1787, 1788, 2047], "publish": [7, 9, 34, 39, 42, 1323, 1960], "ground": [7, 9, 1423, 1576, 2029], "becom": [7, 8, 9, 12, 21, 25, 30, 31, 58, 286, 756, 872, 1204, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1439, 1458, 1473, 1493, 1503, 1516, 1576, 1593, 1666, 1759, 1858, 1908, 1971, 1973, 1987, 1991, 1992, 2009, 2012, 2014, 2020, 2047, 2054, 2056], "refactor": [7, 58, 2005, 2015], "coordin": [7, 25, 27, 31, 33, 579, 582, 880, 1204, 1213, 1352, 1779, 1871, 1912, 1914, 1921, 1987, 2024, 2029, 2044, 2054], "pace": 7, "branch": [7, 12, 46, 58, 60, 63, 65, 68, 69, 980, 1959, 1963, 1964, 1990, 2042, 2051], "definit": [7, 8, 21, 25, 26, 31, 38, 46, 47, 58, 81, 959, 960, 961, 988, 1041, 1146, 1179, 1182, 1188, 1189, 1271, 1280, 1281, 1323, 1374, 1453, 1605, 1651, 1730, 1805, 1908, 1959, 1961, 1963, 1965, 1986, 1987, 1992, 1996, 2012, 2015, 2029, 2031, 2047], "fundament": [7, 54, 1963, 1999, 2020, 2024, 2043], "cut": [7, 2044], "guidanc": [7, 9, 15, 51, 482, 1181, 2013, 2042], "stage": [7, 18, 22, 29, 39, 49, 57, 1960, 1971, 1980, 2013, 2022, 2054], "piec": [7, 1970, 1980, 2021, 2044, 2047, 2056], "advic": [7, 2044], "readi": [7, 14, 57, 857, 858, 937, 946, 1208, 1209, 1675, 1961, 1991, 2020, 2021, 2039], "draft": 7, "convert": [7, 21, 25, 27, 30, 31, 32, 47, 49, 53, 56, 58, 76, 77, 78, 146, 576, 580, 581, 582, 583, 584, 731, 784, 785, 786, 788, 789, 790, 811, 812, 813, 834, 835, 850, 853, 854, 855, 875, 876, 954, 967, 1082, 1118, 1149, 1250, 1320, 1488, 1498, 1499, 1527, 1534, 1666, 1677, 1678, 1682, 1683, 1736, 1737, 1756, 1787, 1788, 1793, 1868, 1869, 1870, 1871, 1872, 1873, 1921, 1961, 1962, 1963, 1964, 1972, 1980, 1981, 1992, 1997, 2006, 2007, 2009, 2015, 2018, 2024, 2029, 2031, 2034, 2035, 2044, 2047, 2053, 2054], "press": [7, 58], "button": [7, 2051], "prepend": [7, 14, 21, 25, 29, 58, 225, 1090, 1250, 1345, 1488, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1904, 1962, 1988], "titl": [7, 2010, 2014, 2015], "wip": 7, "progress": [7, 29, 33, 43, 45, 75, 482, 1001, 1362, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1929, 1959, 1974], "ci": [7, 1960, 2051], "folk": 7, "who": [7, 8, 9, 11, 42, 60, 77, 2012, 2047], "regularli": 7, "queue": [7, 33, 44, 1977, 2029], "everyth": [7, 21, 31, 47, 53, 60, 1961, 1977, 2012, 2042, 2044, 2047, 2048, 2054], "happen": [7, 9, 25, 27, 29, 31, 33, 35, 42, 46, 49, 54, 58, 603, 787, 810, 901, 902, 1156, 1527, 1675, 1689, 1758, 1764, 1765, 1771, 1886, 1960, 1975, 1977, 1987, 1990, 1991, 1992, 1993, 1994, 1995, 2000, 2001, 2005, 2009, 2015, 2020, 2026, 2028, 2039, 2044, 2047], "subsystem": [7, 11, 50, 55, 970, 1960, 1968, 1992], "patch": [7, 51, 1434, 1539, 1924, 2045], "feel": [7, 1980, 2009, 2024, 2044], "ll": [7, 54, 58, 756, 816, 817, 857, 858, 959, 960, 961, 1044, 1172, 1280, 1439, 1440, 1458, 1459, 1971, 1987, 1990, 1992, 1993, 2001, 2009, 2015, 2021, 2040, 2043, 2048, 2052], "round": [7, 21, 25, 60, 62, 69, 504, 661, 662, 795, 798, 816, 861, 984, 986, 1055, 1093, 1119, 1120, 1121, 1125, 1129, 1130, 1131, 1146, 1296, 1309, 1540, 1604, 1785, 1786, 1805, 1853, 1962, 1964, 1978, 1990, 2010, 2015, 2018, 2024, 2025, 2049, 2056], "trip": [7, 58, 1119, 1120, 1121, 1125, 1129, 1130, 1131], "noth": [7, 14, 33, 58, 676, 995, 1035, 1695, 1742, 1743, 1755, 1770, 1950, 1961, 1963, 2003, 2022], "accompani": [7, 79, 2007], "solut": [7, 8, 54, 961, 1168, 1295, 1296, 1300, 1308, 1311, 1313, 1317, 1400, 1675, 1910, 1961, 1962, 1985, 1986, 1994, 2001, 2015], "think": [7, 9, 58, 60, 482, 1756, 1961, 1963, 1987, 2011, 2012, 2022, 2043, 2045], "confid": [7, 1682, 1683, 1995, 2029, 2045], "ahead": [7, 46, 1960, 2015, 2035, 2042, 2044], "search": [7, 11, 22, 815, 952, 1445, 1598, 1675, 1737, 1792, 1821, 1961, 1978, 1979, 2009, 2012, 2024, 2040, 2043, 2051, 2056], "repo": [7, 60, 1761, 1959, 1992, 2005], "unabl": [7, 54, 78, 2009, 2011], "reproduc": [7, 21, 54, 309, 317, 511, 513, 939, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1484, 1485, 1486, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1585, 1593, 1604, 1632, 1644, 1663, 1664, 1665, 1666, 1923, 1959, 1960, 2011, 2012, 2044, 2054], "problemat": [7, 21, 58, 922, 1961, 2002, 2016, 2044], "insight": [7, 18, 75, 2036, 2056], "individu": [7, 9, 14, 21, 22, 25, 27, 29, 49, 58, 79, 238, 676, 788, 834, 835, 959, 1064, 1116, 1134, 1169, 1250, 1407, 1488, 1527, 1675, 1964, 1978, 1986, 1987, 1990, 1992, 1995, 1998, 2002, 2003, 2007, 2009, 2011, 2018, 2020, 2031, 2039, 2046, 2051, 2056], "intent": [7, 40, 42, 49, 54, 1826, 1971, 2012, 2015, 2050], "lock": [7, 21, 25, 29, 31, 1987, 1990, 2001, 2012, 2021, 2056], "strike": 7, "convers": [7, 27, 454, 576, 579, 789, 953, 1235, 1682, 1683, 1716, 1960, 1965, 1992, 1997, 2009, 2015, 2016, 2024, 2042, 2043, 2053], "medium": [7, 49, 1829], "prioriti": [7, 9, 10, 25, 676, 850, 989, 1004, 1940, 1963, 2004], "entranc": [7, 1990], "great": [7, 12, 46, 1987, 1996, 2039, 2042], "deal": [7, 8, 21, 33, 44, 46, 76, 1903, 1977, 1994, 2020, 2042, 2043, 2047, 2048], "welcom": [7, 1980, 2006, 2011, 2024], "aim": [7, 46, 77, 1993, 2024, 2035], "rare": [7, 1986, 2009, 2042, 2045, 2055], "typo": 7, "send": [7, 21, 25, 33, 44, 1037, 1666, 1675, 1977, 1991, 2001, 2005, 2010, 2014, 2020, 2021, 2022, 2032, 2034, 2043, 2046], "forum": [7, 9, 1994, 2001], "share": [7, 10, 14, 21, 26, 29, 31, 32, 42, 43, 47, 49, 54, 217, 307, 336, 454, 479, 516, 520, 613, 855, 875, 876, 896, 897, 901, 902, 915, 916, 968, 999, 1001, 1033, 1037, 1149, 1150, 1151, 1152, 1221, 1298, 1383, 1384, 1424, 1504, 1675, 1693, 1731, 1803, 1817, 1825, 1877, 1901, 1907, 1922, 1962, 1986, 1987, 1989, 2001, 2004, 2005, 2009, 2020, 2024, 2026, 2028, 2033, 2036, 2039], "resolv": [7, 8, 9, 27, 31, 49, 58, 78, 79, 1250, 1418, 1419, 1420, 1434, 1485, 1488, 1963, 1964, 1965, 2005, 2012, 2026, 2042, 2055], "challeng": [7, 25, 2021, 2044], "feedback": [7, 18, 22, 49, 50, 1675, 1960, 2024], "direct": [7, 9, 11, 25, 47, 756, 788, 1139, 1140, 1179, 1250, 1439, 1458, 1488, 1503, 1691, 1727, 1754, 1775, 1792, 1813, 1968, 1987, 1990, 1992, 1995, 1999, 2020, 2047, 2053], "yourself": [7, 52, 999, 1924, 1992, 1999, 2001, 2044, 2055], "problem": [7, 21, 25, 42, 46, 54, 60, 1098, 1172, 1266, 1296, 1308, 1323, 1423, 1495, 1558, 1825, 1977, 1987, 1990, 1994, 1996, 2001, 2005, 2013, 2015, 2016, 2022, 2027, 2035, 2042, 2044, 2054], "area": [7, 9, 47, 1604, 1999, 2015, 2025], "appreci": 7, "strive": 7, "respond": [7, 25], "quickli": [7, 8, 22, 42, 1995, 2046], "ey": [7, 31, 187, 204, 960, 961, 1167, 1271, 1280, 1291, 1302, 1305, 1308, 1309, 1316, 1317, 1689, 1785, 1864, 1935, 1962, 1966, 1992, 2010], "everyon": [7, 33, 42], "touch": [7, 40, 58], "versu": [7, 1171, 1492], "write": [7, 8, 9, 12, 16, 18, 21, 25, 27, 33, 35, 39, 40, 41, 42, 46, 49, 54, 55, 59, 76, 78, 79, 250, 482, 509, 693, 950, 970, 1151, 1156, 1167, 1173, 1227, 1261, 1281, 1292, 1293, 1294, 1298, 1299, 1312, 1662, 1817, 1910, 1923, 1935, 1960, 1963, 1968, 1975, 1979, 1990, 1993, 1994, 1996, 2007, 2011, 2012, 2015, 2024, 2029, 2035, 2042, 2044, 2046, 2048, 2054], "blog": [7, 8, 12, 980, 1968, 1991, 1992, 2015, 2024], "around": [7, 9, 11, 25, 31, 53, 54, 57, 58, 146, 620, 889, 910, 996, 999, 1001, 1002, 1004, 1073, 1144, 1145, 1156, 1250, 1362, 1675, 1814, 1940, 1955, 1961, 1977, 1987, 1990, 2009, 2015, 2020, 2039, 2044, 2047], "internet": 7, "grow": [7, 8, 58, 1990, 2024], "market": [7, 9], "benefit": [7, 8, 25, 58, 843, 1682, 1683, 1769, 1977, 1990, 1995, 2015, 2024, 2054], "opinion": [7, 8, 2024], "isn": [7, 21, 58, 454, 1247, 1987, 1990, 1992, 2020, 2031, 2043], "categor": [7, 35, 1595, 1960, 1965, 2016, 2020, 2053], "aspect": [7, 25, 58, 1504, 1992, 1999], "seem": [7, 1172, 2009], "unusu": [7, 2043], "claim": [7, 1682, 1683, 1767, 1996], "wast": [7, 1990], "someon": [7, 9, 1248, 1979], "end": [7, 8, 9, 21, 22, 25, 31, 35, 39, 52, 58, 357, 358, 534, 756, 780, 793, 816, 817, 861, 924, 932, 937, 983, 999, 1059, 1088, 1098, 1137, 1152, 1190, 1204, 1210, 1211, 1247, 1250, 1271, 1276, 1306, 1316, 1318, 1321, 1323, 1337, 1383, 1384, 1399, 1400, 1401, 1409, 1410, 1411, 1421, 1423, 1429, 1433, 1439, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1454, 1458, 1459, 1474, 1479, 1482, 1483, 1488, 1490, 1495, 1496, 1499, 1503, 1506, 1516, 1519, 1525, 1530, 1537, 1576, 1585, 1597, 1598, 1675, 1689, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1759, 1764, 1801, 1833, 1836, 1839, 1841, 1854, 1908, 1919, 1920, 1938, 1961, 1962, 1963, 1964, 1977, 1986, 1987, 1990, 1991, 1992, 1994, 1995, 1996, 2002, 2005, 2007, 2009, 2011, 2014, 2015, 2018, 2020, 2025, 2039, 2043, 2046, 2049, 2054], "too": [7, 9, 14, 22, 27, 42, 54, 58, 482, 1055, 1155, 1172, 1175, 1296, 1314, 1380, 1407, 1423, 1488, 1577, 1676, 1725, 1964, 1989, 1994, 1996, 2001, 2002, 2003, 2005, 2007, 2012, 2013, 2022, 2024, 2042, 2043, 2054, 2056], "advisori": 7, "fashion": [7, 21, 25, 30, 44, 46, 511, 1328, 1706, 1961], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 2054], "wrote": [7, 8], "implicitli": [7, 25, 35, 58, 1081, 1171, 1195, 1204, 1266, 1267, 1322, 1397, 1398, 1399, 1481, 1482, 1483, 1826, 1908, 1961, 1963, 1964, 1987, 1992, 1997], "lifetim": [7, 482, 1968, 2020, 2043], "immedi": [7, 8, 9, 25, 42, 43, 49, 57, 482, 1179, 1250, 1253, 1488, 1682, 1683, 1964, 1990, 1995, 1999, 2004, 2011, 2020, 2022, 2042, 2043], "sai": [7, 46, 47, 58, 492, 924, 1159, 1160, 1161, 1171, 1177, 1250, 1488, 1961, 1986, 1987, 1994, 2012, 2021, 2022, 2024, 2039, 2042, 2047, 2048, 2053], "bugfix": 7, "Or": [7, 33, 58, 876, 963, 1997, 2000, 2009, 2024, 2047], "motiv": [7, 8, 58, 731, 1995, 1999, 2021, 2054], "ye": [7, 2009, 2011, 2024, 2044], "knuth": 7, "bewar": 7, "mere": [7, 47], "proven": [7, 1425, 1675], "ok": [7, 35, 40, 53, 1175, 1182, 1255, 2022, 2044], "sometim": [7, 58, 907, 1055, 1256, 1266, 1434, 1539, 1571, 1572, 1573, 1695, 1960, 1964, 1977, 1987, 1990, 1993, 1994, 1995, 1999, 2001, 2012, 2027, 2030, 2042, 2043, 2048, 2055], "obvious": [7, 2043], "broken": [7, 21, 1055, 2009, 2012], "contrari": [7, 1989], "accident": 7, "put": [7, 9, 21, 25, 33, 53, 57, 58, 315, 1118, 1322, 1442, 1761, 1959, 1962, 1977, 1990, 1995, 2001, 2010, 2012, 2021, 2022, 2043, 2045], "difficulti": [7, 1985], "nonlinearli": 7, "sign": [7, 31, 337, 525, 880, 983, 1086, 1134, 1146, 1152, 1284, 1309, 1310, 1331, 1480, 1754, 1805, 1836, 1850, 1962, 1978, 2010, 2018, 2024, 2027, 2030, 2031, 2049], "split": [7, 21, 25, 58, 613, 768, 769, 770, 855, 857, 858, 955, 962, 1055, 1096, 1214, 1424, 1438, 1439, 1458, 1494, 1503, 1568, 1569, 1570, 1571, 1572, 1573, 1592, 1902, 1936, 1961, 1962, 1978, 1990, 1995, 2010, 2012, 2013, 2015, 2020, 2024, 2028, 2052, 2056], "shippabl": 7, "complet": [7, 14, 21, 25, 27, 33, 34, 40, 42, 44, 54, 57, 482, 676, 857, 970, 997, 1001, 1002, 1004, 1074, 1155, 1156, 1253, 1262, 1264, 1269, 1281, 1309, 1362, 1365, 1366, 1371, 1558, 1675, 1692, 1725, 1785, 1829, 1940, 1956, 1960, 1963, 1964, 1965, 1970, 1977, 1986, 1987, 1990, 1993, 1997, 2003, 2012, 2013, 2020, 2021, 2038, 2045, 2047, 2051, 2052], "subtl": [7, 1450, 1451, 1452, 1992, 2043, 2044, 2054], "nuanc": [7, 2006, 2047], "extra": [7, 14, 21, 22, 25, 29, 31, 46, 49, 58, 1098, 1156, 1167, 1171, 1250, 1258, 1261, 1296, 1322, 1488, 1495, 1689, 1882, 1935, 1963, 1979, 1987, 1989, 1991, 1992, 1994, 1998, 2007, 2012, 2014, 2024, 2030, 2031, 2032, 2043, 2047, 2048], "understand": [7, 8, 9, 25, 27, 33, 34, 60, 76, 77, 1156, 1308, 1960, 1985, 1987, 1990, 1997, 2004, 2007, 2014, 2029, 2035, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2054], "hack": 7, "answer": [7, 10, 58, 820, 1179, 1401, 1708, 2043, 2044], "regress": [7, 1400, 2003, 2039, 2050], "scrutini": 7, "undertak": 7, "rest": [7, 21, 22, 43, 49, 58, 789, 810, 1152, 1316, 1317, 1902, 1979, 1999, 2003, 2012, 2013, 2015, 2020, 2024, 2044, 2045, 2047, 2048, 2052], "stai": [7, 29, 135, 1424, 1682, 1683, 1990, 2001, 2015, 2020, 2024], "chanc": [7, 27, 31, 1992, 2043, 2044, 2048], "unrel": [7, 976, 1165, 1986, 1992, 2012], "aid": [7, 58, 1987, 2054], "troubleshoot": [7, 25, 2035, 2044], "mayb": [7, 1163, 1926, 2043], "rebas": 7, "latest": [7, 14, 25, 29, 31, 46, 893, 924, 1702, 1959, 1992, 1997, 2007, 2009], "statu": [7, 9, 33, 1340, 1960, 1965, 1977, 2015, 2036], "hud": 7, "risk": [7, 8, 46, 49, 1692, 1695], "anyth": [7, 32, 35, 49, 57, 819, 822, 1179, 1262, 1756, 1961, 1980, 1995, 1999, 2012, 2042], "configur": [7, 13, 21, 22, 25, 30, 33, 34, 39, 42, 43, 44, 49, 784, 785, 788, 789, 793, 810, 811, 812, 813, 819, 822, 834, 835, 836, 839, 841, 844, 854, 855, 856, 857, 858, 968, 1055, 1675, 1716, 1830, 1923, 1960, 1970, 1975, 1990, 1991, 1992, 2003, 2005, 2012, 2018, 2020, 2029, 2031, 2042, 2044, 2051, 2052, 2054], "riski": 7, "had": [7, 58, 924, 1172, 1266, 1666, 1904, 1987, 1993, 2042, 2050], "beforehand": [7, 57, 2044], "hei": 7, "my": [7, 21, 1424, 1998, 2009, 2015], "member": [7, 9, 21, 25, 33, 42, 43, 58, 1250, 1441, 1488, 1590, 1961, 1963, 1964, 1975, 1994, 2014, 2020, 2031, 2032], "sphinx": 7, "folder": [7, 9, 14, 21, 27, 58, 1737, 1959, 2007, 2029, 2046, 2054], "tree": [7, 35, 53, 968, 1488, 1531, 1737, 2009, 2012, 2014, 2022, 2035], "master": [7, 25, 45, 788, 1156, 1531, 1959, 2020], "doxygen": 7, "special": [7, 11, 35, 44, 47, 54, 58, 60, 65, 68, 69, 737, 738, 739, 819, 822, 915, 968, 1091, 1105, 1106, 1107, 1109, 1110, 1119, 1121, 1168, 1171, 1218, 1219, 1220, 1264, 1322, 1336, 1377, 1424, 1535, 1676, 1677, 1678, 1729, 1756, 1780, 1837, 1848, 1852, 1939, 1960, 1965, 1970, 1979, 1990, 1992, 1995, 1996, 1998, 2009, 2012, 2015, 2026, 2028, 2029, 2036, 2041, 2042, 2043, 2047, 2050], "server": [7, 21, 25, 43, 1254, 1990, 2012, 2015, 2020, 2036, 2038], "cppdoc": [7, 15], "cpp": [7, 14, 25, 1374, 1991, 2036, 2042], "accomplish": [7, 27, 1999, 2044], "holist": 7, "concept": [7, 47, 54, 58, 1968, 1992, 1993, 1999, 2027, 2045], "galleri": 7, "restructur": [7, 2012], "text": [7, 21, 31, 47, 149, 150, 169, 604, 613, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 690, 694, 741, 742, 752, 754, 756, 760, 764, 765, 766, 768, 769, 770, 776, 780, 816, 817, 861, 877, 878, 879, 880, 881, 936, 937, 938, 941, 944, 946, 948, 957, 960, 961, 963, 982, 983, 985, 986, 988, 1093, 1112, 1113, 1142, 1143, 1147, 1148, 1194, 1207, 1208, 1209, 1210, 1217, 1239, 1247, 1271, 1274, 1275, 1276, 1279, 1280, 1287, 1290, 1296, 1300, 1305, 1308, 1314, 1321, 1330, 1337, 1338, 1339, 1340, 1373, 1374, 1385, 1386, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1491, 1492, 1493, 1494, 1495, 1496, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1560, 1561, 1562, 1564, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1579, 1580, 1581, 1586, 1589, 1591, 1592, 1593, 1597, 1598, 1608, 1613, 1618, 1619, 1620, 1624, 1629, 1632, 1637, 1638, 1640, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1654, 1655, 1656, 1681, 1689, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1761, 1778, 1779, 1782, 1785, 1798, 1801, 1804, 1816, 1836, 1838, 1839, 1851, 1853, 1864, 1865, 1875, 1882, 1883, 1886, 1899, 1900, 1938, 1980, 1985, 1996, 2009, 2012, 2018, 2025, 2029, 2031, 2046], "rst": 7, "trigger": [7, 9, 25, 42, 57, 80, 81, 83, 217, 924, 1072, 1833, 1986, 1987, 1990, 1991, 1992, 1998, 2004, 2020, 2039, 2041, 2044, 2050, 2051, 2054], "rebuild": [7, 22], "entir": [7, 14, 21, 25, 30, 33, 43, 58, 693, 915, 916, 968, 1156, 1204, 1426, 1427, 1428, 1432, 1450, 1451, 1452, 1460, 1579, 1580, 1581, 1586, 1675, 1691, 1701, 1703, 1727, 1964, 1980, 1987, 1990, 1992, 1993, 1994, 1998, 1999, 2009, 2012, 2015, 2020, 2022, 2024, 2040, 2041, 2042, 2043, 2044, 2047, 2054, 2056], "circleci": 7, "shard": [7, 21, 27, 29, 30, 49, 1675, 1995, 2044], "worker": [7, 14, 21, 22, 25, 26, 29, 33, 34, 35, 36, 42, 44, 45, 49, 1675, 1964, 2003, 2013, 2014, 2020, 2021, 2022], "40": [7, 1204, 1323, 1405, 1450, 1689, 1690, 1691, 1714, 1715, 1724, 1727, 1898, 2041], "minut": [7, 10, 25, 2029], "netlifi": 7, "noplot": 7, "render": [7, 25, 1175, 2029, 2056], "notebook": 7, "rebuilt": [7, 22, 29], "deploi": [7, 12, 33, 42, 1960, 1998, 2004, 2012, 2038], "action": [7, 25, 31, 33, 36, 58, 999, 1033, 1990, 2007, 2012, 2014, 2022, 2056], "document": [8, 9, 10, 17, 21, 25, 46, 47, 49, 50, 58, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 869, 870, 871, 872, 953, 1001, 1002, 1004, 1055, 1098, 1195, 1199, 1200, 1231, 1238, 1250, 1365, 1366, 1381, 1392, 1430, 1431, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1488, 1671, 1672, 1692, 1701, 1710, 1730, 1784, 1811, 1828, 1923, 1959, 1961, 1963, 1964, 1968, 1976, 1977, 1978, 1979, 1981, 1986, 1990, 1992, 1994, 1999, 2003, 2004, 2009, 2011, 2012, 2015, 2016, 2017, 2020, 2024, 2028, 2032, 2035, 2040, 2045, 2047, 2050, 2053], "develop": [8, 9, 10, 14, 22, 25, 58, 1963, 1964, 1971, 1976, 1987, 1992, 1998, 1999, 2003, 2009, 2012, 2015, 2016, 2020, 2024, 2046, 2049, 2054], "meant": [8, 26, 42, 44, 49, 1716, 1986, 2020], "rule": [8, 9, 14, 25, 31, 58, 60, 68, 69, 81, 82, 83, 146, 856, 889, 952, 953, 1081, 1300, 1311, 1402, 1403, 1404, 1450, 1451, 1452, 1527, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1821, 1908, 1961, 1963, 1978, 1980, 1987, 1988, 1992, 1995, 1996, 2027, 2031, 2043, 2044], "concern": [8, 21, 49, 1977, 1990, 2009, 2052], "disagr": 8, "contribut": [8, 9, 27, 928, 1212, 1213, 1423, 1430, 1431, 1495, 1576, 1584, 1585, 1629, 1675, 1960, 1980, 1992, 1993, 2009, 2013], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": 8, "obsess": 8, "soumith": [8, 10], "goe": [8, 58, 1152, 1396, 1742, 1743, 1755, 1994, 2007, 2044, 2045, 2047], "depth": [8, 9, 46, 77, 775, 781, 1059, 1060, 1264, 1399, 1417, 1420, 1457, 1483, 1540, 1604, 1663, 1971, 1991, 1999, 2014, 2041, 2056], "primari": [8, 9, 25, 58, 77, 1260, 1965, 1971, 1972, 2024, 2043], "goal": [8, 39, 53, 58, 1352, 1971, 1987, 1991, 1996, 2022, 2046], "secondari": 8, "abil": [8, 46, 1817, 1971, 1998, 2007, 2012], "flexibl": [8, 22, 46, 49, 53, 1176, 1307, 1971, 1990, 1992, 1999, 2015, 2047], "abstract": [8, 16, 21, 22, 25, 26, 27, 31, 33, 42, 44, 46, 917, 918, 919, 920, 921, 924, 1177, 1697, 1964, 1968, 1972, 1991, 2015, 2020, 2039, 2047], "critic": [8, 42, 676, 1690, 1724, 1975, 1989, 1990, 2044, 2045, 2047], "futur": [8, 9, 12, 22, 25, 27, 30, 33, 42, 43, 46, 54, 58, 286, 317, 482, 509, 513, 553, 676, 683, 789, 811, 812, 813, 822, 857, 896, 899, 901, 902, 958, 959, 968, 980, 981, 982, 998, 999, 1001, 1002, 1004, 1033, 1034, 1041, 1042, 1044, 1196, 1247, 1250, 1253, 1260, 1261, 1264, 1269, 1281, 1292, 1294, 1295, 1296, 1299, 1312, 1340, 1341, 1352, 1362, 1427, 1488, 1595, 1618, 1619, 1620, 1667, 1675, 1680, 1724, 1725, 1730, 1745, 1785, 1801, 1882, 1886, 1910, 1960, 1961, 1962, 1963, 1964, 1965, 1970, 1971, 1973, 1975, 1979, 1980, 1989, 1990, 1992, 2004, 2007, 2009, 2011, 2012, 2013, 2014, 2015, 2017, 2020, 2024, 2026, 2030, 2031, 2032, 2034, 2042, 2044, 2049, 2056], "concret": [8, 31, 45, 47, 53, 58, 482, 781, 796, 820, 837, 968, 1172, 1186, 1187, 1540, 1632, 1663, 1961, 1964, 1990, 1992, 2001, 2042, 2043, 2047], "manner": [8, 25, 33, 509, 904, 906, 1979, 1981, 1988, 2011], "jump": [8, 556, 2027], "regim": 8, "ei": 8, "tradeoff": [8, 22, 46, 482, 2015, 2021, 2044, 2050], "temptat": 8, "impos": [8, 44, 55, 1825, 1977, 1986, 2027], "strict": [8, 27, 46, 47, 904, 905, 906, 907, 908, 909, 1155, 1162, 1175, 1250, 1266, 1267, 1488, 1725, 2012, 2029, 2031], "upfront": [8, 2042], "simplifi": [8, 22, 57, 1168, 1172, 1190, 1258, 1478, 1690, 1756, 1971, 1987, 1992, 1996, 1999, 2011, 2015, 2021, 2042], "worth": [8, 9, 21, 22, 45, 47, 1156, 1959, 2026, 2028, 2047, 2048], "friction": 8, "compel": 8, "narrow": [8, 1179, 1320, 1384, 1756, 1843, 1962, 1964, 1978, 2010, 2017, 2028, 2054], "subproblem": 8, "fragment": [8, 1023, 1055, 1968, 1990, 2054], "ecosystem": [8, 1998, 2000], "incomprehens": 8, "seamlessli": [8, 1980], "softwar": [8, 1286, 1287, 1314, 1923, 1990, 1997, 2035], "experi": [8, 9, 11, 22, 46, 55, 1167, 1517, 1647, 1675, 1935, 1971, 1992, 2029, 2041], "rich": [8, 1964], "denomin": [8, 683, 1402, 1403, 1404, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1527, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1756, 1789], "subset": [8, 21, 25, 29, 43, 47, 1262, 1756, 1961, 1963, 1964, 1992, 2006, 2009, 2018, 2049], "borrow": 8, "zen": 8, "implicit": [8, 46, 47, 82, 764, 765, 768, 769, 770, 1195, 1204, 1397, 1398, 1399, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1481, 1482, 1483, 1539, 1560, 1561, 1562, 1568, 1569, 1570, 1618, 1619, 1620, 1773, 1962, 1964, 1965, 1995, 2009, 2012, 2028, 2049], "concis": [8, 35, 2020], "interchang": [8, 31, 1753, 1907, 1963, 1997, 2007, 2035, 2045], "everydai": 8, "english": 8, "movement": [8, 2028, 2044], "worri": [8, 25, 2020], "placement": [8, 30, 33, 855, 1666, 2015, 2020, 2044], "favor": [8, 25, 781, 782, 783, 959, 970, 1067, 1071, 1250, 1305, 1308, 1340, 1341, 1446, 1488, 1541, 1542, 1663, 1664, 1665, 1667, 1679, 1785, 1886, 1910, 1954, 2047], "practition": 8, "debugg": [8, 25, 1255, 1996, 2044, 2054], "plug": 8, "ir": [8, 46, 58, 75, 77, 756, 1253, 1254, 1439, 1440, 1737, 1961, 1964, 2007, 2009, 2035, 2042, 2043, 2044, 2054], "classic": [8, 1987], "sort": [8, 29, 33, 58, 586, 605, 872, 873, 896, 898, 901, 1098, 1179, 1211, 1372, 1392, 1717, 1718, 1729, 1786, 1821, 1905, 1919, 1962, 1964, 1992, 1994, 2010, 2024, 2042, 2044, 2047, 2049], "distribut": [8, 11, 21, 22, 26, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 49, 57, 169, 254, 282, 373, 450, 477, 604, 676, 691, 692, 815, 931, 938, 1072, 1374, 1392, 1396, 1401, 1423, 1424, 1425, 1426, 1427, 1428, 1432, 1437, 1441, 1453, 1502, 1506, 1527, 1576, 1578, 1579, 1580, 1581, 1586, 1590, 1591, 1595, 1605, 1637, 1675, 1731, 1778, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1960, 1964, 1979, 1980, 1985, 1986, 1990, 2013, 2014, 2016, 2022, 2025, 2029, 2032], "tldr": 8, "resourc": [8, 14, 21, 33, 38, 42, 46, 58, 1964, 1977, 2001, 2024, 2044, 2051], "characterist": [8, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1887, 1993, 1999], "uniformli": [8, 31, 1796, 1797, 2031], "leak": [8, 889, 896, 899, 901, 1964, 1977, 1987], "smart": [8, 1992, 2012, 2020], "anywai": [8, 1987, 1995], "obviou": [8, 1168, 1994, 2022, 2043], "extens": [8, 14, 18, 25, 27, 31, 46, 59, 1322, 1323, 1817, 1836, 1960, 1971, 1980, 1986, 2004, 2007, 2012, 2024, 2043, 2044, 2054], "unavoid": 8, "latenc": [8, 39, 1972, 1989, 1990, 2044, 2051], "caveat": [8, 49, 1666, 1723, 1971, 1977, 1990, 1999, 2004, 2040, 2050, 2054], "valuabl": 8, "certainli": [8, 1971], "heterogen": [8, 1963], "cluster": [8, 25, 27, 41, 42, 43, 49, 1392, 2029], "focus": [8, 1963, 1964, 1992, 2054], "beaten": 8, "space": [8, 9, 21, 31, 768, 769, 770, 1081, 1116, 1118, 1120, 1121, 1127, 1134, 1204, 1213, 1266, 1267, 1321, 1337, 1392, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1453, 1464, 1465, 1466, 1467, 1468, 1469, 1482, 1483, 1539, 1568, 1569, 1570, 1571, 1572, 1573, 1605, 1908, 1962, 1972, 1981, 1987, 1996, 1999, 2004, 2026, 2056], "innov": 8, "growth": 8, "ultim": [8, 9, 14, 35, 44, 46, 2035], "evidenc": 8, "began": 8, "bind": [8, 14, 25, 47, 58, 1035, 1172, 1964, 1965, 1968, 1992, 2012], "monolith": 8, "deepli": 8, "integr": [8, 21, 36, 47, 53, 150, 938, 940, 941, 942, 943, 944, 945, 988, 1081, 1212, 1250, 1274, 1318, 1319, 1383, 1488, 1792, 1804, 1908, 1980, 1992, 1998, 1999, 2008, 2011, 2013, 2015, 2025, 2027, 2031, 2040], "numpi": [8, 21, 54, 444, 489, 689, 690, 695, 873, 875, 876, 896, 897, 901, 952, 1093, 1095, 1096, 1098, 1116, 1137, 1138, 1139, 1140, 1144, 1145, 1150, 1151, 1167, 1214, 1281, 1282, 1292, 1303, 1305, 1306, 1307, 1308, 1309, 1314, 1315, 1318, 1320, 1352, 1357, 1779, 1804, 1807, 1814, 1826, 1833, 1868, 1869, 1870, 1871, 1872, 1873, 1886, 1888, 1889, 1898, 1901, 1902, 1904, 1932, 1935, 1936, 1968, 1971, 1988, 1992, 1993, 2002, 2003, 2004, 2005, 2012, 2027, 2028, 2029, 2030, 2031, 2057], "scipi": [8, 956, 1297, 1298, 1634, 1779, 1841, 2012, 2023, 2025, 2029], "scikit": [8, 1604], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 2005], "year": [8, 2024], "rewrot": 8, "frontend": [8, 15, 47, 53, 58, 2044], "familiar": [8, 15, 47, 58, 999, 1033, 1054, 1961, 1987, 1993, 2012, 2015, 2021, 2022, 2041, 2044, 2053], "perhap": [8, 1993, 2047], "importantli": [8, 2047], "huge": [8, 1887, 1975], "scientif": [8, 1833], "pareto": [8, 1960], "close": [8, 15, 25, 42, 58, 60, 63, 68, 1037, 1239, 1286, 1287, 1313, 1314, 1340, 1401, 1519, 1537, 1566, 1752, 1886, 1910, 1975, 1987, 1992, 2002, 2009, 2012, 2015, 2020, 2029, 2031], "curv": [8, 2029], "torchdynamo": [8, 46, 60, 71, 676, 968, 970, 1960, 1970, 2009, 2035, 2040, 2042, 2044, 2046, 2047], "frame": [8, 46, 58, 968, 1247, 1882, 1925, 1994, 2006, 2007, 2029, 2035, 2041, 2042, 2044, 2045, 2054, 2056], "torch_funct": [8, 1992], "torch_dispatch": 8, "torch": [8, 9, 11, 15, 18, 19, 22, 26, 29, 33, 34, 35, 36, 39, 40, 42, 44, 45, 49, 52, 60, 61, 62, 63, 64, 65, 66, 67, 77, 78, 80, 82, 84, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 890, 891, 896, 901, 902, 911, 912, 913, 923, 924, 931, 932, 933, 934, 935, 989, 990, 999, 1000, 1001, 1002, 1004, 1005, 1020, 1022, 1033, 1102, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1248, 1249, 1250, 1265, 1362, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1666, 1675, 1676, 1677, 1678, 1692, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1716, 1728, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1792, 1861, 1940, 1941, 1944, 1946, 1960, 1961, 1962, 1963, 1972, 1978, 1979, 1986, 1987, 1988, 1989, 1991, 1994, 1995, 1996, 1998, 1999, 2000, 2001, 2003, 2005, 2007, 2008, 2013, 2015, 2016, 2017, 2020, 2021, 2022, 2028, 2039, 2040, 2041, 2042, 2043, 2046, 2047, 2050, 2053, 2054, 2056], "fx": [8, 12, 46, 47, 78, 676, 743, 811, 812, 813, 814, 856, 1156, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1960, 2006, 2007, 2016, 2017, 2040, 2041, 2042, 2043, 2044, 2047, 2053, 2054], "tracer": [8, 46, 1266, 2009, 2029, 2034, 2047], "functorch": [8, 47, 50, 55, 60, 63, 68, 69, 72, 2040], "anchor": [8, 58, 1536, 1537, 1660, 1661, 1962, 2053], "hackabl": 8, "todai": [8, 25, 47, 50, 55, 968, 2015, 2042], "evolv": [8, 1991, 2007, 2008], "ai": [8, 2009, 2025], "adopt": [9, 25, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 1682, 1683, 2007], "hierarch": [9, 2029], "pull": [9, 10, 15, 58, 146, 889, 1183, 2009, 2012, 2043], "request": [9, 10, 11, 25, 27, 44, 58, 685, 857, 875, 876, 924, 1055, 1323, 1345, 1355, 1610, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1959, 1980, 1986, 1987, 1989, 1990, 2009, 2012, 2020, 2021, 2022, 2024, 2025, 2042, 2056], "overseen": 9, "catch": [9, 35, 1961, 1987, 1993, 1996, 2045], "maker": 9, "strong": 9, "toward": [9, 60, 1093, 1212, 1213, 1323, 1388, 1675, 1764, 1805, 1813, 1814, 1995, 2013], "philosophi": [9, 53, 1960], "beyond": [9, 22, 1369, 1423, 1742, 1743, 1752, 1812, 1994, 1999, 2007, 2042], "encourag": [9, 33, 1980, 2015, 2024, 2031], "propos": [9, 1739, 1759, 1760, 1971, 1996, 2011, 2021], "review": [9, 10, 22, 2012, 2046, 2047], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 58], "codebas": [9, 1992], "strictli": [9, 21, 146, 187, 204, 482, 889, 952, 1213, 1250, 1254, 1488, 1987, 2025], "compani": 9, "bui": 9, "addition": [9, 21, 22, 25, 31, 46, 49, 146, 509, 613, 889, 924, 1156, 1160, 1161, 1254, 1314, 1392, 1450, 1451, 1452, 1863, 1994, 2032, 2056], "membership": [9, 33, 41, 42, 1965], "That": [9, 12, 33, 40, 43, 46, 51, 58, 980, 1247, 1321, 1337, 1923, 1973, 1992, 1993, 1994, 1995, 2004, 2012, 2020, 2044], "seat": 9, "reserv": [9, 39, 1055, 1965, 1990, 1999, 2056], "emploi": [9, 1755, 1999, 2012, 2013, 2036], "directori": [9, 14, 25, 27, 33, 40, 77, 1737, 1959, 1974, 1998, 2007, 2012, 2014, 2029, 2036, 2044, 2054], "procedur": [9, 31, 855, 1266, 1267, 1323, 1861, 2020, 2054], "disput": 9, "made": [9, 27, 29, 43, 46, 58, 77, 896, 899, 901, 916, 1250, 1488, 1533, 1535, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1802, 1963, 1971, 1987, 2005, 2012, 2029, 2031, 2039, 2042, 2047, 2054, 2055], "public": [9, 10, 59, 1156, 1992, 2055], "relev": [9, 26, 33, 42, 57, 676, 1314, 1460, 1965, 1986, 1987, 2007, 2012, 2015, 2036, 2044, 2045, 2046, 2047], "resolut": [9, 1500, 1501, 1558, 1593, 1635, 1636, 1908, 1965, 2012, 2057], "conclus": 9, "publicli": [9, 2055], "vision": [9, 1260, 1423, 1576, 1959, 1960, 2046], "roadmap": [9, 10], "parti": [9, 42, 1959, 1960, 1961, 1990, 1993, 1999, 2012], "triag": [9, 10], "meet": [9, 10, 12, 27, 41, 980, 1280, 1990, 2044], "Their": [9, 1090, 1992, 2043], "articul": 9, "cohes": 9, "negoti": [9, 2020], "contenti": 9, "broad": [9, 1999], "stakehold": 9, "power": [9, 12, 41, 1061, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1141, 1274, 1304, 1318, 1455, 1456, 1457, 1614, 1615, 1616, 1690, 1724, 1739, 1768, 1782, 1806, 1929, 1965, 1990, 2024], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 31, 49, 1352, 1964, 1966, 1986, 1987, 1995, 2011, 2015, 2027, 2035, 2038, 2042], "merit": 9, "demonstr": [9, 43, 46, 58, 60, 68, 69, 1407, 1961, 1999, 2004, 2007, 2013, 2020, 2036, 2041, 2044, 2046, 2052], "expertis": 9, "align": [9, 22, 46, 77, 756, 775, 781, 816, 822, 968, 1098, 1204, 1306, 1399, 1407, 1423, 1439, 1453, 1458, 1482, 1483, 1503, 1540, 1548, 1549, 1550, 1576, 1577, 1604, 1605, 1663, 1689, 1730, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1759, 1908, 1960, 1978, 1987, 1996, 2004, 2009, 2018, 2025], "continu": [9, 21, 25, 31, 45, 49, 58, 398, 604, 815, 905, 1204, 1286, 1287, 1314, 1406, 1407, 1675, 1965, 1971, 1987, 1995, 2004, 2007, 2014, 2032, 2040, 2041, 2044, 2047], "light": [9, 2029], "mainten": [9, 42, 43], "emeritu": [9, 10], "inact": [9, 1055, 1990, 2056], "contact": [9, 25], "item": [9, 21, 27, 60, 70, 71, 579, 580, 581, 585, 788, 789, 790, 810, 811, 812, 813, 935, 1250, 1423, 1488, 1489, 1498, 1695, 1833, 1959, 1961, 1962, 1963, 1964, 1972, 1978, 1990, 2009, 2010, 2012, 2020, 2029, 2030, 2039, 2042, 2043, 2047, 2049], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 21, 27, 31, 46, 58, 84, 398, 467, 541, 731, 853, 857, 859, 937, 939, 946, 959, 960, 961, 1114, 1115, 1116, 1117, 1118, 1126, 1128, 1132, 1134, 1152, 1162, 1163, 1166, 1172, 1208, 1209, 1242, 1245, 1250, 1253, 1280, 1281, 1292, 1294, 1305, 1308, 1309, 1323, 1343, 1358, 1378, 1383, 1384, 1401, 1415, 1416, 1417, 1422, 1423, 1424, 1431, 1441, 1448, 1488, 1494, 1524, 1531, 1536, 1537, 1558, 1566, 1585, 1590, 1593, 1660, 1661, 1669, 1670, 1812, 1814, 1841, 1864, 1866, 1911, 1912, 1913, 1914, 1922, 1959, 1962, 1978, 1979, 1992, 1993, 1996, 2007, 2009, 2010, 2013, 2019, 2024, 2025, 2031, 2044, 2055, 2057], "neg": [9, 11, 14, 21, 25, 31, 44, 58, 84, 437, 439, 454, 657, 658, 694, 751, 776, 939, 944, 983, 986, 1004, 1020, 1026, 1027, 1055, 1067, 1114, 1115, 1116, 1117, 1118, 1119, 1133, 1134, 1135, 1141, 1152, 1175, 1179, 1240, 1242, 1244, 1304, 1331, 1343, 1365, 1366, 1374, 1378, 1383, 1384, 1392, 1401, 1409, 1410, 1411, 1432, 1441, 1474, 1481, 1482, 1483, 1491, 1495, 1497, 1502, 1519, 1536, 1537, 1586, 1590, 1593, 1595, 1604, 1608, 1618, 1619, 1620, 1629, 1637, 1660, 1661, 1663, 1778, 1779, 1810, 1814, 1848, 1850, 1853, 1865, 1903, 1911, 1912, 1913, 1914, 1921, 1922, 1940, 1944, 1947, 1948, 1953, 1961, 1962, 1978, 1980, 1985, 1987, 1992, 1993, 2009, 2010, 2019, 2024, 2025, 2042, 2044, 2049], "interact": [9, 15, 21, 25, 58, 59, 858, 911, 1002, 1035, 1965, 1968, 1992, 2012, 2015, 2029, 2039, 2044, 2048, 2056], "final": [9, 25, 27, 29, 31, 33, 42, 46, 47, 49, 53, 54, 682, 685, 686, 756, 936, 954, 967, 1098, 1137, 1156, 1182, 1204, 1322, 1340, 1345, 1439, 1441, 1458, 1503, 1516, 1666, 1864, 1908, 1961, 1963, 1964, 1965, 1978, 1992, 1995, 1996, 1999, 2002, 2004, 2006, 2007, 2009, 2011, 2012, 2021, 2022, 2039, 2041, 2042, 2054], "declin": 9, "conflict": [9, 22, 27, 43, 46, 2012], "lack": [9, 11, 935, 1286, 1287, 1314], "unfit": 9, "conduct": [9, 1675, 1775, 1887, 2020, 2036], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 928, 1962, 2012], "letter": [9, 1098], "befit": 9, "candidaci": 9, "behind": [9, 25, 1960, 2004, 2021, 2043], "75": [9, 1212, 1476, 1593, 1611, 1739, 1786, 1962, 2025], "unforeseen": 9, "circumst": [9, 42, 968, 1179, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1644, 1990], "perman": [9, 58, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1713, 1987, 2022], "unavail": [9, 1963], "rank": [9, 21, 22, 25, 26, 27, 29, 31, 33, 40, 42, 43, 45, 47, 49, 60, 69, 1296, 1297, 1298, 1305, 1340, 1480, 1527, 1675, 1695, 1775, 1887, 1962, 1991, 1995, 2001, 2009, 2013, 2020, 2021, 2042, 2054], "elect": 9, "invit": [9, 1959], "convinc": 9, "approach": [9, 22, 25, 58, 83, 956, 1167, 1401, 1829, 1861, 1935, 1961, 1977, 1980, 1990, 1992, 1996, 2006, 2007, 2015, 2020, 2044], "interview": 9, "talk": [9, 44, 1968, 1998], "gather": [9, 25, 27, 42, 49, 509, 1898, 1923, 1962, 1992, 1994, 1995, 1998, 2010, 2012, 2049], "read": [9, 12, 18, 21, 25, 27, 32, 33, 35, 42, 43, 47, 49, 53, 58, 444, 922, 980, 1057, 1081, 1149, 1151, 1152, 1173, 1258, 1322, 1769, 1960, 1968, 1978, 1979, 1987, 1988, 1990, 1991, 1993, 1998, 2002, 2006, 2012, 2015, 2020, 2039, 2041, 2044, 2046, 2047], "attend": [9, 731, 1494, 1531], "confer": [9, 1441], "pipelin": [9, 58, 1960, 2020, 2044], "world": [9, 25, 29, 33, 40, 42, 43, 49, 1527, 1675, 1987, 2012, 2015, 2041, 2042], "cover": [9, 47, 50, 58, 60, 1072, 1098, 1481, 1618, 1619, 1620, 1964, 1966, 1979, 1987, 1992, 1995, 1996, 1998, 1999, 2020, 2041, 2047, 2048], "push": [9, 34, 1060, 1167, 1316, 1935, 2014, 2047], "codeown": 9, "notifi": [9, 26, 43, 2022], "expert": 9, "strongli": [9, 25, 33, 43, 1426, 1427, 1428, 1432, 1882, 1959], "failur": [9, 25, 31, 33, 34, 35, 39, 40, 41, 42, 45, 676, 915, 916, 968, 1156, 1172, 1266, 1267, 1369, 1964, 1970, 1977, 1995, 2007, 2013, 2020, 2022, 2031, 2044, 2047, 2054], "revert": [9, 31, 49, 1524, 1652, 2022], "substanti": [9, 22, 1990, 2039], "syntact": [9, 35, 58], "incompat": [9, 14, 54, 949, 1247, 1682, 1683, 1988, 2012], "establish": [9, 25, 42, 1987], "seri": [9, 58, 1407, 1450, 2003, 2009, 2039, 2050, 2055], "lf": 9, "llc": 9, "guidelin": [9, 1706, 2001, 2006, 2012, 2015, 2016], "trademark": 9, "www": [9, 1407, 1537, 2029], "lfproject": 9, "acknowledg": [9, 25, 1960, 2022, 2024], "copyright": [9, 2054], "holder": 9, "independ": [9, 21, 25, 42, 49, 57, 149, 150, 775, 781, 904, 905, 906, 907, 908, 909, 1004, 1204, 1213, 1309, 1425, 1426, 1427, 1428, 1432, 1579, 1580, 1581, 1586, 1603, 1604, 1663, 1691, 1727, 1785, 1940, 1960, 1961, 1986, 1987, 1990, 2004, 2012], "authorship": 9, "claus": [9, 1994], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 22, 31, 427, 475, 754, 795, 1195, 1271, 1287, 1290, 1309, 1351, 1381, 1453, 1494, 1547, 1689, 1773, 1775, 1785, 1786, 1887, 1961, 1962, 1996, 2003, 2009, 2024, 2025, 2043], "partli": [9, 1964], "domain": [9, 31, 35, 680, 822, 881, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1126, 1128, 1129, 1130, 1131, 1204, 1980, 2009, 2015], "absolut": [9, 11, 14, 58, 88, 677, 690, 915, 916, 1146, 1239, 1279, 1284, 1305, 1308, 1310, 1331, 1448, 1454, 1519, 1602, 1606, 1648, 1700, 1701, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1730, 1738, 1779, 1805, 1836, 1962, 1972, 1999, 2009, 2010, 2025, 2030, 2031, 2036], "health": 9, "success": [9, 27, 31, 33, 39, 58, 282, 1281, 1292, 1294, 1340, 1702, 1868, 1869, 1870, 1872, 1873, 1990, 1999, 2009, 2024, 2054], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 2009], "clearli": [9, 1971, 2012], "sponsorship": 9, "foundat": [9, 2007], "ptf": 9, "minor": [9, 1026, 1281, 1297, 2024], "committ": 9, "prior": [9, 22, 25, 27, 33, 75, 77, 896, 900, 901, 902, 973, 1323, 1533, 1535, 1644, 1706, 1988, 1990, 1992, 2011, 2015, 2039, 2044], "walkthrough": [9, 1986], "facebook": 9, "infrastructur": [9, 34, 2012, 2042], "employe": 9, "expand": [9, 31, 251, 489, 874, 896, 900, 901, 902, 915, 916, 951, 1303, 1304, 1352, 1494, 1538, 1638, 1918, 1959, 1962, 1970, 1978, 1979, 1988, 1990, 1992, 1993, 2007, 2009, 2010, 2012, 2013, 2028, 2049], "deliv": [9, 2014], "offici": [9, 25, 46, 83, 1392, 2015], "showcas": [9, 12, 1484, 1990, 2001], "whenev": [9, 46, 876, 1689, 1690, 1975, 1977, 1992, 2018, 2021, 2022, 2043, 2047, 2055], "fix": [10, 18, 21, 25, 31, 33, 42, 46, 51, 54, 58, 78, 79, 258, 791, 797, 924, 1156, 1264, 1296, 1430, 1431, 1506, 1584, 1585, 1604, 1675, 1961, 1962, 1975, 1985, 1986, 1990, 1994, 1995, 2001, 2005, 2007, 2009, 2010, 2011, 2039, 2044, 2052, 2054], "plu": [10, 14, 27, 904, 1152, 1297, 1995, 2024], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1323], "ezyang": [10, 1968, 2028], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1775, 1887], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": 10, "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 26, 27, 29, 31, 49, 924, 1743, 1744, 1746, 1752, 1756, 2011], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 2054], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 2041], "ansel": [10, 2041], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 12, 1381, 1786, 1990, 2044], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 31], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1323], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1204], "robi": 10, "robieta": 10, "xu": [10, 49], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 25, 49, 58, 1871, 1963, 1979, 2009, 2039, 2050], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1926], "sebastian": 10, "messmer": 10, "smessmer": 10, "aaron": 10, "bockov": 10, "abock": 10, "bowen": 10, "bao": [10, 2051], "bowenbao": 10, "thiago": 10, "crepaldi": 10, "thiagocrepaldi": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1392], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 789], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 2014, 2044, 2054], "johnson": 10, "peterjc123": [10, 2005], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "sunita": 10, "nadamp": 10, "snadamp": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 31], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "express": [11, 12, 27, 47, 50, 54, 55, 58, 60, 68, 69, 315, 980, 1168, 1172, 1178, 1180, 1181, 1182, 1183, 1190, 1248, 1251, 1727, 1882, 1965, 1973, 1980, 1987, 1992, 2015, 2042, 2044, 2054, 2055], "bj": 11, "j": [11, 25, 31, 309, 311, 317, 509, 511, 513, 688, 894, 904, 906, 977, 1098, 1114, 1115, 1122, 1128, 1132, 1133, 1192, 1247, 1250, 1286, 1287, 1298, 1314, 1323, 1330, 1338, 1340, 1345, 1426, 1427, 1428, 1432, 1488, 1491, 1579, 1580, 1581, 1586, 1779, 1786, 1865, 1882, 1886, 1932, 1963, 1985, 1987, 1992, 1996, 2004, 2029], "imaginari": [11, 307, 915, 977, 984, 1119, 1121, 1129, 1130, 1131, 1221, 1240, 1242, 1243, 1246, 1798, 1882, 1933, 1934, 1965, 1987, 1996, 2031], "satisfi": [11, 19, 22, 31, 47, 58, 613, 690, 756, 790, 905, 915, 916, 952, 1114, 1115, 1117, 1119, 1121, 1129, 1130, 1131, 1146, 1171, 1264, 1290, 1316, 1317, 1392, 1407, 1434, 1439, 1458, 1503, 1706, 1723, 1805, 1821, 1861, 1882, 1964, 1987, 1990, 1995, 1996, 2011, 2013, 2024, 2027, 2041], "equat": [11, 961, 1098, 1168, 1175, 1195, 1208, 1294, 1295, 1296, 1297, 1298, 1300, 1311, 1313, 1400, 1846, 1910, 1962, 1987, 1996, 2011, 2025], "frequent": [11, 27, 1392, 1960, 1990, 2001, 2002, 2004, 2024, 2035, 2036, 2046], "occur": [11, 21, 25, 35, 36, 42, 49, 54, 56, 78, 80, 192, 311, 891, 924, 968, 1058, 1098, 1172, 1247, 1253, 1264, 1294, 1407, 1527, 1577, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1756, 1963, 1975, 1979, 1986, 1987, 1990, 1994, 2002, 2007, 2009, 2014, 2020, 2022, 2028, 2031, 2042, 2044, 2046, 2050, 2052, 2054, 2055, 2056], "mathemat": [11, 58, 904, 905, 906, 907, 908, 909, 1146, 1204, 1400, 1402, 1403, 1404, 1450, 1451, 1452, 1453, 1527, 1612, 1651, 1675, 1730, 1805, 1863, 1864, 1964, 1987, 2002, 2025, 2032], "topic": [11, 46, 1998, 1999, 2041], "tradition": 11, "torchaudio": [11, 1960], "mimick": 11, "assembli": 11, "lapack": [11, 1195, 1281, 1292, 1293, 1294, 1296, 1299, 1312, 1785, 1886], "cubla": [11, 1016, 1923, 2003, 2039], "spectral": [11, 1270, 1286, 1314, 1690, 1714, 1724, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 2002], "fft": [11, 1960, 1990], "4621": 11, "0303j": 11, "2438": [11, 1296, 1584], "5874j": 11, "7706": 11, "1421j": 11, "2110": 11, "1918j": 11, "complex128": [11, 171, 977, 1141, 1151, 1229, 1250, 1280, 1281, 1286, 1287, 1288, 1289, 1290, 1291, 1415, 1416, 1417, 1488, 1568, 1569, 1570, 1736, 1779, 1826, 2026, 2027, 2030, 2031, 2044], "complex64": [11, 174, 960, 961, 977, 1115, 1117, 1118, 1123, 1124, 1151, 1229, 1282, 1305, 1308, 1415, 1416, 1417, 1568, 1569, 1570, 1736, 1779, 1826, 2026, 2027, 2030, 2031, 2044], "apart": [11, 1964, 1987], "linspac": [11, 939, 963, 1119, 1129, 1352, 1962, 1966, 2010], "logspac": [11, 1962, 1966, 2010], "arang": [11, 21, 25, 32, 509, 603, 687, 688, 689, 693, 695, 882, 883, 884, 950, 962, 966, 1081, 1096, 1114, 1118, 1126, 1132, 1134, 1138, 1139, 1140, 1141, 1148, 1149, 1214, 1271, 1272, 1276, 1279, 1303, 1306, 1307, 1320, 1384, 1409, 1410, 1509, 1510, 1511, 1512, 1513, 1540, 1541, 1542, 1631, 1730, 1731, 1774, 1782, 1786, 1801, 1808, 1813, 1833, 1866, 1874, 1885, 1902, 1903, 1905, 1906, 1908, 1936, 1962, 1971, 1980, 2004, 2010, 2025, 2029, 2030, 2039, 2046, 2049], "switch": [11, 21, 27, 52, 57, 58, 75, 1293, 1294, 1295, 1427, 1593, 1632, 1680, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1817, 1923, 1977, 1987, 1990, 1999, 2001, 2011, 2045], "view_as_r": [11, 1882, 1962, 2010, 2028], "6125": 11, "1681": 11, "3773": 11, "3487": 11, "0861": 11, "7981": 11, "1681j": 11, "3487j": 11, "7981j": 11, "mul_": [11, 60, 73, 1962, 1978, 1980, 2024], "2250": [11, 1307, 1730], "7546": 11, "1722": 11, "x1": [11, 46, 956, 1298, 1422, 1480, 1536, 1537, 1575, 1633, 1962, 2044, 2049], "3j": [11, 25, 694, 981, 982, 1809, 1810, 1826], "4j": [11, 25, 1836], "0000": [11, 31, 509, 861, 904, 906, 939, 959, 963, 984, 1079, 1085, 1086, 1087, 1112, 1113, 1116, 1118, 1119, 1125, 1126, 1129, 1134, 1146, 1147, 1148, 1204, 1210, 1213, 1217, 1276, 1279, 1280, 1281, 1293, 1294, 1297, 1302, 1303, 1307, 1309, 1321, 1337, 1379, 1430, 1431, 1540, 1541, 1543, 1544, 1584, 1585, 1730, 1779, 1785, 1790, 1791, 1792, 1801, 1805, 1806, 1830, 1836, 1838, 1839, 1841, 1844, 1845, 1846, 1847, 1864, 1910, 1911, 1913, 1938, 1971, 1980, 1990, 2024, 2025, 2030], "6569": [11, 1217], "5708": [11, 1082], "7854": 11, "complex_tensor": 11, "pt": [11, 22, 49, 1150, 1255, 1258, 1261, 1268, 1322, 1817, 1961, 1972, 1999, 2004, 2012, 2046], "conjug": [11, 326, 454, 688, 915, 960, 961, 981, 982, 1230, 1280, 1281, 1287, 1290, 1293, 1300, 1314, 1319, 1323, 1689, 1773, 1809, 1882, 1886, 1932, 1996, 2011, 2030], "wirting": [11, 915, 1996], "deriv": [11, 25, 49, 146, 734, 735, 736, 737, 738, 739, 777, 796, 820, 889, 910, 915, 916, 1162, 1166, 1204, 1247, 1308, 1340, 1535, 1666, 1960, 1963, 1992, 1993, 1996, 2020, 2024, 2025], "steepest": [11, 1987], "descent": [11, 31, 1739, 1755, 1759, 1760, 1987, 1999], "box": [11, 25, 43, 58, 1167, 1935, 1979, 1987, 1991, 2007, 2040, 2042, 2045, 2046], "fulli": [11, 14, 21, 25, 27, 29, 30, 46, 53, 58, 676, 1061, 1250, 1484, 1485, 1486, 1488, 1964, 1970, 1992, 2012, 2015, 2042, 2047, 2049], "quantiz": [11, 24, 58, 215, 322, 334, 468, 469, 470, 471, 472, 474, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 928, 1083, 1112, 1113, 1787, 1788, 1789, 1790, 1791, 1923, 1960, 2010, 2027, 2030, 2031, 2033, 2034], "pred": [12, 60, 63, 68, 69, 980, 1453, 1675, 2000, 2011, 2020, 2049], "union": [12, 14, 21, 27, 30, 33, 36, 40, 43, 46, 47, 49, 58, 980, 1170, 1262, 1322, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1435, 1436, 1455, 1456, 1457, 1481, 1482, 1483, 1488, 1531, 1533, 1535, 1538, 1551, 1695, 1736, 1817, 1926, 1962, 1963, 1964, 2004, 2007, 2009, 2012, 2026, 2029, 2031, 2034], "true_fn": [12, 47, 60, 63, 68, 69, 980], "false_fn": [12, 47, 60, 63, 68, 69, 980], "operand": [12, 60, 68, 69, 944, 980, 1098, 1964, 1965, 1992, 2024, 2027], "Its": [12, 25, 47, 58, 988, 1013, 1250, 1298, 1316, 1317, 1342, 1488, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1932, 1964, 1991], "uniqu": [12, 25, 33, 39, 42, 43, 44, 509, 513, 1241, 1286, 1287, 1291, 1297, 1298, 1300, 1309, 1311, 1313, 1314, 1351, 1358, 1863, 1886, 1920, 1959, 1961, 1970, 1974, 1992, 2012, 2014, 2020, 2021, 2022, 2024, 2029, 2039, 2056], "aibilti": 12, "predic": [12, 60, 65, 68, 69], "unlock": [12, 1971], "flexibilti": 12, "architectur": [12, 30, 58, 1025, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1423, 1531, 1576, 1830, 1990, 2002, 2015, 2024, 2038], "prototyp": [12, 18, 25, 46, 676, 904, 906, 910, 915, 916, 980, 1260, 1535, 1547, 1548, 1960, 1971, 1975, 1979, 1980, 1999, 2004, 2018, 2020, 2024, 2027, 2032, 2033, 2034, 2036], "classif": [12, 980, 1401, 1407, 1423, 1491, 1493, 1495, 1520, 1577, 1960, 1985, 2016], "co": [12, 46, 47, 55, 60, 64, 65, 68, 69, 70, 71, 73, 197, 631, 632, 679, 946, 968, 980, 1041, 1157, 1160, 1161, 1166, 1208, 1209, 1302, 1421, 1422, 1425, 1759, 1760, 1767, 1779, 1840, 1844, 1845, 1846, 1847, 1849, 1868, 1869, 1870, 1872, 1873, 1962, 1978, 2010, 2011, 2024, 2029, 2031, 2040, 2046, 2049], "sin": [12, 14, 46, 47, 54, 55, 60, 64, 65, 68, 69, 70, 71, 528, 665, 666, 877, 968, 980, 1041, 1157, 1159, 1160, 1161, 1163, 1166, 1209, 1302, 1352, 1779, 1841, 1847, 1962, 1968, 1978, 1987, 2010, 2024, 2025, 2029, 2040, 2044, 2046, 2049, 2052], "dynamicshapecondpred": 12, "dyn_shape_mod": 12, "eagerli": [12, 1030, 1036, 1990, 2042, 2044], "vari": [12, 46, 815, 1256, 1401, 1519, 1716, 1842, 1975, 1990, 2001, 2002, 2011, 2015, 2016, 2024, 2036, 2042, 2043, 2044, 2054, 2056], "inp2": 12, "assert": [12, 21, 22, 27, 31, 51, 53, 54, 55, 58, 60, 66, 69, 620, 918, 920, 921, 1157, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1171, 1172, 1248, 1253, 1254, 1260, 1644, 1736, 1935, 1963, 1965, 1968, 1992, 1993, 1999, 2004, 2012, 2015, 2031, 2042, 2044, 2053, 2054], "export": [12, 15, 18, 25, 32, 45, 60, 62, 65, 67, 68, 69, 74, 77, 676, 927, 980, 1001, 1169, 1175, 1253, 1255, 1256, 1262, 1268, 1717, 1718, 1737, 1738, 1960, 1961, 1963, 1964, 1992, 2010, 2014, 2020, 2035, 2042, 2052, 2053], "deploy": [12, 33, 42, 46, 1960, 1973, 2036, 2045], "dim_batch": 12, "dim": [12, 25, 30, 31, 46, 54, 55, 58, 60, 62, 68, 69, 108, 110, 111, 112, 114, 130, 131, 132, 180, 200, 203, 206, 207, 208, 209, 210, 211, 225, 229, 256, 260, 277, 308, 309, 310, 311, 312, 313, 317, 318, 350, 376, 388, 403, 405, 406, 407, 410, 425, 426, 427, 428, 432, 433, 449, 458, 466, 475, 487, 488, 490, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 533, 534, 537, 538, 540, 543, 548, 549, 551, 556, 561, 569, 574, 575, 579, 580, 581, 583, 584, 586, 601, 602, 605, 606, 607, 608, 611, 613, 689, 691, 692, 693, 695, 870, 871, 872, 906, 907, 909, 955, 962, 978, 980, 987, 998, 1013, 1015, 1077, 1078, 1079, 1080, 1081, 1090, 1096, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1137, 1138, 1157, 1167, 1169, 1192, 1204, 1214, 1222, 1223, 1224, 1225, 1227, 1272, 1282, 1283, 1303, 1307, 1317, 1319, 1320, 1330, 1338, 1348, 1350, 1351, 1353, 1356, 1358, 1372, 1379, 1380, 1381, 1382, 1383, 1384, 1392, 1422, 1423, 1424, 1427, 1431, 1433, 1438, 1453, 1459, 1478, 1494, 1495, 1496, 1521, 1523, 1535, 1537, 1538, 1575, 1576, 1592, 1595, 1604, 1612, 1618, 1619, 1620, 1629, 1630, 1632, 1634, 1638, 1644, 1650, 1651, 1659, 1675, 1690, 1691, 1697, 1701, 1703, 1710, 1711, 1724, 1727, 1730, 1776, 1783, 1786, 1806, 1807, 1812, 1813, 1818, 1819, 1820, 1823, 1824, 1854, 1857, 1858, 1862, 1865, 1867, 1874, 1877, 1879, 1880, 1881, 1882, 1885, 1898, 1902, 1903, 1904, 1905, 1908, 1909, 1917, 1918, 1919, 1920, 1922, 1930, 1931, 1935, 1936, 1960, 1961, 1962, 1968, 1979, 1980, 1993, 1994, 2004, 2007, 2009, 2010, 2024, 2025, 2027, 2033, 2036, 2042, 2049], "batch": [12, 22, 25, 31, 43, 45, 46, 49, 50, 51, 54, 55, 58, 60, 68, 69, 579, 580, 581, 583, 584, 682, 698, 699, 700, 701, 702, 703, 731, 756, 775, 781, 910, 915, 916, 936, 948, 949, 956, 959, 960, 961, 968, 998, 1086, 1088, 1098, 1160, 1161, 1167, 1247, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1323, 1331, 1340, 1341, 1345, 1400, 1401, 1402, 1403, 1404, 1407, 1415, 1416, 1421, 1423, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1439, 1440, 1441, 1442, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1458, 1459, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1479, 1480, 1491, 1492, 1493, 1494, 1495, 1497, 1500, 1501, 1502, 1503, 1505, 1519, 1520, 1527, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1539, 1558, 1563, 1565, 1566, 1576, 1577, 1579, 1580, 1581, 1584, 1585, 1586, 1587, 1590, 1603, 1604, 1605, 1629, 1637, 1644, 1662, 1663, 1666, 1675, 1689, 1716, 1717, 1719, 1720, 1722, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1760, 1761, 1767, 1773, 1775, 1785, 1789, 1868, 1869, 1870, 1872, 1873, 1877, 1882, 1886, 1887, 1907, 1910, 1911, 1913, 1932, 1935, 1960, 1978, 1979, 1980, 1986, 1990, 1993, 1994, 1999, 2001, 2013, 2015, 2020, 2024, 2029, 2030, 2036, 2042, 2043, 2044, 2048, 2052, 2054], "min": [12, 21, 25, 35, 42, 46, 58, 60, 70, 71, 112, 181, 182, 183, 184, 296, 691, 692, 693, 754, 766, 767, 776, 798, 815, 816, 817, 818, 821, 871, 963, 964, 1041, 1078, 1112, 1113, 1179, 1211, 1282, 1296, 1297, 1303, 1307, 1309, 1314, 1320, 1340, 1374, 1406, 1446, 1474, 1476, 1496, 1508, 1515, 1567, 1604, 1608, 1638, 1640, 1645, 1663, 1754, 1759, 1760, 1769, 1773, 1775, 1785, 1886, 1911, 1912, 1913, 1914, 1962, 1975, 1978, 2009, 2010, 2015, 2018, 2020, 2036, 2044, 2049, 2057], "ep": [12, 46, 708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 745, 747, 748, 749, 750, 791, 815, 816, 817, 818, 821, 822, 915, 916, 1260, 1336, 1388, 1402, 1403, 1404, 1422, 1441, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1497, 1502, 1527, 1531, 1533, 1535, 1536, 1563, 1575, 1590, 1594, 1595, 1603, 1607, 1630, 1633, 1637, 1660, 1690, 1724, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1756, 1769, 1789, 1962, 1992, 1996, 2025, 2049, 2057], "dynamic_shap": [12, 46, 2007, 2036, 2051], "graphmodul": [12, 46, 47, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 77, 855, 856, 857, 858, 2015, 2034, 2040, 2041, 2043, 2047, 2053, 2054], "arg0_1": [12, 46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "f32": [12, 46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73], "s0": [12, 46, 47, 60, 68, 69, 482, 1172, 2042, 2054], "sym_siz": [12, 47, 60, 68, 69, 2010, 2049], "sym": [12, 60, 68, 69, 70, 71, 1172, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849], "gt": [12, 60, 68, 69, 292, 1205, 1962, 1978, 1996, 2010, 2049], "true_graph_0": [12, 47, 60, 63, 68, 69], "false_graph_0": [12, 47, 60, 63, 68, 69], "symbol": [12, 14, 20, 46, 47, 59, 60, 69, 75, 76, 79, 80, 83, 620, 813, 970, 1168, 1169, 1172, 1173, 1174, 1176, 1177, 1179, 1183, 1265, 1319, 1458, 1503, 1910, 1932, 1960, 1964, 2007, 2042, 2043, 2044], "sub": [12, 25, 30, 35, 49, 57, 60, 63, 68, 69, 558, 810, 857, 858, 1262, 1266, 1267, 1348, 1351, 1353, 1500, 1501, 1531, 1532, 1534, 1806, 1884, 1902, 1919, 1959, 1961, 1962, 1978, 1980, 1987, 2001, 2009, 2010, 2024, 2027, 2049, 2053], "exmapl": 12, "dependet": 12, "datadependentcondpredicact": 12, "sum_1": [12, 58, 2040, 2041], "b8": [12, 60, 63, 68], "flatten": [12, 22, 46, 47, 49, 58, 60, 66, 870, 871, 1087, 1213, 1307, 1320, 1539, 1688, 1730, 1738, 1786, 1802, 1807, 1812, 1898, 1918, 1919, 1920, 1921, 1962, 1978, 1979, 1981, 1985, 2007, 2009, 2010, 2017, 2028, 2042], "closur": [12, 29, 60, 68, 69, 970, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1752, 1753, 1754, 1755, 1756, 2041, 2045], "flat": [12, 46, 1807, 1849, 1921, 1962, 1980, 1995, 2009, 2024], "_higher_order_op": 12, "condition": [12, 42, 912, 980], "constraint": [12, 25, 46, 49, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 790, 791, 905, 980, 1033, 1044, 1161, 1168, 1169, 1171, 1172, 1179, 1675, 1690, 1716, 1756, 1960, 1964, 1980, 1993, 1995, 1996, 1999, 2024, 2039, 2042], "true_branch": [12, 980], "false_branch": [12, 980], "consist": [12, 21, 25, 27, 31, 42, 43, 47, 58, 915, 959, 960, 961, 980, 1250, 1280, 1286, 1287, 1289, 1291, 1292, 1293, 1294, 1318, 1320, 1488, 1535, 1692, 1695, 1738, 1785, 1886, 1961, 1964, 1968, 1971, 1979, 1980, 1993, 1995, 1999, 2001, 2003, 2009, 2011, 2014, 2024, 2040, 2041, 2048, 2054], "possibli": [12, 21, 42, 46, 49, 980, 1181, 1182, 1250, 1266, 1293, 1298, 1488, 1675, 1961, 1968, 2003, 2012, 2043, 2056], "aka": [12, 25, 47, 60, 68, 69, 928, 980, 1448, 1602, 1987, 2007, 2027, 2042], "add_": [12, 25, 46, 52, 54, 484, 980, 1156, 1962, 1978, 1988, 2007, 2024], "tempor": [12, 980, 1402, 1404, 1407, 1527, 1540, 1577, 1604, 1663], "pytre": [12, 58, 60, 980, 1993], "parallel_info": [13, 1960, 1989], "cppextens": [14, 1960], "setuptool": 14, "bare": 14, "pypa": 14, "userguid": 14, "ext_modul": 14, "buildextens": [14, 1960], "extra_compile_arg": [14, 2005], "extra_link_flag": 14, "wl": 14, "lm": 14, "cmdclass": 14, "build_ext": 14, "cudaextens": [14, 1960], "cuda_extens": 14, "extension_kernel": 14, "cu": 14, "cxx": 14, "nvcc": [14, 1029, 2054], "o2": 14, "lcuda": 14, "arch": 14, "card": [14, 2005], "visibl": [14, 25, 27, 39, 47, 1023, 1068, 1489, 1490, 1498, 1499, 2042, 2045], "ptx": 14, "road": 14, "recompil": [14, 58, 676, 968, 1264, 1970, 1997, 2041, 2042, 2047, 2050], "cc": [14, 25, 1990], "newest": [14, 53, 2006], "torch_cuda_arch_list": 14, "6": [14, 18, 21, 22, 25, 31, 40, 58, 60, 61, 65, 66, 68, 69, 70, 71, 73, 309, 311, 313, 317, 397, 398, 467, 483, 495, 509, 513, 556, 603, 681, 682, 687, 693, 737, 738, 739, 741, 742, 754, 757, 759, 761, 904, 905, 907, 908, 909, 931, 939, 947, 952, 958, 962, 966, 988, 1010, 1057, 1061, 1075, 1076, 1077, 1081, 1082, 1093, 1096, 1097, 1114, 1122, 1127, 1128, 1132, 1133, 1135, 1137, 1138, 1141, 1148, 1204, 1214, 1216, 1217, 1239, 1261, 1272, 1276, 1287, 1303, 1307, 1308, 1309, 1316, 1317, 1321, 1323, 1352, 1382, 1383, 1384, 1397, 1408, 1409, 1410, 1411, 1414, 1419, 1422, 1430, 1431, 1440, 1441, 1442, 1444, 1445, 1484, 1485, 1489, 1497, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1531, 1532, 1534, 1536, 1539, 1545, 1560, 1590, 1597, 1598, 1631, 1633, 1640, 1666, 1718, 1719, 1721, 1723, 1729, 1730, 1731, 1740, 1754, 1774, 1775, 1778, 1785, 1786, 1792, 1793, 1796, 1802, 1812, 1813, 1817, 1821, 1833, 1854, 1858, 1863, 1866, 1868, 1869, 1874, 1885, 1887, 1888, 1889, 1897, 1902, 1903, 1904, 1905, 1906, 1908, 1911, 1913, 1917, 1921, 1923, 1936, 1937, 1961, 1964, 1965, 1971, 1980, 1985, 1987, 1992, 1993, 1995, 1999, 2004, 2009, 2020, 2021, 2024, 2025, 2027, 2030, 2031, 2041, 2044, 2049, 2051, 2054, 2055], "build_my_extens": 14, "7": [14, 21, 22, 25, 31, 58, 60, 65, 229, 256, 309, 311, 313, 317, 397, 398, 467, 509, 556, 603, 613, 681, 693, 741, 742, 907, 909, 944, 947, 952, 958, 960, 962, 966, 1080, 1081, 1093, 1095, 1096, 1099, 1114, 1137, 1138, 1141, 1144, 1148, 1204, 1214, 1227, 1272, 1276, 1286, 1291, 1293, 1294, 1297, 1298, 1302, 1303, 1307, 1314, 1382, 1383, 1384, 1390, 1391, 1394, 1395, 1397, 1408, 1409, 1410, 1430, 1476, 1484, 1485, 1509, 1510, 1511, 1512, 1513, 1536, 1539, 1560, 1632, 1682, 1683, 1708, 1713, 1723, 1730, 1745, 1792, 1796, 1802, 1812, 1813, 1814, 1821, 1829, 1833, 1836, 1838, 1849, 1850, 1858, 1866, 1868, 1869, 1874, 1886, 1888, 1889, 1897, 1902, 1903, 1906, 1908, 1917, 1921, 1932, 1936, 1961, 1965, 1971, 1979, 1980, 1988, 1990, 1992, 2002, 2004, 2009, 2010, 2015, 2024, 2027, 2028, 2029, 2030, 2031, 2046, 2051], "older": [14, 1990, 2004, 2012], "modestli": [14, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756], "imag": [14, 21, 737, 738, 739, 857, 858, 977, 1390, 1394, 1395, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1434, 1435, 1436, 1451, 1460, 1495, 1500, 1501, 1522, 1539, 1541, 1542, 1558, 1569, 1570, 1572, 1573, 1587, 1588, 1593, 1604, 1662, 1663, 1810, 1960, 1962, 1980, 1996, 2010, 2013, 2015, 2028, 2029, 2042, 2044, 2045, 2049], "11": [14, 25, 317, 509, 676, 958, 962, 1044, 1096, 1214, 1271, 1307, 1321, 1337, 1392, 1408, 1436, 1485, 1589, 1730, 1731, 1737, 1858, 1902, 1936, 1961, 1965, 1971, 1979, 1990, 1992, 2004, 2005, 2009, 2010, 2024, 2025, 2054], "pars": [14, 25, 45, 925, 1964, 2012, 2020], "window": [14, 21, 25, 58, 347, 552, 937, 946, 1208, 1209, 1247, 1270, 1397, 1398, 1399, 1435, 1436, 1455, 1456, 1457, 1481, 1482, 1483, 1484, 1485, 1486, 1560, 1588, 1589, 1618, 1619, 1620, 1790, 1791, 1882, 1960, 1962, 1975, 1990, 2042], "workaround": [14, 21, 46, 58, 1254, 1959, 2003, 2009, 2015, 2044], "pure": [14, 15, 46, 54, 1253, 1961, 1992], "sigmoidalphablendforwardcuda": 14, "69460": 14, "facebookresearch": 14, "pytorch3d": 14, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 14, "relocat": 14, "link": [14, 15, 31, 58, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1481, 1482, 1483, 1539, 1595, 1979, 1998, 1999, 2024], "rdc": 14, "dc": 14, "anymor": [14, 25, 49], "dlto": 14, "dlink": 14, "protent": 14, "perf": [14, 676, 2015, 2047, 2048], "lib": [14, 1968, 2005], "nvshmem": 14, "ninja": [14, 2005], "dlink_librari": 14, "dlink_lib": 14, "std": [14, 33, 40, 84, 373, 450, 1112, 1113, 1144, 1145, 1146, 1731, 1779, 1805, 1843, 1848, 1881, 1920, 1962, 1978, 1985, 1990, 1998, 2005, 2010, 2036, 2049], "17": [14, 25, 681, 1247, 1303, 1485, 1858, 1961, 2009, 2010, 2024, 2036, 2041, 2044, 2054], "mix": [14, 22, 31, 46, 49, 1044, 1675, 1960, 1987, 1989, 2015, 2024, 2041, 2042, 2044], "use_ninja": 14, "greatli": [14, 58, 1990, 2042], "fallback": [14, 25, 42, 46, 52, 83, 1185, 1264, 1314, 1986, 1990, 2004, 2039, 2044, 2054], "distutil": 14, "max_job": 14, "extra_cflag": 14, "extra_cuda_cflag": 14, "extra_ldflag": 14, "extra_include_path": 14, "build_directori": 14, "with_cuda": [14, 2005], "is_python_modul": 14, "is_standalon": 14, "keep_intermedi": 14, "torch_extens": 14, "temporari": [14, 58, 819, 822, 1676, 1987, 1994, 2046], "torch_extensions_dir": 14, "subfold": [14, 2054], "o3": 14, "cuh": 14, "Such": [14, 21, 22, 46, 57, 1929, 2024], "lib64": 14, "cudart": [14, 2005], "fine": [14, 25, 27, 29, 32, 46, 482, 854, 857, 1149, 1266, 1644, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1959, 1977, 1987, 1990, 1992, 2009, 2012, 2013, 2015, 2024, 2035, 2046, 2054], "cuda_hom": 14, "safest": 14, "pybind11": [14, 15, 1963], "linker": 14, "workspac": [14, 968], "header": [14, 40, 2004, 2005, 2031], "automat": [14, 22, 25, 27, 42, 43, 46, 58, 82, 146, 585, 885, 887, 901, 902, 922, 968, 1035, 1044, 1213, 1260, 1266, 1352, 1534, 1644, 1676, 1804, 1833, 1924, 1959, 1960, 1963, 1964, 1973, 1974, 1978, 1979, 1987, 1988, 1990, 1992, 1999, 2001, 2009, 2012, 2013, 2015, 2016, 2020, 2029, 2030, 2042, 2043, 2044, 2046, 2054], "construct": [14, 15, 21, 25, 27, 29, 31, 42, 46, 47, 49, 51, 53, 54, 58, 60, 65, 66, 70, 71, 146, 444, 788, 789, 820, 874, 875, 889, 910, 977, 1085, 1101, 1167, 1213, 1250, 1262, 1266, 1267, 1274, 1281, 1321, 1322, 1337, 1352, 1430, 1431, 1488, 1548, 1549, 1550, 1584, 1666, 1675, 1677, 1678, 1716, 1723, 1775, 1779, 1826, 1861, 1868, 1869, 1870, 1871, 1872, 1873, 1887, 1901, 1904, 1935, 1960, 1961, 1968, 1972, 1975, 1990, 1991, 1995, 1999, 2001, 2004, 2007, 2012, 2015, 2020, 2022, 2027, 2029, 2030, 2031, 2036, 2044, 2047], "plain": [14, 1401, 1489, 1498, 1689, 1870, 1992, 2024, 2043], "standalon": [14, 41, 42, 43, 813, 1262, 1266, 1961, 2048], "torch_lib_path": 14, "load_inlin": [14, 1960], "cpp_sourc": 14, "cuda_sourc": 14, "with_pytorch_error_handl": 14, "use_pch": 14, "behav": [14, 15, 25, 57, 58, 309, 317, 489, 511, 513, 837, 1166, 1173, 1182, 1266, 1484, 1485, 1486, 1671, 1672, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1963, 1964, 1971, 1987, 1992, 1993, 1999, 2003, 2012, 2020, 2024], "exactli": [14, 22, 25, 31, 44, 47, 915, 916, 962, 1011, 1015, 1098, 1144, 1145, 1177, 1247, 1250, 1292, 1431, 1434, 1435, 1436, 1488, 1516, 1519, 1585, 1595, 1675, 1730, 1738, 1829, 1971, 1972, 1978, 1987, 1990, 1991, 1992, 1995, 1996, 1997, 2009, 2012, 2013, 2039, 2047], "filenam": [14, 21, 46, 58, 1150, 1249, 1258, 1261, 1959, 1962, 1974, 1987, 2012, 2026, 2029, 2046, 2056], "typic": [14, 21, 22, 25, 31, 32, 33, 35, 42, 43, 44, 47, 49, 58, 79, 482, 988, 999, 1141, 1149, 1183, 1250, 1271, 1274, 1322, 1421, 1447, 1488, 1666, 1675, 1742, 1743, 1755, 1829, 1841, 1868, 1869, 1870, 1872, 1873, 1959, 1960, 1961, 1964, 1970, 1972, 1987, 1989, 1990, 2002, 2003, 2004, 2009, 2011, 2013, 2015, 2020, 2028, 2038, 2040, 2042, 2043, 2052, 2054, 2056, 2057], "inlin": [14, 46, 57, 60, 62, 66, 70, 71, 1041, 1250, 1254, 1266, 1989, 2044], "concaten": [14, 21, 25, 906, 955, 966, 1013, 1097, 1216, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1431, 1458, 1577, 1585, 1680, 1695, 1879, 1937, 1962, 1965, 2009, 2010, 2024], "furthermor": [14, 40, 53, 1286, 1287, 1314, 1340, 1425, 1978, 1979, 1987, 2003, 2018, 2020], "cuda_runtim": 14, "se": 14, "macro": [14, 33, 1997], "pybind": 14, "_safe_foo": 14, "redirect": [14, 33, 40, 2032], "obscur": 14, "sin_add": 14, "inline_extens": 14, "include_path": [14, 1960], "get_compiler_abi_compatibility_and_vers": [14, 1960], "abi": [14, 15], "alongsid": [14, 1250, 1488, 1992, 2047], "shell": 14, "torchvers": 14, "verify_ninja_avail": [14, 1960], "is_ninja_avail": [14, 1960], "embed": [15, 30, 47, 58, 731, 742, 894, 1089, 1392, 1421, 1431, 1447, 1460, 1494, 1537, 1585, 1644, 1756, 1824, 1962, 1989, 1995, 2010, 2014, 2015, 2017, 2020, 2024, 2029, 2049], "simpl": [15, 18, 22, 35, 42, 46, 53, 55, 58, 484, 988, 1055, 1157, 1165, 1166, 1167, 1250, 1254, 1262, 1402, 1403, 1404, 1430, 1461, 1462, 1463, 1488, 1527, 1584, 1841, 1935, 1959, 1961, 1965, 1980, 1989, 1990, 1991, 1992, 1994, 1996, 1998, 2009, 2012, 2020, 2024, 2041, 2043, 2046, 2047], "modif": [15, 49, 58, 77, 217, 776, 896, 897, 901, 1151, 1152, 1250, 1488, 1675, 1987, 1992, 1999, 2012, 2015, 2044], "submodul": [15, 27, 30, 46, 47, 49, 58, 76, 787, 793, 810, 834, 835, 836, 854, 857, 858, 1165, 1250, 1254, 1256, 1261, 1262, 1424, 1488, 1489, 1490, 1516, 1673, 1960, 1961, 1963, 1964, 1973, 1999, 2004, 2012, 2015, 2020, 2034, 2040, 2053], "preprocess": [15, 46, 75, 492, 1250], "augment": [15, 1965, 2031], "walk": [15, 58, 1968, 1992, 2012, 2021, 2022, 2028, 2054], "interfac": [15, 22, 27, 32, 34, 39, 42, 59, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 790, 1152, 1666, 1828, 1882, 1923, 1964, 1975, 1976, 1992, 1998, 2011, 2018, 2024, 2029, 2049], "opencv": [15, 1593, 1604], "struct": [15, 1166, 1167, 1935, 1973, 1998], "explain": [15, 25, 46, 1756, 1829, 1959, 1964, 1986, 1990, 1993, 1995, 2001, 2024, 2044, 2054], "reshap": [15, 25, 31, 494, 495, 509, 540, 613, 688, 966, 1081, 1096, 1097, 1137, 1214, 1271, 1303, 1307, 1316, 1317, 1320, 1384, 1409, 1410, 1434, 1509, 1510, 1511, 1512, 1513, 1539, 1690, 1724, 1730, 1866, 1867, 1874, 1902, 1903, 1908, 1936, 1937, 1962, 1971, 1979, 1980, 2009, 2010, 2017, 2028, 2029, 2049], "classat_1_1_tensor": 15, "tensor_index": 15, "crucial": [15, 2036, 2046, 2047, 2048], "cpp_autograd": 15, "workflow": [15, 1959, 1992, 2015, 2016, 2032, 2035, 2042, 2043, 2048, 2050, 2051], "undesir": [15, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1644, 1882, 1992], "overview": [15, 25, 39, 1547, 1675, 1960, 1971, 1977, 1987, 1996, 1999, 2008, 2013, 2015, 2020, 2035, 2037, 2041], "cpp_frontend": 15, "library_root": 15, "libtorch": [15, 2036], "linux": [15, 25, 1959], "gcc": 15, "pre": [15, 25, 29, 46, 49, 58, 910, 921, 1250, 1488, 1670, 1672, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1708, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1758, 1764, 1959, 1961, 1964, 1973, 1987, 1989, 1990, 1999, 2007, 2009, 2013, 2030, 2043, 2044, 2050, 2054], "cxx11": 15, "facilit": [16, 26, 31, 54, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1002, 1086, 1682, 1683, 1826, 1959, 1961, 1964, 2003], "earli": [18, 22, 25, 33, 57, 482, 1426, 1427, 1428, 1432, 1960, 2015, 2016, 2033, 2034, 2043, 2047], "introduc": [18, 31, 54, 756, 1172, 1179, 1181, 1182, 1190, 1323, 1439, 1458, 1503, 1604, 1812, 1959, 1964, 1988, 1991, 1992, 2000, 2009, 2012, 2013, 2014, 2020, 2024, 2030, 2035, 2044, 2050, 2054, 2059], "race": [18, 25, 482, 1987], "enable_cuda_sanit": 18, "torch_cuda_sanit": 18, "concurr": [18, 25, 29, 1989, 1990, 1995, 2001, 2020, 2021], "uniniti": [18, 24, 441, 495, 1099, 1100, 1666, 1677, 1678, 1723, 1923, 1972, 1980, 2010], "overwrit": [18, 21, 25, 58, 1489, 1498, 1964, 1987, 2039], "commandlin": 18, "example_error": 18, "csan": 18, "pointer": [18, 135, 922, 1016, 1504, 1990, 1991, 1998, 2020, 2022, 2043], "139719969079296": 18, "94646435460352": 18, "_sanit": 18, "364": 18, "_handle_kernel_launch": 18, "stack_trac": [18, 47, 58], "stacksummari": 18, "extract": [18, 58, 832, 960, 961, 1430, 1434, 1539, 1584, 1662, 2007, 2020, 2034, 2038, 2040, 2041, 2044, 2045], "10000": [18, 22, 690, 1767, 1814, 1994, 1999, 2024, 2029, 2046], "420": 18, "_handle_memory_alloc": 18, "incorrectli": [18, 49, 1002, 1143, 2045], "id": [18, 21, 25, 27, 29, 33, 41, 42, 43, 49, 58, 770, 820, 931, 999, 1034, 1527, 1620, 1659, 1675, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1964, 1998, 2009, 2010, 2012, 2019, 2020, 2021, 2026, 2047, 2051, 2054], "faulti": [18, 25], "schema": [18, 25, 27, 47, 81, 1961, 1962, 1964, 1968, 2007, 2009, 2049, 2053], "current_stream": [18, 1001, 1960, 1990], "wait_stream": [18, 25, 482, 1002, 1004, 1990], "default_stream": [18, 25, 1960, 1990], "begin": [18, 21, 22, 25, 26, 34, 42, 49, 58, 492, 676, 756, 780, 816, 817, 861, 937, 973, 983, 999, 1047, 1049, 1118, 1204, 1210, 1271, 1306, 1318, 1399, 1400, 1401, 1409, 1410, 1411, 1421, 1423, 1429, 1439, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1454, 1458, 1459, 1474, 1479, 1482, 1483, 1495, 1496, 1503, 1506, 1519, 1525, 1530, 1537, 1576, 1597, 1598, 1675, 1689, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1759, 1761, 1767, 1833, 1836, 1839, 1882, 1908, 1919, 1938, 1964, 1986, 1987, 1990, 1992, 1995, 1996, 1998, 2003, 2009, 2011, 2018, 2025, 2039, 2044, 2054], "suspect": [18, 1756, 1990, 2054], "cudnn": [19, 20, 756, 1260, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1439, 1458, 1503, 1504, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1644, 1682, 1683, 1829, 1960, 1962, 1990, 2002, 2003, 2048], "float16": [19, 22, 27, 49, 293, 682, 685, 756, 819, 822, 830, 846, 847, 854, 936, 948, 1151, 1232, 1250, 1345, 1355, 1415, 1416, 1417, 1418, 1419, 1420, 1439, 1440, 1458, 1459, 1475, 1488, 1503, 1547, 1604, 1644, 1682, 1683, 1742, 1743, 1755, 1814, 1926, 1986, 1999, 2015, 2017, 2024, 2026, 2027, 2030, 2031, 2057], "v100": [19, 756, 1439, 1458, 1503, 1990], "packedsequ": [19, 756, 1439, 1458, 1503, 1717, 1718, 1719, 1721], "rnn": [20, 730, 756, 757, 758, 759, 761, 854, 1439, 1440, 1458, 1459, 1504, 1505, 1676, 1693, 1716, 1966, 1994, 1999, 2017, 2029], "enforc": [20, 22, 57, 791, 886, 901, 1250, 1458, 1488, 1503, 1964, 1999, 2028], "cuda_launch_block": [20, 1458, 1503, 1990], "colon": [20, 1458, 1503, 2020], "cublas_workspace_config": [20, 1458, 1503, 1923, 1990, 2003], "16": [20, 25, 46, 317, 613, 734, 735, 736, 737, 738, 739, 768, 1096, 1114, 1141, 1204, 1214, 1250, 1262, 1274, 1280, 1286, 1287, 1291, 1307, 1384, 1396, 1398, 1399, 1407, 1408, 1411, 1414, 1415, 1416, 1417, 1419, 1420, 1425, 1426, 1427, 1428, 1432, 1435, 1436, 1455, 1456, 1457, 1458, 1476, 1481, 1482, 1483, 1485, 1486, 1488, 1495, 1503, 1514, 1531, 1545, 1568, 1570, 1571, 1573, 1577, 1588, 1589, 1733, 1782, 1829, 1858, 1923, 1932, 1936, 1961, 1965, 1985, 1990, 1999, 2002, 2004, 2009, 2010, 2013, 2020, 2024, 2025, 2027, 2029, 2030, 2036, 2041, 2044, 2054], "4096": [20, 1458, 1503, 1923, 1990, 2009], "heart": [21, 2047], "dataload": [21, 492, 1675, 1760, 1761, 1767, 1990, 1994, 2001, 2005, 2011, 2029], "batch_siz": [21, 31, 53, 55, 888, 901, 902, 1157, 1165, 1167, 1494, 1503, 1716, 1718, 1719, 1721, 1935, 1962, 1993, 1994, 2003, 2009, 2029], "shuffl": [21, 1960, 2029], "batch_sampl": 21, "num_work": [21, 33, 2003, 2005], "drop_last": 21, "timeout": [21, 25, 42, 1977, 2020], "worker_init_fn": [21, 1994, 2003], "prefetch_factor": 21, "persistent_work": 21, "__getitem__": [21, 1923], "__len__": [21, 58, 1962], "protocol": [21, 27, 32, 42, 44, 876, 1149, 1152, 1817, 1992, 2005, 2007, 2009, 2020, 2055], "sampl": [21, 27, 31, 46, 50, 55, 58, 84, 149, 150, 254, 282, 373, 450, 477, 604, 775, 938, 988, 1010, 1044, 1057, 1061, 1075, 1076, 1116, 1134, 1157, 1167, 1204, 1247, 1267, 1340, 1374, 1396, 1400, 1401, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1441, 1447, 1450, 1451, 1452, 1453, 1454, 1473, 1475, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1506, 1519, 1520, 1527, 1536, 1558, 1565, 1566, 1576, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1590, 1593, 1595, 1603, 1604, 1605, 1629, 1637, 1675, 1690, 1731, 1760, 1775, 1778, 1792, 1794, 1796, 1798, 1799, 1800, 1841, 1864, 1880, 1881, 1882, 1930, 1931, 1935, 1960, 1975, 1985, 1986, 1990, 1998, 1999, 2012, 2015, 2016, 2029, 2054], "idx": [21, 58, 896, 898, 901, 1250, 1256, 1392, 1430, 1488, 1690, 1919, 1962, 1979], "th": [21, 31, 150, 282, 309, 311, 317, 756, 904, 906, 938, 958, 1085, 1090, 1225, 1247, 1272, 1290, 1298, 1304, 1340, 1374, 1426, 1427, 1428, 1432, 1439, 1447, 1458, 1503, 1579, 1580, 1581, 1586, 1786, 1882, 1921, 1992, 2005, 2025, 2027, 2056], "iterabledataset": [21, 1998], "__iter__": [21, 1965], "suitabl": [21, 31, 482, 952, 1270, 1756, 1821, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 2002, 2014, 2016, 2029, 2045], "improb": 21, "fetch": [21, 57, 58, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1736, 2020], "stream": [21, 25, 33, 40, 49, 57, 146, 482, 889, 910, 990, 992, 997, 999, 1001, 1002, 1005, 1006, 1007, 1015, 1018, 1019, 1033, 1039, 1071, 1074, 1362, 1365, 1366, 1371, 1807, 1941, 1943, 1954, 1956, 1960, 1962, 1964, 1995, 2007, 2020, 2044, 2056], "databas": 21, "remot": [21, 25, 29, 33, 1675, 2013, 2020, 2021], "real": [21, 31, 58, 80, 682, 683, 684, 685, 686, 688, 694, 915, 936, 960, 961, 977, 984, 1044, 1114, 1115, 1117, 1119, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1172, 1185, 1240, 1242, 1243, 1246, 1247, 1271, 1280, 1281, 1282, 1286, 1287, 1288, 1289, 1290, 1293, 1294, 1295, 1300, 1303, 1305, 1307, 1308, 1309, 1310, 1314, 1315, 1319, 1320, 1321, 1331, 1337, 1454, 1497, 1500, 1501, 1537, 1689, 1745, 1798, 1882, 1886, 1932, 1933, 1934, 1959, 1960, 1962, 1964, 1972, 1987, 1990, 2007, 2010, 2012, 2015, 2020, 2022, 2028, 2030, 2031, 2040, 2042, 2043, 2046, 2047, 2049, 2055], "replica": [21, 22, 25, 29, 40, 1424, 1675, 1991], "duplic": [21, 311, 315, 467, 540, 937, 946, 967, 1172, 1208, 1209, 1250, 1488, 1919, 1920, 2009, 2024], "yield": [21, 22, 46, 49, 58, 1086, 1088, 1250, 1297, 1298, 1488, 1938, 1964, 1965, 1971, 2013, 2015, 2025, 2044], "stochast": [21, 31, 1435, 1436, 1588, 1589, 1739, 1741, 1742, 1744, 1755, 1759, 1760, 1999, 2011], "decent": 21, "randomli": [21, 741, 742, 752, 760, 916, 1396, 1425, 1426, 1427, 1428, 1432, 1506, 1578, 1579, 1580, 1581, 1586, 1703, 1980, 1998, 1999], "permut": [21, 46, 60, 69, 1098, 1297, 1298, 1317, 1340, 1342, 1682, 1683, 1800, 1960, 1962, 1979, 2010, 2017, 2028, 2030, 2049], "mini": [21, 775, 781, 1402, 1403, 1404, 1430, 1431, 1442, 1447, 1450, 1451, 1452, 1460, 1480, 1491, 1493, 1527, 1536, 1584, 1585, 1604, 1663, 2013], "neither": [21, 25, 791, 895, 896, 899, 901, 1081, 1141, 1494, 1535, 1730, 1908, 1992, 2002, 2020], "nor": [21, 25, 33, 49, 791, 896, 899, 901, 1172, 1286, 1287, 1314, 1494, 1535, 1675, 1730, 1784, 1886, 1992, 2009, 2039, 2043], "notion": [21, 915, 1402, 1403, 1404, 1450, 1451, 1452, 1527, 2044, 2047], "collat": 21, "minibatch": [21, 764, 765, 768, 769, 770, 1340, 1392, 1400, 1401, 1421, 1423, 1447, 1453, 1454, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1536, 1540, 1560, 1561, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1605, 1618, 1619, 1620, 1629, 1637, 2013], "loader": [21, 2011], "essenti": [21, 25, 33, 58, 1340, 1979, 1990, 2005, 2024, 2036, 2039], "dummi": [21, 29, 1968, 1987, 1992, 2007, 2054, 2055], "infinit": [21, 1242, 1323, 1400, 1407, 1577, 1779, 1992, 2002, 2020, 2043], "drop": [21, 53, 55, 58, 1044, 1255, 1309, 1314, 1396, 1725, 1829, 1882, 1961, 1979, 2001, 2047, 2056], "roughli": [21, 1453, 1991, 2052, 2053], "dataset_it": 21, "pad": [21, 22, 46, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 731, 734, 735, 736, 737, 738, 739, 764, 765, 768, 769, 770, 775, 778, 779, 781, 968, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1247, 1397, 1398, 1399, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1430, 1431, 1434, 1464, 1465, 1466, 1467, 1468, 1469, 1481, 1482, 1483, 1484, 1485, 1486, 1491, 1494, 1509, 1510, 1511, 1512, 1513, 1514, 1534, 1535, 1539, 1543, 1544, 1545, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1584, 1585, 1587, 1593, 1604, 1618, 1619, 1620, 1621, 1622, 1623, 1662, 1663, 1717, 1719, 1720, 1722, 1790, 1791, 1882, 1960, 1962, 1980, 1994, 2004, 2009, 2010, 2015, 2029, 2042, 2049], "length": [21, 22, 25, 27, 30, 31, 256, 309, 311, 317, 347, 429, 430, 579, 580, 581, 731, 756, 810, 889, 910, 932, 967, 1015, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1152, 1167, 1225, 1247, 1266, 1270, 1383, 1384, 1402, 1407, 1415, 1424, 1431, 1434, 1439, 1455, 1458, 1494, 1503, 1531, 1539, 1548, 1568, 1569, 1570, 1577, 1585, 1604, 1644, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1792, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1866, 1868, 1869, 1870, 1872, 1873, 1882, 1908, 1935, 1962, 1964, 1971, 1979, 1980, 1988, 1994, 2024, 2031, 2042, 2044, 2049, 2054], "certain": [21, 22, 25, 39, 40, 46, 54, 57, 58, 80, 682, 685, 731, 911, 936, 948, 1023, 1086, 1247, 1250, 1258, 1322, 1345, 1355, 1415, 1416, 1417, 1418, 1419, 1420, 1440, 1459, 1475, 1488, 1494, 1539, 1594, 1605, 1607, 1729, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1964, 1968, 1971, 1979, 1987, 1988, 1990, 1992, 1998, 1999, 2002, 2004, 2009, 2013, 2014, 2020, 2021, 2024, 2043, 2044, 2047, 2048, 2054], "cheaper": [21, 57], "bulk": [21, 2043], "arrai": [21, 25, 33, 444, 756, 816, 817, 875, 876, 939, 957, 984, 988, 1098, 1142, 1151, 1152, 1160, 1161, 1322, 1352, 1434, 1439, 1440, 1458, 1459, 1587, 1807, 1814, 1833, 1868, 1869, 1870, 1872, 1873, 1898, 1901, 1908, 1916, 1929, 1961, 1965, 1990, 1999, 2004, 2024, 2026, 2030, 2031, 2044], "untouch": 21, "slightli": [21, 25, 31, 46, 49, 1730, 1775, 1887, 1959, 1990, 1992, 1995, 1996, 2002, 2012, 2044], "default_col": 21, "channel": [21, 52, 468, 469, 470, 775, 781, 804, 818, 821, 829, 841, 849, 1112, 1402, 1403, 1404, 1408, 1415, 1416, 1417, 1418, 1419, 1420, 1425, 1426, 1427, 1428, 1432, 1434, 1442, 1450, 1451, 1452, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1476, 1496, 1522, 1527, 1539, 1540, 1541, 1542, 1563, 1579, 1580, 1581, 1586, 1603, 1604, 1611, 1638, 1663, 1682, 1683, 1691, 1701, 1702, 1703, 1710, 1711, 1727, 1787, 1979, 1981, 1985, 1987, 2015, 2016, 2018, 2029], "class_index": 21, "namedtupl": [21, 27, 46, 47, 58, 890, 895, 1077, 1078, 1195, 1250, 1262, 1272, 1292, 1342, 1348, 1351, 1353, 1356, 1380, 1392, 1488, 1775, 1785, 1858, 1886, 1905, 1910, 1961, 1963, 1964, 2015], "situat": [21, 31, 44, 58, 81, 83, 482, 968, 984, 1695, 1972, 1977, 1992, 1993, 2001, 2002, 2012, 2015, 2022, 2042, 2043, 2044, 2055], "gil": [21, 25, 29, 1987, 1990, 2020], "integ": [21, 24, 25, 31, 42, 46, 47, 84, 285, 441, 443, 445, 495, 541, 556, 562, 681, 682, 683, 684, 685, 686, 762, 763, 781, 783, 861, 888, 901, 902, 936, 937, 946, 957, 983, 1002, 1004, 1020, 1026, 1027, 1055, 1093, 1096, 1098, 1099, 1100, 1101, 1141, 1142, 1143, 1144, 1145, 1146, 1152, 1153, 1157, 1158, 1159, 1160, 1161, 1172, 1179, 1186, 1187, 1193, 1208, 1209, 1212, 1213, 1214, 1261, 1264, 1273, 1274, 1281, 1292, 1294, 1304, 1323, 1373, 1392, 1407, 1415, 1416, 1417, 1460, 1552, 1553, 1554, 1555, 1556, 1557, 1665, 1716, 1731, 1734, 1763, 1766, 1770, 1775, 1787, 1788, 1794, 1796, 1797, 1798, 1800, 1805, 1814, 1826, 1874, 1883, 1887, 1902, 1903, 1916, 1921, 1936, 1940, 1944, 1947, 1948, 1957, 1963, 1964, 1965, 1978, 1993, 1996, 2013, 2015, 2016, 2018, 2024, 2025, 2027, 2030, 2031, 2032, 2042, 2057], "descriptor": [21, 25, 1536, 1537, 1965, 2009], "parent": [21, 35, 40, 44, 49, 676, 784, 785, 813, 1488, 1977, 2005, 2012, 2022, 2029], "simplest": [21, 27, 33, 58, 854, 1397, 1398, 1399, 1415, 1416, 1417, 1481, 1482, 1483, 1693, 1991, 1992, 1999, 2007, 2015, 2022, 2024, 2044, 2047], "refcount": [21, 1977, 2001], "panda": 21, "pyarrow": 21, "13246": 21, "enumer": [21, 31, 46, 58, 1250, 1488, 1490, 1499, 1760, 1962, 1963, 1986, 1990, 2005, 2029, 2053], "get_worker_info": [21, 2020], "seed": [21, 84, 1036, 1045, 1046, 1066, 1226, 1343, 1364, 1775, 1792, 1887, 1926, 1960, 1962, 1994, 2001, 2003, 2010, 2019], "naiv": [21, 2013, 2042, 2044], "shut": [21, 2020], "garbag": [21, 2022], "subtleti": [21, 60, 1424, 1992, 1994], "multiprocess": [21, 22, 25, 26, 28, 33, 35, 43, 44, 1424, 1675, 1960, 1979, 1991, 2021, 2026], "unix": [21, 40, 1977], "fork": [21, 40, 1269, 1675, 1964, 1989, 1990, 1994, 1998, 2001, 2005, 2019, 2020, 2022], "child": [21, 25, 33, 35, 49, 787, 1250, 1488, 1702, 1977, 1999, 2005, 2022], "address": [21, 25, 42, 45, 54, 212, 915, 916, 1007, 1971, 1977, 1990, 1992, 2011, 2020, 2021, 2026, 2039, 2056], "maco": [21, 25, 1977, 2000], "spawn": [21, 22, 26, 33, 34, 40, 44, 1253, 1675, 1960, 1986, 1991, 2001, 2005, 2021], "__name__": [21, 22, 25, 34, 35, 43, 1991, 1992, 2001, 2005, 2012, 2021], "__main__": [21, 22, 25, 34, 35, 43, 1988, 1991, 2001, 2005, 2021], "bytecod": [21, 46, 676, 1970, 2006, 2007, 2012, 2040, 2041, 2044, 2047, 2054], "base_se": 21, "worker_id": [21, 44, 2003], "therebi": [21, 31, 2011, 2015], "mandatorili": 21, "faq": [21, 1424, 1719, 1960], "initial_se": [21, 84, 1960, 1962, 2003, 2010, 2019], "host": [21, 25, 33, 35, 41, 42, 43, 44, 192, 205, 576, 599, 873, 1250, 1488, 1675, 1695, 1729, 1990, 2013, 2020, 2021, 2026, 2039, 2043, 2056], "recogn": [21, 77, 1964, 2020, 2024, 2043], "simplecustombatch": 21, "transposed_data": 21, "zip": [21, 27, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1959, 1962, 1963, 1974, 1990, 1998, 2024], "tgt": [21, 1531, 1532, 1533], "collate_wrapp": 21, "float32": [21, 22, 25, 46, 49, 263, 576, 613, 815, 816, 817, 818, 821, 822, 876, 977, 1112, 1113, 1151, 1198, 1200, 1232, 1388, 1401, 1540, 1541, 1542, 1560, 1742, 1743, 1755, 1779, 1784, 1792, 1796, 1811, 1826, 1827, 1829, 1871, 1933, 1980, 1986, 1990, 2002, 2007, 2009, 2017, 2024, 2025, 2026, 2027, 2030, 2031, 2041, 2044, 2054, 2057], "tensordataset": 21, "batch_ndx": 21, "is_pin": [21, 1716, 1962, 1978, 2010, 2026, 2044], "multiprocessing_context": 21, "pin_memory_devic": 21, "reshuffl": 21, "draw": [21, 31, 150, 282, 938, 1061, 1374, 1792, 2029, 2052], "mutual": [21, 25, 33, 731, 2031], "subprocess": [21, 25, 40, 42, 44, 1994, 2001], "incomplet": [21, 904, 1966, 2025], "divis": [21, 579, 613, 683, 768, 769, 770, 962, 1093, 1143, 1146, 1261, 1294, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1442, 1454, 1479, 1497, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1630, 1805, 1874, 1902, 1964, 1986, 1990], "basecontext": 21, "randomsampl": 21, "prefetch": [21, 49], "unpickl": [21, 25, 1322, 2012], "practic": [21, 25, 31, 47, 49, 482, 1960, 1961, 1971, 1977, 1979, 1987, 1992, 1995, 1996, 1999, 2004, 2012, 2020, 2026, 2035, 2043, 2044], "proper": [21, 33, 57, 58, 1089, 1824, 1963, 1987, 1990, 1992, 2001, 2005, 2026], "guess": [21, 1172], "trust": [21, 25, 1322, 1959, 2012], "inaccur": [21, 22, 1604], "kwd": 21, "__getitems__": 21, "speedup": [21, 22, 1494, 1535, 2035, 2039, 2047, 2051], "myiterabledataset": 21, "worker_info": 21, "iter_start": 21, "iter_end": 21, "per_work": 21, "ceil": [21, 173, 629, 630, 764, 765, 1397, 1398, 1399, 1455, 1456, 1457, 1481, 1482, 1483, 1560, 1561, 1562, 1618, 1619, 1620, 1790, 1791, 1814, 1962, 1978, 1990, 2010, 2024, 2049], "mult": 21, "12": [21, 22, 25, 49, 317, 513, 613, 682, 737, 738, 739, 741, 742, 931, 958, 962, 1096, 1114, 1214, 1254, 1270, 1287, 1309, 1392, 1408, 1419, 1434, 1435, 1436, 1485, 1500, 1501, 1522, 1531, 1539, 1547, 1588, 1589, 1630, 1635, 1636, 1690, 1724, 1774, 1785, 1833, 1848, 1858, 1902, 1918, 1921, 1936, 1959, 1961, 1962, 1965, 1971, 1990, 1992, 1995, 2000, 2004, 2009, 2010, 2024, 2031, 2041, 2051, 2052], "overall_start": 21, "overall_end": 21, "stackdataset": 21, "assembl": [21, 2041], "imagedataset": 21, "textdataset": 21, "tuple_stack": 21, "dict_stack": 21, "concatdataset": 21, "chaindataset": 21, "chain": [21, 22, 31, 57, 58, 146, 889, 958, 1306, 1431, 1516, 1757, 1770, 1964, 1987, 1990, 1992, 1996, 1999, 2011, 2053], "fly": [21, 1041, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1987], "whole": [21, 25, 27, 1167, 1250, 1488, 1516, 1527, 1675, 1935, 1987, 1991, 2001, 2002, 2012, 2043, 2045, 2047, 2050, 2051], "_util": [21, 2052], "collate_fn_map": 21, "registri": [21, 1960, 2004, 2007, 2009], "default_collate_fn_map": 21, "insert": [21, 25, 31, 49, 57, 58, 743, 788, 789, 857, 858, 935, 1489, 1490, 1498, 1675, 1821, 1824, 1833, 1854, 1879, 1922, 1961, 1973, 1990, 2007, 2010, 2015, 2053], "collate_tensor_fn": 21, "custom_col": 21, "collate_map": 21, "outer": [21, 687, 904, 1098, 1157, 1161, 1166, 1176, 1196, 1962, 1964, 2010], "unchang": [21, 495, 509, 511, 731, 810, 1137, 1250, 1488, 1531, 1806, 1877, 1986, 2002, 2015], "byte": [21, 25, 27, 31, 42, 238, 431, 554, 876, 1006, 1047, 1049, 1051, 1053, 1150, 1152, 1249, 1322, 1359, 1360, 1736, 1745, 1817, 1963, 1964, 1965, 1978, 1995, 2004, 2012, 2024, 2026, 2056], "k": [21, 25, 27, 31, 43, 58, 282, 350, 502, 509, 511, 513, 586, 613, 756, 935, 961, 1085, 1098, 1155, 1168, 1192, 1213, 1272, 1280, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1295, 1296, 1297, 1300, 1302, 1309, 1311, 1313, 1314, 1323, 1341, 1345, 1397, 1399, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1435, 1436, 1439, 1440, 1458, 1459, 1473, 1475, 1476, 1481, 1483, 1494, 1495, 1503, 1505, 1547, 1576, 1588, 1589, 1611, 1629, 1689, 1773, 1775, 1785, 1813, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1872, 1873, 1882, 1905, 1910, 1962, 1963, 1985, 1990, 1992, 2005, 2024, 2025, 2027, 2044, 2047, 2048, 2049, 2054], "v_i": [21, 1290], "v_1": 21, "v_2": 21, "v1_i": 21, "v2_i": 21, "v1_1": 21, "v1_2": 21, "v2_1": 21, "v2_2": 21, "elem": [21, 1962], "customtyp": 21, "collate_customtype_fn": 21, "custotyp": 21, "default_convert": 21, "np": [21, 956, 1093, 1098, 1138, 1139, 1140, 1634, 1779, 1968, 1993, 2003, 2009, 2029, 2030, 2031, 2044], "fraction": [21, 31, 1068, 1141, 1147, 1369, 1418, 1419, 1420, 1435, 1436, 1494, 1535, 1588, 1589, 1700, 1701, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1786, 1985, 2044], "workerinfo": [21, 2020], "random_split": 21, "floor": [21, 267, 643, 644, 764, 765, 1093, 1143, 1261, 1397, 1398, 1399, 1455, 1456, 1457, 1481, 1482, 1483, 1560, 1561, 1562, 1618, 1619, 1620, 1790, 1791, 1805, 1814, 1882, 1962, 1964, 1978, 2001, 2004, 2010, 2024, 2049], "frac": [21, 31, 275, 373, 645, 646, 683, 756, 768, 769, 770, 861, 937, 946, 984, 988, 1093, 1143, 1204, 1208, 1209, 1270, 1282, 1286, 1287, 1290, 1302, 1314, 1321, 1337, 1392, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1408, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1425, 1434, 1439, 1440, 1441, 1442, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1473, 1475, 1476, 1477, 1478, 1481, 1482, 1483, 1491, 1492, 1493, 1495, 1503, 1505, 1506, 1518, 1520, 1521, 1523, 1524, 1526, 1527, 1528, 1539, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1613, 1630, 1632, 1634, 1644, 1646, 1650, 1652, 1654, 1655, 1740, 1741, 1744, 1746, 1752, 1759, 1760, 1789, 1798, 1801, 1804, 1816, 1836, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1865, 1880, 1881, 1882, 1886, 1908, 1930, 1931, 1962, 1978, 1985, 1987, 1996, 2010, 2024, 2025], "remaind": [21, 486, 1146, 1204, 1962, 2010, 2041, 2049], "robin": [21, 25], "generator1": 21, "manual_se": [21, 54, 84, 1960, 1962, 1978, 1999, 2001, 2003, 2009, 2010, 2019], "42": [21, 820, 946, 1373, 1840, 1990, 1999, 2041], "generator2": 21, "30": [21, 25, 31, 33, 42, 441, 613, 716, 724, 725, 752, 760, 1204, 1273, 1405, 1407, 1414, 1475, 1539, 1545, 1568, 1577, 1666, 1763, 1765, 1771, 1788, 1898, 1972, 1992, 1995, 2009, 2011, 2020, 2041], "data_sourc": 21, "accedingsequencelengthsampl": 21, "argsort": [21, 1898, 1962, 1993, 2010], "tolist": [21, 348, 1964, 2010, 2026], "accedingsequencelengthbatchsampl": 21, "sequentialsampl": 21, "num_sampl": [21, 417, 1374, 1962], "drawn": [21, 169, 254, 282, 1374, 1731, 1792, 1796, 1797, 1985, 2031, 2032], "subsetrandomsampl": 21, "weightedrandomsampl": 21, "probabl": [21, 49, 150, 254, 756, 938, 1177, 1212, 1328, 1374, 1392, 1396, 1400, 1407, 1423, 1425, 1426, 1427, 1428, 1432, 1439, 1441, 1458, 1494, 1495, 1503, 1565, 1576, 1577, 1578, 1579, 1580, 1581, 1586, 1595, 1605, 1629, 1644, 1785, 1977, 1992, 2005, 2009, 2025, 2029, 2042, 2043, 2044, 2045, 2050], "row": [21, 22, 25, 30, 31, 204, 309, 311, 317, 581, 584, 689, 695, 873, 904, 906, 956, 984, 988, 1081, 1111, 1139, 1140, 1161, 1167, 1213, 1272, 1298, 1306, 1309, 1314, 1338, 1340, 1348, 1350, 1351, 1353, 1356, 1374, 1380, 1381, 1382, 1584, 1585, 1634, 1689, 1729, 1783, 1786, 1806, 1866, 1867, 1868, 1869, 1870, 1872, 1873, 1885, 1905, 1908, 1912, 1914, 1929, 1935, 1937, 1962, 1996, 2024, 2029], "05": [21, 29, 58, 109, 340, 690, 708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 745, 747, 748, 749, 750, 915, 916, 1112, 1239, 1266, 1267, 1337, 1402, 1403, 1404, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1527, 1531, 1533, 1535, 1563, 1594, 1603, 1607, 1675, 1758, 1764, 1765, 1771, 1842, 1843, 1848, 1961, 1962, 2011, 2021, 2031], "batchsampl": 21, "distributedsampl": [21, 1675], "num_replica": 21, "world_siz": [21, 22, 25, 26, 29, 33, 42, 43, 45, 49, 1675, 1991, 2013, 2020, 2021], "evenli": [21, 30, 579, 580, 581, 691, 692, 1096, 1214, 1321, 1337, 1936], "set_epoch": 21, "is_distribut": [21, 1962, 2010, 2044], "start_epoch": 21, "n_epoch": 21, "vanilla": [22, 47, 1971], "allreduc": [22, 25, 1675, 1990, 1991, 2010], "besid": [22, 25, 924, 1990, 1991, 2007, 2029, 2040], "register_comm_hook": [22, 29, 49, 1675], "mainli": [22, 31, 823, 1407, 1577, 2033], "bucket": [22, 29, 1182, 1392, 1675, 1962, 1991, 2010, 2044, 2054], "gradbucket": [22, 1675], "decompos": [22, 46, 58, 1148, 1156, 1295, 1987, 1992, 2009, 2049], "get_per_parameter_tensor": 22, "wise": [22, 25, 30, 31, 683, 684, 694, 754, 766, 767, 776, 780, 880, 982, 1098, 1103, 1144, 1145, 1193, 1194, 1207, 1216, 1273, 1275, 1332, 1333, 1334, 1335, 1339, 1349, 1352, 1354, 1385, 1406, 1420, 1427, 1429, 1443, 1444, 1445, 1446, 1448, 1474, 1477, 1487, 1496, 1506, 1507, 1508, 1515, 1517, 1518, 1519, 1524, 1525, 1526, 1528, 1529, 1567, 1582, 1591, 1592, 1596, 1597, 1598, 1599, 1602, 1606, 1608, 1613, 1624, 1625, 1638, 1639, 1640, 1645, 1646, 1647, 1648, 1652, 1654, 1655, 1656, 1866, 1937, 1989, 1992, 2024, 2025, 2028, 2051], "_distributed_c10d": [22, 25], "1d": [22, 31, 49, 698, 701, 734, 737, 768, 778, 967, 984, 988, 1081, 1095, 1212, 1213, 1227, 1247, 1306, 1307, 1352, 1381, 1389, 1393, 1397, 1407, 1415, 1418, 1423, 1426, 1427, 1431, 1455, 1480, 1481, 1493, 1495, 1540, 1552, 1555, 1558, 1560, 1568, 1571, 1579, 1585, 1614, 1618, 1786, 1787, 1790, 1882, 1898, 1908, 1932, 1995], "is_last": 22, "set_buff": 22, "stateless": [22, 54, 1981, 1999], "ddp_comm_hook": [22, 29], "default_hook": 22, "allreduce_hook": 22, "process_group": [22, 26, 27, 29, 49, 1527, 1675], "aggreg": [22, 25, 27, 35, 49, 1431, 1585, 1675, 1706, 1975, 2013, 2044, 2054], "henc": [22, 27, 29, 31, 33, 41, 42, 45, 49, 57, 282, 938, 1152, 1484, 1485, 1486, 1540, 1682, 1683, 1871, 1980, 1987, 1990, 1991, 1995, 2020, 2022, 2039], "unaffect": [22, 495, 496, 1441], "ddp_model": [22, 25, 27, 1675, 1991], "fp16_compress_hook": 22, "compress": [22, 49, 204, 583, 584, 1120, 1121, 1130, 1131, 1675, 1868, 1869, 1870, 1872, 1873, 1907, 1960, 2051], "decompress": [22, 1959, 1974], "bf16_compress_hook": 22, "nccl": [22, 26, 27, 43, 49, 1675, 1995, 1997], "brain": [22, 2027, 2030], "wrapper": [22, 25, 31, 46, 49, 57, 58, 60, 620, 753, 786, 820, 996, 999, 1001, 1002, 1004, 1071, 1144, 1145, 1165, 1250, 1362, 1424, 1940, 1954, 1961, 1963, 1964, 1975, 1977, 1990, 1991, 2009, 2013, 2039], "fp16_compress_wrapp": 22, "powersgdst": 22, "matrix_approximation_rank": 22, "start_powersgd_it": 22, "powersgd_hook": 22, "bf16_compress_wrapp": 22, "wikipedia": [22, 1631, 1987, 1996, 2057], "bfloat16_float": 22, "point_format": 22, "vogel": 22, "et": [22, 31, 49, 1407, 1500, 1501, 1536, 1537, 1755, 1849, 1887, 1985], "al": [22, 31, 49, 1407, 1500, 1501, 1536, 1537, 1755, 1849, 1887, 1985], "neurip": [22, 31], "2019": [22, 31, 1055], "bandwidth": [22, 25, 41, 43, 1990, 2015, 2020, 2046, 2048], "hyperparamet": [22, 49, 58, 2029], "1000": [22, 1113, 1118, 1144, 1145, 1392, 1430, 1537, 1787, 1814, 1833, 1901, 1987, 2004, 2009, 2029], "min_compression_r": 22, "use_error_feedback": 22, "warm_start": 22, "orthogonalization_epsilon": 22, "random_se": 22, "compression_stats_logging_frequ": 22, "batch_tensors_with_same_shap": 22, "tune": [22, 25, 29, 1055, 1287, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1987, 1990, 2000, 2015, 2054], "stronger": [22, 46, 47, 60], "exponenti": [22, 254, 1108, 1302, 1328, 1329, 1330, 1338, 1406, 1429, 1582, 1960, 1964, 2010, 2011, 2025, 2032], "grid": [22, 1118, 1352, 1558, 1593, 1962, 1990, 2029, 2049], "satisfactori": 22, "nlp": [22, 1450, 1451, 1452, 1460, 2044], "appendix": [22, 1960], "hybrid": [22, 49, 214, 539, 579, 580, 581, 583, 584, 1215], "scheme": [22, 42, 474, 798, 815, 816, 817, 818, 821, 823, 1999], "sensit": [22, 1448, 1519, 2009, 2012, 2021, 2043], "suboptim": [22, 2046], "trajectori": 22, "irrecover": 22, "impact": [22, 25, 77, 1055, 1829, 1973, 1975, 1987, 2015, 2028, 2044, 2050, 2054], "warm": [22, 29, 1044, 1759, 1760, 1990, 2014, 2039, 2044, 2052], "num_row": 22, "num_col": 22, "1e": [22, 27, 31, 58, 109, 340, 690, 708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 745, 747, 748, 749, 750, 751, 915, 916, 959, 960, 961, 1239, 1266, 1267, 1317, 1402, 1403, 1404, 1422, 1441, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1474, 1497, 1502, 1527, 1531, 1533, 1535, 1536, 1563, 1575, 1590, 1594, 1595, 1603, 1607, 1630, 1633, 1637, 1660, 1690, 1724, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1769, 1777, 1830, 1961, 1962, 1992, 1999, 2009, 2011, 2025, 2031], "orthogon": [22, 1287, 1290, 1309, 1314, 1323, 1773, 1785, 1985, 1987, 1999, 2024], "div": [22, 232, 1094, 1143, 1146, 1392, 1500, 1501, 1805, 1915, 1962, 1968, 1978, 2010, 2024, 2027, 2049, 2053], "epsilon": [22, 58, 815, 816, 817, 818, 821, 861, 1305, 1308, 1402, 1403, 1404, 1422, 1442, 1450, 1451, 1452, 1460, 1497, 1527, 1575, 1630, 1685, 1687, 1690, 1724, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1789, 1962, 2025], "bucket_cap_mb": [22, 1675, 1991], "footprint": [22, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 2007, 2024, 2051], "bottleneck": [22, 1960, 1999, 2046], "memor": 22, "compens": 22, "apex": 22, "uncompress": [22, 2004, 2024], "p": [22, 27, 31, 49, 58, 150, 230, 282, 421, 422, 449, 484, 487, 488, 682, 685, 936, 938, 948, 956, 1092, 1271, 1282, 1288, 1289, 1297, 1298, 1340, 1342, 1345, 1355, 1377, 1396, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1453, 1455, 1456, 1457, 1493, 1497, 1499, 1536, 1537, 1559, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1614, 1615, 1616, 1626, 1630, 1633, 1634, 1660, 1680, 1693, 1695, 1701, 1710, 1730, 1755, 1806, 1863, 1962, 1963, 1986, 1987, 1990, 1994, 1996, 2001, 2011, 2014, 2024, 2025, 2048, 2049], "pq": 22, "mq": [22, 2015, 2034], "tp": [22, 25, 30], "awai": [22, 58, 971, 1593, 1960, 1979, 1987, 1993, 2042], "config": [22, 49, 58, 788, 789, 790, 791, 855, 857, 968, 1991, 2005, 2018, 2036, 2044, 2046, 2047, 2048, 2050, 2054], "comm": [22, 25, 676, 1991], "handler": [22, 25, 35, 36, 1702, 1975, 1992, 1998, 2012, 2055], "batched_powersgd_hook": 22, "destroi": [22, 42, 1172, 1424, 1987, 2014, 2020], "squar": [22, 31, 547, 735, 736, 737, 738, 775, 781, 790, 988, 1085, 1087, 1247, 1282, 1284, 1286, 1287, 1288, 1291, 1292, 1296, 1298, 1300, 1302, 1304, 1308, 1310, 1311, 1313, 1314, 1318, 1331, 1340, 1390, 1394, 1398, 1399, 1416, 1417, 1419, 1420, 1435, 1436, 1448, 1456, 1457, 1479, 1482, 1483, 1486, 1519, 1531, 1548, 1560, 1569, 1572, 1588, 1589, 1593, 1602, 1604, 1625, 1648, 1663, 1689, 1740, 1742, 1743, 1744, 1746, 1752, 1753, 1756, 1816, 1875, 1910, 1929, 1962, 2010, 2024], "truncat": [22, 1143, 1829, 1916, 1980, 1985, 1994, 2002], "impli": [22, 42, 49, 254, 1175, 1977, 1987, 1995, 2009, 2013, 2018, 2020, 2043], "debugging_hook": 22, "noop_hook": 22, "headroom": 22, "desynchron": [22, 25], "trainer": [22, 27, 33, 35, 40, 43, 44, 1675, 2020], "restart": [22, 33, 41, 43, 45, 1759, 1760, 1977, 2029, 2041], "__setstate__": 22, "__getstate__": 22, "reload": [22, 29, 49, 1959], "sy": [22, 34, 43, 45, 1959, 1990, 2004, 2012], "tempfil": 22, "mp": [22, 25, 26, 44, 1362, 1675, 1960, 1968, 1991, 1992, 2001, 2015, 2021, 2026, 2027, 2034], "simplemodel": 22, "24": [22, 25, 31, 941, 1309, 1476, 1558, 1723, 1785, 1829, 1903, 1961, 1985, 1989, 2025, 2041], "fc2": [22, 1666, 2007, 2013, 2036], "master_addr": [22, 25, 33, 43, 45, 1991, 2013, 2020, 2021], "localhost": [22, 25, 42, 43, 1991, 2013, 2020, 2021], "master_port": [22, 25, 33, 43, 45, 1991, 2013, 2020, 2021], "12355": 22, "init_process_group": [22, 25, 26, 29, 33, 43, 45, 1675, 1990, 1991, 2020], "cleanup": [22, 1172, 2026], "destroy_process_group": 22, "run_demo": 22, "demo_fn": 22, "nproc": [22, 25, 40, 41, 43, 1977, 1991, 2021], "demo_seri": 22, "gettempdir": 22, "device_id": [22, 25, 26, 29, 43, 49, 1322, 1424, 1527, 1659, 1675, 1991], "powersgd_st": 22, "lr": [22, 26, 27, 29, 49, 484, 1666, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1990, 1991, 1999, 2001, 2011, 2021, 2029], "001": [22, 915, 916, 1260, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1768, 1991, 2009], "state_dict": [22, 27, 29, 46, 47, 49, 56, 832, 833, 1250, 1488, 1666, 1709, 1727, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1959, 1974, 1991, 1999, 2001, 2004, 2007, 2009, 2015, 2033], "comm_hook": 22, "comm_hook_st": 22, "barrier": [22, 33, 42, 2010], "map_loc": [22, 1254, 1258, 1322, 1675, 1959, 1972, 1974, 2012], "new_ddp_model": 22, "load_state_dict": [22, 27, 29, 49, 56, 411, 1250, 1322, 1488, 1666, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1959, 1960, 1999, 2004, 2015], "n_gpu": 22, "device_count": [22, 1926, 1960], "got": [22, 25, 887, 901, 902, 924, 1926, 1992, 2031], "thank": [22, 31, 1992, 2013], "author": [22, 42, 43, 49, 1167, 1752, 1792, 1935, 1986, 2036, 2041, 2044, 2046, 2050, 2051, 2054], "thij": 22, "par": 22, "home": [23, 1990], "fill_uninitialized_memori": [24, 495, 1099, 1100, 1101, 1923, 1960, 2003], "fill": [24, 25, 150, 169, 254, 255, 256, 282, 313, 317, 373, 396, 441, 442, 443, 445, 450, 477, 604, 619, 939, 1086, 1099, 1100, 1101, 1153, 1154, 1281, 1292, 1294, 1431, 1531, 1585, 1632, 1734, 1735, 1794, 1795, 1796, 1797, 1798, 1799, 1886, 1923, 1957, 1958, 1962, 1972, 1979, 1980, 1985, 1990, 1992, 2004, 2010, 2024, 2031, 2043, 2047, 2049], "detriment": [24, 2003], "resize_": [24, 496, 1156, 1272, 1923, 1961, 1962, 1963, 1978, 2003, 2017, 2026, 2049], "empty_strid": [24, 1962, 1966, 2010, 2042, 2049], "empty_permut": [24, 1962, 2010, 2049], "empty_lik": [24, 27, 1962, 1966, 1972, 1978, 1980, 2010, 2024], "brief": [25, 1675, 1977, 2020], "introduct": [25, 31, 1033, 1675, 1960, 1961, 1965, 1978, 1988, 1999, 2009, 2020, 2024, 2029], "mpi": [25, 1675], "gloo": [25, 43, 1675, 1991, 1997, 2020], "recv": [25, 1675, 2010, 2021], "broadcast": [25, 29, 31, 49, 54, 93, 192, 394, 396, 397, 398, 509, 511, 513, 562, 681, 682, 683, 684, 685, 686, 687, 693, 731, 880, 936, 941, 944, 948, 949, 950, 951, 983, 1012, 1041, 1092, 1093, 1098, 1103, 1143, 1144, 1145, 1146, 1192, 1194, 1207, 1217, 1275, 1276, 1283, 1296, 1300, 1305, 1306, 1308, 1311, 1319, 1339, 1344, 1345, 1355, 1373, 1376, 1385, 1388, 1401, 1422, 1441, 1494, 1566, 1575, 1638, 1675, 1738, 1774, 1782, 1805, 1807, 1883, 1903, 1908, 1938, 1960, 1964, 1978, 1979, 1980, 1991, 2009, 2010, 2025, 2044, 2049], "all_reduc": [25, 44, 1675, 2010], "all_gath": 25, "scatter": [25, 29, 49, 509, 511, 513, 1424, 1923, 1962, 1994, 1995, 2010, 2020, 2049], "reduce_scatt": [25, 2010], "all_to_al": 25, "v1": [25, 49, 1319, 1774, 1959, 1991, 2020], "init_method": [25, 1675, 2020], "adher": [25, 1964, 2024], "some_fil": 25, "machine_nam": 25, "share_folder_nam": 25, "tcpstore": [25, 42], "past": [25, 58, 1010, 1057, 1061, 1075, 1076, 1675, 1994, 2046, 2048, 2051], "ask": [25, 53, 54, 1959, 1960, 1993, 1996, 2035, 2056], "infiniband": [25, 1675, 2020], "interconnect": 25, "gpudirect": 25, "ethernet": 25, "ip": [25, 42], "ib": 25, "upcom": [25, 1986], "nccl_socket_ifnam": 25, "eth0": 25, "gloo_socket_ifnam": 25, "comma": [25, 1098, 1964, 1970], "eth1": 25, "eth2": 25, "eth3": 25, "imper": 25, "nccl_debug": 25, "info": [25, 33, 36, 40, 676, 888, 901, 902, 1001, 1002, 1004, 1172, 1281, 1292, 1294, 1295, 1299, 1312, 1340, 1365, 1366, 1736, 1960, 1962, 1970, 1991, 1992, 1993, 2009, 2012, 2041, 2042, 2043, 2054], "nccl_debug_subsi": 25, "coll": 25, "hang": [25, 26, 29, 31, 1675, 1991], "topologi": [25, 27, 30, 33], "effort": [25, 46, 2020, 2048], "socket": [25, 1977, 2020], "nccl_socket_nthread": 25, "nccl_nsocks_perthread": 25, "cloud": [25, 2024, 2029], "aw": [25, 34, 988], "gcp": [25, 2051], "primit": [25, 29, 42, 46, 1322, 1961, 1963, 1965, 1989, 2000, 2009, 2020, 2049], "kind": [25, 36, 46, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 676, 1270, 1676, 1737, 1784, 1848, 1959, 1968, 1992, 2001, 2003, 2007, 2009, 2012, 2015, 2025, 2027, 2047], "connect": [25, 33, 42, 1415, 1416, 1417, 1418, 1419, 1420, 1464, 1465, 1466, 1467, 1468, 1469, 1516, 1977, 2020, 2052], "advantag": [25, 42, 43, 1401, 1448, 1991, 1994, 2006, 2007, 2020, 2024, 2039], "redund": [25, 49, 1114, 1115, 1117, 1119, 1133, 1135, 1882], "averag": [25, 29, 731, 762, 763, 764, 765, 817, 818, 928, 930, 988, 1061, 1075, 1250, 1389, 1390, 1391, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1421, 1423, 1431, 1441, 1447, 1453, 1454, 1455, 1456, 1457, 1461, 1462, 1463, 1479, 1480, 1488, 1491, 1492, 1493, 1494, 1495, 1502, 1519, 1520, 1527, 1536, 1552, 1553, 1554, 1560, 1561, 1562, 1565, 1566, 1576, 1590, 1605, 1614, 1615, 1616, 1629, 1637, 1675, 1739, 1740, 1742, 1743, 1744, 1746, 1752, 1753, 1756, 1908, 1960, 1991, 2014], "elimin": [25, 46, 58, 606, 1168, 1919, 1920, 2003, 2046, 2053], "thrash": 25, "recurr": [25, 756, 757, 1266, 1407, 1424, 1439, 1440, 1458, 1503, 1693, 1719, 1753, 1960, 1990], "device_mesh": [25, 30, 49, 1675], "init_device_mesh": [25, 30], "use_distribut": 25, "group_nam": [25, 39], "pg_option": 25, "url": [25, 42, 927, 1959, 1974, 2020], "discov": [25, 968, 2020], "encod": [25, 33, 39, 42, 49, 58, 1298, 1322, 1365, 1366, 1400, 1401, 1531, 1532, 1533, 1534, 1535, 1675, 1829, 1868, 1869, 1870, 1872, 1873, 1961, 1964, 1965, 1992, 2004, 2012, 2021, 2024], "ucc": 25, "lowercas": 25, "deadlock": [25, 1675], "job": [25, 33, 35, 36, 38, 39, 41, 42, 43, 44, 1675, 1761, 1767, 1990, 1998, 2014, 2029, 2056], "exchang": [25, 42, 1002, 1086, 1990, 2006], "timedelta": [25, 42, 1975], "abort": [25, 1990], "crash": [25, 35, 42, 1287, 1977, 1987, 2020, 2022, 2029, 2042], "corrupt": [25, 42, 1424, 1990, 2001], "torch_nccl_blocking_wait": 25, "processgroupopt": 25, "processgroupnccl": [25, 1991], "is_high_priority_stream": 25, "ncclcomminit": 25, "lazi": [25, 981, 1263, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1666, 1950, 1960, 2042], "ncclcommsplit": 25, "unnecessari": [25, 29, 1682, 1683, 1723, 1964, 1987, 1990, 1992, 2004, 2012, 2028], "backend_nam": [25, 1926], "custom_backend": 25, "mesh_shap": 25, "mesh_dim_nam": 25, "dimension": [25, 31, 47, 509, 511, 876, 882, 883, 884, 947, 954, 966, 1086, 1088, 1089, 1098, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1132, 1133, 1135, 1137, 1139, 1140, 1152, 1204, 1213, 1214, 1215, 1283, 1288, 1289, 1290, 1291, 1316, 1321, 1337, 1345, 1352, 1392, 1409, 1410, 1411, 1412, 1413, 1414, 1423, 1424, 1430, 1431, 1460, 1478, 1495, 1509, 1510, 1511, 1512, 1513, 1514, 1521, 1523, 1527, 1543, 1544, 1545, 1576, 1629, 1632, 1664, 1665, 1689, 1729, 1792, 1868, 1869, 1870, 1871, 1872, 1873, 1882, 1898, 1901, 1902, 1908, 1964, 1980, 1985, 1988, 1996, 2002, 2024, 2026, 2027, 2030, 2032, 2042], "layout": [25, 30, 47, 58, 146, 187, 204, 229, 338, 339, 431, 441, 442, 443, 444, 445, 454, 540, 577, 578, 579, 580, 581, 583, 584, 613, 685, 861, 889, 894, 937, 946, 1014, 1099, 1100, 1101, 1111, 1116, 1134, 1150, 1153, 1154, 1208, 1209, 1270, 1321, 1337, 1345, 1355, 1384, 1610, 1734, 1735, 1756, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1907, 1912, 1914, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1966, 1980, 1990, 2010, 2012, 2024, 2029, 2030, 2031, 2044, 2049], "spmd": [25, 27], "nd": [25, 1306, 1995, 2002], "inconsist": [25, 49, 861, 1801, 1992], "scene": [25, 2004, 2029], "mesh": [25, 30, 2029], "mesh_1d": 25, "mesh_2d": 25, "dp": 25, "is_initi": [25, 1960], "is_mpi_avail": 25, "is_nccl_avail": 25, "is_gloo_avail": 25, "is_torchelastic_launch": 25, "elast": [25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 1960], "torchelast": [25, 28, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45], "torchelastic_run_id": [25, 43], "proxi": [25, 27, 2015, 2020, 2047], "rendezv": [25, 28, 33, 39, 41, 45, 1991, 2020], "null": [25, 34, 36, 39, 60, 64], "discoveri": [25, 42, 1990, 2012], "reachabl": 25, "multicast": 25, "20": [25, 29, 31, 317, 681, 716, 724, 725, 730, 734, 735, 736, 737, 738, 739, 742, 752, 756, 757, 758, 759, 760, 761, 768, 1080, 1204, 1248, 1251, 1262, 1273, 1307, 1373, 1396, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1407, 1414, 1415, 1416, 1417, 1419, 1420, 1425, 1426, 1427, 1428, 1432, 1435, 1436, 1439, 1440, 1442, 1449, 1450, 1451, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1475, 1481, 1482, 1483, 1485, 1486, 1488, 1503, 1505, 1516, 1524, 1527, 1530, 1531, 1532, 1533, 1545, 1568, 1570, 1571, 1573, 1577, 1588, 1589, 1595, 1652, 1689, 1690, 1691, 1715, 1724, 1727, 1745, 1760, 1788, 1898, 1961, 1962, 1972, 1980, 1991, 1992, 2002, 2007, 2011, 2020, 2024, 2041, 2043, 2047], "23456": 25, "clean": [25, 33, 46, 58, 976, 1037, 1959, 1977, 2012], "fcntl": 25, "nf": 25, "init": [25, 33, 35, 49, 1250, 1488, 1496, 1515, 1723, 1960, 1966, 1987, 1992, 1998, 1999, 2042], "brand": [25, 27, 1992], "succe": [25, 42, 46, 54, 1990, 1992, 2005, 2054, 2056], "unexpect": [25, 27, 32, 58, 998, 1149, 1152, 1155, 1250, 1488, 1725, 1738, 1877, 1961, 1987, 1992, 2002, 2043, 2044, 2047], "unsuccess": 25, "mnt": 25, "sharedfil": 25, "port": [25, 33, 41, 42, 43, 1972, 1997], "enum": [25, 60, 792, 1546, 1547, 1548, 1992, 2009, 2014, 2015, 2020, 2047], "backend_str": 25, "uppercas": 25, "classmethod": [25, 27, 42, 60, 62, 728, 734, 735, 736, 741, 742, 752, 760, 788, 789, 790, 811, 812, 813, 820, 850, 924, 1001, 1430, 1431, 1527, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1736, 1964, 1965, 1992, 2015, 2020, 2026, 2055], "register_backend": [25, 2020, 2040], "extended_api": 25, "instanti": [25, 29, 41, 42, 43, 49, 58, 837, 1431, 1585, 1692, 1716, 1723, 1959, 1961, 1963, 1964, 1990, 1992, 1999, 2007, 2026], "3rd": [25, 31, 42, 613, 1769, 1988], "processgroup": [25, 27, 29, 49, 1675], "four": [25, 1296, 1416, 1992, 1996, 2020, 2022], "c10d": [25, 33, 41, 43, 45, 676, 1675, 1991, 2010], "distributedbackendopt": 25, "get_backend": [25, 42], "get_rank": [25, 49, 1527], "consecut": [25, 49, 606, 1718, 1757, 1908, 1919, 1920, 1979, 2009], "get_world_s": 25, "filestor": [25, 42], "hashstor": 25, "client": [25, 29, 42, 1055, 1171, 1175, 2012, 2044], "host_nam": 25, "hostnam": [25, 33, 42, 2014], "listen": 25, "is_mast": 25, "300": [25, 33, 1328, 1401, 1720, 1722, 2011], "wait_for_work": 25, "multi_ten": 25, "underli": [25, 27, 29, 31, 33, 46, 49, 54, 58, 93, 307, 322, 373, 396, 398, 469, 470, 471, 472, 479, 495, 516, 520, 553, 554, 555, 609, 744, 753, 874, 1001, 1150, 1172, 1185, 1186, 1187, 1221, 1225, 1250, 1322, 1383, 1637, 1803, 1907, 1922, 1961, 1964, 1980, 1990, 1994, 1997, 2013, 2020, 2026, 2028, 2035, 2043, 2047], "tcpserver": 25, "master_listen_fd": 25, "datetim": [25, 1975, 2044], "server_stor": 25, "127": [25, 790, 1979, 2015, 2029], "1234": [25, 42, 1227, 1921], "client_stor": 25, "first_kei": 25, "first_valu": 25, "hashmap": 25, "file_nam": [25, 1959, 1974, 2012], "store1": 25, "store2": 25, "prefixstor": 25, "old": [25, 32, 46, 58, 482, 850, 1149, 1427, 1727, 1735, 1769, 1817, 1958, 1960, 1961, 1987, 1990, 1992, 2005, 2015, 2029, 2043, 2047], "throw": [25, 26, 57, 58, 186, 319, 324, 541, 610, 1235, 1250, 1291, 1340, 1488, 1675, 1677, 1678, 1719, 1730, 1781, 1923, 1980, 1987, 2003, 2020, 2030, 2044, 2054], "whose": [25, 31, 49, 58, 540, 855, 894, 958, 983, 1086, 1098, 1103, 1152, 1194, 1204, 1207, 1213, 1250, 1256, 1267, 1275, 1321, 1337, 1339, 1385, 1488, 1675, 1731, 1779, 1836, 1904, 1964, 1987, 1992, 1995, 1996, 2012, 2024, 2029, 2031, 2042, 2054], "quantiti": [25, 50, 55, 1179, 1182, 1286, 1287, 1314, 1453, 1700, 1701, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1769, 1993, 1996], "compare_set": 25, "arg2": [25, 47], "expected_valu": 25, "desired_valu": 25, "second_valu": 25, "overload": [25, 46, 58, 613, 1963, 1964, 1968, 2007], "bad_kei": 25, "num_kei": 25, "written": [25, 27, 33, 35, 54, 927, 1057, 1150, 1424, 1755, 1961, 1963, 1971, 1973, 1987, 1991, 1992, 1993, 1999, 2004, 2007, 2009, 2012, 2014, 2026, 2029, 2035, 2041, 2042, 2046, 2048, 2053, 2054], "destruct": [25, 1975, 2020, 2022], "delete_kei": 25, "successfulli": [25, 33, 39, 1257, 1830, 1977, 1999, 2004, 2020, 2054], "set_timeout": 25, "grain": [25, 46, 854, 857, 1644, 1987, 2009, 2024, 2035, 2046, 2054], "plai": [25, 2041, 2044], "new_group": [25, 49, 1527], "opaqu": [25, 32, 999, 1033, 1034, 1149, 2050], "pattern": [25, 27, 788, 789, 790, 792, 850, 857, 1041, 1182, 1424, 1547, 1719, 1864, 1961, 1964, 1987, 1990, 1992, 1994, 1997, 2004, 2016, 2017, 2024, 2039, 2042, 2043, 2053, 2056], "use_local_synchron": 25, "enqueu": [25, 57, 1002, 1004, 1005, 1941, 1990, 2021], "significantli": [25, 46, 49, 905, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1829, 2024, 2040], "taken": [25, 31, 46, 57, 58, 60, 65, 861, 1119, 1121, 1144, 1145, 1407, 1423, 1431, 1495, 1577, 1585, 1833, 1866, 1985, 1987, 1989, 1990, 1992, 1994, 1995, 1998, 2004, 2009, 2012, 2014, 2054, 2056], "get_group_rank": 25, "global_rank": [25, 33], "translat": [25, 1204, 1987, 2006, 2007, 2022, 2047], "get_global_rank": 25, "group_rank": [25, 33, 43], "get_process_group_rank": 25, "inter": [25, 33, 35, 49, 1201, 1831, 1989, 1991, 2013, 2020], "intra": [25, 29, 49, 1989, 1991, 2013], "ndarrai": [25, 32, 454, 875, 1149, 1151, 1868, 1869, 1870, 1871, 1872, 1873, 1901, 2009, 2029, 2031, 2044], "dst": [25, 1959, 2012], "destin": [25, 27, 36, 39, 49, 205, 412, 413, 599, 1013, 1014, 1192, 1250, 1357, 1358, 1488, 1962, 2007, 2020, 2021, 2026], "unspecifi": [25, 477, 816, 817, 818, 821, 915, 916, 1172, 1521, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1865, 1871, 1971, 2024, 2029, 2036], "sender": [25, 2022], "isend": 25, "irecv": 25, "is_complet": 25, "finish": [25, 27, 33, 39, 40, 42, 44, 57, 482, 1156, 1990, 1991, 2005, 2014, 2020, 2022, 2056], "batch_isend_irecv": 25, "p2p_op_list": 25, "p2pop": 25, "op_list": 25, "send_tensor": 25, "recv_tensor": 25, "send_op": 25, "recv_op": 25, "req": 25, "pg": [25, 1675], "set_devic": [25, 27, 49, 1675, 1825, 1960, 2020, 2027], "p2p": [25, 42], "async_op": 25, "onto": [25, 49, 58, 60, 62, 1060, 1258, 1261, 1322, 1695, 1924, 1959, 1972, 1977, 1990, 1993, 1994, 1999, 2014, 2047, 2053, 2056], "get_futur": [25, 1675], "regard": [25, 1418, 1419, 1420, 1430, 1431, 1584, 1585, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1961, 2022, 2024, 2048], "101": [25, 924, 1392], "overwrot": 25, "sent": [25, 27, 1037, 1964, 1977, 2001, 2020, 2021, 2022], "broadcast_object_list": 25, "object_list": 25, "picklabl": [25, 1250, 1488, 2012], "current_devic": [25, 27, 49, 1010, 1018, 1019, 1026, 1027, 1043, 1047, 1049, 1050, 1051, 1053, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1074, 1075, 1076, 1926, 1943, 1947, 1948, 1956, 1960, 2027, 2041], "insecur": [25, 1322], "malici": [25, 1322, 2012], "ineffici": [25, 49, 1990, 2015], "redoptyp": 25, "bitwis": [25, 940, 942, 943, 945, 1965, 2002, 2016, 2032], "reduceop": 25, "int64": [25, 80, 187, 204, 309, 317, 389, 861, 939, 952, 1099, 1112, 1113, 1151, 1576, 1716, 1796, 1800, 1801, 1821, 1868, 1869, 1870, 1872, 1873, 1968, 1990, 2024, 2026, 2027, 2030, 2057], "1j": [25, 694, 981, 982, 1246, 1809, 1810, 1932, 1987, 1996, 2004], "2j": [25, 694, 981, 982, 1809, 1810, 1836, 1932, 1987], "tensor_list": [25, 1980], "all_gather_into_tensor": [25, 2010], "output_tensor": 25, "input_tensor": [25, 2046], "accommod": [25, 1484, 1485, 1486], "ii": [25, 984, 1098, 1458, 1459], "tensor_in": 25, "tensor_out": 25, "tensor_out2": 25, "all_gather_object": 25, "obj": [25, 58, 876, 1022, 1236, 1237, 1256, 1257, 1262, 1817, 1927, 1946, 1962, 2004, 2005, 2012], "pickabl": 25, "popul": [25, 31, 40, 49, 57, 58, 331, 491, 499, 500, 1351, 1380, 1990, 1992, 2043, 2053], "unmodifi": [25, 2041], "responsibl": 25, "gather_object": 25, "gather_list": 25, "object_gather_list": 25, "scatter_list": 25, "tensor_s": 25, "t_one": 25, "t_five": 25, "scatter_object_list": 25, "scatter_object_output_list": 25, "scatter_object_input_list": 25, "output_list": 25, "input_list": 25, "reduce_scatter_tensor": [25, 2010], "all_to_all_singl": [25, 2010], "output_split_s": 25, "input_split_s": 25, "13": [25, 871, 931, 962, 1080, 1096, 1099, 1143, 1204, 1214, 1254, 1340, 1408, 1435, 1436, 1485, 1522, 1588, 1589, 1858, 1902, 1936, 1961, 1965, 2010, 2024, 2048, 2054], "14": [25, 60, 68, 69, 317, 513, 961, 1041, 1042, 1081, 1096, 1214, 1303, 1309, 1378, 1408, 1485, 1785, 1792, 1829, 1858, 1902, 1903, 1908, 1936, 1961, 1965, 1995, 2010, 2024, 2028, 2029, 2041], "15": [25, 58, 613, 1080, 1096, 1193, 1204, 1214, 1273, 1287, 1408, 1485, 1486, 1720, 1722, 1777, 1849, 1858, 1906, 1936, 1961, 1962, 1965, 2009, 2024, 2041], "uneven": [25, 26, 29, 30, 1675], "18": [25, 317, 441, 681, 1099, 1204, 1247, 1323, 1485, 1961, 2007, 2009, 2010, 2024, 2036, 2041], "21": [25, 31, 681, 931, 958, 1081, 1309, 1785, 1908, 1961, 2024], "22": [25, 31, 317, 613, 1323, 1666, 1720, 1722, 1961, 2003, 2024, 2041], "23": [25, 509, 1080, 1323, 1829, 1844, 1961, 2024, 2054], "31": [25, 944, 1399, 1457, 1483, 1666, 1844, 2009], "33": [25, 734, 735, 736, 737, 738, 739, 768, 1080, 1250, 1415, 1416, 1417, 1419, 1420, 1486, 1488, 1568, 1570, 1571, 1573, 1961, 2009], "34": [25, 1921, 2041, 2047, 2054], "35": [25, 1309, 1403, 1404, 1451, 1452, 1527, 1785], "36": [25, 317, 1141, 1204, 2041, 2047], "input_split": 25, "output_split": 25, "5j": 25, "6j": 25, "7j": 25, "8j": 25, "9j": 25, "10j": 25, "11j": 25, "12j": 25, "13j": 25, "14j": 25, "15j": 25, "16j": 25, "output_tensor_list": 25, "input_tensor_list": 25, "monitored_barri": [25, 2010], "wait_all_rank": 25, "pend": [25, 973, 1990, 2020, 2029, 2039], "band": 25, "bor": 25, "bxor": 25, "premul_sum": 25, "suppos": [25, 58, 1247, 1770, 1971, 1995, 2024, 2043, 2044, 2045], "_make_nccl_premul_sum": 25, "__members__": 25, "reduce_op": 25, "mention": [25, 46, 1169, 1959, 1963, 1964, 1979, 1987, 1990, 1999, 2009, 2024, 2028, 2035, 2047, 2048, 2054], "stand": [25, 1162, 1166, 1963, 2012, 2022], "exemplifi": 25, "cpp_extens": [25, 1960, 1992], "cpp_c10d_extens": 25, "torchrun": [25, 28, 34, 41, 45], "benefici": [25, 1682, 1683, 1999], "nproc_per_nod": [25, 34], "num_gpus_you_hav": 25, "your_training_script": [25, 41, 43], "arg3": [25, 47], "192": [25, 613, 2009], "168": 25, "nnode": [25, 41, 43], "offer": [25, 49, 52, 1675, 1923, 1990, 1997, 2012, 2020, 2024, 2040, 2044, 2049], "local_process_rank": 25, "local_rank": [25, 33, 35, 40, 43, 45, 1527], "argpars": [25, 43, 1990], "parser": [25, 43, 1990], "argumentpars": [25, 43, 1990], "add_argu": [25, 43, 1990], "parse_arg": [25, 34, 43, 45, 1990, 2009], "output_devic": [25, 29, 43, 1424, 1527, 1659, 1675], "adjust": [25, 27, 29, 30, 31, 49, 1401, 1841, 1960, 1989, 2016, 2036, 2056], "launcher": [25, 43], "filesystem": [25, 27, 1959, 2012], "12042": 25, "wrong": [25, 58, 80, 896, 897, 901, 973, 1248, 1251, 1991, 2001, 2005, 2009, 2011, 2039, 2041], "imagenet": [25, 1985], "suit": [25, 1961, 1963, 1964, 2009, 2016, 2020, 2051], "pdb": [25, 1255, 1262, 1268, 1961, 1963], "streamlin": [25, 47, 77], "attach": [25, 47, 52, 57, 58, 135, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 789, 834, 836, 860, 1666, 1959, 1961, 1963, 1978, 1987, 1992, 2015, 2021, 2033, 2042], "rerout": 25, "termin": [25, 33, 42, 44, 47, 58, 1745, 1977, 2020, 2046], "sync": [25, 29, 49, 57, 58, 482, 1675, 1990, 1991, 2013, 2039, 2043], "group_gloo": 25, "29501": 25, "monitoredbarri": 25, "transport": [25, 2020], "598": 25, "2401": 25, "db00": 25, "eef0": 25, "1100": 25, "3560": 25, "1c05": 25, "25d": 25, "8594": 25, "torch_cpp_log_level": 25, "twolinlayernet": 25, "ddp": [25, 26, 27, 29, 49, 676, 1527, 1675, 1960, 1990, 1991, 2020, 2044], "i0607": 25, "739390": 25, "515217": 25, "logger": [25, 2033, 2034], "173": 25, "broadcast_buff": [25, 1675], "bucket_cap_byt": 25, "26214400": 25, "find_unused_paramet": [25, 1675, 1991], "gradient_as_bucket_view": [25, 1675], "is_multi_device_modul": 25, "num_parameter_tensor": 25, "total_parameter_size_byt": 25, "440": 25, "bucket_s": 25, "cuda_visible_devic": [25, 1067, 1675, 1990], "module_nam": [25, 58, 813, 850, 2012], "nccl_async_error_handl": [25, 1990], "nccl_blocking_wait": 25, "nccl_ib_timeout": 25, "nccl_nthread": 25, "58": [25, 2048], "085681": 25, "544067": 25, "344": 25, "unused_parameter_s": 25, "40838608": 25, "5983335": 25, "4326421": 25, "comp": [25, 31], "4207652": 25, "085693": 25, "544066": 25, "42850427": 25, "3885553": 25, "2357981": 25, "2234674": 25, "enhanc": [25, 49, 2042], "unus": [25, 29, 58, 910, 1037, 1051, 1255, 1262, 1449, 1675, 1738, 1961, 1963, 1964, 1990, 1991, 1997, 2012], "went": [25, 58], "wasn": [25, 42, 1322, 1961], "va": 25, "lue": 25, "indirectli": 25, "outstand": [25, 2020], "stuck": [25, 33, 44], "uninform": 25, "root": [25, 27, 35, 42, 43, 46, 49, 58, 789, 1164, 1288, 1289, 1753, 1816, 1875, 1973, 1987, 1995, 2012, 2020, 2021, 2024, 2044], "nontrivi": [25, 1172, 1180, 1990, 2042], "reveal": [25, 1991], "default_pg": 25, "opt": [25, 29, 1262, 1961, 1996], "longtensor": [25, 130, 131, 132, 311, 313, 315, 448, 467, 509, 511, 513, 870, 871, 1192, 1225, 1272, 1374, 1430, 1431, 1491, 1584, 1585, 1631, 1729, 1821, 1858, 1871, 1897, 1905, 1938, 2027, 2030], "set_debug_level": 25, "set_debug_level_from_env": 25, "get_debug_level": 25, "torch_show_cpp_stacktrac": 25, "disterror": 25, "distbackenderror": 25, "thrown": [25, 57, 613, 874, 876, 1055, 1096, 1214, 1250, 1281, 1290, 1292, 1294, 1297, 1298, 1309, 1488, 1680, 1936, 2007, 2012, 2047], "distnetworkerror": 25, "ex": [25, 34, 1172, 1675, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1975, 2053], "diststoreerror": 25, "outlin": [26, 2013, 2021, 2044], "joinabl": [26, 29, 1675, 1960], "joinhook": [26, 1960], "throw_on_early_termin": [26, 1675], "shadow": [26, 29, 1675, 2033, 2034], "notify_join_context": 26, "zeroredundancyoptim": [26, 29, 1675, 1960], "yet": [26, 33, 46, 47, 49, 54, 57, 58, 67, 76, 78, 79, 482, 1001, 1072, 1180, 1253, 1255, 1268, 1356, 1675, 1697, 1701, 1703, 1742, 1743, 1960, 1963, 1964, 1970, 1979, 1980, 1990, 2009, 2010, 2015, 2020, 2022, 2024, 2025, 2027, 2039, 2043, 2044, 2047, 2050, 2054], "vacuou": 26, "inherit": [26, 1708, 1961, 1963, 1980, 1992, 1999, 2001], "join_hook": [26, 29, 1675], "join_devic": [26, 29], "join_process_group": [26, 29], "repeatedli": [26, 1990, 2024], "main_hook": 26, "post_hook": 26, "is_last_join": 26, "dcp": 27, "reshard": [27, 49], "storag": [27, 49, 217, 307, 335, 338, 339, 431, 454, 479, 495, 516, 520, 554, 555, 580, 581, 583, 584, 874, 894, 896, 897, 901, 1022, 1089, 1150, 1221, 1225, 1236, 1250, 1258, 1322, 1344, 1383, 1384, 1424, 1488, 1504, 1803, 1817, 1824, 1854, 1859, 1863, 1877, 1901, 1907, 1924, 1946, 1959, 1960, 1962, 1968, 1974, 1977, 1987, 1990, 2001, 2004, 2012, 2020, 2024, 2027, 2028, 2030, 2043], "entrypoint": [27, 30, 33, 35, 40, 43, 46, 1968, 1977], "checkpoint_id": 27, "storage_read": 27, "planner": 27, "coordinator_rank": 27, "no_dist": 27, "style": [27, 30, 32, 58, 873, 1093, 1149, 1729, 1752, 1961, 1963, 1964, 2009, 2012, 2029, 2045], "fullfil": 27, "shardedtensor": [27, 49], "dtensor": [27, 30, 49], "po": [27, 2009], "pathlik": [27, 46, 58, 1322, 1817, 2012], "storageread": [27, 1960], "storagewrit": [27, 1960], "reader": 27, "loadplann": [27, 1960], "rank0": [27, 49], "my_model": [27, 1675, 1961, 2039, 2044, 2054], "mymodul": [27, 46, 47, 49, 58, 1254, 1255, 1257, 1261, 1262, 1268, 1489, 1490, 1498, 1499, 1961, 1963, 1964, 1994, 2004, 2020], "adagrad": [27, 1430, 1971, 2011, 2020], "model_state_dict": [27, 2007], "fs_storage_read": 27, "filesystemread": [27, 1960], "storage_writ": 27, "save_state_dict": [27, 1960], "fsdp": [27, 49, 482, 676, 1960, 2044], "shardingstrategi": [27, 49, 1960], "hybrid_shard": [27, 49], "shard_group": 27, "writer": [27, 1975, 1999, 2029], "saveplann": [27, 1960], "fs_storage_writ": 27, "filesystemwrit": [27, 1960], "automodul": 27, "act": [27, 31, 33, 40, 54, 854, 1401, 1489, 1490, 1499, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1709, 1710, 1711, 1712, 1713, 1923, 1990, 1999, 2003, 2011, 2047], "told": [27, 1963], "role": [27, 33, 34, 42, 43, 2047], "read_metadata": 27, "set_up_storage_read": 27, "prepare_local_plan": 27, "prepare_global_plan": 27, "read_data": 27, "central": [27, 60, 1204, 1996, 1998], "loadplan": [27, 1960], "storage_data": 27, "load_byt": 27, "bytesio": [27, 46, 1258, 1261, 1322, 1817, 2009, 2015], "resolve_tensor": 27, "storagelay": 27, "schedul": [27, 33, 35, 41, 57, 676, 1753, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1970, 1991, 1995, 1998, 2014, 2044], "checkpiont_id": 27, "is_coordin": 27, "validate_checkpoint_id": 27, "stroag": 27, "set_up_storage_writ": 27, "write_data": 27, "mark": [27, 42, 46, 57, 58, 60, 65, 69, 482, 822, 896, 897, 898, 901, 924, 971, 973, 1169, 1365, 1366, 1675, 1737, 1961, 1963, 1987, 1991, 1992, 1999, 2004, 2012, 2014, 2021, 2030, 2035, 2039, 2044, 2045], "recover": 27, "writeresult": 27, "saveplan": [27, 1960], "resolve_data": 27, "assumpt": [27, 39, 43, 46, 915, 971, 1407, 1441, 1987, 1991, 1996, 2020, 2021, 2024, 2042, 2044, 2050, 2054], "writeitem": [27, 1960], "tensor_data": 27, "set_up_plann": 27, "create_local_plan": 27, "create_global_plan": 27, "commit_tensor": 27, "defaultloadplann": [27, 1960], "rewrit": [27, 46, 54, 60, 62, 68, 69, 78, 79, 1973, 1987, 1996, 2006, 2007, 2009, 2041], "requit": 27, "intrincaci": 27, "renameplann": 27, "original_state_dict": 27, "foo_": [27, 1156], "v": [27, 39, 46, 53, 58, 483, 484, 540, 894, 905, 907, 908, 909, 935, 952, 1155, 1165, 1167, 1247, 1264, 1286, 1290, 1314, 1318, 1323, 1494, 1536, 1537, 1547, 1584, 1630, 1691, 1722, 1727, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1775, 1808, 1867, 1871, 1886, 1887, 1935, 1961, 1962, 1963, 1964, 1975, 1987, 1996, 2005, 2012, 2024, 2029, 2038], "flatten_sharded_tensor": 27, "_flatten_sharded_tensor": 27, "flatten_state_dict": 27, "read_item": 27, "dest_index": 27, "fqn": [27, 30, 46, 2034], "metamodelmateri": 27, "defaultsaveplann": [27, 1960], "global_plan": 27, "finish_plan": 27, "central_plan": 27, "alia": [27, 31, 36, 87, 88, 107, 183, 184, 349, 402, 432, 433, 440, 519, 537, 678, 862, 863, 864, 865, 866, 867, 868, 890, 933, 964, 978, 979, 1084, 1091, 1094, 1105, 1106, 1107, 1109, 1110, 1136, 1196, 1205, 1206, 1218, 1219, 1220, 1228, 1248, 1250, 1277, 1278, 1285, 1301, 1305, 1308, 1336, 1346, 1347, 1357, 1375, 1377, 1387, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1488, 1604, 1678, 1716, 1732, 1772, 1777, 1780, 1815, 1837, 1852, 1855, 1857, 1884, 1888, 1889, 1909, 1915, 1939, 1964, 1992, 2010, 2025, 2026, 2030, 2043, 2049], "readitem": [27, 1960], "planner_data": 27, "loaditemtyp": 27, "metadataindex": 27, "dest_offset": 27, "storage_index": 27, "storage_offset": [27, 134, 516, 613, 874, 1962, 1968, 2010, 2044, 2049], "tandem": 27, "fp16planner": 27, "write_item": 27, "writeitemtyp": 27, "byte_io": 27, "itertool": [27, 31, 954, 967], "islic": 27, "dataclass": [27, 46, 47, 2047, 2053], "ddploadbalancingplann": 27, "all_plan": 27, "saveextradataplann": 27, "merged_data": 27, "new_plan": 27, "prepar": [27, 30, 49, 58, 793, 835, 837, 853, 855, 857, 858, 859, 1165, 1260, 1965, 2009, 2033, 2034], "idempot": [27, 2020, 2022], "safeti": [27, 33, 46, 58, 482, 970, 971, 1179, 1961, 1964, 1979, 2003, 2045], "hi": [27, 1458, 1459, 1961, 1963, 1996], "peak": [27, 29, 49, 1047, 1049, 1055, 1062, 1063, 1064, 1675, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1761, 1767, 1995, 2013, 2051], "late": [27, 42, 482], "tensor_storage_s": 27, "single_file_per_rank": 27, "sync_fil": 27, "thread_count": 27, "per_thread_copy_ahead": 27, "10000000": 27, "simplif": [27, 2042], "atom": [27, 42, 58, 1965], "distributedtensor": [27, 30], "dedup_replicated_tensor": 27, "lookup_object": 27, "transform_object": 27, "lookup_tensor": 27, "transform_tensor": 27, "get_state_dict": [27, 1960], "fully_shard": 27, "tensor_parallel": 27, "parallelize_modul": [27, 30, 1960], "hide": [27, 55, 1167, 1935, 1993], "saniti": [27, 1993], "canon": [27, 33, 35, 1178, 1961, 2040, 2043], "named_paramet": [27, 46, 49, 51, 53, 1155, 1250, 1254, 1488, 1999, 2004, 2011], "named_buff": [27, 46, 49, 1250, 1488, 1999, 2004], "fullyshardeddataparallel": [27, 676, 1960, 1995], "fsdp_model": [27, 49], "deepcopi": [27, 53, 2015, 2034], "fsdp_optim": 27, "ddp_optim": 27, "ddp_state_dict": 27, "ddp_optim_state_dict": 27, "fsdp_state_dict": 27, "fsdp_optim_state_dict": 27, "ddp_optim_st": 27, "statedictopt": [27, 1960], "valuetyp": 27, "optimizerstatetyp": 27, "get_model_state_dict": [27, 1960], "get_optimizer_state_dict": [27, 1960], "set_state_dict": [27, 1960], "optim_state_dict": [27, 49], "counterpart": [27, 853, 860, 1320, 1675, 1964, 1973, 2032, 2033, 2042, 2044], "missing_kei": [27, 1250, 1488], "miss": [27, 40, 685, 1155, 1173, 1250, 1345, 1355, 1421, 1450, 1451, 1452, 1488, 1610, 1725, 1972, 1992, 2005, 2009, 2024, 2042, 2045, 2047], "unexpected_kei": [27, 1250, 1488], "set_model_state_dict": [27, 1960], "set_optimizer_state_dict": [27, 1960], "full_state_dict": [27, 49], "cpu_offload": [27, 49], "ignore_frozen_param": 27, "keep_submodule_prefix": 27, "offload": [27, 49], "oom": [27, 49, 1994, 2056], "frozen": [27, 29, 49, 1172, 1254, 1260, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1965, 2005], "layer1": [27, 2013], "fault": [28, 33, 41, 42, 1152], "toler": [28, 33, 41, 42, 58, 690, 915, 916, 1239, 1266, 1267, 1305, 1308, 1323, 1738, 1745, 1961, 2031], "quickstart": 28, "agent": [28, 34, 35, 36, 39, 41, 43, 44, 2020], "expir": 28, "metric": [28, 1047, 1049, 1055, 1769, 1975, 1999, 2014, 2029, 2044, 2051], "kubernet": 28, "distributedoptim": [29, 1675, 1960, 2020, 2021], "rref": [29, 1675, 1960, 1964, 2013, 2021], "optimizer_class": 29, "params_rref": 29, "get_gradi": [29, 2010, 2020, 2021], "multithread": [29, 913, 1990], "dist_autograd": [29, 1675, 2020, 2021], "rpc": [29, 57, 1675, 1960, 1964, 2013, 2021, 2022], "context_id": [29, 1675, 2020, 2021], "rref1": [29, 2020, 2021], "worker1": [29, 57, 1675, 2020, 2021], "rref2": [29, 2020, 2021], "to_her": [29, 1675, 2010, 2020, 2021, 2022], "dist_optim": [29, 1675, 2021], "postlocalsgdoptim": [29, 1960], "afer": 29, "modelaverag": 29, "localsgd": 29, "model_averag": 29, "post_localsgd_hook": 29, "postlocalsgdst": 29, "subgroup": 29, "start_localsgd_it": 29, "warmup_step": 29, "local_optim": 29, "periodicmodelaverag": 29, "checkpoint": [29, 43, 45, 49, 927, 1322, 1675, 1959, 1960, 1974, 1994, 1995, 2004, 2007, 2013, 2022, 2039], "parameters_as_bucket_view": 29, "overlap_with_ddp": 29, "consumpt": [29, 53, 1728, 2024, 2029, 2035], "partit": [29, 30, 1392, 1644, 1908, 2009, 2010, 2013, 2021, 2022, 2044, 2053], "registr": [29, 57, 1041, 1668, 1673, 1674, 1675, 1692, 1695, 1968, 2007, 2012, 2040], "offset": [29, 33, 221, 222, 223, 224, 335, 516, 554, 742, 874, 1086, 1087, 1088, 1089, 1152, 1285, 1431, 1549, 1550, 1585, 1675, 1787, 1788, 1866, 1912, 1914, 1962, 1964, 2004, 2041, 2047, 2049], "intact": [29, 2020], "ddp_zero_hook": 29, "disjointli": 29, "trail": [29, 1718, 1720, 1980, 1985, 1988, 1992], "wari": 29, "static_graph": [29, 1675], "third": [29, 31, 1097, 1098, 1340, 1392, 1399, 1417, 1420, 1457, 1483, 1767, 1960, 1961, 1990, 1993, 1999, 2012, 2014], "add_param_group": [29, 1695, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756], "param_group": [29, 49, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1752, 1753, 1754, 1755, 1756, 1763, 1766], "trainabl": [29, 1044, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1755, 1756, 1992], "consolidate_state_dict": 29, "consolid": [29, 49, 2013], "pertain": 29, "preced": [29, 33, 49, 676, 1670, 1767, 1907, 1965, 1989, 2011, 2015], "colwis": 30, "rowwis": 30, "parallelize_plan": 30, "tp_mesh_dim": 30, "sub_modul": 30, "parallelstyl": 30, "devicemesh": [30, 1960], "slice": [30, 58, 60, 69, 71, 603, 691, 692, 1402, 1403, 1404, 1521, 1523, 1527, 1650, 1651, 1726, 1806, 1823, 1824, 1854, 1865, 1917, 1961, 1965, 1980, 1990, 2009, 2010, 2024, 2025, 2028, 2030, 2044, 2049], "colwiseparallel": [30, 1960], "tp_mesh": 30, "w1": [30, 58], "w2": [30, 58], "rowwiseparallel": [30, 1960], "mlp": [30, 1666, 2007, 2015], "compos": [30, 31, 53, 58, 734, 735, 736, 737, 738, 739, 762, 763, 768, 769, 770, 778, 779, 959, 1157, 1159, 1160, 1161, 1167, 1250, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1415, 1416, 1417, 1418, 1419, 1420, 1435, 1436, 1455, 1456, 1457, 1476, 1481, 1482, 1483, 1488, 1536, 1541, 1542, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1568, 1569, 1570, 1571, 1572, 1573, 1588, 1589, 1611, 1614, 1615, 1616, 1618, 1619, 1620, 1790, 1791, 1935, 1960, 1961, 1964, 1978, 1992, 1993, 1999, 2007, 2009, 2012, 2029, 2047, 2049, 2050], "input_layout": 30, "output_layout": 30, "use_local_output": 30, "sharded_mod": 30, "mind": [30, 1296, 1314, 1430, 1987, 1993, 1996, 2015, 2036, 2044, 2047, 2052], "redistribut": [30, 2005], "preparemoduleinput": [30, 1960], "desired_input_layout": 30, "placehold": [30, 46, 58, 76, 795, 820, 830, 1172, 1449, 1990, 2040, 2041, 2053], "transformerblock": [30, 1995], "attn": [30, 1533, 1535], "preparemoduleoutput": [30, 1960], "desired_output_layout": 30, "parameteriz": 31, "tensorflow": [31, 1753, 1987, 2029], "backpropag": [31, 916, 1754, 1785, 1994, 2035], "surrog": 31, "likelihood": [31, 1392, 1441, 1495, 1502, 1590, 1629, 1637], "ratio": [31, 33, 613, 1435, 1436, 1588, 1589, 1962, 1990, 2024, 2051], "reinforc": [31, 1517, 1647], "polici": [31, 33, 35, 49, 1169, 1761, 1767], "reparameter": [31, 1155, 1691, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1713, 1714, 1715, 1727], "trick": [31, 907, 1401, 1595, 1987, 1996, 1998, 2044], "autoencod": 31, "whilst": [31, 1990], "densiti": [31, 254, 297, 1212, 1213, 1849, 1962, 2025], "log_prob": [31, 1392, 1407, 1577, 1962], "theta": [31, 1558, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1962], "alpha": [31, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 147, 148, 308, 309, 484, 550, 557, 558, 559, 560, 681, 682, 685, 686, 687, 740, 766, 771, 936, 1041, 1042, 1208, 1222, 1396, 1406, 1429, 1476, 1515, 1559, 1567, 1582, 1583, 1593, 1611, 1645, 1739, 1753, 1845, 1846, 1859, 1864, 1878, 1883, 1884, 1962, 1987, 1992, 2009, 2011, 2044, 2049], "partial": [31, 33, 42, 46, 49, 52, 58, 837, 1044, 1088, 1166, 1204, 1297, 1298, 1299, 1341, 1484, 1485, 1486, 1621, 1622, 1623, 1675, 1702, 1860, 1866, 1964, 1965, 1979, 1987, 1992, 1995, 1996, 2007, 2009, 2022, 2031, 2050], "pi": [31, 169, 373, 694, 946, 1208, 1209, 1302, 1437, 1502, 1591, 1637, 1759, 1760, 1779, 1840, 1841, 1844, 1845, 1846, 1847, 1882, 1963, 1964, 2012, 2025], "reward": 31, "ascent": 31, "prob": [31, 1962], "policy_network": 31, "next_stat": 31, "rsampl": 31, "parameter": [31, 373, 450, 1257, 1981, 2024], "has_rsampl": 31, "batch_shap": 31, "event_shap": 31, "validate_arg": 31, "arg_constraint": 31, "cdf": 31, "cumul": [31, 1077, 1078, 1079, 1080, 1081, 1330, 1402, 1403, 1404, 1437, 1461, 1462, 1463, 1527, 1591], "mass": 31, "enumerate_support": 31, "discret": [31, 48, 477, 482, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1133, 1135, 1595, 1849, 2029, 2032], "cardin": [31, 1352], "univari": 31, "singleton": [31, 250, 1460, 1922, 1988], "cartesian": [31, 954, 1352, 1779], "_instanc": 31, "icdf": 31, "perplex": 31, "sample_shap": 31, "sample_n": 31, "set_default_validate_arg": 31, "mimic": [31, 1767], "stddev": 31, "varianc": [31, 988, 1402, 1403, 1404, 1432, 1441, 1450, 1451, 1452, 1461, 1462, 1463, 1470, 1471, 1472, 1527, 1586, 1590, 1685, 1687, 1752, 1753, 1789, 1798, 1799, 1930, 1931, 1985, 1999], "exp_famili": 31, "famili": 31, "p_": [31, 958, 1342, 1755], "langl": 31, "rangl": 31, "denot": [31, 46, 58, 169, 988, 1179, 1271, 1290, 1296, 1309, 1319, 1415, 1416, 1453, 1692, 1695, 1755, 1868, 1869, 1870, 1872, 1873, 1932, 1972, 1996, 2018, 2021, 2024], "carrier": 31, "analyt": [31, 915, 916, 1584, 2024], "bregman": 31, "courtesi": 31, "frank": 31, "nielsen": 31, "richard": 31, "nock": 31, "logit": [31, 387, 1401, 1423, 1566, 1576, 1595, 1962, 2010, 2025], "70": [31, 931, 1309, 1785, 1980], "odd": [31, 1119, 1120, 1121, 1129, 1130, 1131, 1568, 1569, 1570], "interv": [31, 44, 254, 861, 934, 984, 1148, 1365, 1366, 1770, 1794, 1795, 1842, 1975, 1990, 1995, 2014], "lower_bound": 31, "upper_bound": 31, "has_enumerate_support": 31, "param_shap": 31, "concentration1": 31, "concentration0": 31, "concentr": 31, "1046": 31, "1st": [31, 1988, 1995], "2nd": [31, 613, 1496, 1522, 1632, 1988], "greaterthan": 31, "total_count": 31, "71": 31, "trial": [31, 282], "integergreaterthan": 31, "ldot": [31, 282, 1282, 1290, 1321, 1337, 1352, 1460, 1481, 1482, 1483, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "unnorm": [31, 1423, 1566, 1576, 1595], "likewis": [31, 1907], "25": [31, 492, 582, 583, 584, 931, 956, 1212, 1318, 1323, 1433, 1491, 1493, 1496, 1666, 1675, 1720, 1722, 1745, 1767, 1786, 1929, 1961, 2024, 2025], "independentconstraint": 31, "simplex": 31, "loc": [31, 1322], "lorentz": 31, "3214": 31, "width": [31, 775, 781, 854, 1211, 1212, 1213, 1398, 1399, 1416, 1417, 1419, 1420, 1456, 1457, 1482, 1483, 1495, 1522, 1540, 1604, 1663, 1979, 2024], "df": 31, "chi": 31, "continuous_bernoulli": 31, "lim": [31, 1247], "499": 31, "501": 31, "2538": [31, 1282], "pervas": 31, "loaiza": 31, "ganem": 31, "cunningham": 31, "jp": 31, "arxiv": [31, 1458, 1507, 1534, 1691, 1727, 1775, 1829, 1887, 1987, 2030], "ab": [31, 86, 87, 621, 622, 678, 956, 1098, 1282, 1303, 1304, 1306, 1307, 1320, 1323, 1458, 1507, 1534, 1537, 1539, 1634, 1691, 1727, 1730, 1769, 1775, 1779, 1829, 1960, 1962, 1964, 1978, 1979, 1980, 1990, 1999, 2010, 2024, 2030, 2039, 2040, 2041, 2044, 2047, 2049, 2054], "1907": 31, "06845": 31, "8954": 31, "greaterthaneq": 31, "df1": 31, "df2": 31, "fisher": 31, "snedecor": 31, "2453": 31, "degre": [31, 988, 1075, 1082, 1250, 1288, 1289, 1488, 1497, 1536, 1675, 1793, 1813, 1880, 1881, 1930, 1931, 1962, 1996, 2010, 2024], "freedom": [31, 988, 1880, 1881, 1930, 1931, 1996], "geometric_": [31, 1962, 2032], "0124": 31, "half_cauchi": 31, "half_norm": 31, "base_distribut": 31, "reinterpreted_batch_ndim": 31, "reinterpret": [31, 495, 2043], "diagon": [31, 54, 220, 256, 591, 592, 593, 594, 947, 984, 988, 1085, 1086, 1087, 1089, 1098, 1111, 1160, 1161, 1195, 1280, 1292, 1294, 1297, 1309, 1313, 1548, 1549, 1550, 1634, 1644, 1866, 1906, 1910, 1911, 1912, 1913, 1914, 1962, 1992, 2010, 2028, 2049], "multivari": [31, 1374, 2025], "multivariate_norm": 31, "mvn": 31, "scale_tril": 31, "diag": [31, 55, 1159, 1160, 1161, 1286, 1287, 1314, 1775, 1866, 1886, 1887, 1962, 2010], "diagn": 31, "inverse_gamma": 31, "2953": 31, "1729": [31, 1999], "lkj_choleski": 31, "lkj": 31, "matric": [31, 256, 682, 685, 936, 948, 949, 958, 959, 960, 961, 1086, 1195, 1271, 1280, 1281, 1282, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1323, 1331, 1340, 1342, 1355, 1438, 1497, 1558, 1592, 1689, 1695, 1773, 1775, 1785, 1833, 1859, 1863, 1864, 1886, 1887, 1910, 1911, 1913, 1962, 1978, 1996, 2002, 2024, 2030], "eta": [31, 1739, 1741, 1754], "proport": [31, 1455, 1456, 1457, 1494, 1535], "det": [31, 1288, 1289, 1310, 1331, 1962, 2010], "l": [31, 731, 756, 937, 946, 952, 959, 960, 961, 1098, 1208, 1209, 1250, 1270, 1280, 1281, 1286, 1287, 1288, 1289, 1293, 1297, 1298, 1340, 1342, 1397, 1400, 1401, 1402, 1415, 1423, 1426, 1427, 1434, 1439, 1447, 1448, 1450, 1453, 1454, 1458, 1470, 1479, 1481, 1488, 1490, 1494, 1495, 1503, 1519, 1536, 1537, 1539, 1644, 1701, 1710, 1718, 1720, 1745, 1821, 1882, 1962, 1964, 1987, 2029, 2041, 2054], "lkjcorr": 31, "onion": 31, "3x3": [31, 1081, 1908], "3516": 31, "9361": 31, "1899": [31, 1353], "4748": 31, "8593": 31, "vine": 31, "2009": [31, 1775, 1887], "lewandowski": 31, "dorota": 31, "kurowicka": 31, "harri": [31, 1849], "joe": 31, "journal": [31, 1792], "1016": 31, "jmva": 31, "04": [31, 1141, 1328, 1842, 1849], "008": 31, "corrcholeski": 31, "log_norm": [31, 2010], "lowrank_multivariate_norm": 31, "cov_factor": 31, "cov_diag": 31, "covari": [31, 949, 984, 988, 1402, 1403, 1404, 1527, 1775], "covariance_matrix": 31, "2102": 31, "5429": [31, 1910], "woodburi": 31, "lemma": 31, "formula": [31, 84, 764, 765, 885, 887, 901, 902, 937, 946, 1208, 1209, 1276, 1342, 1343, 1502, 1561, 1562, 1651, 1755, 1788, 1841, 1992, 1996, 2014, 2019, 2024, 2042], "capacit": 31, "precision_matrix": 31, "mixture_same_famili": 31, "mixture_distribut": 31, "component_distribut": 31, "rightmost": [31, 949, 1212, 1213, 1964], "gaussian": [31, 1437, 1441, 1517, 1590, 1591, 1647, 1848, 2025], "gmm": 31, "bivari": 31, "categori": [31, 35, 80, 1374, 1964, 1966, 2009, 2011, 2014, 2016, 2027, 2048, 2050], "innermost": [31, 58, 229, 1204, 1213, 1821], "1338": 31, "mathbf": [31, 1271, 1690, 1691, 1724, 1727, 1754], "sigma": [31, 169, 373, 756, 1401, 1438, 1439, 1440, 1458, 1459, 1517, 1518, 1592, 1647, 1690, 1724, 1843, 1880, 1881, 1930, 1931, 1962], "triangular": [31, 959, 960, 961, 1280, 1281, 1287, 1289, 1297, 1298, 1305, 1308, 1309, 1311, 1313, 1547, 1548, 1549, 1550, 1634, 1761, 1785, 1910, 1911, 1912, 1913, 1914], "decomposit": [31, 47, 58, 77, 959, 960, 961, 1195, 1280, 1281, 1286, 1287, 1288, 1289, 1290, 1292, 1297, 1298, 1299, 1300, 1305, 1309, 1310, 1314, 1315, 1340, 1342, 1689, 1773, 1775, 1779, 1785, 1886, 1887, 1960, 2002, 2042, 2043, 2053], "positivedefinit": 31, "lowercholeski": 31, "negative_binomi": 31, "halfopeninterv": 31, "mu": [31, 373, 1753, 1755], "one_hot_categor": 31, "onehot": 31, "5623": 31, "nonneg": [31, 1537, 1775, 1887, 2025], "pmf": 31, "mathrm": [31, 938, 1288, 1289, 1290, 1291, 1302, 1402, 1403, 1404, 1442, 1450, 1451, 1452, 1460, 1497, 1502, 1527, 1689, 1742, 1743, 1744, 1754, 1789, 1987, 2025], "relaxed_bernoulli": 31, "temperatur": [31, 1595, 1960], "parametr": [31, 1155, 1692, 1699, 1724, 1725, 1727, 1981, 1992], "relax": [31, 999, 1033, 1266, 1267, 1695, 2015, 2044], "reparametriz": 31, "99": [31, 1262, 1753, 1961], "2951": [31, 1350], "3442": 31, "8918": 31, "9021": 31, "maddison": 31, "2017": [31, 1531, 1533, 1535, 1867, 2005], "reparametr": [31, 1595, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1707, 1727], "jang": 31, "relaxed_categor": 31, "1294": [31, 959], "2324": [31, 1250, 1488], "3859": 31, "2523": 31, "student": 31, "transformed_distribut": 31, "composit": [31, 54, 1159, 1298, 1689, 1961, 1964, 1968, 1993, 1999, 2009], "basedistribut": 31, "dx": [31, 1081, 1400, 1908, 1962, 1992, 1993, 2025], "dy": 31, "logist": [31, 1517, 1520, 1647, 2025], "sigmoidtransform": 31, "affinetransform": 31, "invert": [31, 58, 1241, 1282, 1291, 1292, 1298, 1304, 1311, 1313, 1316, 1317, 1331, 1484, 1485, 1486, 1910, 1962, 2002, 2020], "3418": 31, "upper": [31, 46, 47, 60, 68, 69, 70, 71, 177, 178, 179, 590, 791, 947, 952, 959, 960, 961, 963, 1112, 1113, 1175, 1211, 1212, 1280, 1281, 1287, 1289, 1297, 1298, 1309, 1313, 1506, 1548, 1550, 1634, 1642, 1643, 1644, 1761, 1767, 1785, 1800, 1821, 1910, 1913, 1914, 1962, 1985, 2010, 2025, 2031], "von_mis": 31, "circular": [31, 1409, 1410, 1411, 1415, 1416, 1417, 1464, 1465, 1466, 1632], "von": 31, "mise": 31, "unconstrain": [31, 1695], "angl": [31, 751, 880, 1082, 1331, 1474, 1779, 1793, 1836, 1960, 1962, 2010, 2024], "9777": 31, "radian": [31, 694, 880, 1082, 1793, 1962, 2010], "simul": [31, 484, 795, 797, 2015, 2018, 2042], "1979": 31, "152": [31, 613], "157": 31, "_rejection_sampl": 31, "88443": 31, "4784": [31, 1355], "symmetr": [31, 798, 816, 937, 946, 959, 960, 961, 1119, 1120, 1121, 1126, 1128, 1132, 1133, 1135, 1208, 1209, 1270, 1280, 1281, 1286, 1287, 1289, 1293, 1294, 1295, 1302, 1305, 1308, 1314, 1323, 1689, 1695, 1767, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 2015, 2018], "x_ij": 31, "wu": [31, 1323], "chu": 31, "2018": [31, 1323, 1783], "sawyer": 31, "2007": 31, "anderson": 31, "w": [31, 55, 146, 756, 885, 887, 889, 896, 899, 901, 902, 910, 937, 946, 988, 1157, 1173, 1192, 1208, 1209, 1247, 1290, 1390, 1391, 1398, 1399, 1401, 1403, 1404, 1408, 1416, 1417, 1423, 1427, 1428, 1430, 1431, 1432, 1439, 1451, 1452, 1460, 1471, 1472, 1482, 1483, 1493, 1494, 1495, 1500, 1501, 1522, 1538, 1539, 1541, 1542, 1558, 1566, 1584, 1585, 1593, 1629, 1635, 1636, 1690, 1691, 1724, 1727, 1962, 1978, 1979, 1985, 1987, 1992, 1996, 2011, 2012, 2029, 2052], "2003": 31, "ed": [31, 54, 1426, 1427, 1987, 2012, 2035, 2052, 2055], "odel": 31, "feiveson": 31, "1966": 31, "samplecovari": 31, "jasa": 31, "61": 31, "313": 31, "199": 31, "203": [31, 613], "ku": 31, "bloomfield": 31, "2010": [31, 1985], "ox": 31, "max_try_correct": 31, "bartlett": [31, 937], "singular": [31, 1282, 1296, 1297, 1303, 1305, 1307, 1308, 1314, 1315, 1323, 1331, 1340, 1690, 1695, 1775, 1886, 1887, 2002], "inf": [31, 46, 49, 254, 680, 682, 685, 686, 687, 881, 936, 952, 1239, 1240, 1242, 1244, 1245, 1282, 1297, 1303, 1307, 1310, 1320, 1331, 1378, 1478, 1521, 1531, 1644, 1680, 1701, 1710, 1730, 1814, 1821, 1986, 1987, 1993, 2002, 2025, 2031, 2054], "accordingli": [31, 58, 1260, 1458, 1695, 1980, 2020, 2050], "kl_diverg": 31, "kullback": [31, 1453, 1605], "leibler": [31, 1453, 1605], "notimplementederror": [31, 1972, 2012, 2047], "register_kl": 31, "type_p": 31, "type_q": 31, "pairwis": [31, 1447, 1497, 1536], "kl_normal_norm": 31, "ambigu": [31, 58, 1235, 1418, 1419, 1420, 1434, 1484, 1485, 1486, 1540, 1964], "runtimewarn": 31, "basep": 31, "derivedq": 31, "kl_version1": 31, "derivedp": 31, "baseq": 31, "kl_version2": 31, "tie": 31, "abstransform": 31, "cache_s": [31, 2047], "event_dim": 31, "pointwis": [31, 968, 1160, 1161, 1328, 1329, 1453, 1978, 1988, 2043, 2046, 2048], "affin": [31, 49, 468, 469, 470, 471, 472, 745, 747, 748, 749, 798, 1402, 1403, 1404, 1442, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1527, 1558, 1990, 1999], "cattransform": 31, "tseq": 31, "functor": [31, 1041, 1042], "submatrix": 31, "x0": [31, 2046], "t0": [31, 46, 1204, 1739, 1963], "exptransform": 31, "identity_transform": 31, "composetransform": 31, "corrcholeskytransform": 31, "uncontrain": 31, "euclidean": [31, 956, 1630], "x_i": [31, 54, 963, 1077, 1078, 1079, 1080, 1319, 1326, 1478, 1497, 1521, 1523, 1536, 1613, 1650, 1782, 1865, 1880, 1881, 1908, 1930, 1931, 1932, 2025], "stickbreakingtransform": 31, "r_i": 31, "tanh": [31, 573, 756, 761, 791, 881, 1437, 1439, 1440, 1458, 1459, 1487, 1503, 1505, 1529, 1591, 1624, 1656, 1962, 1978, 1979, 1985, 2010, 2017, 2024, 2049], "unsign": [31, 2018, 2027, 2030, 2031, 2044], "z_i": 31, "s_i": 31, "y_i": [31, 963, 1077, 1078, 1079, 1080, 1319, 1326, 1536, 1908, 1932, 1996], "sqrt": [31, 58, 373, 545, 669, 670, 756, 984, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1217, 1270, 1352, 1402, 1403, 1404, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1437, 1439, 1440, 1442, 1450, 1451, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1473, 1475, 1503, 1505, 1527, 1591, 1644, 1695, 1740, 1741, 1742, 1743, 1746, 1752, 1753, 1789, 1816, 1848, 1880, 1881, 1962, 1978, 1985, 1986, 1987, 2010, 2024, 2025, 2031, 2049], "cumulativedistributiontransform": 31, "copula": 31, "base_dist": 31, "independenttransform": 31, "base_transform": 31, "log_abs_det_jacobian": 31, "lowercholeskytransform": 31, "positivedefinitetransform": 31, "powertransform": 31, "expon": [31, 264, 265, 276, 464, 465, 1141, 1148, 1274, 1304, 1392, 1476, 1630, 1782, 1792, 1829, 1962, 2027, 2030, 2049], "reshapetransform": 31, "in_shap": 31, "out_shap": 31, "softplustransform": 31, "tanhtransform": 31, "softmaxtransform": 31, "biject": 31, "hmc": 31, "stacktransform": 31, "stick": [31, 2011], "aris": [31, 58, 1987, 2042], "primarili": [31, 47, 57, 811, 812, 813, 819, 1172, 1384, 1975, 2015, 2030], "memoiz": [31, 2043], "_call": 31, "_invers": 31, "codomain": [31, 1987], "iff": [31, 1494], "weaker": [31, 1990], "pseudoinvers": [31, 1291, 1308, 1316], "monoton": [31, 1487, 1624, 1821], "forward_shap": 31, "inverse_shap": 31, "corr_choleski": 31, "greater_than": 31, "greater_than_eq": 31, "integer_interv": 31, "less_than": 31, "lower_choleski": 31, "lower_triangular": 31, "nonnegative_integ": 31, "one_hot": [31, 1962, 2010], "positive_integ": 31, "positive_semidefinit": 31, "positive_definit": 31, "real_vector": 31, "unit_interv": 31, "is_discret": 31, "constrain": [31, 46, 1175, 1180, 1524, 1964, 1999], "_cat": 31, "dependent_properti": 31, "_dependentproperti": 31, "_greaterthan": 31, "_greaterthaneq": 31, "_independentconstraint": 31, "_integerinterv": 31, "_interv": 31, "half_open_interv": 31, "_halfopeninterv": 31, "_lessthan": 31, "_multinomi": 31, "_stack": [31, 2010], "constraintregistri": 31, "biject_to": 31, "transform_to": 31, "overparameter": 31, "rotat": [31, 1813, 1886], "hamiltonian": 31, "mont": 31, "carlo": 31, "invari": [31, 46, 1716, 1861, 1868, 1869, 1870, 1871, 1872, 1873, 2022, 2024, 2039, 2053], "potential_energi": 31, "cheap": [31, 1172, 1392, 2044], "svi": 31, "fewer": [31, 46, 54, 689, 691, 692, 695, 962, 1271, 1272, 1338, 1348, 1350, 1351, 1353, 1356, 1379, 1382, 1441, 1575, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1783, 1867, 1880, 1881, 1885, 1904, 1930, 1931, 1970, 1988, 2004, 2031, 2056], "my_constraint": 31, "my_transform": 31, "myconstraintclass": 31, "my_factori": 31, "mytransform": 31, "param1": [31, 1999], "param2": [31, 1999], "constraint_registri": 31, "my_registri": 31, "construct_transform": 31, "myconstraint": 31, "from_dlpack": [32, 876, 1960], "ext_tensor": [32, 1149], "extern": [32, 1002, 1149, 1266, 1926, 1975, 1989, 1990, 2002, 2009, 2035], "immut": [32, 1149, 1964], "__dlpack__": [32, 1149], "capsul": [32, 876, 1149], "pycapsul": [32, 1149], "to_dlpack": [32, 1149, 1960], "t2": [32, 683, 684, 876, 1149, 1204, 1675, 1928, 2020, 2021, 2044, 2054], "dltensor": [32, 1149], "t3": [32, 1149, 2021], "legaci": [32, 43, 46, 1595, 2014, 2027], "idiomat": 32, "inde": [32, 1961, 1971, 2012, 2022, 2047, 2050], "plane": [33, 42, 734, 735, 736, 737, 738, 739, 762, 763, 764, 765, 768, 769, 770, 778, 779, 1086, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1415, 1416, 1417, 1418, 1419, 1420, 1435, 1436, 1455, 1456, 1457, 1460, 1476, 1481, 1482, 1483, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1588, 1589, 1611, 1614, 1615, 1616, 1618, 1619, 1620, 1691, 1727, 1790, 1791, 1813], "monitor": [33, 43, 44, 82, 1001, 1362, 1769, 1960, 1990, 1997], "unhealthi": 33, "tear": 33, "react": [33, 2050], "decentr": 33, "diagram": [33, 42, 1250, 1488, 2015, 2022, 2041, 2044, 2054], "elasticag": 33, "quad": [33, 1400, 1401, 1423, 1454, 1479, 1495, 1537, 1798], "group_result": 33, "is_fail": [33, 34], "exit_cod": 33, "return_valu": [33, 34, 40, 2041], "get_worker_group": 33, "workergroup": [33, 43], "mutabl": [33, 1266, 1961, 2012, 2029], "implementor": 33, "defens": 33, "retri": [33, 35, 44, 1055, 2020, 2022], "max_restart": [33, 34, 43], "runresult": 33, "workerspec": [33, 34, 43, 44], "local_world_s": [33, 34, 43], "rdzv_handler": [33, 34, 42], "monitor_interv": [33, 34], "local_addr": [33, 42], "tee": [33, 40], "blueprint": 33, "spec": [33, 34, 44, 46, 47, 60, 789, 790, 815, 816, 817, 820, 821, 822, 2007, 2017, 2030], "homogen": [33, 43], "rendezvoushandl": [33, 34, 42, 43], "rdzv": [33, 41, 43], "chose": [33, 1986, 2042], "consol": [33, 36, 39, 40, 43, 2029], "get_entrypoint_nam": 33, "__qualname__": 33, "workerst": 33, "unknown": [33, 47, 1677, 1678, 2022], "unrecover": 33, "interrupt": [33, 1977, 2052], "succeed": [33, 42, 1340, 2044], "uncaught": [33, 35], "unhandl": 33, "recov": [33, 894, 1119, 1310, 1342, 1675, 1716, 1882, 1986, 1990, 1994, 1996, 2016], "is_run": 33, "role_rank": [33, 43], "role_world_s": [33, 43], "pid": [33, 35, 43, 44, 1527, 1994, 2014], "local_elastic_ag": 33, "localelasticag": [33, 34, 44], "start_method": [33, 34, 40, 44, 1977], "exit_barrier_timeout": 33, "log_dir": [33, 40, 1975, 2029], "log_line_prefix_templ": 33, "local_ranks_filt": [33, 40], "advis": [33, 540, 613, 861, 2001], "pipe": [33, 44, 1960, 2020], "torchelastic_enable_file_tim": 33, "torchelastic_timer_fil": 33, "role_nam": 33, "trainer0": [33, 2020], "foobar": [33, 35, 39, 40], "templat": [33, 968, 1041, 1042, 2011], "substitut": [33, 42, 58, 77, 1263, 1987, 2027], "shared_queu": 33, "get_context": [33, 44, 2001], "nproc_per_process": 33, "other_param": [33, 44], "usr": [33, 40, 42, 1990], "bin": [33, 40, 42, 296, 297, 815, 939, 1211, 1212, 1213, 1962, 1964, 2010, 2029, 2051], "simpleelasticag": 33, "scaffold": 33, "_assign_worker_rank": 33, "group_world_s": 33, "_exit_barri": 33, "guard": [33, 60, 65, 69, 676, 968, 1171, 1172, 1175, 1179, 1181, 1182, 1183, 1188, 1189, 1190, 1191, 1970, 2001, 2010, 2012, 2032, 2035, 2044, 2050, 2054, 2055], "_initialize_work": 33, "worker_group": 33, "fresh": [33, 1089, 1174, 1177, 1824, 1854, 1959], "start_work": 33, "_stop_work": 33, "optimist": 33, "deleg": 33, "_monitor_work": 33, "_rendezv": 33, "_restart_work": 33, "_shutdown": 33, "death_sig": 33, "sigterm": 33, "_start_work": 33, "gracefulli": [33, 42, 43, 54, 1281, 1993, 2044], "meaning": [33, 35, 36, 1055, 1990, 2048], "meaningless": 33, "intention": [33, 1095, 1932, 1997, 2020], "ship": [34, 1156, 1989, 2020], "programmat": [34, 58, 1999], "my_launch": 34, "argv": [34, 45], "trainer_entrypoint_fn": 34, "fn_arg": 34, "run_result": 34, "tricki": [34, 50, 55, 1987, 1999, 2022, 2039], "myrendezvoushandl": 34, "elastic_ag": 34, "servic": [34, 1991, 2042], "metrichandl": [34, 39], "mymetrichandl": 34, "metric_data": [34, 39], "metricdata": 34, "sink": [34, 39, 1975], "eventhandl": 34, "cloudwatch": 34, "nulleventhandl": 34, "myeventhandl": 34, "invalid": [35, 40, 971, 1250, 1374, 1488, 1986, 1987, 2003, 2007, 2009, 2012, 2013, 2043, 2047], "infra": [35, 2053], "start_process": [35, 40, 1977], "torchelastic_error_fil": 35, "smallest": [35, 47, 957, 1272, 1282, 1303, 1307, 1323, 1784, 1905, 2031, 2054, 2057], "timestamp": [35, 36, 39, 43, 1975, 2014, 2029, 2054], "error_handl": 35, "sugar": [35, 1963], "get_error_handl": 35, "childfailederror": 35, "get_first_failur": 35, "dump_error_fil": 35, "error_fil": [35, 40], "exitcod": [35, 43], "nanni": 35, "accur": [35, 922, 1001, 1204, 1326, 1362, 1401, 1429, 1792, 1908, 1990, 2021, 2035, 2043], "diagnost": [35, 75, 76, 77, 78, 79, 82, 676, 1961], "torchelastic_ag": 35, "trainer_0": 35, "trainer_1": 35, "json": [35, 40, 44, 1998, 2014, 2048, 2052], "trainer_n": 35, "errorhandl": 35, "record_except": 35, "processfailur": 35, "test_ev": 36, "eventsourc": 36, "get_logging_handl": 36, "millisecond": [36, 39, 1001, 1362, 1975], "eventmetadatavalu": 36, "readm": [37, 38, 788, 1980], "telemetri": 39, "timeseri": 39, "metric_group": 39, "metric_nam": 39, "sensibl": 39, "my_modul": [39, 47, 49, 58, 1961, 2012], "nullmetricshandl": 39, "consolemetricshandl": 39, "my_method": 39, "put_metr": 39, "calculate_lat": 39, "succinctli": 39, "baz": [39, 58, 850, 2012, 2031], "leaf_modul": 39, "classnam": [39, 1964], "threw": [39, 2056], "my_app": 39, "consolemetrichandl": 39, "toi": [39, 2054], "stdout": [39, 40, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 2009], "stdoutmetrichandl": 39, "1574213883": 39, "4182858": 39, "my_metr": 39, "1574213940": 39, "5237644": 39, "nullmetrichandl": 39, "class_nam": [39, 58], "def_nam": 39, "leaf": [39, 47, 146, 218, 331, 444, 484, 499, 500, 787, 834, 836, 875, 889, 1165, 1737, 1901, 1980, 1986, 1987, 1995, 2009, 2034, 2043], "metric_valu": 39, "metric_group_nam": 39, "popen": 40, "stderr": [40, 1959, 1974], "err": 40, "echo": 40, "hello": [40, 54, 1963, 2012], "pcontext": 40, "multiprocesscontext": 40, "subprocesscontext": 40, "log_line_prefix": 40, "keyset": 40, "bitmask": 40, "bar0": 40, "bar1": 40, "file1": 40, "file2": 40, "caution": [40, 2045], "short": [40, 58, 730, 759, 1098, 1182, 1247, 1407, 1458, 1459, 1577, 1736, 1833, 1882, 1963, 1968, 1978, 1987, 1988, 1999, 2020, 2026, 2027, 2030, 2041], "ing": 40, "cmd": [40, 43], "forkserv": [40, 1675, 1977, 2001], "tee_stdout": 40, "tee_stderr": 40, "processcontext": [40, 1977], "superset": [40, 43], "runprocsresult": 40, "num_nod": [41, 43], "trainers_per_nod": 41, "num_allowed_failur": 41, "job_id": [41, 42, 43], "endpoint": [41, 42, 43], "host_node_addr": [41, 43], "min_siz": [41, 43], "num_allowed_failures_or_membership_chang": 41, "node1": [41, 43], "29400": [41, 43], "sidecar": [41, 42], "agre": [42, 1309, 2022], "resum": [42, 1761, 1767, 1769, 2020, 2022, 2029, 2041, 2044], "retryabl": 42, "announc": 42, "previous": [42, 46, 49, 50, 53, 54, 55, 58, 694, 788, 789, 924, 1167, 1182, 1258, 1880, 1881, 1930, 1931, 1935, 1961, 1988, 1990, 1999, 2012, 2013, 2019, 2020, 2025, 2036, 2047, 2050, 2056], "lose": [42, 45, 49, 187, 204, 1979], "train_loop": [42, 858], "arriv": [42, 43, 2020, 2022], "dynamicrendezvoushandl": 42, "rendezvousbackend": 42, "c10drendezvousbackend": 42, "etcdrendezvousbackend": 42, "supersed": [42, 1173], "etcdrendezvoushandl": 42, "my_run_id": 42, "from_backend": 42, "run_id": [42, 43], "min_nod": 42, "max_nod": 42, "rendezvousparamet": 42, "admit": [42, 43, 1990], "get_as_bool": 42, "get_as_int": 42, "rendezvoushandlerregistri": 42, "create_handl": 42, "creator": [42, 1987, 2020, 2022], "get_run_id": 42, "is_clos": 42, "set_clos": 42, "next_rendezv": 42, "rendezvousclosederror": 42, "rendezvousconnectionerror": 42, "rendezvousstateerror": 42, "rendezvoustimeouterror": 42, "num_nodes_wait": 42, "shutdown": [42, 2020, 2021], "rendezvouserror": 42, "rendezvousgracefulexiterror": 42, "dynamic_rendezv": 42, "join_timeout": 42, "600": 42, "last_call_timeout": 42, "close_timeout": 42, "rendezvoustimeout": 42, "get_stat": [42, 84], "fenc": 42, "token": [42, 999, 1033, 1034, 1959, 1965, 2046], "set_stat": [42, 84], "last_cal": 42, "heartbeat": 42, "keep_al": 42, "c10d_rendezvous_backend": 42, "create_backend": 42, "store_typ": 42, "tcp": [42, 43, 2020], "read_timeout": 42, "60": [42, 44, 931, 1441, 1771, 1898, 1903, 1975, 2020, 2041], "is_host": 42, "skip": [42, 47, 855, 970, 1098, 1152, 1280, 1281, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1854, 1925, 1961, 1986, 1987, 1990, 1991, 1992, 1999, 2011, 2014, 2020, 2042, 2044, 2045, 2047], "cname": 42, "fqdn": [42, 43], "etcd_rendezvous_backend": 42, "ssl_cert": 42, "ssl": 42, "certif": 42, "ssl_cert_kei": 42, "privat": [42, 49, 1172, 1990, 1992, 2012, 2039, 2044], "ca_cert": 42, "rool": 42, "key_prefix": 42, "ttl": 42, "hour": 42, "etcd_rendezv": 42, "rdzv_impl": 42, "etcdrendezv": 42, "etcd_address": 42, "min_work": 42, "max_work": 42, "noqa": 42, "w605": 42, "2379": [42, 1348], "etcd_prefix": 42, "etcdstor": 42, "etcd_stor": 42, "etcd_client": 42, "etcd_store_prefix": 42, "c10": [42, 1998, 2036, 2042], "piggyback": 42, "num": [42, 741, 742, 756, 1374, 1439, 1442, 1458, 1494, 1503, 1531, 2001], "lookuperror": 42, "override_timeout": 42, "etcdserv": 42, "cumbersom": [42, 1964], "highli": [42, 1392, 1675, 1959, 2000, 2007, 2009, 2024, 2031], "etcd_serv": 42, "data_dir": 42, "v3": [42, 43], "torchelastic_etcd_binary_path": 42, "get_client": 42, "etcd_binary_path": 42, "entry_point": [43, 2040], "migrat": [43, 50, 1352, 1727, 2018], "train_script": 43, "aforment": 43, "suffic": [43, 58], "compliant": [43, 45], "num_train": 43, "wors": [43, 1923, 2044], "port_k": 43, "etcd": 43, "v2": [43, 1319, 1774, 1959], "revis": 43, "physic": [43, 229, 1116, 1134, 1965, 1989, 2001, 2024, 2044], "localworkergroup": 43, "rdzv_id": 43, "rdzv_backend": [43, 45], "rdzv_endpoint": [43, 45], "max_nnod": 43, "torchelastic_restart_count": 43, "far": [43, 1260, 1593, 2042], "torchelastic_max_restart": 43, "python_exec": 43, "gang": 43, "departur": 43, "surviv": 43, "kill": [43, 44, 1977, 1994], "frequenc": [43, 939, 988, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1247, 1392, 1430, 1431, 1584, 1585, 1761, 1882, 2053], "ness": [43, 2043], "load_checkpoint": [43, 45], "checkpoint_path": [43, 45], "dataset": [43, 45, 60, 794, 1392, 1401, 1453, 1960, 1994, 1998, 2001, 2005, 2011, 2015, 2016, 2029], "train_step": 43, "should_checkpoint": 43, "save_checkpoint": [43, 45], "acquir": [44, 58, 1999, 2022, 2024], "deadlin": 44, "message_queu": 44, "localtimerserv": 44, "max_interv": 44, "trainer_func": 44, "localtimercli": 44, "expiri": 44, "timer_cli": 44, "countdown": 44, "timefram": [44, 2020], "elig": [44, 2022], "reap": 44, "timerserv": 44, "mp_queue": 44, "daemon": [44, 1977], "filetimerserv": 44, "file_path": 44, "log_ev": [44, 1975], "filetimercli": 44, "fifo": 44, "watchdog": 44, "filetimerrequest": 44, "sigkil": 44, "named_pip": 44, "mkfifo": 44, "timercli": 44, "timerrequest": 44, "scope_id": 44, "expiration_tim": 44, "acquisit": 44, "whatev": [44, 58, 444, 1171, 1675, 1825, 1910, 1964, 1993, 2043, 2044], "request_queu": 44, "entiti": [44, 58], "clear_tim": 44, "get_expired_tim": 44, "register_tim": 44, "timer_request": 44, "use_env": 45, "expositori": 45, "worst": [45, 1992], "total_num_epoch": 45, "visit": [45, 2009, 2047, 2048], "WILL": 46, "BE": 46, "aot": [46, 676, 970, 1970, 2035, 2036, 2044, 2045, 2054], "example_arg": 46, "exported_program": [46, 2007], "exportedprogram": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "arg1_1": [46, 60, 62, 63, 65, 66, 68, 69, 70, 71, 72, 2007], "exportgraphsignatur": [46, 47, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "user_input": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "user_output": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "inputs_to_paramet": 46, "inputs_to_buff": 46, "buffers_to_mut": 46, "backward_signatur": 46, "assertion_dep_token": 46, "sound": [46, 58, 970, 971, 1169, 1516, 2029, 2045], "convent": [46, 49, 58, 331, 957, 1098, 1116, 1118, 1142, 1165, 1172, 1402, 1403, 1404, 1450, 1451, 1452, 1527, 1814, 1817, 1916, 1959, 1974, 1980, 1987, 1996, 1999, 2004], "opset": [46, 2007, 2009, 2010, 2040, 2049], "alias": [46, 49, 894, 1156, 1167, 1604, 1935, 1963, 1964, 1968, 1992, 2043], "stacktrac": [46, 47, 60, 69], "leverag": [46, 968, 2006, 2007, 2020, 2035, 2038, 2046], "_dynamo": [46, 60, 71, 968, 1991, 2035, 2039, 2040, 2041, 2042, 2047, 2050, 2052, 2054], "massiv": [46, 2047], "pt2": [46, 2042, 2043], "artifact": [46, 676, 1882, 1970, 1998, 2012, 2036, 2052, 2054], "untrac": [46, 58], "disjoint": [46, 1961], "usabl": [46, 57, 1964, 2008, 2009, 2041], "traceabl": [46, 58, 620, 813, 1176, 1961, 2015, 2042], "symbolic_trac": [46, 47, 58, 2015], "comprehens": [46, 77, 1849, 1964, 1965, 1979, 1990, 1997, 2015, 2036], "simpler": [46, 55, 1167, 1935, 1961, 1987, 1992, 1996, 1999], "straight": [46, 1400, 1595], "conv": [46, 58, 698, 699, 700, 701, 702, 703, 704, 705, 706, 788, 789, 792, 810, 850, 856, 1250, 1260, 1266, 1267, 1415, 1416, 1417, 1418, 1419, 1420, 1488, 1489, 1495, 1684, 1685, 1687, 1973, 1985, 1990, 2002, 2009, 2015, 2016, 2017, 2018, 2048, 2050], "in_channel": [46, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 1260, 1415, 1416, 1417, 1418, 1419, 1420, 1464, 1465, 1466, 1467, 1468, 1469], "out_channel": [46, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 1260, 1415, 1416, 1417, 1418, 1419, 1420, 1464, 1465, 1466, 1467, 1468, 1469], "kernel_s": [46, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 764, 765, 778, 779, 1250, 1260, 1397, 1398, 1399, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1435, 1436, 1455, 1456, 1457, 1464, 1465, 1466, 1467, 1468, 1469, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1539, 1560, 1561, 1562, 1571, 1572, 1573, 1587, 1588, 1589, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1662, 1790, 1791, 1962, 2029, 2049], "maxpool": [46, 792, 1435, 1436, 1588, 1589, 2009], "maxpool2d": [46, 779, 1485, 1489, 1619, 1622, 2009, 2017], "256": [46, 1407, 1782, 1990, 2009], "example_kwarg": 46, "arg2_1": [46, 60, 65, 66, 68, 69, 2007], "arg3_1": [46, 60, 66, 2007], "max_pool2d_with_indic": [46, 1962, 2010, 2049], "getitem": [46, 60, 63, 68, 69, 72, 2053], "85": [46, 58, 1491, 1767, 2048, 2052], "l__self___conv": 46, "lift": [46, 47, 55, 1167, 1935, 1979, 2010, 2043], "get_attr": [46, 58, 76], "branch1": 46, "64": [46, 52, 53, 55, 931, 968, 1080, 1160, 1161, 1165, 1389, 1390, 1391, 1393, 1394, 1395, 1401, 1516, 1644, 1822, 1925, 1980, 2004, 2005, 2007, 2009, 2015, 2019, 2024, 2027, 2029, 2030, 2044, 2046], "branch2": 46, "128": [46, 613, 716, 724, 725, 752, 760, 790, 815, 816, 1405, 1422, 1449, 1475, 1497, 1536, 1537, 1575, 1644, 1979, 1980, 2007, 2015, 2017, 2018, 2020, 2024, 2027, 2030, 2052], "x2": [46, 60, 66, 956, 1298, 1480, 1536, 1537, 1575, 1633, 1962, 2044, 2049], "out1": [46, 1156, 1962, 2044], "out2": [46, 1156, 1962, 2044], "arg4_1": [46, 60, 66, 2007], "arg5_1": [46, 60, 66, 2007], "arg6_1": [46, 60, 66, 2007], "permute_1": 46, "addmm_1": 46, "relu_1": [46, 58], "l__self___buff": 46, "rangeconstraint": [46, 47], "min_val": [46, 774, 1446, 1599, 1600, 1962, 2049], "max_val": [46, 774, 1446, 1599, 1600, 1962, 2049], "9223372036854775806": 46, "range_constraint": [46, 47], "dynamic_dim": [46, 1168, 1169, 1172], "saved_exported_program": 46, "example_input": [46, 813, 814, 857, 858, 1262, 1266, 2015, 2034, 2036, 2040, 2041, 2043, 2047], "rewritten": [46, 1996], "const": [46, 1441, 1998], "add_1": [46, 58, 60, 63, 65, 68, 69, 1156], "add_2": [46, 58, 60, 63, 65], "shot": 46, "nearli": [46, 146, 889, 910, 1775, 2001, 2020, 2054], "imposs": [46, 1167, 1179, 1935, 1986], "unsupport": [46, 54, 60, 74, 77, 78, 80, 83, 1961, 1965, 1979, 2007, 2020, 2024, 2044, 2047, 2050], "exportdb": [46, 2032], "combinatori": 46, "explod": [46, 1519], "cond": [46, 47, 54, 60, 63, 69, 2002], "undergo": [46, 75], "refin": [46, 1257, 1979], "fake": [46, 58, 80, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 789, 795, 796, 806, 808, 834, 857, 858, 1112, 1113, 1172, 2007, 2012, 2015, 2018, 2035], "mod": [46, 47, 58, 717, 718, 728, 734, 735, 736, 741, 742, 752, 760, 806, 807, 808, 809, 832, 833, 860, 1155, 1253, 1254, 1260, 1267, 1725, 1927, 1963, 1964, 2012, 2033, 2040, 2054], "preserve_module_call_signatur": 46, "fatal": [46, 1977, 2001], "dim0_x": [46, 60, 62, 68, 69], "verbatim": 46, "bake": [46, 58, 60, 69, 1254, 1260, 1742, 1743, 1755, 2011], "diverg": [46, 1183, 1266, 1267, 1453, 1605, 1960, 1964], "register_dataclass": [46, 47], "ordereddict": [46, 1250, 1488, 1489, 1498, 1516, 1666, 1706, 1962, 1999, 2004, 2031, 2047], "debug_nam": 46, "unbound": [46, 1171, 1175, 1179], "t1": [46, 683, 684, 876, 1204, 1675, 1928, 1963, 2020, 2021], "extra_fil": [46, 1258, 1261], "opset_vers": [46, 2007, 2009, 2010], "txt": [46, 1258, 1261, 2012, 2036, 2054], "decod": [46, 49, 1322, 1531, 1532, 1533, 1675, 2012], "utf": [46, 1322, 2009, 2012], "expected_opset_vers": 46, "rb": [46, 1258, 1322], "seek": [46, 1258, 1322, 2012, 2015], "cl": [46, 60, 62, 135, 1992, 2015, 2020, 2055], "inputdataclass": 46, "outputdataclass": 46, "polymorph": [46, 1963], "graph_signatur": [46, 47], "module_call_graph": 46, "tensor_const": 46, "exportbackwardsignatur": 46, "gradients_to_paramet": 46, "gradients_to_user_input": 46, "loss_output": 46, "input_spec": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "output_spec": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "gurante": 46, "getattr": [46, 58, 1962, 1992, 2004, 2020, 2047], "parameters_buffers_constant_tensor": 46, "flattened_user_input": 46, "mutated_input": 46, "flattened_user_output": 46, "custommodul": [46, 834, 2007, 2015], "my_paramet": [46, 1963, 2007], "register_buff": [46, 1250, 1488, 1668, 1961, 1963, 1992, 1999, 2007], "my_buffer1": [46, 2007], "my_buffer2": [46, 2007], "add_tensor": [46, 47], "call_funct": [46, 58, 60, 74, 76, 78, 79, 2040, 2041, 2044, 2047, 2053, 2054], "mul_tensor": 46, "mul_tensor_1": 46, "add_tensor_1": 46, "add_tensor_2": 46, "inputspec": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "inputkind": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "tensorargu": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "outputspec": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "outputkind": [46, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 2007], "buffer_mut": [46, 2007], "modulecallsignatur": 46, "symintargu": [46, 60, 69], "constantargu": [46, 60, 62], "customobjargu": 46, "in_spec": 46, "_pytre": [46, 60], "treespec": 46, "out_spec": 46, "modulecallentri": 46, "nonetyp": [46, 1962, 1964], "replace_all_us": 46, "get_replace_hook": 46, "class_fqn": 46, "unflatten": [46, 49, 1962, 1978, 1979, 1981, 2010, 2028], "flatargsadapt": 46, "target_spec": 46, "input_arg": [46, 1737, 2009], "input_args_with_path": 46, "interpretermodul": 46, "codegen": [46, 47, 58, 1992, 2044, 2048, 2054], "flat_args_adapt": 46, "hierachi": 46, "swap": [46, 56, 58, 411, 613, 784, 785, 786, 789, 793, 860, 1256, 1340, 1536, 1537, 1660, 1661, 1907, 1928, 1962, 1965, 1990, 2015, 2024, 2026, 2033], "submod": [46, 58], "new_mod": 46, "unflattenedmodul": 46, "wrappermodul": 46, "bear": 47, "mlir": 47, "soundli": 47, "audienc": 47, "realiz": [47, 1829], "implic": [47, 1248, 1266, 1992, 2020, 2024], "highlight": [47, 726, 727, 1964], "bundl": [47, 1998], "notabl": [47, 968, 1964, 2036], "graph_modul": [47, 855, 2041, 2053], "sympi": [47, 1172, 1178, 2042], "i0": [47, 302, 1270, 1848, 1962, 2010, 2025], "dag": [47, 1990], "acycl": [47, 788, 1987], "collorari": 47, "textual": 47, "machineri": [47, 58, 1992, 2044], "op_nam": [47, 1968, 2007], "meta": [47, 49, 53, 58, 332, 1960, 1968, 2007, 2020, 2027, 2029, 2031, 2042, 2043, 2045, 2053], "arg4": 47, "arg5": 47, "compact": [47, 1114, 1115, 1117, 1293, 1295, 1298, 1992, 2009, 2015], "args1": 47, "add1": 47, "predefin": [47, 2009], "readign": 47, "referenc": [47, 58, 1002, 1250, 1488, 1910, 1963, 1987, 2009, 2020, 2041, 2047], "19": [47, 681, 742, 961, 1485, 1961, 2009, 2024, 2041, 2048], "dummy_help": 47, "helper_util": 47, "89": [47, 613, 1793, 2048], "val": [47, 60, 63, 68, 1041, 1172, 1184, 1256, 1257, 1962, 1964, 1985, 2043, 2047], "nn_module_stack": 47, "came": [47, 2047], "self_linear": 47, "self_sequenti": 47, "source_fn_stack": 47, "source_fn": 47, "encapsul": [47, 57, 58, 2007, 2020, 2039], "control_flow": [47, 60, 63, 68, 69, 72], "x_1": [47, 1077, 1078, 1079, 1080, 1318, 1405, 1421, 1422, 1564, 1575, 1908], "num_us": [47, 58], "y_1": [47, 1908], "higher_ord": [47, 60, 63, 68, 69, 72], "liter": [47, 1736, 1962, 1965, 1979, 2012, 2053, 2056], "dim_ord": 47, "tensormeta": 47, "promot": [47, 49, 77, 681, 941, 944, 953, 1041, 1093, 1141, 1143, 1144, 1145, 1146, 1373, 1426, 1427, 1428, 1432, 1575, 1784, 1804, 1805, 1811, 1826, 1883, 1964, 2007, 2027, 2031, 2043, 2044, 2049], "max_pool2d_with_index": 47, "add_on": 47, "ph_0": 47, "jax": [47, 50, 53, 54, 55, 1987, 1993, 2044], "int64_t": [47, 1736], "scalartyp": [47, 2049], "memoryformat": [47, 2049], "memory_format": [47, 58, 151, 166, 168, 171, 174, 175, 176, 185, 191, 202, 205, 229, 236, 263, 293, 321, 327, 389, 495, 496, 521, 576, 965, 1099, 1100, 1154, 1250, 1488, 1675, 1682, 1683, 1735, 1795, 1797, 1799, 1958, 1960, 1962, 1992, 2031, 2049], "_register_pytree_nod": 47, "sharding_strategi": 49, "auto_wrap_polici": 49, "backward_prefetch": 49, "backwardprefetch": [49, 1960], "backward_pr": [49, 1250, 1488], "mixed_precis": [49, 1675], "ignored_modul": 49, "param_init_fn": 49, "sync_module_st": 49, "forward_prefetch": [49, 1995], "limit_all_gath": [49, 1995], "use_orig_param": 49, "ignored_st": 49, "inspir": [49, 1745, 1992, 2046], "deepspe": 49, "shorten": 49, "sharded_modul": 49, "0001": [49, 58, 1079, 1295, 1476, 1611, 1739, 1769, 1962, 2011], "stale": 49, "dev_id": 49, "no_sync": [49, 1675], "ping": 49, "77724": 49, "isol": [49, 58, 1666, 1977, 2011, 2013, 2054], "summon_full_param": 49, "illeg": [49, 1990, 2042], "shard_grad_op": 49, "unshard": [49, 1995], "full_shard": 49, "with_grad": 49, "reacquir": 49, "gap": [49, 861, 1801, 1960, 2015, 2052], "delai": [49, 482, 1675, 2022, 2044], "nccl_cross_nic": 49, "cpuoffload": [49, 1960], "modulewrappolici": 49, "custompolici": 49, "proceed": [49, 1001, 1362, 1441, 2021, 2022], "nonwrapped_numel": 49, "travers": [49, 832, 1675, 1991, 1992, 2021, 2033, 2034, 2047], "subtre": 49, "size_based_auto_wrap_polici": 49, "exce": [49, 1328, 1990, 2001], "100m": 49, "numel": [49, 431, 440, 966, 988, 1129, 1235, 1962, 1978, 1987, 2010, 2024], "custom_auto_wrap_polici": 49, "min_num_param": 49, "1e8": 49, "my_auto_wrap_polici": 49, "functool": [49, 52, 60, 837, 1860, 1992, 2031], "1e5": 49, "mixedprecis": [49, 1960], "granular": [49, 76, 1264, 1986, 2052], "is_meta": [49, 2010, 2044], "reset_paramet": 49, "torchdistx": 49, "deferred_init": 49, "materialize_modul": 49, "my_init_fn": 49, "fullstatedictconfig": [49, 1960], "flatparamet": 49, "unifi": [49, 1960, 1979], "check_is_root": 49, "clip_grad_norm_": [49, 1679, 1986], "max_norm": [49, 741, 742, 1430, 1431, 1584, 1585, 1679, 1680, 1962, 1986], "norm_typ": [49, 741, 742, 1430, 1431, 1455, 1456, 1457, 1584, 1585, 1614, 1615, 1616, 1679, 1680, 1962], "clip": [49, 984, 1679, 1680, 1681, 1962, 1981, 1993, 2009, 2010], "infin": [49, 986, 1240, 1242, 1244, 1245, 1378, 1400, 1481, 1482, 1483, 1618, 1619, 1620, 1680, 1744, 1853, 1865, 2024, 2025], "no_shard": 49, "largest": [49, 586, 939, 1142, 1282, 1303, 1305, 1307, 1308, 1323, 1631, 1690, 1905, 1962, 1963, 1964, 2049, 2053, 2057], "fp32": [49, 777, 790, 813, 1083, 1675, 1990, 1995, 2002, 2015, 2016, 2018, 2046], "flatten_sharded_optim_state_dict": 49, "sharded_optim_state_dict": 49, "shard_full_optim_state_dict": 49, "fsdp_modul": 49, "root_onli": 49, "full_optim_state_dict": 49, "optim_input": 49, "rank0_onli": 49, "get_state_dict_typ": 49, "state_dict_typ": 49, "statedictset": [49, 1960], "assertionerror": [49, 58, 60, 62, 67, 69, 80, 730, 1737, 2031, 2054], "differen": 49, "intercept": [49, 58, 1992, 2045], "occurr": [49, 398, 890, 933, 1248, 1351, 1716, 1919, 1920, 2042], "statedicttyp": 49, "fulloptimstatedictconfig": [49, 1960], "set_state_dict_typ": 49, "save_a_checkpoint": 49, "load_a_checkpoint": 49, "optim_state_dict_to_load": 49, "is_named_optim": 49, "load_directli": 49, "original_osd": 49, "namedoptim": 49, "keyedoptim": 49, "torchrec": [49, 1960], "gossipgrad": [49, 1675], "latter": [49, 683, 787, 1250, 1458, 1488, 1495, 1993, 1999, 2001, 2003], "rekey_optim_state_dict": 49, "optim_state_key_typ": 49, "loadabl": [49, 1959], "wrapped_model": 49, "wrapped_optim": 49, "full_osd": 49, "nonwrapped_model": 49, "nonwrapped_optim": 49, "rekeyed_osd": 49, "optimstatekeytyp": 49, "param_id": 49, "osd": 49, "param_nam": 49, "sharded_osd": 49, "scatter_full_optim_state_dict": 49, "new_model": 49, "new_optim": 49, "resid": [49, 57, 192, 285, 333, 1322, 1675, 1990, 2013, 2020], "remap": [49, 84, 411, 1254, 1258, 1322, 1343, 1959, 1974, 2019], "state_dict_config": 49, "optim_state_dict_config": 49, "descend": [49, 58, 132, 538, 872, 1250, 1314, 1315, 1488, 1858, 1886, 1962, 2049], "transpar": [49, 1991, 2013, 2020, 2022], "sharded_state_dict": 49, "shardedstatedictconfig": [49, 1960], "offload_to_cpu": 49, "optimstatedictconfig": [49, 1960], "param_state_dict": 49, "statedictconfig": [49, 1960], "writeback": 49, "summon": 49, "portion": [49, 1147, 1424, 1519, 1634, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 2016, 2045, 2054], "discard": [49, 1247, 1308, 1693, 1959, 1963, 1975], "redundantli": [49, 1986], "materi": [49, 896, 900, 901, 902, 981, 1548, 1549, 1550, 1677, 1678, 1756, 1809, 1810, 1992, 2044], "throughput": [49, 1961, 1989, 1990, 1995], "backward_post": 49, "altogeth": [49, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756], "contend": 49, "volum": [49, 1213], "_hybrid_shard_zero2": 49, "freed": [49, 146, 889, 910, 1007, 1055, 1977, 1990, 1995, 1997, 2020, 2026, 2039, 2056], "param_dtyp": 49, "reduce_dtyp": 49, "buffer_dtyp": 49, "keep_low_precision_grad": 49, "cast_forward_input": 49, "cast_root_forward_input": 49, "_module_classes_to_ignor": 49, "batchnorm": [49, 696, 697, 1164, 1250, 1260, 1488, 1527, 1675, 1684, 1685, 1686, 1687, 1973, 1981, 1987, 1999, 2011, 2013, 2015, 2017, 2018], "_batchnorm": [49, 1684, 1686], "kept": [49, 53, 58, 693, 775, 781, 1402, 1403, 1404, 1450, 1451, 1452, 1527, 1604, 1663, 1964, 1977, 1995, 2018, 2024], "permit": [49, 1171, 1179, 2024], "thereaft": 49, "local_state_dict": 49, "upcast": 49, "recast": 49, "offload_param": 49, "cfg": 49, "finetun": [49, 1250, 1488], "model_fn": 49, "my_checkpoint": 49, "_use_dtensor": 49, "localstatedictconfig": [49, 1960], "shardedoptimstatedictconfig": [49, 1960], "localoptimstatedictconfig": [49, 1960], "love": 50, "hear": 50, "vmap": [50, 52, 53, 58, 901, 902, 904, 906, 910, 915, 916, 1157, 1160, 1161, 1163, 1165], "arbitrarili": [50, 55, 509, 1253, 1558, 1964, 1987, 1992, 1993], "stock": [50, 55], "ensembl": [50, 53, 55, 1165], "maml": [50, 55], "vjp": [50, 53, 54, 885, 886, 896, 901, 902, 1161, 1167, 1935, 1992, 1993], "whirlwind": 50, "tour": 50, "ux": [50, 55, 1169, 2015, 2047], "jacrev": [51, 53, 54, 906, 1159, 1160, 1993], "functional_cal": [51, 53, 1165, 2044], "running_mean": [52, 1164, 1250, 1402, 1403, 1404, 1450, 1451, 1452, 1461, 1462, 1463, 1470, 1471, 1472, 1488, 1527, 1563, 1603, 1962, 1999, 2004, 2049], "running_var": [52, 1164, 1250, 1402, 1403, 1404, 1450, 1451, 1452, 1461, 1462, 1463, 1470, 1471, 1472, 1488, 1527, 1563, 1603, 1962, 2004, 2049], "groupnorm": [52, 1594], "anywher": [52, 1986], "batchnorm2d": [52, 709, 712, 714, 719, 810, 1260, 1424, 1462, 1563, 1973, 1987, 1999, 2015, 2017], "track_running_stat": [52, 747, 748, 749, 1164, 1402, 1403, 1404, 1450, 1451, 1452, 1461, 1462, 1463, 1470, 1471, 1472, 1527, 2004], "resnet": [52, 1959, 1961, 1963, 1999, 2012, 2029, 2033], "regnet": 52, "norm_lay": 52, "resnet18": [52, 58, 1959, 1961, 1963, 1974, 2012, 2052], "num_group": [52, 745, 1442, 1594, 1962], "fragil": 52, "replace_all_batch_norm_modules_": 52, "upstream": [53, 2005], "reflect": [53, 454, 516, 552, 1151, 1152, 1155, 1247, 1415, 1416, 1417, 1464, 1465, 1466, 1509, 1510, 1511, 1593, 1632, 1725, 1770, 1882, 1961, 1962, 1994, 2028, 2039], "coupl": [53, 77, 1961, 1998, 2006, 2021, 2039, 2053], "jvp": [53, 54, 886, 891, 894, 895, 896, 900, 901, 902, 1163, 1992], "jacfwd": [53, 54, 906, 1159, 1993], "carefulli": [53, 57, 482, 1968, 1993, 2012, 2043, 2045], "make_functional_with_buff": 53, "hurri": 53, "gist": [53, 789, 1996, 2047, 2048], "emul": [53, 795, 1965, 1992], "fmodel": 53, "compute_loss": [53, 55, 1155, 1157], "predict": [53, 482, 1392, 1401, 1441, 1576, 2011, 2029, 2036], "And": [53, 793, 820, 1077, 1078, 1155, 1178, 1250, 1272, 1348, 1353, 1407, 1488, 1924, 1926, 1987, 1992, 1993, 1995, 2005, 2009, 2015, 2034, 2040, 2045, 2046, 2047], "argnum": [53, 1157, 1158, 1159, 1160, 1161], "carri": [53, 332, 793, 834, 835, 853, 854, 1968, 1988, 2015], "stack_module_st": 53, "num_model": [53, 1165], "in_featur": [53, 716, 724, 725, 728, 729, 752, 760, 1165, 1250, 1392, 1473, 1475, 1488, 1666, 1689, 1690, 1691, 1723, 1724, 1727, 1972, 1999], "out_featur": [53, 716, 724, 725, 728, 729, 752, 760, 1165, 1250, 1405, 1473, 1475, 1488, 1666, 1689, 1690, 1691, 1723, 1724, 1727, 1972, 1999], "base_model": 53, "clearer": [53, 1307, 1756, 1992, 2007], "call_single_model": 53, "aotautograd": [53, 676, 1970, 1991, 2043, 2044, 2045, 2054], "stori": [53, 1996], "grad_x": [54, 1993, 2044], "has_aux": [54, 1157, 1158, 1160, 1161, 1162, 1166], "mental": [54, 1156], "absenc": [54, 2036], "unbind": [54, 1167, 1935, 1960, 1962, 1978, 2010, 2028], "presenc": [54, 58, 1260, 1379, 2001, 2012, 2024, 2050], "pop": [54, 935, 1059, 1489, 1498, 2010, 2013, 2014, 2047], "lst": 54, "in_dim": [54, 55, 888, 901, 902, 1157, 1167, 1935, 1993], "batchedtensor": 54, "batched_tensor_input": 54, "new_": [54, 1990, 2030], "new_zero": [54, 1962, 2010], "new_empti": [54, 1962, 1968, 2010], "diag_emb": [54, 1088, 1286, 1287, 1314, 1886, 1962, 2010], "vec": [54, 103, 104, 420, 686, 1376, 1726, 1962, 2024, 2049], "copy_": [54, 56, 411, 1156, 1540, 1961, 1962, 1978, 1990, 2026], "arithmet": [54, 941, 944, 958, 1306, 1811, 1965, 1975, 1978, 1979, 2002, 2015, 2027], "extra_arg": 54, "theoret": 54, "custom_dot": 54, "lax": 54, "while_loop": 54, "is_nonzero": [54, 1962, 2010, 2024, 2044], "rag": 54, "unclear": [54, 613], "add_nois": 54, "prng": 54, "cos_x": [55, 1157], "neg_sin_x": [55, 1157], "feature_s": [55, 1157, 1167, 1935], "feature_vec": [55, 1157, 1167, 1935], "mseloss": [55, 1157, 1448, 1519, 1625, 1990, 1991], "grad_weight_per_exampl": [55, 1157], "cotang": [55, 1166], "vjp_fn": [55, 1166], "out_tang": 55, "hessian0": 55, "hessian1": 55, "hess": [55, 1159], "set_overwrite_module_params_on_convers": [56, 1960], "get_overwrite_module_params_on_convers": [56, 1960], "set_swap_module_params_on_convers": [56, 1960], "swap_tensor": [56, 411, 1960], "module_load": 56, "get_swap_module_params_on_convers": [56, 411, 1960], "rpc_async": [57, 1964, 2010, 2020, 2022], "add_done_callback": 57, "fut": [57, 1253, 1675, 1989, 2020], "set_result": [57, 1675, 2020], "haven": [57, 1999], "set_except": 57, "baseexcept": 57, "valueerror": [57, 60, 80, 890, 933, 1248, 1695, 1696, 1716, 1719, 1992, 2007, 2013, 2031, 2053], "twice": [57, 613, 905, 1163, 1986, 1987, 1994, 1996, 2043], "slow_set_futur": 57, "sleep": 57, "cb1": 57, "cb2": 57, "dedic": [57, 1990], "pool": [57, 762, 763, 764, 765, 778, 779, 999, 1033, 1034, 1044, 1055, 1359, 1360, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1435, 1436, 1455, 1456, 1457, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1561, 1562, 1588, 1589, 1614, 1615, 1616, 1618, 1619, 1620, 1790, 1791, 1960, 1989, 1990, 1992, 1999, 2001, 2017, 2020, 2039], "didn": [57, 1992, 1995, 2005, 2011], "cb_fut": 57, "chain_cb_fut": 57, "cb": [57, 2020], "held": [57, 999, 1023, 1051, 1361, 1986, 2046], "collect_al": [57, 1960], "fut0": 57, "fut1": [57, 2020], "fut_list": 57, "wait_al": [57, 1960], "toolkit": 58, "clamp": [58, 182, 183, 795, 798, 964, 1257, 1400, 1441, 1593, 1604, 1663, 1962, 1973, 1978, 2009, 2010, 2015, 2017, 2018, 2025, 2031, 2049], "call_modul": [58, 76, 2053], "call_method": [58, 76, 2040, 2041, 2047], "feed": [58, 1961, 1994, 1999, 2033, 2043], "theses": 58, "callsit": 58, "constitut": 58, "tracer_class": 58, "gm": [58, 2040, 2041, 2043, 2047, 2053, 2054], "treatment": 58, "topk": [58, 1962, 1978, 2010, 2049], "print_tabular": [58, 2040, 2041, 2047], "opcod": [58, 2012, 2040, 2041, 2047], "linear_weight": 58, "linear_1": 58, "topk_1": 58, "pose": [58, 2021], "explor": [58, 75, 1959, 1987, 1999, 2012, 2056], "edit": [58, 1968, 2012, 2028], "lint": 58, "inserting_aft": [58, 2053], "new_nod": 58, "replace_all_uses_with": [58, 2053], "tediou": 58, "unwieldi": 58, "fusion": [58, 676, 788, 810, 856, 857, 968, 1252, 1259, 1264, 1265, 1266, 1267, 1682, 1683, 1973, 1999, 2015, 2044, 2046, 2053, 2054], "imagin": [58, 2020, 2045], "requisit": 58, "relu_decomposit": 58, "decomposition_rul": 58, "constitu": [58, 1980, 1992, 1995], "new_graph": 58, "graphappendingtrac": 58, "proxy_arg": 58, "output_proxi": 58, "node_copi": 58, "ari": [58, 2009], "unari": [58, 1160, 1161, 1531, 1533, 1535, 1965, 1978], "organiz": 58, "shapeprop": 58, "named_modul": [58, 1250, 1488, 1999], "args_it": 58, "load_arg": 58, "map_arg": 58, "fetch_attr": 58, "target_atom": 58, "attr_itr": 58, "hasattr": [58, 1924, 1962, 1992, 2015, 2041, 2047], "nonexist": [58, 1963, 1964], "elif": [58, 1257, 1453, 1963, 1964, 1997, 2007, 2047, 2053], "self_obj": 58, "encompass": 58, "prove": [58, 1977], "disprov": 58, "led": [58, 2056], "auxiliari": [58, 1157, 1158, 1160, 1161, 1162, 1166, 1959, 1998], "nondeterminist": [58, 309, 311, 317, 495, 511, 513, 939, 1099, 1100, 1101, 1272, 1407, 1415, 1416, 1417, 1418, 1419, 1420, 1484, 1485, 1486, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1585, 1593, 1604, 1632, 1644, 1663, 1664, 1665, 1828, 1923, 2040], "unord": [58, 1489, 1498], "nondetermin": [58, 916, 2003], "dedupl": [58, 2009], "straightforward": [58, 1971, 1980, 1999, 2011, 2024, 2040, 2047], "torchvis": [58, 1959, 1960, 1961, 1963, 2009, 2012, 2015, 2029, 2033, 2052], "transformed_resnet18": 58, "input_imag": 58, "224": [58, 857, 858, 1961, 1963, 2009, 2052], "margin": [58, 1421, 1447, 1480, 1491, 1493, 1536, 1537, 1574, 1601, 1617, 1626, 1660, 1661, 1962, 2029], "commut": 58, "toolbox": 58, "tradit": [58, 1535, 2006, 2007], "luckili": 58, "my_pass": 58, "my_module_transform": 58, "input_valu": 58, "prompt": [58, 1959, 2005], "set_trac": [58, 1255, 1262, 1268, 1961], "examin": [58, 1999, 2009, 2014, 2056], "undergon": 58, "subclassm": 58, "pre_trac": 58, "post_trac": 58, "sake": 58, "tabular": [58, 676, 1970], "transform_graph": 58, "session": [58, 2007], "luck": 58, "input_nod": 58, "stepwis": 58, "breakpoint": [58, 1964, 2053], "excel": [58, 2045], "onlin": [58, 1741], "realpython": 58, "pycharm": 58, "vscode": 58, "graphic": [58, 1976, 2005, 2052], "parlanc": 58, "func_to_trac": 58, "dyn": 58, "155": 58, "__bool__": [58, 1962, 1964], "to_bool": 58, "traceerror": [58, 2015], "hyper": [58, 1519, 1963, 2029], "do_activ": 58, "512": [58, 1531, 1532, 1533, 1534, 1535, 1990, 2038], "without_activ": 58, "with_activ": 58, "traced_without_activ": 58, "traced_with_activ": 58, "concrete_arg": 58, "truli": [58, 1968, 2006, 2009], "__torch_function__": [58, 2055], "161": 58, "len_1": 58, "sqrt_1": 58, "truediv": [58, 2040, 2041], "mycustomtrac": 58, "traced_graph": 58, "runnabl": [58, 1986, 2009, 2029, 2054], "myspecialsubmodul": 58, "neg_1": 58, "is_leaf_modul": [58, 2034], "sparse_coo_tensor": [58, 540, 577, 1867, 1962, 1966, 2010, 2024], "ones_lik": [58, 1160, 1161, 1166, 1962, 1980, 1990, 1992, 1993, 1999, 2010], "zeros_lik": [58, 896, 898, 900, 901, 902, 1962, 1966, 1980, 1990, 2010, 2024], "viabl": [58, 1990], "torch_randn": 58, "gotcha": 58, "dropoutrepro": 58, "assert_clos": [58, 1115, 1117, 1118, 1123, 1124, 1129, 1130, 1131, 1133, 1135, 1960, 1961, 2031], "greatest": [58, 1193, 1378, 2009, 2031], "6207983493804932": 58, "dropoutrepro2": 58, "overspeci": [58, 968, 2042], "ph": 58, "shouldn": [58, 999, 2012, 2024, 2028], "fn_or_nam": 58, "callfunct": 58, "my_custom_funct": 58, "fn_to_be_trac": 58, "reassign": [58, 1990], "regener": 58, "unset": [58, 931, 2002], "add_submodul": 58, "subpath": 58, "get_submodul": [58, 1250, 1488], "delete_all_unused_submodul": 58, "delete_submodul": 58, "print_read": [58, 2041], "print_output": 58, "date": [58, 2012], "pythoncod": 58, "fxmodul": 58, "owning_modul": 58, "tracer_cl": 58, "tracer_extra": 58, "the_funct": 58, "type_expr": 58, "create_nod": 58, "method_nam": 58, "0th": [58, 1167, 1935], "inserting_befor": 58, "influenc": [58, 2007, 2024], "eliminate_dead_cod": 58, "dead": [58, 2053], "topolog": [58, 2009], "attr_1": 58, "is_impur": 58, "bad": [58, 60, 1977, 2009, 2012, 2015, 2043, 2052], "erase_nod": 58, "to_eras": 58, "eras": [58, 60, 65, 66, 2042], "qualified_nam": 58, "graph_copi": 58, "val_map": 58, "return_output_nod": 58, "opoverload": [58, 1968], "companion": 58, "__exit__": [58, 1964, 1965, 2012], "arg_transform": 58, "value_remap": 58, "_node_list": 58, "doubli": 58, "on_generate_cod": 58, "make_transform": 58, "transformcodefunc": 58, "insert_pdb": 58, "bodi": [58, 60, 69, 72, 1262, 1961, 1963, 1964, 1965, 2007, 2041, 2054], "current_tran": 58, "stuff": [58, 2043], "default_valu": 58, "_not_": 58, "tabul": 58, "process_input": 58, "process_output": 58, "python_cod": 58, "root_modul": [58, 789, 2017], "set_codegen": 58, "return_typ": [58, 693, 1077, 1078, 1213, 1272, 1310, 1348, 1351, 1353, 1356, 1380, 1858, 1905, 1910], "printout": [58, 1043, 1056, 2041], "all_input_nod": 58, "format_nod": 58, "placeholder_nam": 58, "maybe_return_typenam": 58, "autogener": [58, 1993], "insert_arg": 58, "impur": 58, "normalized_argu": 58, "arg_typ": 58, "kwarg_typ": 58, "normalize_to_only_use_kwarg": 58, "vararg": 58, "argskwargspair": 58, "bx": 58, "ax": [58, 961, 1282, 1296, 1300, 1311, 1312, 1313, 1341, 1352, 1496, 1506, 1910, 2009, 2044], "prev": [58, 1754], "replace_with": 58, "delete_user_cb": 58, "propagate_meta": 58, "replace_input_with": 58, "old_input": 58, "new_input": 58, "create_proxi": 58, "record_stack_trac": 58, "dynamo": [58, 75, 676, 1172, 1970, 1991, 2040, 2042, 2043, 2044, 2045, 2047, 2048, 2050, 2051, 2052, 2054], "outputgraph": [58, 2047], "update_arg": 58, "update_kwarg": 58, "autowrap_modul": 58, "autowrap_funct": 58, "create_arg": 58, "create_args_for_root": 58, "root_fn": 58, "is_modul": 58, "introspect": [58, 970, 2044], "disallow": [58, 2012, 2020, 2027, 2044, 2045], "proxy_factory_fn": 58, "attr": [58, 60, 62, 146, 1176, 1352, 1814], "attr_val": 58, "parameter_proxy_cach": 58, "module_qualified_nam": [58, 2034], "path_of_modul": 58, "some_hyperparamet": 58, "indexed_item": 58, "proxied_valu": 58, "garbage_collect_valu": 58, "run_nod": 58, "vice": [58, 454, 599, 1151, 1152, 1480, 1987, 2018, 2026, 2042], "versa": [58, 454, 599, 1151, 1152, 1480, 1987, 2018, 2026, 2042], "negsigmswapinterpret": 58, "call_self": 58, "args_tail": 58, "boxed_run": 58, "args_list": 58, "promptli": [58, 1323], "fetch_args_kwargs_from_env": 58, "map_nodes_to_valu": 58, "initial_env": 58, "enable_io_process": 58, "negsigmswapxform": 58, "nodes_map": [58, 2053], "subgraph_rewrit": [58, 2053], "m1": [58, 1933, 1934], "m2": [58, 1723, 1933, 1934, 2015], "traced_modul": [58, 2004, 2053], "despit": [58, 1266, 1267, 1990, 1996], "stack_1": 58, "stack_2": 58, "sum_2": 58, "max_1": 58, "max_2": 58, "exhaust": [60, 1675], "wih": 60, "escap": [60, 70], "hatch": [60, 70], "assumeconstantresult": [60, 71], "burn": [60, 71, 2039], "tracabl": [60, 71], "get_item": [60, 71], "i64": [60, 65, 66, 70, 71], "slice_1": [60, 69, 71], "myautogradfunct": 60, "autogradfunct": 60, "allow_in_graph": [60, 2044], "mul_1": [60, 66, 2040], "mysubmodul": [60, 68, 69], "condbranchclassmethod": [60, 68, 69], "subm": [60, 68, 69], "condbranchnestedfunct": [60, 68, 69], "inner_true_fn": [60, 68, 69], "inner_false_fn": [60, 68, 69], "condbranchnonlocalvari": [60, 68, 69], "my_tensor_var": [60, 68, 69], "my_primitive_var": [60, 68, 69], "nonloc": [60, 63, 68, 69, 1965], "_lifted_tensor_constant0": [60, 68, 69], "lift_fresh_copi": [60, 68, 69, 2010], "sub_1": [60, 68, 69], "constant_tensor": [60, 68, 69], "condclosedovervari": [60, 63, 68], "condoperand": [60, 68, 69], "sym_size_int": [60, 68, 69], "valuerang": [60, 68, 69, 70, 71, 1171, 1172], "oo": [60, 68, 69], "is_bool": [60, 68, 69, 70, 71], "condpred": [60, 68, 69], "constrainassizeexampl": [60, 70, 71], "hint": [60, 70, 71, 676, 999, 1033, 1172, 1179, 1185, 1251, 1494, 1531, 1532, 1533, 1534, 1535, 1961, 1963, 1964, 1990, 1992, 2007, 2020, 2042, 2047], "constrain_as_valu": [60, 70, 71], "constrain_as_s": [60, 70, 71], "_constrain_as_s": [60, 70, 71], "_local_scalar_dens": [60, 70, 71, 2010, 2049], "u4": [60, 70, 71], "ge": [60, 70, 71, 281, 1206, 1344, 1439, 1444, 1445, 1458, 1597, 1598, 1962, 1978, 2010, 2049], "scalar_tensor": [60, 70, 71, 1962, 2010, 2049], "_assert_async": [60, 70, 71, 2010], "msg": [60, 70, 71, 1058, 1060, 1172, 2014, 2031], "le": [60, 70, 71, 356, 1178, 1278, 1444, 1445, 1597, 1598, 1962, 1978, 2010, 2031, 2049], "scalar_tensor_1": [60, 70, 71], "_assert_async_1": [60, 70, 71], "sym_constrain_range_for_s": [60, 70, 71, 1962, 2010], "u0": [60, 70, 71], "u1": [60, 70, 71], "constrainasvalueexampl": [60, 70, 71], "_constrain_as_valu": [60, 70, 71], "sym_constrain_rang": [60, 70, 71, 1962, 2010], "test_decor": 60, "dynamicshapeassert": [60, 61], "dynamicshapeconstructor": [60, 69], "dynamicshapeifguard": [60, 65, 69], "dynamicshapemap": [60, 69, 72], "body_graph_0": [60, 69, 72], "map_impl": [60, 69, 72], "dynamicshapesl": [60, 69], "slice_2": [60, 69], "9223372036854775807": [60, 69, 890, 933, 1248, 1716, 1975, 2056], "dynamicshapeview": [60, 69], "new_x_shap": [60, 69], "support_level": [60, 66], "supportlevel": [60, 66], "fnwithkwarg": [60, 66], "pos0": [60, 66], "tuple0": [60, 66], "myarg": [60, 66], "mykw0": [60, 66], "mykwarg": [60, 66], "input0": [60, 66], "input1": [60, 66, 756, 1405, 1421, 1422, 1480, 1497, 1564, 1574, 1575, 1617, 1962, 1986, 2009], "arg7_1": [60, 66, 2007], "mul_2": [60, 66], "mul_3": [60, 66], "mul_4": [60, 66], "mul_5": [60, 66], "mul_6": [60, 66], "listcontain": [60, 61, 66, 69], "monkei": [60, 61, 66, 69, 1924], "cow": [60, 61, 66, 69], "pig": [60, 61, 66, 69], "listunpack": [60, 65, 66], "nestedfunct": [60, 63], "contextlib": [60, 64], "nullcontextmanag": [60, 64], "nullcontext": [60, 64], "pytreeflatten": 60, "tree_flatten": 60, "dim1_x": [60, 69], "scalaroutput": [60, 69], "anim": 60, "moo": 60, "specializedattribut": 60, "staticforloop": [60, 65], "unrol": [60, 65, 1963, 1964, 2009, 2044], "ret": [60, 65, 1992, 2020], "add_3": [60, 65], "add_4": [60, 65], "add_5": [60, 65], "add_6": [60, 65], "add_7": [60, 65], "add_8": [60, 65], "add_9": [60, 65], "staticif": [60, 65], "tensorsetattr": [60, 62], "setattr": [60, 62, 1964], "typereflectionmethod": [60, 62], "overli": [60, 62, 1992], "typereflectionmethodrewrit": [60, 62], "userinputmut": [60, 73], "not_supported_yet": [60, 62, 67, 69, 74], "dynamicshaperound": [60, 62, 69], "modelattrmut": [60, 67], "attr_list": [60, 67], "recreate_list": [60, 67], "optionalinput": [60, 67], "unexpectedli": [60, 67, 482, 2026, 2030], "torchsymmin": [60, 74], "sym_min": [60, 74], "0x7f574691bf70": [60, 74], "gain": [75, 1756, 1985, 2035, 2036, 2046, 2048], "fxe0010": [75, 2007], "diagnosticopt": [75, 77, 2007], "verbosity_level": [75, 77, 2007], "torch_log": [75, 77, 676, 968, 1970, 1991, 2041, 2042, 2044, 2054], "onnx_diagnost": [75, 77, 676], "fxe0008": [75, 2007], "onnxscript": [76, 2007, 2008, 2009], "torchlib": [76, 80], "fxonnxinterpret": 76, "onnx": [77, 78, 80, 81, 82, 676, 1717, 1718, 1736, 1737, 1738, 1960, 1979, 2015, 2035], "endors": 77, "noteworthi": 77, "_intern": [77, 82, 2026], "todo": [78, 79, 822, 855, 857, 858, 1179, 2034, 2043, 2050], "disregard": [80, 81, 83], "indexerror": [80, 1701, 1703], "typeerror": [80, 1706, 1992, 2013, 2031, 2055], "opschema": [80, 2007], "onnxfunct": [81, 83, 2007], "perfect": 81, "nearest": [81, 775, 781, 783, 1381, 1540, 1542, 1593, 1604, 1663, 1665, 1786, 1814, 1990], "highest": [81, 676, 1392, 1796, 1797, 1829, 2016, 2031], "stringent": 81, "op_level_debug": [81, 83, 2007], "elementwise_dtyp": 82, "_ref": 82, "type_promot": 82, "absent": [83, 1991], "signifi": 83, "g_cpu": 84, "g_cuda": 84, "bytetensor": [84, 1030, 1031, 1069, 1070, 1203, 1363, 1370, 1834, 1926, 2019, 2027, 2030], "2147483647": 84, "0x8000_0000_0000_0000": [84, 1343, 2019], "0xffff_ffff_ffff_ffff": [84, 1343, 2019], "random_devic": 84, "1516516984916": 84, "new_stat": [84, 1069, 1070, 1370, 1834, 1926, 2019], "void": [84, 1042, 1990, 1998, 2044], "g_cpu_oth": 84, "abs_": [88, 1962, 1978, 2030], "acosh": [92, 118, 863, 1962, 1978, 2010, 2049], "batch1": [95, 96, 147, 148, 682, 936, 1962], "batch2": [95, 96, 147, 148, 165, 682, 936, 1962], "tensor1": [97, 98, 99, 100, 683, 684, 1345, 1811, 1962], "tensor2": [97, 98, 99, 100, 310, 400, 683, 684, 1345, 1811, 1962], "mat1": [101, 102, 550, 685, 1215, 1271, 1355, 1859, 1863, 1864, 1878, 1962, 2049], "mat2": [101, 102, 409, 550, 685, 948, 1215, 1271, 1355, 1859, 1863, 1864, 1878, 1962, 2049], "mat": [103, 104, 536, 686, 1376, 1792, 1856, 1859, 1878, 1962, 2029], "vec1": [105, 106, 687, 1962], "vec2": [105, 106, 284, 457, 687, 1196, 1774, 1962], "keepdim": [108, 110, 111, 112, 114, 130, 131, 350, 388, 403, 405, 406, 407, 410, 425, 426, 427, 428, 449, 466, 475, 551, 561, 611, 689, 691, 692, 693, 695, 870, 871, 1272, 1303, 1307, 1320, 1338, 1348, 1350, 1351, 1353, 1356, 1379, 1380, 1381, 1382, 1497, 1633, 1730, 1783, 1786, 1880, 1881, 1885, 1930, 1931, 1962, 1978, 2025, 2049], "rtol": [109, 340, 690, 915, 916, 1239, 1305, 1308, 1738, 1961, 1962, 2031], "atol": [109, 340, 690, 915, 916, 1239, 1305, 1308, 1317, 1738, 1961, 1962, 1992, 2031], "08": [109, 340, 690, 946, 1239, 1297, 1422, 1502, 1637, 1742, 1743, 1744, 1746, 1752, 1753, 1756, 1769, 1840, 1962], "equal_nan": [109, 340, 690, 1239, 1962, 2031], "arcco": [117, 1962, 2010, 2031], "acosh_": [119, 1962, 1978], "arccosh": [119, 1962, 2010], "arcsin": [121, 877, 1962, 2010, 2024], "arcsinh": [123, 1962, 2010], "atan2_": [126, 1962, 1978], "arctan2": [126, 1962, 2010], "arctan": [127, 1962, 2010], "arctanh": [129, 1962, 2010], "asinh": [139, 865, 1962, 1978, 2010, 2024, 2049], "atan": [143, 627, 628, 866, 1962, 1978, 2010, 2024, 2049], "atanh": [145, 868, 1962, 1978, 2010, 2024, 2049], "wrt": [146, 915, 916], "60521": [146, 889], "issuecom": [146, 889], "867061780": [146, 889], "texttt": [149, 150, 690, 1239, 1392, 2031], "bernoulli": [150, 756, 1396, 1425, 1426, 1427, 1428, 1432, 1439, 1458, 1578, 1579, 1580, 1581, 1586, 1960, 1962, 1978, 2010, 2032], "preserve_format": [151, 166, 168, 171, 174, 175, 176, 185, 202, 205, 236, 263, 293, 321, 389, 521, 576, 965, 1100, 1154, 1735, 1795, 1797, 1799, 1958, 1992, 2027], "minlength": [152, 939, 1962], "bitwise_and": [154, 1962, 2010, 2049], "bitwise_left_shift": [156, 1962, 2010], "bitwise_not": [158, 1962, 1978, 2010, 2049], "bitwise_or": [160, 1962, 2010, 2049], "bitwise_right_shift": [162, 1962, 2010], "bitwise_xor": [164, 1962, 2010, 2049], "uint8": [168, 238, 613, 689, 695, 1151, 1784, 1787, 1788, 1811, 2015, 2026, 2027, 2029, 2030, 2057], "cauchi": [169, 1960, 1987, 1996, 2010, 2032], "dfrac": [169, 373, 604, 1422, 1575, 1690, 1691, 1724, 1727], "complex32": [175, 1415, 1416, 1417, 1568, 1569, 1570, 1736, 2030, 2031], "int8": [176, 444, 725, 940, 941, 942, 943, 944, 945, 1151, 1332, 1333, 1334, 1335, 2015, 2018, 2024, 2026, 2027, 2030, 2057], "input2": [179, 455, 456, 513, 756, 1405, 1421, 1422, 1480, 1497, 1564, 1574, 1575, 1617, 1962, 1986, 2009], "clamp_": [184, 1962, 1978], "uncoalesc": [186, 324, 1871], "coo": [186, 319, 324, 338, 610, 1215, 1859, 1863, 1868, 1869, 1870, 1871, 1872, 1873, 1960, 1971, 2027, 2031], "inttensor": [187, 204, 1225, 1340, 1341, 1430, 2027, 2030], "csr": [187, 204, 339, 579, 584, 1431, 1859, 1863, 1864, 1870, 1873, 1971, 2031], "sparse_csr": [187, 204, 579, 584, 1863, 1864, 1866, 1870, 1873, 2024], "nnz": [187, 540, 579, 580, 581, 583, 584, 1179, 1384, 1861, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1968, 2024], "int32": [187, 204, 309, 317, 321, 443, 613, 952, 1100, 1112, 1113, 1148, 1151, 1152, 1281, 1292, 1293, 1294, 1312, 1340, 1407, 1784, 1821, 2015, 2024, 2026, 2027, 2030, 2046, 2057], "mkl": [187, 204, 1960, 1989, 2005, 2010, 2024], "routin": [187, 204, 872, 1323, 1858, 1886, 2024], "downcast": [187, 204], "to_sparse_csr": [187, 204, 580, 581, 1860, 1863, 1864, 1962, 2010, 2024], "conj_phys": [190, 981, 1962, 2010, 2024, 2049], "contiguous_format": [191, 327, 495, 496, 1099, 1675, 1682, 1683, 2027], "non_block": [192, 205, 576, 599, 1250, 1488, 1716, 1962, 1990, 2026, 2049], "copysign": [194, 1962, 2010], "fweight": [201, 988, 1962], "aweight": [201, 988, 1962], "sparse_dim": [214, 541, 542, 1859, 1863, 1867, 1871, 1962, 2010, 2024], "dim1": [221, 223, 224, 565, 588, 589, 1086, 1088, 1089, 1285, 1889, 1907, 1962, 2049], "dim2": [221, 223, 224, 1086, 1088, 1089, 1285, 1962, 2049], "digamma": [227, 1962, 1978, 2010, 2025, 2049], "laid": 229, "outermost": [229, 1204], "channels_last": [229, 1250, 1488, 1675, 1682, 1683, 2027], "rounding_mod": [231, 232, 233, 234, 1093, 1094, 1143, 1146, 1805, 1915, 1962, 2049], "split_size_or_sect": [237, 298, 615, 1874], "eq": [240, 1962, 1978, 2010, 2049], "erf": [243, 635, 636, 1962, 1978, 2010, 2024, 2025, 2049], "erfc": [245, 637, 638, 1962, 1978, 2010, 2025, 2049], "front": [250, 968, 1323, 1491, 1979, 1993], "lambd": [254, 294, 1443, 1525, 1596, 1653, 1739, 1962], "pdf": [254, 1407, 1849, 1987], "theori": [254, 1987, 1995], "fill_valu": [256, 442, 1153, 1154, 1407, 1962, 1990, 2049], "tall": [256, 1309, 1314, 1992], "start_dim": [259, 1137, 1433, 1962], "end_dim": [259, 1137, 1433, 1962], "float_pow": [265, 1962, 2010], "floor_divid": [269, 1093, 1962, 2010, 2024], "divisor": [272, 273, 485, 486, 764, 765, 1093, 1143, 1146, 1193, 1398, 1399, 1434, 1539, 1561, 1562, 1805, 1915], "fmod": [273, 1805, 1962, 2010, 2049], "mantissa": [276, 477, 1148, 1274, 1829, 1962, 1990, 2002], "gcd": [279, 1962, 2010, 2049], "geometr": [282, 775, 781, 1593, 1604, 1663, 1929, 1960, 2010, 2032, 2051], "ordin": [285, 1868, 1869, 1870, 1872, 1873, 2027], "greater_equ": [290, 1962, 2010], "hypot": [300, 1962, 2010, 2049], "igamma": [304, 1962, 2010, 2049], "igammac": [306, 1962, 2010, 2049], "3100": [307, 479, 1221, 1803], "3553j": [307, 479, 1221, 1803], "5445": [307, 479, 1221, 1803], "7896j": [307, 479, 1221, 1803], "6492": [307, 479, 1221, 1803], "0633j": [307, 479, 1221, 1803], "0638": [307, 479, 1221, 1803], "8119j": [307, 479, 1221, 1803], "3553": [307, 1221], "7896": [307, 1221], "0633": [307, 1221, 1297, 1980], "8119": [307, 1221], "index_add_": [308, 896, 898, 901, 1222, 1223, 1962, 2003], "index_copy_": [310, 1962], "index_fill_": [312, 1962, 1978], "index_put_": [314, 1962], "include_self": [317, 512, 513, 1224, 1820, 1962, 2049], "identit": 317, "floattensor": [317, 483, 682, 683, 684, 685, 686, 731, 915, 916, 936, 1430, 1431, 1491, 1531, 1827, 2027, 2030], "amax": [317, 513, 692, 693, 1863, 1962, 2010, 2049], "amin": [317, 513, 691, 693, 1863, 1962, 2010, 2049], "fill_": [317, 1250, 1276, 1488, 1806, 1962, 1978, 1999, 2026], "72": [317, 613, 1204, 2015], "uint8_t": [322, 1736], "retain_grad": [331, 1962, 1987, 2010], "requires_grad_": [331, 444, 1250, 1407, 1488, 1577, 1860, 1863, 1901, 1962, 1978, 1987, 2030, 2054], "n_fft": [347, 552, 1247, 1882, 1962], "hop_length": [347, 552, 1247, 1882, 1962], "win_length": [347, 552, 1247, 1882, 1962], "center": [347, 552, 775, 781, 1118, 1247, 1558, 1593, 1604, 1663, 1753, 1775, 1842, 1882, 1962, 1987, 2010, 2029], "onesid": [347, 552, 1247, 1882, 1962, 2049], "return_complex": [347, 552, 1247, 1882, 1962], "element_s": [349, 431, 1962, 1978, 2010, 2026], "lcm": [352, 1962, 2010], "ldexp": [354, 1148, 1962, 2010], "lerp": [358, 1962, 2010], "lt": [359, 391, 1178, 1277, 1961, 1962, 1978, 2010, 2040, 2041, 2049], "less_equ": [362, 1962, 2010], "lgamma": [364, 647, 648, 1962, 2010, 2049], "ln": [373, 1279, 2025], "logical_and": [379, 1962, 2010, 2049], "logical_not": [381, 1644, 1962, 1978, 1980, 2010, 2049], "logical_or": [383, 1962, 2010, 2049], "logical_xor": [385, 1962, 2010, 2049], "pivot": [392, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1340, 1341, 1342, 1785, 1962], "get_info": [392, 1340], "lu_data": [393, 1341, 1342, 1962], "lu_pivot": [393, 1341, 1342, 1962], "masked_fill_": [395, 1644, 1962, 1978, 1979], "booltensor": [396, 398, 731, 1344, 1531, 1938, 2027, 2030], "masked_scatter_": [397, 1962], "mvlgamma": [422, 1962, 2010], "posinf": [423, 424, 1378, 1962], "neginf": [423, 424, 1378, 1962], "nan_to_num": [424, 1962, 2010], "interpol": [427, 475, 781, 782, 783, 815, 1276, 1381, 1540, 1541, 1542, 1558, 1593, 1663, 1664, 1665, 1786, 1923, 1962, 2017], "ne": [435, 1690, 1724, 1732, 1962, 1978, 2010, 2049], "8182e": 441, "5765e": 441, "41": [441, 1101, 1309, 1666, 1723, 1785], "0545e": 441, "0949e": 441, "4842e": [441, 1101], "0000e": [441, 1101, 1141, 1328, 1337, 1378, 1723, 1840, 1842, 1843, 1848, 1849], "00": [441, 1101, 1141, 1328, 1337, 1378, 1723, 1737, 1840, 1842, 1843, 1848, 1849, 1961, 2009], "141592": [442, 1153], "1416": [442, 1082, 1153, 1901], "from_numpi": [444, 875, 876, 1825, 1901, 1968, 2044], "array_lik": [444, 875, 1868, 1869, 1870, 1871, 1872, 1873, 1901, 1980], "nextaft": [447, 1962, 2010, 2049], "fro": [449, 1282, 1303, 1307, 1320, 1701, 1710, 1730, 1962], "not_equ": [452, 1962, 2010], "resolve_conj": [454, 981, 1962, 2010], "resolve_neg": [454, 1962, 2010], "shorthand": [454, 1270], "input3": [456, 1962], "transpos": [456, 589, 590, 613, 688, 737, 738, 739, 960, 961, 1098, 1166, 1280, 1281, 1287, 1290, 1293, 1300, 1311, 1314, 1418, 1419, 1420, 1503, 1539, 1571, 1572, 1573, 1644, 1684, 1685, 1687, 1689, 1719, 1773, 1886, 1888, 1889, 1896, 1910, 1962, 1978, 1980, 1987, 2002, 2009, 2010, 2017, 2024, 2028, 2030, 2049], "polygamma": [462, 1962, 2010, 2025], "q_per_channel_axi": [469, 470, 1962, 2010], "zero_point": [470, 472, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 766, 768, 769, 770, 771, 773, 776, 777, 795, 798, 815, 816, 817, 818, 821, 848, 1112, 1113, 1787, 1788, 1789, 1790, 1791, 1962, 2015, 2016], "qtensor": [474, 1962], "uniform": [477, 604, 938, 1423, 1506, 1576, 1794, 1795, 1842, 1960, 1985, 2010, 2032, 2049], "queu": [482, 1005, 1941, 1990], "life": [482, 1002], "cycl": [482, 889, 1002, 1172, 1761, 1767, 1987, 2014], "gc": [482, 2022], "poll": 482, "realloc": [482, 968, 1225, 1990], "counterintuit": [482, 1987], "s1": [482, 1172], "some_comm_op": 482, "wouldn": [482, 1182, 2022, 2043], "chrome": [482, 927, 2014, 2048, 2052], "export_chrome_trac": [482, 2014, 2052], "cudacachingalloc": [482, 1990, 1995], "enable_grad": [484, 1966, 2032], "0100": [484, 871, 1304, 1787], "0200": 484, "0300": [484, 2004], "maxnorm": [487, 488, 1806, 1962], "tile": [489, 1962, 1990, 2010, 2024, 2044], "repeat_interleav": [489, 1923, 1962, 2010, 2017], "output_s": [490, 737, 738, 739, 762, 763, 1389, 1390, 1391, 1393, 1394, 1395, 1419, 1434, 1435, 1436, 1484, 1485, 1486, 1539, 1552, 1553, 1554, 1555, 1556, 1557, 1587, 1588, 1589, 1621, 1622, 1623, 1807, 1962, 1980, 2049], "is_leaf": [491, 1962, 1978, 1980, 2010, 2044], "saved_weight": 492, "loaded_weight": 492, "5503": 492, "4926": [492, 1999], "1158": 492, "8303": 492, "1007": 492, "9853": 492, "2316": 492, "6606": 492, "resiz": [495, 496, 520, 541, 542, 1151, 1152, 1156, 1540, 1593, 1604, 1962, 1978, 2010, 2026, 2049], "set_": [495, 1962], "shift": [501, 941, 944, 1118, 1125, 1396, 1402, 1403, 1404, 1432, 1527, 1586, 1812, 1841, 1962, 1965, 2049], "decim": [503, 504, 1814, 1962, 2002, 2057], "scatter_": [508, 511, 1818, 1962], "scatter_add_": [509, 510, 1819, 1923, 1962], "scatter_reduce_": [509, 512, 1820, 1962], "axi": [509, 511, 513, 818, 821, 979, 1097, 1112, 1138, 1192, 1216, 1787, 1807, 1812, 1813, 1937, 1962, 1968, 1993, 2009, 2013, 2015, 2044, 2049, 2053], "4600": 509, "2300": 509, "scatter_reduc": [513, 1923, 1962, 2010, 2049], "sgn": [518, 1147, 1838, 1962, 1978, 1980, 2010, 2024], "untypedstorag": [520, 553, 609, 1960, 2004, 2026], "int16": [521, 1151, 1333, 2024, 2026, 2027, 2030, 2057], "dense_dim": [539, 541, 542, 579, 580, 581, 583, 584, 1871, 1962, 2010, 2024], "nse": [540, 2024], "randint": [540, 939, 988, 1080, 1141, 1407, 1537, 1576, 1577, 1682, 1683, 1867, 1962, 1966, 1979, 2010, 2029, 2032], "6550": 540, "2397": 540, "1611": 540, "0779": [540, 1287, 1782, 1938], "2326": 540, "0558": 540, "4711": 540, "9678": 540, "5138": 540, "0411": 540, "9417": 540, "5158": 540, "0793": 540, "0036": [540, 1348], "2569": 540, "1055": 540, "sparse_coo": [540, 579, 1384, 1863, 1866, 1867, 1871, 2024, 2027], "split_siz": [543, 1874, 1962, 2049], "squeez": [549, 689, 691, 692, 693, 695, 1272, 1338, 1348, 1350, 1351, 1353, 1356, 1379, 1382, 1575, 1783, 1867, 1880, 1881, 1885, 1930, 1931, 1962, 1978, 2009, 2010, 2017, 2028, 2049], "pad_mod": [552, 1882, 1962], "typedstorag": [553, 1960, 2004, 2026], "untyped_storag": 553, "compute_uv": [563, 1314, 1315, 1886, 1962], "axis0": [564, 1888, 1962], "axis1": [564, 1888, 1962], "dim0": [565, 588, 589, 1889, 1907, 1962], "indices_or_sect": [574, 1096, 1214, 1902, 1936], "5044": 576, "0005": [576, 1765, 1771], "3310": 576, "0584": [576, 1886], "cuda0": [576, 1990, 1997, 2030], "masked_grad": [577, 1962], "sparse_mask": [577, 1962, 2010], "mkldnn": [578, 1260, 1960, 2010], "sparsedim": 579, "blocksiz": [579, 580, 581, 1868, 1869, 1870, 1962, 2024], "sparse_csc": [579, 583, 1866, 1870, 1872, 2024], "sparse_bsr": [579, 581, 1869, 1870, 2024], "sparse_bsc": [579, 580, 1868, 1870, 2024], "bsr": [579, 581, 1869, 1870, 2031], "bsc": [579, 580, 1868, 1870, 2031], "csc": [579, 583, 1870, 1872, 2031], "minu": [579, 580, 581, 583, 584, 2025], "crow_indic": [579, 581, 584, 1861, 1863, 1864, 1866, 1869, 1870, 1873, 1962, 2010, 2024, 2031], "col_indic": [579, 581, 584, 1863, 1864, 1866, 1869, 1870, 1873, 1962, 2010, 2024, 2031], "sparsecsr": [579, 1907, 2024], "row_indic": [580, 583, 1868, 1872, 1962, 2010, 2024, 2031], "ccol_indic": [580, 583, 1868, 1872, 1962, 2010, 2024, 2031], "_nnz": [582, 583, 584, 2010], "012766935862600803": 585, "5415473580360413": 585, "08909505605697632": 585, "7729271650314331": 585, "unitriangular": [590, 1313, 1910, 1962], "tril": [592, 1548, 1549, 1550, 1644, 1962, 2010, 2044], "triu": [594, 1695, 1910, 1962, 2009, 2010, 2044], "trunc": [598, 673, 674, 683, 1093, 1136, 1143, 1146, 1814, 1962, 1978, 2010, 2024, 2049], "sizedim": 603, "return_invers": [605, 606, 1919, 1920, 1962], "return_count": [605, 606, 1919, 1920, 1962], "unsqueez": [608, 1118, 1271, 1311, 1430, 1507, 1695, 1904, 1962, 1992, 2010, 2017, 2024, 2028, 2029, 2049], "subspac": [613, 1314, 1494, 1775, 1886, 1887], "span": [613, 1059, 1060, 1423, 1886, 2014, 2020], "foral": 613, "proportion": [613, 781, 1540, 1663], "9482": [613, 1227], "0310": 613, "4999": 613, "5316": 613, "1520": 613, "7472": 613, "5617": 613, "8649": 613, "4724": [613, 1999], "0334": 613, "2976": 613, "8499": 613, "2109": 613, "9913": 613, "9607": 613, "6123": 613, "1064483442": 613, "1124191867": 613, "1069546515": 613, "1089989247": 613, "1105482831": 613, "1061112040": 613, "1057999968": 613, "1084397505": 613, "1071760287": 613, "1123489973": 613, "1097310419": 613, "1084649136": 613, "1101533110": 613, "1073668768": 613, "1082790149": 613, "1088634448": 613, "1000000000": 613, "0047": 613, "0310j": 613, "5316j": 613, "7472j": 613, "8649j": 613, "0334j": 613, "8499j": 613, "9913j": 613, "6123j": 613, "202": 613, "154": [613, 2005], "59": [613, 1912, 1914], "182": 613, "243": [613, 1247, 1886], "253": 613, "188": 613, "185": [613, 2054], "252": [613, 2005], "191": 613, "63": [613, 2005, 2015], "240": 613, "227": 613, "165": 613, "190": 613, "146": 613, "106": 613, "205": 613, "112": [613, 2054], "206": 613, "189": 613, "95": [613, 1763, 1766, 1767], "147": 613, "43": 613, "246": [613, 2054], "87": 613, "235": 613, "226": 613, "254": [613, 2005], "111": [613, 1737, 2009], "117": 613, "177": 613, "28": [613, 742, 1081, 1908, 2007, 2009, 2041, 2048], "xlogi": [618, 1962, 2010, 2025], "inductor": [676, 968, 1970, 2010, 2015, 2035, 2036, 2039, 2040, 2041, 2042, 2044, 2046, 2048, 2051, 2052, 2054, 2056], "dist_c10d": 676, "dist_ddp": [676, 1991], "dist_fsdp": 676, "aot_graph": [676, 1970], "aot_joint_graph": [676, 1970], "ddp_graph": [676, 1970, 1991], "graph_cod": [676, 1970], "graph_break": [676, 1970, 2039, 2044, 2045, 2052], "graph_siz": 676, "recompiles_verbos": 676, "trace_sourc": 676, "trace_cal": 676, "output_cod": [676, 1970, 2044, 2046, 2054], "perf_hint": [676, 968], "post_grad_graph": 676, "cudagraph": [676, 968, 1033, 1990, 2035, 2044, 2046, 2048, 2051], "sym_nod": 676, "toggl": [676, 1990], "suppress": [676, 1964, 2019], "silenc": 676, "lowest": [676, 958, 1378, 1700, 1701, 1709, 1710, 1796, 1797, 1992, 2031], "notset": 676, "torchinductor": [676, 1970, 2035, 2036, 2041, 2042, 2044, 2046], "joint": [676, 1970], "ddpoptim": [676, 1970], "symnod": [676, 2042], "opter": 676, "unregist": [676, 1970, 1975, 2009], "cosin": [679, 680, 985, 986, 1421, 1422, 1575, 1759, 1760, 1767, 1844, 2011, 2044], "3348": 679, "5889": 679, "2005": [679, 1931, 2054], "1584": 679, "2294": [679, 1350], "2004": 679, "3690": 679, "7298": [679, 1804], "hyperbol": [680, 878, 881, 986, 1528, 1853, 1900], "uniform_": [680, 881, 938, 1960, 1962, 1978, 1985, 1992, 2025, 2032], "3192": 680, "9915": 680, "9674": 680, "7151": 680, "7791": 680, "3120": [680, 983], "2979": 680, "1341": 680, "_i": [681, 682, 683, 684, 685, 936, 938, 941, 944, 948, 963, 1093, 1143, 1274, 1276, 1373, 1536, 1778, 1782, 1798, 1801, 1836, 1883, 1938, 2025], "0202": 681, "0985": 681, "3506": [681, 1340], "6056": 681, "3944": 681, "9732": 681, "3497": 681, "6245": [681, 1282], "4022": [681, 1886], "3743": 681, "7724": 681, "5811": 681, "8017": 681, "7695": 681, "3930": 681, "3672": [681, 998, 1283], "1450": [681, 1867], "6971": 681, "0736": [681, 1999], "0994": 681, "3216": 681, "7845": 681, "1610": 681, "1868": 681, "4090": 681, "9902": [681, 998, 1283], "3667": [681, 983], "3925": 681, "6147": 681, "sum_": [682, 1247, 1302, 1319, 1397, 1398, 1399, 1415, 1416, 1417, 1423, 1455, 1456, 1457, 1476, 1491, 1495, 1497, 1880, 1881, 1882, 1903, 1908, 1930, 1931, 1932, 2025], "mathbin": [682, 685, 686, 936, 948, 1864], "doubletensor": [682, 683, 684, 685, 686, 936, 1827, 2027, 2030], "tensorfloat32": [682, 685, 936, 948, 1345, 1355, 1415, 1416, 1417, 1418, 1419, 1420, 1475, 1568, 1569, 1570, 1571, 1572, 1573, 1610, 1829, 1990, 2002], "rocm": [682, 685, 936, 948, 1345, 1355, 1415, 1416, 1417, 1418, 1419, 1420, 1440, 1459, 1475, 1960], "6311": 682, "0503": 682, "9768": [682, 1999], "0362": 682, "1653": 682, "8185": 682, "4255": [682, 1373], "6760": 682, "9453": 682, "5743": 682, "8202": 682, "3691": 682, "0943": 682, "1109": [682, 1441, 1849], "4730": [682, 1903], "histor": [683, 1055, 1427, 1989, 1999, 2004], "2312": [683, 1867], "6496": 683, "1312": 683, "0428": 683, "4292": 683, "1030": 683, "5369": 683, "9829": 683, "0430": 683, "8635": 684, "6391": 684, "6174": 684, "7617": 684, "5879": 684, "7388": 684, "8353": 684, "6249": 684, "6511": 684, "8716": 685, "4671": 685, "3746": 685, "7573": 685, "9555": 685, "8681": 685, "3768": 686, "5565": 686, "otim": [687, 1271, 1438, 1592], "conj": [688, 982, 1114, 1115, 1117, 1119, 1126, 1128, 1132, 1133, 1135, 1280, 1281, 1287, 1289, 1308, 1809, 1810, 1962, 1992, 1996, 2010, 2030, 2049], "mh": [688, 959, 960, 961, 1287, 1886, 1962, 2010, 2028, 2030], "lvert": [690, 1239, 1536, 1630, 2031], "rvert": [690, 1239, 2031], "leq": [690, 937, 938, 983, 1116, 1118, 1239, 1271, 1275, 1290, 1296, 1407, 1429, 1491, 1493, 1495, 1577, 1629, 1632, 1839, 1882, 1985, 2025], "elementwis": [690, 983, 1014, 1041, 1042, 1141, 1143, 1388, 1450, 1451, 1452, 1653, 1929, 1964, 1980, 1996, 2025], "07": [690, 815, 816, 817, 818, 821, 959, 1101, 1288, 1291, 1296, 1308, 1309, 1315, 1338, 1341, 1689, 1738, 1745, 1843, 1848, 1886, 2009], "09": [690, 1745, 1757, 1968, 2031], "8177": 691, "4878": 691, "2491": 691, "9130": 691, "7158": 691, "1775": 691, "0992": 691, "4817": 691, "0053": 691, "0164": 691, "3738": 691, "0507": [691, 2009], "9700": 691, "1106": 691, "0318": 691, "0816": [691, 1340], "6451": 692, "4866": [692, 2036], "2987": 692, "3312": 692, "5744": 692, "2980": [692, 1980], "8397": 692, "2713": 692, "9128": 692, "9214": 692, "7268": 692, "2995": 692, "9023": [692, 1281], "4853": 692, "9075": 692, "6165": 692, "180": [694, 1082, 1793], "14159": [694, 1901], "135": 694, "45": [694, 1403, 1404, 1451, 1452, 1527, 1723, 2009], "ao": [696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 2015, 2016, 2017], "batch_norm": [696, 697, 1260, 1962, 2010], "fuse": [696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 788, 789, 798, 800, 801, 802, 810, 843, 855, 856, 968, 1264, 1265, 1644, 1682, 1683, 1684, 1685, 1686, 1687, 1742, 1743, 1755, 1829, 1973, 1978, 1981, 2009, 2011, 2015, 2016, 2017, 2018, 2044, 2046, 2053], "3d": [697, 700, 703, 731, 736, 739, 763, 765, 770, 775, 1352, 1391, 1395, 1399, 1402, 1404, 1417, 1420, 1427, 1428, 1434, 1436, 1450, 1452, 1457, 1483, 1494, 1540, 1554, 1557, 1558, 1562, 1570, 1573, 1581, 1587, 1589, 1604, 1616, 1620, 1632, 1663, 1980, 2002, 2015, 2024, 2029], "bn": [698, 699, 700, 701, 702, 703, 810, 856, 1098, 1260, 1684, 1686, 2004, 2011, 2015, 2016], "qat": [708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 726, 727, 728, 729, 788, 789, 842, 2015, 2016, 2017], "dilat": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 768, 769, 770, 778, 779, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1464, 1465, 1466, 1467, 1468, 1469, 1481, 1482, 1483, 1539, 1568, 1569, 1570, 1571, 1572, 1573, 1587, 1618, 1619, 1620, 1662, 1790, 1791, 1962, 2009, 2049], "padding_mod": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 768, 769, 770, 1415, 1416, 1417, 1418, 1419, 1420, 1464, 1465, 1466, 1467, 1468, 1469, 1593, 1962, 2049], "momentum": [708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 747, 748, 749, 1402, 1403, 1404, 1450, 1451, 1452, 1461, 1462, 1463, 1470, 1471, 1472, 1527, 1563, 1603, 1746, 1753, 1755, 1761, 1767, 1769, 1962, 1999, 2001, 2011, 2049], "freeze_bn": [708, 709, 710, 711, 712, 713], "qconfig": [708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 784, 785, 787, 790, 791, 792, 793, 834, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 857, 858, 2034], "batchnorm1d": [708, 711, 1461, 1527, 1563, 2004, 2017], "fakequant": [708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 798, 858], "weight_fake_qu": [708, 709, 710, 711, 712, 713, 714, 715, 726, 727], "quant": [708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 786, 788, 789, 834, 857, 858, 1112, 1113, 2015, 2016], "batchnorm3d": [710, 713, 715, 720, 1463, 1527, 1563, 2017], "num_featur": [719, 720, 732, 733, 747, 748, 749, 1250, 1402, 1403, 1404, 1450, 1451, 1452, 1461, 1462, 1463, 1470, 1471, 1472, 1488, 1527, 1595, 1999], "qint8": [724, 725, 752, 757, 760, 761, 768, 769, 770, 777, 788, 790, 795, 816, 837, 854, 855, 857, 858, 1736, 1787, 1788, 2015, 2017, 2018, 2026, 2030, 2031], "from_float": [728, 734, 735, 736, 741, 742, 752, 760, 793, 813, 819, 822, 834, 2015], "qparams_dict": [728, 734, 735, 736, 760], "hidden_s": [730, 756, 757, 761, 1439, 1440, 1458, 1459, 1503, 1504, 1505, 1962], "num_lay": [730, 756, 1439, 1458, 1503, 1504, 1532, 1534, 1962, 1999], "batch_first": [730, 731, 756, 1439, 1458, 1494, 1503, 1504, 1531, 1533, 1535, 1717, 1719, 1720, 1722, 1962, 1994], "bidirect": [730, 756, 1439, 1458, 1503, 1504, 1962], "_lstmlayer": 730, "nnqa": 730, "h0": [730, 756, 758, 1439, 1458, 1503], "c0": [730, 758, 1458, 2054], "hn": [730, 756, 758, 1439, 1440, 1458, 1503], "cn": [730, 758, 1250, 1458, 1798], "weight_ih": [730, 1440, 1459, 1503, 1505], "weight_hh": [730, 1440, 1459, 1503, 1505], "embed_dim": [731, 1494], "num_head": [731, 1494, 1547, 1962], "add_bias_kv": [731, 1494], "add_zero_attn": [731, 1494, 1962], "kdim": [731, 1494], "vdim": [731, 1494], "dequant": [731, 784, 786, 788, 789, 795, 797, 857, 1962, 2010, 2016, 2018, 2031, 2033], "mha": [731, 1494, 1960], "conver": 731, "key_padding_mask": [731, 1494, 1962], "need_weight": [731, 1494, 1962], "attn_mask": [731, 1494, 1644, 1962], "average_attn_weight": [731, 1494, 1962], "is_caus": [731, 1494, 1534, 1535, 1550, 1644, 1962], "attn_output_weight": [731, 1494], "unmask": [731, 1531], "attn_weight": [731, 1494, 1644], "head": [731, 1392, 1494, 1531, 1533, 1535], "attn_output": [731, 1494], "quint8": [734, 735, 736, 737, 738, 739, 741, 742, 752, 768, 769, 770, 777, 788, 790, 795, 815, 816, 817, 818, 821, 823, 855, 857, 1736, 1787, 1788, 1789, 1790, 1791, 2015, 2017, 2018, 2026, 2030, 2031], "learnabl": [734, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 1402, 1403, 1404, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1430, 1431, 1439, 1440, 1442, 1450, 1451, 1452, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1496, 1503, 1505, 1527, 1585, 1638, 1999, 2011], "q_input": [734, 735, 736, 737, 738, 739, 768, 769, 770], "quantize_per_tensor": [734, 735, 736, 737, 738, 739, 752, 753, 754, 768, 769, 770, 1789, 1790, 1791, 1962, 2010, 2015], "unequ": [735, 736, 737, 738, 739, 1416, 1417, 1419, 1420], "50": [735, 737, 738, 739, 768, 820, 1306, 1398, 1399, 1407, 1415, 1416, 1417, 1419, 1420, 1435, 1436, 1455, 1456, 1457, 1481, 1482, 1483, 1538, 1570, 1571, 1573, 1577, 1588, 1589, 1754, 1898, 1980, 1990, 2044], "56": [736, 1921, 2024, 2048], "output_pad": [737, 738, 739, 1418, 1419, 1420, 1467, 1468, 1469, 1571, 1572, 1573, 1962, 2049], "qnnpack": [737, 738, 752, 760, 851, 852, 855, 857, 858, 2015, 2017], "convtranspose2d": [737, 1468, 1572, 1682, 1923, 2017], "nnq": [737, 738, 739, 784, 785, 786, 860, 2015], "downsampl": [737, 738, 739, 1419, 1540, 1558, 1593, 1604], "upsampl": [737, 738, 739, 775, 782, 783, 815, 1419, 1541, 1542, 1558, 1593, 1604, 1664, 1665], "fbgemm": [738, 739, 752, 760, 829, 851, 852, 855, 857, 858, 2015, 2016, 2044, 2045], "cubic": [739, 1436, 1589, 1593], "num_embed": [741, 742, 1430, 1431, 1585], "embedding_dim": [741, 742, 1430, 1431, 1460, 1584, 1585], "padding_idx": [741, 1430, 1431, 1584, 1585, 1962, 2049], "scale_grad_by_freq": [741, 742, 1430, 1431, 1584, 1585, 1962, 2049], "_weight": [741, 742, 1430, 1431, 1746, 1752, 2053], "overwritten": [741, 742, 752, 760, 793, 837, 857, 1987, 1992, 2031, 2039], "_embed": [741, 742], "_dim": [741, 742, 1430], "include_last_offset": [742, 1431, 1585, 1962, 2049], "embedding_bag": [742, 1962, 2010], "floatfunct": [743, 2015], "activation_post_process": [743, 795, 2015], "add_relu": [743, 744, 753, 1973, 2010, 2033], "add_scalar": [743, 744, 753, 2010, 2029, 2033], "mul_scalar": [743, 744, 753, 2010, 2033], "collector": 744, "f_add": 744, "num_channel": [745, 1442, 1979], "normalized_shap": [750, 1460, 1607, 1962, 1980, 2049], "elementwise_affin": [750, 1460], "negative_slop": [751, 776, 1474, 1608, 1609, 1962, 1985, 2049], "slope": [751, 776, 1474, 1519, 1985], "bias_": [752, 760], "_featur": [752, 760, 777, 1392, 1405, 1473, 1475, 1564, 1610], "from_refer": [752, 760], "ref_qlinear": [752, 760], "output_scal": [752, 755, 1789, 1962], "output_zero_point": [752, 755, 1789, 1962], "q_add": 753, "qint32": [753, 754, 1736, 1787, 1788, 2015, 2018, 2026, 2030, 2031], "x_0": [754, 1908], "gate": [756, 757, 1438, 1439, 1440, 1458, 1517, 1592, 1647], "r_t": [756, 1439, 1752], "w_": [756, 1390, 1391, 1394, 1395, 1398, 1399, 1401, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1419, 1420, 1423, 1435, 1436, 1439, 1440, 1456, 1457, 1458, 1459, 1482, 1483, 1485, 1486, 1495, 1500, 1501, 1503, 1505, 1509, 1510, 1511, 1512, 1513, 1514, 1540, 1541, 1542, 1543, 1544, 1545, 1589, 1593], "x_t": [756, 891, 895, 896, 901, 902, 1402, 1403, 1404, 1439, 1450, 1451, 1452, 1458, 1503, 1527, 1740], "b_": [756, 1439, 1440, 1458, 1459, 1476, 1503, 1505, 1903, 2024], "hr": [756, 1439, 1440, 1458, 1996], "h_": [756, 1390, 1391, 1394, 1395, 1398, 1399, 1405, 1410, 1411, 1413, 1414, 1416, 1417, 1419, 1420, 1435, 1436, 1439, 1440, 1456, 1457, 1458, 1475, 1482, 1483, 1484, 1485, 1486, 1500, 1501, 1503, 1505, 1510, 1511, 1513, 1514, 1540, 1541, 1542, 1544, 1545, 1564, 1589, 1593], "z_t": [756, 1439], "iz": [756, 1439, 1440], "hz": [756, 1010, 1439, 1440, 2029], "n_t": [756, 1439], "odot": [756, 1439, 1440, 1458, 1459], "h_t": [756, 1439, 1458, 1503], "hadamard": [756, 1439, 1440, 1458, 1459], "multilay": [756, 1439, 1458, 2007], "_t": [756, 1439, 1458, 1753, 1755, 1992, 2011], "b_ih": [756, 1439, 1440, 1458, 1459, 1503, 1505, 1962], "b_hh": [756, 1439, 1440, 1458, 1459, 1503, 1505, 1962], "h_0": [756, 1439, 1458, 1459, 1503], "seq_len": [756, 1439, 1458, 1494, 1503], "pack_padded_sequ": [756, 1439, 1458, 1503, 1716, 1718, 1719, 1994], "num_direct": [756, 1439, 1458, 1503], "h_n": [756, 1439, 1458, 1503], "_size": [756, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1435, 1436, 1439, 1440, 1455, 1456, 1457, 1458, 1459, 1481, 1482, 1483, 1484, 1485, 1486, 1503, 1505, 1539, 1589], "_layer": [756, 1439, 1458, 1503], "_direct": 756, "output1": [756, 1392, 1986, 2009], "output2": [756, 1392], "weight_ih_l": [756, 1439, 1458, 1503], "w_ir": [756, 1439], "w_iz": [756, 1439], "w_in": [756, 1439], "weight_hh_l": [756, 1439, 1458, 1503], "w_hr": [756, 1439], "w_hz": [756, 1439], "w_hn": [756, 1439], "bias_ih_l": [756, 1439, 1458, 1503], "b_ir": [756, 1439], "b_iz": [756, 1439], "b_in": [756, 1439], "bias_hh_l": [756, 1439, 1458, 1503], "b_hr": [756, 1439], "b_hz": [756, 1439], "b_hn": [756, 1439], "mathcal": [756, 1405, 1415, 1416, 1417, 1418, 1419, 1420, 1430, 1431, 1439, 1440, 1458, 1459, 1473, 1475, 1503, 1505, 1506, 1527, 1798, 1985, 1996], "subtli": [756, 1439, 1755], "gru": [757, 1440, 1504, 1962, 1990, 2010, 2015, 2017], "cell": [757, 759, 761, 1439, 1440, 1458, 1459, 1503, 1505], "hx": [757, 759, 761, 1440, 1459, 1505, 1962], "cx": [759, 1459, 1962], "nonlinear": [761, 1400, 1421, 1447, 1503, 1505, 1515, 1960, 1985, 2024], "elman": [761, 1503, 1505], "adaptiveavgpool2d": [762, 1553, 1923, 2017], "adaptiveavgpool3d": [763, 1554, 1923, 2017], "ceil_mod": [764, 765, 778, 779, 1397, 1398, 1399, 1455, 1456, 1457, 1481, 1482, 1483, 1560, 1561, 1562, 1614, 1615, 1616, 1618, 1619, 1620, 1790, 1791, 1962, 2049], "count_include_pad": [764, 765, 1397, 1398, 1399, 1560, 1561, 1562, 1962, 2049], "divisor_overrid": [764, 765, 1398, 1399, 1561, 1562, 1962, 2049], "kh": [764, 765, 769, 770, 1398, 1399, 1435, 1436, 1482, 1483, 1561, 1562, 1569, 1570, 1572, 1573, 1588, 1589, 1619, 1620], "kw": [764, 765, 769, 770, 1398, 1399, 1435, 1436, 1482, 1483, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1588, 1589, 1618, 1619, 1620], "sh": [764, 765, 769, 770, 1561, 1562, 1569, 1570, 1572, 1573, 1619, 1620, 2054], "sw": [764, 765, 768, 769, 770, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1618, 1619, 1620], "avgpool2d": [764, 1561, 2017], "_channel": [764, 765, 768, 769, 770, 1415, 1416, 1417, 1418, 1419, 1420, 1442, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1618, 1619, 1620, 2020], "ih": [764, 765, 769, 770, 1503, 1505, 1561, 1562, 1569, 1570, 1572, 1573, 1619, 1620], "iw": [764, 765, 768, 769, 770, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1618, 1619, 1620], "padh": [764, 765, 769, 770, 1561, 1562, 1569, 1570, 1572, 1573], "padw": [764, 765, 768, 769, 770, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573], "kd": [765, 770, 1399, 1483], "sd": [765, 770], "padd": [765, 770], "formul": [766, 1406, 1429, 1443, 1478, 1524, 1525, 1612, 1630, 1644, 1996, 2024], "min_": [767, 1286, 1287, 1296, 1314, 1886], "max_": [767, 1481, 1482, 1483, 1690, 1724], "convolv": [768, 769, 770, 1415, 1416, 1417, 1418, 1419, 1420, 1464, 1465, 1466, 1467, 1468, 1469, 1568, 1569, 1570, 1571, 1572, 1573], "dw": [768, 769, 770, 1568, 1569, 1570, 1571, 1572, 1573], "qf": [768, 769, 770], "dtype_input": [768, 769, 770], "dtype_filt": [768, 769, 770], "q_filter": [768, 769, 770], "dh": [769, 770, 1569, 1570, 1572, 1573], "dd": 770, "scale_factor": [775, 781, 782, 783, 1540, 1541, 1542, 1604, 1644, 1663, 1664, 1665, 1962, 2049], "align_corn": [775, 781, 782, 1540, 1541, 1558, 1593, 1604, 1663, 1664, 1962, 2049], "height": [775, 781, 1398, 1399, 1416, 1417, 1419, 1420, 1456, 1457, 1482, 1483, 1495, 1522, 1540, 1604, 1663, 1979], "spatial": [775, 781, 782, 783, 956, 1118, 1403, 1434, 1460, 1500, 1501, 1522, 1539, 1540, 1541, 1542, 1558, 1593, 1604, 1634, 1635, 1636, 1663, 1664, 1665], "pixel": [775, 781, 783, 1416, 1423, 1426, 1427, 1428, 1432, 1495, 1500, 1501, 1540, 1558, 1593, 1604, 1663, 1665], "corner": [775, 781, 947, 1540, 1548, 1549, 1550, 1558, 1593, 1604, 1663, 2007], "leakyrelu": [776, 1489, 1608, 1999, 2017], "_slope": [776, 1474, 1608, 1985], "xa": [777, 1300, 1311, 1312, 1313, 1475, 1610], "return_indic": [778, 779, 1393, 1394, 1395, 1435, 1436, 1481, 1482, 1483, 1484, 1485, 1486, 1555, 1556, 1557, 1588, 1589, 1618, 1619, 1620, 1962], "maxpool1d": [778, 1484, 1618, 1621, 2017], "linearli": [781, 1163, 1309, 1540, 1663, 1764, 1785, 1994, 2011, 2018], "neighbour": [783, 1476, 1604, 1665], "stub": [784, 785, 2012], "calibr": [784, 785, 793, 834, 835, 853, 855, 857, 1986, 2015, 2016, 2018, 2034], "quantstub": [786, 2015], "dequantstub": [786, 2015], "quantwrapp": 787, "backend_config": [788, 789, 790, 791, 792, 813, 814, 855, 856, 857, 858, 2034], "backendpatternconfig": [788, 857], "blob": [788, 1156, 1996, 1998, 2029, 2053], "dtypeconfig": [788, 789, 791, 857], "observationtyp": [788, 789, 857, 2017], "weighted_int8_dtype_config": [788, 857], "input_dtyp": [788, 790, 857, 2017], "output_dtyp": [788, 790, 857, 2017, 2049], "weight_dtyp": [788, 790, 857, 2017], "bias_dtyp": [788, 790, 2017], "fuse_conv2d_relu": 788, "is_qat": [788, 789], "convrelu2d": [788, 2017], "linear_config": 788, "set_observation_typ": [788, 789, 857], "output_use_different_observer_as_input": [788, 789, 792, 857, 2017], "add_dtype_config": [788, 789, 857], "set_root_modul": [788, 789], "set_qat_modul": [788, 789], "set_reference_quantized_modul": [788, 789], "conv_relu_config": 788, "set_fused_modul": [788, 789], "set_fuser_method": [788, 789], "fused_conv_relu_config": 788, "my_backend": [788, 2040], "set_backend_pattern_config": [788, 857], "from_dict": [788, 789, 790, 811, 812, 813, 850], "backend_config_dict": [788, 2015], "set_nam": 788, "to_dict": [788, 789, 790, 811, 812, 813, 850], "backendconfig": [789, 814, 855, 857, 2018], "dtype_config": [789, 2017], "backend_pattern_config_dict": 789, "observation_typ": [789, 2017], "qat_modul": [789, 2017], "reference_quantized_modul": 789, "fused_modul": [789, 2017], "fuser_method": [789, 810, 2017], "pattern_complex_format": 789, "set_dtype_config": 789, "fuser": [789, 1264, 1961], "fuse_linear_relu": 789, "linearrelu": [789, 2017], "8bea7180a8ba3c279f2c9b050f2a69a6": 789, "understood": [789, 955], "output_share_observer_with_input": [789, 792, 2017], "renam": [789, 1924, 1926, 1962, 1978, 1979, 2010, 2048], "quantdequantstub": 789, "set_pattern": 789, "is_dynam": [790, 795, 815, 816, 817, 818, 820, 821, 822, 2017], "quant1": 790, "dequant1": 790, "fp32_linear": 790, "quant2": 790, "dequant2": 790, "bracket": [790, 2021], "dtype_config1": 790, "dtype_config2": 790, "dtypewithconstraint": [790, 2017], "quant_min_lower_bound": [790, 791, 2017], "quant_max_upper_bound": [790, 791, 2017], "255": [790, 798, 1112, 1113, 1152, 1593, 1604, 1663, 2015, 2017, 2029], "input_dtype_with_constraint": 790, "scale_min_lower_bound": [790, 791, 2017], "scale_max_upper_bound": [790, 791, 2017], "dtype_config_dict": 790, "bias_typ": [790, 857], "scale_exact_match": [791, 2017], "zero_point_exact_match": [791, 2017], "quant_min": [791, 795, 798, 815, 816, 817, 818, 821, 822, 1112, 1113, 1962, 2015], "quant_max": [791, 795, 798, 815, 816, 817, 818, 821, 822, 1112, 1113, 1962, 2015], "fixedqparamsobserv": 791, "fixedqparamsfakequant": 791, "input_output_not_observ": [792, 2017], "remove_qconfig": 793, "is_refer": 793, "convert_custom_config_dict": [793, 811, 2015], "from_observ": [793, 811, 2015], "observed_to_quantized_custom_module_class": [793, 811, 2015], "observedcustommodul": [793, 811, 813, 834, 2015], "quantizedcustommodul": [793, 811], "calib_data": 794, "fake_quant": [795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 858, 1112, 1113, 2034], "movingaverageminmaxobserv": [795, 798, 818], "observer_kwarg": [795, 798], "x_out": [795, 798], "quanti": 795, "choose_qparam": 795, "dq": 795, "fake_quant_en": 795, "observer_en": 795, "calculate_qparam": [796, 815, 816, 820], "extra_repr": [797, 1250, 1488, 1992], "qscheme": [798, 815, 816, 817, 818, 821, 822, 823, 1962, 2010, 2015, 2018, 2031], "fake_qu": [799, 803, 804, 805, 2015], "default_fake_qu": 800, "default_per_channel_weight_fake_qu": 801, "default_weight_fake_qu": 802, "histogram": [803, 815, 827, 1211, 1213, 1962, 2010, 2029], "memoryless": [804, 805], "averaging_const": [804, 805, 817, 818, 1962], "modules_to_fus": 810, "fuser_func": 810, "fuse_known_modul": 810, "fuse_custom_config_dict": [810, 812], "convmodul": 810, "bnmodul": 810, "convbnmodul": 810, "additional_fuser_method_map": 810, "fuse_conv_bn": [810, 2017], "conv1": [810, 1262, 1488, 1516, 1961, 2007, 2015, 2029], "bn1": 810, "relu1": [810, 1516, 1666], "fused_m": 810, "custom_config": [811, 812, 813, 814], "convert_fx": [811, 2015, 2034], "convert_custom_config": [811, 855, 2015], "set_observed_to_quantized_map": 811, "set_preserved_attribut": [811, 812, 813], "attr1": [811, 812, 813, 2009], "attr2": [811, 812, 813, 2009], "floatcustommodul": [811, 813], "weight_onli": [811, 855, 2015], "preserved_attribut": [811, 812, 813], "observed_class": [811, 813], "quantized_class": 811, "quant_typ": [811, 813], "quanttyp": [811, 813], "fuse_fx": [812, 2015], "fuse_custom_config": [812, 856], "convertcustomconfig": [812, 855], "prepare_fx": [813, 836, 855, 858, 2015, 2034], "prepare_qat_fx": [813, 855, 2015], "prepare_custom_config": [813, 814, 857, 858, 2015], "set_standalone_module_nam": 813, "module1": [813, 850, 1990], "qconfig_map": [813, 814, 850, 851, 852, 855, 857, 858, 2015], "child_prepare_custom_config": 813, "set_standalone_module_class": 813, "mystandalonemodul": 813, "set_float_to_observed_map": 813, "set_non_traceable_module_nam": 813, "module2": [813, 850, 1990], "module3": [813, 1990], "set_non_traceable_module_class": 813, "nontraceablemodule1": 813, "nontraceablemodule2": 813, "set_input_quantized_index": 813, "set_output_quantized_index": 813, "prepare_custom_config_dict": [813, 834, 836, 2015], "standalone_module_nam": 813, "standalone_module_class": 813, "module_class": 813, "float_to_observed_custom_module_class": [813, 834, 2015], "non_traceable_module_nam": 813, "non_traceable_module_class": 813, "input_quantized_idx": 813, "output_quantized_idx": 813, "float_class": 813, "qconfigmap": [814, 851, 852, 855, 857, 2015, 2018], "preparecustomconfig": [814, 857], "2048": [815, 1531, 1533, 1535, 1990], "upsample_r": 815, "per_tensor_affin": [815, 816, 817, 1788, 1789, 1790, 1791, 2015, 2018], "reduce_rang": [815, 816, 817, 818, 821, 823, 1962, 2015, 2016], "factory_kwarg": [815, 816, 821], "1920928955078125e": [815, 816, 817, 818, 821], "finfo": [815, 816, 817, 818, 821, 1305, 1308, 1388, 1960, 2031], "minmaxobserv": [815, 817, 821, 837, 857, 858, 2018], "x_": [816, 817, 988, 1108, 1324, 1325, 1327, 1330, 1338, 1401, 1423, 1478, 1495, 1521, 1523, 1650, 1863, 1865, 1908, 1987, 2018, 2025], "q_": [816, 2018], "x_orig": 816, "reset_min_max_v": [816, 821], "ch_axi": [818, 821, 1962], "per_channel_affin": [818, 821, 1787, 2015, 2018], "custom_op_nam": [819, 822], "with_arg": [820, 837, 857, 858], "_callable_arg": 820, "_with_arg": 820, "foo_build": 820, "foo_instance1": 820, "foo_instance2": 820, "with_callable_arg": 820, "_with_callable_arg": 820, "cur_tim": 820, "get_time_func": 820, "dan": 820, "creation_tim": 820, "compute_dtyp": 822, "ptq": [827, 2015, 2016, 2018], "obs_dict": 833, "get_observer_state_dict": 833, "allow_list": [834, 2033], "observer_non_leaf_module_list": 834, "preemptiv": [834, 835, 1675], "propagate_qconfig_": 836, "qconfig_dict": [836, 850], "my_qconfig": 837, "default_observ": 837, "default_qat_config": 843, "set_glob": [850, 855, 857, 2015], "set_object_typ": [850, 855, 857], "set_module_name_regex": 850, "regex": 850, "set_module_nam": [850, 855, 857], "set_module_name_object_type_ord": 850, "global_qconfig": 850, "qconfig1": 850, "qconfig2": 850, "qconfig3": 850, "object_typ": 850, "module_name_regex": 850, "module_name_object_type_ord": 850, "conv0": 850, "x86": [851, 852, 1830, 2015, 2017], "run_arg": [853, 859], "qconfig_spec": 854, "quantize_fx": [855, 856, 857, 858, 2015, 2034], "_remove_qconfig": 855, "qconfig_from_prepar": 855, "prepared_model": [855, 857, 858], "xnnpack": [855, 1973, 2015], "get_default_backend_config": [855, 857, 858], "quantized_model": 855, "fusion_pattern": 856, "fusecustomconfig": 856, "_equalization_config": 857, "get_default_qconfig_map": [857, 2015], "float_model": [857, 858, 2015, 2033], "data_load": [857, 858, 1761, 1767, 2001, 2015], "get_default_qconfig": [857, 858, 2015], "linear_pattern_config": 857, "suer": 857, "sample_inference_data": [857, 2015], "get_default_qat_qconfig_map": [858, 2015], "load_weight": 858, "train_data": 858, "get_default_qat_qconfig": [858, 2015], "custom_module_class_map": 860, "lceil": [861, 957], "rceil": [861, 957], "adjac": [861, 947, 1426, 1427, 1428, 1432, 1801, 2024], "set_default_dtyp": [861, 937, 946, 1099, 1101, 1111, 1116, 1134, 1150, 1153, 1198, 1208, 1209, 1270, 1734, 1794, 1798, 1801, 1827, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1957], "get_default_dtyp": [861, 1321, 1337, 1736, 1801, 2026, 2027, 2057], "set_default_devic": [861, 937, 946, 1099, 1101, 1111, 1116, 1134, 1150, 1153, 1208, 1209, 1270, 1321, 1337, 1734, 1794, 1796, 1798, 1800, 1801, 1827, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1868, 1869, 1870, 1871, 1872, 1873, 1912, 1914, 1957, 2027], "5000": [861, 876, 882, 883, 884, 939, 963, 1116, 1118, 1119, 1126, 1129, 1134, 1144, 1146, 1147, 1148, 1204, 1210, 1213, 1276, 1302, 1321, 1379, 1381, 1412, 1413, 1431, 1540, 1786, 1790, 1791, 1792, 1801, 1805, 2025, 2030], "maxim": [870, 1348, 1421, 1484, 1485, 1486, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1753, 1754, 1755, 1756, 2024, 2044, 2054], "3398": 870, "2663": [870, 1990], "2686": 870, "2450": 870, "7401": 870, "8805": 870, "3402": 870, "1936": 870, "4907": [870, 1338], "3948": [870, 983], "0691": 870, "3132": 870, "6092": 870, "5419": 870, "2993": [870, 1885], "3195": 870, "1139": 871, "2254": 871, "1381": [871, 1885], "3687": 871, "1975": [871, 1980], "0102": 871, "4732": 871, "9240": 871, "1207": [871, 1373], "7506": 871, "0213": 871, "7809": 871, "2960": 871, "9384": 871, "1438": 871, "ascend": [872, 1118, 1287, 1289, 1318, 1372, 1821, 1858, 1919], "0785": 872, "5267": 872, "8521": 872, "4065": 872, "1598": 872, "0788": 872, "0745": 872, "2700": 872, "2208": 872, "0722": 872, "7064": 872, "2564": 872, "0669": 872, "2318": 872, "8229": 872, "9280": 872, "lexicograph": [873, 1729, 1964, 2024], "9039": 874, "6291": 874, "0795": [874, 1786, 1999], "1586": 874, "1939": [874, 1992], "4900": 874, "1909": 874, "7503": 874, "9355": 874, "histori": [875, 876, 1165, 1745, 1901, 1960, 1971, 1980, 1992, 1994, 2021], "dlpack": [876, 1149, 1960], "frombuff": [876, 1825], "data_ptr": [876, 922, 1978, 2026, 2028], "addbackward0": [876, 1999, 2004], "__array_interface__": [876, 2044], "5962": 877, "4985": 877, "4396": 877, "4525": [877, 1980], "6387": 877, "4552": 877, "sine": [878, 1841, 1851, 1853], "1606": 878, "4267": 878, "0899": 878, "0250": 878, "1599": 878, "1534": 878, "9435": 878, "8990": [878, 1093], "arctang": [879, 880], "2341": 879, "2539": 879, "6256": 879, "6448": 879, "2299": 879, "2487": 879, "5591": [879, 908], "5727": 879, "quadrant": 880, "9041": [880, 956], "0196": [880, 956], "3108": [880, 956], "4423": [880, 956], "9833": 880, "0811": 880, "9743": 880, "4151": 880, "tangent": [881, 890, 894, 895, 1162, 1163, 1528, 1899, 1900], "9385": 881, "2968": 881, "8591": 881, "1871": 881, "7253": 881, "3060": 881, "2899": 881, "1893": 881, "needs_input_grad": [885, 901, 902, 1992], "setup_context": [886, 901, 902, 1993], "save_for_forward": [886, 896, 901, 902, 1993], "grad_input": [887, 896, 898, 900, 901, 902, 920, 1250, 1488, 1992, 1999], "underneath": [888, 901, 902], "generate_vmap_rul": [888, 901, 902, 1993], "out_dim": [888, 901, 902, 1167, 1935, 1962, 1979, 1993], "grad_tensor": [889, 910, 1962, 1990], "grad_vari": 889, "forward_ad": [890, 891], "primal": [890, 895, 1158, 1162, 1163, 1166], "unpack_du": [890, 891, 894], "dual": [890, 891, 892, 894, 895, 1728, 1993], "make_du": [891, 895, 896, 901, 902], "your_fn": 891, "grad_aft": 891, "dual_level": [894, 895, 896, 901, 902], "apply_jvp": 896, "mark_dirti": [896, 901, 902, 922, 1992], "x_npy": [896, 897, 901], "once_differenti": [896, 897, 898, 899, 900, 901, 902, 1992], "mark_non_differenti": [896, 901, 902, 1992, 1993], "g1": [896, 898, 900, 901, 902, 1990, 2022], "g2": [896, 898, 900, 901, 902, 1990, 2022], "oppos": [896, 899, 901, 902, 1993], "weren": [896, 899, 901], "grad_out": [896, 899, 901, 902, 1962, 1996, 2049], "gx": [896, 899, 901], "gy": [896, 899, 901], "gz": [896, 899, 901, 2014], "y_t": [896, 901, 902], "fwad": [896, 901, 902], "a_dual": [896, 901, 902], "set_materialize_grad": [896, 901, 902, 1992], "simplefunc": [896, 900, 901, 902], "induc": [896, 900, 901, 902, 1593, 1632, 1985, 2042], "backward_extend": 902, "forward_extend": 902, "outer_jacobian_strategi": 904, "disconnect": [904, 905, 906, 907, 908, 909], "said": [904, 905, 906, 907, 908, 909, 1971, 2002], "cliff": [904, 906, 910], "_debug_only_display_vmap_fallback_warn": [904, 910], "pow_reduc": [904, 905, 908], "2265": 904, "8221": 904, "9456": [904, 938], "2550": 904, "viewbackward": [904, 906, 1995], "pow_adder_reduc": [904, 905, 908], "func_output": [905, 907, 908, 909], "1448": 905, "0239": 905, "6456": 905, "4988": 905, "4310": 905, "sumbackward0": [905, 908, 1992], "3030": 905, "vhp": 905, "batched_grad": 906, "exp_reduc": [906, 907, 909], "4917": 906, "4352": 906, "4369": 906, "3799": 906, "exp_add": 906, "8052": 906, "3963": 906, "3090": 907, "6742": 907, "9114": 907, "2106": 907, "sumbackward1": [907, 909], "squeezebackward1": 907, "adder": [907, 909], "2399": 907, "5005": 907, "0689": 908, "2431": 908, "0989": 908, "4456": 908, "8053": [908, 1816], "7817": 909, "2458": 909, "7830": 909, "7782": 909, "4458": 909, "3962": 909, "3042": [909, 1308], "6354": 909, "1288": [909, 1844], "0652": 909, "5483": 909, "5035": 909, "2046": [909, 983, 1992], "1292": 909, "1432": 909, "3059": 909, "3225": 909, "6652": 909, "7753": 909, "0152": 909, "4225": 909, "3340": 909, "only_input": 910, "allow_unus": [910, 1962], "is_grads_batch": 910, "materialize_grad": 910, "require_grad": [910, 1964, 1987], "inferencemod": [911, 1987, 2036], "bump": 911, "_version": [911, 2010], "doubler": [911, 1102, 1728], "is_train": [912, 2032], "gradgradcheck": [914, 915, 1992], "06": [915, 916, 1291, 1296, 1297, 1308, 1309, 1314, 1441, 1497, 1536, 1539, 1590, 1660, 1740, 1754, 1886, 1962, 2031], "raise_except": [915, 916], "nondet_tol": [915, 916], "check_undefined_grad": [915, 916], "check_grad_dtyp": [915, 916], "check_batched_grad": [915, 916], "check_batched_forward_grad": 915, "check_forward_ad": 915, "check_backward_ad": 915, "fast_mod": [915, 916, 1996], "differenc": [915, 1992], "perturb": [915, 916, 1996], "gen_non_contig_grad_output": 916, "check_fwd_over_rev": 916, "check_rev_over_rev": 916, "noncontigu": [916, 1041, 2031], "inaccuraci": 916, "clonebackward0": 918, "gi": [920, 921, 1999], "removablehandl": [920, 921, 1250, 1488, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 2012], "88446": 924, "profilerstep": 924, "optimizer1step": 924, "optimizer2step": 924, "optimizer1": [924, 1986], "current_step": 924, "erase_step_count": 924, "increment_step": 924, "_kineto_step": 924, "init_step_count": 924, "eventlist": [927, 928], "group_by_stack_n": [928, 2014], "roof": 928, "functioneventavg": [928, 930], "node_id": 931, "77": 931, "47": 931, "470u": 931, "73": 931, "465u": 931, "03": [931, 959, 1328, 1842, 1843, 1848], "121": 931, "891u": 931, "324u": 931, "421u": 931, "503u": 931, "234": 931, "344u": 931, "000u": 931, "profiler_util": [932, 933, 934, 935], "elapsed_u": 932, "mem_record": 934, "in_interv": 934, "start_u": 934, "end_u": 934, "shallow": [935, 1250, 1424, 1488, 1536, 1537, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756], "default_factori": [935, 2053], "__missing__": 935, "fromkei": [935, 1498], "keyerror": 935, "popitem": [935, 1498, 2010], "lifo": 935, "setdefault": [935, 1498, 2010], "window_length": [937, 946, 1208, 1209, 1270, 1962], "2n": [937, 1839, 2024], "trim": [937, 946, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1208, 1209, 1247], "_length": [937, 946, 1208, 1209, 1247, 1407, 1882], "sim": [938, 1502, 1637, 1778, 1798], "pseudorandom": [938, 1374, 1731, 1775, 1778, 1794, 1796, 1798, 1800, 1887], "1737": 938, "0950": [938, 1864], "3609": 938, "7148": 938, "0289": [938, 1911], "2676": 938, "8937": 938, "7202": 938, "2500": [939, 1116, 1118, 1119, 1129, 1134, 1321, 1540, 1792], "7500": [939, 1119, 1129, 1148, 1204, 1306, 1321, 1540, 1792, 1847], "AND": [940, 1175, 1332, 1964, 1987], "OR": [943, 1189, 1334, 1964], "xor": [945, 1335, 1964], "blackman": [946, 1849], "arrang": 947, "broadcast_tensor": [949, 1962, 2010], "out_int32": [952, 1821, 1962], "opposit": [952, 1119, 1121, 1886, 1907], "formal": [952, 1821, 1971, 1979, 1995], "eg": [952, 1814, 1821, 2053], "tensor_a": [954, 967], "tensor_b": 954, "6580": 955, "0969": 955, "4614": 955, "1034": [955, 1098], "5790": 955, "1497": 955, "compute_mod": [956, 2049], "use_mm_for_euclid_dist_if_necessari": 956, "distanc": [956, 1247, 1286, 1287, 1314, 1447, 1497, 1536, 1537, 1634, 1661, 1761, 1882, 1886, 1960], "infti": [956, 1247, 1302, 1400, 1455, 1456, 1457, 1519, 1634, 1752, 2025], "use_mm_for_euclid_dist": 956, "donot_use_mm_for_euclid_dist": 956, "minkowski": [956, 1634], "ham": [956, 1208, 1634, 1845], "closest": [956, 1634], "xn": [956, 1634], "4821": [956, 959], "059": 956, "0590": 956, "1763": [956, 1804], "4713": [956, 1804], "6986": [956, 1804], "3702": [956, 1804], "1193": [956, 1340], "0959": 956, "7138": 956, "8322": 956, "2830": [956, 1913], "3791": 956, "6341": 957, "4208": 957, "0900": 957, "5826": 957, "clr": [958, 1761], "3375": 958, "9790": 958, "1119": 958, "6577": 958, "5609": [958, 1584], "5095": 958, "2614": 958, "4038": 958, "3378": [958, 1913], "4982": 958, "2457": [958, 1353], "2561": 958, "4684": 958, "7163": 958, "9647": 958, "8917": [958, 1331], "3213": [958, 1327], "2284": [958, 1078], "8615": 958, "2816": 958, "tu": 959, "mt": [959, 1280, 1287, 1289, 1293, 1294, 1295, 1300, 1309, 1785, 1886, 1962, 1971, 2010, 2028, 2030], "4112": 959, "7486": 959, "4551": 959, "3544": 959, "6724": 959, "5528": 959, "0592": [959, 1999], "9371": 959, "5487": 959, "7023": 959, "3842e": [959, 1296], "hermitian": [960, 961, 984, 1114, 1115, 1117, 1119, 1120, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1280, 1281, 1286, 1287, 1289, 1293, 1294, 1295, 1305, 1308, 1314, 1962], "9314": 960, "2251": [960, 998, 1283, 1325], "0889": 960, "4439": 960, "2122": 960, "1412": 960, "6358e": 960, "lh": [961, 1296], "1625": 961, "6097": 961, "8398": 961, "2387": [961, 984], "3771": [961, 1297], "4173": 961, "1626": [961, 998, 1283], "6881e": 961, "tensor_split": [962, 1096, 1214, 1936, 1962, 2010, 2028], "min_valu": [963, 1446], "max_valu": [963, 1446, 1962], "_valu": [963, 1392, 1681, 1871, 1992, 2010, 2024], "7120": 963, "1734": [963, 1225], "0478": [963, 1938], "0922": 963, "3333": [963, 1204, 1213, 1540, 1541, 1901], "horizont": [966, 1214, 1216, 2011, 2013, 2044], "hstack": [966, 1962, 2010, 2024], "with_replac": [967, 1962], "combinations_with_replac": 967, "fullgraph": [968, 2044, 2054], "cache_size_limit": [968, 2044, 2047, 2054], "list_backend": [968, 2035, 2040, 2046], "autotun": [968, 2048], "triton": [968, 1993, 2035, 2039, 2041, 2044, 2046, 2054], "_inductor": [968, 2044, 2054], "list_mode_opt": 968, "epilogue_fus": 968, "max_autotun": 968, "fallback_random": [968, 2044, 2054], "shape_pad": 968, "graph_diagram": 968, "pictur": 968, "list_opt": 968, "_glibcxx_use_cxx11_abi": 969, "bypass": [970, 1098, 1968, 1980, 1990, 1992, 2045], "rand_foo": 973, "compiler_cudagraph_tre": 973, "exclude_tag": 975, "flip": [981, 1139, 1140, 1318, 1962, 2010, 2011, 2044, 2049], "writeabl": [981, 982], "is_conj": [981, 1809, 1962, 2010, 2044], "geq": [983, 1194, 1282, 1290, 1423, 1474, 1495, 1496, 1506, 1576, 1629, 1689, 1985, 2025], "signbit": [983, 1962, 2010, 2024, 2049], "2557": 983, "0026": 983, "5387": 983, "4740": 983, "9244": 983, "7079": 983, "2778": 983, "0249": [983, 1326], "5719": 983, "0059": 983, "2600": 983, "4475": 983, "9567": [983, 1286, 1885], "5757": 983, "1751": 983, "0742": 983, "2998": 983, "1054": 983, "2373": 983, "3190": [983, 1990], "1128": [983, 1308, 1458], "pearson": 984, "coeffici": [984, 1208, 1740, 1742, 1743, 1744, 1746, 1752, 1756, 1844, 1845, 1846, 1910], "r_": [984, 1903], "ij": [984, 1098, 1330, 1338, 1352, 1491, 1863], "c_": [984, 1415, 1416, 1417, 1418, 1419, 1420, 1458, 1500, 1501], "jj": 984, "cov": [984, 1962, 2010], "2678": [984, 1430], "0908": 984, "3766": 984, "2780": 984, "5812": 984, "1535": [984, 1430], "2350": 984, "3582": 984, "4309": 985, "2706": 985, "8562": 985, "9796": [985, 1296], "1395": 985, "2957": 985, "6553": 985, "5574": 985, "1632": 986, "1835": 986, "6979": 986, "7325": [986, 1088], "0133": 986, "7860": 986, "2536": 986, "2805": 986, "sleef": [986, 1853], "y_": [988, 1108, 1324, 1325, 1327, 1401, 1423, 1453, 1863, 1908, 1987, 2025], "_w": [988, 1435], "w_i": [988, 1290], "mu_x": 988, "mu_i": [988, 1746], "w_ia_i": 988, "whichev": [988, 1167, 1593, 1786, 1935, 1990], "w_ix_": 988, "mathbb": [988, 1204, 1280, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1296, 1297, 1300, 1302, 1309, 1311, 1313, 1314, 1423, 1495, 1689], "bessel": [988, 1270, 1848, 1880, 1881, 1930, 1931, 2025], "unbias": [988, 1402, 1403, 1404, 1442, 1450, 1451, 1452, 1460, 1527, 1880, 1881, 1930, 1931, 1962, 2049], "corrcoef": [988, 1962, 2010], "6667": [988, 1213, 1540, 1541, 1806, 1839, 2004], "fw": 988, "4282": 988, "0255": [988, 1085], "4144": [988, 1990], "4169": 988, "streamcontext": [996, 1073, 1955, 1960], "abstractcontextmanag": 996, "3956": [998, 1283], "1455": [998, 1283, 2005], "6895": [998, 1283], "5849": [998, 1283], "3599": [998, 1283], "7180": [998, 1283], "0521": [998, 1283], "1339": [998, 1283], "0225": [998, 1283, 1296], "0257": [998, 1283], "4725": [998, 1283], "1479": [998, 1283], "7005": [998, 1283], "9757": [998, 1283], "3904": [998, 1283], "3726": [998, 1283], "1836": [998, 1283], "9688": [998, 1283], "7153": [998, 1283, 2025], "2159": [998, 1283], "0844": [998, 1283], "5281": [998, 1283], "6120": [998, 1283], "4490": [998, 1283], "5687": [998, 1283], "9792": [998, 1079, 1283], "8304": [998, 1283], "3037": [998, 1283, 1999], "5650": [998, 1283], "2329": [998, 1283], "9883": [998, 1283], "0551": [998, 1283], "capture_begin": [999, 1990], "capture_error_mod": [999, 1033], "make_graphed_cal": [999, 1990], "graph_pool_handl": [999, 1033], "other_graph_inst": [999, 1033], "cudastreamcapturemod": [999, 1033], "thread_loc": [999, 1033], "cudamalloc": [999, 1033, 1055, 1990, 2056], "unsaf": [999, 1033, 1322, 1692, 1695, 1962, 1990, 2012], "capture_end": [999, 1990], "replai": [999, 1033, 1990, 2007, 2039, 2054], "debug_dump": 999, "debug_path": 999, "enable_debug_mod": 999, "path_to_so_fil": 1000, "alloc_fn_nam": 1000, "free_fn_nam": 1000, "enable_tim": [1001, 1362, 1990], "interprocess": 1001, "marker": [1001, 1362], "elapsed_tim": [1001, 1362, 1990], "end_ev": [1001, 1362, 1990], "elaps": [1001, 1362, 1975], "from_ipc_handl": 1001, "reconstruct": [1001, 1340, 1400, 1401, 1996, 2004, 2012], "ipc": [1001, 1037], "ipc_handl": 1001, "cudaeventsynchron": 1001, "cudastreamwaitev": [1001, 1002, 1004], "stream_ptr": 1002, "cudastream_t": [1002, 1990], "record_ev": [1002, 1004], "cudastreamsynchron": [1002, 1004], "wait_ev": [1002, 1004], "interoper": 1006, "caching_allocator_delet": 1006, "mem_ptr": 1007, "caching_allocator_alloc": 1007, "peer_devic": 1008, "_cudaalloc": 1009, "clock": 1010, "sm": 1010, "hertz": 1010, "smi": [1010, 1023, 1051, 1057, 1061, 1075, 1076, 1990, 1994, 1997], "buffer_s": 1012, "10485760": 1012, "chunk_siz": [1015, 1161, 1167, 1935], "cublashandle_t": 1016, "unoccupi": [1023, 1361], "pytorch_cuda_alloc_conf": 1024, "cudamallocasync": [1024, 1055, 1990], "_cudadeviceproperti": 1028, "gencod": 1029, "cuda_graph": 1033, "ordinari": [1035, 1675, 1926, 1986], "code_str": [1041, 1042], "temp": 1041, "typenam": [1041, 1042], "my_kernel": [1041, 1042], "jitted_fn": [1041, 1042], "create_jit_fn": [1041, 1042], "util_fn": 1041, "gelu": [1041, 1517, 1531, 1533, 1535, 1647, 1962, 1980, 2010, 2049], "my_gelu": 1041, "my_lib": [1041, 1968, 2005], "impl": [1041, 1256, 1960, 1968], "num_output": 1042, "sample_arg": 1044, "num_warmup_it": 1044, "allow_unused_input": 1044, "datadistributedparallel": 1044, "amp": [1044, 1926, 1960, 1986, 2048, 2051, 2054], "autocast": [1044, 1494, 1960, 1990, 1992, 2054], "insuffici": [1045, 2042, 2054], "manual_seed_al": [1045, 1926], "occupi": [1047, 1051, 1062, 1359, 1476, 1611, 1990, 1997, 2057], "reset_peak_memory_stat": [1047, 1049, 1062, 1063], "max_memory_reserv": [1048, 1990, 1997], "cudamemgetinfo": 1050, "memory_reserv": [1052, 1990, 1997], "snapshot": [1054, 1960, 1964, 1990, 1997], "large_pool": 1055, "small_pool": 1055, "allocated_byt": 1055, "reserved_byt": 1055, "active_byt": 1055, "inactive_split": 1055, "inactive_split_byt": 1055, "octob": 1055, "1mb": [1055, 2056], "num_alloc_retri": 1055, "num_oom": 1055, "assist": [1055, 1991, 2030], "max_split_s": 1055, "oversize_alloc": 1055, "oversize_seg": 1055, "requested_byt": 1055, "abbrevi": 1056, "percent": [1057, 1076, 2048], "instantan": [1058, 2014], "ascii": [1058, 1060, 1322, 1964, 2014], "sensor": [1061, 1075], "mw": 1061, "milliwatt": 1061, "fermi": 1061, "max_memory_alloc": [1062, 1990, 1997], "max_memory_cach": 1063, "memory_stat": [1064, 1990, 1997], "seed_al": 1065, "environment": [1067, 2048], "total_memori": [1068, 1369], "debug_mod": [1072, 1828], "centigrad": 1075, "x_2": [1077, 1078, 1079, 1080, 1318, 1405, 1421, 1422, 1564, 1575], "x_3": [1077, 1078, 1079, 1080, 1318], "3449": 1077, "5447": 1077, "0685": 1077, "5104": [1077, 1990], "1706": 1077, "2259": 1077, "4696": 1077, "3284": 1077, "9946": 1077, "8209": 1077, "6628": 1078, "0975": 1078, "2680": [1078, 1989], "3298": [1078, 1085], "4220": 1078, "3885": 1078, "1762": 1078, "9165": 1078, "6684": [1078, 1227], "6001": 1079, "2069": 1079, "1919": 1079, "6727": [1079, 1092], "0062": 1079, "4126": 1079, "2129": 1079, "4206": 1079, "1968": [1079, 2025], "1241": 1079, "0238": 1079, "0233": [1079, 1793], "0157": 1079, "0158": [1079, 1886], "0065": 1079, "0014": [1079, 2025], "0006": 1079, "46": [1080, 1208, 1844], "49": [1080, 1141, 1306, 1989], "74": 1080, "83": 1080, "trapezoid": [1081, 1909, 1962, 2010], "360": 1082, "2832": 1082, "diagflat": [1085, 1962, 2010], "5950": 1085, "0872": 1085, "4264": 1085, "1064": [1085, 1999], "8795": 1085, "2429": 1085, "1374": 1085, "1029": 1085, "6482": 1085, "6300": 1085, "5410": 1086, "2934": 1086, "1788": [1086, 2025], "5684": 1086, "0845": [1086, 1853, 1999], "3986": 1086, "2956": [1087, 1283], "9068": 1087, "1695": 1087, "2094": [1087, 1990], "3018": 1087, "1516": 1087, "9342": 1087, "0854": 1088, "1431": 1088, "1752": 1088, "8536": 1088, "0905": 1088, "0360": [1088, 1373], "6927": 1088, "3735": 1088, "4945": 1088, "2631": [1088, 1372, 1990], "3755": 1088, "5977": [1088, 1992], "8172": 1088, "1065": [1088, 1999], "0401": 1088, "2235": [1088, 1885], "7938": 1088, "3081": 1088, "6166": 1088, "2335": 1088, "0500": 1088, "7336": 1088, "3836": 1088, "1015": 1088, "emb": [1089, 1824, 1854], "5393": 1092, "8675": 1092, "5916": 1092, "6321": 1092, "0967": 1092, "0511": 1092, "6295": 1092, "8360": 1092, "6973": 1092, "6537": 1092, "dividend": [1093, 1143, 1146, 1805, 1915], "true_divid": [1093, 1962, 2010], "3810": [1093, 1212], "2774": 1093, "2972": 1093, "3719": 1093, "4637": [1093, 1992], "7620": 1093, "5548": 1093, "5944": 1093, "7438": 1093, "9274": 1093, "3711": 1093, "9353": 1093, "4605": 1093, "2917": 1093, "1815": [1093, 1331], "0111": [1093, 1842], "9805": 1093, "5923": 1093, "1062": 1093, "4581": [1093, 1290], "7759": 1093, "2344": 1093, "1830": 1093, "0313": 1093, "1908": 1093, "4757": 1093, "8032": 1093, "2930": 1093, "8113": 1093, "2308": 1093, "4620": [1093, 1938], "6051": 1093, "5676": 1093, "2639": 1093, "2260": 1093, "4509": [1093, 1304], "2086": 1093, "1322": 1093, "9764": 1093, "9564": 1093, "3484": 1093, "2278": 1093, "1068": [1093, 1225], "4678": 1093, "3938": [1093, 1896], "depthwis": [1096, 1097, 1415, 1416, 1417], "atleast_3d": [1097, 1962, 2010], "notat": [1098, 1453, 1833, 1965, 1999, 2030], "einstein": 1098, "summat": [1098, 1247, 1330, 1338, 2024], "subscript": [1098, 1965, 2001], "jk": [1098, 2048], "ik": [1098, 1323, 1863], "za": 1098, "alphabet": [1098, 1577, 2020], "arrow": [1098, 2022], "ki": 1098, "ellipsi": [1098, 1964, 1965, 1979], "fourth": 1098, "whitespac": [1098, 1965], "opt_einsum": [1098, 1960], "_the_": 1098, "disclaim": 1098, "sublist": [1098, 2054], "52": 1098, "op1": [1098, 1964], "sublist1": 1098, "op2": [1098, 1964], "sublist2": 1098, "subslist_out": 1098, "2104": 1098, "7952": 1098, "2433": 1098, "4545": 1098, "1156": 1098, "2897": [1098, 1999], "3918": 1098, "4963": 1098, "3744": 1098, "9381": 1098, "2685": 1098, "6070": 1098, "7208": 1098, "8058": 1098, "4419": 1098, "0936": 1098, "1713": 1098, "4291": 1098, "5802": 1098, "7350": [1098, 2025], "5704": 1098, "4290": 1098, "9323": 1098, "4480": 1098, "bij": 1098, "bjk": 1098, "bik": 1098, "0564": 1098, "5904": 1098, "2023": 1098, "1271": 1098, "6706": [1098, 1786], "8097": 1098, "8025": 1098, "1183": 1098, "2239": [1098, 1310], "3107": 1098, "5756": 1098, "2354": 1098, "4558": 1098, "3460": 1098, "5087": 1098, "8530": [1098, 1412, 1543], "8153": 1098, "8787": 1098, "3839": [1098, 1934], "2112": [1098, 1911], "3728": 1098, "1131": [1098, 1783], "0921": 1098, "8305": 1098, "ji": 1098, "anm": 1098, "bm": 1098, "ba": 1098, "3430": [1098, 1331], "2405": 1098, "4494": 1098, "3311": 1098, "5201": 1098, "0356": 1098, "4064e": 1099, "8000e": 1099, "3493e": 1099, "5751e": 1099, "1428e": 1099, "5955e": 1099, "9683e": 1101, "1239e": 1101, "0705e": 1101, "orig_func": [1102, 1728], "set_grad_en": [1102, 1962, 2010, 2032], "tripler": [1102, 1728], "elsewher": [1103, 1111, 1194, 1207, 1240, 1242, 1243, 1246, 1275, 1339, 1385, 1864, 1959], "_max": [1112, 1113, 2015], "_min": [1112, 1113, 2015], "nearbi": [1112, 1113], "_int": [1112, 1113], "_point": [1112, 1113], "2525": 1112, "0466": 1112, "3491": [1112, 1304], "2168": [1112, 1903], "5906": [1112, 2025], "6258": 1112, "6444": 1112, "0542": 1112, "0475": [1112, 2025], "0486": 1112, "3405": 1112, "6134": [1112, 1353], "6323": 1112, "0552": 1113, "9730": 1113, "3973": 1113, "0780": 1113, "4000": [1113, 1116, 1125, 1134, 1540, 1789, 1839], "fourier": [1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1247, 1849, 1882, 1960], "rfft": [1114, 1119, 1129, 1133, 1134, 1135], "chalf": [1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1129, 1130, 1131, 1962, 2010, 2030], "sm53": [1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135], "ortho": [1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1323], "orthonorm": [1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1314, 1689, 1886], "ifft": [1114, 1118, 1119, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131], "fftn": [1115, 1118, 1124, 1127, 1135], "rfft2": [1115, 1130], "ifft2": [1115, 1127], "two_fft": [1115, 1117, 1127, 1133, 1135], "check_strid": [1115, 1117, 1118, 1123, 1124, 1129, 1130, 1131, 1133, 1135, 2031], "nyquist": [1116, 1118, 1126, 1128, 1132, 1133, 1134, 1135], "i_1": [1117, 1135, 1271], "i_n": [1117, 1135, 1167, 1271, 1903, 1935], "rfftn": [1117, 1121, 1127, 1131, 1133], "ifftn": [1117, 1123, 1128], "reorder": [1118, 1306, 1995], "rearrang": [1118, 1125, 1408, 1500, 1501, 1635, 1636, 1979], "fftfreq": [1118, 1125, 1134], "9000": [1118, 1901], "8000": [1118, 1379, 1540, 1786, 1839], "uncent": 1118, "ifftshift": 1118, "x_center": 1118, "x_uncent": 1118, "fft_uncent": 1118, "fft_center": 1118, "x_centered_2": 1118, "ihfft": [1119, 1127, 1128], "irfft": [1119, 1131, 1132], "symmetri": [1119, 1121, 1882], "transformed_dim_s": [1119, 1129], "0000j": [1119, 1126, 1129, 1280, 1281, 1286, 1287, 1289, 1779, 1836], "1250": [1119, 1372], "1720j": 1119, "0406j": 1119, "2809": 1119, "6250": [1119, 1129, 1148, 1540], "9691": 1119, "hfftn": [1120, 1128], "last_dim_s": [1120, 1121, 1130, 1131, 2049], "ihfft2": 1120, "roundtrip": [1120, 1121, 1129, 1130, 1131], "ihfftn": [1121, 1127], "irfftn": [1121, 1130, 1135], "fft2": [1123, 1133], "two_ifft": [1123, 1124, 1128], "fftshift": 1125, "hfft": 1126, "6882j": 1126, "1625j": 1126, "hfft2": 1127, "8602j": 1129, "2031j": 1129, "1562": 1129, "3511": 1129, "7812": 1129, "2114": 1129, "irfft2": 1133, "wider": [1141, 1961, 1964, 2011, 2024], "2500e": 1141, "1000e": 1141, "7656e": 1141, "lfloor": [1142, 1147, 1392, 1397, 1398, 1399, 1415, 1416, 1417, 1434, 1455, 1456, 1457, 1481, 1482, 1483, 1539, 1540, 1541, 1542, 1562, 1632, 1801, 1882], "rfloor": [1142, 1147, 1392, 1397, 1398, 1399, 1415, 1416, 1417, 1434, 1455, 1456, 1457, 1481, 1482, 1483, 1539, 1540, 1541, 1542, 1562, 1632, 1801, 1882], "8166": 1142, "5308": 1142, "2530": 1142, "2091": 1142, "7000": [1144, 1431, 1838], "3000": [1145, 1430, 1838, 1990], "entrywis": [1146, 1805], "modulu": [1146, 1310, 1805], "operatornam": [1147, 1286, 1287, 1288, 1289, 1306, 1314, 1400, 1401, 1407, 1447, 1448, 1454, 1479, 1519, 1537, 1798, 1838], "8750": [1148, 1540], "sizeof": [1150, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 2026, 2047], "map_shar": [1150, 2026], "map_priv": [1150, 2026], "mmap": [1150, 1322, 1977, 2026], "tofil": 1150, "t_map": 1150, "char": [1152, 1736, 1978, 2026, 2044], "parameter_and_buffer_dict": 1155, "tie_weight": [1155, 1725], "submodule_nam": [1155, 1725], "parameter_nam": [1155, 1725], "ti": [1155, 1725, 1814, 1968, 1995, 2043], "ty": [1155, 1725], "foo_ti": [1155, 1725], "new_a": [1155, 1725], "grad_weight": [1155, 1992], "detached_param": 1155, "parameters_and_buffer_dict": 1155, "intermediate_upd": 1156, "mutations_and_view": 1156, "proxy_tensor": [1156, 2043, 2054], "make_fx": [1156, 2042, 2054], "inpt": 1156, "f_trace": 1156, "f_no_mutations_trac": 1156, "f_no_mutations_and_views_trac": 1156, "a_1": [1156, 1271], "view_1": 1156, "view_copi": [1156, 1962, 2010, 2032], "view_copy_1": 1156, "as_strid": [1156, 1962, 2010, 2028, 2049], "native_funct": [1156, 1992, 2049], "yaml": [1156, 1992, 2049], "aux": [1157, 1158, 1160, 1161, 1162, 1166], "my_loss_func": 1157, "y_pred": [1157, 1990], "loss_per_sampl": 1157, "y_true": 1157, "autodiff": [1160, 1161, 1162, 1309], "jacobian_f": [1160, 1161], "f_x": [1160, 1161], "jacboian": [1160, 1161], "expectedx": [1160, 1161], "expectedi": [1160, 1161], "_preallocate_and_copi": 1161, "jvp_out": 1162, "wish": [1162, 1877, 1986, 1990, 1992, 1993], "jvp_fn": 1163, "optimiz": [1165, 1961], "l1": [1165, 1447, 1448, 1519, 1602, 1648, 1700, 1709, 1999, 2004], "l2": [1165, 1448, 1479, 1519, 1739, 1740, 1741, 1742, 1744, 1746, 1752, 1753, 1755, 1986], "vjpfunc": 1166, "unsuccessfulli": [1167, 1935], "rummag": [1167, 1935], "batched_dot": [1167, 1935], "jacobian_row": [1167, 1935], "get_vjp": [1167, 1935], "n1": [1167, 1807, 1935], "n0": [1167, 1935], "batched_pow": [1167, 1935], "autobatch": [1167, 1935], "symbolic_shap": [1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1960, 2042], "symbol_to_sourc": 1168, "var_to_v": 1168, "marked_dynam": 1168, "source_name_to_debug_nam": 1168, "solver": [1168, 1960, 2002], "expr": [1168, 1172, 1178, 1183], "tautologi": 1168, "add_equ": 1168, "forced_speci": 1168, "prettify_result": 1168, "original_signatur": 1168, "constraint_violation_error": 1168, "violat": [1168, 1990, 1993], "erro": 1168, "remove_redundant_dynamic_result": 1168, "rewrite_with_congru": 1168, "congruenc": 1168, "ration": 1168, "inequ": [1168, 1178], "disable_congru": 1168, "disable_equival": 1168, "duck": [1169, 1172, 1992, 2012], "nb": [1169, 1175, 1178, 1180, 1264], "simplic": [1169, 1695, 2020, 2021], "varieti": [1169, 1990, 2021], "assume_static_by_default": 1169, "mark_dynamic_dim": 1169, "warn_onli": [1170, 1171, 1175, 1923], "source_pair": 1170, "transit": [1170, 1250, 1352, 1488, 1882, 1960, 1961, 2035, 2047], "unspeci": 1171, "unspec": 1171, "brittl": 1171, "strictminmaxconstraint": 1171, "should_record_ev": 1172, "tracked_fak": 1172, "bind_symbol": 1172, "littl": [1172, 1992, 2004, 2022, 2047], "evaluate_guard": 1172, "cleanest": 1172, "shenanigan": 1172, "bound_sympi": 1172, "check_equ": 1172, "create_symbol": 1172, "dimdynam": [1172, 1174], "constraint_dim": 1172, "do_not_specialize_zero_on": 1172, "symbolic_context": [1172, 1173, 1174], "create_symbolic_sizes_strides_storage_offset": [1172, 1173, 1174, 1177], "create_symboolnod": 1172, "symbool": [1172, 1186, 1190, 1895, 2032, 2042], "create_symintnod": 1172, "symint": [1172, 1177, 1179, 1180, 1181, 1182, 1187, 1188, 1189, 1890, 1891, 1893, 1894, 1895, 1968, 2032, 2043, 2049], "create_unbacked_symbool": 1172, "create_unbacked_symfloat": 1172, "create_unbacked_symint": 1172, "create_unspecified_symbol": 1172, "specialz": 1172, "create_unspecified_symint_and_symbol": 1172, "defer_runtime_assert": 1172, "orig_expr": 1172, "fx_node": 1172, "evaluate_expr": 1172, "expect_r": 1172, "size_oblivi": 1172, "forcing_spec": 1172, "evaluate_guards_express": 1172, "produce_guards_express": 1172, "evaluate_guards_for_arg": 1172, "ignore_stat": 1172, "format_guard": 1172, "get_nontrivial_guard": 1172, "get_shape_group": 1172, "is_unbacked_symint": 1172, "unback": [1172, 1179, 1181, 1182, 1188, 1189, 2043], "produce_guard": 1172, "source_ref": 1172, "input_context": 1172, "equalities_input": 1172, "_simplifi": 1172, "localsourc": [1172, 2047], "boilerpl": [1172, 1999, 2012], "nice": [1172, 1415, 1416, 1417, 1418, 1419, 1420, 1434, 1481, 1482, 1483, 1539, 1979, 1987, 1990, 2012], "size_hint": [1172, 2046], "allow_non": 1172, "suppress_guard": 1172, "dynamic_s": [1173, 1174, 1176], "constraint_s": [1173, 1174, 1176], "tensor_sourc": [1173, 1176], "shape_env_to_source_to_symbol_cach": [1173, 1176], "statelesssymboliccontext": 1173, "owner": [1173, 1959, 1992, 2010, 2020, 2021], "lifecycl": [1173, 2043, 2047], "shape_env": 1173, "dimconstraint": 1174, "vr": 1175, "relaxedunspecconstraint": 1175, "unsoundli": [1175, 1179], "inner_context": 1176, "canonic": 1178, "rh": [1178, 1296, 1341], "Ors": 1178, "cnf": 1178, "subexpr": 1178, "25924": 1178, "lie": [1179, 1521, 1523, 1650, 1865, 2025, 2029, 2043], "intersect": 1179, "fairli": [1179, 2001, 2013, 2042, 2044, 2046], "discharg": 1179, "perfectli": [1179, 1829, 1990, 2013], "definitely_tru": 1181, "parallel_or": 1182, "parallel_and": 1182, "circuit": 1182, "oblivi": 1183, "118579": 1183, "free_symbol": 1184, "sym_and": 1191, "sparse_grad": [1192, 1962, 2049], "tau": [1195, 1290, 1595, 1741, 1755, 1772, 1773, 1842, 1962], "elementari": [1195, 1987, 1996], "reflector": [1195, 1689, 1773], "household": [1195, 1290, 1689, 1773], "householder_product": [1195, 1689, 1772], "gel": [1195, 1296], "set_deterministic_debug_mod": [1199, 1923], "set_float32_matmul_precis": 1200, "edge_ord": [1204, 1962], "rightarrow": 1204, "closer": [1204, 1537, 1786, 1992, 1999, 2015, 2046, 2047, 2048], "interior": 1204, "theorem": 1204, "h_l": 1204, "h_r": 1204, "neighbor": [1204, 1247, 1540, 1542, 1882], "xi_1": 1204, "xi_2": 1204, "approx": [1204, 1887, 1996], "80": [1204, 1306, 1765, 1833, 1990, 2011], "halv": 1204, "coord": 1204, "54": [1208, 1449, 1845], "hann_window": [1208, 1882, 1962, 1966, 2010], "hann": [1209, 1845], "hist": [1212, 1213, 1962], "bin_edg": [1212, 1213, 1962], "9524": 1212, "leftmost": [1213, 1980], "leg": 1217, "triangl": [1217, 2029], "hypotenus": 1217, "4031": 1217, "gammainc": [1219, 2025], "gammaincc": [1220, 2025], "index_reduce_": [1224, 1962], "1427": 1225, "0231": 1225, "5414": 1225, "0009": 1225, "4664": [1225, 1903], "2647": 1225, "1228": 1225, "6571": 1225, "7230": 1225, "6004": 1225, "multidimension": [1227, 1320, 1450], "8173": 1227, "0874": 1227, "1784": 1227, "3279": 1227, "7894": 1227, "4682": 1227, "7159": 1227, "1506": 1227, "4034": 1227, "3657": 1227, "0387": 1227, "9892": 1227, "1774": 1227, "3261": 1227, "3917": 1227, "4537": [1227, 1666], "7493": 1227, "1724": 1227, "2291": 1227, "5749": 1227, "2267": 1227, "7920": 1227, "3607": 1227, "3701": 1227, "3666": 1227, "5850": [1227, 1281], "7242": 1227, "9837": 1227, "1560": 1227, "2907": 1227, "6785": 1227, "5671": [1227, 1282], "5452": 1227, "6912": 1227, "5509": 1227, "1782": 1227, "9843": 1227, "7366": 1227, "5672": [1227, 1731], "5115": 1227, "4864": 1227, "2476": 1227, "4337": 1227, "6347": 1227, "1748": 1227, "3567": [1227, 1281], "6558": 1227, "2469": [1227, 1999], "5787": [1227, 1331], "typecheck": [1237, 2010], "mypi": [1237, 1963, 1964], "warn_alwai": 1238, "set_warn_alwai": 1238, "nonfinit": 1239, "test_el": [1241, 1962], "assume_uniqu": [1241, 1962], "0j": [1246, 1932], "nola": 1247, "envelop": 1247, "hop": [1247, 1882], "shorter": [1247, 2009, 2020], "griffin": 1247, "ieee": [1247, 1441, 1849, 2002], "tran": 1247, "assp": 1247, "vol": [1247, 1441, 1849], "pp": [1247, 1441, 1849], "236": 1247, "apr": 1247, "1984": 1247, "slide": [1247, 1397, 1398, 1399, 1434, 1481, 1482, 1483, 1539, 1587, 1618, 1619, 1620, 1662, 1790, 1791, 1882], "fft_size": 1247, "scriptmodul": [1248, 1249, 1254, 1258, 1260, 1261, 1262, 1266, 1267, 1738, 1961, 1963, 1973, 2009], "attributemodul": 1248, "names_ag": 1248, "get_debug_st": 1249, "graphexecutorst": 1249, "_extra_fil": [1249, 1250, 1258, 1261, 1998], "save_to_buff": 1249, "add_modul": [1250, 1488], "init_weight": [1250, 1488, 1999], "buf": [1250, 1488], "20l": [1250, 1488], "1l": [1250, 1488], "5l": [1250, 1488], "pretti": [1250, 1737, 1833, 1961, 2040, 2043, 2047], "syntax": [1250, 1961, 1964, 2012, 2045], "code_with_const": 1250, "constmap": 1250, "get_buff": [1250, 1488], "attributeerror": [1250, 1488, 1992, 2015], "get_extra_st": [1250, 1488], "set_extra_st": [1250, 1488], "get_paramet": [1250, 1488], "net_b": [1250, 1488], "net_c": [1250, 1488], "inlined_graph": 1250, "ipu": [1250, 1488, 1968, 2004], "remove_dupl": [1250, 1488], "named_children": [1250, 1488, 1999], "conv4": [1250, 1488], "conv5": [1250, 1488], "memo": [1250, 1488, 2043], "register_backward_hook": [1250, 1488], "register_full_backward_hook": [1250, 1488, 1671, 1999], "register_forward_hook": [1250, 1488, 1669, 1999], "with_kwarg": [1250, 1488], "always_cal": [1250, 1488, 1669], "fire": [1250, 1488, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756, 1991, 1998, 2050], "register_module_forward_hook": [1250, 1488, 1999], "register_forward_pre_hook": [1250, 1424, 1488, 1670, 1999], "forward_pr": [1250, 1488], "register_module_forward_pre_hook": [1250, 1488, 1999], "register_module_full_backward_hook": [1250, 1488, 1667, 1987, 1999], "register_full_backward_pre_hook": [1250, 1488, 1672, 1999], "register_module_full_backward_pre_hook": [1250, 1488, 1999], "register_load_state_dict_post_hook": [1250, 1488, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756], "incompatible_kei": [1250, 1488], "register_modul": [1250, 1488, 1673], "register_paramet": [1250, 1488, 1674, 1992, 1999], "register_state_dict_pre_hook": [1250, 1488, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756], "keep_var": [1250, 1488], "gan": [1250, 1488, 1690, 1724], "share_memori": [1250, 1488, 2001], "share_memory_": [1250, 1488, 1977, 2026], "4d": [1250, 1403, 1434, 1451, 1488, 1540, 1587, 1604, 1632, 1663, 1682, 1683, 1789], "1913": [1250, 1488], "3420": [1250, 1488], "5113": [1250, 1488, 1903], "2325": [1250, 1283, 1488], "gpu1": [1250, 1488], "1914": [1250, 1488], "5112": [1250, 1488, 1990], "3741": [1250, 1488], "2382": [1250, 1373, 1488], "5593": [1250, 1488], "4443": [1250, 1488], "6122": [1250, 1488], "1150": [1250, 1488], "to_empti": [1250, 1488, 1972], "dst_type": [1250, 1488], "set_to_non": [1250, 1488, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1752, 1753, 1754, 1755, 1756, 1990], "the_typ": 1251, "the_valu": 1251, "script_bar": 1253, "addmod": 1253, "preserved_attr": 1254, "optimize_numer": 1254, "optimize_for_infer": [1254, 2040], "run_frozen_optim": 1254, "scripted_modul": [1254, 1262, 2004], "frozen_modul": 1254, "modified_tensor": 1254, "mymodule2": 1254, "dump_alias_db": 1254, "training_method": 1255, "testcod": [1256, 1257, 1258, 1261, 1963], "interfacetyp": 1256, "impl1": 1256, "impl2": 1256, "user_fn": 1256, "user_fn_jit": 1256, "target_typ": 1257, "key1": 1257, "val1": 1257, "key2": 1257, "val2": 1257, "_restore_shap": 1258, "scriptfunct": [1258, 1262, 1263, 1266, 2009], "readlin": [1258, 1322, 2012], "retrac": 1258, "other_method": 1260, "lesser": [1260, 1987, 1989], "extent": [1260, 1989, 2024], "frozen_mod": 1260, "offlin": 1261, "_frames_up": 1262, "_rcb": 1262, "scriptdict": 1262, "scriptlist": 1262, "test_sum": 1262, "scripted_fn": [1262, 1961], "conv2": [1262, 1488, 1516, 1961, 2007, 2015], "some_entry_point": 1262, "python_only_fn": 1262, "testnnmodul": 1262, "pdt_model": 1262, "scripted_model": [1262, 2012], "un": [1264, 1407, 2015], "unfus": 1264, "check_trac": [1266, 1267], "check_input": [1266, 1267, 1961], "check_toler": [1266, 1267], "_force_outplac": [1266, 1267], "_module_class": [1266, 1267], "_compilation_unit": [1266, 1267], "compilationunit": [1266, 1267], "example_kwarg_input": 1266, "_store_input": [1266, 1267], "trace_modul": [1266, 1961, 1964], "untrack": 1266, "checker": [1266, 1267, 1964, 2009], "traced_foo": [1266, 1961], "example_weight": [1266, 1267], "example_forward_input": [1266, 1267], "example_inputs_is_kwarg": 1267, "method2": 1267, "example_method2_input": 1267, "weighted_kernel_sum": 1267, "use_memory_effici": 1268, "memory_effici": 1268, "scriptabl": 1268, "kaiser": [1270, 1531, 1533, 1535], "i_0": [1270, 1271, 1848, 1903, 2025], "zeroth": [1270, 1848, 2025], "out_i": 1270, "kroneck": 1271, "a_0": 1271, "a_n": 1271, "b_0": 1271, "b_1": 1271, "b_n": 1271, "k_0": [1271, 1903], "k_1": 1271, "k_n": 1271, "j_0": 1271, "j_1": 1271, "j_n": 1271, "k_t": 1271, "i_t": [1271, 1458, 1754], "b_t": 1271, "j_t": 1271, "bmatrix": 1271, "a_": [1271, 1342, 1476, 1903], "cdot": [1271, 1296, 1308, 1400, 1401, 1422, 1423, 1445, 1453, 1491, 1492, 1493, 1494, 1495, 1531, 1575, 1598, 1779, 1882, 2025, 2031], "vdot": [1271, 1318, 1319, 1962, 2010], "ddot": [1271, 1318], "kth": 1272, "full_lik": [1276, 1962, 1966, 2010], "logarithm": [1279, 1284, 1310, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1337, 1407, 1577, 1612, 1862, 2025], "gamma": [1279, 1402, 1403, 1404, 1442, 1450, 1451, 1452, 1460, 1527, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1755, 1757, 1761, 1762, 1765, 1770, 1771, 1789, 1960, 1962, 2009, 2010, 2011, 2025], "5724": [1279, 2025], "1208": [1279, 2025], "mathrlap": [1280, 1286, 1287, 1288, 1289, 1297, 1300, 1309, 1311, 1313, 1314, 1689], "qquad": [1280, 1282, 1286, 1287, 1288, 1289, 1290, 1297, 1300, 1309, 1311, 1313, 1314, 1689], "eigenvalu": [1280, 1286, 1287, 1288, 1289, 1302, 1305, 1308, 1313, 1314, 1323, 1775, 1962], "resp": [1280, 1287, 1289, 1313, 1314, 1331], "5266": 1280, "9586": 1280, "0626j": 1280, "4160": 1280, "5895": 1280, "2322": 1280, "2976j": 1280, "4928": [1280, 1903], "4692e": 1280, "8747e": 1280, "check_error": [1281, 1292, 1294, 1299, 1312, 1962], "opportun": [1281, 1961, 2021, 2043, 2044], "performantli": 1281, "3792": 1281, "9831j": 1281, "8757": 1281, "5425": 1281, "6374j": 1281, "kappa": 1282, "_p": [1282, 1497], "frobeniu": [1282, 1296, 1303, 1307, 1730], "nuc": [1282, 1303, 1307, 1320, 1701, 1710, 1730], "nuclear": [1282, 1303, 1307, 1730], "sigma_1": [1282, 1296, 1305, 1308], "sigma_n": 1282, "kappa_2": 1282, "kappa_": 1282, "4142": [1282, 1307, 1730, 1779], "1623": [1282, 1303], "2426": [1282, 1307, 1730], "7071": [1282, 1841], "5917": 1282, "9941": 1283, "5132": 1283, "5681": 1283, "4653": 1283, "4507": 1283, "4119": 1283, "6163": 1283, "1073": 1283, "3957": 1283, "9666": [1283, 1584], "0840": 1283, "3357": 1283, "2139": 1283, "slogdet": [1284, 1331, 1962, 2010], "0934": 1284, "1990": [1284, 1331], "4099": [1284, 1331], "7386": [1284, 1331], "diagonaliz": [1286, 1288], "eigenvector": [1286, 1287, 1323, 1962], "neq": [1286, 1287, 1290, 1314, 1385, 1491, 1493, 1740, 1741, 1742, 1744, 1746, 1752, 1753, 1755, 1759, 1886], "phi": [1286, 1287, 1314, 1437, 1591, 1886], "shall": [1286, 1287, 1314, 1692, 1696], "lambda_i": [1286, 1287, 1302], "lambda_j": [1286, 1287], "eigval": [1286, 1962], "9828": [1286, 1911, 1999], "3889j": 1286, "4617": 1286, "3010j": 1286, "1662": 1286, "7435j": 1286, "6139": 1286, "0562j": 1286, "1226": [1286, 1288], "5738j": [1286, 1288], "7537": [1286, 1288], "1286j": [1286, 1288], "9218": 1286, "1882": 1286, "2220j": 1286, "0270": 1286, "3867j": 1286, "7119e": 1286, "2841e": 1286, "uplo": [1287, 1289, 1962], "unitari": [1287, 1290, 1309, 1314, 1689, 1773], "ill": [1287, 1558, 2002], "eigvalsh": [1287, 1305], "9228": [1287, 1289], "2029": [1287, 1289], "0862j": [1287, 1289], "3464": [1287, 1289], "3277": [1287, 1289], "9415": [1287, 1289], "0846": 1287, "9964": 1287, "9170": 1287, "3898j": 1287, "0331j": 1287, "1062e": 1287, "5423e": 1287, "polynomi": [1288, 1289, 1768, 2044], "_n": [1288, 1289, 1291, 1689, 1992], "4576e": [1288, 1315], "5797": 1289, "4629": 1289, "1605": 1289, "3780": 1289, "1113": [1289, 1999], "7381": 1289, "h_1h_2": 1290, "h_k": 1290, "h_i": [1290, 1522], "_m": [1290, 1689], "tau_i": 1290, "8034": 1290, "4184j": 1290, "2588": 1290, "0174j": 1290, "6853": 1290, "7953j": 1290, "0790": 1290, "5620j": 1290, "6989j": 1290, "5360": 1290, "1193j": 1290, "3877": 1290, "6691j": 1290, "3512": 1290, "3024j": 1290, "4766": 1290, "5783j": 1290, "0361": [1290, 1999], "6587j": 1290, "6396": [1290, 1999], "1612j": 1290, "3693": 1290, "4481j": 1290, "aa": 1291, "pinv": [1291, 1296, 1777], "moor": [1291, 1308], "penros": [1291, 1308], "ainv": [1291, 1292, 1312, 1316], "1921e": 1291, "9073e": [1291, 1539], "5107e": 1291, "ldl": [1293, 1295], "indefinit": 1293, "ld": [1293, 1294, 1295, 1962], "sytrf": [1293, 1294], "ldl_solv": 1293, "ldl_factor_ex": [1293, 1295], "2079": [1293, 1294, 2025], "2414": [1293, 1294], "9428": [1293, 1294], "4554": [1293, 1294], "3264": [1293, 1294], "3823": [1293, 1294], "5884": [1293, 1294], "9595": [1293, 1294, 1841], "2695": [1293, 1294], "8513": [1293, 1294], "1633": [1293, 1294], "ldl_factor": 1294, "rcond": [1296, 1308, 1777, 1962], "_f": 1296, "gelsi": 1296, "gelsd": 1296, "gelss": 1296, "tridiagon": 1296, "sigma_i": [1296, 1314, 1886], "residu": [1296, 1323, 1962, 1999], "singular_valu": [1296, 1962], "0838": [1296, 1999], "2275": [1296, 1372], "3844": 1296, "5499": 1296, "1175": 1296, "9102": 1296, "0870": 1296, "6772": 1296, "7758": 1296, "5109": 1296, "4382": 1296, "3769": 1296, "1818": 1296, "3450": 1296, "0806": [1296, 1999], "3967": 1296, "3994": 1296, "1521": 1296, "1473": 1296, "9194": 1296, "0458": 1296, "6705": [1296, 1355], "1802": 1296, "4086": 1296, "5152e": 1296, "zero_": [1296, 1584, 1962, 1978, 1979, 1999, 2024], "almost": [1297, 1298, 2005, 2043], "5007": 1297, "9755": 1297, "0489": 1297, "9644": [1297, 1350], "9605e": 1297, "0376e": 1297, "lu_factor_ex": [1298, 1340], "lu_unpack": [1298, 1340, 1962, 2010], "b1": 1298, "b2": [1298, 1990, 1997], "a_factor": 1298, "getrf": [1299, 1312], "adjoint": [1300, 1962, 2010, 2028, 2030], "_exp": 1302, "7183": [1302, 1999], "3891": 1302, "8660": 1302, "ord": [1303, 1307, 1320, 1730, 1962, 1964, 2010], "la": [1303, 1307, 1320, 1999], "2829": 1303, "2627": 1303, "0756": 1304, "4980": 1304, "6617": 1304, "4994": 1304, "9980": 1304, "2731": 1304, "8001": 1304, "2640": 1304, "4571": 1304, "5511": 1304, "0163": [1304, 1350], "5292": 1304, "4899": 1304, "0822": 1304, "2773": [1304, 1980], "varepsilon": [1305, 1308, 1536], "tol": [1305, 1323, 1962], "fewest": 1306, "bc": [1306, 1972, 2011], "75000": 1306, "26": [1306, 1760, 2041, 2054], "148": 1306, "vector_norm": [1307, 1730], "matrix_norm": [1307, 1320, 1690, 1730], "7460": [1307, 1730], "3485": 1307, "8570e": 1307, "8480": 1307, "2361": [1307, 1730, 1731], "7417": [1307, 1730], "computation": [1308, 1996], "5495": [1308, 1372], "0979": 1308, "4092": 1308, "4132": [1308, 1847], "1143": 1308, "3662": 1308, "6374": 1308, "9294": 1308, "3269": [1308, 1999], "5745": [1308, 1880, 1881, 1930, 1931], "0382": [1308, 1373], "5922": 1308, "6759": 1308, "0600": 1308, "1933": 1308, "2090": 1308, "0903": 1308, "0817": 1308, "4752": [1308, 1885], "7124": 1308, "1631": 1308, "2272": 1308, "1356": 1308, "3933": 1308, "5023": 1308, "0308": 1308, "1725": 1308, "5216": 1308, "apinv": 1308, "5633e": 1308, "0830e": 1308, "wide": [1309, 1314, 1689, 1843, 1989, 1992, 1999, 2011, 2044], "51": [1309, 1486, 1785], "167": [1309, 1785], "68": [1309, 1785, 1961, 1963], "8571": [1309, 1785], "3943": [1309, 1785], "3314": [1309, 1785], "4286": [1309, 1785], "9029": [1309, 1785], "0343": [1309, 1785], "2857": [1309, 1785], "1714": [1309, 1785, 1999], "9429": [1309, 1785], "175": [1309, 1785], "q2": 1309, "r2": [1309, 1527], "6099e": 1309, "2158e": 1309, "logabsdet": [1310, 1962], "0032": 1310, "1219": [1310, 1804], "6690": 1310, "1161": 1310, "4053": 1310, "6218": [1310, 1900], "9273": 1310, "0082": 1310, "7576": 1310, "logdet": [1310, 1962, 2010], "linalg_slogdet": [1310, 1962, 2010], "2776": 1310, "solve_triangular": [1311, 1910], "expand_a": [1311, 1962, 1992, 2010, 2028], "rectangular": [1313, 1314, 1342, 1882, 1985, 2007], "triu_": [1313, 1962], "tril_": [1313, 1962], "full_matric": [1314, 1315, 1695, 1886, 1962, 2049], "vh": [1314, 1695, 1886, 1962, 2049], "gesvdj": [1314, 1315, 1886], "jacobi": 1314, "gesvda": [1314, 1315], "gesvd": [1314, 1315, 1886], "u_k": 1314, "v_k": 1314, "sigma_j": [1314, 1886], "eigendecomposit": 1314, "0486e": 1314, "0957e": 1314, "5139": 1315, "1087": 1315, "1066": 1315, "ind": [1316, 1317, 1962, 1993], "tensorsolv": 1316, "ndim": [1316, 1317, 1978, 1980, 2024, 2030, 2041], "atensorinv": 1316, "movedim": [1317, 1357, 1962, 1993, 2010, 2028], "tensorinv": 1317, "vandermond": [1318, 1929], "pmatrix": 1318, "x_n": [1318, 1400, 1401, 1447, 1448, 1454, 1479, 1519, 1908, 1987], "125": [1318, 1506, 1929, 1962], "overlin": [1319, 1932], "3223": 1319, "2815": 1319, "1944": [1319, 1999], "4345": 1320, "pickle_modul": [1322, 1817], "weights_onli": [1322, 1959, 1974], "pickle_load_arg": 1322, "register_packag": [1322, 2004], "binaryio": [1322, 1817, 2012], "mmape": 1322, "untrust": [1322, 1959, 1974, 2012], "tamper": [1322, 2012], "ram": [1322, 1990], "surg": 1322, "unicodedecodeerror": 1322, "codec": 1322, "0x": 1322, "latin1": 1322, "byte_arrai": 1322, "niter": [1323, 1775, 1887], "ortho_iparam": 1323, "ortho_fparam": 1323, "ortho_bparam": 1323, "knyazev": 1323, "knyazev2001": 1323, "stathopoulosetal2002": 1323, "converg": [1323, 1519, 1689, 1742, 1743, 1767, 1986, 1999, 2002], "precondition": 1323, "eigenpair": 1323, "criterion": [1323, 1400, 1401, 1421, 1423, 1448, 1454, 1479, 1480, 1491, 1492, 1493, 1519, 1520, 1536, 1537, 1760, 1792, 1994], "fep": 1323, "eigenproblem": 1323, "iparam": 1323, "fparam": 1323, "bparam": 1323, "ivar": 1323, "fvar": 1323, "bvar": 1323, "tvar": 1323, "istep": 1323, "converged_count": 1323, "rerr": 1323, "force_stop": 1323, "2001": 1323, "precondit": 1323, "eigensolv": 1323, "siam": 1323, "sci": 1323, "517": 1323, "541": 1323, "epub": 1323, "doi": [1323, 1441, 1849], "1137": 1323, "s1064827500366124": 1323, "andrea": 1323, "stathopoulo": 1323, "kesheng": 1323, "2002": [1323, 1849], "2165": 1323, "2182": 1323, "s1064827500370883": 1323, "duerschetal2018": 1323, "jed": 1323, "duersch": 1323, "meiyu": 1323, "shao": 1323, "chao": 1323, "ming": 1323, "gu": 1323, "c655": 1323, "c676": 1323, "17m1129830": 1323, "log_": [1324, 1325, 1326, 1327, 1962, 1978], "7767": 1324, "3234": 1324, "2156": 1324, "2411": 1324, "5739": 1324, "5637": 1324, "4640": 1324, "1952": 1324, "4226": 1324, "5204": [1324, 1794], "5224": 1325, "9354": 1325, "7257": 1325, "1301": 1325, "2820": 1325, "0290": 1325, "1392": 1325, "8857": 1325, "6476": 1325, "0090": [1326, 1386, 1781, 2025], "9923": 1326, "5372": 1326, "2492": 1326, "8653": 1326, "7055": 1326, "7705": 1326, "2225": 1326, "8419": 1327, "8003": [1327, 2003], "9971": 1327, "5287": 1327, "0490": 1327, "2483": 1327, "0042": 1327, "9196": 1327, "3504": [1327, 1903], "logsumexp": [1328, 1962, 1978, 2010, 2025], "3069": 1328, "6867": 1328, "8731": 1328, "30000": 1328, "1269e": 1328, "log_2": 1329, "logaddexp": [1329, 1962, 2010], "limits_": 1330, "42296738": 1330, "04462666": 1330, "86278635": 1330, "94622083": 1330, "05277811": 1330, "39202815": 1330, "83525007": 1330, "84492621": 1330, "06084887": 1330, "06844475": 1330, "2611": [1331, 1900], "9254": 1331, "6213": [1331, 1999], "6843": 1331, "3242": 1331, "9665": 1331, "4539": 1331, "0887": [1331, 2025], "1336": 1331, "4025": 1331, "7089": [1331, 1430], "9032": 1331, "3031": 1331, "2589": 1337, "1135": 1337, "5481": [1337, 1350, 1999], "9566": 1337, "sum_j": [1338, 1478, 1521, 1523, 1650, 1865, 2025], "0593": [1338, 1999], "5696": 1338, "6859e": 1338, "compute_pivot": 1340, "transposit": [1340, 1907, 2024], "perm": 1340, "a_lu": 1340, "5558": 1340, "1684": 1340, "1551": 1340, "1940": 1340, "6189": 1340, "5497": 1340, "4526": 1340, "2526": 1340, "3285": 1340, "7988": 1340, "7175": 1340, "9701": 1340, "2634": 1340, "9255": 1340, "3459": 1340, "00000e": 1341, "8312": 1341, "unpack_data": [1342, 1962], "unpack_pivot": [1342, 1962], "l_": [1342, 1389, 1393, 1397, 1401, 1415, 1416, 1417, 1418, 1455, 1481], "u_": [1342, 1740, 1744], "3552": [1344, 1585], "3825": 1344, "8297": 1344, "3477": 1344, "2035": [1344, 1880, 1881, 1930, 1931], "2252": [1344, 2025], "5002": 1344, "6248": [1344, 1353], "1307": 1344, "0608": [1344, 1858], "1244": 1344, "0139": 1344, "6763": 1348, "7445": 1348, "2369": 1348, "argmax": [1348, 1392, 1481, 1618, 1619, 1620, 1898, 1962, 2010, 2049], "max_indic": 1348, "2360": 1348, "2942": 1348, "1222": [1348, 1999], "8475": 1348, "1949": 1348, "1127": 1348, "6702": 1348, "5717": 1348, "9207": 1348, "1297": 1348, "8768": 1348, "6172": 1348, "6060": 1348, "2432": 1348, "3288": 1350, "3367": 1350, "nanmean": [1350, 1962, 2010], "3841": 1350, "6320": 1350, "4254": 1350, "7384": 1350, "0131": 1350, "6549": [1350, 1841], "4279": 1350, "3350": 1350, "7694": 1350, "5600": [1350, 1540], "0842": 1350, "9580": 1350, "3623": 1350, "2343": [1350, 1980], "5085": 1350, "4599": 1350, "1807": 1350, "5219": 1351, "5212": 1351, "2202": 1351, "2505": 1351, "3982": 1351, "9948": 1351, "3518": 1351, "3131": 1351, "3180": [1351, 2024], "6993": 1351, "0436": 1351, "0438": 1351, "2270": 1351, "2751": 1351, "7303": 1351, "2192": 1351, "3321": 1351, "2488": 1351, "0778": 1351, "9510": 1351, "7048": 1351, "4742": [1351, 1916, 2025], "7125": [1351, 1867], "plot": [1352, 1989, 2014, 2029, 2056], "t_0": [1352, 1760], "t_": [1352, 1436, 1589, 1759, 1760, 1962, 2024, 2043], "s_0": 1352, "s_": [1352, 1390, 1391, 1433, 1538], "g_0": 1352, "g_": [1352, 1744, 1754, 1755], "g_i": 1352, "t_i": 1352, "0d": [1352, 1480], "xy": 1352, "50276": 1352, "cartesian_prod": [1352, 1962, 2010], "grid_x": 1352, "grid_i": 1352, "dstack": [1352, 1962, 2010, 2024], "matplotlib": [1352, 2029], "pyplot": 1352, "plt": 1352, "plot_surfac": 1352, "6750": 1353, "0857": [1353, 1913], "7197": [1353, 1938], "argmin": [1353, 1962, 2010, 2049], "min_indic": [1353, 1962], "1334": 1353, "2803": 1353, "4644": [1353, 1880, 1881, 1930, 1931], "2635": [1353, 1999], "3651": 1353, "0384": 1353, "0128": 1353, "7015": 1353, "1153": 1353, "9849": 1353, "1458": [1353, 2025], "5788": 1353, "deduc": [1355, 2024], "4851": 1355, "5037": 1355, "3633": 1355, "0760": 1355, "3362": [1357, 1358], "8437": [1357, 1358], "9627": [1357, 1358], "1727": [1357, 1358], "5173": [1357, 1358], "1398": [1357, 1358], "mpsalloc": [1359, 1360], "metal": [1360, 1369, 1973, 1976, 2000], "mpsgraph": 1360, "wait_until_complet": [1365, 1366], "signpost": [1365, 1366, 1367], "xcode": 1366, "recommendedmaxworkingsets": 1369, "unlimit": [1369, 1990], "1321": 1372, "4370": [1372, 2024], "1289": 1372, "0527": 1372, "3077": [1372, 1876], "0881": 1372, "1259": 1372, "0284": 1372, "2015": [1373, 1985, 1999], "6087": 1373, "1494": 1373, "5491": 1373, "260": 1373, "8663": 1373, "3137": 1373, "0700": 1373, "8378": 1373, "5146": 1373, "1216": 1373, "5244": 1373, "5767": 1373, "1363": 1373, "5877": 1373, "5083": 1373, "1614": 1373, "1645": 1373, "7021": 1373, "0085": 1373, "0367": 1373, "1567": 1373, "4312": 1373, "1019": 1373, "4394": 1373, "8753": 1373, "stricter": 1374, "_sampl": 1374, "thtensorrandom": 1374, "320": [1374, 1411, 1514], "0404": 1376, "6361": 1376, "multigammaln": [1377, 2025], "4028e": 1378, "38": [1378, 2041], "1400e": 1378, "isnan": [1379, 1962, 2010, 2024, 2049], "midpoint": [1381, 1786], "weakli": [1383, 1384, 2025], "to_spars": [1384, 1863, 1962, 2003, 2010, 2024], "2262": [1386, 1781], "0682": [1386, 1781], "2866": [1386, 1781], "3940": [1386, 1781], "5x7": [1390, 1394], "7x7": [1390, 1394], "10x7": [1390, 1394], "cube": [1391, 1395, 1792], "d_": [1391, 1395, 1399, 1411, 1414, 1417, 1420, 1457, 1483, 1486, 1511, 1514, 1540, 1545, 1593, 1911, 1912, 1913, 1914], "5x7x9": [1391, 1395], "7x7x7": [1391, 1395], "7x9x8": [1391, 1395], "n_class": 1392, "cutoff": [1392, 1985], "div_valu": 1392, "head_bia": 1392, "edouard": 1392, "grave": [1392, 1407], "armand": 1392, "joulin": 1392, "moustapha": 1392, "ciss\u00e9": 1392, "grangier": 1392, "herv\u00e9": 1392, "j\u00e9gou": 1392, "imbalanc": 1392, "zipf": 1392, "law": 1392, "102": [1392, 2048], "1001": 1392, "1002": 1392, "_class": 1392, "maxunpool1d": [1393, 1481, 1621, 1923], "maxunpool2d": [1394, 1435, 1482, 1622, 1923], "maxunpool3d": [1395, 1436, 1483, 1623, 1923], "selu": [1396, 1432, 1586, 1962, 1985, 2009, 2010], "n_i": [1397, 1398, 1399, 1415, 1416, 1417, 1481, 1482, 1483, 1536, 1537], "c_j": [1397, 1398, 1399, 1481, 1482, 1483], "size_averag": [1400, 1401, 1421, 1423, 1447, 1453, 1454, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1536, 1565, 1566, 1574, 1576, 1601, 1605, 1606, 1617, 1625, 1626, 1627, 1628, 1629, 1637, 1648, 1649, 1660, 1962], "unreduc": [1400, 1401, 1423, 1448, 1454, 1479, 1495, 1519, 1537], "ell": [1400, 1401, 1423, 1447, 1448, 1454, 1479, 1495, 1519, 1537], "l_1": [1400, 1401, 1423, 1447, 1448, 1454, 1479, 1495, 1519, 1537], "l_n": [1400, 1401, 1423, 1447, 1448, 1454, 1479, 1495, 1519, 1537], "w_n": [1400, 1401, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849], "y_n": [1400, 1401, 1423, 1447, 1448, 1454, 1479, 1495, 1519, 1908, 1987], "lim_": [1400, 1987], "secondli": 1400, "rescal": [1400, 1401, 1423, 1492, 1493, 1495, 1521, 1523, 1565, 1566, 1576, 1629, 1695, 1724], "nbatch": [1400, 1401], "meantim": [1400, 1401, 1421, 1423, 1447, 1454, 1479, 1480, 1491, 1492, 1493, 1495, 1502, 1519, 1520, 1536, 1565, 1566, 1576, 1605, 1629, 1637, 2054], "pos_weight": [1401, 1566, 1962], "recal": [1401, 1992, 2029, 2047], "ell_c": 1401, "l_c": 1401, "p_c": 1401, "imbal": 1401, "pai": [1401, 1566, 2005, 2028], "spacial": [1401, 1566], "random_": [1401, 1423, 1495, 1566, 1962, 1978, 2032], "hat": [1402, 1403, 1404, 1450, 1451, 1452, 1527], "terminologi": [1402, 1403, 1404, 1527], "5d": [1404, 1452, 1540, 1593, 1604, 1632, 1663], "volumetr": [1404, 1527, 1540, 1593, 1604, 1663, 1664, 1665], "spatio": [1404, 1527], "in1_featur": 1405, "in2_featur": 1405, "in1": [1405, 1564], "in2": [1405, 1564], "blank": [1407, 1577, 1962, 1965], "zero_infin": [1407, 1577, 1962], "connectionist": [1407, 1577], "unseg": 1407, "longest": [1407, 1717, 1719, 1720, 1994], "input_length": [1407, 1577, 1962, 1994], "target_length": [1407, 1577, 1962], "s_n": 1407, "target_n": 1407, "unbatch": [1407, 1423, 1434, 1439, 1450, 1458, 1494, 1503, 1531, 1587], "s_min": 1407, "toronto": 1407, "edu": [1407, 1792], "icml_2006": 1407, "background": [1407, 1418, 1593, 1632, 2001, 2020], "channel_shuffl": [1408, 1962, 2010], "_left": [1409, 1410, 1411, 1412, 1413, 1414, 1509, 1510, 1511, 1512, 1513, 1514, 1543, 1544, 1545, 1632], "_right": [1409, 1410, 1411, 1412, 1413, 1414, 1509, 1510, 1511, 1512, 1513, 1514, 1543, 1544, 1545, 1632], "_top": [1410, 1411, 1413, 1414, 1510, 1511, 1513, 1514, 1544, 1545, 1632], "_bottom": [1410, 1411, 1413, 1414, 1510, 1511, 1513, 1514, 1544, 1545, 1632], "_front": [1411, 1414, 1511, 1514, 1545, 1632], "_back": [1411, 1414, 1511, 1514, 1545, 1632], "480": [1411, 1514], "0491": [1412, 1543], "7152": [1412, 1543], "0749": [1412, 1543], "3287": [1412, 1543], "8966": [1412, 1543], "1466": [1412, 1543], "2771": [1412, 1543], "6616": [1412, 1543], "4523": [1412, 1543], "1255": [1412, 1543], "6372": [1412, 1543, 1886], "1182": [1412, 1543], "8652": [1412, 1543], "6585": 1413, "4320": [1413, 1896], "8701": 1413, "4649": 1413, "_j": [1415, 1416], "star": [1415, 1416, 1417, 1964], "\u00e0": [1415, 1416, 1417, 1418, 1419, 1420, 1434, 1539], "trou": [1415, 1416, 1417, 1418, 1419, 1420, 1434, 1539], "harder": [1415, 1416, 1417, 1418, 1419, 1420, 1434, 1482, 1483, 1539], "prod_": [1416, 1417, 1419, 1420, 1433, 1538, 1746], "out_j": 1417, "deconvolut": [1418, 1419, 1420, 1571, 1572, 1573], "_pad": [1418, 1419, 1420], "semi": [1421, 1447, 1960, 1985], "supervis": [1421, 1447], "vert": [1422, 1497, 1575], "_2": [1422, 1575, 1690, 1724], "ast_1": [1422, 1438], "ast_2": [1422, 1438], "ignore_index": [1423, 1495, 1576, 1629, 1962], "label_smooth": [1423, 1576, 1962], "unbalanc": [1423, 1495], "d_1": [1423, 1495, 1576, 1629], "d_2": [1423, 1495, 1576, 1629], "d_k": [1423, 1495, 1576, 1629], "_index": [1423, 1495], "logsoftmax": [1423, 1495, 1521, 1612], "nllloss": [1423, 1521, 1629, 1650, 1923], "blend": 1423, "smooth": [1423, 1448, 1519, 1524, 1576, 1602, 1648, 1753], "w_c": 1423, "truth": [1423, 1576, 1971, 2029], "rethink": [1423, 1576], "incept": [1423, 1576], "spectral_norm": [1424, 1714], "neuron": 1425, "detector": 1425, "dropout1d": [1427, 1962], "_freez": 1430, "sparseadam": [1430, 2011], "0251": 1430, "6902": [1430, 1783], "7172": 1430, "6431": 1430, "0748": 1430, "6969": 1430, "4970": 1430, "3448": 1430, "9685": 1430, "3677": 1430, "7265": 1430, "1685": 1430, "4362": 1430, "4004": [1430, 1867], "9400": 1430, "9124": 1430, "3616": 1430, "1151": 1430, "0309": 1430, "9315": 1430, "1655": [1430, 1990], "9897": [1430, 1992], "0635": 1430, "7895": 1430, "0364": 1430, "6778": 1430, "5803": 1430, "from_pretrain": [1430, 1431, 2046], "bag": [1431, 1585], "per_sample_weight": [1431, 1585, 1962, 2049], "embedding_sum": 1431, "8861": 1431, "4350": 1431, "0523": 1431, "1306": 1431, "5798": 1431, "0044": 1431, "7082": [1431, 1585], "2145": [1431, 1585], "6251": [1431, 1585], "6500": 1431, "satur": [1432, 1586], "alphadropout": [1432, 1559], "160": [1433, 2011], "unfold": [1434, 1962, 2010, 2028], "prod_d": [1434, 1539], "neighborhood": [1434, 1539], "col2im": [1434, 1962, 2010, 2049], "fold_param": [1434, 1539], "input_on": [1434, 1539], "output_ratio": [1435, 1436, 1588, 1589, 1962], "_random_sampl": [1435, 1436, 1588, 1589, 1962], "ben": [1435, 1436, 1588, 1589], "graham": [1435, 1436, 1588, 1589], "oh": [1435, 1436, 1588, 1589], "ow": [1435, 1436, 1588, 1589], "_ratio": [1435, 1436, 1589], "_h": 1435, "13x12": [1435, 1588], "kt": [1436, 1562, 1570, 1573, 1589, 1620], "ot": [1436, 1589], "13x12x11": [1436, 1589], "044715": [1437, 1591], "pack_sequ": [1439, 1458, 1503, 1719, 1721], "bias_ih": [1440, 1459, 1503, 1505], "bias_hh": [1440, 1459, 1503, 1505], "homoscedast": [1441, 1590], "heteroscedast": [1441, 1590], "nix": 1441, "weigend": 1441, "1994": 1441, "icnn": 1441, "94": 1441, "orlando": 1441, "fl": 1441, "usa": [1441, 2029], "374138": 1441, "instancenorm": [1442, 2017], "layernorm": [1442, 1450, 1451, 1452, 1531, 1533, 1535, 1607, 1980, 2017, 2054], "shrinkag": [1443, 1525, 1596, 1653], "mobilenetv3": [1445, 1598], "_val": 1446, "dissimilar": 1447, "l1loss": [1448, 1519, 1606], "outlier": [1448, 1519, 2015, 2016], "huber": [1448, 1519, 1602], "smoothl1loss": [1448, 1602, 1648], "insensit": 1449, "unused_argument1": 1449, "unused_argument2": 1449, "ingredi": [1450, 1451, 1452], "styliz": [1450, 1451, 1452], "rgb": [1451, 1452, 2029], "color": [1452, 1963, 1964, 2029, 2045], "log_target": [1453, 1605, 1962], "kl": [1453, 1605, 1960], "summaris": 1453, "loss_pointwis": 1453, "batchmean": [1453, 1605], "kl_loss": 1453, "mae": 1454, "proj_siz": [1458, 1504], "f_t": [1458, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "hf": [1458, 1459], "g_t": [1458, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "ig": [1458, 1459], "hg": [1458, 1459], "o_t": 1458, "ho": [1458, 1459], "c_t": 1458, "forget": [1458, 1963, 1964], "1402": 1458, "c_0": [1458, 1459], "proj": 1458, "c_n": 1458, "w_ii": 1458, "w_if": 1458, "w_ig": 1458, "w_io": 1458, "w_hi": 1458, "w_hf": 1458, "w_hg": 1458, "w_ho": 1458, "b_ii": 1458, "b_if": 1458, "b_ig": 1458, "b_io": 1458, "b_hi": 1458, "b_hf": 1458, "b_hg": 1458, "b_ho": 1458, "weight_hr_l": 1458, "_revers": 1458, "h_1": 1459, "c_1": 1459, "time_step": 1459, "_shape": 1460, "sentence_length": 1460, "lazymodulemixin": [1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473], "cls_to_becom": [1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1678], "convtranspose1d": [1467, 1571, 1923, 2017], "convtranspose3d": [1469, 1573, 1683, 1923, 2017], "instancenorm1d": [1470, 1603, 2017], "instancenorm2d": [1471, 1603, 2017], "instancenorm3d": [1472, 1603, 2017], "uninitializedparamet": [1473, 1666, 1960], "lrn": 1476, "signal_2d": 1476, "signal_4d": 1476, "output_2d": 1476, "output_4d": 1476, "x_j": [1478, 1521, 1523, 1650, 1865, 1996, 2025], "80827": [1484, 1485, 1486], "unpool": [1484, 1485, 1486], "maxpool3d": [1486, 1620, 1623, 1923, 2017], "unpooled_output": 1486, "t_destin": 1488, "lrelu": [1489, 1999], "hing": [1491, 1493], "sum_i": [1492, 1493, 1520], "nelement": [1492, 1520], "jointli": 1494, "multihead": [1494, 1533], "concat": [1494, 1962, 1995, 2010], "head_1": 1494, "head_h": 1494, "head_i": 1494, "qw_i": 1494, "kw_i": 1494, "vw_i": 1494, "inference_mod": [1494, 1535], "nestedtensor": [1494, 1535, 1980], "multihead_attn": 1494, "e_q": 1494, "e_k": 1494, "e_v": 1494, "_head": [1494, 1531], "merge_mask": 1494, "mask_typ": 1494, "merged_mask": 1494, "nll": 1495, "crossentropyloss": [1495, 1576], "num_paramet": 1496, "nchannel": 1496, "decai": [1496, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1758, 1762, 1764, 1765, 1768, 1769, 1771, 1842, 2011], "legitim": [1496, 1593, 1993], "vert_p": 1497, "upscale_factor": [1500, 1635, 1962], "upscal": 1500, "video": [1500, 1501, 1979, 2029, 2041], "shi": [1500, 1501], "2016": [1500, 1501, 1537], "_factor": [1500, 1501, 1540, 1541, 1542], "pixel_shuffl": [1500, 1962, 2010, 2017], "downscale_factor": [1501, 1636, 1962], "pixelshuffl": [1501, 1635, 1636, 2017], "downscal": 1501, "pixel_unshuffl": [1501, 1962, 2010, 2017], "log_input": [1502, 1637, 1962], "poisson": [1502, 1637, 1842, 1960, 1962, 2010], "stirl": [1502, 1637], "hh": [1503, 1505], "h_t_minus_1": 1503, "flatten_paramet": 1504, "3333333333333333": [1506, 1758, 1764, 1962], "leaki": [1506, 1642, 1985], "rectifi": [1506, 1507, 1639, 1985], "empir": 1506, "crelu": 1507, "1603": 1507, "05201": 1507, "6732632423543772848170429916717": [1515, 1645], "0507009873554804934193349852946": [1515, 1645], "kaiming_norm": 1515, "kaiming_normal_": [1515, 1960, 1966, 1985], "initialis": 1515, "calculate_gain": [1515, 1960, 1966, 1985], "modulelist": [1516, 1999], "cascad": 1516, "relu2": [1516, 1666], "swish": [1517, 1647], "coin": [1517, 1647], "cnn": [1519, 2015], "ross": 1519, "girshick": 1519, "quadrat": [1519, 1994], "huberloss": [1519, 1602], "w_j": 1522, "soft": [1525, 1595, 1653], "softshrinkag": 1525, "convert_sync_batchnorm": 1527, "r1": 1527, "sync_bn_network": 1527, "ddp_sync_bn_network": 1527, "sync_bn_modul": 1527, "d_model": [1531, 1532, 1533, 1534, 1535], "nhead": [1531, 1532, 1533, 1534, 1535], "num_encoder_lay": 1531, "num_decoder_lay": 1531, "dim_feedforward": [1531, 1533, 1535], "custom_encod": 1531, "custom_decod": 1531, "layer_norm_ep": [1531, 1533, 1535], "norm_first": [1531, 1533, 1535], "ashish": [1531, 1533, 1535], "vaswani": [1531, 1533, 1535], "noam": [1531, 1533, 1535], "shazeer": [1531, 1533, 1535], "niki": [1531, 1533, 1535], "parmar": [1531, 1533, 1535], "jakob": [1531, 1533, 1535], "uszkoreit": [1531, 1533, 1535], "llion": [1531, 1533, 1535], "jone": [1531, 1533, 1535], "aidan": [1531, 1533, 1535], "gomez": [1531, 1533, 1535], "lukasz": [1531, 1533, 1535], "illia": [1531, 1533, 1535], "polosukhin": [1531, 1533, 1535], "6000": [1531, 1533, 1535, 1540, 1789, 1836, 1839], "6010": [1531, 1533, 1535], "feedforward": [1531, 1533, 1535, 1985], "transformer_model": 1531, "word_language_model": 1531, "src_mask": [1531, 1535], "tgt_mask": [1531, 1532, 1533], "memory_mask": [1531, 1532, 1533], "src_key_padding_mask": [1531, 1534, 1535], "tgt_key_padding_mask": [1531, 1532, 1533], "memory_key_padding_mask": [1531, 1532, 1533], "src_is_caus": 1531, "tgt_is_caus": [1531, 1532, 1533], "memory_is_caus": [1531, 1532, 1533], "_mask": [1531, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713], "_key_padding_mask": 1531, "generate_square_subsequent_mask": 1531, "sz": 1531, "decoder_lay": [1532, 1533], "transformerdecoderlay": 1532, "transformer_decod": 1532, "encoder_lay": [1534, 1535], "enable_nested_tensor": 1534, "mask_check": 1534, "bert": [1534, 2046], "1810": 1534, "04805": 1534, "transformerencoderlay": 1534, "transformer_encod": 1534, "triplet": [1536, 1537, 1660, 1661], "x3": 1536, "balnta": [1536, 1537], "riba": [1536, 1537], "a_i": [1536, 1537, 1844], "p_i": [1536, 1537], "rm": [1536, 1537], "bf": [1536, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "rvert_p": [1536, 1630], "tripletmarginwithdistanceloss": [1536, 1661], "triplet_loss": [1536, 1537], "distance_funct": [1537, 1661], "l_i": 1537, "tripletmarginloss": [1537, 1660], "l_p": [1537, 1630], "pairwisedist": [1537, 1633], "penal": [1537, 1999, 2011], "distant": 1537, "anchor_id": 1537, "positive_id": 1537, "negative_id": 1537, "l_infin": 1537, "bmva": 1537, "bmvc": 1537, "paper119": 1537, "unflattened_s": 1538, "namedtensor": 1538, "namedshap": 1538, "u_1": 1538, "u_n": 1538, "u_i": 1538, "im2col": [1539, 1962, 2010], "fold": [1539, 1887, 1962, 1973, 2009, 2018, 2024], "2x3": 1539, "3x4": 1539, "inp_unf": 1539, "out_unf": 1539, "recompute_scale_factor": [1540, 1604], "bicub": [1540, 1593, 1604, 1663, 1923], "trilinear": [1540, 1593, 1604, 1663, 1923], "input_3x3": 1540, "4375": 1540, "8125": 1540, "9375": 1540, "2400": [1540, 1903], "1200": [1540, 1814, 1990], "8800": 1540, "4400": [1540, 1903], "7200": 1540, "0400": 1540, "2800": [1540, 1836], "3600": 1540, "5200": 1540, "6400": 1540, "1678": 1544, "4418": 1544, "9466": [1544, 2025], "9604": 1544, "4219": 1544, "5241": 1544, "9162": 1544, "5436": [1544, 1903], "6446": 1544, "sdpa_kernel": 1546, "seq_len_q": 1547, "seq_len_kv": 1547, "causalvari": 1547, "constru": 1547, "causal_upper_left": 1547, "causal_lower_right": 1547, "bsz": 1547, "seqlen_q": 1547, "seqlen_kv": 1547, "head_dim": 1547, "attn_bia": [1547, 1644], "upper_left": [1548, 1550], "lower_right": [1548, 1549], "diagonal_offset": [1548, 1549], "causalbia": [1549, 1550], "sdpbackend": 1551, "adaptiveavgpool1d": [1552, 2017], "tripl": [1554, 1557], "adaptivemaxpool1d": 1555, "adaptivemaxpool2d": [1556, 1923], "adaptivemaxpool3d": 1557, "avgpool1d": [1560, 2017], "st": [1562, 1570, 1573, 1620, 2054], "avgpool3d": [1562, 1923, 2017], "iT": [1562, 1570, 1573], "padt": [1562, 1570, 1573], "score": [1566, 1644, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710, 1960], "dt": [1570, 1573, 2025, 2054], "out_padw": [1571, 1572, 1573], "out_padh": [1572, 1573], "out_padt": 1573, "cosineembeddingloss": 1574, "ctcloss": [1577, 1923], "charact": [1577, 1833, 1961, 1964, 1979, 2020], "elu": [1583, 1962, 2009, 2010, 2017], "embedding_matrix": [1584, 1585], "8490": 1584, "9625": 1584, "6753": 1584, "7761": 1584, "6108": 1584, "6246": 1584, "9751": 1584, "3618": 1584, "4161": [1584, 2024], "2419": 1584, "7383": 1584, "0237": 1584, "7794": 1584, "0528": 1584, "3385": 1584, "8612": 1584, "1867": 1584, "5384": 1584, "8720": 1584, "6262": 1584, "7471": 1584, "embeddingbag": [1585, 1923, 2015, 2017, 2030], "3397": 1585, "5545": 1585, "5893": 1585, "4386": 1585, "5882": 1585, "featurealphadropout": 1586, "gaussiannllloss": 1590, "border": 1593, "affine_grid": [1593, 1962], "extrema": 1593, "pil": [1593, 1604], "overshoot": [1593, 1604, 1663], "gumbel": [1595, 1960], "y_hard": 1595, "y_soft": 1595, "hardtanh": [1600, 1962, 1973, 2010, 2017, 2049], "hingeembeddingloss": 1601, "use_input_stat": [1603, 1962], "antialia": 1604, "anti": 1604, "pillow": [1604, 2029], "buggi": 1604, "inter_nearest": 1604, "104157": 1604, "kldivloss": 1605, "batchsiz": [1605, 1868, 1869, 1870, 1872, 1873, 2024], "leaky_relu": [1609, 1962, 1985, 2010, 2017, 2049], "localresponsenorm": 1611, "_stacklevel": [1612, 1650, 1651, 1962, 1968], "lppool1d": 1614, "lppool2d": 1615, "lppool3d": 1616, "marginrankingloss": 1617, "max_unpool1d": [1618, 1962], "multimarginloss": 1626, "multilabelmarginloss": 1627, "multilabelsoftmarginloss": 1628, "n_0": 1630, "n_": 1630, "n_k": 1630, "everywher": [1631, 1882, 2011], "circularpad2d": 1632, "constantpad2d": 1632, "reflectionpad2d": [1632, 1923], "replicationpad2d": [1632, 1923], "t4d": 1632, "p1d": 1632, "p2d": 1632, "p3d": 1632, "pixelunshuffl": [1636, 2017], "poissonnllloss": 1637, "rrelu": [1643, 1962, 2010], "dropout_p": [1644, 1962], "temp_mask": 1644, "ev": 1644, "legend": 1644, "softmarginloss": 1649, "module_kwarg": 1659, "upsample_trilinear": 1664, "fo": 1664, "spatia": 1665, "mixin": [1666, 1960], "dry": 1666, "lazymlp": 1666, "lazylinear": 1666, "lazy_mlp": 1666, "8832e": 1666, "5636e": 1666, "1598e": 1666, "5637e": 1666, "8788e": 1666, "0042e": 1666, "0019": 1666, "lazymodul": 1666, "full_mlp": 1666, "3837": [1666, 1783], "0907": 1666, "6708": 1666, "5223": 1666, "9028": 1666, "2851": 1666, "6813": 1666, "5766": 1666, "8678": 1666, "1320": 1666, "2938": 1666, "0679": [1666, 1913], "2793": [1666, 1731], "1088": 1666, "1795": 1666, "2301": 1666, "2807": 1666, "2479": 1666, "1091": 1666, "has_uninitialized_param": 1666, "initialize_paramet": 1666, "check_reduct": 1675, "delay_all_reduce_named_param": 1675, "param_to_hook_all_reduc": 1675, "optimizer_param": 1675, "loss_func": [1675, 2020], "consume_prefix_in_state_dict_if_pres": 1675, "nccl2": 1675, "dictat": [1675, 1964], "megabyt": 1675, "mb": [1675, 1990], "detach_": [1675, 1962, 1978, 2017, 2024], "ddp_logging_data": 1675, "can_set_static_graph": 1675, "model_ddp": 1675, "_get_ddp_logging_data": 1675, "divide_by_initial_world_s": 1675, "caught": [1675, 1977], "syncbatchnorm": 1675, "deplet": 1675, "pariti": 1675, "discrep": [1675, 1792, 1996], "another_input": 1675, "predivid": 1675, "noop": 1675, "encode_and_decod": 1675, "encoded_tensor": 1675, "decoded_tensor": 1675, "error_if_nonfinit": [1679, 1680], "foreach": [1679, 1680, 1681, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 2011], "clip_valu": 1681, "nhwc": [1682, 1683, 2027, 2029], "outweigh": [1682, 1683, 1756, 2054], "_convnd": 1684, "conv_w": 1685, "conv_b": 1685, "bn_rm": [1685, 1687], "bn_rv": [1685, 1687], "bn_ep": [1685, 1687], "bn_w": [1685, 1687], "bn_b": [1685, 1687], "linear_w": 1687, "linear_b": 1687, "orthogonal_map": 1689, "use_trivi": 1689, "qq": 1689, "matrix_exp": [1689, 1962, 2010], "caylei": 1689, "thin": [1689, 1785], "manifold": 1689, "register_parametr": [1689, 1690, 1692, 1693, 1724, 1981], "orth_linear": 1689, "parametrizedlinear": [1689, 1690, 1691], "moduledict": [1689, 1690, 1691, 1963, 1999], "parametrizationlist": [1689, 1690, 1691, 1695], "_orthogon": 1689, "9332e": 1689, "n_power_iter": [1690, 1724], "sn": [1690, 1724], "discrimin": [1690, 1724], "adversari": [1690, 1724], "lipschitz": 1690, "reimplement": [1690, 1724], "_spectralnorm": 1690, "convtranspos": [1690, 1724], "snm": 1690, "0081": 1690, "amaxbackward0": 1690, "decoupl": [1691, 1727, 1743, 1746, 1752], "1602": [1691, 1727], "07868": [1691, 1727], "_weightnorm": 1691, "original0": [1691, 1692, 1695, 1727], "original1": [1691, 1692, 1695, 1727], "tensor_nam": [1692, 1694, 1695, 1696], "right_invers": [1692, 1695], "out_rnn": 1693, "rnn_cell": 1693, "inbuilt": 1695, "unparametr": 1695, "rankon": 1695, "surject": 1695, "s0_sqrt": 1695, "linear_rank_on": 1695, "matrix_rank": 1695, "leave_parametr": 1696, "unparametris": 1696, "prune": [1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1981, 2024], "skeleton": 1697, "compute_mask": [1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704], "importance_scor": [1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1709, 1710], "apply_mask": [1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704], "pruned_tensor": [1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704], "default_mask": [1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704], "_orig": [1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713], "undon": [1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1713], "unprun": [1700, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712], "basepruningmethod": [1702, 1708], "add_pruning_method": 1702, "pruning_typ": [1702, 1706], "unstructur": [1702, 1706], "ravel": [1702, 1962, 2010], "nonmask": 1702, "bias_mask": [1705, 1707], "pruning_method": 1706, "parameters_to_prun": 1706, "l1unstructur": 1706, "parameters_to_vector": 1706, "forward_pre_hook": [1708, 1999], "random_unstructur": [1708, 1713], "odict_kei": 1709, "weight_orig": 1709, "weight_mask": [1709, 1712], "columns_prun": 1711, "t_modul": [1714, 1715, 1724, 1727], "weight_norm": 1715, "sorted_indic": [1716, 1718, 1719, 1721], "unsorted_indic": [1716, 1718, 1719, 1721], "abc": [1716, 1964], "axbc": 1716, "throughout": [1716, 1996, 1999, 2015], "conform": [1716, 1999], "is_cuda": [1716, 1978, 2010, 2026, 2044], "enforce_sort": [1717, 1718, 1719], "unsort": [1717, 1718, 1821], "shortest": 1717, "uncondition": [1717, 1959, 1992, 2055], "pad_sequ": [1718, 1722, 1962, 2010], "padding_valu": [1719, 1720, 1962], "total_length": [1719, 1994], "seq_unpack": 1719, "lens_unpack": 1719, "packed_sequ": 1721, "unpacked_sequ": 1721, "padded_sequ": 1722, "unpad": 1722, "unstack": 1722, "as_tensor": [1722, 1901, 1962, 1980, 1992, 2010, 2029, 2030, 2031], "unpadded_sequ": 1722, "module_cl": [1723, 2020], "5846e": 1723, "29": [1723, 1849, 2009], "8307e": 1723, "5250e": 1723, "1210e": 1723, "4677e": 1723, "5915e": 1723, "4013e": 1723, "weight_u": 1724, "parameters_and_buff": 1725, "reparamater": 1725, "weight_g": [1727, 1962], "weight_v": 1727, "modern": [1727, 2002, 2038, 2044], "bother": 1727, "102999": 1727, "remove_parametr": 1727, "as_tupl": [1729, 1938], "complexfloat": [1730, 1736], "0425": 1731, "7969": 1731, "2925": 1731, "7229": 1731, "2134": 1731, "0505": 1731, "1408": 1731, "0563": 1731, "0566": 1731, "0732": [1731, 1903], "0687": 1731, "1177": 1731, "2303": 1731, "1552": 1731, "6148": 1731, "6535": 1731, "8318": 1731, "3987": 1731, "9544": [1731, 1793], "6048": 1731, "7909": 1731, "120": [1733, 2029], "from_valu": 1736, "onnx_typ": 1736, "tensorprotodatatyp": 1736, "torch_c_value_with_type_float": 1736, "from_dtyp": 1736, "jit_type_bas": 1736, "safer": [1736, 1971], "onnxexportererror": [1736, 2007, 2009], "symbolicvalueerror": 1736, "onnx_compat": 1736, "scalar_nam": 1736, "complexhalf": 1736, "complexdoubl": 1736, "float8e5m2": 1736, "float8e4m3fn": 1736, "float8e5m2fnuz": 1736, "float8e4m3fnuz": 1736, "torch_nam": 1736, "int8_t": 1736, "int16_t": 1736, "float8_e5m2": [1736, 2026, 2030], "float8_e4m3fn": [1736, 2026, 2030], "float8_e5m2fnuz": [1736, 2026], "float8_e4m3fnuz": [1736, 2026], "verif": [1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 2009], "params_dict": 1737, "export_opt": [1737, 2007], "_excluded_node_kind": 1737, "frozenset": [1737, 1964], "scalarimplicit": [1737, 2010], "prim": [1737, 1961, 2009, 2010], "listconstruct": [1737, 1961], "all_mismatch_leaf_graph_info": 1737, "essential_node_count": 1737, "subgraph": [1737, 1987, 1991, 2009, 2012, 2034, 2041, 2043, 2054], "essential_node_kind": 1737, "export_repro": 1737, "repro_dir": 1737, "repro": [1737, 2044, 2054], "test_": 1737, "test_data_set_0": 1737, "input_0": [1737, 2009], "pb": [1737, 2009], "input_1": [1737, 2009], "output_0": 1737, "output_1": 1737, "find_mismatch": [1737, 2009], "exhibit": [1737, 2009, 2042, 2054], "verificationopt": [1737, 2009], "find_partit": 1737, "has_mismatch": 1737, "pretty_print_mismatch": 1737, "pretty_print_tre": 1737, "graph_info": [1737, 2009], "__2": [1737, 2009], "__1": [1737, 2009], "__3": [1737, 2009], "110": [1737, 2009], "verify_export": 1737, "onnx_graph": 1737, "onnx_out": 1737, "pt_out": 1737, "ignore_non": 1738, "check_shap": 1738, "check_dtyp": [1738, 2031], "onnxbackend": 1738, "onnx_runtime_cpu": 1738, "remained_onnx_input_idx": 1738, "acceptable_error_percentag": 1738, "percentag": [1738, 1767, 1842, 2015], "weight_decai": [1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756, 1999, 2011], "1e6": 1739, "tensorlist": [1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "prohibit": [1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755, 1990, 2004], "impair": [1739, 1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "ungraph": [1739, 1742, 1743, 1744, 1746, 1752], "removeablehandl": [1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756], "register_load_state_dict_pre_hook": [1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756], "register_state_dict_post_hook": [1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756], "register_step_post_hook": [1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756], "register_step_pre_hook": [1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756], "new_arg": [1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756], "new_kwarg": [1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1752, 1753, 1754, 1755, 1756], "momentum_buff": [1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749, 1752, 1753, 1754, 1755, 1756], "reevalu": [1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1750, 1752, 1753, 1754, 1755, 1756, 2011], "rho": 1740, "110mm": [1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "4pt": [1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "textbf": [1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "theta_0": [1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "v_0": [1740, 1742, 1743, 1746, 1752, 1753], "leftarrow": [1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "u_0": [1740, 1744], "hspace": [1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "5mm": [1740, 1741, 1742, 1743, 1744, 1746, 1753, 1754, 1755], "nabla_": [1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "theta_": [1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "10mm": [1740, 1741, 1742, 1743, 1744, 1746, 1753, 1754, 1755], "v_t": [1740, 1742, 1743, 1746, 1752, 1753], "v_": [1740, 1742, 1743, 1746, 1752, 1753, 1755], "2_t": [1740, 1741, 1742, 1743, 1746, 1752, 1753], "21mm": 1740, "u_t": [1740, 1744], "theta_t": [1740, 1741, 1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "oscil": 1740, "lr_decai": 1741, "initial_accumulator_valu": 1741, "12mm": [1741, 1752], "_sum_0": 1741, "tild": [1741, 1753], "_sum_t": 1741, "_sum_": 1741, "subgradi": 1741, "999": [1742, 1743, 1744, 1746, 1752, 1756, 2004, 2011], "amsgrad": [1742, 1743], "beta_1": [1742, 1743, 1744, 1746, 1752], "beta_2": [1742, 1743, 1744, 1746, 1752], "13mm": [1742, 1743, 1744, 1746, 1752, 1753, 1754, 1755], "textit": [1742, 1743, 1746, 1752, 1755], "m_0": [1742, 1743, 1744, 1746, 1752], "widehat": [1742, 1743, 1746, 1752], "m_t": [1742, 1743, 1744, 1746, 1752], "m_": [1742, 1743, 1744, 1746, 1752, 2024], "002": [1744, 1746], "t_1": 1744, "2e": [1744, 1746], "max_it": 1745, "max_ev": 1745, "tolerance_grad": 1745, "tolerance_chang": 1745, "history_s": 1745, "line_search_fn": 1745, "bfg": 1745, "minfunc": 1745, "intens": [1745, 2002], "param_byt": 1745, "strong_wolf": 1745, "momentum_decai": 1746, "004": 1746, "decoupled_weight_decai": [1746, 1752], "gamma_t": 1746, "psi": [1746, 2025], "_decai": [1746, 1752], "15mm": [1746, 1754, 1755], "mu_t": 1746, "96": 1746, "mu_": 1746, "11mm": 1746, "incorpor": [1746, 1841, 2015], "nesterov": [1746, 1755], "4e": 1746, "adamw": [1746, 1752, 2011], "nadamw": 1746, "weightdecai": 1752, "18mm": 1752, "rho_": 1752, "6mm": 1752, "rho_t": 1752, "t_2": 1752, "l_t": 1752, "radamw": 1752, "_0": [1753, 1993, 2012, 2056], "av": 1753, "8mm": 1753, "3mm": 1753, "lectur": 1753, "hinton": 1753, "step_siz": [1754, 1771], "resili": [1754, 2002], "eta_": [1754, 1759, 1760], "etaplu": 1754, "etaminu": 1754, "gamma_": [1754, 2025], "0_": 1754, "eta_0": 1754, "i_": [1754, 1903], "eta_t": [1754, 1759, 1760], "dampen": 1755, "sutskev": 1755, "veloc": 1755, "conflat": 1756, "is_spars": [1756, 1978, 2010, 2024, 2026, 2044], "maskedtensor": [1756, 2024], "rig": 1756, "insist": 1756, "lr_schedul": [1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 2011], "chainabl": [1757, 1767], "081": 1757, "729": [1757, 1770], "6561": [1757, 1933], "59049": 1757, "scheduler1": [1757, 1770, 2011], "constantlr": [1757, 1770], "total_it": [1757, 1758, 1764, 1768, 1770], "scheduler2": [1757, 1770, 2011], "exponentiallr": [1757, 1770, 2011], "get_last_lr": [1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771], "print_lr": [1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771], "is_verbos": [1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771], "__dict__": [1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771], "last_epoch": [1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771], "mileston": [1758, 1764, 1765, 1770, 2011], "simultan": [1758, 1759, 1764, 1765, 1771, 1987, 2020], "025": [1758, 1764], "t_max": [1759, 2011], "eta_min": [1759, 1760], "anneal": [1759, 1760, 1767, 2011], "cur": [1759, 1760], "sgdr": [1759, 1760], "2k": 1759, "sole": 1759, "t_mult": 1760, "interleav": 1760, "base_lr": [1761, 1767], "max_lr": [1761, 1767], "step_size_up": 1761, "step_size_down": 1761, "scale_fn": 1761, "scale_mod": 1761, "cycle_momentum": [1761, 1767], "base_momentum": [1761, 1767], "max_momentum": [1761, 1767], "cyclic": 1761, "forth": [1761, 1929, 1959, 2014, 2039], "amplitud": [1761, 1767], "triangular2": 1761, "exp_rang": 1761, "bckenstler": 1761, "train_batch": [1761, 1767], "get_lr": 1761, "lr_lambda": [1763, 1766], "lambda1": 1763, "lambda2": 1763, "start_factor": 1764, "end_factor": 1764, "03125": 1764, "0375": 1764, "04375": 1764, "005": [1765, 1771], "lmbda": 1766, "total_step": 1767, "steps_per_epoch": 1767, "pct_start": 1767, "anneal_strategi": [1767, 2011], "div_factor": 1767, "final_div_factor": 1767, "three_phas": 1767, "1cycl": 1767, "fastai": 1767, "unpublish": 1767, "initial_lr": 1767, "min_lr": [1767, 1769], "1e4": 1767, "annihil": 1767, "00075": 1768, "00050": 1768, "00025": 1768, "patienc": 1769, "threshold_mod": 1769, "cooldown": 1769, "stagnat": 1769, "new_lr": 1769, "hasn": [1769, 1975, 2012], "optimum": 1769, "dynamic_threshold": 1769, "val_loss": 1769, "81": 1770, "mn": 1773, "pca": [1775, 2024], "overestim": [1775, 1887], "nathan": [1775, 1887], "halko": [1775, 1887], "gunnar": [1775, 1887], "martinsson": [1775, 1887], "tropp": [1775, 1887], "probabilist": [1775, 1887], "0909": [1775, 1887], "4061": [1775, 1887], "na": [1775, 1887], "cmath": [1779, 1962], "4142j": 1779, "4331": 1782, "2475": [1782, 1885], "6834": 1782, "2791": 1782, "1875": 1782, "5561": 1782, "4670": 1782, "8020": 1783, "5428": 1783, "5854": 1783, "5261": [1783, 1886], "1857": 1783, "2498": 1783, "1646": [1783, 1990], "0705": [1783, 1992], "0629": 1783, "2962": 1783, "0821": [1783, 1842], "1831": 1783, "type1": [1784, 1962], "type2": [1784, 1962], "2117": 1786, "9765": 1786, "1707": 1786, "4884": 1786, "5661": 1786, "5795": 1786, "5280": 1786, "9206": 1786, "quantization_schem": [1787, 1788, 1789, 1790, 1791], "int_repr": [1787, 1788, 1962, 2010], "nchw": [1789, 2029], "qx": [1789, 1790, 1791], "00001": 1789, "max_pool1d": [1790, 1962, 2010, 2017], "max_pool2d": [1791, 1962, 2007, 2010, 2017], "quasirandom": 1792, "scrambl": 1792, "sobol": 1792, "quasi": 1792, "21201": 1792, "web": 1792, "unsw": 1792, "au": [1792, 2012], "fkuo": 1792, "art": 1792, "owen": 1792, "niederreit": 1792, "xing": 1792, "466": 1792, "489": 1792, "decemb": 1792, "1998": 1792, "zh": 1792, "vychisl": 1792, "phy": 1792, "784": 1792, "802": 1792, "1967": 1792, "soboleng": 1792, "draw_base2": 1792, "base2": 1792, "fast_forward": 1792, "142": 1793, "283": 1793, "570": 1793, "359": 1793, "9894": 1793, "2503": 1794, "3525": 1794, "5673": 1794, "8237": 1794, "5781": 1794, "6879": 1794, "3816": 1794, "7249": 1794, "0998": 1794, "im": [1798, 1987], "1436": 1798, "9966": 1798, "3426": 1798, "6366": 1798, "5954": 1798, "8929": 1798, "0923": 1798, "1719": 1798, "4709": 1798, "1996": 1798, "4595": 1804, "4314": 1804, "n2": 1807, "n3": 1807, "negat": [1810, 1895, 1964], "is_neg": [1810, 1962, 2010, 2044], "equidist": 1814, "inexact": 1814, "1234567": 1814, "1230": 1814, "vstack": [1815, 1962, 2010, 2024], "0370": 1816, "2970": 1816, "5420": 1816, "9105": 1816, "8351": 1816, "pickle_protocol": [1817, 2012], "default_protocol": 1817, "_use_new_zipfile_seri": [1817, 2004], "zipfil": [1817, 2012], "sorted_sequ": [1821, 1962], "sorter": [1821, 1962], "sorted_sequence_1d": 1821, "select_copi": [1823, 1962, 2010], "slight": [1825, 2024, 2027], "92701": [1825, 2027], "get_default_devic": 1825, "complaint": 1826, "henry2019": 1829, "briefli": [1829, 1995], "nine": 1829, "fma": 1829, "10x": 1829, "1904": 1829, "06376": 1829, "denorm": [1830, 2002], "sse3": 1830, "aarch64": 1830, "323": 1830, "88131e": 1830, "324": 1830, "interop": 1831, "intraop": 1832, "edgeitem": 1833, "linewidth": 1833, "sci_mod": 1833, "shamelessli": 1833, "repr": [1833, 1964], "sane": 1833, "_tensor_str": 1833, "_formatt": 1833, "12345": 1833, "1235": 1833, "excess": [1835, 2044], "24j": 1836, "8000j": 1836, "9600j": 1836, "4472": [1836, 1999], "8944j": 1836, "expit": [1837, 2025], "2222": [1839, 1901], "4444": 1839, "8889": 1839, "4901e": 1840, "4000e": 1840, "0077e": 1840, "4923e": 1840, "waveform": [1841, 1842, 1843], "1564": 1841, "4540": 1841, "8910": 1841, "9877": 1841, "1423": [1841, 1864], "4154": 1841, "8413": [1841, 2025], "0302": 1842, "2231": 1842, "6065": 1842, "5400e": 1842, "3546e": 1842, "4788e": 1842, "8316e": 1842, "02": [1842, 1843, 1848], "3534e": 1842, "0065e": [1843, 1848], "1875e": [1843, 1848], "3937e": [1843, 1848], "2465e": [1843, 1848], "8250e": [1843, 1848], "9858e": [1843, 1848], "1365e": [1843, 1848], "8659e": [1843, 1848], "4658e": [1843, 1848], "3941e": [1843, 1848], "5400": 1844, "3376": 1844, "4200": 1844, "9136": 1844, "wit": [1844, 1961], "0955": [1844, 1845, 1847], "3455": [1844, 1845, 1847], "6545": [1844, 1845, 1847], "9045": [1844, 1845, 1847], "0800": [1845, 1846], "1876": [1845, 1846], "4601": [1845, 1846], "7700": [1845, 1846], "9723": [1845, 1846], "1679": 1846, "3979": 1846, "6821": 1846, "9121": 1846, "1170": 1847, "9698": 1847, "36358": 1849, "z_n": [1849, 1987], "48917": 1849, "2z_n": 1849, "13659": 1849, "3z_n": 1849, "01064": 1849, "4z_n": 1849, "\u03c0": 1849, "sidelob": 1849, "transact": 1849, "acoust": 1849, "speech": 1849, "84": 1849, "91": 1849, "feb": 1849, "1981": 1849, "tassp": 1849, "1163506": 1849, "heinzel": 1849, "spectrum": [1849, 2002], "dft": 1849, "februari": 1849, "holomet": 1849, "fnal": 1849, "gov": 1849, "gh_fft": 1849, "nutal": 1849, "general_ham": 1849, "6280e": 1849, "2698e": 1849, "1052e": 1849, "9826e": 1849, "5461": [1851, 1999], "1347": 1851, "7266": 1851, "2746": 1851, "5194": 1851, "1343": 1851, "4032": 1851, "2711": 1851, "5380": 1853, "8632": 1853, "1265": 1853, "9399": 1853, "5644": 1853, "9744": 1853, "1268": 1853, "2162": 1858, "6719": 1858, "3332": 1858, "5793": [1858, 1999], "0061": 1858, "6058": 1858, "9497": 1858, "5071": 1858, "3343": 1858, "9553": 1858, "0960": 1858, "derivati": [1859, 1863], "to_sparse_coo": 1860, "sparsr": 1861, "run_my_model": 1861, "prev_checks_en": 1861, "is_en": [1861, 1868, 1869, 1870, 1871, 1872, 1873], "check_invari": [1861, 1868, 1869, 1870, 1871, 1872, 1873, 2024], "sparse_csr_tensor": [1861, 1962, 2010, 2024], "z_": [1863, 1987, 2025], "bigoplus_": 1863, "kj": 1863, "bigoplu": 1863, "sparseaddmmbackward0": 1863, "y1": [1863, 2007, 2039], "sparsemmreduceimplbackward0": 1863, "y2": [1863, 2007, 2039], "sparsiti": [1864, 1960, 1971, 1985], "spy": 1864, "2847": 1864, "7805": 1864, "1900": [1864, 2003], "to_dens": [1864, 1866, 1962, 2010, 2024], "3903": 1864, "x_k": 1865, "6438": 1867, "6467": 1867, "3411": 1867, "0918": 1867, "5348": 1867, "0634": 1867, "0494": 1867, "0646": 1867, "1844": 1867, "1276": 1867, "1874": 1867, "6334": 1867, "9682": 1867, "5340": 1867, "7483": 1867, "4512": 1867, "4073": 1867, "8901": 1867, "3183": 1867, "7539": 1867, "6596": 1867, "ncolblock": [1868, 2024], "array_list": [1868, 1869, 1870, 1872, 1873], "nrow": [1868, 1869, 1870, 1872, 1873, 2024], "ncol": [1868, 1869, 1870, 1872, 1873, 2024], "denses": [1868, 1869, 1870, 1872, 1873, 2024], "check_sparse_tensor_invari": [1868, 1869, 1870, 1871, 1872, 1873, 2024], "nrowblock": [1869, 2024], "compressed_indic": [1870, 1962, 2024], "plain_indic": [1870, 1962, 2024], "compressed_dim_s": [1870, 2024], "is_coalesc": [1871, 1962, 2010, 2024, 2044], "rdinat": 1871, "prerequisit": [1871, 1991], "coalescion": 1871, "sparsetensor": 1871, "_indic": [1871, 2010, 2024, 2044], "0755": [1875, 1876], "0226": [1875, 1876], "0831": [1875, 1876], "4806": [1875, 1876], "0112": 1875, "2883": 1875, "6933": 1875, "0457": 1876, "0069": 1876, "2310": 1876, "2959": [1880, 1881, 1930, 1931], "8101": [1880, 1881, 1930, 1931], "5027": [1880, 1881, 1930, 1931], "3270": [1880, 1881, 1930, 1931], "5905": [1880, 1881, 1930, 1931], "6538": [1880, 1881, 1930, 1931, 1999], "3330": [1880, 1881, 1930, 1931], "5596": [1880, 1881, 1930, 1931], "6548": [1880, 1881, 1930, 1931], "1264": [1880, 1881, 1930, 1931], "5080": [1880, 1881, 1886, 1930, 1931, 1999], "6420": [1880, 1881, 1930, 1931], "1992": [1880, 1881, 1930, 1931], "0311": [1880, 2025], "7477": 1880, "2204": 1880, "9087": 1880, "2620": 1881, "0028": [1881, 1907], "0957": 1881, "6038": 1881, "0645": [1881, 1931], "4485": [1881, 1931], "8707": [1881, 1931], "0665": [1881, 1931], "taper": 1882, "librosa": 1882, "omega": 1882, "win": [1882, 1987], "_fft": [1882, 1962], "dimnsion": 1882, "1133": 1885, "2958": 1885, "5475": 1885, "0569": 1885, "0737": 1885, "3429": 1885, "9138": 1885, "9337": 1885, "6864": [1885, 1911], "1132": 1885, "7892": 1885, "1003": 1885, "5688": 1885, "3637": 1885, "9906": 1885, "5197": 1885, "4598": 1885, "3708": 1885, "6217": 1885, "435": 1885, "1335": 1885, "3135": 1885, "gesdd": 1886, "conquer": 1886, "gesvdjbatch": 1886, "fortran": 1886, "2364": 1886, "7752": 1886, "7201": 1886, "7394": 1886, "0504": 1886, "3371": 1886, "5296": 1886, "3550": 1886, "5569": 1886, "2445": 1886, "1414": 1886, "4027": 1886, "0287": 1886, "5434": 1886, "1946": 1886, "8833": 1886, "3679": 1886, "4296": 1886, "2890": 1886, "6604": 1886, "2717": 1886, "2618": 1886, "4234": 1886, "2481": 1886, "4733": 1886, "3289": [1886, 2004], "0315": 1886, "7806": 1886, "0199": 1886, "8766": 1886, "4809": 1886, "4054": 1886, "7600": 1886, "8611": 1886, "2594": 1886, "4373": 1886, "6531e": 1886, "a_big": 1886, "6503e": 1886, "swapax": [1889, 1962, 2010, 2028], "symfloat": [1890, 1891, 2032, 2042], "1995": 1896, "4608": 1896, "7702": 1896, "4875": 1896, "9158": 1896, "5872": 1896, "6929": 1896, "6932": 1896, "take_along_axi": [1898, 1993], "max_idx": 1898, "sorted_idx": 1898, "2027": 1899, "7687": 1899, "4412": 1899, "3856": 1899, "5930": 1899, "9859": 1899, "4722": 1899, "3366": 1899, "8986": 1900, "7279": 1900, "1745": [1900, 1992], "7156": 1900, "8257": 1900, "2553": 1900, "11111": 1901, "222222": 1901, "3333333": 1901, "1111": 1901, "array_split": 1902, "i_d": 1903, "k_": 1903, "4532": 1903, "4874": 1903, "5018": 1903, "4796": [1903, 2003], "5162": 1903, "5306": 1903, "2922": 1903, "7556": 1903, "2741": 1903, "3161": 1903, "0704": 1903, "0187": 1903, "4079": 1903, "3126": 1903, "8744": 1903, "8223": 1903, "9445": 1903, "4117": 1903, "7780": 1903, "7193": 1903, "4867": 1903, "3204": 1903, "5513": 1903, "4737": [1903, 1934], "2850": 1903, "2573": 1903, "5997": 1903, "sparsebsr": 1907, "sparsecsc": 1907, "sparsebsc": 1907, "9893": 1907, "5809": 1907, "1669": 1907, "7299": 1907, "4942": [1907, 1999], "y_0": 1908, "x_diff": 1908, "y_diff": 1908, "riemann": [1908, 1987, 1996, 2025], "badli": 1910, "cloned_coeffici": 1910, "1527": 1910, "0753": 1910, "7986": 1910, "0210": 1910, "3513": 1910, "5492": 1910, "7403": 1910, "0243": 1910, "7841": 1910, "9046": 1910, "5405": 1910, "9320": 1910, "9270": 1910, "2826": 1910, "lbrace": [1911, 1912, 1913, 1914], "rbrace": [1911, 1912, 1913, 1914], "0813": 1911, "8619": 1911, "7105": 1911, "0935": 1911, "1380": 1911, "3409": [1911, 2003], "2219": 1911, "5653": 1911, "2521": 1911, "2345": 1911, "2544": 1911, "3461": 1911, "4785": 1911, "4477": 1911, "6049": 1911, "6368": 1911, "8775": 1911, "7145": 1911, "1502": 1911, "2716": 1911, "1243": 1911, "5413": 1911, "3615": 1911, "0614": 1911, "7344": 1911, "3164": 1911, "7648": 1911, "4024": 1911, "0978": 1911, "col": [1912, 1914, 1962], "2309": 1913, "5207": 1913, "0049": 1913, "2072": 1913, "0680": 1913, "6602": 1913, "3480": 1913, "5211": 1913, "4573": 1913, "5876": 1913, "0794": [1913, 2025], "8373": 1913, "6654": 1913, "2604": 1913, "5235": 1913, "2447": 1913, "9556": 1913, "2919": 1913, "1768": 1913, "4333": 1913, "3146": [1913, 1999], "6576": 1913, "0432": 1913, "9348": [1913, 2025], "4410": 1913, "9888": 1913, "3337": 1913, "6556": 1913, "4798": 1913, "5466": 1916, "8008": 1916, "9079": 1916, "unique_consecut": [1919, 1962, 2010], "inverse_indic": [1919, 1920], "a_unique_dim0": 1919, "ouput": 1921, "5678": [1921, 2020], "78": 1921, "alon": [1923, 1963, 2012], "put_": [1923, 1962], "index_add": [1923, 1962, 2010], "index_select": [1923, 1962, 2010, 2024, 2049], "fractionalmaxpool2d": 1923, "fractionalmaxpool3d": 1923, "reflectionpad1d": 1923, "reflectionpad3d": 1923, "replicationpad1d": 1923, "replicationpad3d": 1923, "histc": [1923, 1962, 2010], "bincount": [1923, 1962, 2010], "kthvalu": [1923, 1962, 1978, 2010], "cublasapi_reproduc": [1923, 2003], "avg_pool3d_backward_cuda": 1923, "for_tensor": 1924, "for_modul": 1924, "for_storag": 1924, "unsupported_dtyp": 1924, "privateuse1": [1924, 1926, 2019], "rename_privateuse1_backend": [1924, 1960], "is_foo": 1924, "frames_to_skip": 1925, "maximum_number_of_fram": 1925, "_register_device_modul": 1926, "backendmodul": 1926, "get_amp_supported_dtyp": 1926, "is_autocast_en": [1926, 1962, 2010], "get_autocast_dtyp": 1926, "set_autocast_dtyp": 1926, "set_autocast_en": 1926, "_is_in_bad_fork": 1926, "bad_fork": 1926, "get_rng_stat": [1926, 1960, 2019], "set_rng_stat": [1926, 1960, 2019], "extend_dispatch": 1926, "pytorch_open_registration_exampl": 1926, "nicer": 1927, "slot": [1928, 2038, 2055], "alexandr": 1929, "theophil": 1929, "0631": 1930, "5590": 1930, "4893": 1930, "8258": 1930, "5926": 1931, "0056": 1931, "3646": 1931, "vecdot": 1932, "mi": [1933, 1934], "6116": 1933, "5772": [1933, 2025], "4606": 1933, "9120": 1933, "0786": 1933, "7497": 1933, "6623": 1933, "5772j": 1933, "9120j": 1933, "7497j": 1933, "6623j": 1933, "3839j": 1934, "2098": 1934, "6699j": 1934, "3470": 1934, "9451j": 1934, "5174": 1934, "3136j": 1934, "6699": 1934, "9451": 1934, "3136": 1934, "vertic": [1936, 1937, 2011, 2013, 2029, 2044], "atleast_2d": [1937, 1962, 2010], "3139": 1938, "3898": 1938, "1657": 1938, "0383": 1938, "8785": 1938, "1089": 1938, "_xpudeviceproperti": 1949, "hubconf": 1959, "entrypoint_nam": 1959, "_resnet18": 1959, "smoother": [1959, 1971], "underscor": [1959, 1979, 2020, 2030], "load_state_dict_from_url": [1959, 1974], "2gb": 1959, "relative_path_to_checkpoint": 1959, "pth": [1959, 1974, 2004], "dirnam": 1959, "__file__": [1959, 2005, 2012, 2046], "5c106cde": [1959, 1974], "force_reload": 1959, "skip_valid": 1959, "trust_repo": 1959, "repo_own": 1959, "repo_nam": 1959, "ref": [1959, 2024, 2042, 2047, 2054], "torchhub": 1959, "github_token": 1959, "repo_or_dir": 1959, "mute": 1959, "resnet50": [1959, 2029, 2046], "resnet50_weight": 1959, "imagenet1k_v1": 1959, "download_url_to_fil": 1959, "hash_prefix": 1959, "temporary_fil": 1959, "sha256": [1959, 1974], "s3": [1959, 1974, 2005], "amazonaw": [1959, 1974, 2005], "model_dir": [1959, 1974], "check_hash": [1959, 1974], "hub_dir": [1959, 1974], "get_dir": [1959, 1974], "ext": [1959, 1974], "eight": [1959, 1974], "hash": [1959, 1962, 1964, 1974, 2010], "succinct": 1959, "set_dir": 1959, "path_to_hub_dir": 1959, "torch_hom": 1959, "xdg_cache_hom": [1959, 1990], "reiniti": [1959, 1972], "path_importer_cach": 1959, "subpackag": [1959, 2012], "offend": [1959, 2045], "classifi": [1960, 1964, 2009, 2011, 2015, 2029], "pypi": 1960, "conda": [1960, 2005], "hip": 1960, "javadoc": 1960, "uninitializedbuff": 1960, "anomali": 1960, "impl_abstract": [1960, 1968, 2043], "get_ctx": [1960, 1968], "can_device_access_p": 1960, "current_blas_handl": 1960, "device_of": 1960, "get_arch_list": 1960, "get_device_cap": 1960, "get_device_nam": 1960, "get_device_properti": 1960, "get_gencode_flag": 1960, "get_sync_debug_mod": 1960, "ipc_collect": 1960, "memory_usag": 1960, "set_stream": 1960, "set_sync_debug_mod": 1960, "power_draw": 1960, "clock_rat": 1960, "outofmemoryerror": 1960, "jiter": 1960, "sanit": 1960, "_record_memory_histori": [1960, 2056], "_snapshot": [1960, 2056], "_dump_snapshot": [1960, 2056], "empty_cach": [1960, 1990, 1997, 2056], "set_per_process_memory_fract": 1960, "current_allocated_memori": 1960, "driver_allocated_memori": 1960, "idiom": [1960, 2005], "nnpack": 1960, "openmp": [1960, 1989, 2005, 2041, 2044], "xeon": [1960, 1989, 2051], "pathwis": 1960, "exponentialfamili": 1960, "binomi": [1960, 1962, 2010], "chi2": 1960, "continuousbernoulli": 1960, "dirichlet": 1960, "fishersnedecor": 1960, "halfcauchi": 1960, "halfnorm": 1960, "inversegamma": 1960, "kumaraswami": 1960, "lkjcholeski": 1960, "laplac": 1960, "lognorm": 1960, "lowrankmultivariatenorm": 1960, "mixturesamefamili": 1960, "multinomi": [1960, 1962, 2010], "multivariatenorm": 1960, "negativebinomi": 1960, "onehotcategor": 1960, "relaxedbernoulli": 1960, "logitrelaxedbernoulli": 1960, "relaxedonehotcategor": 1960, "studentt": 1960, "transformeddistribut": 1960, "vonmis": 1960, "weibul": 1960, "wishart": 1960, "hub": [1960, 1974, 2046], "misc": 1960, "normal_": [1960, 1962, 1978, 1985, 1990, 2032], "constant_": [1960, 1985], "ones_": [1960, 1985], "zeros_": [1960, 1985], "eye_": [1960, 1966, 1985], "dirac_": [1960, 1966, 1985], "xavier_uniform_": [1960, 1985], "xavier_normal_": [1960, 1985, 1999], "kaiming_uniform_": [1960, 1985], "trunc_normal_": [1960, 1985], "orthogonal_": [1960, 1966, 1985, 1999], "sparse_": [1960, 1985], "swa": 1960, "ema": 1960, "powersgd": 1960, "remotemodul": 1960, "fork_rng": [1960, 2019], "doublestorag": [1960, 2026], "floatstorag": [1960, 2026], "halfstorag": [1960, 2026], "longstorag": [1960, 2026], "intstorag": [1960, 2026], "shortstorag": [1960, 2026], "charstorag": [1960, 2026], "bytestorag": [1960, 2026], "boolstorag": [1960, 2026], "bfloat16storag": [1960, 2026], "complexdoublestorag": [1960, 2026], "complexfloatstorag": [1960, 2026], "quint8storag": [1960, 2026], "qint8storag": [1960, 2026], "qint32storag": [1960, 2026], "quint4x2storag": [1960, 2026], "quint2x4storag": [1960, 2026], "make_tensor": [1960, 2031], "assert_allclos": [1960, 2031], "generate_methods_for_privateuse1_backend": 1960, "get_cpp_backtrac": 1960, "set_modul": 1960, "sampler": 1960, "mobile_optim": 1960, "optimize_for_mobil": [1960, 1973], "model_zoo": 1960, "load_url": [1960, 1974], "tensorboard": [1960, 1975, 2014], "summarywrit": [1960, 1975, 2029], "iinfo": 1960, "__config__": [1960, 1989], "__future__": 1960, "_log": [1960, 1964, 2054], "set_log": [1960, 1970, 2054], "torchdata": 1960, "torchserv": 1960, "torchtext": 1960, "xla": [1960, 1968, 2004, 2027, 2042], "disadvantag": 1961, "gentl": 1961, "beam": 1961, "traced_bar": 1961, "myscriptmodul": 1961, "103": [1961, 1963], "939": [1961, 1963], "116": [1961, 1963], "779": [1961, 1963], "123": [1961, 1963], "my_script_modul": [1961, 1963], "ins": 1961, "pytorch_jit": 1961, "traced_fn": 1961, "disable_jit_exampl": 1961, "printer": 1961, "rv": 1961, "rv0": 1961, "rv1": 1961, "ssa": 1961, "block0": 1961, "block1": 1961, "loop_in_traced_fn": 1961, "input_tupl": 1961, "fill_row_zero": 1961, "tracerwarn": 1961, "nr": 1961, "09115803241729736": 1961, "6782537698745728": 1961, "cpu_model": 1961, "gpu_model": 1961, "sample_input_cpu": 1961, "sample_input_gpu": 1961, "traced_cpu": 1961, "traced_gpu": 1961, "use_gpu": 1961, "__constants__": [1961, 1963], "my_module_inst": 1961, "redeclar": 1961, "nn_module_inst": 1961, "my_scripted_model": 1961, "pep": [1961, 1963, 2009, 2041], "526": [1961, 1963, 2009], "script_method": 1961, "implicitly_compiled_method": 1961, "another_forward": 1961, "unused_method": 1961, "some_fn": 1961, "ever": [1961, 2026, 2056], "some_fn2": 1961, "some_fn3": 1961, "some_fn4": 1961, "my_dict": [1961, 1963], "my_int": [1961, 1963], "my_const": 1961, "make_dict": 1961, "nnc": 1961, "nvfuser": 1961, "__and__": 1962, "__iand__": 1962, "__ilshift__": 1962, "__ior__": 1962, "__irshift__": 1962, "__ixor__": 1962, "__lshift__": 1962, "__or__": 1962, "__rshift__": 1962, "__xor__": 1962, "absolute_": 1962, "acos_": [1962, 1978], "addbmm_": 1962, "addcdiv_": 1962, "addcmul_": 1962, "addmv_": [1962, 1978], "addr_": 1962, "align_a": [1962, 1978, 1979, 2010], "align_to": [1962, 1978, 1979, 2010], "ellipsis_idx": 1962, "aminmax": [1962, 2010], "arccos_": 1962, "arccosh_": 1962, "arcsin_": [1962, 2024], "arcsinh_": 1962, "arctan2_": 1962, "arctan_": 1962, "arctanh_": 1962, "argwher": [1962, 2010], "as_strided_": 1962, "as_strided_scatt": [1962, 2010, 2049], "asin_": [1962, 1978, 2024], "asinh_": [1962, 1978], "atan_": [1962, 1978], "atanh_": [1962, 1978], "baddbmm_": 1962, "bernoulli_": [1962, 1978, 2032], "bitwise_and_": 1962, "bitwise_left_shift_": 1962, "bitwise_not_": [1962, 1978], "bitwise_or_": 1962, "bitwise_right_shift_": 1962, "bitwise_xor_": 1962, "broadcast_to": [1962, 2010], "cauchy_": [1962, 1978, 2032], "ceil_": [1962, 1978], "clamp_max": [1962, 2010], "clamp_max_": 1962, "clamp_min": [1962, 2010], "clamp_min_": 1962, "clip_": 1962, "conj_physical_": 1962, "copysign_": 1962, "cos_": [1962, 1978, 1987], "cosh_": [1962, 1978], "count_nonzero": [1962, 2010], "cummax": [1962, 2010], "cummin": [1962, 2010], "cumprod_": 1962, "cumsum_": 1962, "deg2rad": [1962, 1978, 2010, 2024], "deg2rad_": [1962, 1978, 2024], "outdim": 1962, "diagonal_scatt": [1962, 2010], "digamma_": [1962, 1978], "div_": [1962, 1978, 2024], "divide_": 1962, "dsplit": [1962, 2010], "eq_": 1962, "erf_": [1962, 1978], "erfc_": [1962, 1978], "erfinv_": [1962, 1978], "exp2": [1962, 2010, 2025, 2029, 2049], "exp2_": 1962, "exp_": [1962, 1978], "expm1_": [1962, 1978], "exponential_": [1962, 1978, 2032], "fill_diagonal_": 1962, "fix_": 1962, "fliplr": [1962, 2010], "flipud": [1962, 2010], "float_power_": 1962, "floor_": [1962, 1978], "floor_divide_": [1962, 2024], "fmax": [1962, 2010, 2049], "fmin": [1962, 2010, 2049], "fmod_": 1962, "frac_": [1962, 1978], "frexp": [1962, 2010], "gcd_": 1962, "ge_": 1962, "ger": [1962, 2010], "get_devic": [1962, 1978, 2010, 2024, 2026, 2027], "greater_": 1962, "greater_equal_": 1962, "gt_": 1962, "hardshrink": [1962, 2010], "heavisid": [1962, 2010], "heaviside_": 1962, "hsplit": [1962, 2010, 2028], "hypot_": 1962, "i0_": 1962, "igamma_": 1962, "igammac_": 1962, "index_fil": [1962, 1978, 2010], "index_reduc": [1962, 2010], "is_complex": [1962, 2007, 2010, 2024, 2027, 2044], "is_contigu": [1962, 1978, 2010, 2028, 2044], "is_floating_point": [1962, 1978, 2010, 2024, 2027, 2044], "is_infer": [1962, 2010, 2044], "is_same_s": [1962, 2010, 2024, 2044], "is_set_to": [1962, 2010, 2044], "is_sign": [1962, 1978, 2010, 2024, 2044], "isclos": [1962, 2010], "isfinit": [1962, 2002, 2010, 2049], "isinf": [1962, 2010, 2024, 2049], "isneginf": [1962, 2010, 2024], "isposinf": [1962, 2010, 2024], "isreal": [1962, 2010], "istft": [1962, 2010], "kron": [1962, 2010], "lcm_": 1962, "ldexp_": 1962, "le_": 1962, "lerp_": 1962, "less_": 1962, "less_equal_": 1962, "lgamma_": 1962, "log10_": [1962, 1978], "log1p_": [1962, 1978, 2024], "log2_": [1962, 1978], "log_normal_": [1962, 1978, 2032], "logaddexp2": [1962, 2010], "logcumsumexp": [1962, 2010], "logical_and_": 1962, "logical_not_": [1962, 1978], "logical_or_": 1962, "logical_xor_": 1962, "logit_": 1962, "lt_": 1962, "masked_fil": [1962, 1978, 1980, 2010, 2024], "masked_scatt": [1962, 2010], "masked_select": [1962, 1978, 2010], "matrix_pow": [1962, 2010], "moveaxi": [1962, 2010], "msort": [1962, 2010], "multiply_": 1962, "mvlgamma_": 1962, "nan_to_num_": 1962, "nanmedian": [1962, 1978, 2010], "nansum": [1962, 2010], "narrow_copi": [1962, 2010, 2024], "ne_": 1962, "neg_": [1962, 1978, 2024], "negative_": [1962, 2024], "new_empty_strid": [1962, 2010], "new_ful": [1962, 1990, 2010], "new_on": [1962, 2010], "nextafter_": 1962, "nonzero_stat": [1962, 2010], "not_equal_": 1962, "polygamma_": 1962, "pow_": [1962, 1978], "q_per_channel_scal": [1962, 2010], "q_per_channel_zero_point": [1962, 2010], "q_scale": [1962, 2010], "q_zero_point": [1962, 2010], "rad2deg": [1962, 1978, 2010, 2024], "rad2deg_": [1962, 1978, 2024], "reciprocal_": [1962, 1978], "record_stream": [1962, 1990, 2010], "refine_nam": [1962, 1978, 1979, 2010], "relu_": [1962, 2017], "remainder_": 1962, "rename_": [1962, 1978, 1979], "renorm_": 1962, "reshape_a": [1962, 1980, 2010, 2028], "resize_a": [1962, 2010], "the_templ": 1962, "resize_as_": [1962, 1978, 2024], "resize_as_sparse_": 1962, "retains_grad": [1962, 2010], "roll": [1962, 2010, 2049], "rot90": [1962, 2010], "round_": [1962, 1978], "rsqrt_": [1962, 1978], "select_scatt": [1962, 2010, 2049], "sgn_": [1962, 1978], "sigmoid_": [1962, 1978, 2017], "sign_": [1962, 1978], "sinc_": 1962, "sinh_": [1962, 1978], "slice_invers": [1962, 2010], "slice_scatt": [1962, 2010, 2049], "smm": [1962, 2010, 2024], "sparse_resize_": 1962, "sparse_resize_and_clear_": 1962, "split_with_s": [1962, 2010, 2028, 2049], "sqrt_": [1962, 1978], "square_": 1962, "squeeze_": [1962, 2017], "sspaddmm": [1962, 2010, 2024], "sub_": [1962, 1978, 2024], "subtract_": 1962, "sum_to_s": [1962, 2010], "swapaxes_": 1962, "swapdim": [1962, 2010, 2028], "swapdims_": 1962, "take_along_dim": [1962, 2010], "tan_": [1962, 1978], "tanh_": [1962, 1978, 2017], "tensor_indices_or_sect": 1962, "to_mkldnn": [1962, 2010], "to_padded_tensor": [1962, 1980, 2010], "to_sparse_bsc": [1962, 2010], "to_sparse_bsr": [1962, 2010, 2024], "to_sparse_csc": [1962, 2010, 2024], "transpose_": [1962, 2024], "true_divide_": 1962, "trunc_": [1962, 1978], "type_a": [1962, 1978, 2010], "out0": [1962, 2004], "unsafe_chunk": [1962, 2010], "unsafe_split": [1962, 2010], "unsafe_split_with_s": [1962, 2010], "unsqueeze_": [1962, 2017], "view_a": [1962, 2010, 2028], "vsplit": [1962, 2010, 2028], "xlogy_": 1962, "adaptive_avg_pool2d": [1962, 1992, 2010, 2017], "adaptive_max_pool1d_with_indic": [1962, 1992], "adaptive_max_pool2d_with_indic": 1962, "adaptive_max_pool3d_with_indic": 1962, "alpha_dropout": [1962, 2010], "assert_int_or_pair": 1962, "arg_nam": 1962, "binary_cross_entropi": [1962, 2010], "binary_cross_entropy_with_logit": [1962, 2010], "celu": [1962, 2010], "dropout2d": 1962, "dropout3d": 1962, "feature_alpha_dropout": [1962, 2010], "fractional_max_pool2d_with_indic": 1962, "fractional_max_pool3d_with_indic": 1962, "gaussian_nll_loss": 1962, "glu": [1962, 2010], "gumbel_softmax": 1962, "hardsigmoid": [1962, 2010, 2017], "hardswish": [1962, 2010, 2017], "huber_loss": [1962, 2010], "instance_norm": [1962, 2010, 2017], "local_response_norm": 1962, "lp_pool1d": 1962, "lp_pool2d": 1962, "lp_pool3d": 1962, "max_pool1d_with_indic": [1962, 2010], "max_pool3d_with_indic": [1962, 2010, 2049], "mish": [1962, 2010], "multi_head_attention_forward": 1962, "embed_dim_to_check": 1962, "in_proj_weight": 1962, "in_proj_bia": 1962, "bias_k": 1962, "bias_v": 1962, "out_proj_weight": 1962, "out_proj_bia": 1962, "use_separate_proj_weight": 1962, "q_proj_weight": 1962, "k_proj_weight": 1962, "v_proj_weight": 1962, "static_k": 1962, "static_v": 1962, "multilabel_soft_margin_loss": 1962, "relu6": [1962, 2010, 2017], "silu": [1962, 1980, 2010], "softsign": 1962, "tanhshrink": 1962, "adaptive_avg_pool1d": [1962, 1992, 2010, 2017, 2049], "adaptive_max_pool1d": [1962, 1992, 2010], "affine_grid_gener": [1962, 2010], "alias_copi": [1962, 2010], "align_tensor": [1962, 2010], "alpha_dropout_": 1962, "as_strided_copi": [1962, 2010], "atleast_1d": [1962, 2010], "avg_pool1d": [1962, 2010, 2017, 2049], "bartlett_window": [1962, 1966, 2010], "cudnn_en": 1962, "batch_norm_backward_elemt": 1962, "invstd": 1962, "sum_di": 1962, "sum_dy_xmu": 1962, "batch_norm_backward_reduc": 1962, "input_g": 1962, "bias_g": 1962, "out3": 1962, "batch_norm_elemt": [1962, 2010], "batch_norm_gather_stat": [1962, 2010], "batch_norm_gather_stats_with_count": [1962, 2010], "batch_norm_stat": [1962, 2010], "batch_norm_update_stat": [1962, 2010], "blackman_window": [1962, 1966, 2010], "block_diag": [1962, 2010], "can_cast": [1962, 2010], "ccol_indices_copi": [1962, 2010], "celu_": 1962, "choose_qparams_optim": [1962, 2010], "n_bin": 1962, "bit_width": 1962, "col_indices_copi": [1962, 2010], "column_stack": [1962, 2010], "constant_pad_nd": [1962, 2010, 2049], "conv_tbc": [1962, 2010], "crow_indices_copi": [1962, 2010], "cudnn_affine_grid_gener": [1962, 2010], "cudnn_batch_norm": [1962, 2010], "exponential_average_factor": 1962, "cudnn_convolut": [1962, 2010], "cudnn_convolution_add_relu": [1962, 2010], "cudnn_convolution_relu": [1962, 2010], "cudnn_convolution_transpos": [1962, 2010], "cudnn_grid_sampl": [1962, 2010], "cudnn_is_accept": [1962, 2010], "cumulative_trapezoid": [1962, 2010], "detach_copi": [1962, 2010, 2053], "diagonal_copi": [1962, 2010], "dropout_": [1962, 1973], "embedding_renorm_": 1962, "physical_layout": [1962, 2049], "empty_quant": [1962, 2010], "anyenumtyp": 1962, "expand_copi": [1962, 2010], "fake_quantize_per_channel_affin": [1962, 2010], "fbgemm_linear_fp16_weight": [1962, 2010], "packed_weight": 1962, "fbgemm_linear_fp16_weight_fp32_activ": [1962, 2010], "fbgemm_linear_int8_weight": [1962, 2010], "col_offset": 1962, "weight_scal": 1962, "weight_zero_point": 1962, "fbgemm_linear_int8_weight_fp32_activ": [1962, 2010], "fbgemm_linear_quantize_weight": [1962, 2010], "fbgemm_pack_gemm_matrix_fp16": [1962, 2010], "fbgemm_pack_quantized_matrix": [1962, 2010], "feature_alpha_dropout_": 1962, "feature_dropout": [1962, 2010], "feature_dropout_": 1962, "frobenius_norm": [1962, 2010], "from_fil": [1962, 2010, 2026], "fused_moving_avg_obs_fake_qu": [1962, 2010], "observer_on": 1962, "fake_quant_on": 1962, "running_min": 1962, "running_max": 1962, "per_row_fake_qu": 1962, "symmetric_qu": 1962, "interpolation_mod": [1962, 2049], "has_bias": 1962, "gru_cel": [1962, 2010], "w_ih": 1962, "w_hh": 1962, "hamming_window": [1962, 1966, 2010], "histogramdd": [1962, 2010], "hspmm": [1962, 2010, 2024], "indices_copi": [1962, 2010], "is_autocast_cpu_en": [1962, 2010], "is_grad_en": [1962, 2010], "is_vulkan_avail": [1962, 2010], "isin": [1962, 2010], "kaiser_window": [1962, 2010], "lstm_cell": [1962, 2010], "meshgrid": [1962, 2010], "miopen_batch_norm": [1962, 2010], "miopen_convolut": [1962, 2010], "miopen_convolution_add_relu": [1962, 2010], "miopen_convolution_relu": [1962, 2010], "miopen_convolution_transpos": [1962, 2010], "miopen_depthwise_convolut": [1962, 2010], "miopen_rnn": [1962, 2010], "weight_stride0": 1962, "dropout_st": 1962, "out4": 1962, "mkldnn_adaptive_avg_pool2d": [1962, 2010], "mkldnn_convolut": [1962, 2010], "mkldnn_linear_backward_weight": 1962, "bias_defin": 1962, "mkldnn_max_pool2d": [1962, 2010], "mkldnn_max_pool3d": [1962, 2010], "mkldnn_rnn_layer": [1962, 2010], "weight0": 1962, "weight1": 1962, "weight2": 1962, "weight3": 1962, "hx_": 1962, "cx_": 1962, "native_batch_norm": [1962, 2010], "save_mean": 1962, "save_invstd": 1962, "native_channel_shuffl": [1962, 2010], "native_dropout": [1962, 2010, 2049], "native_group_norm": [1962, 2010, 2049], "hxw": [1962, 2049], "native_layer_norm": [1962, 2010, 2049], "native_norm": [1962, 2010, 2024], "norm_except_dim": [1962, 2010], "nuclear_norm": [1962, 2010], "pairwise_dist": [1962, 2010], "permute_copi": [1962, 2010], "promote_typ": [1962, 2010, 2031], "quantize_per_channel": [1962, 2010, 2015], "quantize_per_tensor_dynam": [1962, 2010, 2015], "quantized_batch_norm": [1962, 2010], "quantized_gru_cel": [1962, 2010], "packed_ih": 1962, "packed_hh": 1962, "col_offsets_ih": 1962, "col_offsets_hh": 1962, "scale_ih": 1962, "scale_hh": 1962, "zero_point_ih": 1962, "zero_point_hh": 1962, "quantized_lstm_cel": [1962, 2010], "quantized_max_pool1d": [1962, 2010], "quantized_max_pool2d": [1962, 2010], "quantized_max_pool3d": [1962, 2010], "quantized_rnn_relu_cel": [1962, 2010], "quantized_rnn_tanh_cel": [1962, 2010], "rand_lik": [1962, 1966, 1990, 2010, 2032, 2039], "randint_lik": [1962, 1966, 2010, 2032], "randn_lik": [1962, 1966, 1980, 2010, 2032], "randperm": [1962, 1966, 2010, 2032, 2049], "result_typ": [1962, 2010], "scalar1": 1962, "scalar2": 1962, "rnn_relu": [1962, 2010], "rnn_relu_cel": [1962, 2010], "rnn_tanh": [1962, 2010], "rnn_tanh_cel": [1962, 2010], "row_indices_copi": [1962, 2010], "row_stack": [1962, 2010], "rrelu_": 1962, "rsub": [1962, 2010], "searchsort": [1962, 2010], "segment_reduc": [1962, 2010], "selu_": 1962, "slice_copi": [1962, 2010], "sparse_bsc_tensor": [1962, 2010, 2024], "sparse_bsr_tensor": [1962, 2010, 2024], "sparse_compressed_tensor": [1962, 2010, 2024], "sparse_csc_tensor": [1962, 2010, 2024], "split_copi": [1962, 2010], "split_with_sizes_copi": [1962, 2010], "squeeze_copi": [1962, 2010], "std_mean": [1962, 1978, 2010], "t_copi": [1962, 2010], "threshold_": 1962, "transpose_copi": [1962, 2010], "trapz": [1962, 2010], "tril_indic": [1962, 1966, 2010], "triu_indic": [1962, 1966, 2010], "unbind_copi": [1962, 2010], "unfold_copi": [1962, 2010], "unsqueeze_copi": [1962, 2010], "values_copi": [1962, 2010], "vander": [1962, 1966, 2010], "var_mean": [1962, 1978, 2010], "view_as_complex_copi": [1962, 2010], "view_as_real_copi": [1962, 2010], "_nn": 1962, "adaptive_max_pool2d": [1962, 2010], "avg_pool2d": [1962, 2010, 2017, 2049], "conv_depthwise3d": [1962, 2010], "cross_entropy_loss": [1962, 2010], "input_scal": 1962, "elu_": 1962, "flatten_dense_tensor": [1962, 2010], "random_sampl": 1962, "gelu_": 1962, "hardsigmoid_": [1962, 2017], "hardswish_": 1962, "hardtanh_": [1962, 2017], "leaky_relu_": 1962, "log_sigmoid": [1962, 2010], "mish_": 1962, "mkldnn_linear": [1962, 2010], "mkldnn_reorder_conv2d_weight": [1962, 2010], "mkldnn_reorder_conv3d_weight": [1962, 2010], "nll_loss2d": [1962, 2010], "nll_loss_nd": [1962, 2010], "reflection_pad3d": [1962, 2010, 2049], "relu6_": 1962, "rrelu_with_nois": [1962, 2010], "rrelu_with_noise_": 1962, "silu_": 1962, "slow_conv3d": [1962, 2010], "slow_conv_dilated2d": [1962, 2010], "slow_conv_dilated3d": [1962, 2010], "slow_conv_transpose2d": [1962, 2010], "slow_conv_transpose3d": [1962, 2010], "softshrink": [1962, 2010], "thnn_conv2d": [1962, 2010], "unflatten_dense_tensor": [1962, 2010], "upsample_bicubic2d": [1962, 2010], "scales_h": 1962, "scales_w": 1962, "upsample_bilinear2d": [1962, 2010, 2049], "upsample_linear1d": [1962, 2010], "upsample_nearest1d": [1962, 2010], "upsample_nearest2d": [1962, 2010, 2049], "upsample_nearest3d": [1962, 2010], "scales_d": 1962, "upsample_trilinear3d": [1962, 2010], "fft_fftfreq": [1962, 2010], "fft_fftshift": [1962, 2010], "fft_hfft2": [1962, 2010], "fft_hfftn": [1962, 2010], "fft_ifftshift": [1962, 2010], "fft_ihfft2": [1962, 2010], "fft_ihfftn": [1962, 2010], "fft_rfftfreq": [1962, 2010], "_linalg": 1962, "linalg_cross": [1962, 2010], "linalg_det": [1962, 2010], "linalg_diagon": [1962, 2010], "eigvec": 1962, "linalg_ldl_factor": [1962, 2010], "linalg_ldl_factor_ex": [1962, 2010], "linalg_ldl_solv": [1962, 2010], "linalg_lu": [1962, 2010], "linalg_lu_factor": [1962, 2010], "linalg_lu_factor_ex": [1962, 2010], "linalg_lu_solv": [1962, 2010], "linalg_matmul": [1962, 2010], "linalg_matrix_exp": [1962, 2010], "linalg_matrix_pow": [1962, 2010], "linalg_multi_dot": [1962, 2010], "linalg_norm": [1962, 2010], "linalg_pinv": [1962, 2010], "linalg_solve_ex": [1962, 2010], "linalg_solve_triangular": [1962, 2010], "linalg_vand": [1962, 2010], "linalg_vecdot": [1962, 2010], "linalg_vector_norm": [1962, 2010], "_nest": 1962, "nested_to_padded_tensor": [1962, 2010], "_spars": 1962, "sparse_sampled_addmm": [1962, 2010], "_special": 1962, "special_airy_ai": [1962, 2010], "special_bessel_j0": [1962, 2010], "special_bessel_j1": [1962, 2010], "special_bessel_y0": [1962, 2010], "special_bessel_y1": [1962, 2010], "special_chebyshev_polynomial_t": [1962, 2010], "special_chebyshev_polynomial_u": [1962, 2010], "special_chebyshev_polynomial_v": [1962, 2010], "special_chebyshev_polynomial_w": [1962, 2010], "special_digamma": [1962, 2010], "special_entr": [1962, 2010], "special_erf": [1962, 2010], "special_erfc": [1962, 2010], "special_erfcx": [1962, 2010], "special_erfinv": [1962, 2010], "special_exp2": [1962, 2010], "special_expit": [1962, 2010], "special_expm1": [1962, 2010], "special_gammainc": [1962, 2010], "special_gammaincc": [1962, 2010], "special_gammaln": [1962, 2010], "special_hermite_polynomial_h": [1962, 2010], "special_i0": [1962, 2010], "special_i1": [1962, 2010], "special_laguerre_polynomial_l": [1962, 2010], "special_legendre_polynomial_p": [1962, 2010], "special_log1p": [1962, 2010], "special_log_ndtr": [1962, 2010], "special_log_softmax": [1962, 2010], "special_logit": [1962, 2010], "special_logsumexp": [1962, 2010], "special_modified_bessel_i0": [1962, 2010], "special_modified_bessel_i1": [1962, 2010], "special_modified_bessel_k0": [1962, 2010], "special_modified_bessel_k1": [1962, 2010], "special_multigammaln": [1962, 2010], "special_ndtr": [1962, 2010], "special_ndtri": [1962, 2010], "special_polygamma": [1962, 2010], "special_psi": [1962, 2010], "special_round": [1962, 2010], "special_scaled_modified_bessel_k0": [1962, 2010], "special_scaled_modified_bessel_k1": [1962, 2010], "special_shifted_chebyshev_polynomial_t": [1962, 2010], "special_shifted_chebyshev_polynomial_u": [1962, 2010], "special_shifted_chebyshev_polynomial_v": [1962, 2010], "special_shifted_chebyshev_polynomial_w": [1962, 2010], "special_sinc": [1962, 2010], "special_softmax": [1962, 2010], "special_spherical_bessel_j0": [1962, 2010], "special_xlog1pi": [1962, 2010], "special_xlogi": [1962, 2010], "special_zeta": [1962, 2010], "tval": 1962, "is_accept": 1962, "rect": 1962, "magic": [1962, 1965, 2032, 2043], "__complex__": 1962, "__float__": 1962, "__int__": 1962, "hex": [1962, 1964, 2010], "__hex__": 1962, "oct": [1962, 2010], "__oct__": 1962, "divmod": [1962, 1964, 2010], "chr": [1962, 1964, 2010], "int_float": 1962, "float_int": 1962, "fab": [1962, 2010], "int_int": 1962, "float_float": 1962, "complex_complex": 1962, "int_complex": 1962, "complex_int": 1962, "float_complex": 1962, "complex_float": [1962, 2026], "scalar_scalar": 1962, "int_to_int": 1962, "modf": [1962, 2010], "mathremaind": [1962, 2010], "programm": [1963, 1964, 2015], "tn": 1963, "subtyp": 1963, "an_error": 1963, "noreturn": [1963, 1964], "classvar": [1963, 1964], "anystr": [1963, 1964], "nomin": 1963, "newtyp": [1963, 1964], "tup": [1963, 1964], "emptydatastructur": 1963, "my_list": 1963, "aug_add_x": 1963, "inc": [1963, 1964], "assign_x": [1963, 1964], "sum_pair": 1963, "red": [1963, 1964], "green": [1963, 1964, 2045], "enum_fn": [1963, 1964], "my_variable_nam": 1963, "top_level_method": 1963, "other_help": 1963, "ten": [1963, 2029], "my_submodul": 1963, "tuple_or_list": 1963, "a_tupl": 1963, "de": [1963, 2012, 2015], "is_script": [1963, 1964, 2010], "unsupported_linear_op": 1963, "is_trac": [1963, 1964], "univers": 1963, "typing_extens": 1963, "a_dict": 1963, "some_dict": 1963, "delimit": [1964, 1965], "tstype": 1964, "tsmoduletyp": 1964, "tsalltyp": 1964, "tsmetatyp": 1964, "tsprimitivetyp": 1964, "tsstructuraltyp": 1964, "tsnominaltyp": 1964, "myclass": [1964, 2012], "printabl": [1964, 2012], "sortabl": 1964, "nevertheless": [1964, 2022], "inc_first_el": 1964, "cpufloattyp": 1964, "tstupl": 1964, "tsnamedtupl": 1964, "tslist": 1964, "tsdict": 1964, "tsoption": 1964, "tsunion": 1964, "tsfutur": 1964, "tsrref": 1964, "tsawait": 1964, "await": [1964, 1965, 2020], "keytyp": 1964, "tensortyp": [1964, 2053], "_await": 1964, "mytupl": 1964, "scripted_inc": 1964, "_annotatednamedtupl": 1964, "_namedtupleannot": 1964, "_unannotatednamedtupl": 1964, "mistak": [1964, 1994, 2043], "nameerror": 1964, "remedi": 1964, "tsbuiltinclass": 1964, "tscustomclass": 1964, "tsenum": 1964, "tstensor": 1964, "subtensor": [1964, 1992, 2055], "subwithtorchfunct": 1964, "script_g": 1964, "tsclassdef": 1964, "methoddefinit": 1964, "__torch__": [1964, 2009], "class2": 1964, "tsenumdef": 1964, "tsenumtyp": 1964, "memberidentifi": 1964, "intenum": 1964, "intflag": 1964, "basecolor": 1964, "compli": [1964, 2012], "classbodydefinit": 1964, "moduleobj": 1964, "testmodul": 1964, "mymodel": [1964, 1986, 2001, 2007], "dosometh": 1964, "strateg": 1964, "congruent": 1964, "python3": 1964, "unannot": 1964, "python3annot": 1964, "paramannot": 1964, "returnannot": 1964, "funcormethodbodi": 1964, "mypyannot": 1964, "localvarannot": 1964, "setval": 1964, "moduletyp": [1964, 2012], "classidentifi": 1964, "instanceattridentifi": 1964, "offset_": 1964, "tsstructualtyp": 1964, "grammar": 1964, "chapter": [1964, 1996], "floattyp": 1964, "inttyp": 1964, "stringtyp": 1964, "devicetyp": 1964, "bullet": 1964, "tupletyp": 1964, "listtyp": 1964, "enclosur": 1964, "parenth_form": 1964, "list_displai": 1964, "dict_displai": 1964, "legal": 1964, "stringliter": 1964, "floatnumb": 1964, "expression_list": 1964, "list_comprehens": 1964, "comp_for": 1964, "target_list": 1964, "or_expr": 1964, "key_datum_list": 1964, "dict_comprehens": 1964, "key_datum": 1964, "ongo": [1964, 2009, 2018, 2020], "enclos": 1964, "datum": [1964, 2034], "attributeref": 1964, "slice_list": 1964, "slice_item": 1964, "proper_slic": 1964, "argument_list": 1964, "desugar": [1964, 2043], "u_expr": 1964, "tightli": [1964, 1999], "m_expr": 1964, "a_expr": 1964, "shift_expr": 1964, "and_expr": 1964, "xor_expr": 1964, "comp_oper": 1964, "__contains__": 1964, "or_test": 1964, "and_test": 1964, "not_test": 1964, "conditional_express": 1964, "starred_item": 1964, "expression_stmt": 1964, "starred_express": 1964, "assignment_express": 1964, "assignment_stmt": 1964, "augmented_assignment_stmt": 1964, "augtarget": 1964, "augop": 1964, "annotated_assignment_stmt": 1964, "raise_stmt": 1964, "assert_stmt": 1964, "return_stmt": 1964, "del_stmt": 1964, "pass_stmt": 1964, "print_stmt": 1964, "break_stmt": 1964, "continue_stmt": 1964, "if_stmt": 1964, "while_stmt": 1964, "for_stmt": 1964, "with_stmt": 1964, "with_item": 1964, "__enter__": 1964, "tuple_stmt": 1964, "getattr_stmt": 1964, "hasattr_stmt": 1964, "zip_stmt": 1964, "iterable1": 1964, "iterable2": 1964, "enumerate_stmt": 1964, "five": [1964, 2004], "add_stat_valu": 1964, "sugaredvalu": 1964, "unrecogn": 1964, "honor": 1964, "__abs__": 1964, "bytearrai": 1964, "delattr": 1964, "exec": 1964, "__index__": 1964, "isint": 1964, "issubclass": [1964, 1992], "ndigit": 1964, "__import__": [1964, 2012], "notimpl": [1964, 1965, 1992, 2043], "rpc_sync": [1964, 2010, 2020, 2021, 2022], "synonym": 1964, "_fork": [1964, 1989], "_wait": [1964, 1989], "lexic": 1965, "indent": 1965, "coroutin": 1965, "__del__": [1965, 1987], "__bytes__": 1965, "__slots__": 1965, "metaclass": 1965, "mro": 1965, "__r": 1965, "__": [1965, 2053], "bytesliter": 1965, "imagnumb": 1965, "parenthes": 1965, "ifs": 1965, "customiz": [1965, 2033, 2041], "compound": 1965, "exc_typ": 1965, "exc_valu": 1965, "adaptivelogsoftmaxwithloss": 1966, "gdoc": 1968, "qualnam": 1968, "alias_analysi": 1968, "impl_": 1968, "collis": 1968, "mylib": 1968, "mylibrari": 1968, "dispatch_kei": [1968, 2041], "operator_nam": 1968, "faketensor": [1968, 2007, 2043], "googl": 1968, "1w": 1968, "t6wz8iy8foi0vm8bf44pdbgs283qvpeljzwieqwq": 1968, "custom_linear": 1968, "custom_linear_abstract": 1968, "custom_nonzero": 1968, "custom_nonzero_abstract": 1968, "peek": 1968, "new_dynamic_s": 1968, "custom_nonzero_cpu": 1968, "x_np": 1968, "abstractimplctx": 1968, "2020": 1968, "colab": [1968, 2012, 2043], "keynam": 1968, "conserv": [1968, 1971, 1990, 2043], "fallthrough_kernel": 1968, "fallthrough": 1968, "div_cpu": 1968, "off_by_default": 1970, "_registr": 1970, "spammi": [1970, 2041], "compiled_autograd": 1970, "born": 1971, "citizen": 1971, "afterthought": 1971, "intuit": [1971, 2046], "alik": 1971, "grai": 1971, "systemat": 1971, "onboard": 1971, "maskedarrai": 1971, "masked_tensor": 1971, "faithfulli": [1972, 2042], "principl": [1972, 1990, 2044], "_subclass": [1972, 2007, 2042, 2043], "meta_util": 1972, "undocu": 1972, "fidel": 1972, "mobil": [1973, 2015, 2044], "blocklist": [1973, 2012], "mobileoptimizertyp": 1973, "conv_bn_fus": 1973, "correspondingli": 1973, "prepack": [1973, 2010], "insert_fold_prepack_op": 1973, "arm": [1973, 2015], "remove_dropout": 1973, "hoist": 1973, "hoist_conv_packed_param": 1973, "fuse_add_relu": 1973, "vulkan": 1973, "vulkan_automatic_gpu_transf": 1973, "freeze_modul": 1973, "script_modul": 1973, "optimization_blocklist": 1973, "preserved_method": 1973, "_mobileoptimizertyp": 1973, "recursivescriptmodul": [1973, 2004], "download": [1974, 2005, 2029, 2046], "infrequ": 1975, "window_s": 1975, "max_sampl": 1975, "cap": 1975, "_monitor": 1975, "data_value_t": 1975, "eventhandlerhandl": 1975, "register_event_handl": 1975, "unregister_event_handl": 1975, "tensorboardeventhandl": 1975, "shader": [1976, 2000], "processor": [1976, 2044], "metalperformanceshad": 1976, "shared_memori": 1977, "abruptli": 1977, "get_all_sharing_strategi": 1977, "get_sharing_strategi": 1977, "set_sharing_strategi": 1977, "new_strategi": 1977, "di": [1977, 2039, 2041, 2047], "abnorm": [1977, 2001], "forev": [1977, 1991], "asap": 1977, "queue_2": 1977, "x_clone": 1977, "segfault": [1977, 2002, 2043], "shm_open": [1977, 2026], "prone": [1977, 2001, 2043], "destructor": [1977, 2022], "seriou": [1977, 1990, 2043], "torch_shm_manag": 1977, "unnot": 1977, "spawncontext": 1977, "has_nam": 1978, "is_shar": [1978, 2026, 2044], "is_sparse_csr": [1978, 2010, 2026, 2044], "is_tensor": [1978, 2024], "items": [1978, 2010], "unifies_names_from_input_tensor": 1978, "nbyte": [1978, 2010, 2026], "ndimens": 1978, "register_post_accumulate_grad_hook": [1978, 1987], "position": [1978, 1979], "unnam": [1978, 1979], "misalign": 1978, "inher": 1978, "collaps": [1978, 2010, 2049], "disappear": 1978, "img": [1979, 2029], "renamed_img": 1979, "coexist": 1979, "wildcard": [1979, 2012, 2053], "somewher": [1979, 1998, 2047], "scale_channel": 1979, "more_img": 1979, "named_tensor": 1979, "named_img": 1979, "flat_img": 1979, "named_flat_img": 1979, "unflattened_named_img": 1979, "grad_loss": 1979, "8107": 1979, "6357": 1979, "0783": 1979, "untest": 1979, "rename_map": 1979, "greedili": 1979, "unment": 1979, "49152": 1979, "datastructur": 1980, "seamless": 1980, "nested_tensor": 1980, "nt": 1980, "vein": 1980, "as_nested_tensor": 1980, "irregular": 1980, "indistinguish": 1980, "2286": 1980, "4842": 1980, "7827": 1980, "6745": [1980, 2025], "0658": 1980, "1247": 1980, "4078": 1980, "8083": 1980, "2871": 1980, "5559": 1980, "9885": 1980, "4074": 1980, "4855": 1980, "0733": 1980, "8285": 1980, "6858": 1980, "7030": 1980, "3481": 1980, "0236": 1980, "jag": [1980, 2042], "fake_grad": 1980, "6862": 1980, "1282": 1980, "1031": 1980, "0464": 1980, "3276": 1980, "9967": 1980, "0054": 1980, "8972": 1980, "9174": 1980, "4995": 1980, "8546": 1980, "7194": 1980, "2918": 1980, "1846": 1980, "8793": 1980, "5183": 1980, "6447": 1980, "8009": 1980, "8468": 1980, "9832": 1980, "5272": 1980, "pt_infer": 1980, "pt_larg": 1980, "pt_small": 1980, "bitwidth": [1981, 1999, 2015, 2024], "asymmetr": [1981, 2015, 2018], "alter": [1982, 1986, 1992, 2050], "attention_bias": 1984, "sacrific": [1985, 1990], "dirac": 1985, "xavier": 1985, "glorot": 1985, "bengio": 1985, "fan": 1985, "_in": 1985, "_out": [1985, 1996, 2049], "fan_in": 1985, "kaim": 1985, "delv": 1985, "surpass": 1985, "he": 1985, "_mode": 1985, "fan_out": 1985, "redrawn": 1985, "sax": 1985, "2013": 1985, "marten": 1985, "scaler": [1986, 1990], "clip_grad_value_": 1986, "unscale_": 1986, "optimizer2": 1986, "batch_per_it": 1986, "iters_to_accumul": 1986, "num_proc": 1986, "grad_param": 1986, "grad_norm": 1986, "scaled_grad_param": 1986, "inv_scal": 1986, "get_scal": 1986, "proce": [1986, 1990, 2020, 2054], "optimizer0": 1986, "output0": 1986, "model0": 1986, "model1": 1986, "loss0": 1986, "loss1": 1986, "hundr": [1986, 1998, 2054], "imped": 1986, "poor": [1986, 1987], "dp_model": 1986, "imported_funct": 1986, "mymm": 1986, "myfloat32func": 1986, "fwd_output": 1986, "cleaner": 1987, "mapsto": 1987, "educ": 1987, "_save": 1987, "_saved_self": 1987, "convex": 1987, "concav": 1987, "togglabl": 1987, "drawback": 1987, "0011": 1987, "dirti": 1987, "hogwild": 1987, "train_fn": 1987, "graphtask": 1987, "copyslic": 1987, "mutex": 1987, "gotten": 1987, "curiou": 1987, "\u2102": 1987, "yj": 1987, "holomorph": 1987, "fulfil": [1987, 1993, 2012, 2042, 2047], "homomorph": 1987, "mathematician": 1987, "studi": [1987, 2014], "beauti": 1987, "somewhat": [1987, 1990, 2024], "0906": 1987, "4835": 1987, "audio": [1987, 2029], "\u211d": 1987, "_output": 1987, "vj": 1987, "handi": [1987, 1990], "selfdeletingtempfil": 1987, "tmp_dir": 1987, "uuid": 1987, "uuid4": 1987, "temp_fil": 1987, "forbidden": 1987, "savedtensor": 1987, "_raw_saved_": 1987, "_raw_saved_self": 1987, "save_on_disk_threshold": 1987, "tensor_or_sctf": 1987, "_saved_oth": 1987, "4th": 1988, "backcompat": 1988, "broadcast_warn": 1988, "userwarn": 1988, "compute_z": 1989, "w_z": 1989, "w_y": 1989, "tbb": 1989, "aten_thread": 1989, "omp": 1989, "mkl_thread": 1989, "bla": 1989, "mkldnn_cpu_runtim": 1989, "use_mkldnn": 1989, "use_tbb": 1989, "use_openmp": 1989, "ON": [1989, 1997, 1998], "set_num_interop_thread": 1989, "get_num_interop_thread": 1989, "set_num_thread": [1989, 2001], "get_num_thread": 1989, "omp_num_thread": 1989, "mkl_num_thread": 1989, "1024": [1989, 1990, 2036, 2044], "e5": 1989, "oversubscript": 1989, "memory manag": 1990, "optimize pytorch": 1990, "irrespect": 1990, "spread": 1990, "cuda2": [1990, 1997], "broadli": [1990, 2015], "set_float_32_matmul_precis": 1990, "a100": [1990, 2051, 2054], "a_ful": 1990, "10240": 1990, "b_full": 1990, "ab_ful": 1990, "7277": 1990, "ab_tf32": 1990, "016": 1990, "ga100": 1990, "1747": 1990, "relative_error": 1990, "0022": 1990, "ab_fp32": 1990, "0031": 1990, "000039": 1990, "7x": 1990, "globalcontext": 1990, "setallowtf32cubla": 1990, "setallowtf32cudnn": 1990, "bench_gemm_transform": 1990, "allow_fp16_reduc": 1990, "4048": 1990, "1634": 1990, "1639": 1990, "4056": 1990, "1670": 1990, "1661": 1990, "4080": 1990, "1664": 1990, "1658": 1990, "1651": 1990, "4104": 1990, "1677": 1990, "1674": 1990, "4128": 1990, "1796": [1990, 1999], "2519": 1990, "5096": 1990, "2144": 1990, "2149": 1990, "2766": 1990, "5120": 1990, "2142": 1990, "9728": 1990, "3875": 1990, "5779": 1990, "16384": [1990, 2046], "6182": 1990, "9656": 1990, "setallowfp16reductioncubla": 1990, "instabl": 1990, "setallowbf16reductioncubla": 1990, "invis": [1990, 2044, 2054], "start_ev": 1990, "elapsed_time_m": 1990, "pointless": 1990, "exploit": 1990, "paragraph": [1990, 1996], "initial_grad": 1990, "memory_alloc": [1990, 1997], "memory_snapshot": [1990, 1997], "memcheck": 1990, "pytorch_no_cuda_memory_cach": [1990, 1997], "option2": 1990, "value2": 1990, "max_split_size_mb": 1990, "borderlin": 1990, "memory_summari": 1990, "resort": [1990, 1996, 2012], "roundup_power2_divis": 1990, "1280": 1990, "1536": 1990, "1792": 1990, "256mb": 1990, "512mb": 1990, "1gb": [1990, 2052], "knob": [1990, 2042], "garbage_collection_threshold": 1990, "reclaim": [1990, 2039], "release_cached_block": 1990, "unfavor": 1990, "expandable_seg": 1990, "2mb": 1990, "sliver": 1990, "pinned_use_cuda_host_regist": 1990, "cudahostregist": 1990, "cudahostalloc": 1990, "malloc": [1990, 2047, 2056], "pinned_num_register_thread": 1990, "cuda_runtime_api": 1990, "iostream": [1990, 2036], "fpic": 1990, "my_malloc": 1990, "ssize_t": 1990, "ptr": 1990, "cout": [1990, 2036], "endl": [1990, 1998, 2036], "my_fre": 1990, "cudafre": [1990, 2056], "cudapluggablealloc": 1990, "new_alloc": 1990, "change_current_alloc": 1990, "_cuda_clearcublasworkspac": 1990, "kib": 1990, "lru": 1990, "geometri": 1990, "1023": 1990, "zeta": [1990, 2010, 2025, 2049], "use_pytorch_kernel_cach": 1990, "pytorch_kernel_cache_path": 1990, "store_tru": 1990, "disable_cuda": 1990, "assess": 1990, "cudagetdevicecount": 1990, "cuinit": 1990, "pytorch_nvml_based_cuda_check": 1990, "nvml": 1990, "nvmldevicegetcount_v2": 1990, "poison": 1990, "aforement": [1990, 2001], "train_load": [1990, 2001], "x_cpu": 1990, "x_gpu": 1990, "x_cpu_long": 1990, "y_cpu": 1990, "y_gpu": 1990, "y_cpu_long": 1990, "new_tensor": 1990, "overus": 1990, "cudagraphlaunch": 1990, "elid": 1990, "versatil": 1990, "static_input": 1990, "static_output": 1990, "realist": 1990, "sophist": [1990, 2011], "virtual": [1990, 2026], "d_in": 1990, "d_out": 1990, "640": 1990, "static_target": 1990, "static_y_pr": 1990, "static_loss": 1990, "real_input": [1990, 2043], "real_target": 1990, "refil": 1990, "rejoin": 1990, "cuda_work": 1990, "nsight": 1990, "reorgan": 1990, "graphabl": 1990, "needlessli": [1990, 2042], "econom": 1990, "static_out_1": 1990, "g1_workload": 1990, "static_in_1": 1990, "static_out_2": 1990, "g2_workload": 1990, "static_in_2": 1990, "real_data_1": 1990, "real_data_2": 1990, "occasion": [1990, 2024, 2043], "29500": [1991, 2013, 2020, 2021], "dive": [1991, 1996, 2012, 2047, 2048], "grad0": 1991, "grad1": 1991, "bucket1": 1991, "bucket0": 1991, "hurt": 1991, "kick": [1991, 2020, 2021, 2051], "earliest": 1991, "unreadi": 1991, "perspect": [1991, 1995, 2002, 2021, 2047], "hpp": 1991, "processgroupgloo": 1991, "processgroupmpi": 1991, "_sync_param": 1991, "autograd_hook": 1991, "prepare_for_backward": 1991, "_after_": 1991, "optimize_ddp": 1991, "linearfunct": 1992, "grad_bia": 1992, "mulconst": 1992, "mycub": [1992, 1993], "grad_dx": [1992, 1993], "my_cub": [1992, 1993], "input_featur": 1992, "output_featur": 1992, "__array_function__": [1992, 2044], "nep": [1992, 2044], "0018": 1992, "scalartensor": 1992, "handled_funct": 1992, "mandat": 1992, "update_wrapp": 1992, "ensure_tensor": 1992, "metadatatensor": 1992, "__add__": 1992, "subtensor2": 1992, "othersubtensor": 1992, "loggingtensor": 1992, "permiss": 1992, "_metadata": 1992, "ndata": 1992, "ministri": 1992, "silli": 1992, "superclass": 1992, "troublesom": 1992, "face": [1992, 2012, 2029, 2043], "_get_overridable_funct": 1992, "get_overridable_funct": [1992, 2055], "func_dict": 1992, "nn_func": 1992, "labori": 1992, "_get_testing_overrid": 1992, "get_testing_overrid": [1992, 2055], "override_dict": 1992, "dummy_add": 1992, "get_ignored_funct": [1992, 2055], "__torch_dispatch__": [1992, 2024, 2043], "outdat": 1992, "redispatch": [1992, 2043], "dispatchkei": 1992, "zerotensor": 1992, "compositeimplicitautograd": 1992, "func_nam": [1992, 2020], "overload_nam": 1992, "exot": 1992, "zoo": 1992, "intrus": 1992, "torchfunctionmod": 1992, "_python_dispatch": 1992, "torchdispatchmod": 1992, "resolve_nam": [1992, 2055], "functionlog": 1992, "dispatchlog": 1992, "7164": 1992, "9336": 1992, "4287": 1992, "7989": 1992, "2169": 1992, "7474": 1992, "5624": 1992, "5970": 1992, "4328": 1992, "9794": 1992, "3490": 1992, "8671": 1992, "8573": 1992, "4338": 1992, "4948": 1992, "1249": 1992, "3307": 1992, "2151": 1992, "6018": 1992, "9060": 1992, "2974": 1992, "7708": 1992, "6668": 1992, "0352": 1992, "7948": 1992, "6023": 1992, "4303": 1992, "2036": 1992, "6831": 1992, "8120": 1992, "5949": 1992, "5416": 1992, "3335": 1992, "5897": 1992, "custom_vjp": 1993, "custom_jvp": 1993, "to_numpi": 1993, "numpysort": 1993, "ind_inv": 1993, "_1": [1993, 2012], "numpytak": 1993, "numpy_sort": 1993, "ggx": 1993, "vmappabl": 1993, "x_bdim": 1993, "ind_bdim": 1993, "ind_inv_bdim": 1993, "expanded_x": 1993, "expanded_ind": 1993, "expanded_ind_inv": 1993, "new_dim": 1993, "logical_dim": 1993, "maybe_expand_bdim_at_front": 1993, "pseudocod": 1993, "rapidli": [1994, 2001, 2007, 2008], "fortun": [1994, 2054], "abridg": 1994, "total_loss": 1994, "extrud": 1994, "phenomenon": 1994, "plenti": 1994, "bptt": 1994, "repackag": 1994, "nm": 1994, "blow": 1994, "rememb": [1994, 2001, 2011, 2047], "elf": 1994, "grep": [1994, 2038], "run_model": 1994, "recoveri": 1994, "data_parallel": 1994, "pad_packed_sequ": 1994, "padded_input": 1994, "packed_input": 1994, "packed_output": 1994, "my_lstm": 1994, "dp_m": 1994, "padding_input": 1994, "flava": 1995, "sooner": 1995, "llm": 1995, "llama": 1995, "6b": 1995, "2b": 1995, "8gb": 1995, "1x": 1995, "24gb": 1995, "total_transformer_block_params_in_b": 1995, "dtype_byt": 1995, "num_gpu": 1995, "gb": 1995, "2x": [1995, 2029, 2048], "record_funct": [1995, 2052], "recordstream": 1995, "flat_param": 1995, "splitwithsizesbackward": 1995, "4gb": 1995, "6gb": 1995, "_another_": 1995, "_could_": 1995, "hopefulli": [1995, 2043], "ur": 1996, "ui": [1996, 2029, 2048, 2051], "j_f": 1996, "calculu": 1996, "cw": 1996, "bigger": 1996, "articl": 1996, "58eb23378f2a376565a66ac32c93a316c45b6131": 1996, "l99": 1996, "l105": 1996, "ds_dx": 1996, "compute_gradi": 1996, "ds_dy": 1996, "conj_w_d": 1996, "w_d": 1996, "d_idx": 1996, "albeit": 1996, "wonder": 1996, "amd": [1997, 2035], "dialect": 1997, "portabl": 1997, "rocmdoc": 1997, "programming_guid": 1997, "hip_api_guid": 1997, "cuda_vers": 1997, "cudaruntimegetvers": 1997, "cudadrivergetvers": 1997, "hip_vers": 1997, "hipruntimegetvers": 1997, "hipdrivergetvers": 1997, "11000": 1997, "use_rocm": 1997, "rocm_vers": 1997, "40300": 1997, "cmake": [1997, 2005, 2036], "drocm_force_enable_gpu_assert": 1997, "addglobalcallback": 1998, "recordfunct": 1998, "ivalu": 1998, "threadlocaldebuginfo": 1998, "debuginfoguard": 1998, "recordfunctioncallback": 1998, "onfunctionent": 1998, "onfunctionexit": 1998, "needsinput": 1998, "samplingprob": 1998, "enablerecordfunct": 1998, "cerr": 1998, "broader": [1998, 2032], "inject": 1998, "setapiusagehandl": 1998, "setapiusagelogg": 1998, "event_nam": 1998, "c10_log_api_usage_onc": 1998, "my_api": 1998, "_log_api_usage_onc": 1998, "archiv": [1998, 2004], "akin": [1998, 2036], "jpeg": 1998, "camera": [1998, 2029], "setexportmoduleextrafileshook": 1998, "extrafilesmap": 1998, "producer_info": 1998, "getenv": 1998, "getsourc": 1998, "precompil": 1998, "pyc": 1998, "loos": 1998, "elabor": 1999, "tpu": 1999, "mylinear": 1999, "sample_input": 1999, "0413": 1999, "2057": 1999, "0597": 1999, "8247": 1999, "1045": 1999, "4299": 1999, "5457": 1999, "4793": 1999, "3634": 1999, "8525": 1999, "6749": 1999, "l0": [1999, 2004], "deeper": [1999, 2012, 2047], "bignet": 1999, "big_net": 1999, "dynamicnet": 1999, "dynamic_net": 1999, "2051": 1999, "7601": 1999, "1963": 1999, "4354": 1999, "6598": 1999, "4446": 1999, "4628": 1999, "8774": 1999, "6848": 1999, "5458": 1999, "4647": 1999, "5310": 1999, "0609": 1999, "0940": 1999, "1266": 1999, "0623": 1999, "3508": 1999, "0550": 1999, "5317": 1999, "5562": 1999, "4028": 1999, "6942": 1999, "0140": 1999, "0329": 1999, "1160": 1999, "0434": 1999, "3889": 1999, "1613": 1999, "6340": 1999, "3887": 1999, "9979": 1999, "0767": 1999, "3526": 1999, "8756": 1999, "5847": 1999, "6016": 1999, "1608": 1999, "0829": 1999, "6338": 1999, "9239": 1999, "6943": 1999, "5034": 1999, "0268": 1999, "4489": 1999, "9403": 1999, "1571": [1999, 2004], "2509": 1999, "5052": 1999, "3088": 1999, "4951": 1999, "3381": 1999, "5166": 1999, "beginn": 1999, "examples_nn": 1999, "polynomial_modul": 1999, "teach": 1999, "0013": [1999, 2025], "0030": 1999, "0008": 1999, "modalmodul": 1999, "6614": 1999, "2669": 1999, "0617": 1999, "4519": 1999, "two_layer_net_optim": 1999, "blitz": 1999, "neural_networks_tutori": 1999, "autograd_tutori": 1999, "new_net": 1999, "runningmean": 1999, "1041": 1999, "0647": 1999, "1515": 1999, "m_load": 1999, "unserialized_th": 1999, "statefulmodul": 1999, "param3": 1999, "param_list": 1999, "parameterlist": 1999, "param_dict": 1999, "parameterdict": 1999, "buffer1": 1999, "buffer2": 1999, "buffer3": 1999, "0322": 1999, "9066": 1999, "1409": 1999, "4852": 1999, "6949": 1999, "2911": 1999, "1044": 1999, "4202": 1999, "1953": 1999, "5299": 1999, "8747": 1999, "6289": 1999, "4898": 1999, "6434": 1999, "5187": 1999, "0346": 1999, "4077": 1999, "4324": 1999, "7022": 1999, "3915": 1999, "6176": 1999, "6062": 1999, "5992": 1999, "4452": 1999, "2843": 1999, "3710": 1999, "3947": 1999, "saving_loading_model": 1999, "what_is_state_dict": 1999, "skip_init": 1999, "skip_param_init": 1999, "forward_hook": [1999, 2050], "backward_hook": [1999, 2050], "new_grad_input": 1999, "5059": 1999, "8158": 1999, "2390": 1999, "0043": 1999, "addmmbackward": 1999, "forward_pre_hook_handl": 1999, "5752": 1999, "7421": 1999, "forward_hook_handl": 1999, "0980": 1999, "4666": 1999, "0256": 1999, "4497": 1999, "5046": 1999, "combat": 1999, "mps_devic": 2000, "yourfavoritenet": 2000, "a3c": 2001, "set_start_method": 2001, "simplequeu": 2001, "cope": 2001, "eleg": 2001, "num_process": 2001, "inappropri": 2001, "vcpu": 2001, "htop": 2001, "exceed": 2001, "competit": 2001, "oversubscrib": 2001, "mnist_hogwild": 2001, "dataloader_kwarg": 2001, "train_epoch": 2001, "30x": 2001, "boost": [2001, 2038], "754": 2002, "1e20": 2002, "4142e": 2002, "struggl": 2002, "benign": 2002, "v_dot2": 2002, "mfma": 2002, "fp64": 2002, "rocbla": 2002, "miopen": 2002, "rocblas_internal_fp16_alt_impl": 2002, "miopen_debug_convolution_attrib_fp16_alt_impl": 2002, "_convbackend": 2002, "slownd": 2002, "slownd_transpos": 2002, "slownd_dil": 2002, "slownd_dilated_transpos": 2002, "convbackend": 2002, "miopendepthwis": 2002, "miopentranspos": 2002, "svd_lowrank": [2003, 2024], "22modul": 2003, "20determin": 2003, "index_add_cuda_": 2003, "1509": 2003, "8027": 2003, "0333": 2003, "1444": 2003, "rese": 2003, "seed_work": 2003, "worker_se": 2003, "train_dataset": 2003, "tensor_dict": 2004, "loaded_numb": 2004, "loaded_even": 2004, "loaded_smal": 2004, "num_batches_track": 2004, "bn_state_dict": 2004, "new_bn": 2004, "out0_relu": 2004, "1400": 2004, "4563": 2004, "0271": 2004, "4406": 2004, "2827": 2004, "4588": 2004, "2031": 2004, "1316": 2004, "6533": 2004, "3413": 2004, "1112": 2004, "m_state_dict": 2004, "new_m": 2004, "zip64": 2004, "pkl": [2004, 2012], "byteord": 2004, "original_nam": 2004, "controlflowmodul": 2004, "controlflowmodule_trac": 2004, "3793": 2004, "controlflowmodule_script": 2004, "tagger": 2004, "ipu_tag": 2004, "ipu_deseri": 2004, "startswith": [2004, 2010], "get_default_load_endian": 2004, "loadendian": 2004, "default_load_endian": 2004, "set_default_load_endian": 2004, "endian": 2004, "rem": 2005, "7z": 2005, "curl": 2005, "ossci": 2005, "mkl_2020": 2005, "aoa": 2005, "omkl": 2005, "cuda_prefix": 2005, "cuda102": 2005, "magma_2": 2005, "4_": 2005, "omagma": 2005, "cmake_include_path": 2005, "cd": [2005, 2012, 2014, 2036, 2054], "magma_hom": 2005, "studio": [2005, 2007], "pip": [2005, 2007, 2008, 2009, 2029, 2041], "cmake_gener": 2005, "ffi": 2005, "create_extens": 2005, "_ext": 2005, "define_macro": 2005, "relative_to": 2005, "c99": 2005, "x86_x64": 2005, "packagesnotfounderror": 2005, "anaconda": 2005, "noarch": 2005, "continuum": 2005, "pkg": 2005, "pro": [2005, 2029], "msys2": 2005, "importerror": [2005, 2012], "dll": 2005, "vc2017": 2005, "vc": 2005, "vs2017_runtim": 2005, "mkl_fft": 2005, "intel_openmp": 2005, "vs2017": 2005, "openbla": 2005, "forg": 2005, "emerg": [2005, 2042], "bootstrap": 2005, "forgotten": 2005, "freeze_support": 2005, "forkingpickl": 2005, "brokenpipeerror": 2005, "errno": 2005, "couldn": [2005, 2009], "torch_14808_1591070686": 2005, "thalloc": 2005, "tdr": 2005, "thcudacheck": 2005, "csrc": [2005, 2036, 2042], "storageshar": 2005, "microsoft": [2006, 2015], "flavor": 2006, "polish": [2006, 2007], "orchestr": [2007, 2050], "exportopt": 2007, "onnxregistri": 2007, "extractor": 2007, "fxgraphextractor": 2007, "onnxfakecontext": 2007, "onnxprogram": 2007, "onnxprogramseri": 2007, "upgrad": [2007, 2011, 2031], "perceptron": 2007, "mlpmodel": 2007, "fc0": 2007, "fc3": 2007, "tensor_x": 2007, "97": [2007, 2025], "onnx_program": 2007, "dynamo_export": [2007, 2009], "model_proto": 2007, "modelproto": 2007, "complianc": 2007, "protobuf": [2007, 2009], "netron": 2007, "icon": 2007, "viewer": [2007, 2056], "parseabl": 2007, "fxe0007": 2007, "fxe0011": 2007, "fxe0012": 2007, "fxe0013": 2007, "fxe0014": 2007, "fxe0015": 2007, "fxe0016": 2007, "model_arg": 2007, "model_kwarg": 2007, "my_simple_model": 2007, "my_dynamic_model": 2007, "tensor_typ": 2007, "elem_typ": 2007, "dim_param": [2007, 2009], "arg0_dim_0": 2007, "arg0_dim_1": 2007, "arg0_dim_2": 2007, "fake_context": 2007, "onnx_registri": 2007, "diagnostic_opt": 2007, "enable_fake_mod": 2007, "fake_tensor": [2007, 2042, 2043], "faketensormod": [2007, 2042, 2043], "xdoctest": [2007, 2008], "torch_doctest_onnx": [2007, 2008], "my_nn_modul": 2007, "my_model_without_initi": 2007, "WITH": [2007, 2009], "my_model_with_initi": 2007, "input_adapt": 2007, "output_adapt": 2007, "diagnostic_context": 2007, "export_except": 2007, "model_signatur": 2007, "model_torch": 2007, "io_adapt": 2007, "inputadapt": 2007, "outputadapt": 2007, "diagnosticcontext": 2007, "adapt_torch_inputs_to_onnx": 2007, "model_with_state_dict": 2007, "func_nested_input": 2007, "x_dict": 2007, "y_tupl": 2007, "y3": 2007, "adapt_torch_outputs_to_onnx": 2007, "model_output": 2007, "func_returning_tupl": 2007, "pt_output": 2007, "inputadaptstep": 2007, "outputadaptstep": 2007, "9216": [2007, 2009], "_log_softmax": [2007, 2010, 2049], "bufferediobas": 2007, "save_diagnost": 2007, "protobufonnxprogramseri": 2007, "serializetostr": 2007, "exported_model": 2007, "onnxruntimeopt": 2007, "session_opt": 2007, "execution_provid": 2007, "execution_provider_opt": 2007, "onnxruntim": [2007, 2008, 2009, 2015], "sessionopt": 2007, "invalidexportoptionserror": 2007, "get_op_funct": 2007, "is_registered_op": 2007, "register_op": 2007, "tracedonnxfunct": 2007, "sctip": 2007, "warnings_as_error": 2007, "is_onnxrt_backend_support": 2008, "onnxrt": [2008, 2035], "dummy_input": 2009, "input_nam": 2009, "actual_input_1": 2009, "learned_": 2009, "output_nam": 2009, "learned_0": 2009, "learned_1": 2009, "learned_2": 2009, "learned_3": 2009, "learned_14": 2009, "learned_15": 2009, "kernel_shap": 2009, "transb": 2009, "check_model": 2009, "printable_graph": 2009, "ort": 2009, "ort_sess": 2009, "inferencesess": 2009, "astyp": 2009, "seq_length": 2009, "real_seq_length": 2009, "experienc": 2009, "new_data": 2009, "hope": [2009, 2048], "symbolic_opset": 2009, "symbolic_opset9": 2009, "_variablefunct": 2009, "pyi": 2009, "checkout": 2009, "___torch_mangle_0": 2009, "alpha_f": 2009, "myrelu": 2009, "value_t": 2009, "pythonop": [2009, 2010], "mylogexp": 2009, "operator_export_typ": 2009, "onnx_fallthrough": 2009, "onnx_aten_fallback": 2009, "onnx_opset": 2009, "opset15": 2009, "custom_opset": 2009, "67326": 2009, "alphax": 2009, "castlik": 2009, "gammax": 2009, "settyp": 2009, "custom_selu": 2009, "jit_util": 2009, "graphcontext": 2009, "onnxscript_op": 2009, "register_custom_op_symbol": 2009, "symbolic_nam": 2009, "symbolic_fn": 2009, "Be": [2009, 2051], "symbolic_help": 2009, "symbolic_foo_forward": 2009, "custom_domain": 2009, "attr1_f": 2009, "attr2_i": 2009, "custom_op": [2009, 2043], "foo_forward": 2009, "foomodel": 2009, "example_input1": 2009, "caffe2": [2009, 2029], "torch_script_graph": 2009, "unconvertible_op": 2009, "dynamic_ax": 2009, "export_param": 2009, "trainingmod": 2009, "operatorexporttyp": 2009, "do_constant_fold": 2009, "keep_initializers_as_input": 2009, "export_modules_as_funct": 2009, "autograd_inlin": 2009, "OF": 2009, "input_i": 2009, "input_z": 2009, "fileno": 2009, "untrain": 2009, "doc_str": 2009, "onnx_aten": 2009, "build_caffe2": 2009, "summodul": 2009, "dim_valu": 2009, "my_custom_axis_nam": 2009, "sum_dynamic_axes_1": 2009, "deduplicate_initi": 2009, "74765": 2009, "checkererror": 2009, "unsupportedoperatorerror": 2009, "export_to_pretty_str": 2009, "export_typ": 2009, "google_print": 2009, "add_node_nam": 2009, "nodeproto": 2009, "debugstr": 2009, "contrib": 2009, "test_aten_embedding_2": 2009, "test_oper": 2009, "unregister_custom_op_symbol": 2009, "select_model_mode_for_export": 2009, "is_in_onnx_export": 2009, "middl": 2009, "enable_log": 2009, "disable_log": 2009, "graphinfo": 2009, "incorrect_relu_symbolic_funct": 2009, "2328854203224182": 2009, "699536174352349": 2009, "constantchunk": 2010, "__and_": 2010, "__contains_": 2010, "__derive_index": 2010, "__getitem_": 2010, "__interpol": 2010, "__is_": 2010, "__isnot_": 2010, "__lshift_": 2010, "__not_": 2010, "__or_": 2010, "__range_length": 2010, "__rshift_": 2010, "__xor_": 2010, "_cast_byt": 2010, "_cast_char": 2010, "_cast_doubl": 2010, "_cast_float": 2010, "_cast_half": 2010, "_cast_int": 2010, "_cast_long": 2010, "_cast_short": 2010, "_conj": 2010, "_convolution_mod": 2010, "_dim_arang": 2010, "_pack_padded_sequ": 2010, "_pad_packed_sequ": 2010, "_reshape_from_tensor": 2010, "_sample_dirichlet": 2010, "_set_item": 2010, "_shape_as_tensor": 2010, "_standard_gamma": 2010, "_uniqu": 2010, "_unique2": 2010, "_weight_norm": 2010, "conv1d_relu": 2010, "conv2d_relu": 2010, "conv3d_relu": 2010, "embedding_renorm": 2010, "floordiv": [2010, 2017], "linear_relu": [2010, 2017], "nonzero_numpi": 2010, "numpy_t": 2010, "unchecked_cast": 2010, "unique_dim": 2010, "_c10d_function": 2010, "all_gather_into_tensor_coalesc": 2010, "all_reduce_coalesc": 2010, "reduce_scatter_tensor_coalesc": 2010, "wait_tensor": 2010, "_quantiz": 2010, "conv2d_prepack": 2010, "conv3d_prepack": 2010, "conv_transpose1d_prepack": 2010, "conv_transpose2d_prepack": 2010, "conv_transpose3d_prepack": 2010, "linear_dynam": 2010, "linear_prepack": 2010, "linear_prepack_fp16": 2010, "linear_prepack_fp16_legaci": 2010, "linear_prepack_legaci": 2010, "_test": 2010, "get_first": 2010, "compleximplicit": 2010, "floatimplicit": 2010, "intimplicit": 2010, "__iand_": 2010, "__ilshift_": 2010, "__ior_": 2010, "__irshift_": 2010, "__ixor_": 2010, "__round_to_zero_floordiv": 2010, "__upsampl": 2010, "__upsample_bilinear": 2010, "__upsample_nearest": 2010, "_adaptive_avg_pool2d": [2010, 2049], "_adaptive_avg_pool3d": [2010, 2049], "_add_batch_dim": 2010, "_add_relu": 2010, "_addmm_activ": 2010, "_aminmax": 2010, "_amp_foreach_non_finite_check_and_unscal": 2010, "_amp_update_scal": 2010, "_assert_scalar": 2010, "_assert_tensor_metadata": 2010, "_autocast_to_full_precis": 2010, "_autocast_to_reduced_precis": 2010, "_batch_norm_impl_index": 2010, "_cdist_forward": [2010, 2049], "_cholesky_solve_help": 2010, "_choose_qparams_per_tensor": 2010, "_coalesc": 2010, "_compute_linear_combin": 2010, "_conj_copi": 2010, "_conj_phys": 2010, "_conv_depthwise2d": 2010, "_convert_indices_from_coo_to_csr": 2010, "_convert_indices_from_csr_to_coo": 2010, "_convert_weight_to_int4pack": 2010, "_copy_from": 2010, "_copy_from_and_res": 2010, "_cslt_compress": 2010, "_cslt_sparse_mm": 2010, "_cslt_sparse_mm_search": 2010, "_ctc_loss": 2010, "_cudnn_ctc_loss": 2010, "_cudnn_init_dropout_st": 2010, "_cudnn_rnn": 2010, "_cudnn_rnn_flatten_weight": 2010, "_cufft_clear_plan_cach": 2010, "_cufft_get_plan_cache_max_s": 2010, "_cufft_get_plan_cache_s": 2010, "_cufft_set_plan_cache_max_s": 2010, "_cummax_help": 2010, "_cummin_help": 2010, "_debug_has_internal_overlap": 2010, "_dimi": 2010, "_dimv": 2010, "_dirichlet_grad": 2010, "_efficient_attention_forward": 2010, "_efficientzerotensor": 2010, "_embedding_bag": [2010, 2049], "_embedding_bag_forward_onli": 2010, "_empty_affine_quant": 2010, "_empty_per_channel_affine_quant": 2010, "_euclidean_dist": 2010, "_fake_quantize_learnable_per_channel_affin": 2010, "_fake_quantize_learnable_per_tensor_affin": 2010, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 2010, "_fft_c2c": 2010, "_fft_c2r": 2010, "_fft_r2c": 2010, "_fill_mem_eff_dropout_mask": 2010, "_flash_attention_forward": 2010, "_foobar": [2010, 2054], "_foreach_ab": 2010, "_foreach_aco": 2010, "_foreach_add": 2010, "_foreach_addcdiv": 2010, "_foreach_addcmul": 2010, "_foreach_asin": 2010, "_foreach_atan": 2010, "_foreach_ceil": 2010, "_foreach_clamp_max": 2010, "_foreach_clamp_min": 2010, "_foreach_copi": 2010, "_foreach_co": 2010, "_foreach_cosh": 2010, "_foreach_div": 2010, "_foreach_erf": 2010, "_foreach_erfc": 2010, "_foreach_exp": 2010, "_foreach_expm1": 2010, "_foreach_floor": 2010, "_foreach_frac": 2010, "_foreach_lerp": 2010, "_foreach_lgamma": 2010, "_foreach_log": 2010, "_foreach_log10": 2010, "_foreach_log1p": 2010, "_foreach_log2": 2010, "_foreach_maximum": 2010, "_foreach_minimum": 2010, "_foreach_mul": 2010, "_foreach_neg": 2010, "_foreach_norm": 2010, "_foreach_pow": 2010, "_foreach_reciproc": 2010, "_foreach_round": 2010, "_foreach_sigmoid": 2010, "_foreach_sign": 2010, "_foreach_sin": 2010, "_foreach_sinh": 2010, "_foreach_sqrt": 2010, "_foreach_sub": 2010, "_foreach_tan": 2010, "_foreach_tanh": 2010, "_foreach_trunc": 2010, "_foreach_zero": 2010, "_functional_assert_async": 2010, "_functional_assert_scalar": 2010, "_functional_sym_constrain_rang": 2010, "_functional_sym_constrain_range_for_s": 2010, "_fused_adam": 2010, "_fused_adamw": 2010, "_fused_dropout": 2010, "_fused_moving_avg_obs_fq_help": 2010, "_fused_moving_avg_obs_fq_helper_funct": 2010, "_fused_sdp_choic": 2010, "_fused_sgd": 2010, "_fw_primal": 2010, "_fw_primal_copi": 2010, "_get_cpu_cap": 2010, "_get_tracing_st": 2010, "_grad_sum_to_s": 2010, "_has_compatible_shallow_copy_typ": 2010, "_has_same_storage_numel": 2010, "_histogramdd_bin_edg": 2010, "_histogramdd_from_bin_ct": 2010, "_histogramdd_from_bin_tensor": 2010, "_index_put_impl": 2010, "_indices_copi": 2010, "_infer_s": 2010, "_int_mm": 2010, "_is_all_tru": 2010, "_is_any_tru": 2010, "_is_zerotensor": 2010, "_lazy_clon": 2010, "_linalg_check_error": 2010, "_linalg_det": 2010, "_linalg_eigh": 2010, "_linalg_slogdet": 2010, "_linalg_solve_ex": 2010, "_linalg_svd": 2010, "_list_to_tensor": 2010, "_logcumsumexp": 2010, "_lstm_mp": 2010, "_make_dep_token": 2010, "_make_du": 2010, "_make_dual_copi": 2010, "_make_per_channel_quantized_tensor": 2010, "_make_per_tensor_quantized_tensor": 2010, "_masked_scal": 2010, "_masked_softmax": 2010, "_mixed_dtypes_linear": 2010, "_mkldnn_reshap": 2010, "_mkldnn_transpos": 2010, "_mps_convolut": 2010, "_mps_convolution_transpos": 2010, "_native_batch_norm_legit": [2010, 2049], "_native_batch_norm_legit_funct": 2010, "_native_batch_norm_legit_no_train": [2010, 2049], "_native_multi_head_attent": 2010, "_ncf_unsqueez": 2010, "_ncf_view": 2010, "_neg_view": 2010, "_neg_view_copi": 2010, "_nested_from_pad": 2010, "_nested_from_padded_and_nested_exampl": 2010, "_nested_tensor_from_mask": 2010, "_nested_tensor_from_mask_left_align": 2010, "_nested_tensor_from_tensor_list": 2010, "_nested_tensor_s": 2010, "_nested_tensor_softmax_with_shap": 2010, "_nested_tensor_storage_offset": 2010, "_nested_tensor_strid": 2010, "_nested_view_from_buff": 2010, "_nested_view_from_buffer_copi": 2010, "_new_zeros_with_same_feature_meta": 2010, "_nnpack_avail": 2010, "_nnpack_spatial_convolut": 2010, "_no_grad_embedding_renorm": 2010, "_no_grad_fil": 2010, "_no_grad_norm": 2010, "_no_grad_uniform": 2010, "_no_grad_zero": 2010, "_pack_sequ": 2010, "_pad_circular": 2010, "_pad_enum": 2010, "_pdist_forward": [2010, 2049], "_pin_memori": 2010, "_prelu_kernel": 2010, "_propagate_xla_data": 2010, "_remove_batch_dim": 2010, "_reshape_alia": 2010, "_reshape_alias_copi": 2010, "_reshape_copi": 2010, "_resize_output": 2010, "_rowwise_prun": 2010, "_saturate_weight_to_fp16": 2010, "_scaled_dot_product_attention_math": 2010, "_scaled_dot_product_cudnn_attent": 2010, "_scaled_dot_product_efficient_attent": 2010, "_scaled_dot_product_flash_attent": 2010, "_scaled_dot_product_flash_attention_for_cpu": 2010, "_scaled_mm": 2010, "_size_if_not_equ": 2010, "_slow_conv2d_forward": 2010, "_sobol_engine_draw": 2010, "_sobol_engine_ff": 2010, "_sobol_engine_initialize_st": 2010, "_sobol_engine_scrambl": 2010, "_softmax": [2010, 2025, 2049], "_sparse_addmm": 2010, "_sparse_broadcast_to": 2010, "_sparse_broadcast_to_copi": 2010, "_sparse_bsc_tensor_unsaf": 2010, "_sparse_bsr_tensor_unsaf": 2010, "_sparse_compressed_tensor_unsaf": 2010, "_sparse_coo_tensor_unsaf": 2010, "_sparse_coo_tensor_with_dim": 2010, "_sparse_coo_tensor_with_dims_and_tensor": 2010, "_sparse_csc_tensor_unsaf": 2010, "_sparse_csr_prod": 2010, "_sparse_csr_sum": 2010, "_sparse_csr_tensor_unsaf": 2010, "_sparse_log_softmax": 2010, "_sparse_mask_project": 2010, "_sparse_mm": 2010, "_sparse_mm_reduce_impl": 2010, "_sparse_semi_structured_linear": 2010, "_sparse_softmax": 2010, "_sparse_sparse_matmul": 2010, "_sparse_sum": 2010, "_spdiag": 2010, "_standard_gamma_grad": 2010, "_tensor_to_list": 2010, "_test_ambiguous_default": 2010, "_test_autograd_multiple_dispatch": 2010, "_test_autograd_multiple_dispatch_view": 2010, "_test_autograd_multiple_dispatch_view_copi": 2010, "_test_check_tensor": 2010, "_test_functorch_fallback": 2010, "_test_optional_filled_intlist": 2010, "_test_optional_floatlist": 2010, "_test_optional_intlist": 2010, "_test_serialization_subcmul": 2010, "_test_string_default": 2010, "_test_warn_in_autograd": 2010, "_thnn_fused_gru_cel": 2010, "_thnn_fused_lstm_cel": 2010, "_to_copi": [2010, 2049], "_to_cpu": 2010, "_to_dens": 2010, "_to_spars": 2010, "_to_sparse_bsc": 2010, "_to_sparse_bsr": 2010, "_to_sparse_csc": 2010, "_to_sparse_csr": 2010, "_to_sparse_semi_structur": 2010, "_transform_bias_rescale_qkv": 2010, "_transformer_encoder_layer_fwd": 2010, "_trilinear": 2010, "_triton_multi_head_attent": 2010, "_triton_scaled_dot_attent": 2010, "_unpack_du": 2010, "_unsafe_index": 2010, "_unsafe_index_put": 2010, "_unsafe_view": 2010, "_unwrap_opt": 2010, "_upsample_bicubic2d_aa": 2010, "_upsample_bilinear2d_aa": 2010, "_upsample_nearest_exact1d": 2010, "_upsample_nearest_exact2d": 2010, "_upsample_nearest_exact3d": 2010, "_use_cudnn_ctc_loss": 2010, "_use_cudnn_rnn_flatten_weight": 2010, "_validate_compressed_sparse_indic": 2010, "_validate_sparse_bsc_tensor_arg": 2010, "_validate_sparse_bsr_tensor_arg": 2010, "_validate_sparse_compressed_tensor_arg": 2010, "_validate_sparse_coo_tensor_arg": 2010, "_validate_sparse_csc_tensor_arg": 2010, "_validate_sparse_csr_tensor_arg": 2010, "_values_copi": 2010, "_weight_int4pack_mm": 2010, "_weight_norm_interfac": 2010, "capit": 2010, "confirmed_by_own": [2010, 2020], "convolution_overrid": 2010, "copy_sparse_to_spars": 2010, "endswith": 2010, "expandtab": 2010, "fake_quantize_per_channel_affine_cachemask": 2010, "fake_quantize_per_tensor_affine_cachemask": 2010, "fill_diagon": 2010, "glu_jvp": 2010, "has_torch_funct": [2010, 2055], "is_non_overlapping_and_dens": 2010, "is_own": [2010, 2020], "is_strides_like_format": 2010, "isalnum": 2010, "isalpha": 2010, "isdecim": 2010, "isdigit": 2010, "isidentifi": 2010, "islow": 2010, "isnumer": 2010, "isprint": 2010, "isspac": 2010, "istitl": 2010, "isupp": 2010, "lift_fresh": 2010, "ljust": 2010, "local_valu": [2010, 2013, 2020], "log_sigmoid_forward": 2010, "lstrip": 2010, "matrix_h": 2010, "nll_loss2d_forward": 2010, "nll_loss_forward": 2010, "normal_funct": 2010, "owner_nam": [2010, 2020], "percentformat": 2010, "quantized_gru": 2010, "quantized_lstm": 2010, "resize_as_spars": 2010, "rfind": 2010, "rindex": 2010, "rjust": 2010, "rpartit": 2010, "rsplit": 2010, "rstrip": 2010, "set_data": 2010, "slow_conv3d_forward": 2010, "sparse_res": 2010, "sparse_resize_and_clear": 2010, "splitlin": 2010, "swapcas": 2010, "sym_numel": [2010, 2049], "sym_storage_offset": [2010, 2049], "sym_strid": [2010, 2049], "unique_dim_consecut": 2010, "zfill": 2010, "_allgather_bas": 2010, "_reduce_scatter_bas": 2010, "allgath": 2010, "allgather_coalesc": 2010, "allgather_into_tensor_coalesc": 2010, "allreduce_coalesc": 2010, "alltoal": 2010, "alltoall_bas": 2010, "recv_any_sourc": 2010, "debugprim": 2010, "load_tensor": 2010, "_alloc_from_pool": 2010, "_mm_plus_mm": 2010, "_reinterpret_tensor": 2010, "accumulate_grad": 2010, "resize_storage_byt": 2010, "_mkl_linear": 2010, "_mkl_reorder_linear_weight": 2010, "_convolution_pointwis": 2010, "_convolution_transpose_pointwis": 2010, "_is_mkldnn_acl_support": 2010, "_is_mkldnn_bf16_support": 2010, "_is_mkldnn_fp16_support": 2010, "_linear_pointwis": 2010, "_reorder_convolution_transpose_weight": 2010, "_reorder_convolution_weight": 2010, "_reorder_linear_weight": 2010, "_reorder_mkldnn_rnn_layer_weight": 2010, "mkldnn_prepack": 2010, "conv2d_run": 2010, "qconv1d_pointwis": 2010, "qconv2d_pointwis": 2010, "qconv3d_pointwis": 2010, "qconv_prepack": 2010, "qlinear_pointwis": 2010, "qlinear_prepack": 2010, "conv2d_clamp_prepack": 2010, "conv2d_clamp_run": 2010, "conv2d_transpose_clamp_prepack": 2010, "conv2d_transpose_clamp_run": 2010, "linear_clamp_prepack": 2010, "linear_clamp_run": 2010, "unpack_prepacked_sizes_conv2d": 2010, "unpack_prepacked_sizes_linear": 2010, "addstatvalu": 2010, "autogradadd": 2010, "autogradallnonzero": 2010, "autogradallzero": 2010, "autogradanynonzero": 2010, "autogradzero": 2010, "bailout": [2010, 2042], "bailouttempl": 2010, "broadcastmkldnntensor": 2010, "broadcasts": 2010, "chunksiz": 2010, "constantmkldnntensor": 2010, "differentiablegraph": 2010, "enumnam": 2010, "enumvalu": 2010, "fallbackgraph": 2010, "fusedconcat": 2010, "fusiongroup": 2010, "ifthenels": 2010, "ignoredpythonop": 2010, "mkldnnclamp": 2010, "mkldnnhardsigmoid": 2010, "mkldnnhardswish": 2010, "mkldnnhardtanh": 2010, "mkldnnlayernorm": 2010, "mkldnnscalarmul": 2010, "mmbatchsid": 2010, "mmtreereduc": 2010, "modulecontainerindex": 2010, "numtotensor": 2010, "raiseexcept": 2010, "reductions": 2010, "requiresgradcheck": 2010, "staticruntimecopyout": 2010, "staticsubgraph": 2010, "stringindex": 2010, "tensorexprdynamicgroup": 2010, "tensorexprdynamicguard": 2010, "tensorexprgroup": 2010, "timepoint": 2010, "tupleindex": 2010, "tupleunpack": 2010, "varconcat": 2010, "varstack": 2010, "awaitable_nowait": 2010, "awaitable_wait": 2010, "is_cpu": [2010, 2044], "is_ipu": [2010, 2044], "is_mkldnn": [2010, 2044], "is_mp": [2010, 2044], "is_mtia": 2010, "is_nest": [2010, 2044], "is_ort": [2010, 2044], "is_quant": [2010, 2044], "is_vulkan": [2010, 2044], "is_xla": [2010, 2044], "is_xpu": [2010, 2044], "onednnfusiongroup": 2010, "onednnfusionguard": 2010, "profile_ivalu": 2010, "rangelist": 2010, "rpc_remot": 2010, "unchecked_unwrap_opt": 2010, "bessel_i0": [2010, 2049], "bessel_i1": [2010, 2049], "bessel_j0": [2010, 2025, 2049], "bessel_j1": [2010, 2025, 2049], "broadcast_in_dim": [2010, 2049], "cbrt": [2010, 2049], "collapse_view": [2010, 2049], "convert_element_typ": [2010, 2049], "copy_strid": [2010, 2049], "copy_to": [2010, 2049], "device_put": [2010, 2049], "erf_inv": [2010, 2049], "erfcx": [2010, 2025, 2049], "fft_c2c": [2010, 2049], "fft_c2r": [2010, 2049], "fft_r2c": [2010, 2049], "iota": [2010, 2049], "maximum_valu": [2010, 2049], "minimum_valu": [2010, 2049], "ndtri": [2010, 2025, 2049], "rev": [2010, 2049], "shift_left": [2010, 2049], "shift_right_arithmet": [2010, 2049], "slice_in_dim": [2010, 2049], "spherical_bessel_j0": [2010, 2025, 2049], "split_dim": [2010, 2049], "view_of": [2010, 2049], "view_of_dtyp": [2010, 2049], "xor_sum": [2010, 2049], "_call_end_callbacks_on_jit_fut": 2010, "_record_function_ent": 2010, "_record_function_enter_new": 2010, "_record_function_exit": 2010, "_bfloat16quantizedtofloat": 2010, "_floattobfloat16quant": 2010, "add_out": 2010, "add_relu_out": 2010, "add_scalar_out": 2010, "add_scalar_relu": 2010, "add_scalar_relu_out": 2010, "batch_norm1d": 2010, "batch_norm1d_relu": 2010, "batch_norm2d": 2010, "batch_norm2d_relu": 2010, "batch_norm3d": 2010, "batch_norm3d_relu": 2010, "batch_norm_relu": 2010, "cat_out": 2010, "cat_relu": 2010, "cat_relu_out": 2010, "conv1d_dynam": 2010, "conv1d_prepack": 2010, "conv1d_unpack": 2010, "conv2d_add": 2010, "conv2d_add_relu": 2010, "conv2d_dil": 2010, "conv2d_dynam": 2010, "conv2d_group": 2010, "conv2d_output_pad": 2010, "conv2d_pad": 2010, "conv2d_strid": 2010, "conv2d_transpos": 2010, "conv2d_unpack": 2010, "conv2d_unpack_s": 2010, "conv3d_dil": 2010, "conv3d_dynam": 2010, "conv3d_group": 2010, "conv3d_output_pad": 2010, "conv3d_pad": 2010, "conv3d_strid": 2010, "conv3d_transpos": 2010, "conv3d_unpack": 2010, "conv_prepack": 2010, "conv_transpose1d_dynam": 2010, "conv_transpose1d_unpack": 2010, "conv_transpose2d_dil": 2010, "conv_transpose2d_dynam": 2010, "conv_transpose2d_group": 2010, "conv_transpose2d_output_pad": 2010, "conv_transpose2d_pad": 2010, "conv_transpose2d_strid": 2010, "conv_transpose2d_transpos": 2010, "conv_transpose2d_unpack": 2010, "conv_transpose3d_dil": 2010, "conv_transpose3d_dynam": 2010, "conv_transpose3d_group": 2010, "conv_transpose3d_output_pad": 2010, "conv_transpose3d_pad": 2010, "conv_transpose3d_strid": 2010, "conv_transpose3d_transpos": 2010, "conv_transpose3d_unpack": 2010, "conv_unpack": 2010, "embedding_4bit": 2010, "embedding_bag_2bit_prepack": 2010, "embedding_bag_2bit_rowwise_offset": 2010, "embedding_bag_2bit_unpack": 2010, "embedding_bag_4bit": 2010, "embedding_bag_4bit_prepack": 2010, "embedding_bag_4bit_rowwise_offset": 2010, "embedding_bag_4bit_unpack": 2010, "embedding_bag_byt": 2010, "embedding_bag_byte_prepack": 2010, "embedding_bag_byte_rowwise_offset": 2010, "embedding_bag_byte_unpack": 2010, "embedding_bag_prepack": 2010, "embedding_bag_unpack": 2010, "embedding_byt": 2010, "linear_dynamic_fp16": 2010, "linear_leaky_relu": 2010, "linear_relu_dynam": 2010, "linear_relu_dynamic_fp16": 2010, "linear_tanh": 2010, "linear_unpack": 2010, "linear_unpack_fp16": 2010, "linear_with_input_q_dq_qweight_dq_output_fp32": 2010, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 2010, "make_quantized_cell_param": 2010, "make_quantized_cell_params_dynam": 2010, "make_quantized_cell_params_fp16": 2010, "mul_out": 2010, "mul_relu": 2010, "mul_relu_out": 2010, "mul_scalar_out": 2010, "mul_scalar_relu": 2010, "mul_scalar_relu_out": 2010, "quantized_gru_cell_dynam": 2010, "quantized_lstm_cell_dynam": 2010, "quantized_rnn_relu_cell_dynam": 2010, "quantized_rnn_tanh_cell_dynam": 2010, "rngprim": 2010, "philox_rand": 2010, "qlinear": 2010, "qlinear_dynam": 2010, "qlinear_relu": 2010, "qlinear_relu_dynam": 2010, "qlinear_unpack": 2010, "static_runtim": 2010, "vartupleunpack": 2010, "clamp_nan_to_num": 2010, "create_owned_ref": 2010, "dequantize_copi": 2010, "dict_unpack": 2010, "expand_dims_copi": 2010, "flatten_copi": 2010, "fused_equally_split": 2010, "reshape_copi": 2010, "select_tensor": 2010, "signed_log1p": 2010, "to_copi": 2010, "to_maybe_copy_out": 2010, "var1": 2011, "var2": 2011, "bias_param": 2011, "lbfg": 2011, "adadelta": 2011, "adamax": 2011, "asgd": 2011, "nadam": 2011, "radam": 2011, "rmsprop": 2011, "rprop": 2011, "reducelronplateau": 2011, "multisteplr": 2011, "swa_util": 2011, "averagedmodel": 2011, "swalr": 2011, "update_bn": 2011, "optima": 2011, "polyak": 2011, "averaged_model": 2011, "multi_avg_fn": 2011, "get_ema_multi_avg_fn": 2011, "textrm": 2011, "update_paramet": 2011, "avg_fn": 2011, "_foreach": 2011, "ema_model": 2011, "ema_avg": 2011, "averaged_model_paramet": 2011, "model_paramet": 2011, "num_averag": 2011, "swa_schedul": 2011, "anneal_epoch": 2011, "swa_lr": 2011, "swa_model": 2011, "cosineannealinglr": 2011, "swa_start": 2011, "test_input": 2011, "secur": 2012, "unpackag": 2012, "exercis": 2012, "unzip": 2012, "my_packag": 2012, "freeli": 2012, "94304870911616": 2012, "94304900784016": 2012, "extern_modul": 2012, "model_1": 2012, "myzip": 2012, "file_byt": 2012, "writestr": 2012, "new_file_byt": 2012, "vim": 2012, "vimrc": 2012, "bufreadcmd": 2012, "brows": 2012, "amatch": 2012, "vi": 2012, "packageimport": 2012, "queryabl": 2012, "glob": 2012, "packageexport": 2012, "pe": 2012, "save_pickl": 2012, "has_fil": 2012, "importer_file_structur": 2012, "package_a": 2012, "get_rdep": 2012, "all_path": 2012, "dependency_graph_str": 2012, "save_text": 2012, "save_binari": 2012, "my_resourc": 2012, "config_stuff": 2012, "raw_data": 2012, "my_byt": 2012, "complementari": [2012, 2025], "load_pickl": 2012, "load_text": 2012, "load_binari": 2012, "my_tensor": 2012, "__reduce_package__": 2012, "my_str": 2012, "time_import": 2012, "time_export": 2012, "pickler": 2012, "persistent_id": 2012, "persistent_load": 2012, "generated_module_nam": 2012, "get_unique_id": 2012, "clock_gettim": 2012, "unpackage_foo": 2012, "depickl": 2012, "foo_1": 2012, "foo_2": 2012, "foo_packag": 2012, "foo_collect": 2012, "foo1": 2012, "foo2": 2012, "imported_foo": 2012, "9857706": 2012, "650140837": 2012, "652698385": 2012, "__torch_package__": 2012, "is_in_packag": 2012, "userexcept": 2012, "unpackageableexcept": 2012, "loaded_modul": 2012, "import_modul": 2012, "save_source_str": 2012, "save_modul": 2012, "textwrap": 2012, "dedent": 2012, "my_funct": 2012, "is_packag": 2012, "importlib": 2012, "my_pickl": 2012, "get_my_resourc": 2012, "read_text": 2012, "torch_package_import": 2012, "get_my_pickl": 2012, "is_from_packag": 2012, "stdlib": 2012, "my_test": 2012, "f2": [2012, 2013], "sys_import": 2012, "script_model": 2012, "mixed_model": 2012, "python_model_with_scripted_submodul": 2012, "loaded_script": 2012, "loaded_mix": 2012, "convention": 2012, "94286146172688": 2012, "94286146172784": 2012, "consult": [2012, 2042], "essai": 2012, "another_packag": 2012, "pickletool": 2012, "ast": 2012, "deni": 2012, "my_export": 2012, "my_interned_modul": 2012, "package_export": 2012, "my_externed_modul": 2012, "my_mocked_modul": 2012, "unwant": [2012, 2029], "hodg": 2012, "podg": 2012, "bazel": 2012, "buck": 2012, "my_class_inst": 2012, "imported_myclass": 2012, "okai": 2012, "torch_package_0": 2012, "handle_me_this_wai": 2012, "inadvert": 2012, "pun": 2012, "packagingerror": 2012, "dependency_graph": 2012, "emptymatcherror": 2012, "allow_empti": 2012, "_sysimport": 2012, "hermet": 2012, "scan": 2012, "orderedimport": 2012, "add_depend": 2012, "graphviz": 2012, "lang": 2012, "denied_modul": 2012, "my_subpackag": 2012, "digraph": 2012, "externed_modul": 2012, "interned_modul": 2012, "mocked_modul": 2012, "register_extern_hook": 2012, "register_intern_hook": 2012, "register_mock_hook": 2012, "myobject": 2012, "save_source_fil": 2012, "file_or_directori": 2012, "my_subsubpackag": 2012, "file_or_buff": 2012, "module_allow": 2012, "pytorchfileread": 2012, "python_vers": 2012, "is_dir": 2012, "gpipe": 2013, "suffer": 2013, "allevi": [2013, 2044], "microbatch": 2013, "bubbl": 2013, "except_last": 2013, "deferred_batch_norm": 2013, "torchgpip": 2013, "withdevic": 2013, "micro": 2013, "fc": [2013, 2015], "init_rpc": [2013, 2020, 2021], "output_rref": 2013, "fed": [2013, 2029], "nochunk": 2013, "resnext": 2013, "till": 2013, "skippabl": 2013, "1to3": 2013, "f1": 2013, "layer2": 2013, "layer3": 2013, "skip_1to3": 2013, "f3": 2013, "alic": 2013, "bob": 2013, "carol": 2013, "stashstashpop": 2013, "f_alic": 2013, "f_bob": 2013, "verify_skipp": 2013, "unmatch": [2013, 2034], "fairscal": 2013, "_kinetoprofil": 2014, "profileract": 2014, "export_memory_timelin": 2014, "add_metadata": 2014, "add_metadata_json": 2014, "unaggreg": 2014, "suffix": [2014, 2029, 2030], "png": 2014, "gzip": 2014, "numbyt": 2014, "increment_vers": 2014, "_memory_profil": 2014, "export_stack": 2014, "self_cuda_time_tot": 2014, "flamegraph": 2014, "brendangregg": 2014, "pl": 2014, "countnam": 2014, "perf_viz": 2014, "svg": 2014, "on_trace_readi": 2014, "record_and_sav": 2014, "tensorboard_trace_handl": 2014, "dir_nam": 2014, "logdir": [2014, 2029], "plugin": [2014, 2029, 2040], "code_to_profil": 2014, "row_limit": 2014, "trace_handl": 2014, "test_trace_": 2014, "step_num": 2014, "code_iteration_to_profil": 2014, "mtia": 2014, "skip_first": 2014, "worker_nam": [2014, 2020], "use_gzip": 2014, "range_push": 2014, "range_pop": 2014, "4x": 2015, "88": [2015, 2048], "14k": 2015, "domin": 2015, "previous_layer_fp32": 2015, "linear_fp32": 2015, "activation_fp32": 2015, "next_layer_fp32": 2015, "linear_weight_fp32": 2015, "linear_int8_w_fp32_inp": 2015, "linear_weight_int8": 2015, "ptdq": 2015, "model_fp32": 2015, "model_int8": 2015, "quantize_dynam": 2015, "input_fp32": 2015, "previous_layer_int8": 2015, "linear_with_activation_int8": 2015, "next_layer_int8": 2015, "ptsq": 2015, "minmax": 2015, "l2norm": 2015, "model_fp32_fus": 2015, "fuse_modul": [2015, 2016], "model_fp32_prepar": 2015, "fq": 2015, "prepare_qat": 2015, "training_loop": 2015, "requant": 2015, "linear1": 2015, "custom_qconfig": 2015, "fxptq": 2015, "model_fp": 2015, "usermodel": 2015, "model_to_quant": 2015, "default_dynamic_qconfig": 2015, "model_prepar": 2015, "model_quant": 2015, "model_fus": 2015, "quantize_pt2": 2015, "prepare_pt2": 2015, "_export": [2015, 2036], "capture_pre_autograd_graph": 2015, "xnnpackquant": 2015, "get_symmetric_quantization_config": 2015, "shoud": 2015, "prepare_qat_pt2": 2015, "convert_pt2": 2015, "per_tensor_symmetr": [2015, 2018], "per_channel_symmetr": [2015, 2018], "per_channel_scal": 2015, "per_channel_zero_point": 2015, "quantized_tensor": 2015, "qengin": 2015, "in4": 2015, "tensorrt": [2015, 2035, 2040, 2044], "fx2trt": 2015, "float_modul": [2015, 2033], "staticquantcustommodul": 2015, "observed_modul": 2015, "default_qconfig": [2015, 2034], "vnni": 2015, "test_quantized_op": 2015, "testquantizedop": 2015, "test_custom_module_lstm": 2015, "test_quantize_fx": 2015, "testquantizefx": 2015, "test_static_lstm": 2015, "some_oper": 2015, "e2": 2015, "thnn_conv2d_forward": 2015, "quantizedcpu": 2015, "some_qconfig": 2015, "linearpackedparam": 2015, "_modul": 2015, "prepare_orig": 2015, "quantized_orig": 2015, "scripted_quant": 2015, "fp32_op": 2016, "int8_op": 2016, "cooperlak": 2016, "audit": 2016, "op_fp32": 2016, "op_int8": 2016, "_numeric_suit": 2016, "_numeric_suite_fx": 2016, "0x7f89aa7e6c20": 2017, "0x7f8984b8ce50": 2017, "0x7f8984b8cee0": 2017, "num_tensor_args_to_observation_typ": 2017, "convbn1d": 2017, "0x7f89827ccaf0": 2017, "reference_quantized_module_for_root": 2017, "fuse_convtranspose_bn": 2017, "0x7f89827ccca0": 2017, "linearbn1d": 2017, "fuse_linear_bn": 2017, "0x7f89827ccc10": 2017, "convbn2d": 2017, "convbn3d": 2017, "bnrelu2d": 2017, "bnrelu3d": 2017, "input_type_to_index": 2017, "conv_fus": 2017, "convbnrelu1d": 2017, "convbnrelu2d": 2017, "convbnrelu3d": 2017, "convrelu1d": 2017, "convrelu3d": 2017, "0x7f8984b8cf70": 2017, "0x7f8984b905e0": 2017, "quint4x2": [2017, 2026, 2030, 2031], "embedding_op": 2017, "0x7f8984b924c0": 2017, "00390625": 2017, "0x7f8984b90dc0": 2017, "0x7f8984b90f70": 2017, "0x7f8984b904c0": 2017, "0x7f8984b923a0": 2017, "0x7f8984b0ac10": 2017, "0x7f8984b92430": 2017, "0x7f8984b90790": 2017, "linear_fus": 2017, "_sequential_wrapper2": 2017, "0x7f89b193a430": 2017, "0x7f8984b903a0": 2017, "0x7f897ca228b0": 2017, "fuse_conv_bn_relu": 2017, "0x7f89827ccb80": 2017, "0x7f897ca22940": 2017, "0x7f897ca229d0": 2017, "0x7f897ca22a60": 2017, "0x7f897ca22af0": 2017, "0x7f897ca22b80": 2017, "0x7f897ca22c10": 2017, "0x7f897ca22ca0": 2017, "0x7f897ca22d30": 2017, "0x7f897ca22dc0": 2017, "0x7f897ca22e50": 2017, "0x7f8984b90550": 2017, "0078125": 2017, "customconfig": 2018, "custom_module_config": 2018, "_caller": 2019, "_devices_kw": 2019, "slowli": 2019, "unind": 2019, "deivce_typ": 2019, "shortcom": 2020, "stitch": 2020, "rpc_backend_opt": 2020, "trainer3": 2020, "parameterserver2": 2020, "dash": [2020, 2022], "backendtyp": 2020, "rpcbackendopt": 2020, "rpcagent": 2020, "transmit": 2020, "calle": [2020, 2022], "_set_rpc_timeout": 2020, "worker0": 2020, "my_script_add": 2020, "wire": 2020, "fut2": 2020, "meth": 2020, "grace": 2020, "userrref": [2020, 2022], "async_execut": 2020, "paus": 2020, "outmost": 2020, "async_add_chain": 2020, "worker2": 2020, "script_add": 2020, "async_add": 2020, "asyncexecutionclass": 2020, "static_async_add": 2020, "class_async_add": 2020, "ret_fut": 2020, "bound_async_add": 2020, "rpc_timeout": 2020, "incid": [2020, 2022], "nvlink": 2020, "multiplex": 2020, "tensorpiperpcbackendopt": 2020, "num_worker_thread": 2020, "device_map": 2020, "_transport": 2020, "tensorpipeag": 2020, "set_device_map": 2020, "intermitt": 2020, "backoff": 2020, "pyrref": 2020, "type_hint": 2020, "_distributed_rpc": 2020, "dist_autograd_ctx_id": 2020, "ctx_id": 2020, "ownerrref": [2020, 2022], "remote_modul": 2020, "forward_async": 2020, "remote_devic": 2020, "workernam": 2020, "ps0": 2020, "remote_linear_modul": 2020, "get_module_rref": 2020, "remote_paramet": 2020, "my_add": [2021, 2055], "t4": 2021, "t5": 2021, "autograd_message_id": 2021, "autograd_context_id": 2021, "send1": 2021, "kickoff": 2021, "recv2": 2021, "heard": 2021, "send2": 2021, "recv1": 2021, "dist_autograd_simpl": 2021, "random_tensor": 2021, "_run_process": 2021, "dst_rank": 2021, "dst_name": 2021, "run_process": 2021, "rrefid": 2022, "transient": 2022, "udf": 2022, "deliveri": 2022, "knowledg": 2022, "danger": 2022, "ancestor": 2022, "trickier": 2022, "forkid": 2022, "ack": 2022, "solid": 2022, "followup": 2022, "lil": 2024, "stark": 2024, "9093": 2024, "1411": 2024, "7568": 2024, "9589": 2024, "2794": 2024, "catastroph": 2024, "9900": 2024, "metadata_mask": 2024, "rce": 2024, "rc": 2024, "62": 2024, "to_sparse_semi_structur": 2024, "1x4": 2024, "16x16": 2024, "a_spars": 2024, "sparsesemistructuredtensor": 2024, "000": 2024, "400": 2024, "s2": 2024, "plain_dim_s": 2024, "lp64": 2024, "280": 2024, "310": 2024, "sp": 2024, "9078": 2024, "conception": 2024, "sparsesemistructur": 2024, "lobpcg": 2024, "geneig": 2024, "pca_lowrank": 2024, "kindli": 2024, "airy_ai": 2025, "airi": 2025, "onward": 2025, "9635": 2025, "entr": 2025, "3466": 2025, "int_": 2025, "8427": 2025, "0561": 2025, "4769": 2025, "9213": 2025, "8858": 2025, "7683": 2025, "7481": 2025, "2920": 2025, "int_0": 2025, "gammaln": 2025, "a1": 2025, "a2": 2025, "3528": 2025, "5665": 2025, "6472": 2025, "4335": 2025, "2650": 2025, "2661": 2025, "2796": 2025, "8808": 2025, "3019": 2025, "4658": 2025, "3085": 2025, "2430": 2025, "2070": 2025, "i1": 2025, "5652": 2025, "9534": 2025, "7595": 2025, "2153": 2025, "log_ndtr": 2025, "_ndtr": 2025, "6077": 2025, "7832": 2025, "841": 2025, "6931": 2025, "1728": 2025, "023": 2025, "9331": 2025, "6486": 2025, "1523": 2025, "6516": 2025, "6352": 2025, "6131": 2025, "7169": 2025, "6261": 2025, "displaystyl": 2025, "undefiend": 2025, "6835": 2025, "8474": 2025, "1929": 2025, "7162": 2025, "4180": 2025, "3928": 2025, "4007": 2025, "7586": 2025, "3901": 2025, "5049": 2025, "ndtr": 2025, "0228": 2025, "1587": 2025, "9772": 2025, "9987": 2025, "2p": 2025, "64493": 2025, "4041": 2025, "8288": 2025, "4939": 2025, "4091": 2025, "8863": 2025, "771": 2025, "scaled_modified_bessel_k0": 2025, "scaled_modified_bessel_k1": 2025, "2948": 2025, "0267": 2025, "1566": 2025, "9186": 2025, "8631": 2025, "0259": 2025, "1300": 2025, "spheric": 2025, "xlog1pi": 2025, "3863": 2025, "1972": 2025, "6094": 2025, "2189": 2025, "8283": 2025, "7726": 2025, "0986": 2025, "1589": 2025, "hurwitz": 2025, "6449": 2025, "0823": 2025, "untyp": 2026, "wrap_storag": 2026, "complex_doubl": 2026, "from_buff": 2026, "is_hpu": 2026, "pickle_storage_typ": 2026, "byteswap": 2026, "posix": 2026, "shm_unlink": 2026, "unlink": 2026, "quint2x4": [2026, 2031], "twelv": 2027, "halftensor": [2027, 2030], "bfloat16tensor": [2027, 2030], "chartensor": [2027, 2030], "shorttensor": [2027, 2030], "binary16": [2027, 2030], "significand": [2027, 2030], "float_tensor": 2027, "double_tensor": 2027, "complex_float_tensor": 2027, "complex_double_tensor": 2027, "int_tensor": 2027, "long_tensor": 2027, "uint_tensor": 2027, "bool_tensor": 2027, "long_zerodim": 2027, "int_zerodim": 2027, "cuda1": 2027, "channels_last_3d": 2027, "ndhwc": 2027, "blogpost": 2028, "totensor": 2029, "trainset": 2029, "mnist": 2029, "mnist_train": 2029, "trainload": 2029, "grayscal": 2029, "make_grid": 2029, "add_imag": 2029, "add_graph": 2029, "clutter": 2029, "n_iter": 2029, "purge_step": 2029, "max_queu": 2029, "flush_sec": 2029, "filename_suffix": 2029, "current_datetime_hostnam": 2029, "exp1": 2029, "global_step": 2029, "purg": 2029, "event_file_writ": 2029, "eventfilewrit": 2029, "may04_22": 2029, "54_": 2029, "macbook": 2029, "my_experi": 2029, "lr_0": 2029, "1_batch_16": 2029, "locallr_0": 2029, "scalar_valu": 2029, "walltim": 2029, "new_styl": 2029, "double_precis": 2029, "blobnam": 2029, "simple_valu": 2029, "main_tag": 2029, "tag_scalar_dict": 2029, "run_14h": 2029, "xsinx": 2029, "xcosx": 2029, "tanx": 2029, "add_histogram": 2029, "max_bin": 2029, "fd": 2029, "img_tensor": 2029, "dataformat": 2029, "chw": 2029, "hwc": 2029, "hw": 2029, "wh": 2029, "3xhxw": 2029, "img_hwc": 2029, "my_imag": 2029, "my_image_hwc": 2029, "img_batch": 2029, "my_image_batch": 2029, "add_figur": 2029, "add_video": 2029, "vid_tensor": 2029, "fp": 2029, "moviepi": 2029, "add_audio": 2029, "snd_tensor": 2029, "sample_r": 2029, "44100": 2029, "add_text": 2029, "text_str": 2029, "input_to_model": 2029, "use_strict_trac": 2029, "add_embed": 2029, "label_img": 2029, "metadata_head": 2029, "projector": 2029, "kwlist": 2029, "add_pr_curv": 2029, "num_threshold": 2029, "pr_curv": 2029, "add_custom_scalar": 2029, "chart": 2029, "categorynam": 2029, "chartnam": 2029, "listofproperti": 2029, "multilin": 2029, "taiwan": 2029, "twse": 2029, "0050": 2029, "2330": 2029, "dow": 2029, "aaa": 2029, "bbb": 2029, "ccc": 2029, "nasdaq": 2029, "add_mesh": 2029, "config_dict": 2029, "threej": 2029, "vertex": 2029, "number_of_vertic": 2029, "vertices_tensor": 2029, "colors_tensor": 2029, "faces_tensor": 2029, "my_mesh": 2029, "add_hparam": 2029, "hparam_dict": 2029, "metric_dict": 2029, "hparam_domain_discret": 2029, "run_nam": 2029, "hparam": 2029, "bsize": 2029, "uint16": [2030, 2044], "uint32": [2030, 2044], "uint64": [2030, 2044], "e4m3": 2030, "e5m2": 2030, "asid": 2030, "58734": 2030, "2209": 2030, "05433": 2030, "tini": [2030, 2031, 2048, 2057], "_like": 2030, "allow_subclass": 2031, "check_devic": 2031, "check_layout": 2031, "6e": 2031, "3e": 2031, "assert_equ": 2031, "000000000000001e": 2031, "1e0": 2031, "argh": 2031, "nfooter": 2031, "66": 2031, "footer": 2031, "exclude_zero": 2031, "1205": 2031, "2282": 2031, "6380": 2031, "default_gener": 2032, "click": [2032, 2051, 2052], "is_integ": 2032, "data_dependent_output": 2032, "dynamic_output_shap": 2032, "inplace_view": 2032, "needs_fixed_stride_ord": 2032, "nondeterministic_bitwis": 2032, "nondeterministic_seed": 2032, "pt2_compliant_tag": 2032, "compare_weight": 2033, "float_dict": 2033, "quantized_dict": 2033, "wt_compare_dict": 2033, "qmodel": 2033, "compute_error": 2033, "weight_dict": 2033, "get_logger_dict": 2033, "shadowlogg": 2033, "outputlogg": [2033, 2034], "target_dict": 2033, "q_modul": 2033, "logger_cl": [2033, 2034], "prepare_model_with_stub": 2033, "module_swap_list": 2033, "q_model": 2033, "ob_dict": 2033, "compare_model_stub": 2033, "quantizablebasicblock": 2033, "get_matching_activ": 2033, "act_dict": 2033, "prepare_model_output": 2033, "compare_model_output": 2033, "act_compare_dict": 2033, "weight_comparison": 2034, "extract_weight": 2034, "sqnr": 2034, "extend_logger_results_with_comparison": 2034, "compute_sqnr": 2034, "mp_n": 2034, "mq_n": 2034, "add_logg": 2034, "act_comparison": 2034, "extract_logger_info": 2034, "mp_shadows_mq": 2034, "add_shadow_logg": 2034, "shadow_act_comparison": 2034, "extract_shadow_logger_info": 2034, "ref_node_nam": 2034, "prev_node_nam": 2034, "model_nam": 2034, "ref_nam": 2034, "prev_node_target_typ": 2034, "ref_node_target_typ": 2034, "results_typ": 2034, "index_within_arg": 2034, "index_of_arg": 2034, "qconfig_str": 2034, "outputcomparisonlogg": 2034, "x_ref": 2034, "nstracer": 2034, "skipped_module_nam": 2034, "skipped_module_class": 2034, "model_name_a": 2034, "model_a": 2034, "model_name_b": 2034, "model_b": 2034, "base_name_to_sets_of_related_op": 2034, "unmatchable_types_map": 2034, "op_to_type_to_weight_extraction_fn": 2034, "nsresultstyp": 2034, "name_a": 2034, "name_b": 2034, "should_log_input": 2034, "model_a_with_logg": 2034, "model_b_with_logg": 2034, "model_name_to_use_for_layer_nam": 2034, "node_type_to_io_type_map": 2034, "model_a_shadows_b": 2034, "model_name_1": 2034, "model_name_2": 2034, "comparison_fn": 2034, "comparison_nam": 2034, "prepare_n_shadows_model": 2034, "qconfig_multi_map": 2034, "custom_prepare_fn": 2034, "custom_prepare_kwarg": 2034, "custom_trac": 2034, "args_kwargs_m": 2034, "op_m": 2034, "output_m": 2034, "op_m_n": 2034, "log_m_n": 2034, "log_m_0": 2034, "qconfig_n": 2034, "args_m": 2034, "op_m_prepared_with_qconfig_n": 2034, "out_m_n": 2034, "kwargs_m": 2034, "docblock": 2034, "loggers_set_en": 2034, "loggers_set_save_activ": 2034, "save_activ": 2034, "convert_n_shadows_model": 2034, "custom_convert_fn": 2034, "custom_convert_kwarg": 2034, "extract_results_n_shadows_model": 2034, "print_comparisons_n_shadows_model": 2034, "compute_normalized_l2_error": 2034, "compute_cosine_similar": 2034, "surfac": 2035, "openai": 2035, "ipex": 2035, "torch_tensorrt": 2035, "tvm": 2035, "apach": 2035, "openvino": 2035, "aotinductor": 2035, "dashboard": [2035, 2041, 2048], "nnmodul": 2035, "craft": 2036, "aot_compil": 2036, "batch_dim": 2036, "so_path": 2036, "aot_inductor": 2036, "output_path": 2036, "getcwd": 2036, "temporai": 2036, "model_container_runner_cuda": 2036, "model_container_runner_cpu": 2036, "aotimodelcontainerrunnercuda": 2036, "aotimodelcontainerrunnercpu": 2036, "kcuda": 2036, "kcpu": 2036, "aoti_runn": 2036, "runner": 2036, "cmakelist": 2036, "aoti_exampl": 2036, "cmake_minimum_requir": 2036, "fatal_error": 2036, "find_packag": 2036, "add_execut": 2036, "add_custom_command": 2036, "cmake_current_source_dir": 2036, "target_link_librari": 2036, "torch_librari": 2036, "set_properti": 2036, "cxx_standard": 2036, "cmake_prefix_path": 2036, "mkdir": 2036, "5184": 2036, "4462": 2036, "4611": 2036, "4744": 2036, "4811": 2036, "4938": 2036, "4193": 2036, "cudafloattyp": 2036, "4883": 2036, "4703": 2036, "simd": 2038, "isa": 2038, "amx": 2038, "collect_env": 2038, "avx512f": 2038, "avx512bw": 2038, "avx512_vnni": 2038, "amx_til": 2038, "amx_bf16": 2038, "amx_int8": 2038, "debut": 2039, "cachingalloc": 2039, "cudagraph_tre": 2039, "unintend": 2039, "prematur": 2039, "mark_step_begin": 2039, "footgun": [2039, 2043], "my_custom_backend": 2040, "f_opt": 2040, "my_compil": [2040, 2041, 2047], "torch_dynamo_backend": 2040, "your_modul": 2040, "minifi": [2040, 2044], "aot_autograd": 2040, "fw_compil": 2040, "bw_compil": 2040, "make_boxed_func": 2040, "model_opt": 2040, "0x7f1a894649a8": 2040, "mockmodul": 2040, "optimized_mod": 2040, "toy_exampl": [2040, 2041, 2044, 2047, 2054], "abs_1": [2040, 2041], "0x7f8d259298a0": 2040, "superior": 2040, "optimize_for_inference_compil": 2040, "code_to_acceler": 2040, "lookup_backend": 2040, "trt_compil": 2040, "inductor_compil": 2040, "523": 2041, "watch": 2041, "kaichao": 2041, "_dynamo_dynamic_indic": 2041, "utils_devic": 2041, "___skip_backend_check": 2041, "___current_backend": 2041, "___lookup_backend": 2041, "140355900538256": 2041, "check_tensor": 2041, "dispatchkeyset": 2041, "backendselect": 2041, "adinplaceorview": 2041, "autogradcpu": 2041, "recaptur": 2041, "decompil": 2041, "depyf": 2041, "__compiled_fn_0": 2041, "eval_with_kei": 2041, "0x7f9ca082f8a0": 2041, "load_fast": [2041, 2047], "load_glob": 2041, "load_method": 2041, "load_const": [2041, 2047], "binary_add": 2041, "binary_true_divid": 2041, "store_fast": 2041, "compare_op": 2041, "pop_jump_if_fals": 2041, "binary_multipli": [2041, 2047], "unpack_sequ": 2041, "__resume_at_30_1": 2041, "__resume_at_38_2": 2041, "__temp_1": 2041, "youkaichao": 2041, "__resume_at_": 2041, "jump_absolut": 2041, "resume_at": 2041, "eval_fram": 2041, "_debug_get_cache_entry_list": 2041, "__code__": 2041, "codetyp": 2041, "innermost_fn": 2041, "cache_entri": 2041, "check_fn": [2041, 2047], "code_part": 2041, "___guarded_cod": [2041, 2047], "___check_global_st": 2041, "140215810860528": 2041, "___check_tensor": [2041, 2047], "tensor_check_nam": 2041, "co_freevar": 2041, "__closure__": 2041, "___is_grad_en": 2041, "___are_deterministic_algorithms_en": 2041, "___is_torch_function_en": 2041, "value_a": 2041, "value_b": 2041, "__self__": 2041, "l_a_": 2041, "l_b_": 2041, "compiled_exampl": 2041, "get_cache_entri": 2041, "recompile_and_add_another_cache_entri": 2041, "recognit": 2042, "induct": 2042, "mark_dynam": 2042, "shapeenv": [2042, 2043], "reusabl": 2042, "plumb": 2042, "symnodeimpl": 2042, "python_symnod": 2042, "_meta_registr": 2042, "decomp": [2042, 2043], "primtorch": [2042, 2043], "apparatu": 2042, "precomput": 2042, "constrain_rang": 2042, "wherebi": 2042, "trash": 2043, "subclass_zoo": 2043, "bunch": 2043, "from_real_tensor": 2043, "fakeifi": 2043, "dispatch_devic": 2043, "ly": 2043, "derefer": 2043, "backtrac": 2043, "in_kernel_invocation_manag": 2043, "unwrap": 2043, "test_fake_tensor": 2043, "fake_mod": 2043, "fake_x": 2043, "fake_i": 2043, "fake_z": 2043, "_guard": 2043, "detect_fake_mod": 2043, "fake_arg": 2043, "maybe_disable_fake_tensor_mod": 2043, "nich": 2043, "faketensorprop": 2043, "fake_tensor_prop": 2043, "propagate_dont_convert_input": 2043, "fake_input": 2043, "real_tensor": 2043, "annoi": 2043, "somehow": 2043, "fakecopymod": 2043, "gave": 2043, "fakeif": 2043, "tension": 2043, "analys": 2043, "hardcod": 2043, "metaconvert": 2043, "die": 2043, "saroufim": 2044, "evalfram": 2044, "usercod": 2044, "rob": 2044, "diminish": 2044, "vast": 2044, "nopython": [2044, 2047, 2054], "250k": 2044, "aitempl": 2044, "aot_eag": [2044, 2054], "compile_tim": [2044, 2052, 2054], "torch_compile_debug": [2044, 2046], "troubl": [2044, 2045, 2054], "compileprofil": [2044, 2054], "profiler_model": [2044, 2054], "traffic": 2044, "frozen_toy_exampl": 2044, "multiprocessor": 2044, "some_fun": [2044, 2054], "insurmount": [2044, 2054], "woo": [2044, 2054], "out_guard": [2044, 2054], "ops_per_graph": [2044, 2054], "builtinvari": [2044, 2054], "constantvari": [2044, 2047, 2054], "generic_jump": [2044, 2054], "torchdynamo_dynamic_shap": 2044, "cv": 2044, "app": 2044, "unnecessarili": 2044, "cold": [2044, 2051], "visibli": 2044, "torchdynamo_repro_level": [2044, 2054], "bisect": [2044, 2054], "torchdynamo_repro_aft": [2044, 2054], "dramat": [2044, 2054], "capture_func_transform": 2044, "wrapper_fn": 2044, "my_fn": 2044, "some_list": 2044, "bad_fn": 2044, "pitfal": 2044, "_indices_from": 2044, "recarrai": 2044, "float128": 2044, "complex256": 2044, "esoter": 2044, "ufunc": 2044, "poly1d": 2044, "__array_wrap__": 2044, "ctype": 2044, "numpy_fn": 2044, "tweak": 2044, "wrap_numpi": 2044, "charg": 2044, "oop": 2044, "costli": 2044, "daunt": 2044, "diagnos": 2044, "tackl": 2044, "pinpoint": 2044, "discern": 2044, "trace_numpi": 2044, "_numpi": 2044, "uncommon": 2044, "finer": 2044, "a_fn": [2044, 2045], "aa_fn": [2044, 2045], "ab_fn": [2044, 2045], "handel": 2045, "unblock": 2045, "nnthi": 2045, "black": 2045, "nnnote": 2045, "screen": [2045, 2052], "b_fn": 2045, "white": 2045, "new_fn": 2046, "famou": 2046, "crunch": 2046, "torchinductor_": 2046, "your_usernam": 2046, "triton_meta": 2046, "i32": 2046, "mutated_arg_nam": 2046, "instance_descriptor": 2046, "divisible_by_16": 2046, "equal_to_1": 2046, "triton_": 2046, "in_ptr0": 2046, "out_ptr0": 2046, "xnumel": 2046, "xblock": 2046, "tl": 2046, "constexpr": 2046, "xoffset": 2046, "program_id": 2046, "xindex": 2046, "xmask": 2046, "tmp0": 2046, "tmp1": 2046, "tmp2": 2046, "v0": 2046, "opt_model": 2046, "timm": [2046, 2051], "huggingfac": [2046, 2051], "berttoken": 2046, "bertmodel": 2046, "uncas": 2046, "me": 2046, "encoded_input": 2046, "return_tensor": 2046, "trigonometri": 2046, "skim": 2046, "create_model": 2046, "resnext101_32x8d": 2046, "fn_foo": 2047, "grab": 2047, "dig": 2047, "hole": 2047, "neutral": 2047, "_pyinterpreterstate_setevalframefunc": 2047, "convert_fram": [2047, 2054], "convert_frame_assert": 2047, "gloss": 2047, "compiler_fn": 2047, "one_graph": 2047, "_convert_frame_assert": 2047, "frametyp": 2047, "f_code": 2047, "needless": 2047, "evict": 2047, "transform_code_object": 2047, "output_instruct": 2047, "guardedcod": 2047, "symbolic_loc": 2047, "f_local": 2047, "variablebuild": 2047, "_wrap": 2047, "variabletrack": 2047, "make_guard": 2047, "pump": 2047, "cool": 2047, "get_instruct": 2047, "124": 2047, "opnam": 2047, "argval": 2047, "starts_lin": 2047, "is_jump_target": 2047, "inst": 2047, "unimpl": 2047, "dozen": 2047, "symbolic_convert": [2047, 2054], "spoken": 2047, "quiet": 2047, "replace_guard": 2047, "add_guard": 2047, "behalf": 2047, "python_typ": 2047, "as_proxi": 2047, "as_python_proxi": 2047, "bookkeep": 2047, "flesh": 2047, "relianc": 2047, "build_tupl": 2047, "popn": 2047, "tuplevari": 2047, "pydoc": 2047, "tensorvari": 2047, "instructiontranslatorbas": 2047, "ctor": 2047, "guardsourc": 2047, "create_fn": 2047, "guard_sourc": 2047, "istyp": 2047, "guardbuild": 2047, "equals_match": 2047, "rangevari": 2047, "appar": 2047, "checkfunctionmanag": 2047, "compile_check_fn": 2047, "cacheentri": 2047, "create_cache_entri": 2047, "pyobject": 2047, "guarded_cod": 2047, "debug_null_check": 2047, "pyobject_getattrstr": 2047, "null_check": 2047, "pycodeobject": 2047, "sort_kei": 2047, "guard_nn_modul": 2047, "is_nn_modul": 2047, "local_build": 2047, "global_build": 2047, "___check_type_id": 2047, "94367738391392": 2047, "_eval_fram": 2047, "anew": 2047, "weak": 2047, "moduleinvalid": 2047, "torchinductor_unique_kernel_nam": 2048, "triton_poi_fused_cat_155": 2048, "poi": 2048, "torchinductor_benchmark_kernel": 2048, "har": 2048, "torchinductor_max_autotun": 2048, "mixnet_l": 2048, "timm_model": 2048, "torchinductor_shunt": 2048, "qz": 2048, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 2048, "shunting314": 2048, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 2048, "48efc83b12ec3ead950052e4a0220b10": 2048, "compiled_module_profil": 2048, "browser": [2048, 2052], "zoom": [2048, 2052, 2056], "distort": [2048, 2052], "densenet121": 2048, "69": 2048, "cutlass": 2048, "57": 2048, "ff": 2048, "justifi": 2048, "triton_red_fus": 2048, "__native_batch_norm_legit_functional_16": 2048, "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 2048, "_adaptive_avg_pool2d_backward": 2049, "half_to_float": 2049, "no_stat": 2049, "start_step": 2049, "avg_pool2d_backward": 2049, "convolution_backward": 2049, "bias_siz": 2049, "output_mask": 2049, "scalar_mod": 2049, "tensor_mod": 2049, "embedding_dense_backward": 2049, "num_weight": 2049, "max_pool2d_with_indices_backward": 2049, "native_group_norm_backward": 2049, "rstd": 2049, "native_layer_norm_backward": 2049, "tensor_scalar": 2049, "tensor_tensor": 2049, "dim_int": 2049, "dim_intlist": 2049, "broadcast_dimens": 2049, "start_indic": 2049, "limit_indic": 2049, "start_index": 2049, "limit_index": 2049, "outer_length": 2049, "constabl": 2050, "_forward_pre_hook": 2050, "_backward_pre_hook": 2050, "_backward_hook": 2050, "_state_dict_hook": 2050, "load_": 2050, "avoiabl": 2050, "skip_nnmodule_hook_guard": 2050, "pre_backward": 2050, "warn_onc": 2050, "hui": 2051, "nightli": 2051, "night": 2051, "40gb": [2051, 2054], "2ghz": 2051, "torchbench": 2051, "trend": 2051, "droplist": 2051, "with_cudagraph": 2051, "toosl": 2052, "ncu": 2052, "model_c": 2052, "fwd_bwd": 2052, "scroll": 2052, "shortcut": 2052, "compiledfunct": 2052, "compiledfunctionbackward": 2052, "ac2g": 2052, "dropdown": 2052, "525": 2052, "_init_for_cuda_graph": 2052, "warmup_compil": 2052, "fn_c": 2052, "trace_compil": 2052, "synthet": 2052, "modelwithbreak": 2052, "create_sequenti": 2052, "mod1": 2052, "mod2": 2052, "mod3": 2052, "mod4": 2052, "trace_break": 2052, "sit": 2053, "replace_add_with_mul": 2053, "insert_relu_after_add": 2053, "new_relu_nod": 2053, "replaceaddwithmul": 2053, "transformed_graph_modul": 2053, "replaceaddwithmulsub": 2053, "mul_r": 2053, "removedetachpass": 2053, "args_map": 2053, "_schema": 2053, "kwarg_onli": 2053, "scalartotensorpass": 2053, "try_coerc": 2053, "replace_pattern": 2053, "replaced_pattern": 2053, "replace_pattern_with_filt": 2053, "replacedpattern": 2053, "passmanag": 2053, "pass_manag": 2053, "pm": 2053, "replace_add_with_div": 2053, "replace_div_with_mul": 2053, "run_checks_after_each_pass": 2053, "suppress_check_failur": 2053, "graph_module_out": 2053, "set_check": 2053, "check_div_target": 2053, "add_check": 2053, "subgraphmatch": 2053, "matcher_util": 2053, "match_output": 2053, "match_placehold": 2053, "remove_overlapping_match": 2053, "ignore_liter": 2053, "largemodel": 2053, "_bia": 2053, "large_model_graph": 2053, "patternmodel": 2053, "_weight_1": 2053, "_bias_1": 2053, "pattern_graph": 2053, "subgraph_match": 2053, "match_result": 2053, "internalmatch": 2053, "placeholder_nod": 2053, "returning_nod": 2053, "capabilitybasedpartition": 2053, "l34": 2053, "operator_support": 2053, "operatorsupportbas": 2053, "allows_single_node_partit": 2053, "non_compute_op": 2053, "_oper": 2053, "allowed_single_node_partition_op": 2053, "ll28c1": 2053, "l28c1": 2053, "is_node_support": 2053, "l150": 2053, "any_chain": 2053, "l164": 2053, "addmuloperatorsupport": 2053, "capability_partition": 2053, "op_support": 2053, "partition_list": 2053, "propose_partit": 2053, "fused_graph_modul": 2053, "fuse_partit": 2053, "lazo": 2054, "torchdynamo_verbos": 2054, "replay_record_en": 2054, "torchdynamo_debug_funct": 2054, "test_assertion_error": 2054, "compiled_test_assertion_error": 2054, "mlazo": 2054, "837": 2054, "build_map": 2054, "log_level": 2054, "thousand": 2054, "test_backend_error": 2054, "compiled_test_backend_error": 2054, "decomp_fn": 2054, "810": 2054, "repro_aft": 2054, "minifier_launch": 2054, "base_dir": 2054, "rand_strid": 2054, "0a0": 2054, "gitfddfc44": 2054, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 2054, "2022": 2054, "thu_feb_10_18": 2054, "41_pst_2022": 2054, "v11": 2054, "cuda_11": 2054, "r11": 2054, "30978841_0": 2054, "sxm4": 2054, "compile_fx": 2054, "compile_fx_inn": 2054, "toy_compil": 2054, "debug_util": 2054, "run_fwd_maybe_bwd": 2054, "opt_mod": 2054, "rg": 2054, "test_model": 2054, "debug_dir_root": 2054, "torch_compile_debug_dir": 2054, "run_2023_03_01_08_20_52_143510": 2054, "pid_180167": 2054, "model__0_forward_1": 2054, "aot_model___0_debug": 2054, "fx_graph_read": 2054, "fx_graph_runn": 2054, "fx_graph_transform": 2054, "ir_post_fus": 2054, "ir_pre_fus": 2054, "fx_graph": 2054, "buf1": 2054, "schedulernod": 2054, "computedbuff": 2054, "memorydep": 2054, "unmet_depend": 2054, "buf0": 2054, "met_depend": 2054, "primals_2": 2054, "buf1_loop_bodi": 2054, "var_rang": 2054, "z0": 2054, "index0": 2054, "index1": 2054, "get_index": 2054, "get_index_1": 2054, "load_1": 2054, "get_index_2": 2054, "compiled_fun": 2054, "hinder": 2054, "break_reason": 2054, "explanation_verbos": 2054, "compiled_toi": 2054, "as_subclass": 2055, "handle_torch_funct": 2055, "public_api": 2055, "relevant_arg": 2055, "has_torch_function_unari": 2055, "is_tensor_lik": 2055, "notatensor": 2055, "tensorlik": 2055, "is_tensor_method_or_properti": 2055, "__get__": 2055, "__module__": 2055, "wrap_torch_funct": 2055, "drag": 2056, "interactiv": 2056, "memory_viz": 2056, "run_your_cod": 2056, "my_snapshot": 2056, "javascript": 2056, "upload": 2056, "pan": 2056, "mous": 2056, "slider": 2056, "b7f064c000000_0": 2056, "7f064c000000": 2056, "max_entri": 2056, "_memory_viz": 2056, "2u": 2056, "50n": 2056, "currenli": 2056, "typeddict": 2056, "device_trac": 2056, "traceentri": 2056, "total_s": 2056, "segment_typ": 2056, "allocated_s": 2056, "active_s": 2056, "active_awaiting_fre": 2056, "requested_s": 2056, "active_alloc": 2056, "took": 2056, "free_request": 2056, "free_complet": 2056, "segment_alloc": 2056, "segment_fre": 2056, "coorel": 2056, "device_fre": 2056, "dump_snapshot": 2056, "smallest_norm": 2057, "subnorm": 2057, "denormal_numb": 2057, "tailor": 2059}, "objects": {"": [[2032, 0, 0, "-", "torch"], [1961, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[2026, 1, 1, "", "BFloat16Storage"], [2026, 1, 1, "", "BoolStorage"], [2026, 1, 1, "", "ByteStorage"], [2026, 1, 1, "", "CharStorage"], [2026, 1, 1, "", "ComplexDoubleStorage"], [2026, 1, 1, "", "ComplexFloatStorage"], [2026, 1, 1, "", "DoubleStorage"], [2026, 1, 1, "", "FloatStorage"], [84, 1, 1, "", "Generator"], [2026, 1, 1, "", "HalfStorage"], [2026, 1, 1, "", "IntStorage"], [2026, 1, 1, "", "LongStorage"], [2026, 1, 1, "", "QInt32Storage"], [2026, 1, 1, "", "QInt8Storage"], [2026, 1, 1, "", "QUInt2x4Storage"], [2026, 1, 1, "", "QUInt4x2Storage"], [2026, 1, 1, "", "QUInt8Storage"], [2026, 1, 1, "", "ShortStorage"], [2032, 1, 1, "", "SymBool"], [2032, 1, 1, "", "SymFloat"], [2032, 1, 1, "", "SymInt"], [2032, 1, 1, "", "Tag"], [2030, 1, 1, "", "Tensor"], [2026, 1, 1, "", "TypedStorage"], [2026, 1, 1, "", "UntypedStorage"], [13, 0, 0, "-", "__config__"], [56, 0, 0, "-", "__future__"], [620, 5, 1, "", "_assert"], [621, 5, 1, "", "_foreach_abs"], [622, 5, 1, "", "_foreach_abs_"], [623, 5, 1, "", "_foreach_acos"], [624, 5, 1, "", "_foreach_acos_"], [625, 5, 1, "", "_foreach_asin"], [626, 5, 1, "", "_foreach_asin_"], [627, 5, 1, "", "_foreach_atan"], [628, 5, 1, "", "_foreach_atan_"], [629, 5, 1, "", "_foreach_ceil"], [630, 5, 1, "", "_foreach_ceil_"], [631, 5, 1, "", "_foreach_cos"], [632, 5, 1, "", "_foreach_cos_"], [633, 5, 1, "", "_foreach_cosh"], [634, 5, 1, "", "_foreach_cosh_"], [635, 5, 1, "", "_foreach_erf"], [636, 5, 1, "", "_foreach_erf_"], [637, 5, 1, "", "_foreach_erfc"], [638, 5, 1, "", "_foreach_erfc_"], [639, 5, 1, "", "_foreach_exp"], [640, 5, 1, "", "_foreach_exp_"], [641, 5, 1, "", "_foreach_expm1"], [642, 5, 1, "", "_foreach_expm1_"], [643, 5, 1, "", "_foreach_floor"], [644, 5, 1, "", "_foreach_floor_"], [645, 5, 1, "", "_foreach_frac"], [646, 5, 1, "", "_foreach_frac_"], [647, 5, 1, "", "_foreach_lgamma"], [648, 5, 1, "", "_foreach_lgamma_"], [649, 5, 1, "", "_foreach_log"], [650, 5, 1, "", "_foreach_log10"], [651, 5, 1, "", "_foreach_log10_"], [652, 5, 1, "", "_foreach_log1p"], [653, 5, 1, "", "_foreach_log1p_"], [654, 5, 1, "", "_foreach_log2"], [655, 5, 1, "", "_foreach_log2_"], [656, 5, 1, "", "_foreach_log_"], [657, 5, 1, "", "_foreach_neg"], [658, 5, 1, "", "_foreach_neg_"], [659, 5, 1, "", "_foreach_reciprocal"], [660, 5, 1, "", "_foreach_reciprocal_"], [661, 5, 1, "", "_foreach_round"], [662, 5, 1, "", "_foreach_round_"], [663, 5, 1, "", "_foreach_sigmoid"], [664, 5, 1, "", "_foreach_sigmoid_"], [665, 5, 1, "", "_foreach_sin"], [666, 5, 1, "", "_foreach_sin_"], [667, 5, 1, "", "_foreach_sinh"], [668, 5, 1, "", "_foreach_sinh_"], [669, 5, 1, "", "_foreach_sqrt"], [670, 5, 1, "", "_foreach_sqrt_"], [671, 5, 1, "", "_foreach_tan"], [672, 5, 1, "", "_foreach_tan_"], [673, 5, 1, "", "_foreach_trunc"], [674, 5, 1, "", "_foreach_trunc_"], [675, 5, 1, "", "_foreach_zero_"], [1970, 0, 0, "-", "_logging"], [677, 5, 1, "", "abs"], [678, 5, 1, "", "absolute"], [679, 5, 1, "", "acos"], [680, 5, 1, "", "acosh"], [681, 5, 1, "", "add"], [682, 5, 1, "", "addbmm"], [683, 5, 1, "", "addcdiv"], [684, 5, 1, "", "addcmul"], [685, 5, 1, "", "addmm"], [686, 5, 1, "", "addmv"], [687, 5, 1, "", "addr"], [688, 5, 1, "", "adjoint"], [689, 5, 1, "", "all"], [690, 5, 1, "", "allclose"], [691, 5, 1, "", "amax"], [692, 5, 1, "", "amin"], [693, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [694, 5, 1, "", "angle"], [695, 5, 1, "", "any"], [2015, 0, 0, "-", "ao"], [861, 5, 1, "", "arange"], [862, 5, 1, "", "arccos"], [863, 5, 1, "", "arccosh"], [864, 5, 1, "", "arcsin"], [865, 5, 1, "", "arcsinh"], [866, 5, 1, "", "arctan"], [867, 5, 1, "", "arctan2"], [868, 5, 1, "", "arctanh"], [869, 5, 1, "", "are_deterministic_algorithms_enabled"], [870, 5, 1, "", "argmax"], [871, 5, 1, "", "argmin"], [872, 5, 1, "", "argsort"], [873, 5, 1, "", "argwhere"], [874, 5, 1, "", "as_strided"], [875, 5, 1, "", "as_tensor"], [876, 5, 1, "", "asarray"], [877, 5, 1, "", "asin"], [878, 5, 1, "", "asinh"], [879, 5, 1, "", "atan"], [880, 5, 1, "", "atan2"], [881, 5, 1, "", "atanh"], [882, 5, 1, "", "atleast_1d"], [883, 5, 1, "", "atleast_2d"], [884, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [936, 5, 1, "", "baddbmm"], [937, 5, 1, "", "bartlett_window"], [938, 5, 1, "", "bernoulli"], [939, 5, 1, "", "bincount"], [940, 5, 1, "", "bitwise_and"], [941, 5, 1, "", "bitwise_left_shift"], [942, 5, 1, "", "bitwise_not"], [943, 5, 1, "", "bitwise_or"], [944, 5, 1, "", "bitwise_right_shift"], [945, 5, 1, "", "bitwise_xor"], [946, 5, 1, "", "blackman_window"], [947, 5, 1, "", "block_diag"], [948, 5, 1, "", "bmm"], [949, 5, 1, "", "broadcast_shapes"], [950, 5, 1, "", "broadcast_tensors"], [951, 5, 1, "", "broadcast_to"], [952, 5, 1, "", "bucketize"], [953, 5, 1, "", "can_cast"], [954, 5, 1, "", "cartesian_prod"], [955, 5, 1, "", "cat"], [956, 5, 1, "", "cdist"], [957, 5, 1, "", "ceil"], [958, 5, 1, "", "chain_matmul"], [959, 5, 1, "", "cholesky"], [960, 5, 1, "", "cholesky_inverse"], [961, 5, 1, "", "cholesky_solve"], [962, 5, 1, "", "chunk"], [963, 5, 1, "", "clamp"], [964, 5, 1, "", "clip"], [965, 5, 1, "", "clone"], [966, 5, 1, "", "column_stack"], [967, 5, 1, "", "combinations"], [968, 5, 1, "", "compile"], [969, 5, 1, "", "compiled_with_cxx11_abi"], [2037, 0, 0, "-", "compiler"], [977, 5, 1, "", "complex"], [978, 5, 1, "", "concat"], [979, 5, 1, "", "concatenate"], [980, 5, 1, "", "cond"], [981, 5, 1, "", "conj"], [982, 5, 1, "", "conj_physical"], [2032, 0, 0, "-", "contrib"], [983, 5, 1, "", "copysign"], [984, 5, 1, "", "corrcoef"], [985, 5, 1, "", "cos"], [986, 5, 1, "", "cosh"], [987, 5, 1, "", "count_nonzero"], [988, 5, 1, "", "cov"], [16, 0, 0, "-", "cpu"], [998, 5, 1, "", "cross"], [17, 0, 0, "-", "cuda"], [1077, 5, 1, "", "cummax"], [1078, 5, 1, "", "cummin"], [1079, 5, 1, "", "cumprod"], [1080, 5, 1, "", "cumsum"], [1081, 5, 1, "", "cumulative_trapezoid"], [1082, 5, 1, "", "deg2rad"], [1083, 5, 1, "", "dequantize"], [1084, 5, 1, "", "det"], [2027, 1, 1, "", "device"], [1085, 5, 1, "", "diag"], [1086, 5, 1, "", "diag_embed"], [1087, 5, 1, "", "diagflat"], [1088, 5, 1, "", "diagonal"], [1089, 5, 1, "", "diagonal_scatter"], [1090, 5, 1, "", "diff"], [1091, 5, 1, "", "digamma"], [1092, 5, 1, "", "dist"], [25, 0, 0, "-", "distributed"], [31, 0, 0, "-", "distributions"], [1093, 5, 1, "", "div"], [1094, 5, 1, "", "divide"], [1095, 5, 1, "", "dot"], [1096, 5, 1, "", "dsplit"], [1097, 5, 1, "", "dstack"], [2027, 1, 1, "", "dtype"], [1098, 5, 1, "", "einsum"], [1099, 5, 1, "", "empty"], [1100, 5, 1, "", "empty_like"], [1101, 5, 1, "", "empty_strided"], [1102, 1, 1, "", "enable_grad"], [1103, 5, 1, "", "eq"], [1104, 5, 1, "", "equal"], [1105, 5, 1, "", "erf"], [1106, 5, 1, "", "erfc"], [1107, 5, 1, "", "erfinv"], [1108, 5, 1, "", "exp"], [1109, 5, 1, "", "exp2"], [1110, 5, 1, "", "expm1"], [46, 0, 0, "-", "export"], [1111, 5, 1, "", "eye"], [1112, 5, 1, "", "fake_quantize_per_channel_affine"], [1113, 5, 1, "", "fake_quantize_per_tensor_affine"], [48, 0, 0, "-", "fft"], [1136, 5, 1, "", "fix"], [1137, 5, 1, "", "flatten"], [1138, 5, 1, "", "flip"], [1139, 5, 1, "", "fliplr"], [1140, 5, 1, "", "flipud"], [1141, 5, 1, "", "float_power"], [1142, 5, 1, "", "floor"], [1143, 5, 1, "", "floor_divide"], [1144, 5, 1, "", "fmax"], [1145, 5, 1, "", "fmin"], [1146, 5, 1, "", "fmod"], [1147, 5, 1, "", "frac"], [1148, 5, 1, "", "frexp"], [1149, 5, 1, "", "from_dlpack"], [1150, 5, 1, "", "from_file"], [1151, 5, 1, "", "from_numpy"], [1152, 5, 1, "", "frombuffer"], [1153, 5, 1, "", "full"], [1154, 5, 1, "", "full_like"], [51, 0, 0, "-", "func"], [2032, 0, 0, "-", "functional"], [57, 0, 0, "-", "futures"], [58, 0, 0, "-", "fx"], [1192, 5, 1, "", "gather"], [1193, 5, 1, "", "gcd"], [1194, 5, 1, "", "ge"], [1195, 5, 1, "", "geqrf"], [1196, 5, 1, "", "ger"], [1197, 5, 1, "", "get_default_device"], [1198, 5, 1, "", "get_default_dtype"], [1199, 5, 1, "", "get_deterministic_debug_mode"], [1200, 5, 1, "", "get_float32_matmul_precision"], [1201, 5, 1, "", "get_num_interop_threads"], [1202, 5, 1, "", "get_num_threads"], [1203, 5, 1, "", "get_rng_state"], [1204, 5, 1, "", "gradient"], [1205, 5, 1, "", "greater"], [1206, 5, 1, "", "greater_equal"], [1207, 5, 1, "", "gt"], [1208, 5, 1, "", "hamming_window"], [1209, 5, 1, "", "hann_window"], [1210, 5, 1, "", "heaviside"], [1211, 5, 1, "", "histc"], [1212, 5, 1, "", "histogram"], [1213, 5, 1, "", "histogramdd"], [1214, 5, 1, "", "hsplit"], [1215, 5, 1, "", "hspmm"], [1216, 5, 1, "", "hstack"], [1959, 0, 0, "-", "hub"], [1217, 5, 1, "", "hypot"], [1218, 5, 1, "", "i0"], [1219, 5, 1, "", "igamma"], [1220, 5, 1, "", "igammac"], [1221, 5, 1, "", "imag"], [1222, 5, 1, "", "index_add"], [1223, 5, 1, "", "index_copy"], [1224, 5, 1, "", "index_reduce"], [1225, 5, 1, "", "index_select"], [1226, 5, 1, "", "initial_seed"], [1227, 5, 1, "", "inner"], [1228, 5, 1, "", "inverse"], [1229, 5, 1, "", "is_complex"], [1230, 5, 1, "", "is_conj"], [1231, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1232, 5, 1, "", "is_floating_point"], [1233, 5, 1, "", "is_grad_enabled"], [1234, 5, 1, "", "is_inference_mode_enabled"], [1235, 5, 1, "", "is_nonzero"], [1236, 5, 1, "", "is_storage"], [1237, 5, 1, "", "is_tensor"], [1238, 5, 1, "", "is_warn_always_enabled"], [1239, 5, 1, "", "isclose"], [1240, 5, 1, "", "isfinite"], [1241, 5, 1, "", "isin"], [1242, 5, 1, "", "isinf"], [1243, 5, 1, "", "isnan"], [1244, 5, 1, "", "isneginf"], [1245, 5, 1, "", "isposinf"], [1246, 5, 1, "", "isreal"], [1247, 5, 1, "", "istft"], [1961, 0, 0, "-", "jit"], [1270, 5, 1, "", "kaiser_window"], [1271, 5, 1, "", "kron"], [1272, 5, 1, "", "kthvalue"], [2027, 1, 1, "", "layout"], [1273, 5, 1, "", "lcm"], [1274, 5, 1, "", "ldexp"], [1275, 5, 1, "", "le"], [1276, 5, 1, "", "lerp"], [1277, 5, 1, "", "less"], [1278, 5, 1, "", "less_equal"], [1279, 5, 1, "", "lgamma"], [1968, 0, 0, "-", "library"], [1969, 0, 0, "-", "linalg"], [1321, 5, 1, "", "linspace"], [1322, 5, 1, "", "load"], [1323, 5, 1, "", "lobpcg"], [1324, 5, 1, "", "log"], [1325, 5, 1, "", "log10"], [1326, 5, 1, "", "log1p"], [1327, 5, 1, "", "log2"], [1328, 5, 1, "", "logaddexp"], [1329, 5, 1, "", "logaddexp2"], [1330, 5, 1, "", "logcumsumexp"], [1331, 5, 1, "", "logdet"], [1332, 5, 1, "", "logical_and"], [1333, 5, 1, "", "logical_not"], [1334, 5, 1, "", "logical_or"], [1335, 5, 1, "", "logical_xor"], [1336, 5, 1, "", "logit"], [1337, 5, 1, "", "logspace"], [1338, 5, 1, "", "logsumexp"], [1339, 5, 1, "", "lt"], [1340, 5, 1, "", "lu"], [1341, 5, 1, "", "lu_solve"], [1342, 5, 1, "", "lu_unpack"], [1343, 5, 1, "", "manual_seed"], [1971, 0, 0, "-", "masked"], [1344, 5, 1, "", "masked_select"], [1345, 5, 1, "", "matmul"], [1346, 5, 1, "", "matrix_exp"], [1347, 5, 1, "", "matrix_power"], [1348, 5, 1, "", "max"], [1349, 5, 1, "", "maximum"], [1350, 5, 1, "", "mean"], [1351, 5, 1, "", "median"], [2027, 1, 1, "", "memory_format"], [1352, 5, 1, "", "meshgrid"], [1353, 5, 1, "", "min"], [1354, 5, 1, "", "minimum"], [1355, 5, 1, "", "mm"], [1356, 5, 1, "", "mode"], [1975, 0, 0, "-", "monitor"], [1357, 5, 1, "", "moveaxis"], [1358, 5, 1, "", "movedim"], [1976, 0, 0, "-", "mps"], [1372, 5, 1, "", "msort"], [1373, 5, 1, "", "mul"], [1374, 5, 1, "", "multinomial"], [1375, 5, 1, "", "multiply"], [1977, 0, 0, "-", "multiprocessing"], [1376, 5, 1, "", "mv"], [1377, 5, 1, "", "mvlgamma"], [1378, 5, 1, "", "nan_to_num"], [1379, 5, 1, "", "nanmean"], [1380, 5, 1, "", "nanmedian"], [1381, 5, 1, "", "nanquantile"], [1382, 5, 1, "", "nansum"], [1383, 5, 1, "", "narrow"], [1384, 5, 1, "", "narrow_copy"], [1385, 5, 1, "", "ne"], [1386, 5, 1, "", "neg"], [1387, 5, 1, "", "negative"], [1980, 0, 0, "-", "nested"], [1388, 5, 1, "", "nextafter"], [1981, 0, 0, "-", "nn"], [1728, 1, 1, "", "no_grad"], [1729, 5, 1, "", "nonzero"], [1730, 5, 1, "", "norm"], [1731, 5, 1, "", "normal"], [1732, 5, 1, "", "not_equal"], [1733, 5, 1, "", "numel"], [1734, 5, 1, "", "ones"], [1735, 5, 1, "", "ones_like"], [2009, 0, 0, "-", "onnx"], [2011, 0, 0, "-", "optim"], [1772, 5, 1, "", "orgqr"], [1773, 5, 1, "", "ormqr"], [1774, 5, 1, "", "outer"], [2055, 0, 0, "-", "overrides"], [2012, 0, 0, "-", "package"], [1775, 5, 1, "", "pca_lowrank"], [1776, 5, 1, "", "permute"], [1777, 5, 1, "", "pinverse"], [1778, 5, 1, "", "poisson"], [1779, 5, 1, "", "polar"], [1780, 5, 1, "", "polygamma"], [1781, 5, 1, "", "positive"], [1782, 5, 1, "", "pow"], [1783, 5, 1, "", "prod"], [2014, 0, 0, "-", "profiler"], [1784, 5, 1, "", "promote_types"], [1785, 5, 1, "", "qr"], [1786, 5, 1, "", "quantile"], [2018, 0, 0, "-", "quantization"], [1787, 5, 1, "", "quantize_per_channel"], [1788, 5, 1, "", "quantize_per_tensor"], [1789, 5, 1, "", "quantized_batch_norm"], [1790, 5, 1, "", "quantized_max_pool1d"], [1791, 5, 1, "", "quantized_max_pool2d"], [2032, 0, 0, "-", "quasirandom"], [1793, 5, 1, "", "rad2deg"], [1794, 5, 1, "", "rand"], [1795, 5, 1, "", "rand_like"], [1796, 5, 1, "", "randint"], [1797, 5, 1, "", "randint_like"], [1798, 5, 1, "", "randn"], [1799, 5, 1, "", "randn_like"], [2019, 0, 0, "-", "random"], [1800, 5, 1, "", "randperm"], [1801, 5, 1, "", "range"], [1802, 5, 1, "", "ravel"], [1803, 5, 1, "", "real"], [1804, 5, 1, "", "reciprocal"], [1805, 5, 1, "", "remainder"], [1806, 5, 1, "", "renorm"], [1807, 5, 1, "", "repeat_interleave"], [1808, 5, 1, "", "reshape"], [1809, 5, 1, "", "resolve_conj"], [1810, 5, 1, "", "resolve_neg"], [1811, 5, 1, "", "result_type"], [2032, 0, 0, "-", "return_types"], [1812, 5, 1, "", "roll"], [1813, 5, 1, "", "rot90"], [1814, 5, 1, "", "round"], [1815, 5, 1, "", "row_stack"], [1816, 5, 1, "", "rsqrt"], [1817, 5, 1, "", "save"], [1818, 5, 1, "", "scatter"], [1819, 5, 1, "", "scatter_add"], [1820, 5, 1, "", "scatter_reduce"], [1821, 5, 1, "", "searchsorted"], [1822, 5, 1, "", "seed"], [1823, 5, 1, "", "select"], [1824, 5, 1, "", "select_scatter"], [2032, 0, 0, "-", "serialization"], [1825, 5, 1, "", "set_default_device"], [1826, 5, 1, "", "set_default_dtype"], [1827, 5, 1, "", "set_default_tensor_type"], [1828, 5, 1, "", "set_deterministic_debug_mode"], [1829, 5, 1, "", "set_float32_matmul_precision"], [1830, 5, 1, "", "set_flush_denormal"], [1831, 5, 1, "", "set_num_interop_threads"], [1832, 5, 1, "", "set_num_threads"], [1833, 5, 1, "", "set_printoptions"], [1834, 5, 1, "", "set_rng_state"], [1835, 5, 1, "", "set_warn_always"], [1836, 5, 1, "", "sgn"], [1837, 5, 1, "", "sigmoid"], [1838, 5, 1, "", "sign"], [2023, 0, 0, "-", "signal"], [1850, 5, 1, "", "signbit"], [1851, 5, 1, "", "sin"], [1852, 5, 1, "", "sinc"], [1853, 5, 1, "", "sinh"], [1854, 5, 1, "", "slice_scatter"], [1855, 5, 1, "", "slogdet"], [1856, 5, 1, "", "smm"], [1857, 5, 1, "", "softmax"], [1858, 5, 1, "", "sort"], [2024, 0, 0, "-", "sparse"], [1868, 5, 1, "", "sparse_bsc_tensor"], [1869, 5, 1, "", "sparse_bsr_tensor"], [1870, 5, 1, "", "sparse_compressed_tensor"], [1871, 5, 1, "", "sparse_coo_tensor"], [1872, 5, 1, "", "sparse_csc_tensor"], [1873, 5, 1, "", "sparse_csr_tensor"], [2025, 0, 0, "-", "special"], [1874, 5, 1, "", "split"], [1875, 5, 1, "", "sqrt"], [1876, 5, 1, "", "square"], [1877, 5, 1, "", "squeeze"], [1878, 5, 1, "", "sspaddmm"], [1879, 5, 1, "", "stack"], [1880, 5, 1, "", "std"], [1881, 5, 1, "", "std_mean"], [1882, 5, 1, "", "stft"], [2032, 0, 0, "-", "storage"], [1883, 5, 1, "", "sub"], [1884, 5, 1, "", "subtract"], [1885, 5, 1, "", "sum"], [1886, 5, 1, "", "svd"], [1887, 5, 1, "", "svd_lowrank"], [1888, 5, 1, "", "swapaxes"], [1889, 5, 1, "", "swapdims"], [1890, 5, 1, "", "sym_float"], [1891, 5, 1, "", "sym_int"], [1892, 5, 1, "", "sym_ite"], [1893, 5, 1, "", "sym_max"], [1894, 5, 1, "", "sym_min"], [1895, 5, 1, "", "sym_not"], [1896, 5, 1, "", "t"], [1897, 5, 1, "", "take"], [1898, 5, 1, "", "take_along_dim"], [1899, 5, 1, "", "tan"], [1900, 5, 1, "", "tanh"], [1901, 5, 1, "", "tensor"], [1902, 5, 1, "", "tensor_split"], [1903, 5, 1, "", "tensordot"], [2031, 0, 0, "-", "testing"], [1904, 5, 1, "", "tile"], [1905, 5, 1, "", "topk"], [2032, 0, 0, "-", "torch_version"], [1906, 5, 1, "", "trace"], [1907, 5, 1, "", "transpose"], [1908, 5, 1, "", "trapezoid"], [1909, 5, 1, "", "trapz"], [1910, 5, 1, "", "triangular_solve"], [1911, 5, 1, "", "tril"], [1912, 5, 1, "", "tril_indices"], [1913, 5, 1, "", "triu"], [1914, 5, 1, "", "triu_indices"], [1915, 5, 1, "", "true_divide"], [1916, 5, 1, "", "trunc"], [2032, 0, 0, "-", "types"], [1917, 5, 1, "", "unbind"], [1918, 5, 1, "", "unflatten"], [1919, 5, 1, "", "unique"], [1920, 5, 1, "", "unique_consecutive"], [1921, 5, 1, "", "unravel_index"], [1922, 5, 1, "", "unsqueeze"], [1923, 5, 1, "", "use_deterministic_algorithms"], [2058, 0, 0, "-", "utils"], [1929, 5, 1, "", "vander"], [1930, 5, 1, "", "var"], [1931, 5, 1, "", "var_mean"], [1932, 5, 1, "", "vdot"], [2032, 0, 0, "-", "version"], [1933, 5, 1, "", "view_as_complex"], [1934, 5, 1, "", "view_as_real"], [1935, 5, 1, "", "vmap"], [1936, 5, 1, "", "vsplit"], [1937, 5, 1, "", "vstack"], [1938, 5, 1, "", "where"], [1939, 5, 1, "", "xlogy"], [2059, 0, 0, "-", "xpu"], [1957, 5, 1, "", "zeros"], [1958, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[2026, 2, 1, "", "dtype"]], "torch.BoolStorage": [[2026, 2, 1, "", "dtype"]], "torch.ByteStorage": [[2026, 2, 1, "", "dtype"]], "torch.CharStorage": [[2026, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[2026, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[2026, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[2026, 2, 1, "", "dtype"]], "torch.FloatStorage": [[2026, 2, 1, "", "dtype"]], "torch.Generator": [[84, 2, 1, "", "device"], [84, 3, 1, "", "get_state"], [84, 3, 1, "", "initial_seed"], [84, 3, 1, "", "manual_seed"], [84, 3, 1, "", "seed"], [84, 3, 1, "", "set_state"]], "torch.HalfStorage": [[2026, 2, 1, "", "dtype"]], "torch.IntStorage": [[2026, 2, 1, "", "dtype"]], "torch.LongStorage": [[2026, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[2026, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[2026, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[2026, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[2026, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[2026, 2, 1, "", "dtype"]], "torch.ShortStorage": [[2026, 2, 1, "", "dtype"]], "torch.SymFloat": [[2032, 3, 1, "", "is_integer"]], "torch.Tag": [[2032, 4, 1, "", "name"]], "torch.Tensor": [[2030, 2, 1, "", "H"], [2030, 2, 1, "", "T"], [85, 3, 1, "", "abs"], [86, 3, 1, "", "abs_"], [87, 3, 1, "", "absolute"], [88, 3, 1, "", "absolute_"], [89, 3, 1, "", "acos"], [90, 3, 1, "", "acos_"], [91, 3, 1, "", "acosh"], [92, 3, 1, "", "acosh_"], [93, 3, 1, "", "add"], [94, 3, 1, "", "add_"], [95, 3, 1, "", "addbmm"], [96, 3, 1, "", "addbmm_"], [97, 3, 1, "", "addcdiv"], [98, 3, 1, "", "addcdiv_"], [99, 3, 1, "", "addcmul"], [100, 3, 1, "", "addcmul_"], [101, 3, 1, "", "addmm"], [102, 3, 1, "", "addmm_"], [103, 3, 1, "", "addmv"], [104, 3, 1, "", "addmv_"], [105, 3, 1, "", "addr"], [106, 3, 1, "", "addr_"], [107, 3, 1, "", "adjoint"], [1979, 3, 1, "", "align_as"], [1979, 3, 1, "", "align_to"], [108, 3, 1, "", "all"], [109, 3, 1, "", "allclose"], [110, 3, 1, "", "amax"], [111, 3, 1, "", "amin"], [112, 3, 1, "", "aminmax"], [113, 3, 1, "", "angle"], [114, 3, 1, "", "any"], [115, 3, 1, "", "apply_"], [116, 3, 1, "", "arccos"], [117, 3, 1, "", "arccos_"], [118, 3, 1, "", "arccosh"], [119, 3, 1, "", "arccosh_"], [120, 3, 1, "", "arcsin"], [121, 3, 1, "", "arcsin_"], [122, 3, 1, "", "arcsinh"], [123, 3, 1, "", "arcsinh_"], [124, 3, 1, "", "arctan"], [125, 3, 1, "", "arctan2"], [126, 3, 1, "", "arctan2_"], [127, 3, 1, "", "arctan_"], [128, 3, 1, "", "arctanh"], [129, 3, 1, "", "arctanh_"], [130, 3, 1, "", "argmax"], [131, 3, 1, "", "argmin"], [132, 3, 1, "", "argsort"], [133, 3, 1, "", "argwhere"], [134, 3, 1, "", "as_strided"], [135, 3, 1, "", "as_subclass"], [136, 3, 1, "", "asin"], [137, 3, 1, "", "asin_"], [138, 3, 1, "", "asinh"], [139, 3, 1, "", "asinh_"], [140, 3, 1, "", "atan"], [141, 3, 1, "", "atan2"], [142, 3, 1, "", "atan2_"], [143, 3, 1, "", "atan_"], [144, 3, 1, "", "atanh"], [145, 3, 1, "", "atanh_"], [146, 3, 1, "", "backward"], [147, 3, 1, "", "baddbmm"], [148, 3, 1, "", "baddbmm_"], [149, 3, 1, "", "bernoulli"], [150, 3, 1, "", "bernoulli_"], [151, 3, 1, "", "bfloat16"], [152, 3, 1, "", "bincount"], [153, 3, 1, "", "bitwise_and"], [154, 3, 1, "", "bitwise_and_"], [155, 3, 1, "", "bitwise_left_shift"], [156, 3, 1, "", "bitwise_left_shift_"], [157, 3, 1, "", "bitwise_not"], [158, 3, 1, "", "bitwise_not_"], [159, 3, 1, "", "bitwise_or"], [160, 3, 1, "", "bitwise_or_"], [161, 3, 1, "", "bitwise_right_shift"], [162, 3, 1, "", "bitwise_right_shift_"], [163, 3, 1, "", "bitwise_xor"], [164, 3, 1, "", "bitwise_xor_"], [165, 3, 1, "", "bmm"], [166, 3, 1, "", "bool"], [167, 3, 1, "", "broadcast_to"], [168, 3, 1, "", "byte"], [169, 3, 1, "", "cauchy_"], [170, 3, 1, "", "ccol_indices"], [171, 3, 1, "", "cdouble"], [172, 3, 1, "", "ceil"], [173, 3, 1, "", "ceil_"], [174, 3, 1, "", "cfloat"], [175, 3, 1, "", "chalf"], [176, 3, 1, "", "char"], [177, 3, 1, "", "cholesky"], [178, 3, 1, "", "cholesky_inverse"], [179, 3, 1, "", "cholesky_solve"], [180, 3, 1, "", "chunk"], [181, 3, 1, "", "clamp"], [182, 3, 1, "", "clamp_"], [183, 3, 1, "", "clip"], [184, 3, 1, "", "clip_"], [185, 3, 1, "", "clone"], [186, 3, 1, "", "coalesce"], [187, 3, 1, "", "col_indices"], [188, 3, 1, "", "conj"], [189, 3, 1, "", "conj_physical"], [190, 3, 1, "", "conj_physical_"], [191, 3, 1, "", "contiguous"], [192, 3, 1, "", "copy_"], [193, 3, 1, "", "copysign"], [194, 3, 1, "", "copysign_"], [195, 3, 1, "", "corrcoef"], [196, 3, 1, "", "cos"], [197, 3, 1, "", "cos_"], [198, 3, 1, "", "cosh"], [199, 3, 1, "", "cosh_"], [200, 3, 1, "", "count_nonzero"], [201, 3, 1, "", "cov"], [202, 3, 1, "", "cpu"], [203, 3, 1, "", "cross"], [204, 3, 1, "", "crow_indices"], [205, 3, 1, "", "cuda"], [206, 3, 1, "", "cummax"], [207, 3, 1, "", "cummin"], [208, 3, 1, "", "cumprod"], [209, 3, 1, "", "cumprod_"], [210, 3, 1, "", "cumsum"], [211, 3, 1, "", "cumsum_"], [212, 3, 1, "", "data_ptr"], [213, 3, 1, "", "deg2rad"], [214, 3, 1, "", "dense_dim"], [215, 3, 1, "", "dequantize"], [216, 3, 1, "", "det"], [217, 3, 1, "", "detach"], [218, 3, 1, "", "detach_"], [219, 2, 1, "", "device"], [220, 3, 1, "", "diag"], [221, 3, 1, "", "diag_embed"], [222, 3, 1, "", "diagflat"], [223, 3, 1, "", "diagonal"], [224, 3, 1, "", "diagonal_scatter"], [225, 3, 1, "", "diff"], [226, 3, 1, "", "digamma"], [227, 3, 1, "", "digamma_"], [228, 3, 1, "", "dim"], [229, 3, 1, "", "dim_order"], [230, 3, 1, "", "dist"], [231, 3, 1, "", "div"], [232, 3, 1, "", "div_"], [233, 3, 1, "", "divide"], [234, 3, 1, "", "divide_"], [235, 3, 1, "", "dot"], [236, 3, 1, "", "double"], [237, 3, 1, "", "dsplit"], [238, 3, 1, "", "element_size"], [239, 3, 1, "", "eq"], [240, 3, 1, "", "eq_"], [241, 3, 1, "", "equal"], [242, 3, 1, "", "erf"], [243, 3, 1, "", "erf_"], [244, 3, 1, "", "erfc"], [245, 3, 1, "", "erfc_"], [246, 3, 1, "", "erfinv"], [247, 3, 1, "", "erfinv_"], [248, 3, 1, "", "exp"], [249, 3, 1, "", "exp_"], [250, 3, 1, "", "expand"], [251, 3, 1, "", "expand_as"], [252, 3, 1, "", "expm1"], [253, 3, 1, "", "expm1_"], [254, 3, 1, "", "exponential_"], [255, 3, 1, "", "fill_"], [256, 3, 1, "", "fill_diagonal_"], [257, 3, 1, "", "fix"], [258, 3, 1, "", "fix_"], [259, 3, 1, "", "flatten"], [260, 3, 1, "", "flip"], [261, 3, 1, "", "fliplr"], [262, 3, 1, "", "flipud"], [263, 3, 1, "", "float"], [264, 3, 1, "", "float_power"], [265, 3, 1, "", "float_power_"], [266, 3, 1, "", "floor"], [267, 3, 1, "", "floor_"], [268, 3, 1, "", "floor_divide"], [269, 3, 1, "", "floor_divide_"], [270, 3, 1, "", "fmax"], [271, 3, 1, "", "fmin"], [272, 3, 1, "", "fmod"], [273, 3, 1, "", "fmod_"], [274, 3, 1, "", "frac"], [275, 3, 1, "", "frac_"], [276, 3, 1, "", "frexp"], [277, 3, 1, "", "gather"], [278, 3, 1, "", "gcd"], [279, 3, 1, "", "gcd_"], [280, 3, 1, "", "ge"], [281, 3, 1, "", "ge_"], [282, 3, 1, "", "geometric_"], [283, 3, 1, "", "geqrf"], [284, 3, 1, "", "ger"], [285, 3, 1, "", "get_device"], [286, 2, 1, "", "grad"], [287, 3, 1, "", "greater"], [288, 3, 1, "", "greater_"], [289, 3, 1, "", "greater_equal"], [290, 3, 1, "", "greater_equal_"], [291, 3, 1, "", "gt"], [292, 3, 1, "", "gt_"], [293, 3, 1, "", "half"], [294, 3, 1, "", "hardshrink"], [295, 3, 1, "", "heaviside"], [296, 3, 1, "", "histc"], [297, 3, 1, "", "histogram"], [298, 3, 1, "", "hsplit"], [299, 3, 1, "", "hypot"], [300, 3, 1, "", "hypot_"], [301, 3, 1, "", "i0"], [302, 3, 1, "", "i0_"], [303, 3, 1, "", "igamma"], [304, 3, 1, "", "igamma_"], [305, 3, 1, "", "igammac"], [306, 3, 1, "", "igammac_"], [307, 2, 1, "", "imag"], [308, 3, 1, "", "index_add"], [309, 3, 1, "", "index_add_"], [310, 3, 1, "", "index_copy"], [311, 3, 1, "", "index_copy_"], [312, 3, 1, "", "index_fill"], [313, 3, 1, "", "index_fill_"], [314, 3, 1, "", "index_put"], [315, 3, 1, "", "index_put_"], [316, 3, 1, "", "index_reduce"], [317, 3, 1, "", "index_reduce_"], [318, 3, 1, "", "index_select"], [319, 3, 1, "", "indices"], [320, 3, 1, "", "inner"], [321, 3, 1, "", "int"], [322, 3, 1, "", "int_repr"], [323, 3, 1, "", "inverse"], [324, 3, 1, "", "is_coalesced"], [325, 3, 1, "", "is_complex"], [326, 3, 1, "", "is_conj"], [327, 3, 1, "", "is_contiguous"], [328, 2, 1, "", "is_cuda"], [329, 3, 1, "", "is_floating_point"], [330, 3, 1, "", "is_inference"], [331, 2, 1, "", "is_leaf"], [332, 2, 1, "", "is_meta"], [333, 3, 1, "", "is_pinned"], [334, 2, 1, "", "is_quantized"], [335, 3, 1, "", "is_set_to"], [336, 3, 1, "", "is_shared"], [337, 3, 1, "", "is_signed"], [338, 2, 1, "", "is_sparse"], [339, 2, 1, "", "is_sparse_csr"], [340, 3, 1, "", "isclose"], [341, 3, 1, "", "isfinite"], [342, 3, 1, "", "isinf"], [343, 3, 1, "", "isnan"], [344, 3, 1, "", "isneginf"], [345, 3, 1, "", "isposinf"], [346, 3, 1, "", "isreal"], [347, 3, 1, "", "istft"], [348, 3, 1, "", "item"], [349, 2, 1, "", "itemsize"], [350, 3, 1, "", "kthvalue"], [351, 3, 1, "", "lcm"], [352, 3, 1, "", "lcm_"], [353, 3, 1, "", "ldexp"], [354, 3, 1, "", "ldexp_"], [355, 3, 1, "", "le"], [356, 3, 1, "", "le_"], [357, 3, 1, "", "lerp"], [358, 3, 1, "", "lerp_"], [359, 3, 1, "", "less"], [360, 3, 1, "", "less_"], [361, 3, 1, "", "less_equal"], [362, 3, 1, "", "less_equal_"], [363, 3, 1, "", "lgamma"], [364, 3, 1, "", "lgamma_"], [365, 3, 1, "", "log"], [366, 3, 1, "", "log10"], [367, 3, 1, "", "log10_"], [368, 3, 1, "", "log1p"], [369, 3, 1, "", "log1p_"], [370, 3, 1, "", "log2"], [371, 3, 1, "", "log2_"], [372, 3, 1, "", "log_"], [373, 3, 1, "", "log_normal_"], [374, 3, 1, "", "logaddexp"], [375, 3, 1, "", "logaddexp2"], [376, 3, 1, "", "logcumsumexp"], [377, 3, 1, "", "logdet"], [378, 3, 1, "", "logical_and"], [379, 3, 1, "", "logical_and_"], [380, 3, 1, "", "logical_not"], [381, 3, 1, "", "logical_not_"], [382, 3, 1, "", "logical_or"], [383, 3, 1, "", "logical_or_"], [384, 3, 1, "", "logical_xor"], [385, 3, 1, "", "logical_xor_"], [386, 3, 1, "", "logit"], [387, 3, 1, "", "logit_"], [388, 3, 1, "", "logsumexp"], [389, 3, 1, "", "long"], [390, 3, 1, "", "lt"], [391, 3, 1, "", "lt_"], [392, 3, 1, "", "lu"], [393, 3, 1, "", "lu_solve"], [2030, 2, 1, "", "mH"], [2030, 2, 1, "", "mT"], [394, 3, 1, "", "map_"], [395, 3, 1, "", "masked_fill"], [396, 3, 1, "", "masked_fill_"], [397, 3, 1, "", "masked_scatter"], [398, 3, 1, "", "masked_scatter_"], [399, 3, 1, "", "masked_select"], [400, 3, 1, "", "matmul"], [401, 3, 1, "", "matrix_exp"], [402, 3, 1, "", "matrix_power"], [403, 3, 1, "", "max"], [404, 3, 1, "", "maximum"], [405, 3, 1, "", "mean"], [406, 3, 1, "", "median"], [407, 3, 1, "", "min"], [408, 3, 1, "", "minimum"], [409, 3, 1, "", "mm"], [410, 3, 1, "", "mode"], [411, 3, 1, "", "module_load"], [412, 3, 1, "", "moveaxis"], [413, 3, 1, "", "movedim"], [414, 3, 1, "", "msort"], [415, 3, 1, "", "mul"], [416, 3, 1, "", "mul_"], [417, 3, 1, "", "multinomial"], [418, 3, 1, "", "multiply"], [419, 3, 1, "", "multiply_"], [420, 3, 1, "", "mv"], [421, 3, 1, "", "mvlgamma"], [422, 3, 1, "", "mvlgamma_"], [1979, 2, 1, "", "names"], [423, 3, 1, "", "nan_to_num"], [424, 3, 1, "", "nan_to_num_"], [425, 3, 1, "", "nanmean"], [426, 3, 1, "", "nanmedian"], [427, 3, 1, "", "nanquantile"], [428, 3, 1, "", "nansum"], [429, 3, 1, "", "narrow"], [430, 3, 1, "", "narrow_copy"], [431, 2, 1, "", "nbytes"], [432, 2, 1, "", "ndim"], [433, 3, 1, "", "ndimension"], [434, 3, 1, "", "ne"], [435, 3, 1, "", "ne_"], [436, 3, 1, "", "neg"], [437, 3, 1, "", "neg_"], [438, 3, 1, "", "negative"], [439, 3, 1, "", "negative_"], [440, 3, 1, "", "nelement"], [441, 3, 1, "", "new_empty"], [442, 3, 1, "", "new_full"], [443, 3, 1, "", "new_ones"], [444, 3, 1, "", "new_tensor"], [445, 3, 1, "", "new_zeros"], [446, 3, 1, "", "nextafter"], [447, 3, 1, "", "nextafter_"], [448, 3, 1, "", "nonzero"], [449, 3, 1, "", "norm"], [450, 3, 1, "", "normal_"], [451, 3, 1, "", "not_equal"], [452, 3, 1, "", "not_equal_"], [453, 3, 1, "", "numel"], [454, 3, 1, "", "numpy"], [455, 3, 1, "", "orgqr"], [456, 3, 1, "", "ormqr"], [457, 3, 1, "", "outer"], [458, 3, 1, "", "permute"], [459, 3, 1, "", "pin_memory"], [460, 3, 1, "", "pinverse"], [461, 3, 1, "", "polygamma"], [462, 3, 1, "", "polygamma_"], [463, 3, 1, "", "positive"], [464, 3, 1, "", "pow"], [465, 3, 1, "", "pow_"], [466, 3, 1, "", "prod"], [467, 3, 1, "", "put_"], [468, 3, 1, "", "q_per_channel_axis"], [469, 3, 1, "", "q_per_channel_scales"], [470, 3, 1, "", "q_per_channel_zero_points"], [471, 3, 1, "", "q_scale"], [472, 3, 1, "", "q_zero_point"], [473, 3, 1, "", "qr"], [474, 3, 1, "", "qscheme"], [475, 3, 1, "", "quantile"], [476, 3, 1, "", "rad2deg"], [477, 3, 1, "", "random_"], [478, 3, 1, "", "ravel"], [479, 2, 1, "", "real"], [480, 3, 1, "", "reciprocal"], [481, 3, 1, "", "reciprocal_"], [482, 3, 1, "", "record_stream"], [1979, 3, 1, "", "refine_names"], [483, 3, 1, "", "register_hook"], [484, 3, 1, "", "register_post_accumulate_grad_hook"], [485, 3, 1, "", "remainder"], [486, 3, 1, "", "remainder_"], [1979, 3, 1, "", "rename"], [1979, 3, 1, "", "rename_"], [487, 3, 1, "", "renorm"], [488, 3, 1, "", "renorm_"], [489, 3, 1, "", "repeat"], [490, 3, 1, "", "repeat_interleave"], [491, 2, 1, "", "requires_grad"], [492, 3, 1, "", "requires_grad_"], [493, 3, 1, "", "reshape"], [494, 3, 1, "", "reshape_as"], [495, 3, 1, "", "resize_"], [496, 3, 1, "", "resize_as_"], [497, 3, 1, "", "resolve_conj"], [498, 3, 1, "", "resolve_neg"], [499, 3, 1, "", "retain_grad"], [500, 2, 1, "", "retains_grad"], [501, 3, 1, "", "roll"], [502, 3, 1, "", "rot90"], [503, 3, 1, "", "round"], [504, 3, 1, "", "round_"], [505, 3, 1, "", "row_indices"], [506, 3, 1, "", "rsqrt"], [507, 3, 1, "", "rsqrt_"], [508, 3, 1, "", "scatter"], [509, 3, 1, "", "scatter_"], [510, 3, 1, "", "scatter_add"], [511, 3, 1, "", "scatter_add_"], [512, 3, 1, "", "scatter_reduce"], [513, 3, 1, "", "scatter_reduce_"], [514, 3, 1, "", "select"], [515, 3, 1, "", "select_scatter"], [516, 3, 1, "", "set_"], [517, 3, 1, "", "sgn"], [518, 3, 1, "", "sgn_"], [519, 2, 1, "", "shape"], [520, 3, 1, "", "share_memory_"], [521, 3, 1, "", "short"], [522, 3, 1, "", "sigmoid"], [523, 3, 1, "", "sigmoid_"], [524, 3, 1, "", "sign"], [525, 3, 1, "", "sign_"], [526, 3, 1, "", "signbit"], [527, 3, 1, "", "sin"], [528, 3, 1, "", "sin_"], [529, 3, 1, "", "sinc"], [530, 3, 1, "", "sinc_"], [531, 3, 1, "", "sinh"], [532, 3, 1, "", "sinh_"], [533, 3, 1, "", "size"], [534, 3, 1, "", "slice_scatter"], [535, 3, 1, "", "slogdet"], [536, 3, 1, "", "smm"], [537, 3, 1, "", "softmax"], [538, 3, 1, "", "sort"], [539, 3, 1, "", "sparse_dim"], [540, 3, 1, "", "sparse_mask"], [541, 3, 1, "", "sparse_resize_"], [542, 3, 1, "", "sparse_resize_and_clear_"], [543, 3, 1, "", "split"], [544, 3, 1, "", "sqrt"], [545, 3, 1, "", "sqrt_"], [546, 3, 1, "", "square"], [547, 3, 1, "", "square_"], [548, 3, 1, "", "squeeze"], [549, 3, 1, "", "squeeze_"], [550, 3, 1, "", "sspaddmm"], [551, 3, 1, "", "std"], [552, 3, 1, "", "stft"], [553, 3, 1, "", "storage"], [554, 3, 1, "", "storage_offset"], [555, 3, 1, "", "storage_type"], [556, 3, 1, "", "stride"], [557, 3, 1, "", "sub"], [558, 3, 1, "", "sub_"], [559, 3, 1, "", "subtract"], [560, 3, 1, "", "subtract_"], [561, 3, 1, "", "sum"], [562, 3, 1, "", "sum_to_size"], [563, 3, 1, "", "svd"], [564, 3, 1, "", "swapaxes"], [565, 3, 1, "", "swapdims"], [566, 3, 1, "", "t"], [567, 3, 1, "", "t_"], [568, 3, 1, "", "take"], [569, 3, 1, "", "take_along_dim"], [570, 3, 1, "", "tan"], [571, 3, 1, "", "tan_"], [572, 3, 1, "", "tanh"], [573, 3, 1, "", "tanh_"], [574, 3, 1, "", "tensor_split"], [575, 3, 1, "", "tile"], [576, 3, 1, "", "to"], [577, 3, 1, "", "to_dense"], [578, 3, 1, "", "to_mkldnn"], [579, 3, 1, "", "to_sparse"], [580, 3, 1, "", "to_sparse_bsc"], [581, 3, 1, "", "to_sparse_bsr"], [582, 3, 1, "", "to_sparse_coo"], [583, 3, 1, "", "to_sparse_csc"], [584, 3, 1, "", "to_sparse_csr"], [585, 3, 1, "", "tolist"], [586, 3, 1, "", "topk"], [587, 3, 1, "", "trace"], [588, 3, 1, "", "transpose"], [589, 3, 1, "", "transpose_"], [590, 3, 1, "", "triangular_solve"], [591, 3, 1, "", "tril"], [592, 3, 1, "", "tril_"], [593, 3, 1, "", "triu"], [594, 3, 1, "", "triu_"], [595, 3, 1, "", "true_divide"], [596, 3, 1, "", "true_divide_"], [597, 3, 1, "", "trunc"], [598, 3, 1, "", "trunc_"], [599, 3, 1, "", "type"], [600, 3, 1, "", "type_as"], [601, 3, 1, "", "unbind"], [602, 3, 1, "", "unflatten"], [603, 3, 1, "", "unfold"], [604, 3, 1, "", "uniform_"], [605, 3, 1, "", "unique"], [606, 3, 1, "", "unique_consecutive"], [607, 3, 1, "", "unsqueeze"], [608, 3, 1, "", "unsqueeze_"], [609, 3, 1, "", "untyped_storage"], [610, 3, 1, "", "values"], [611, 3, 1, "", "var"], [612, 3, 1, "", "vdot"], [613, 3, 1, "", "view"], [614, 3, 1, "", "view_as"], [615, 3, 1, "", "vsplit"], [616, 3, 1, "", "where"], [617, 3, 1, "", "xlogy"], [618, 3, 1, "", "xlogy_"], [619, 3, 1, "", "zero_"]], "torch.TypedStorage": [[2026, 3, 1, "", "bfloat16"], [2026, 3, 1, "", "bool"], [2026, 3, 1, "", "byte"], [2026, 3, 1, "", "char"], [2026, 3, 1, "", "clone"], [2026, 3, 1, "", "complex_double"], [2026, 3, 1, "", "complex_float"], [2026, 3, 1, "", "copy_"], [2026, 3, 1, "", "cpu"], [2026, 3, 1, "", "cuda"], [2026, 3, 1, "", "data_ptr"], [2026, 4, 1, "", "device"], [2026, 3, 1, "", "double"], [2026, 2, 1, "", "dtype"], [2026, 3, 1, "", "element_size"], [2026, 4, 1, "", "filename"], [2026, 3, 1, "", "fill_"], [2026, 3, 1, "", "float"], [2026, 3, 1, "", "float8_e4m3fn"], [2026, 3, 1, "", "float8_e4m3fnuz"], [2026, 3, 1, "", "float8_e5m2"], [2026, 3, 1, "", "float8_e5m2fnuz"], [2026, 3, 1, "", "from_buffer"], [2026, 3, 1, "", "from_file"], [2026, 3, 1, "", "get_device"], [2026, 3, 1, "", "half"], [2026, 3, 1, "", "hpu"], [2026, 3, 1, "", "int"], [2026, 4, 1, "", "is_cuda"], [2026, 4, 1, "", "is_hpu"], [2026, 3, 1, "", "is_pinned"], [2026, 3, 1, "", "is_shared"], [2026, 2, 1, "", "is_sparse"], [2026, 3, 1, "", "long"], [2026, 3, 1, "", "nbytes"], [2026, 3, 1, "", "pickle_storage_type"], [2026, 3, 1, "", "pin_memory"], [2026, 3, 1, "", "resizable"], [2026, 3, 1, "", "resize_"], [2026, 3, 1, "", "share_memory_"], [2026, 3, 1, "", "short"], [2026, 3, 1, "", "size"], [2026, 3, 1, "", "tolist"], [2026, 3, 1, "", "type"], [2026, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[2026, 3, 1, "", "bfloat16"], [2026, 3, 1, "", "bool"], [2026, 3, 1, "", "byte"], [2026, 3, 1, "", "byteswap"], [2026, 3, 1, "", "char"], [2026, 3, 1, "", "clone"], [2026, 3, 1, "", "complex_double"], [2026, 3, 1, "", "complex_float"], [2026, 3, 1, "", "copy_"], [2026, 3, 1, "", "cpu"], [2026, 3, 1, "", "cuda"], [2026, 3, 1, "", "data_ptr"], [2026, 2, 1, "", "device"], [2026, 3, 1, "", "double"], [2026, 3, 1, "", "element_size"], [2026, 4, 1, "", "filename"], [2026, 3, 1, "", "fill_"], [2026, 3, 1, "", "float"], [2026, 3, 1, "", "float8_e4m3fn"], [2026, 3, 1, "", "float8_e4m3fnuz"], [2026, 3, 1, "", "float8_e5m2"], [2026, 3, 1, "", "float8_e5m2fnuz"], [2026, 3, 1, "", "from_buffer"], [2026, 3, 1, "", "from_file"], [2026, 3, 1, "", "get_device"], [2026, 3, 1, "", "half"], [2026, 3, 1, "", "hpu"], [2026, 3, 1, "", "int"], [2026, 4, 1, "", "is_cuda"], [2026, 4, 1, "", "is_hpu"], [2026, 3, 1, "", "is_pinned"], [2026, 3, 1, "", "is_shared"], [2026, 2, 1, "", "is_sparse"], [2026, 2, 1, "", "is_sparse_csr"], [2026, 3, 1, "", "long"], [2026, 3, 1, "", "mps"], [2026, 3, 1, "", "nbytes"], [2026, 3, 1, "", "new"], [2026, 3, 1, "", "pin_memory"], [2026, 3, 1, "", "resizable"], [2026, 3, 1, "", "resize_"], [2026, 3, 1, "", "share_memory_"], [2026, 3, 1, "", "short"], [2026, 3, 1, "", "size"], [2026, 3, 1, "", "tolist"], [2026, 3, 1, "", "type"], [2026, 3, 1, "", "untyped"]], "torch.__config__": [[13, 5, 1, "", "parallel_info"], [13, 5, 1, "", "show"]], "torch.__future__": [[56, 5, 1, "", "get_overwrite_module_params_on_conversion"], [56, 5, 1, "", "get_swap_module_params_on_conversion"], [56, 5, 1, "", "set_overwrite_module_params_on_conversion"], [56, 5, 1, "", "set_swap_module_params_on_conversion"]], "torch._higher_order_ops.cond": [[12, 5, 1, "", "cond"]], "torch._logging": [[676, 5, 1, "", "set_logs"]], "torch.amp": [[0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "grad_scaler"]], "torch.ao": [[2015, 0, 0, "-", "nn"], [2015, 0, 0, "-", "ns"], [2015, 0, 0, "-", "pruning"], [2015, 0, 0, "-", "quantization"]], "torch.ao.nn": [[2018, 0, 0, "-", "intrinsic"], [2018, 0, 0, "-", "qat"], [2015, 0, 0, "-", "quantizable"], [2015, 0, 0, "-", "quantized"], [2015, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[696, 1, 1, "", "BNReLU2d"], [697, 1, 1, "", "BNReLU3d"], [698, 1, 1, "", "ConvBn1d"], [699, 1, 1, "", "ConvBn2d"], [700, 1, 1, "", "ConvBn3d"], [701, 1, 1, "", "ConvBnReLU1d"], [702, 1, 1, "", "ConvBnReLU2d"], [703, 1, 1, "", "ConvBnReLU3d"], [704, 1, 1, "", "ConvReLU1d"], [705, 1, 1, "", "ConvReLU2d"], [706, 1, 1, "", "ConvReLU3d"], [707, 1, 1, "", "LinearReLU"], [2018, 0, 0, "-", "modules"], [2018, 0, 0, "-", "qat"], [2018, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.modules": [[2015, 0, 0, "-", "fused"]], "torch.ao.nn.intrinsic.qat": [[708, 1, 1, "", "ConvBn1d"], [709, 1, 1, "", "ConvBn2d"], [710, 1, 1, "", "ConvBn3d"], [711, 1, 1, "", "ConvBnReLU1d"], [712, 1, 1, "", "ConvBnReLU2d"], [713, 1, 1, "", "ConvBnReLU3d"], [714, 1, 1, "", "ConvReLU2d"], [715, 1, 1, "", "ConvReLU3d"], [716, 1, 1, "", "LinearReLU"], [717, 1, 1, "", "freeze_bn_stats"], [2018, 0, 0, "-", "modules"], [718, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.qat.modules": [[2015, 0, 0, "-", "conv_fused"], [2015, 0, 0, "-", "linear_fused"], [2015, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized": [[719, 1, 1, "", "BNReLU2d"], [720, 1, 1, "", "BNReLU3d"], [721, 1, 1, "", "ConvReLU1d"], [722, 1, 1, "", "ConvReLU2d"], [723, 1, 1, "", "ConvReLU3d"], [724, 1, 1, "", "LinearReLU"], [2018, 0, 0, "-", "dynamic"], [2018, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[725, 1, 1, "", "LinearReLU"], [2018, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[2015, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules": [[2015, 0, 0, "-", "bn_relu"], [2015, 0, 0, "-", "conv_add"], [2015, 0, 0, "-", "conv_relu"], [2015, 0, 0, "-", "linear_relu"]], "torch.ao.nn.qat": [[726, 1, 1, "", "Conv2d"], [727, 1, 1, "", "Conv3d"], [728, 1, 1, "", "Linear"], [2018, 0, 0, "-", "dynamic"], [2018, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[728, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[729, 1, 1, "", "Linear"], [2018, 0, 0, "-", "modules"]], "torch.ao.nn.qat.dynamic.modules": [[2015, 0, 0, "-", "linear"]], "torch.ao.nn.qat.modules": [[2015, 0, 0, "-", "conv"], [2015, 0, 0, "-", "embedding_ops"], [2015, 0, 0, "-", "linear"]], "torch.ao.nn.quantizable": [[730, 1, 1, "", "LSTM"], [731, 1, 1, "", "MultiheadAttention"], [2015, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[731, 3, 1, "", "dequantize"], [731, 3, 1, "", "forward"]], "torch.ao.nn.quantizable.modules": [[2015, 0, 0, "-", "activation"], [2015, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized": [[732, 1, 1, "", "BatchNorm2d"], [733, 1, 1, "", "BatchNorm3d"], [734, 1, 1, "", "Conv1d"], [735, 1, 1, "", "Conv2d"], [736, 1, 1, "", "Conv3d"], [737, 1, 1, "", "ConvTranspose1d"], [738, 1, 1, "", "ConvTranspose2d"], [739, 1, 1, "", "ConvTranspose3d"], [740, 1, 1, "", "ELU"], [741, 1, 1, "", "Embedding"], [742, 1, 1, "", "EmbeddingBag"], [743, 1, 1, "", "FXFloatFunctional"], [744, 1, 1, "", "FloatFunctional"], [745, 1, 1, "", "GroupNorm"], [746, 1, 1, "", "Hardswish"], [747, 1, 1, "", "InstanceNorm1d"], [748, 1, 1, "", "InstanceNorm2d"], [749, 1, 1, "", "InstanceNorm3d"], [750, 1, 1, "", "LayerNorm"], [751, 1, 1, "", "LeakyReLU"], [752, 1, 1, "", "Linear"], [753, 1, 1, "", "QFunctional"], [754, 1, 1, "", "ReLU6"], [755, 1, 1, "", "Sigmoid"], [2018, 0, 0, "-", "dynamic"], [2018, 0, 0, "-", "functional"], [2018, 0, 0, "-", "modules"], [2015, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[734, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[735, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[736, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[741, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[742, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[752, 3, 1, "", "from_float"], [752, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[756, 1, 1, "", "GRU"], [757, 1, 1, "", "GRUCell"], [758, 1, 1, "", "LSTM"], [759, 1, 1, "", "LSTMCell"], [760, 1, 1, "", "Linear"], [761, 1, 1, "", "RNNCell"], [2018, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[760, 3, 1, "", "from_float"], [760, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic.modules": [[2015, 0, 0, "-", "conv"], [2015, 0, 0, "-", "linear"], [2015, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized.functional": [[762, 1, 1, "", "adaptive_avg_pool2d"], [763, 1, 1, "", "adaptive_avg_pool3d"], [764, 1, 1, "", "avg_pool2d"], [765, 1, 1, "", "avg_pool3d"], [766, 1, 1, "", "celu"], [767, 1, 1, "", "clamp"], [768, 1, 1, "", "conv1d"], [769, 1, 1, "", "conv2d"], [770, 1, 1, "", "conv3d"], [771, 1, 1, "", "elu"], [772, 1, 1, "", "hardsigmoid"], [773, 1, 1, "", "hardswish"], [774, 1, 1, "", "hardtanh"], [775, 1, 1, "", "interpolate"], [776, 1, 1, "", "leaky_relu"], [777, 1, 1, "", "linear"], [778, 1, 1, "", "max_pool1d"], [779, 1, 1, "", "max_pool2d"], [780, 1, 1, "", "threshold"], [781, 1, 1, "", "upsample"], [782, 1, 1, "", "upsample_bilinear"], [783, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.modules": [[2015, 0, 0, "-", "activation"], [2015, 0, 0, "-", "batchnorm"], [2015, 0, 0, "-", "conv"], [2015, 0, 0, "-", "dropout"], [2015, 0, 0, "-", "embedding_ops"], [2015, 0, 0, "-", "functional_modules"], [2015, 0, 0, "-", "linear"], [2015, 0, 0, "-", "normalization"], [2015, 0, 0, "-", "rnn"], [2015, 0, 0, "-", "utils"]], "torch.ao.nn.quantized.reference": [[2015, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.reference.modules": [[2015, 0, 0, "-", "conv"], [2015, 0, 0, "-", "linear"], [2015, 0, 0, "-", "rnn"], [2015, 0, 0, "-", "sparse"], [2015, 0, 0, "-", "utils"]], "torch.ao.nn.sparse": [[2015, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[2015, 0, 0, "-", "dynamic"], [2015, 0, 0, "-", "linear"], [2015, 0, 0, "-", "utils"]], "torch.ao.nn.sparse.quantized.dynamic": [[2015, 0, 0, "-", "linear"]], "torch.ao.ns": [[2033, 0, 0, "-", "_numeric_suite"], [2034, 0, 0, "-", "_numeric_suite_fx"], [2015, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[2033, 1, 1, "", "Logger"], [2033, 1, 1, "", "OutputLogger"], [2033, 1, 1, "", "Shadow"], [2033, 1, 1, "", "ShadowLogger"], [2033, 5, 1, "", "compare_model_outputs"], [2033, 5, 1, "", "compare_model_stub"], [2033, 5, 1, "", "compare_weights"], [2033, 5, 1, "", "get_logger_dict"], [2033, 5, 1, "", "get_matching_activations"], [2033, 5, 1, "", "prepare_model_outputs"], [2033, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[2033, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[2033, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[2033, 3, 1, "", "add"], [2033, 3, 1, "", "add_relu"], [2033, 3, 1, "", "add_scalar"], [2033, 3, 1, "", "cat"], [2033, 3, 1, "", "forward"], [2033, 3, 1, "", "mul"], [2033, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[2033, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[2034, 1, 1, "", "NSTracer"], [2034, 1, 1, "", "OutputComparisonLogger"], [2034, 1, 1, "", "OutputLogger"], [2034, 5, 1, "", "add_loggers"], [2034, 5, 1, "", "add_shadow_loggers"], [2034, 5, 1, "", "convert_n_shadows_model"], [2034, 5, 1, "", "extend_logger_results_with_comparison"], [2034, 5, 1, "", "extract_logger_info"], [2034, 5, 1, "", "extract_results_n_shadows_model"], [2034, 5, 1, "", "extract_shadow_logger_info"], [2034, 5, 1, "", "extract_weights"], [2034, 5, 1, "", "loggers_set_enabled"], [2034, 5, 1, "", "loggers_set_save_activations"], [2034, 5, 1, "", "prepare_n_shadows_model"], [2034, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[2034, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[2034, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[2034, 3, 1, "", "forward"]], "torch.ao.ns.fx": [[2015, 0, 0, "-", "graph_matcher"], [2015, 0, 0, "-", "graph_passes"], [2015, 0, 0, "-", "mappings"], [2015, 0, 0, "-", "n_shadows_utils"], [2015, 0, 0, "-", "ns_types"], [2015, 0, 0, "-", "pattern_utils"], [2015, 0, 0, "-", "qconfig_multi_mapping"], [2015, 0, 0, "-", "utils"], [2015, 0, 0, "-", "weight_utils"]], "torch.ao.ns.fx.utils": [[2034, 5, 1, "", "compute_cosine_similarity"], [2034, 5, 1, "", "compute_normalized_l2_error"], [2034, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[2015, 0, 0, "-", "scheduler"], [2015, 0, 0, "-", "sparsifier"]], "torch.ao.pruning.scheduler": [[2015, 0, 0, "-", "base_scheduler"], [2015, 0, 0, "-", "cubic_scheduler"], [2015, 0, 0, "-", "lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[2015, 0, 0, "-", "base_sparsifier"], [2015, 0, 0, "-", "nearly_diagonal_sparsifier"], [2015, 0, 0, "-", "utils"], [2015, 0, 0, "-", "weight_norm_sparsifier"]], "torch.ao.quantization": [[784, 1, 1, "", "DeQuantStub"], [785, 1, 1, "", "QuantStub"], [786, 1, 1, "", "QuantWrapper"], [787, 1, 1, "", "add_quant_dequant"], [2015, 0, 0, "-", "backend_config"], [793, 1, 1, "", "convert"], [794, 1, 1, "", "default_eval_fn"], [2015, 0, 0, "-", "fake_quantize"], [2015, 0, 0, "-", "fuse_modules"], [2015, 0, 0, "-", "fuser_method_mappings"], [2015, 0, 0, "-", "fx"], [2015, 0, 0, "-", "observer"], [834, 1, 1, "", "prepare"], [835, 1, 1, "", "prepare_qat"], [836, 1, 1, "", "propagate_qconfig_"], [2018, 0, 0, "-", "pt2e"], [2015, 0, 0, "-", "qconfig"], [2015, 0, 0, "-", "qconfig_mapping"], [2015, 0, 0, "-", "quant_type"], [2015, 0, 0, "-", "quantization_mappings"], [2015, 0, 0, "-", "quantize"], [854, 1, 1, "", "quantize_dynamic"], [2015, 0, 0, "-", "quantize_fx"], [2015, 0, 0, "-", "quantize_jit"], [2015, 0, 0, "-", "quantize_pt2e"], [859, 1, 1, "", "quantize_qat"], [2018, 0, 0, "-", "quantizer"], [2015, 0, 0, "-", "stubs"], [860, 1, 1, "", "swap_module"], [2015, 0, 0, "-", "utils"]], "torch.ao.quantization.backend_config": [[788, 1, 1, "", "BackendConfig"], [789, 1, 1, "", "BackendPatternConfig"], [790, 1, 1, "", "DTypeConfig"], [791, 1, 1, "", "DTypeWithConstraints"], [792, 1, 1, "", "ObservationType"], [2015, 0, 0, "-", "backend_config"], [2015, 0, 0, "-", "executorch"], [2015, 0, 0, "-", "fbgemm"], [2015, 0, 0, "-", "native"], [2015, 0, 0, "-", "observation_type"], [2015, 0, 0, "-", "onednn"], [2015, 0, 0, "-", "qnnpack"], [2015, 0, 0, "-", "tensorrt"], [2015, 0, 0, "-", "utils"], [2015, 0, 0, "-", "x86"]], "torch.ao.quantization.backend_config.BackendConfig": [[788, 4, 1, "", "configs"], [788, 3, 1, "", "from_dict"], [788, 3, 1, "", "set_backend_pattern_config"], [788, 3, 1, "", "set_backend_pattern_configs"], [788, 3, 1, "", "set_name"], [788, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[789, 3, 1, "", "add_dtype_config"], [789, 3, 1, "", "from_dict"], [789, 3, 1, "", "set_dtype_configs"], [789, 3, 1, "", "set_fused_module"], [789, 3, 1, "", "set_fuser_method"], [789, 3, 1, "", "set_observation_type"], [789, 3, 1, "", "set_pattern"], [789, 3, 1, "", "set_qat_module"], [789, 3, 1, "", "set_reference_quantized_module"], [789, 3, 1, "", "set_root_module"], [789, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[790, 3, 1, "", "from_dict"], [790, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[792, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [792, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [792, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[795, 1, 1, "", "FakeQuantize"], [796, 1, 1, "", "FakeQuantizeBase"], [797, 1, 1, "", "FixedQParamsFakeQuantize"], [798, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [799, 2, 1, "", "default_fake_quant"], [800, 2, 1, "", "default_fused_act_fake_quant"], [801, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [802, 2, 1, "", "default_fused_wt_fake_quant"], [803, 2, 1, "", "default_histogram_fake_quant"], [804, 2, 1, "", "default_per_channel_weight_fake_quant"], [805, 2, 1, "", "default_weight_fake_quant"], [806, 1, 1, "", "disable_fake_quant"], [807, 1, 1, "", "disable_observer"], [808, 1, 1, "", "enable_fake_quant"], [809, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize": [[797, 3, 1, "", "extra_repr"]], "torch.ao.quantization.fuse_modules": [[810, 1, 1, "", "fuse_modules"]], "torch.ao.quantization.fx": [[2015, 0, 0, "-", "convert"], [2015, 0, 0, "-", "custom_config"], [2015, 0, 0, "-", "fuse"], [2015, 0, 0, "-", "fuse_handler"], [2015, 0, 0, "-", "graph_module"], [2015, 0, 0, "-", "lower_to_fbgemm"], [2015, 0, 0, "-", "lower_to_qnnpack"], [2015, 0, 0, "-", "lstm_utils"], [2015, 0, 0, "-", "match_utils"], [2015, 0, 0, "-", "pattern_utils"], [2015, 0, 0, "-", "prepare"], [2015, 0, 0, "-", "qconfig_mapping_utils"], [2015, 0, 0, "-", "quantize_handler"], [2015, 0, 0, "-", "tracer"], [2015, 0, 0, "-", "utils"]], "torch.ao.quantization.fx.custom_config": [[811, 1, 1, "", "ConvertCustomConfig"], [812, 1, 1, "", "FuseCustomConfig"], [813, 1, 1, "", "PrepareCustomConfig"], [814, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[811, 3, 1, "", "from_dict"], [811, 3, 1, "", "set_observed_to_quantized_mapping"], [811, 3, 1, "", "set_preserved_attributes"], [811, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[812, 3, 1, "", "from_dict"], [812, 3, 1, "", "set_preserved_attributes"], [812, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[813, 3, 1, "", "from_dict"], [813, 3, 1, "", "set_float_to_observed_mapping"], [813, 3, 1, "", "set_input_quantized_indexes"], [813, 3, 1, "", "set_non_traceable_module_classes"], [813, 3, 1, "", "set_non_traceable_module_names"], [813, 3, 1, "", "set_output_quantized_indexes"], [813, 3, 1, "", "set_preserved_attributes"], [813, 3, 1, "", "set_standalone_module_class"], [813, 3, 1, "", "set_standalone_module_name"], [813, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[815, 1, 1, "", "HistogramObserver"], [816, 1, 1, "", "MinMaxObserver"], [817, 1, 1, "", "MovingAverageMinMaxObserver"], [818, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [819, 1, 1, "", "NoopObserver"], [820, 1, 1, "", "ObserverBase"], [821, 1, 1, "", "PerChannelMinMaxObserver"], [822, 1, 1, "", "PlaceholderObserver"], [823, 1, 1, "", "RecordingObserver"], [824, 2, 1, "", "default_debug_observer"], [825, 2, 1, "", "default_dynamic_quant_observer"], [826, 2, 1, "", "default_float_qparams_observer"], [827, 2, 1, "", "default_histogram_observer"], [828, 2, 1, "", "default_observer"], [829, 2, 1, "", "default_per_channel_weight_observer"], [830, 2, 1, "", "default_placeholder_observer"], [831, 2, 1, "", "default_weight_observer"], [832, 1, 1, "", "get_observer_state_dict"], [833, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[816, 3, 1, "", "calculate_qparams"], [816, 3, 1, "", "forward"], [816, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[820, 3, 1, "", "with_args"], [820, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[821, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[2015, 0, 0, "-", "duplicate_dq_pass"], [2015, 0, 0, "-", "export_utils"], [2018, 0, 0, "-", "generate_numeric_debug_handle"], [2015, 0, 0, "-", "graph_utils"], [2015, 0, 0, "-", "port_metadata_pass"], [2015, 0, 0, "-", "prepare"], [2015, 0, 0, "-", "qat_utils"], [2018, 0, 0, "-", "representation"], [2015, 0, 0, "-", "utils"]], "torch.ao.quantization.pt2e.representation": [[2015, 0, 0, "-", "rewrite"]], "torch.ao.quantization.qconfig": [[837, 1, 1, "", "QConfig"], [838, 2, 1, "", "default_activation_only_qconfig"], [839, 2, 1, "", "default_debug_qconfig"], [840, 2, 1, "", "default_dynamic_qconfig"], [841, 2, 1, "", "default_per_channel_qconfig"], [842, 2, 1, "", "default_qat_qconfig"], [843, 2, 1, "", "default_qat_qconfig_v2"], [844, 2, 1, "", "default_qconfig"], [845, 2, 1, "", "default_weight_only_qconfig"], [846, 2, 1, "", "float16_dynamic_qconfig"], [847, 2, 1, "", "float16_static_qconfig"], [848, 2, 1, "", "float_qparams_weight_only_qconfig"], [849, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[850, 1, 1, "", "QConfigMapping"], [851, 1, 1, "", "get_default_qat_qconfig_mapping"], [852, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[850, 3, 1, "", "from_dict"], [850, 3, 1, "", "set_global"], [850, 3, 1, "", "set_module_name"], [850, 3, 1, "", "set_module_name_object_type_order"], [850, 3, 1, "", "set_module_name_regex"], [850, 3, 1, "", "set_object_type"], [850, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[855, 1, 1, "", "convert_fx"], [856, 1, 1, "", "fuse_fx"], [857, 1, 1, "", "prepare_fx"], [858, 1, 1, "", "prepare_qat_fx"]], "torch.ao.quantization.quantizer": [[2015, 0, 0, "-", "composable_quantizer"], [2015, 0, 0, "-", "embedding_quantizer"], [2015, 0, 0, "-", "quantizer"], [2015, 0, 0, "-", "utils"], [2015, 0, 0, "-", "x86_inductor_quantizer"], [2015, 0, 0, "-", "xnnpack_quantizer"], [2015, 0, 0, "-", "xnnpack_quantizer_utils"]], "torch.autograd": [[1, 1, 1, "", "Function"], [1, 0, 0, "-", "anomaly_mode"], [889, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [1, 0, 0, "-", "forward_ad"], [1, 0, 0, "-", "function"], [1, 0, 0, "-", "functional"], [910, 5, 1, "", "grad"], [1, 0, 0, "-", "grad_mode"], [1, 0, 0, "-", "gradcheck"], [1, 0, 0, "-", "graph"], [1, 0, 0, "-", "profiler"], [1, 0, 0, "-", "profiler_legacy"], [1, 0, 0, "-", "profiler_util"], [1, 1, 1, "", "set_detect_anomaly"], [1, 0, 0, "-", "variable"]], "torch.autograd.Function": [[885, 3, 1, "", "backward"], [886, 3, 1, "", "forward"], [887, 3, 1, "", "jvp"], [888, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[890, 1, 1, "", "UnpackedDualTensor"], [891, 1, 1, "", "dual_level"], [892, 5, 1, "", "enter_dual_level"], [893, 5, 1, "", "exit_dual_level"], [894, 5, 1, "", "make_dual"], [895, 5, 1, "", "unpack_dual"]], "torch.autograd.forward_ad.UnpackedDualTensor": [[890, 3, 1, "", "count"], [890, 3, 1, "", "index"], [890, 2, 1, "", "primal"], [890, 2, 1, "", "tangent"]], "torch.autograd.function": [[896, 1, 1, "", "BackwardCFunction"], [901, 1, 1, "", "InplaceFunction"], [902, 1, 1, "", "NestedIOFunction"], [903, 5, 1, "", "once_differentiable"]], "torch.autograd.function.BackwardCFunction": [[896, 3, 1, "", "apply"], [896, 3, 1, "", "apply_jvp"], [896, 3, 1, "", "mark_dirty"], [896, 3, 1, "", "mark_non_differentiable"], [896, 3, 1, "", "save_for_backward"], [896, 3, 1, "", "save_for_forward"], [896, 3, 1, "", "set_materialize_grads"]], "torch.autograd.function.FunctionCtx": [[897, 3, 1, "", "mark_dirty"], [898, 3, 1, "", "mark_non_differentiable"], [899, 3, 1, "", "save_for_backward"], [900, 3, 1, "", "set_materialize_grads"]], "torch.autograd.function.InplaceFunction": [[901, 3, 1, "", "backward"], [901, 3, 1, "", "forward"], [901, 3, 1, "", "jvp"], [901, 3, 1, "", "mark_dirty"], [901, 3, 1, "", "mark_non_differentiable"], [901, 3, 1, "", "save_for_backward"], [901, 3, 1, "", "save_for_forward"], [901, 3, 1, "", "set_materialize_grads"], [901, 3, 1, "", "setup_context"], [901, 3, 1, "", "vjp"], [901, 3, 1, "", "vmap"]], "torch.autograd.function.NestedIOFunction": [[902, 3, 1, "", "backward"], [902, 3, 1, "", "backward_extended"], [902, 3, 1, "", "forward"], [902, 3, 1, "", "forward_extended"], [902, 3, 1, "", "jvp"], [902, 3, 1, "", "mark_dirty"], [902, 3, 1, "", "mark_non_differentiable"], [902, 3, 1, "", "save_for_backward"], [902, 3, 1, "", "save_for_forward"], [902, 4, 1, "", "saved_tensors"], [902, 3, 1, "", "set_materialize_grads"], [902, 3, 1, "", "setup_context"], [902, 3, 1, "", "vjp"], [902, 3, 1, "", "vmap"]], "torch.autograd.functional": [[904, 5, 1, "", "hessian"], [905, 5, 1, "", "hvp"], [906, 5, 1, "", "jacobian"], [907, 5, 1, "", "jvp"], [908, 5, 1, "", "vhp"], [909, 5, 1, "", "vjp"]], "torch.autograd.grad_mode": [[911, 1, 1, "", "inference_mode"], [912, 1, 1, "", "set_grad_enabled"], [913, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.grad_mode.inference_mode": [[911, 3, 1, "", "clone"]], "torch.autograd.grad_mode.set_grad_enabled": [[912, 3, 1, "", "clone"]], "torch.autograd.grad_mode.set_multithreading_enabled": [[913, 3, 1, "", "clone"]], "torch.autograd.gradcheck": [[914, 6, 1, "", "GradcheckError"], [915, 5, 1, "", "gradcheck"], [916, 5, 1, "", "gradgradcheck"]], "torch.autograd.graph": [[1, 1, 1, "", "GradientEdge"], [1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 5, 1, "", "get_gradient_edge"], [922, 5, 1, "", "increment_version"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.graph.Node": [[917, 3, 1, "", "metadata"], [918, 3, 1, "", "name"], [919, 4, 1, "", "next_functions"], [920, 3, 1, "", "register_hook"], [921, 3, 1, "", "register_prehook"]], "torch.autograd.profiler": [[923, 1, 1, "", "EnforceUnique"], [924, 1, 1, "", "KinetoStepTracker"], [1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [925, 5, 1, "", "load_nvprof"], [926, 5, 1, "", "parse_nvprof_trace"], [1, 1, 1, "", "profile"], [931, 1, 1, "", "record_function"]], "torch.autograd.profiler.EnforceUnique": [[923, 3, 1, "", "see"]], "torch.autograd.profiler.KinetoStepTracker": [[924, 3, 1, "", "current_step"], [924, 3, 1, "", "erase_step_count"], [924, 3, 1, "", "increment_step"], [924, 3, 1, "", "init_step_count"]], "torch.autograd.profiler.profile": [[927, 3, 1, "", "export_chrome_trace"], [928, 3, 1, "", "key_averages"], [929, 4, 1, "", "self_cpu_time_total"], [930, 3, 1, "", "total_average"]], "torch.autograd.profiler_util": [[932, 1, 1, "", "Interval"], [933, 1, 1, "", "Kernel"], [934, 1, 1, "", "MemRecordsAcc"], [935, 1, 1, "", "StringTable"]], "torch.autograd.profiler_util.Interval": [[932, 3, 1, "", "elapsed_us"]], "torch.autograd.profiler_util.Kernel": [[933, 3, 1, "", "count"], [933, 2, 1, "", "device"], [933, 2, 1, "", "duration"], [933, 3, 1, "", "index"], [933, 2, 1, "", "name"]], "torch.autograd.profiler_util.MemRecordsAcc": [[934, 3, 1, "", "in_interval"]], "torch.autograd.profiler_util.StringTable": [[935, 3, 1, "", "clear"], [935, 3, 1, "", "copy"], [935, 2, 1, "", "default_factory"], [935, 3, 1, "", "fromkeys"], [935, 3, 1, "", "get"], [935, 3, 1, "", "items"], [935, 3, 1, "", "keys"], [935, 3, 1, "", "pop"], [935, 3, 1, "", "popitem"], [935, 3, 1, "", "setdefault"], [935, 3, 1, "", "update"], [935, 3, 1, "", "values"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mha"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "nnpack"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPAParams"], [2, 5, 1, "", "can_use_efficient_attention"], [2, 5, 1, "", "can_use_flash_attention"], [2, 5, 1, "", "cudnn_sdp_enabled"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_cudnn_sdp"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 0, 0, "-", "rnn"], [2, 5, 1, "", "version"]], "torch.backends.mha": [[2, 5, 1, "", "get_fastpath_enabled"], [2, 5, 1, "", "set_fastpath_enabled"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.nnpack": [[2, 5, 1, "", "flags"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "set_flags"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.backends.xeon": [[2, 0, 0, "-", "run_cpu"]], "torch.compiler": [[970, 5, 1, "", "allow_in_graph"], [971, 5, 1, "", "assume_constant_result"], [972, 5, 1, "", "compile"], [973, 5, 1, "", "cudagraph_mark_step_begin"], [974, 5, 1, "", "disable"], [975, 5, 1, "", "list_backends"], [976, 5, 1, "", "reset"]], "torch.cpu": [[989, 1, 1, "", "Stream"], [990, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [991, 5, 1, "", "current_device"], [992, 5, 1, "", "current_stream"], [993, 5, 1, "", "device_count"], [994, 5, 1, "", "is_available"], [995, 5, 1, "", "set_device"], [996, 5, 1, "", "stream"], [997, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda": [[999, 1, 1, "", "CUDAGraph"], [1000, 1, 1, "", "CUDAPluggableAllocator"], [1001, 1, 1, "", "Event"], [1002, 1, 1, "", "ExternalStream"], [1003, 6, 1, "", "OutOfMemoryError"], [1004, 1, 1, "", "Stream"], [1005, 1, 1, "", "StreamContext"], [18, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [1006, 5, 1, "", "caching_allocator_alloc"], [1007, 5, 1, "", "caching_allocator_delete"], [1008, 5, 1, "", "can_device_access_peer"], [1009, 5, 1, "", "change_current_allocator"], [1010, 5, 1, "", "clock_rate"], [17, 0, 0, "-", "comm"], [1016, 5, 1, "", "current_blas_handle"], [1017, 5, 1, "", "current_device"], [1018, 5, 1, "", "current_stream"], [1019, 5, 1, "", "default_stream"], [1020, 1, 1, "", "device"], [1021, 5, 1, "", "device_count"], [1022, 1, 1, "", "device_of"], [1023, 5, 1, "", "empty_cache"], [17, 0, 0, "-", "error"], [1024, 5, 1, "", "get_allocator_backend"], [1025, 5, 1, "", "get_arch_list"], [1026, 5, 1, "", "get_device_capability"], [1027, 5, 1, "", "get_device_name"], [1028, 5, 1, "", "get_device_properties"], [1029, 5, 1, "", "get_gencode_flags"], [1030, 5, 1, "", "get_rng_state"], [1031, 5, 1, "", "get_rng_state_all"], [1032, 5, 1, "", "get_sync_debug_mode"], [1033, 1, 1, "", "graph"], [1034, 5, 1, "", "graph_pool_handle"], [17, 0, 0, "-", "graphs"], [1035, 5, 1, "", "init"], [1036, 5, 1, "", "initial_seed"], [1037, 5, 1, "", "ipc_collect"], [1038, 5, 1, "", "is_available"], [1039, 5, 1, "", "is_current_stream_capturing"], [1040, 5, 1, "", "is_initialized"], [17, 0, 0, "-", "jiterator"], [1043, 5, 1, "", "list_gpu_processes"], [1044, 5, 1, "", "make_graphed_callables"], [1045, 5, 1, "", "manual_seed"], [1046, 5, 1, "", "manual_seed_all"], [1047, 5, 1, "", "max_memory_allocated"], [1048, 5, 1, "", "max_memory_cached"], [1049, 5, 1, "", "max_memory_reserved"], [1050, 5, 1, "", "mem_get_info"], [17, 0, 0, "-", "memory"], [1051, 5, 1, "", "memory_allocated"], [1052, 5, 1, "", "memory_cached"], [1053, 5, 1, "", "memory_reserved"], [1054, 5, 1, "", "memory_snapshot"], [1055, 5, 1, "", "memory_stats"], [1056, 5, 1, "", "memory_summary"], [1057, 5, 1, "", "memory_usage"], [17, 0, 0, "-", "nccl"], [17, 0, 0, "-", "nvtx"], [1061, 5, 1, "", "power_draw"], [17, 0, 0, "-", "profiler"], [17, 0, 0, "-", "random"], [1062, 5, 1, "", "reset_max_memory_allocated"], [1063, 5, 1, "", "reset_max_memory_cached"], [1064, 5, 1, "", "reset_peak_memory_stats"], [1065, 5, 1, "", "seed"], [1066, 5, 1, "", "seed_all"], [1067, 5, 1, "", "set_device"], [1068, 5, 1, "", "set_per_process_memory_fraction"], [1069, 5, 1, "", "set_rng_state"], [1070, 5, 1, "", "set_rng_state_all"], [1071, 5, 1, "", "set_stream"], [1072, 5, 1, "", "set_sync_debug_mode"], [17, 0, 0, "-", "sparse"], [1073, 5, 1, "", "stream"], [17, 0, 0, "-", "streams"], [1074, 5, 1, "", "synchronize"], [1075, 5, 1, "", "temperature"], [1076, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[999, 3, 1, "", "capture_begin"], [999, 3, 1, "", "capture_end"], [999, 3, 1, "", "debug_dump"], [999, 3, 1, "", "enable_debug_mode"], [999, 3, 1, "", "pool"], [999, 3, 1, "", "replay"], [999, 3, 1, "", "reset"]], "torch.cuda.Event": [[1001, 3, 1, "", "elapsed_time"], [1001, 3, 1, "", "from_ipc_handle"], [1001, 3, 1, "", "ipc_handle"], [1001, 3, 1, "", "query"], [1001, 3, 1, "", "record"], [1001, 3, 1, "", "synchronize"], [1001, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[1002, 3, 1, "", "query"], [1002, 3, 1, "", "record_event"], [1002, 3, 1, "", "synchronize"], [1002, 3, 1, "", "wait_event"], [1002, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[1004, 3, 1, "", "query"], [1004, 3, 1, "", "record_event"], [1004, 3, 1, "", "synchronize"], [1004, 3, 1, "", "wait_event"], [1004, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[18, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "common"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda.comm": [[1011, 5, 1, "", "broadcast"], [1012, 5, 1, "", "broadcast_coalesced"], [1013, 5, 1, "", "gather"], [1014, 5, 1, "", "reduce_add"], [1015, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1041, 5, 1, "", "_create_jit_fn"], [1042, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.memory": [[2056, 5, 1, "", "_dump_snapshot"], [2056, 5, 1, "", "_record_memory_history"], [2056, 5, 1, "", "_snapshot"]], "torch.cuda.nvtx": [[1058, 5, 1, "", "mark"], [1059, 5, 1, "", "range_pop"], [1060, 5, 1, "", "range_push"]], "torch.distributed": [[25, 1, 1, "", "Backend"], [25, 1, 1, "", "DistBackendError"], [25, 1, 1, "", "DistError"], [25, 1, 1, "", "DistNetworkError"], [25, 1, 1, "", "DistStoreError"], [25, 1, 1, "", "FileStore"], [22, 1, 1, "", "GradBucket"], [25, 1, 1, "", "HashStore"], [25, 1, 1, "", "P2POp"], [25, 1, 1, "", "PrefixStore"], [25, 1, 1, "", "ReduceOp"], [25, 1, 1, "", "Store"], [25, 1, 1, "", "TCPStore"], [25, 1, 1, "", "Work"], [25, 0, 0, "-", "algorithms"], [25, 5, 1, "", "all_gather"], [25, 5, 1, "", "all_gather_into_tensor"], [25, 5, 1, "", "all_gather_object"], [25, 5, 1, "", "all_reduce"], [25, 5, 1, "", "all_to_all"], [25, 5, 1, "", "all_to_all_single"], [25, 0, 0, "-", "argparse_util"], [2020, 0, 0, "-", "autograd"], [25, 5, 1, "", "barrier"], [25, 5, 1, "", "batch_isend_irecv"], [25, 5, 1, "", "breakpoint"], [25, 5, 1, "", "broadcast"], [25, 5, 1, "", "broadcast_object_list"], [25, 0, 0, "-", "c10d_logger"], [27, 0, 0, "-", "checkpoint"], [25, 0, 0, "-", "collective_utils"], [25, 0, 0, "-", "constants"], [25, 0, 0, "-", "device_mesh"], [25, 0, 0, "-", "distributed_c10d"], [25, 0, 0, "-", "elastic"], [49, 0, 0, "-", "fsdp"], [25, 5, 1, "", "gather"], [25, 5, 1, "", "gather_object"], [25, 5, 1, "", "get_backend"], [25, 5, 1, "", "get_global_rank"], [25, 5, 1, "", "get_group_rank"], [25, 5, 1, "", "get_process_group_ranks"], [25, 5, 1, "", "get_rank"], [25, 5, 1, "", "get_world_size"], [25, 5, 1, "", "init_process_group"], [25, 5, 1, "", "irecv"], [25, 5, 1, "", "is_available"], [25, 5, 1, "", "is_gloo_available"], [25, 5, 1, "", "is_initialized"], [25, 5, 1, "", "is_mpi_available"], [25, 5, 1, "", "is_nccl_available"], [25, 5, 1, "", "is_torchelastic_launched"], [25, 5, 1, "", "isend"], [25, 0, 0, "-", "launch"], [25, 0, 0, "-", "launcher"], [25, 0, 0, "-", "logging_handlers"], [25, 5, 1, "", "monitored_barrier"], [25, 5, 1, "", "new_group"], [25, 0, 0, "-", "nn"], [29, 0, 0, "-", "optim"], [25, 0, 0, "-", "pipeline"], [25, 5, 1, "", "recv"], [25, 5, 1, "", "reduce"], [25, 1, 1, "", "reduce_op"], [25, 5, 1, "", "reduce_scatter"], [25, 5, 1, "", "reduce_scatter_tensor"], [25, 0, 0, "-", "remote_device"], [25, 0, 0, "-", "rendezvous"], [2020, 0, 0, "-", "rpc"], [43, 0, 0, "-", "run"], [25, 5, 1, "", "scatter"], [25, 5, 1, "", "scatter_object_list"], [25, 5, 1, "", "send"], [25, 0, 0, "-", "tensor"], [25, 0, 0, "-", "utils"]], "torch.distributed.Backend": [[25, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[22, 5, 1, "", "buffer"], [22, 5, 1, "", "gradients"], [22, 5, 1, "", "index"], [22, 5, 1, "", "is_last"], [22, 5, 1, "", "parameters"], [22, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[25, 5, 1, "", "add"], [25, 5, 1, "", "compare_set"], [25, 5, 1, "", "delete_key"], [25, 5, 1, "", "get"], [25, 5, 1, "", "num_keys"], [25, 5, 1, "", "set"], [25, 5, 1, "", "set_timeout"], [25, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[26, 1, 1, "", "Join"], [26, 1, 1, "", "JoinHook"], [26, 1, 1, "", "Joinable"], [25, 0, 0, "-", "ddp_comm_hooks"], [25, 0, 0, "-", "join"], [25, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[26, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[26, 3, 1, "", "main_hook"], [26, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[26, 4, 1, "", "join_device"], [26, 3, 1, "", "join_hook"], [26, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks": [[25, 0, 0, "-", "ddp_zero_hook"], [25, 0, 0, "-", "debugging_hooks"], [25, 0, 0, "-", "default_hooks"], [25, 0, 0, "-", "mixed_precision_hooks"], [25, 0, 0, "-", "optimizer_overlap_hooks"], [25, 0, 0, "-", "post_localSGD_hook"], [25, 0, 0, "-", "powerSGD_hook"], [25, 0, 0, "-", "quantization_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[22, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[22, 5, 1, "", "allreduce_hook"], [22, 5, 1, "", "bf16_compress_hook"], [22, 5, 1, "", "bf16_compress_wrapper"], [22, 5, 1, "", "fp16_compress_hook"], [22, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[22, 1, 1, "", "PowerSGDState"], [22, 5, 1, "", "batched_powerSGD_hook"], [22, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[22, 3, 1, "", "__getstate__"], [22, 3, 1, "", "__setstate__"]], "torch.distributed.algorithms.model_averaging": [[25, 0, 0, "-", "averagers"], [25, 0, 0, "-", "hierarchical_model_averager"], [25, 0, 0, "-", "utils"]], "torch.distributed.autograd": [[2020, 5, 1, "", "backward"], [2020, 1, 1, "", "context"], [2020, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[27, 1, 1, "", "DefaultLoadPlanner"], [27, 1, 1, "", "DefaultSavePlanner"], [27, 1, 1, "", "FileSystemReader"], [27, 1, 1, "", "FileSystemWriter"], [27, 1, 1, "", "LoadPlan"], [27, 1, 1, "", "LoadPlanner"], [27, 1, 1, "", "ReadItem"], [27, 1, 1, "", "SavePlan"], [27, 1, 1, "", "SavePlanner"], [27, 1, 1, "", "StorageReader"], [27, 1, 1, "", "StorageWriter"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "default_planner"], [25, 0, 0, "-", "filesystem"], [27, 5, 1, "", "load"], [27, 5, 1, "", "load_state_dict"], [25, 0, 0, "-", "metadata"], [25, 0, 0, "-", "optimizer"], [25, 0, 0, "-", "planner"], [25, 0, 0, "-", "planner_helpers"], [25, 0, 0, "-", "resharding"], [27, 5, 1, "", "save"], [27, 5, 1, "", "save_state_dict"], [25, 0, 0, "-", "state_dict"], [25, 0, 0, "-", "state_dict_loader"], [25, 0, 0, "-", "state_dict_saver"], [25, 0, 0, "-", "stateful"], [25, 0, 0, "-", "storage"], [25, 0, 0, "-", "utils"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[27, 3, 1, "", "lookup_tensor"], [27, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[27, 3, 1, "", "lookup_object"], [27, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[27, 3, 1, "", "commit_tensor"], [27, 3, 1, "", "create_global_plan"], [27, 3, 1, "", "create_local_plan"], [27, 3, 1, "", "finish_plan"], [27, 3, 1, "", "load_bytes"], [27, 3, 1, "", "resolve_tensor"], [27, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[27, 3, 1, "", "create_global_plan"], [27, 3, 1, "", "create_local_plan"], [27, 3, 1, "", "finish_plan"], [27, 3, 1, "", "resolve_data"], [27, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[27, 3, 1, "", "prepare_global_plan"], [27, 3, 1, "", "prepare_local_plan"], [27, 3, 1, "", "read_data"], [27, 3, 1, "", "read_metadata"], [27, 3, 1, "", "reset"], [27, 3, 1, "", "set_up_storage_reader"], [27, 3, 1, "", "validate_checkpoint_id"]], "torch.distributed.checkpoint.StorageWriter": [[27, 3, 1, "", "finish"], [27, 3, 1, "", "prepare_global_plan"], [27, 3, 1, "", "prepare_local_plan"], [27, 3, 1, "", "reset"], [27, 3, 1, "", "set_up_storage_writer"], [27, 3, 1, "", "validate_checkpoint_id"], [27, 3, 1, "", "write_data"]], "torch.distributed.checkpoint.planner": [[27, 1, 1, "", "WriteItem"]], "torch.distributed.checkpoint.planner.WriteItem": [[27, 3, 1, "", "tensor_storage_size"]], "torch.distributed.checkpoint.state_dict": [[27, 1, 1, "", "StateDictOptions"], [27, 5, 1, "", "get_model_state_dict"], [27, 5, 1, "", "get_optimizer_state_dict"], [27, 5, 1, "", "get_state_dict"], [27, 5, 1, "", "set_model_state_dict"], [27, 5, 1, "", "set_optimizer_state_dict"], [27, 5, 1, "", "set_state_dict"]], "torch.distributed.checkpoint.stateful": [[27, 1, 1, "", "Stateful"]], "torch.distributed.checkpoint.stateful.Stateful": [[27, 3, 1, "", "load_state_dict"], [27, 3, 1, "", "state_dict"]], "torch.distributed.device_mesh": [[25, 1, 1, "", "DeviceMesh"], [25, 5, 1, "", "init_device_mesh"]], "torch.distributed.elastic": [[33, 0, 0, "-", "agent"], [36, 0, 0, "-", "events"], [39, 0, 0, "-", "metrics"], [40, 0, 0, "-", "multiprocessing"], [42, 0, 0, "-", "rendezvous"], [44, 0, 0, "-", "timer"], [25, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[33, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[33, 1, 1, "", "ElasticAgent"], [33, 1, 1, "", "SimpleElasticAgent"], [33, 1, 1, "", "Worker"], [33, 1, 1, "", "WorkerGroup"], [33, 1, 1, "", "WorkerSpec"], [33, 1, 1, "", "WorkerState"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "local_elastic_agent"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[33, 3, 1, "", "get_worker_group"], [33, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[33, 3, 1, "", "_assign_worker_ranks"], [33, 3, 1, "", "_exit_barrier"], [33, 3, 1, "", "_initialize_workers"], [33, 3, 1, "", "_monitor_workers"], [33, 3, 1, "", "_rendezvous"], [33, 3, 1, "", "_restart_workers"], [33, 3, 1, "", "_shutdown"], [33, 3, 1, "", "_start_workers"], [33, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[33, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[33, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[33, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[33, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events": [[25, 0, 0, "-", "api"], [36, 5, 1, "", "get_logging_handler"], [25, 0, 0, "-", "handlers"], [36, 5, 1, "", "record"]], "torch.distributed.elastic.events.api": [[36, 1, 1, "", "Event"], [36, 2, 1, "", "EventMetadataValue"], [36, 1, 1, "", "EventSource"]], "torch.distributed.elastic.metrics": [[25, 0, 0, "-", "api"], [39, 5, 1, "", "configure"], [39, 5, 1, "", "prof"], [39, 5, 1, "", "put_metric"]], "torch.distributed.elastic.metrics.api": [[39, 1, 1, "", "ConsoleMetricHandler"], [39, 1, 1, "", "MetricHandler"], [39, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.multiprocessing": [[25, 0, 0, "-", "api"], [35, 0, 0, "-", "errors"], [25, 0, 0, "-", "redirects"], [40, 5, 1, "", "start_processes"], [25, 0, 0, "-", "tail_log"]], "torch.distributed.elastic.multiprocessing.api": [[40, 1, 1, "", "MultiprocessContext"], [40, 1, 1, "", "PContext"], [40, 1, 1, "", "RunProcsResult"], [40, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing.errors": [[35, 1, 1, "", "ChildFailedError"], [35, 1, 1, "", "ErrorHandler"], [35, 1, 1, "", "ProcessFailure"], [25, 0, 0, "-", "error_handler"], [25, 0, 0, "-", "handlers"], [35, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[42, 1, 1, "", "RendezvousClosedError"], [42, 1, 1, "", "RendezvousConnectionError"], [42, 1, 1, "", "RendezvousError"], [42, 1, 1, "", "RendezvousGracefulExitError"], [42, 1, 1, "", "RendezvousHandler"], [42, 1, 1, "", "RendezvousHandlerRegistry"], [42, 1, 1, "", "RendezvousParameters"], [42, 1, 1, "", "RendezvousStateError"], [42, 1, 1, "", "RendezvousTimeoutError"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "c10d_rendezvous_backend"], [25, 0, 0, "-", "dynamic_rendezvous"], [25, 0, 0, "-", "etcd_rendezvous"], [25, 0, 0, "-", "etcd_rendezvous_backend"], [25, 0, 0, "-", "etcd_server"], [25, 0, 0, "-", "etcd_store"], [42, 0, 0, "-", "registry"], [25, 0, 0, "-", "static_tcp_rendezvous"], [25, 0, 0, "-", "utils"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[42, 3, 1, "", "get_backend"], [42, 3, 1, "", "get_run_id"], [42, 3, 1, "", "is_closed"], [42, 3, 1, "", "next_rendezvous"], [42, 3, 1, "", "num_nodes_waiting"], [42, 3, 1, "", "set_closed"], [42, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[42, 3, 1, "", "create_handler"], [42, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[42, 3, 1, "", "get"], [42, 3, 1, "", "get_as_bool"], [42, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[42, 1, 1, "", "C10dRendezvousBackend"], [42, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[42, 3, 1, "", "get_state"], [42, 4, 1, "", "name"], [42, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[42, 1, 1, "", "DynamicRendezvousHandler"], [42, 1, 1, "", "RendezvousBackend"], [42, 1, 1, "", "RendezvousTimeout"], [42, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[42, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[42, 3, 1, "", "get_state"], [42, 4, 1, "", "name"], [42, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[42, 4, 1, "", "close"], [42, 4, 1, "", "heartbeat"], [42, 4, 1, "", "join"], [42, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[42, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[42, 1, 1, "", "EtcdRendezvousBackend"], [42, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[42, 3, 1, "", "get_state"], [42, 4, 1, "", "name"], [42, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[42, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[42, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[42, 3, 1, "", "add"], [42, 3, 1, "", "check"], [42, 3, 1, "", "get"], [42, 3, 1, "", "set"], [42, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[44, 1, 1, "", "FileTimerClient"], [44, 1, 1, "", "FileTimerServer"], [44, 1, 1, "", "LocalTimerClient"], [44, 1, 1, "", "LocalTimerServer"], [44, 1, 1, "", "TimerClient"], [44, 1, 1, "", "TimerRequest"], [44, 1, 1, "", "TimerServer"], [25, 0, 0, "-", "api"], [44, 5, 1, "", "configure"], [44, 5, 1, "", "expires"], [25, 0, 0, "-", "file_based_local_timer"], [25, 0, 0, "-", "local_timer"]], "torch.distributed.elastic.timer.TimerClient": [[44, 3, 1, "", "acquire"], [44, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[44, 3, 1, "", "clear_timers"], [44, 3, 1, "", "get_expired_timers"], [44, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[25, 0, 0, "-", "api"], [25, 0, 0, "-", "data"], [25, 0, 0, "-", "distributed"], [25, 0, 0, "-", "log_level"], [25, 0, 0, "-", "logging"], [25, 0, 0, "-", "store"]], "torch.distributed.elastic.utils.data": [[25, 0, 0, "-", "cycling_iterator"], [25, 0, 0, "-", "elastic_distributed_sampler"]], "torch.distributed.fsdp": [[49, 1, 1, "", "BackwardPrefetch"], [49, 1, 1, "", "CPUOffload"], [49, 1, 1, "", "FullOptimStateDictConfig"], [49, 1, 1, "", "FullStateDictConfig"], [49, 1, 1, "", "FullyShardedDataParallel"], [49, 1, 1, "", "LocalOptimStateDictConfig"], [49, 1, 1, "", "LocalStateDictConfig"], [49, 1, 1, "", "MixedPrecision"], [49, 1, 1, "", "OptimStateDictConfig"], [49, 1, 1, "", "ShardedOptimStateDictConfig"], [49, 1, 1, "", "ShardedStateDictConfig"], [49, 1, 1, "", "ShardingStrategy"], [49, 1, 1, "", "StateDictConfig"], [49, 1, 1, "", "StateDictSettings"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "fully_sharded_data_parallel"], [25, 0, 0, "-", "sharded_grad_scaler"], [25, 0, 0, "-", "wrap"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[49, 3, 1, "", "apply"], [49, 3, 1, "", "check_is_root"], [49, 3, 1, "", "clip_grad_norm_"], [49, 3, 1, "", "flatten_sharded_optim_state_dict"], [49, 3, 1, "", "forward"], [49, 3, 1, "", "fsdp_modules"], [49, 3, 1, "", "full_optim_state_dict"], [49, 3, 1, "", "get_state_dict_type"], [49, 4, 1, "", "module"], [49, 3, 1, "", "named_buffers"], [49, 3, 1, "", "named_parameters"], [49, 3, 1, "", "no_sync"], [49, 3, 1, "", "optim_state_dict"], [49, 3, 1, "", "optim_state_dict_to_load"], [49, 3, 1, "", "register_comm_hook"], [49, 3, 1, "", "rekey_optim_state_dict"], [49, 3, 1, "", "scatter_full_optim_state_dict"], [49, 3, 1, "", "set_state_dict_type"], [49, 3, 1, "", "shard_full_optim_state_dict"], [49, 3, 1, "", "sharded_optim_state_dict"], [49, 3, 1, "", "state_dict_type"], [49, 3, 1, "", "summon_full_params"]], "torch.distributed.launcher": [[25, 0, 0, "-", "api"]], "torch.distributed.nn": [[25, 0, 0, "-", "api"], [25, 0, 0, "-", "functional"], [25, 0, 0, "-", "jit"]], "torch.distributed.nn.api": [[25, 0, 0, "-", "remote_module"]], "torch.distributed.nn.api.remote_module": [[2020, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[2020, 3, 1, "", "get_module_rref"], [2020, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[25, 0, 0, "-", "instantiator"], [25, 0, 0, "-", "templates"]], "torch.distributed.nn.jit.templates": [[25, 0, 0, "-", "remote_module_template"]], "torch.distributed.optim": [[29, 1, 1, "", "DistributedOptimizer"], [29, 1, 1, "", "PostLocalSGDOptimizer"], [29, 1, 1, "", "ZeroRedundancyOptimizer"], [25, 0, 0, "-", "apply_optimizer_in_backward"], [25, 0, 0, "-", "functional_adadelta"], [25, 0, 0, "-", "functional_adagrad"], [25, 0, 0, "-", "functional_adam"], [25, 0, 0, "-", "functional_adamax"], [25, 0, 0, "-", "functional_adamw"], [25, 0, 0, "-", "functional_rmsprop"], [25, 0, 0, "-", "functional_rprop"], [25, 0, 0, "-", "functional_sgd"], [25, 0, 0, "-", "named_optimizer"], [25, 0, 0, "-", "optimizer"], [25, 0, 0, "-", "post_localSGD_optimizer"], [25, 0, 0, "-", "utils"], [25, 0, 0, "-", "zero_redundancy_optimizer"]], "torch.distributed.optim.DistributedOptimizer": [[29, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[29, 3, 1, "", "load_state_dict"], [29, 3, 1, "", "state_dict"], [29, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[29, 3, 1, "", "add_param_group"], [29, 3, 1, "", "consolidate_state_dict"], [29, 4, 1, "", "join_device"], [29, 3, 1, "", "join_hook"], [29, 4, 1, "", "join_process_group"], [29, 3, 1, "", "load_state_dict"], [29, 3, 1, "", "state_dict"], [29, 3, 1, "", "step"]], "torch.distributed.pipeline": [[25, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[2013, 1, 1, "", "Pipe"], [25, 0, 0, "-", "batchnorm"], [25, 0, 0, "-", "checkpoint"], [25, 0, 0, "-", "copy"], [25, 0, 0, "-", "dependency"], [25, 0, 0, "-", "microbatch"], [25, 0, 0, "-", "phony"], [25, 0, 0, "-", "pipe"], [25, 0, 0, "-", "pipeline"], [25, 0, 0, "-", "skip"], [25, 0, 0, "-", "stream"], [25, 0, 0, "-", "utils"], [25, 0, 0, "-", "worker"]], "torch.distributed.pipeline.sync.Pipe": [[2013, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip": [[25, 0, 0, "-", "layout"], [25, 0, 0, "-", "namespace"], [25, 0, 0, "-", "portal"], [25, 0, 0, "-", "skippable"], [25, 0, 0, "-", "tracker"]], "torch.distributed.pipeline.sync.skip.skippable": [[2013, 1, 1, "", "pop"], [2013, 5, 1, "", "skippable"], [2013, 1, 1, "", "stash"], [2013, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[2020, 1, 1, "", "BackendType"], [2020, 1, 1, "", "PyRRef"], [2020, 1, 1, "", "RpcBackendOptions"], [2020, 1, 1, "", "TensorPipeRpcBackendOptions"], [2020, 1, 1, "", "WorkerInfo"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "backend_registry"], [25, 0, 0, "-", "constants"], [25, 0, 0, "-", "functions"], [2020, 5, 1, "", "get_worker_info"], [2020, 5, 1, "", "init_rpc"], [25, 0, 0, "-", "internal"], [25, 0, 0, "-", "options"], [2020, 5, 1, "", "remote"], [2020, 5, 1, "", "rpc_async"], [2020, 5, 1, "", "rpc_sync"], [25, 0, 0, "-", "rref_proxy"], [25, 0, 0, "-", "server_process_global_profiler"], [2020, 5, 1, "", "shutdown"]], "torch.distributed.rpc.PyRRef": [[2020, 3, 1, "", "backward"], [2020, 3, 1, "", "confirmed_by_owner"], [2020, 3, 1, "", "is_owner"], [2020, 3, 1, "", "local_value"], [2020, 3, 1, "", "owner"], [2020, 3, 1, "", "owner_name"], [2020, 3, 1, "", "remote"], [2020, 3, 1, "", "rpc_async"], [2020, 3, 1, "", "rpc_sync"], [2020, 3, 1, "", "to_here"]], "torch.distributed.rpc.RpcBackendOptions": [[2020, 4, 1, "", "init_method"], [2020, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[2020, 4, 1, "", "device_maps"], [2020, 4, 1, "", "devices"], [2020, 4, 1, "", "init_method"], [2020, 4, 1, "", "num_worker_threads"], [2020, 4, 1, "", "rpc_timeout"], [2020, 3, 1, "", "set_device_map"], [2020, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[2020, 4, 1, "", "id"], [2020, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[2020, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[30, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel": [[30, 1, 1, "", "ColwiseParallel"], [30, 1, 1, "", "PrepareModuleInput"], [30, 1, 1, "", "PrepareModuleOutput"], [30, 1, 1, "", "RowwiseParallel"], [25, 0, 0, "-", "api"], [25, 0, 0, "-", "ddp"], [25, 0, 0, "-", "fsdp"], [25, 0, 0, "-", "input_reshard"], [30, 5, 1, "", "parallelize_module"], [25, 0, 0, "-", "style"]], "torch.distributions": [[31, 0, 0, "-", "bernoulli"], [31, 0, 0, "-", "beta"], [31, 0, 0, "-", "binomial"], [31, 0, 0, "-", "categorical"], [31, 0, 0, "-", "cauchy"], [31, 0, 0, "-", "chi2"], [31, 0, 0, "-", "constraint_registry"], [31, 0, 0, "-", "constraints"], [31, 0, 0, "-", "continuous_bernoulli"], [31, 0, 0, "-", "dirichlet"], [31, 0, 0, "-", "distribution"], [31, 0, 0, "-", "exp_family"], [31, 0, 0, "-", "exponential"], [31, 0, 0, "-", "fishersnedecor"], [31, 0, 0, "-", "gamma"], [31, 0, 0, "-", "geometric"], [31, 0, 0, "-", "gumbel"], [31, 0, 0, "-", "half_cauchy"], [31, 0, 0, "-", "half_normal"], [31, 0, 0, "-", "independent"], [31, 0, 0, "-", "inverse_gamma"], [31, 0, 0, "-", "kl"], [31, 0, 0, "-", "kumaraswamy"], [31, 0, 0, "-", "laplace"], [31, 0, 0, "-", "lkj_cholesky"], [31, 0, 0, "-", "log_normal"], [31, 0, 0, "-", "logistic_normal"], [31, 0, 0, "-", "lowrank_multivariate_normal"], [31, 0, 0, "-", "mixture_same_family"], [31, 0, 0, "-", "multinomial"], [31, 0, 0, "-", "multivariate_normal"], [31, 0, 0, "-", "negative_binomial"], [31, 0, 0, "-", "normal"], [31, 0, 0, "-", "one_hot_categorical"], [31, 0, 0, "-", "pareto"], [31, 0, 0, "-", "poisson"], [31, 0, 0, "-", "relaxed_bernoulli"], [31, 0, 0, "-", "relaxed_categorical"], [31, 0, 0, "-", "studentT"], [31, 0, 0, "-", "transformed_distribution"], [31, 0, 0, "-", "transforms"], [31, 0, 0, "-", "uniform"], [31, 0, 0, "-", "utils"], [31, 0, 0, "-", "von_mises"], [31, 0, 0, "-", "weibull"], [31, 0, 0, "-", "wishart"]], "torch.distributions.bernoulli": [[31, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.beta": [[31, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "concentration0"], [31, 4, 1, "", "concentration1"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.binomial": [[31, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.categorical": [[31, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[31, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.chi2": [[31, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "df"], [31, 3, 1, "", "expand"]], "torch.distributions.constraint_registry": [[31, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[31, 3, 1, "", "register"]], "torch.distributions.constraints": [[31, 1, 1, "", "Constraint"], [31, 2, 1, "", "cat"], [31, 2, 1, "", "dependent_property"], [31, 2, 1, "", "greater_than"], [31, 2, 1, "", "greater_than_eq"], [31, 2, 1, "", "half_open_interval"], [31, 2, 1, "", "independent"], [31, 2, 1, "", "integer_interval"], [31, 2, 1, "", "interval"], [31, 2, 1, "", "less_than"], [31, 2, 1, "", "multinomial"], [31, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[31, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[31, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[31, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.distribution": [[31, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[31, 4, 1, "", "arg_constraints"], [31, 4, 1, "", "batch_shape"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 4, 1, "", "event_shape"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "perplexity"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 3, 1, "", "sample_n"], [31, 3, 1, "", "set_default_validate_args"], [31, 4, 1, "", "stddev"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[31, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[31, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[31, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[31, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.gamma": [[31, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.geometric": [[31, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[31, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[31, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "scale"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[31, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "scale"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.independent": [[31, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "has_enumerate_support"], [31, 4, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.inverse_gamma": [[31, 1, 1, "", "InverseGamma"]], "torch.distributions.inverse_gamma.InverseGamma": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "concentration"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "rate"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.kl": [[31, 5, 1, "", "kl_divergence"], [31, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[31, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.laplace": [[31, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[31, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"]], "torch.distributions.log_normal": [[31, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "loc"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "scale"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[31, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "covariance_matrix"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "precision_matrix"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "scale_tril"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[31, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 4, 1, "", "component_distribution"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mixture_distribution"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[31, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"], [31, 2, 1, "", "total_count"], [31, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[31, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "covariance_matrix"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "precision_matrix"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "scale_tril"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[31, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.normal": [[31, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "stddev"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[31, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "enumerate_support"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_enumerate_support"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.pareto": [[31, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.poisson": [[31, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[31, 1, 1, "", "LogitRelaxedBernoulli"], [31, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "param_shape"], [31, 4, 1, "", "probs"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "probs"], [31, 2, 1, "", "support"], [31, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[31, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 4, 1, "", "logits"], [31, 4, 1, "", "probs"], [31, 2, 1, "", "support"], [31, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[31, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[31, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 3, 1, "", "rsample"], [31, 3, 1, "", "sample"], [31, 4, 1, "", "support"]], "torch.distributions.transforms": [[31, 1, 1, "", "AbsTransform"], [31, 1, 1, "", "AffineTransform"], [31, 1, 1, "", "CatTransform"], [31, 1, 1, "", "ComposeTransform"], [31, 1, 1, "", "CorrCholeskyTransform"], [31, 1, 1, "", "CumulativeDistributionTransform"], [31, 1, 1, "", "ExpTransform"], [31, 1, 1, "", "IndependentTransform"], [31, 1, 1, "", "LowerCholeskyTransform"], [31, 1, 1, "", "PositiveDefiniteTransform"], [31, 1, 1, "", "PowerTransform"], [31, 1, 1, "", "ReshapeTransform"], [31, 1, 1, "", "SigmoidTransform"], [31, 1, 1, "", "SoftmaxTransform"], [31, 1, 1, "", "SoftplusTransform"], [31, 1, 1, "", "StackTransform"], [31, 1, 1, "", "StickBreakingTransform"], [31, 1, 1, "", "TanhTransform"], [31, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[31, 3, 1, "", "forward_shape"], [31, 4, 1, "", "inv"], [31, 3, 1, "", "inverse_shape"], [31, 3, 1, "", "log_abs_det_jacobian"], [31, 4, 1, "", "sign"]], "torch.distributions.uniform": [[31, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "cdf"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "icdf"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "stddev"], [31, 4, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[31, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 3, 1, "", "sample"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.weibull": [[31, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[31, 2, 1, "", "arg_constraints"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.distributions.wishart": [[31, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[31, 2, 1, "", "arg_constraints"], [31, 4, 1, "", "covariance_matrix"], [31, 3, 1, "", "entropy"], [31, 3, 1, "", "expand"], [31, 2, 1, "", "has_rsample"], [31, 3, 1, "", "log_prob"], [31, 4, 1, "", "mean"], [31, 4, 1, "", "mode"], [31, 4, 1, "", "precision_matrix"], [31, 3, 1, "", "rsample"], [31, 4, 1, "", "scale_tril"], [31, 2, 1, "", "support"], [31, 4, 1, "", "variance"]], "torch.export": [[46, 1, 1, "", "Constraint"], [46, 1, 1, "", "ExportBackwardSignature"], [46, 1, 1, "", "ExportGraphSignature"], [46, 1, 1, "", "ExportedProgram"], [46, 1, 1, "", "ModuleCallEntry"], [46, 1, 1, "", "ModuleCallSignature"], [46, 0, 0, "-", "custom_obj"], [46, 5, 1, "", "dims"], [46, 0, 0, "-", "dynamic_shapes"], [46, 5, 1, "", "export"], [46, 0, 0, "-", "exported_program"], [46, 0, 0, "-", "graph_signature"], [46, 5, 1, "", "load"], [46, 5, 1, "", "register_dataclass"], [46, 5, 1, "", "save"], [46, 0, 0, "-", "unflatten"], [46, 0, 0, "-", "wrapper"]], "torch.export.ExportedProgram": [[46, 3, 1, "", "buffers"], [46, 3, 1, "", "module"], [46, 3, 1, "", "named_buffers"], [46, 3, 1, "", "named_parameters"], [46, 3, 1, "", "parameters"]], "torch.export.dynamic_shapes": [[46, 5, 1, "", "Dim"], [46, 5, 1, "", "dynamic_dim"]], "torch.export.graph_signature": [[46, 1, 1, "", "CustomObjArgument"], [46, 1, 1, "", "ExportGraphSignature"], [46, 1, 1, "", "InputKind"], [46, 1, 1, "", "InputSpec"], [46, 1, 1, "", "OutputKind"], [46, 1, 1, "", "OutputSpec"]], "torch.export.graph_signature.ExportGraphSignature": [[46, 3, 1, "", "get_replace_hook"], [46, 3, 1, "", "replace_all_uses"]], "torch.export.unflatten": [[46, 1, 1, "", "FlatArgsAdapter"], [46, 1, 1, "", "InterpreterModule"], [46, 5, 1, "", "unflatten"]], "torch.export.unflatten.FlatArgsAdapter": [[46, 3, 1, "", "adapt"]], "torch.export.wrapper": [[46, 1, 1, "", "WrapperModule"]], "torch.export.wrapper.WrapperModule": [[46, 3, 1, "", "forward"]], "torch.fft": [[1114, 5, 1, "", "fft"], [1115, 5, 1, "", "fft2"], [1116, 5, 1, "", "fftfreq"], [1117, 5, 1, "", "fftn"], [1118, 5, 1, "", "fftshift"], [1119, 5, 1, "", "hfft"], [1120, 5, 1, "", "hfft2"], [1121, 5, 1, "", "hfftn"], [1122, 5, 1, "", "ifft"], [1123, 5, 1, "", "ifft2"], [1124, 5, 1, "", "ifftn"], [1125, 5, 1, "", "ifftshift"], [1126, 5, 1, "", "ihfft"], [1127, 5, 1, "", "ihfft2"], [1128, 5, 1, "", "ihfftn"], [1129, 5, 1, "", "irfft"], [1130, 5, 1, "", "irfft2"], [1131, 5, 1, "", "irfftn"], [1132, 5, 1, "", "rfft"], [1133, 5, 1, "", "rfft2"], [1134, 5, 1, "", "rfftfreq"], [1135, 5, 1, "", "rfftn"]], "torch.func": [[1155, 5, 1, "", "functional_call"], [1156, 5, 1, "", "functionalize"], [1157, 5, 1, "", "grad"], [1158, 5, 1, "", "grad_and_value"], [1159, 5, 1, "", "hessian"], [1160, 5, 1, "", "jacfwd"], [1161, 5, 1, "", "jacrev"], [1162, 5, 1, "", "jvp"], [1163, 5, 1, "", "linearize"], [1164, 5, 1, "", "replace_all_batch_norm_modules_"], [1165, 5, 1, "", "stack_module_state"], [1166, 5, 1, "", "vjp"], [1167, 5, 1, "", "vmap"]], "torch.futures": [[57, 1, 1, "", "Future"], [57, 5, 1, "", "collect_all"], [57, 5, 1, "", "wait_all"]], "torch.futures.Future": [[57, 3, 1, "", "add_done_callback"], [57, 3, 1, "", "done"], [57, 3, 1, "", "set_exception"], [57, 3, 1, "", "set_result"], [57, 3, 1, "", "then"], [57, 3, 1, "", "value"], [57, 3, 1, "", "wait"]], "torch.fx": [[58, 1, 1, "", "Graph"], [58, 1, 1, "", "GraphModule"], [58, 1, 1, "", "Interpreter"], [58, 1, 1, "", "Node"], [58, 1, 1, "", "Proxy"], [58, 1, 1, "", "Tracer"], [58, 1, 1, "", "Transformer"], [58, 0, 0, "-", "annotate"], [58, 0, 0, "-", "config"], [58, 0, 0, "-", "experimental"], [58, 0, 0, "-", "graph"], [58, 0, 0, "-", "graph_module"], [58, 0, 0, "-", "immutable_collections"], [58, 0, 0, "-", "interpreter"], [58, 0, 0, "-", "node"], [58, 0, 0, "-", "operator_schemas"], [58, 0, 0, "-", "passes"], [58, 0, 0, "-", "proxy"], [58, 5, 1, "", "replace_pattern"], [58, 0, 0, "-", "subgraph_rewriter"], [58, 5, 1, "", "symbolic_trace"], [58, 0, 0, "-", "tensor_type"], [58, 0, 0, "-", "traceback"], [58, 5, 1, "", "wrap"]], "torch.fx.Graph": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "call_function"], [58, 3, 1, "", "call_method"], [58, 3, 1, "", "call_module"], [58, 3, 1, "", "create_node"], [58, 3, 1, "", "eliminate_dead_code"], [58, 3, 1, "", "erase_node"], [58, 3, 1, "", "get_attr"], [58, 3, 1, "", "graph_copy"], [58, 3, 1, "", "inserting_after"], [58, 3, 1, "", "inserting_before"], [58, 3, 1, "", "lint"], [58, 3, 1, "", "node_copy"], [58, 4, 1, "", "nodes"], [58, 3, 1, "", "on_generate_code"], [58, 3, 1, "", "output"], [58, 3, 1, "", "placeholder"], [58, 3, 1, "", "print_tabular"], [58, 3, 1, "", "process_inputs"], [58, 3, 1, "", "process_outputs"], [58, 3, 1, "", "python_code"], [58, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "add_submodule"], [58, 4, 1, "", "code"], [58, 3, 1, "", "delete_all_unused_submodules"], [58, 3, 1, "", "delete_submodule"], [58, 4, 1, "", "graph"], [58, 3, 1, "", "print_readable"], [58, 3, 1, "", "recompile"], [58, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[58, 3, 1, "", "boxed_run"], [58, 3, 1, "", "call_function"], [58, 3, 1, "", "call_method"], [58, 3, 1, "", "call_module"], [58, 3, 1, "", "fetch_args_kwargs_from_env"], [58, 3, 1, "", "fetch_attr"], [58, 3, 1, "", "get_attr"], [58, 3, 1, "", "map_nodes_to_values"], [58, 3, 1, "", "output"], [58, 3, 1, "", "placeholder"], [58, 3, 1, "", "run"], [58, 3, 1, "", "run_node"]], "torch.fx.Node": [[58, 4, 1, "", "all_input_nodes"], [58, 3, 1, "", "append"], [58, 4, 1, "", "args"], [58, 3, 1, "", "format_node"], [58, 3, 1, "", "insert_arg"], [58, 3, 1, "", "is_impure"], [58, 4, 1, "", "kwargs"], [58, 4, 1, "", "next"], [58, 3, 1, "", "normalized_arguments"], [58, 3, 1, "", "prepend"], [58, 4, 1, "", "prev"], [58, 3, 1, "", "replace_all_uses_with"], [58, 3, 1, "", "replace_input_with"], [58, 4, 1, "", "stack_trace"], [58, 3, 1, "", "update_arg"], [58, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[58, 3, 1, "", "call_module"], [58, 3, 1, "", "create_arg"], [58, 3, 1, "", "create_args_for_root"], [58, 3, 1, "", "create_node"], [58, 3, 1, "", "create_proxy"], [58, 3, 1, "", "getattr"], [58, 3, 1, "", "is_leaf_module"], [58, 3, 1, "", "iter"], [58, 3, 1, "", "keys"], [58, 3, 1, "", "path_of_module"], [58, 3, 1, "", "proxy"], [58, 3, 1, "", "to_bool"], [58, 3, 1, "", "trace"]], "torch.fx.Transformer": [[58, 3, 1, "", "call_function"], [58, 3, 1, "", "call_module"], [58, 3, 1, "", "get_attr"], [58, 3, 1, "", "placeholder"], [58, 3, 1, "", "transform"]], "torch.fx.experimental": [[58, 0, 0, "-", "accelerator_partitioner"], [58, 0, 0, "-", "const_fold"], [58, 0, 0, "-", "debug"], [58, 0, 0, "-", "graph_gradual_typechecker"], [58, 0, 0, "-", "merge_matmul"], [58, 0, 0, "-", "meta_tracer"], [58, 0, 0, "-", "migrate_gradual_types"], [58, 0, 0, "-", "normalize"], [58, 0, 0, "-", "optimization"], [58, 0, 0, "-", "partitioner_utils"], [58, 0, 0, "-", "proxy_tensor"], [58, 0, 0, "-", "recording"], [58, 0, 0, "-", "refinement_types"], [58, 0, 0, "-", "rewriter"], [58, 0, 0, "-", "schema_type_annotation"], [58, 0, 0, "-", "sym_node"], [59, 0, 0, "-", "symbolic_shapes"], [58, 0, 0, "-", "unification"], [58, 0, 0, "-", "unify_refinements"], [58, 0, 0, "-", "validator"]], "torch.fx.experimental.migrate_gradual_types": [[58, 0, 0, "-", "constraint"], [58, 0, 0, "-", "constraint_generator"], [58, 0, 0, "-", "constraint_transformation"], [58, 0, 0, "-", "operation"], [58, 0, 0, "-", "transform_to_z3"], [58, 0, 0, "-", "util"], [58, 0, 0, "-", "z3_types"]], "torch.fx.experimental.symbolic_shapes": [[1168, 1, 1, "", "DimConstraints"], [1169, 1, 1, "", "DimDynamic"], [1170, 1, 1, "", "EqualityConstraint"], [1171, 1, 1, "", "RelaxedUnspecConstraint"], [1172, 1, 1, "", "ShapeEnv"], [1173, 1, 1, "", "StatefulSymbolicContext"], [1174, 1, 1, "", "StatelessSymbolicContext"], [1175, 1, 1, "", "StrictMinMaxConstraint"], [1176, 1, 1, "", "SubclassSymbolicContext"], [1177, 1, 1, "", "SymbolicContext"], [1178, 5, 1, "", "canonicalize_bool_expr"], [1179, 5, 1, "", "constrain_range"], [1180, 5, 1, "", "constrain_unify"], [1181, 5, 1, "", "definitely_false"], [1182, 5, 1, "", "definitely_true"], [1183, 5, 1, "", "guard_size_oblivious"], [1184, 5, 1, "", "has_free_symbols"], [1185, 5, 1, "", "hint_int"], [1186, 5, 1, "", "is_concrete_bool"], [1187, 5, 1, "", "is_concrete_int"], [1188, 5, 1, "", "parallel_and"], [1189, 5, 1, "", "parallel_or"], [1190, 5, 1, "", "statically_known_true"], [1191, 5, 1, "", "sym_eq"]], "torch.fx.experimental.symbolic_shapes.DimConstraints": [[1168, 3, 1, "", "add"], [1168, 3, 1, "", "add_equality"], [1168, 3, 1, "", "forced_specializations"], [1168, 3, 1, "", "prettify_results"], [1168, 3, 1, "", "remove_redundant_dynamic_results"], [1168, 3, 1, "", "rewrite_with_congruences"], [1168, 3, 1, "", "solve"]], "torch.fx.experimental.symbolic_shapes.ShapeEnv": [[1172, 3, 1, "", "bind_symbols"], [1172, 3, 1, "", "bound_sympy"], [1172, 3, 1, "", "check_equal"], [1172, 3, 1, "", "cleanup"], [1172, 3, 1, "", "create_symbol"], [1172, 3, 1, "", "create_symbolic_sizes_strides_storage_offset"], [1172, 3, 1, "", "create_symboolnode"], [1172, 3, 1, "", "create_symintnode"], [1172, 3, 1, "", "create_unbacked_symbool"], [1172, 3, 1, "", "create_unbacked_symfloat"], [1172, 3, 1, "", "create_unbacked_symint"], [1172, 3, 1, "", "create_unspecified_symbol"], [1172, 3, 1, "", "create_unspecified_symint_and_symbol"], [1172, 3, 1, "", "defer_runtime_assert"], [1172, 3, 1, "", "evaluate_expr"], [1172, 3, 1, "", "evaluate_guards_expression"], [1172, 3, 1, "", "evaluate_guards_for_args"], [1172, 3, 1, "", "format_guards"], [1172, 3, 1, "", "freeze"], [1172, 3, 1, "", "get_nontrivial_guards"], [1172, 3, 1, "", "get_shape_groups"], [1172, 3, 1, "", "is_unbacked_symint"], [1172, 3, 1, "", "produce_guards"], [1172, 3, 1, "", "produce_guards_expression"], [1172, 3, 1, "", "replace"], [1172, 3, 1, "", "simplify"], [1172, 3, 1, "", "size_hint"], [1172, 3, 1, "", "suppress_guards"]], "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint": [[1175, 3, 1, "", "render"]], "torch.fx.experimental.unification": [[58, 0, 0, "-", "core"], [58, 0, 0, "-", "dispatch"], [58, 0, 0, "-", "match"], [58, 0, 0, "-", "more"], [58, 0, 0, "-", "multipledispatch"], [58, 0, 0, "-", "unification_tools"], [58, 0, 0, "-", "utils"], [58, 0, 0, "-", "variable"]], "torch.fx.experimental.unification.multipledispatch": [[58, 0, 0, "-", "conflict"], [58, 0, 0, "-", "core"], [58, 0, 0, "-", "dispatcher"], [58, 0, 0, "-", "utils"], [58, 0, 0, "-", "variadic"]], "torch.fx.passes": [[58, 0, 0, "-", "annotate_getitem_nodes"], [58, 0, 0, "-", "backends"], [58, 0, 0, "-", "dialect"], [58, 0, 0, "-", "fake_tensor_prop"], [58, 0, 0, "-", "graph_drawer"], [58, 0, 0, "-", "graph_manipulation"], [58, 0, 0, "-", "infra"], [58, 0, 0, "-", "net_min_base"], [58, 0, 0, "-", "operator_support"], [58, 0, 0, "-", "param_fetch"], [58, 0, 0, "-", "pass_manager"], [58, 0, 0, "-", "reinplace"], [58, 0, 0, "-", "shape_prop"], [58, 0, 0, "-", "split_module"], [58, 0, 0, "-", "split_utils"], [58, 0, 0, "-", "splitter_base"], [58, 0, 0, "-", "tests"], [58, 0, 0, "-", "tools_common"], [58, 0, 0, "-", "utils"]], "torch.fx.passes.backends": [[58, 0, 0, "-", "cudagraphs"]], "torch.fx.passes.dialect": [[58, 0, 0, "-", "common"]], "torch.fx.passes.dialect.common": [[58, 0, 0, "-", "cse_pass"]], "torch.fx.passes.infra": [[58, 0, 0, "-", "partitioner"], [58, 0, 0, "-", "pass_base"], [58, 0, 0, "-", "pass_manager"]], "torch.fx.passes.tests": [[58, 0, 0, "-", "test_pass_manager"]], "torch.fx.passes.utils": [[58, 0, 0, "-", "common"], [58, 0, 0, "-", "fuser_utils"], [58, 0, 0, "-", "matcher_utils"], [58, 0, 0, "-", "matcher_with_name_node_map_utils"], [58, 0, 0, "-", "source_matcher_utils"]], "torch.hub": [[1959, 5, 1, "", "download_url_to_file"], [1959, 5, 1, "", "get_dir"], [1959, 5, 1, "", "help"], [1959, 5, 1, "", "list"], [1959, 5, 1, "", "load"], [1959, 5, 1, "", "load_state_dict_from_url"], [1959, 5, 1, "", "set_dir"]], "torch.jit": [[1248, 1, 1, "", "Attribute"], [1249, 1, 1, "", "ScriptFunction"], [1250, 1, 1, "", "ScriptModule"], [1251, 5, 1, "", "annotate"], [1961, 0, 0, "-", "annotations"], [1252, 5, 1, "", "enable_onednn_fusion"], [1961, 5, 1, "", "export"], [1253, 5, 1, "", "fork"], [1254, 5, 1, "", "freeze"], [1961, 0, 0, "-", "frontend"], [1961, 0, 0, "-", "generate_bytecode"], [1255, 5, 1, "", "ignore"], [1256, 5, 1, "", "interface"], [1963, 5, 1, "", "is_scripting"], [1963, 5, 1, "", "is_tracing"], [1257, 5, 1, "", "isinstance"], [1258, 5, 1, "", "load"], [1961, 0, 0, "-", "mobile"], [1259, 5, 1, "", "onednn_fusion_enabled"], [1260, 5, 1, "", "optimize_for_inference"], [1961, 0, 0, "-", "quantized"], [1261, 5, 1, "", "save"], [1262, 5, 1, "", "script"], [1263, 5, 1, "", "script_if_tracing"], [1264, 5, 1, "", "set_fusion_strategy"], [1265, 1, 1, "", "strict_fusion"], [1962, 0, 0, "-", "supported_ops"], [1266, 5, 1, "", "trace"], [1267, 5, 1, "", "trace_module"], [1966, 0, 0, "-", "unsupported_tensor_ops"], [1268, 5, 1, "", "unused"], [1269, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1248, 3, 1, "", "count"], [1248, 3, 1, "", "index"], [1248, 2, 1, "", "type"], [1248, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1249, 3, 1, "", "get_debug_state"], [1249, 3, 1, "", "save"], [1249, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1250, 3, 1, "", "add_module"], [1250, 3, 1, "", "apply"], [1250, 3, 1, "", "bfloat16"], [1250, 3, 1, "", "buffers"], [1250, 3, 1, "", "children"], [1250, 4, 1, "", "code"], [1250, 4, 1, "", "code_with_constants"], [1250, 3, 1, "", "compile"], [1250, 3, 1, "", "cpu"], [1250, 3, 1, "", "cuda"], [1250, 3, 1, "", "double"], [1250, 3, 1, "", "eval"], [1250, 3, 1, "", "extra_repr"], [1250, 3, 1, "", "float"], [1250, 3, 1, "", "get_buffer"], [1250, 3, 1, "", "get_extra_state"], [1250, 3, 1, "", "get_parameter"], [1250, 3, 1, "", "get_submodule"], [1250, 4, 1, "", "graph"], [1250, 3, 1, "", "half"], [1250, 4, 1, "", "inlined_graph"], [1250, 3, 1, "", "ipu"], [1250, 3, 1, "", "load_state_dict"], [1250, 3, 1, "", "modules"], [1250, 3, 1, "", "named_buffers"], [1250, 3, 1, "", "named_children"], [1250, 3, 1, "", "named_modules"], [1250, 3, 1, "", "named_parameters"], [1250, 3, 1, "", "parameters"], [1250, 3, 1, "", "register_backward_hook"], [1250, 3, 1, "", "register_buffer"], [1250, 3, 1, "", "register_forward_hook"], [1250, 3, 1, "", "register_forward_pre_hook"], [1250, 3, 1, "", "register_full_backward_hook"], [1250, 3, 1, "", "register_full_backward_pre_hook"], [1250, 3, 1, "", "register_load_state_dict_post_hook"], [1250, 3, 1, "", "register_module"], [1250, 3, 1, "", "register_parameter"], [1250, 3, 1, "", "register_state_dict_pre_hook"], [1250, 3, 1, "", "requires_grad_"], [1250, 3, 1, "", "save"], [1250, 3, 1, "", "set_extra_state"], [1250, 3, 1, "", "share_memory"], [1250, 3, 1, "", "state_dict"], [1250, 3, 1, "", "to"], [1250, 3, 1, "", "to_empty"], [1250, 3, 1, "", "train"], [1250, 3, 1, "", "type"], [1250, 3, 1, "", "xpu"], [1250, 3, 1, "", "zero_grad"]], "torch.library": [[1968, 1, 1, "", "Library"], [1968, 5, 1, "", "define"], [1968, 5, 1, "", "fallthrough_kernel"], [1968, 5, 1, "", "get_ctx"], [1968, 5, 1, "", "impl"], [1968, 5, 1, "", "impl_abstract"]], "torch.library.Library": [[1968, 3, 1, "", "define"], [1968, 3, 1, "", "impl"]], "torch.linalg": [[1280, 5, 1, "", "cholesky"], [1281, 5, 1, "", "cholesky_ex"], [1282, 5, 1, "", "cond"], [1283, 5, 1, "", "cross"], [1284, 5, 1, "", "det"], [1285, 5, 1, "", "diagonal"], [1286, 5, 1, "", "eig"], [1287, 5, 1, "", "eigh"], [1288, 5, 1, "", "eigvals"], [1289, 5, 1, "", "eigvalsh"], [1290, 5, 1, "", "householder_product"], [1291, 5, 1, "", "inv"], [1292, 5, 1, "", "inv_ex"], [1293, 5, 1, "", "ldl_factor"], [1294, 5, 1, "", "ldl_factor_ex"], [1295, 5, 1, "", "ldl_solve"], [1296, 5, 1, "", "lstsq"], [1297, 5, 1, "", "lu"], [1298, 5, 1, "", "lu_factor"], [1299, 5, 1, "", "lu_factor_ex"], [1300, 5, 1, "", "lu_solve"], [1301, 5, 1, "", "matmul"], [1302, 5, 1, "", "matrix_exp"], [1303, 5, 1, "", "matrix_norm"], [1304, 5, 1, "", "matrix_power"], [1305, 5, 1, "", "matrix_rank"], [1306, 5, 1, "", "multi_dot"], [1307, 5, 1, "", "norm"], [1308, 5, 1, "", "pinv"], [1309, 5, 1, "", "qr"], [1310, 5, 1, "", "slogdet"], [1311, 5, 1, "", "solve"], [1312, 5, 1, "", "solve_ex"], [1313, 5, 1, "", "solve_triangular"], [1314, 5, 1, "", "svd"], [1315, 5, 1, "", "svdvals"], [1316, 5, 1, "", "tensorinv"], [1317, 5, 1, "", "tensorsolve"], [1318, 5, 1, "", "vander"], [1319, 5, 1, "", "vecdot"], [1320, 5, 1, "", "vector_norm"]], "torch.masked": [[1971, 0, 0, "-", "maskedtensor"]], "torch.masked.maskedtensor": [[1971, 0, 0, "-", "binary"], [1971, 0, 0, "-", "core"], [1971, 0, 0, "-", "creation"], [1971, 0, 0, "-", "passthrough"], [1971, 0, 0, "-", "reductions"], [1971, 0, 0, "-", "unary"]], "torch.monitor": [[1975, 1, 1, "", "Aggregation"], [1975, 1, 1, "", "Event"], [1975, 1, 1, "", "EventHandlerHandle"], [1975, 1, 1, "", "Stat"], [1975, 1, 1, "", "TensorboardEventHandler"], [1975, 1, 1, "", "data_value_t"], [1975, 5, 1, "", "log_event"], [1975, 5, 1, "", "register_event_handler"], [1975, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1975, 4, 1, "", "name"]], "torch.monitor.Event": [[1975, 3, 1, "", "__init__"], [1975, 4, 1, "", "data"], [1975, 4, 1, "", "name"], [1975, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1975, 3, 1, "", "__init__"], [1975, 3, 1, "", "add"], [1975, 4, 1, "", "count"], [1975, 3, 1, "", "get"], [1975, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1975, 3, 1, "", "__init__"]], "torch.mps": [[1359, 5, 1, "", "current_allocated_memory"], [1360, 5, 1, "", "driver_allocated_memory"], [1361, 5, 1, "", "empty_cache"], [1976, 0, 0, "-", "event"], [1363, 5, 1, "", "get_rng_state"], [1364, 5, 1, "", "manual_seed"], [1976, 0, 0, "-", "profiler"], [1368, 5, 1, "", "seed"], [1369, 5, 1, "", "set_per_process_memory_fraction"], [1370, 5, 1, "", "set_rng_state"], [1371, 5, 1, "", "synchronize"]], "torch.mps.event": [[1362, 1, 1, "", "Event"]], "torch.mps.event.Event": [[1362, 3, 1, "", "elapsed_time"], [1362, 3, 1, "", "query"], [1362, 3, 1, "", "record"], [1362, 3, 1, "", "synchronize"], [1362, 3, 1, "", "wait"]], "torch.mps.profiler": [[1365, 5, 1, "", "profile"], [1366, 5, 1, "", "start"], [1367, 5, 1, "", "stop"]], "torch.multiprocessing": [[1977, 1, 1, "", "SpawnContext"], [1977, 5, 1, "", "get_all_sharing_strategies"], [1977, 5, 1, "", "get_sharing_strategy"], [1977, 0, 0, "-", "pool"], [1977, 0, 0, "-", "queue"], [1977, 0, 0, "-", "reductions"], [1977, 5, 1, "", "set_sharing_strategy"], [1977, 0, 0, "-", "spawn"]], "torch.multiprocessing.SpawnContext": [[1977, 3, 1, "", "join"]], "torch.multiprocessing.spawn": [[1977, 5, 1, "", "spawn"]], "torch.nested": [[1980, 5, 1, "", "as_nested_tensor"], [1980, 5, 1, "", "nested_tensor"], [1980, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1389, 1, 1, "", "AdaptiveAvgPool1d"], [1390, 1, 1, "", "AdaptiveAvgPool2d"], [1391, 1, 1, "", "AdaptiveAvgPool3d"], [1392, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1393, 1, 1, "", "AdaptiveMaxPool1d"], [1394, 1, 1, "", "AdaptiveMaxPool2d"], [1395, 1, 1, "", "AdaptiveMaxPool3d"], [1396, 1, 1, "", "AlphaDropout"], [1397, 1, 1, "", "AvgPool1d"], [1398, 1, 1, "", "AvgPool2d"], [1399, 1, 1, "", "AvgPool3d"], [1400, 1, 1, "", "BCELoss"], [1401, 1, 1, "", "BCEWithLogitsLoss"], [1402, 1, 1, "", "BatchNorm1d"], [1403, 1, 1, "", "BatchNorm2d"], [1404, 1, 1, "", "BatchNorm3d"], [1405, 1, 1, "", "Bilinear"], [1406, 1, 1, "", "CELU"], [1407, 1, 1, "", "CTCLoss"], [1408, 1, 1, "", "ChannelShuffle"], [1409, 1, 1, "", "CircularPad1d"], [1410, 1, 1, "", "CircularPad2d"], [1411, 1, 1, "", "CircularPad3d"], [1412, 1, 1, "", "ConstantPad1d"], [1413, 1, 1, "", "ConstantPad2d"], [1414, 1, 1, "", "ConstantPad3d"], [1415, 1, 1, "", "Conv1d"], [1416, 1, 1, "", "Conv2d"], [1417, 1, 1, "", "Conv3d"], [1418, 1, 1, "", "ConvTranspose1d"], [1419, 1, 1, "", "ConvTranspose2d"], [1420, 1, 1, "", "ConvTranspose3d"], [1421, 1, 1, "", "CosineEmbeddingLoss"], [1422, 1, 1, "", "CosineSimilarity"], [1423, 1, 1, "", "CrossEntropyLoss"], [1424, 1, 1, "", "DataParallel"], [1425, 1, 1, "", "Dropout"], [1426, 1, 1, "", "Dropout1d"], [1427, 1, 1, "", "Dropout2d"], [1428, 1, 1, "", "Dropout3d"], [1429, 1, 1, "", "ELU"], [1430, 1, 1, "", "Embedding"], [1431, 1, 1, "", "EmbeddingBag"], [1432, 1, 1, "", "FeatureAlphaDropout"], [1433, 1, 1, "", "Flatten"], [1434, 1, 1, "", "Fold"], [1435, 1, 1, "", "FractionalMaxPool2d"], [1436, 1, 1, "", "FractionalMaxPool3d"], [1437, 1, 1, "", "GELU"], [1438, 1, 1, "", "GLU"], [1439, 1, 1, "", "GRU"], [1440, 1, 1, "", "GRUCell"], [1441, 1, 1, "", "GaussianNLLLoss"], [1442, 1, 1, "", "GroupNorm"], [1443, 1, 1, "", "Hardshrink"], [1444, 1, 1, "", "Hardsigmoid"], [1445, 1, 1, "", "Hardswish"], [1446, 1, 1, "", "Hardtanh"], [1447, 1, 1, "", "HingeEmbeddingLoss"], [1448, 1, 1, "", "HuberLoss"], [1449, 1, 1, "", "Identity"], [1450, 1, 1, "", "InstanceNorm1d"], [1451, 1, 1, "", "InstanceNorm2d"], [1452, 1, 1, "", "InstanceNorm3d"], [1453, 1, 1, "", "KLDivLoss"], [1454, 1, 1, "", "L1Loss"], [1455, 1, 1, "", "LPPool1d"], [1456, 1, 1, "", "LPPool2d"], [1457, 1, 1, "", "LPPool3d"], [1458, 1, 1, "", "LSTM"], [1459, 1, 1, "", "LSTMCell"], [1460, 1, 1, "", "LayerNorm"], [1461, 1, 1, "", "LazyBatchNorm1d"], [1462, 1, 1, "", "LazyBatchNorm2d"], [1463, 1, 1, "", "LazyBatchNorm3d"], [1464, 1, 1, "", "LazyConv1d"], [1465, 1, 1, "", "LazyConv2d"], [1466, 1, 1, "", "LazyConv3d"], [1467, 1, 1, "", "LazyConvTranspose1d"], [1468, 1, 1, "", "LazyConvTranspose2d"], [1469, 1, 1, "", "LazyConvTranspose3d"], [1470, 1, 1, "", "LazyInstanceNorm1d"], [1471, 1, 1, "", "LazyInstanceNorm2d"], [1472, 1, 1, "", "LazyInstanceNorm3d"], [1473, 1, 1, "", "LazyLinear"], [1474, 1, 1, "", "LeakyReLU"], [1475, 1, 1, "", "Linear"], [1476, 1, 1, "", "LocalResponseNorm"], [1477, 1, 1, "", "LogSigmoid"], [1478, 1, 1, "", "LogSoftmax"], [1479, 1, 1, "", "MSELoss"], [1480, 1, 1, "", "MarginRankingLoss"], [1481, 1, 1, "", "MaxPool1d"], [1482, 1, 1, "", "MaxPool2d"], [1483, 1, 1, "", "MaxPool3d"], [1484, 1, 1, "", "MaxUnpool1d"], [1485, 1, 1, "", "MaxUnpool2d"], [1486, 1, 1, "", "MaxUnpool3d"], [1487, 1, 1, "", "Mish"], [1488, 1, 1, "", "Module"], [1489, 1, 1, "", "ModuleDict"], [1490, 1, 1, "", "ModuleList"], [1491, 1, 1, "", "MultiLabelMarginLoss"], [1492, 1, 1, "", "MultiLabelSoftMarginLoss"], [1493, 1, 1, "", "MultiMarginLoss"], [1494, 1, 1, "", "MultiheadAttention"], [1495, 1, 1, "", "NLLLoss"], [1496, 1, 1, "", "PReLU"], [1497, 1, 1, "", "PairwiseDistance"], [1498, 1, 1, "", "ParameterDict"], [1499, 1, 1, "", "ParameterList"], [1500, 1, 1, "", "PixelShuffle"], [1501, 1, 1, "", "PixelUnshuffle"], [1502, 1, 1, "", "PoissonNLLLoss"], [1503, 1, 1, "", "RNN"], [1504, 1, 1, "", "RNNBase"], [1505, 1, 1, "", "RNNCell"], [1506, 1, 1, "", "RReLU"], [1507, 1, 1, "", "ReLU"], [1508, 1, 1, "", "ReLU6"], [1509, 1, 1, "", "ReflectionPad1d"], [1510, 1, 1, "", "ReflectionPad2d"], [1511, 1, 1, "", "ReflectionPad3d"], [1512, 1, 1, "", "ReplicationPad1d"], [1513, 1, 1, "", "ReplicationPad2d"], [1514, 1, 1, "", "ReplicationPad3d"], [1515, 1, 1, "", "SELU"], [1516, 1, 1, "", "Sequential"], [1517, 1, 1, "", "SiLU"], [1518, 1, 1, "", "Sigmoid"], [1519, 1, 1, "", "SmoothL1Loss"], [1520, 1, 1, "", "SoftMarginLoss"], [1521, 1, 1, "", "Softmax"], [1522, 1, 1, "", "Softmax2d"], [1523, 1, 1, "", "Softmin"], [1524, 1, 1, "", "Softplus"], [1525, 1, 1, "", "Softshrink"], [1526, 1, 1, "", "Softsign"], [1527, 1, 1, "", "SyncBatchNorm"], [1528, 1, 1, "", "Tanh"], [1529, 1, 1, "", "Tanhshrink"], [1530, 1, 1, "", "Threshold"], [1531, 1, 1, "", "Transformer"], [1532, 1, 1, "", "TransformerDecoder"], [1533, 1, 1, "", "TransformerDecoderLayer"], [1534, 1, 1, "", "TransformerEncoder"], [1535, 1, 1, "", "TransformerEncoderLayer"], [1536, 1, 1, "", "TripletMarginLoss"], [1537, 1, 1, "", "TripletMarginWithDistanceLoss"], [1538, 1, 1, "", "Unflatten"], [1539, 1, 1, "", "Unfold"], [1540, 1, 1, "", "Upsample"], [1541, 1, 1, "", "UpsamplingBilinear2d"], [1542, 1, 1, "", "UpsamplingNearest2d"], [1543, 1, 1, "", "ZeroPad1d"], [1544, 1, 1, "", "ZeroPad2d"], [1545, 1, 1, "", "ZeroPad3d"], [1982, 0, 0, "-", "attention"], [1981, 0, 0, "-", "backends"], [1981, 0, 0, "-", "common_types"], [1981, 0, 0, "-", "cpp"], [1981, 0, 0, "-", "functional"], [1981, 0, 0, "-", "grad"], [1981, 0, 0, "-", "init"], [2018, 0, 0, "-", "intrinsic"], [1981, 0, 0, "-", "modules"], [1981, 0, 0, "-", "parallel"], [1981, 0, 0, "-", "parameter"], [2018, 0, 0, "-", "qat"], [2018, 0, 0, "-", "quantizable"], [2018, 0, 0, "-", "quantized"], [1981, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1392, 3, 1, "", "log_prob"], [1392, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1430, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1431, 3, 1, "", "forward"], [1431, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1461, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1462, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1463, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1464, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1465, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1466, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1467, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1468, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1469, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1470, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1471, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1472, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1473, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1488, 3, 1, "", "add_module"], [1488, 3, 1, "", "apply"], [1488, 3, 1, "", "bfloat16"], [1488, 3, 1, "", "buffers"], [1488, 3, 1, "", "children"], [1488, 3, 1, "", "compile"], [1488, 3, 1, "", "cpu"], [1488, 3, 1, "", "cuda"], [1488, 3, 1, "", "double"], [1488, 3, 1, "", "eval"], [1488, 3, 1, "", "extra_repr"], [1488, 3, 1, "", "float"], [1488, 3, 1, "", "forward"], [1488, 3, 1, "", "get_buffer"], [1488, 3, 1, "", "get_extra_state"], [1488, 3, 1, "", "get_parameter"], [1488, 3, 1, "", "get_submodule"], [1488, 3, 1, "", "half"], [1488, 3, 1, "", "ipu"], [1488, 3, 1, "", "load_state_dict"], [1488, 3, 1, "", "modules"], [1488, 3, 1, "", "named_buffers"], [1488, 3, 1, "", "named_children"], [1488, 3, 1, "", "named_modules"], [1488, 3, 1, "", "named_parameters"], [1488, 3, 1, "", "parameters"], [1488, 3, 1, "", "register_backward_hook"], [1488, 3, 1, "", "register_buffer"], [1488, 3, 1, "", "register_forward_hook"], [1488, 3, 1, "", "register_forward_pre_hook"], [1488, 3, 1, "", "register_full_backward_hook"], [1488, 3, 1, "", "register_full_backward_pre_hook"], [1488, 3, 1, "", "register_load_state_dict_post_hook"], [1488, 3, 1, "", "register_module"], [1488, 3, 1, "", "register_parameter"], [1488, 3, 1, "", "register_state_dict_pre_hook"], [1488, 3, 1, "", "requires_grad_"], [1488, 3, 1, "", "set_extra_state"], [1488, 3, 1, "", "share_memory"], [1488, 3, 1, "", "state_dict"], [1488, 3, 1, "", "to"], [1488, 3, 1, "", "to_empty"], [1488, 3, 1, "", "train"], [1488, 3, 1, "", "type"], [1488, 3, 1, "", "xpu"], [1488, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1489, 3, 1, "", "clear"], [1489, 3, 1, "", "items"], [1489, 3, 1, "", "keys"], [1489, 3, 1, "", "pop"], [1489, 3, 1, "", "update"], [1489, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1490, 3, 1, "", "append"], [1490, 3, 1, "", "extend"], [1490, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1494, 3, 1, "", "forward"], [1494, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1498, 3, 1, "", "clear"], [1498, 3, 1, "", "copy"], [1498, 3, 1, "", "fromkeys"], [1498, 3, 1, "", "get"], [1498, 3, 1, "", "items"], [1498, 3, 1, "", "keys"], [1498, 3, 1, "", "pop"], [1498, 3, 1, "", "popitem"], [1498, 3, 1, "", "setdefault"], [1498, 3, 1, "", "update"], [1498, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1499, 3, 1, "", "append"], [1499, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1504, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1516, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1527, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1531, 3, 1, "", "forward"], [1531, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1532, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1533, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1534, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1535, 3, 1, "", "forward"]], "torch.nn.attention": [[1546, 1, 1, "", "SDPBackend"], [1983, 0, 0, "-", "bias"], [1551, 5, 1, "", "sdpa_kernel"]], "torch.nn.attention.SDPBackend": [[1546, 4, 1, "", "name"]], "torch.nn.attention.bias": [[1547, 1, 1, "", "CausalBias"], [1548, 1, 1, "", "CausalVariant"], [1549, 5, 1, "", "causal_lower_right"], [1550, 5, 1, "", "causal_upper_left"]], "torch.nn.backends": [[1981, 0, 0, "-", "thnn"]], "torch.nn.functional": [[1552, 5, 1, "", "adaptive_avg_pool1d"], [1553, 5, 1, "", "adaptive_avg_pool2d"], [1554, 5, 1, "", "adaptive_avg_pool3d"], [1555, 5, 1, "", "adaptive_max_pool1d"], [1556, 5, 1, "", "adaptive_max_pool2d"], [1557, 5, 1, "", "adaptive_max_pool3d"], [1558, 5, 1, "", "affine_grid"], [1559, 5, 1, "", "alpha_dropout"], [1560, 5, 1, "", "avg_pool1d"], [1561, 5, 1, "", "avg_pool2d"], [1562, 5, 1, "", "avg_pool3d"], [1563, 5, 1, "", "batch_norm"], [1564, 5, 1, "", "bilinear"], [1565, 5, 1, "", "binary_cross_entropy"], [1566, 5, 1, "", "binary_cross_entropy_with_logits"], [1567, 5, 1, "", "celu"], [1568, 5, 1, "", "conv1d"], [1569, 5, 1, "", "conv2d"], [1570, 5, 1, "", "conv3d"], [1571, 5, 1, "", "conv_transpose1d"], [1572, 5, 1, "", "conv_transpose2d"], [1573, 5, 1, "", "conv_transpose3d"], [1574, 5, 1, "", "cosine_embedding_loss"], [1575, 5, 1, "", "cosine_similarity"], [1576, 5, 1, "", "cross_entropy"], [1577, 5, 1, "", "ctc_loss"], [1578, 5, 1, "", "dropout"], [1579, 5, 1, "", "dropout1d"], [1580, 5, 1, "", "dropout2d"], [1581, 5, 1, "", "dropout3d"], [1582, 5, 1, "", "elu"], [1583, 5, 1, "", "elu_"], [1584, 5, 1, "", "embedding"], [1585, 5, 1, "", "embedding_bag"], [1586, 5, 1, "", "feature_alpha_dropout"], [1587, 5, 1, "", "fold"], [1588, 5, 1, "", "fractional_max_pool2d"], [1589, 5, 1, "", "fractional_max_pool3d"], [1590, 5, 1, "", "gaussian_nll_loss"], [1591, 5, 1, "", "gelu"], [1592, 5, 1, "", "glu"], [1593, 5, 1, "", "grid_sample"], [1594, 5, 1, "", "group_norm"], [1595, 5, 1, "", "gumbel_softmax"], [1596, 5, 1, "", "hardshrink"], [1597, 5, 1, "", "hardsigmoid"], [1598, 5, 1, "", "hardswish"], [1599, 5, 1, "", "hardtanh"], [1600, 5, 1, "", "hardtanh_"], [1601, 5, 1, "", "hinge_embedding_loss"], [1602, 5, 1, "", "huber_loss"], [1603, 5, 1, "", "instance_norm"], [1604, 5, 1, "", "interpolate"], [1605, 5, 1, "", "kl_div"], [1606, 5, 1, "", "l1_loss"], [1607, 5, 1, "", "layer_norm"], [1608, 5, 1, "", "leaky_relu"], [1609, 5, 1, "", "leaky_relu_"], [1610, 5, 1, "", "linear"], [1611, 5, 1, "", "local_response_norm"], [1612, 5, 1, "", "log_softmax"], [1613, 5, 1, "", "logsigmoid"], [1614, 5, 1, "", "lp_pool1d"], [1615, 5, 1, "", "lp_pool2d"], [1616, 5, 1, "", "lp_pool3d"], [1617, 5, 1, "", "margin_ranking_loss"], [1618, 5, 1, "", "max_pool1d"], [1619, 5, 1, "", "max_pool2d"], [1620, 5, 1, "", "max_pool3d"], [1621, 5, 1, "", "max_unpool1d"], [1622, 5, 1, "", "max_unpool2d"], [1623, 5, 1, "", "max_unpool3d"], [1624, 5, 1, "", "mish"], [1625, 5, 1, "", "mse_loss"], [1626, 5, 1, "", "multi_margin_loss"], [1627, 5, 1, "", "multilabel_margin_loss"], [1628, 5, 1, "", "multilabel_soft_margin_loss"], [1629, 5, 1, "", "nll_loss"], [1630, 5, 1, "", "normalize"], [1631, 5, 1, "", "one_hot"], [1632, 5, 1, "", "pad"], [1633, 5, 1, "", "pairwise_distance"], [1634, 5, 1, "", "pdist"], [1635, 5, 1, "", "pixel_shuffle"], [1636, 5, 1, "", "pixel_unshuffle"], [1637, 5, 1, "", "poisson_nll_loss"], [1638, 5, 1, "", "prelu"], [1639, 5, 1, "", "relu"], [1640, 5, 1, "", "relu6"], [1641, 5, 1, "", "relu_"], [1642, 5, 1, "", "rrelu"], [1643, 5, 1, "", "rrelu_"], [1644, 5, 1, "", "scaled_dot_product_attention"], [1645, 5, 1, "", "selu"], [1646, 5, 1, "", "sigmoid"], [1647, 5, 1, "", "silu"], [1648, 5, 1, "", "smooth_l1_loss"], [1649, 5, 1, "", "soft_margin_loss"], [1650, 5, 1, "", "softmax"], [1651, 5, 1, "", "softmin"], [1652, 5, 1, "", "softplus"], [1653, 5, 1, "", "softshrink"], [1654, 5, 1, "", "softsign"], [1655, 5, 1, "", "tanh"], [1656, 5, 1, "", "tanhshrink"], [1657, 5, 1, "", "threshold"], [1658, 5, 1, "", "threshold_"], [1660, 5, 1, "", "triplet_margin_loss"], [1661, 5, 1, "", "triplet_margin_with_distance_loss"], [1662, 5, 1, "", "unfold"], [1663, 5, 1, "", "upsample"], [1664, 5, 1, "", "upsample_bilinear"], [1665, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1985, 5, 1, "", "calculate_gain"], [1985, 5, 1, "", "constant_"], [1985, 5, 1, "", "dirac_"], [1985, 5, 1, "", "eye_"], [1985, 5, 1, "", "kaiming_normal_"], [1985, 5, 1, "", "kaiming_uniform_"], [1985, 5, 1, "", "normal_"], [1985, 5, 1, "", "ones_"], [1985, 5, 1, "", "orthogonal_"], [1985, 5, 1, "", "sparse_"], [1985, 5, 1, "", "trunc_normal_"], [1985, 5, 1, "", "uniform_"], [1985, 5, 1, "", "xavier_normal_"], [1985, 5, 1, "", "xavier_uniform_"], [1985, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[2018, 0, 0, "-", "modules"], [2018, 0, 0, "-", "qat"], [2018, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.modules": [[2015, 0, 0, "-", "fused"]], "torch.nn.intrinsic.qat": [[2018, 0, 0, "-", "modules"]], "torch.nn.intrinsic.qat.modules": [[2015, 0, 0, "-", "conv_fused"], [2015, 0, 0, "-", "linear_fused"], [2015, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized": [[2018, 0, 0, "-", "dynamic"], [2018, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[2018, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[2015, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized.modules": [[2015, 0, 0, "-", "bn_relu"], [2015, 0, 0, "-", "conv_relu"], [2015, 0, 0, "-", "linear_relu"]], "torch.nn.modules": [[1981, 0, 0, "-", "activation"], [1981, 0, 0, "-", "adaptive"], [1981, 0, 0, "-", "batchnorm"], [1981, 0, 0, "-", "channelshuffle"], [1981, 0, 0, "-", "container"], [1981, 0, 0, "-", "conv"], [1981, 0, 0, "-", "distance"], [1981, 0, 0, "-", "dropout"], [1981, 0, 0, "-", "flatten"], [1981, 0, 0, "-", "fold"], [1981, 0, 0, "-", "instancenorm"], [1981, 0, 0, "-", "lazy"], [1981, 0, 0, "-", "linear"], [1981, 0, 0, "-", "loss"], [1981, 0, 0, "-", "module"], [1981, 0, 0, "-", "normalization"], [1981, 0, 0, "-", "padding"], [1981, 0, 0, "-", "pixelshuffle"], [1981, 0, 0, "-", "pooling"], [1981, 0, 0, "-", "rnn"], [1981, 0, 0, "-", "sparse"], [1981, 0, 0, "-", "transformer"], [1981, 0, 0, "-", "upsampling"], [1981, 0, 0, "-", "utils"]], "torch.nn.modules.lazy": [[1666, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1666, 3, 1, "", "has_uninitialized_params"], [1666, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1667, 5, 1, "", "register_module_backward_hook"], [1668, 5, 1, "", "register_module_buffer_registration_hook"], [1669, 5, 1, "", "register_module_forward_hook"], [1670, 5, 1, "", "register_module_forward_pre_hook"], [1671, 5, 1, "", "register_module_full_backward_hook"], [1672, 5, 1, "", "register_module_full_backward_pre_hook"], [1673, 5, 1, "", "register_module_module_registration_hook"], [1674, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1675, 1, 1, "", "DistributedDataParallel"], [1981, 0, 0, "-", "comm"], [1981, 0, 0, "-", "data_parallel"], [1981, 0, 0, "-", "distributed"], [1981, 0, 0, "-", "parallel_apply"], [1981, 0, 0, "-", "replicate"], [1981, 0, 0, "-", "scatter_gather"]], "torch.nn.parallel.DistributedDataParallel": [[1675, 3, 1, "", "join"], [1675, 3, 1, "", "join_hook"], [1675, 3, 1, "", "no_sync"], [1675, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1676, 1, 1, "", "Parameter"], [1677, 1, 1, "", "UninitializedBuffer"], [1678, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1678, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[2018, 0, 0, "-", "dynamic"], [2018, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[2018, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic.modules": [[2015, 0, 0, "-", "linear"]], "torch.nn.qat.modules": [[2015, 0, 0, "-", "conv"], [2015, 0, 0, "-", "embedding_ops"], [2015, 0, 0, "-", "linear"]], "torch.nn.quantizable": [[2018, 0, 0, "-", "modules"]], "torch.nn.quantizable.modules": [[2015, 0, 0, "-", "activation"], [2015, 0, 0, "-", "rnn"]], "torch.nn.quantized": [[2018, 0, 0, "-", "dynamic"], [2015, 0, 0, "-", "functional"], [2018, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[2018, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic.modules": [[2015, 0, 0, "-", "conv"], [2015, 0, 0, "-", "linear"], [2015, 0, 0, "-", "rnn"]], "torch.nn.quantized.modules": [[2015, 0, 0, "-", "activation"], [2015, 0, 0, "-", "batchnorm"], [2015, 0, 0, "-", "conv"], [2015, 0, 0, "-", "dropout"], [2015, 0, 0, "-", "embedding_ops"], [2015, 0, 0, "-", "functional_modules"], [2015, 0, 0, "-", "linear"], [2015, 0, 0, "-", "normalization"], [2015, 0, 0, "-", "rnn"], [2015, 0, 0, "-", "utils"]], "torch.nn.utils": [[1981, 0, 0, "-", "clip_grad"], [1679, 5, 1, "", "clip_grad_norm"], [1680, 5, 1, "", "clip_grad_norm_"], [1681, 5, 1, "", "clip_grad_value_"], [1682, 5, 1, "", "convert_conv2d_weight_memory_format"], [1683, 5, 1, "", "convert_conv3d_weight_memory_format"], [1981, 0, 0, "-", "convert_parameters"], [1684, 5, 1, "", "fuse_conv_bn_eval"], [1685, 5, 1, "", "fuse_conv_bn_weights"], [1686, 5, 1, "", "fuse_linear_bn_eval"], [1687, 5, 1, "", "fuse_linear_bn_weights"], [1981, 0, 0, "-", "fusion"], [1981, 0, 0, "-", "init"], [1981, 0, 0, "-", "memory_format"], [1688, 5, 1, "", "parameters_to_vector"], [1981, 0, 0, "-", "parametrizations"], [1981, 0, 0, "-", "parametrize"], [1981, 0, 0, "-", "prune"], [1714, 5, 1, "", "remove_spectral_norm"], [1715, 5, 1, "", "remove_weight_norm"], [1981, 0, 0, "-", "rnn"], [1723, 5, 1, "", "skip_init"], [1981, 0, 0, "-", "spectral_norm"], [1981, 0, 0, "-", "stateless"], [1726, 5, 1, "", "vector_to_parameters"], [1981, 0, 0, "-", "weight_norm"]], "torch.nn.utils.parametrizations": [[1689, 5, 1, "", "orthogonal"], [1690, 5, 1, "", "spectral_norm"], [1691, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrize": [[1692, 1, 1, "", "ParametrizationList"], [1693, 5, 1, "", "cached"], [1694, 5, 1, "", "is_parametrized"], [1695, 5, 1, "", "register_parametrization"], [1696, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1692, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1697, 1, 1, "", "BasePruningMethod"], [1698, 1, 1, "", "CustomFromMask"], [1699, 1, 1, "", "Identity"], [1700, 1, 1, "", "L1Unstructured"], [1701, 1, 1, "", "LnStructured"], [1702, 1, 1, "", "PruningContainer"], [1703, 1, 1, "", "RandomStructured"], [1704, 1, 1, "", "RandomUnstructured"], [1705, 5, 1, "", "custom_from_mask"], [1706, 5, 1, "", "global_unstructured"], [1707, 5, 1, "", "identity"], [1708, 5, 1, "", "is_pruned"], [1709, 5, 1, "", "l1_unstructured"], [1710, 5, 1, "", "ln_structured"], [1711, 5, 1, "", "random_structured"], [1712, 5, 1, "", "random_unstructured"], [1713, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1697, 3, 1, "", "apply"], [1697, 3, 1, "", "apply_mask"], [1697, 3, 1, "", "compute_mask"], [1697, 3, 1, "", "prune"], [1697, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1698, 3, 1, "", "apply"], [1698, 3, 1, "", "apply_mask"], [1698, 3, 1, "", "prune"], [1698, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1699, 3, 1, "", "apply"], [1699, 3, 1, "", "apply_mask"], [1699, 3, 1, "", "prune"], [1699, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1700, 3, 1, "", "apply"], [1700, 3, 1, "", "apply_mask"], [1700, 3, 1, "", "prune"], [1700, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1701, 3, 1, "", "apply"], [1701, 3, 1, "", "apply_mask"], [1701, 3, 1, "", "compute_mask"], [1701, 3, 1, "", "prune"], [1701, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1702, 3, 1, "", "add_pruning_method"], [1702, 3, 1, "", "apply"], [1702, 3, 1, "", "apply_mask"], [1702, 3, 1, "", "compute_mask"], [1702, 3, 1, "", "prune"], [1702, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1703, 3, 1, "", "apply"], [1703, 3, 1, "", "apply_mask"], [1703, 3, 1, "", "compute_mask"], [1703, 3, 1, "", "prune"], [1703, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1704, 3, 1, "", "apply"], [1704, 3, 1, "", "apply_mask"], [1704, 3, 1, "", "prune"], [1704, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1716, 1, 1, "", "PackedSequence"], [1717, 5, 1, "", "pack_padded_sequence"], [1718, 5, 1, "", "pack_sequence"], [1719, 5, 1, "", "pad_packed_sequence"], [1720, 5, 1, "", "pad_sequence"], [1721, 5, 1, "", "unpack_sequence"], [1722, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1716, 2, 1, "", "batch_sizes"], [1716, 3, 1, "", "count"], [1716, 2, 1, "", "data"], [1716, 3, 1, "", "index"], [1716, 4, 1, "", "is_cuda"], [1716, 3, 1, "", "is_pinned"], [1716, 2, 1, "", "sorted_indices"], [1716, 3, 1, "", "to"], [1716, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1725, 5, 1, "", "functional_call"]], "torch.onnx": [[2007, 1, 1, "", "DiagnosticOptions"], [2007, 1, 1, "", "ExportOptions"], [2007, 1, 1, "", "InvalidExportOptionsError"], [1736, 1, 1, "", "JitScalarType"], [2007, 1, 1, "", "ONNXProgram"], [2007, 1, 1, "", "ONNXProgramSerializer"], [2007, 1, 1, "", "ONNXRuntimeOptions"], [2007, 1, 1, "", "OnnxExporterError"], [2007, 1, 1, "", "OnnxRegistry"], [2009, 5, 1, "", "disable_log"], [2007, 5, 1, "", "dynamo_export"], [2007, 5, 1, "", "enable_fake_mode"], [2009, 5, 1, "", "enable_log"], [2006, 0, 0, "-", "errors"], [2009, 5, 1, "", "export"], [2009, 5, 1, "", "export_to_pretty_string"], [2009, 5, 1, "", "is_in_onnx_export"], [2008, 5, 1, "", "is_onnxrt_backend_supported"], [2006, 0, 0, "-", "operators"], [2009, 5, 1, "", "register_custom_op_symbolic"], [2009, 5, 1, "", "select_model_mode_for_export"], [2006, 0, 0, "-", "symbolic_caffe2"], [2006, 0, 0, "-", "symbolic_helper"], [2006, 0, 0, "-", "symbolic_opset10"], [2006, 0, 0, "-", "symbolic_opset11"], [2006, 0, 0, "-", "symbolic_opset12"], [2006, 0, 0, "-", "symbolic_opset13"], [2006, 0, 0, "-", "symbolic_opset14"], [2006, 0, 0, "-", "symbolic_opset15"], [2006, 0, 0, "-", "symbolic_opset16"], [2006, 0, 0, "-", "symbolic_opset17"], [2006, 0, 0, "-", "symbolic_opset18"], [2006, 0, 0, "-", "symbolic_opset7"], [2006, 0, 0, "-", "symbolic_opset8"], [2006, 0, 0, "-", "symbolic_opset9"], [2009, 5, 1, "", "unregister_custom_op_symbolic"], [2006, 0, 0, "-", "utils"], [2006, 0, 0, "-", "verification"]], "torch.onnx.JitScalarType": [[1736, 3, 1, "", "dtype"], [1736, 3, 1, "", "from_dtype"], [1736, 3, 1, "", "from_value"], [1736, 3, 1, "", "onnx_compatible"], [1736, 3, 1, "", "onnx_type"], [1736, 3, 1, "", "scalar_name"], [1736, 3, 1, "", "torch_name"]], "torch.onnx.ONNXProgram": [[2007, 3, 1, "", "adapt_torch_inputs_to_onnx"], [2007, 3, 1, "", "adapt_torch_outputs_to_onnx"], [2007, 4, 1, "", "diagnostic_context"], [2007, 4, 1, "", "fake_context"], [2007, 4, 1, "", "model_proto"], [2007, 4, 1, "", "model_signature"], [2007, 3, 1, "", "save"], [2007, 3, 1, "", "save_diagnostics"]], "torch.onnx.ONNXProgramSerializer": [[2007, 3, 1, "", "serialize"]], "torch.onnx.OnnxRegistry": [[2007, 3, 1, "", "get_op_functions"], [2007, 3, 1, "", "is_registered_op"], [2007, 4, 1, "", "opset_version"], [2007, 3, 1, "", "register_op"]], "torch.onnx.verification": [[1737, 1, 1, "", "GraphInfo"], [1738, 1, 1, "", "VerificationOptions"], [2009, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1737, 3, 1, "", "all_mismatch_leaf_graph_info"], [1737, 3, 1, "", "clear"], [1737, 3, 1, "", "essential_node_count"], [1737, 3, 1, "", "essential_node_kinds"], [1737, 3, 1, "", "export_repro"], [1737, 3, 1, "", "find_mismatch"], [1737, 3, 1, "", "find_partition"], [1737, 3, 1, "", "has_mismatch"], [1737, 3, 1, "", "pretty_print_mismatch"], [1737, 3, 1, "", "pretty_print_tree"], [1737, 3, 1, "", "verify_export"]], "torch.optim": [[1739, 1, 1, "", "ASGD"], [1740, 1, 1, "", "Adadelta"], [1741, 1, 1, "", "Adagrad"], [1742, 1, 1, "", "Adam"], [1743, 1, 1, "", "AdamW"], [1744, 1, 1, "", "Adamax"], [1745, 1, 1, "", "LBFGS"], [1746, 1, 1, "", "NAdam"], [2011, 1, 1, "", "Optimizer"], [1752, 1, 1, "", "RAdam"], [1753, 1, 1, "", "RMSprop"], [1754, 1, 1, "", "Rprop"], [1755, 1, 1, "", "SGD"], [1756, 1, 1, "", "SparseAdam"], [2011, 0, 0, "-", "adadelta"], [2011, 0, 0, "-", "adagrad"], [2011, 0, 0, "-", "adam"], [2011, 0, 0, "-", "adamax"], [2011, 0, 0, "-", "adamw"], [2011, 0, 0, "-", "asgd"], [2011, 0, 0, "-", "lbfgs"], [2011, 0, 0, "-", "lr_scheduler"], [2011, 0, 0, "-", "nadam"], [2011, 0, 0, "-", "optimizer"], [2011, 0, 0, "-", "radam"], [2011, 0, 0, "-", "rmsprop"], [2011, 0, 0, "-", "rprop"], [2011, 0, 0, "-", "sgd"], [2011, 0, 0, "-", "sparse_adam"], [2011, 0, 0, "-", "swa_utils"]], "torch.optim.ASGD": [[1739, 3, 1, "", "add_param_group"], [1739, 3, 1, "", "load_state_dict"], [1739, 3, 1, "", "register_load_state_dict_post_hook"], [1739, 3, 1, "", "register_load_state_dict_pre_hook"], [1739, 3, 1, "", "register_state_dict_post_hook"], [1739, 3, 1, "", "register_state_dict_pre_hook"], [1739, 3, 1, "", "register_step_post_hook"], [1739, 3, 1, "", "register_step_pre_hook"], [1739, 3, 1, "", "state_dict"], [1739, 3, 1, "", "step"], [1739, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1740, 3, 1, "", "add_param_group"], [1740, 3, 1, "", "load_state_dict"], [1740, 3, 1, "", "register_load_state_dict_post_hook"], [1740, 3, 1, "", "register_load_state_dict_pre_hook"], [1740, 3, 1, "", "register_state_dict_post_hook"], [1740, 3, 1, "", "register_state_dict_pre_hook"], [1740, 3, 1, "", "register_step_post_hook"], [1740, 3, 1, "", "register_step_pre_hook"], [1740, 3, 1, "", "state_dict"], [1740, 3, 1, "", "step"], [1740, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1741, 3, 1, "", "add_param_group"], [1741, 3, 1, "", "load_state_dict"], [1741, 3, 1, "", "register_load_state_dict_post_hook"], [1741, 3, 1, "", "register_load_state_dict_pre_hook"], [1741, 3, 1, "", "register_state_dict_post_hook"], [1741, 3, 1, "", "register_state_dict_pre_hook"], [1741, 3, 1, "", "register_step_post_hook"], [1741, 3, 1, "", "register_step_pre_hook"], [1741, 3, 1, "", "state_dict"], [1741, 3, 1, "", "step"], [1741, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1742, 3, 1, "", "add_param_group"], [1742, 3, 1, "", "load_state_dict"], [1742, 3, 1, "", "register_load_state_dict_post_hook"], [1742, 3, 1, "", "register_load_state_dict_pre_hook"], [1742, 3, 1, "", "register_state_dict_post_hook"], [1742, 3, 1, "", "register_state_dict_pre_hook"], [1742, 3, 1, "", "register_step_post_hook"], [1742, 3, 1, "", "register_step_pre_hook"], [1742, 3, 1, "", "state_dict"], [1742, 3, 1, "", "step"], [1742, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1743, 3, 1, "", "add_param_group"], [1743, 3, 1, "", "load_state_dict"], [1743, 3, 1, "", "register_load_state_dict_post_hook"], [1743, 3, 1, "", "register_load_state_dict_pre_hook"], [1743, 3, 1, "", "register_state_dict_post_hook"], [1743, 3, 1, "", "register_state_dict_pre_hook"], [1743, 3, 1, "", "register_step_post_hook"], [1743, 3, 1, "", "register_step_pre_hook"], [1743, 3, 1, "", "state_dict"], [1743, 3, 1, "", "step"], [1743, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1744, 3, 1, "", "add_param_group"], [1744, 3, 1, "", "load_state_dict"], [1744, 3, 1, "", "register_load_state_dict_post_hook"], [1744, 3, 1, "", "register_load_state_dict_pre_hook"], [1744, 3, 1, "", "register_state_dict_post_hook"], [1744, 3, 1, "", "register_state_dict_pre_hook"], [1744, 3, 1, "", "register_step_post_hook"], [1744, 3, 1, "", "register_step_pre_hook"], [1744, 3, 1, "", "state_dict"], [1744, 3, 1, "", "step"], [1744, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1745, 3, 1, "", "add_param_group"], [1745, 3, 1, "", "load_state_dict"], [1745, 3, 1, "", "register_load_state_dict_post_hook"], [1745, 3, 1, "", "register_load_state_dict_pre_hook"], [1745, 3, 1, "", "register_state_dict_post_hook"], [1745, 3, 1, "", "register_state_dict_pre_hook"], [1745, 3, 1, "", "register_step_post_hook"], [1745, 3, 1, "", "register_step_pre_hook"], [1745, 3, 1, "", "state_dict"], [1745, 3, 1, "", "step"], [1745, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1746, 3, 1, "", "add_param_group"], [1746, 3, 1, "", "load_state_dict"], [1746, 3, 1, "", "register_load_state_dict_post_hook"], [1746, 3, 1, "", "register_load_state_dict_pre_hook"], [1746, 3, 1, "", "register_state_dict_post_hook"], [1746, 3, 1, "", "register_state_dict_pre_hook"], [1746, 3, 1, "", "register_step_post_hook"], [1746, 3, 1, "", "register_step_pre_hook"], [1746, 3, 1, "", "state_dict"], [1746, 3, 1, "", "step"], [1746, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1747, 3, 1, "", "add_param_group"], [1748, 3, 1, "", "load_state_dict"], [1749, 3, 1, "", "state_dict"], [1750, 3, 1, "", "step"], [1751, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1752, 3, 1, "", "add_param_group"], [1752, 3, 1, "", "load_state_dict"], [1752, 3, 1, "", "register_load_state_dict_post_hook"], [1752, 3, 1, "", "register_load_state_dict_pre_hook"], [1752, 3, 1, "", "register_state_dict_post_hook"], [1752, 3, 1, "", "register_state_dict_pre_hook"], [1752, 3, 1, "", "register_step_post_hook"], [1752, 3, 1, "", "register_step_pre_hook"], [1752, 3, 1, "", "state_dict"], [1752, 3, 1, "", "step"], [1752, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1753, 3, 1, "", "add_param_group"], [1753, 3, 1, "", "load_state_dict"], [1753, 3, 1, "", "register_load_state_dict_post_hook"], [1753, 3, 1, "", "register_load_state_dict_pre_hook"], [1753, 3, 1, "", "register_state_dict_post_hook"], [1753, 3, 1, "", "register_state_dict_pre_hook"], [1753, 3, 1, "", "register_step_post_hook"], [1753, 3, 1, "", "register_step_pre_hook"], [1753, 3, 1, "", "state_dict"], [1753, 3, 1, "", "step"], [1753, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1754, 3, 1, "", "add_param_group"], [1754, 3, 1, "", "load_state_dict"], [1754, 3, 1, "", "register_load_state_dict_post_hook"], [1754, 3, 1, "", "register_load_state_dict_pre_hook"], [1754, 3, 1, "", "register_state_dict_post_hook"], [1754, 3, 1, "", "register_state_dict_pre_hook"], [1754, 3, 1, "", "register_step_post_hook"], [1754, 3, 1, "", "register_step_pre_hook"], [1754, 3, 1, "", "state_dict"], [1754, 3, 1, "", "step"], [1754, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1755, 3, 1, "", "add_param_group"], [1755, 3, 1, "", "load_state_dict"], [1755, 3, 1, "", "register_load_state_dict_post_hook"], [1755, 3, 1, "", "register_load_state_dict_pre_hook"], [1755, 3, 1, "", "register_state_dict_post_hook"], [1755, 3, 1, "", "register_state_dict_pre_hook"], [1755, 3, 1, "", "register_step_post_hook"], [1755, 3, 1, "", "register_step_pre_hook"], [1755, 3, 1, "", "state_dict"], [1755, 3, 1, "", "step"], [1755, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1756, 3, 1, "", "add_param_group"], [1756, 3, 1, "", "load_state_dict"], [1756, 3, 1, "", "register_load_state_dict_post_hook"], [1756, 3, 1, "", "register_load_state_dict_pre_hook"], [1756, 3, 1, "", "register_state_dict_post_hook"], [1756, 3, 1, "", "register_state_dict_pre_hook"], [1756, 3, 1, "", "register_step_post_hook"], [1756, 3, 1, "", "register_step_pre_hook"], [1756, 3, 1, "", "state_dict"], [1756, 3, 1, "", "step"], [1756, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1757, 1, 1, "", "ChainedScheduler"], [1758, 1, 1, "", "ConstantLR"], [1759, 1, 1, "", "CosineAnnealingLR"], [1760, 1, 1, "", "CosineAnnealingWarmRestarts"], [1761, 1, 1, "", "CyclicLR"], [1762, 1, 1, "", "ExponentialLR"], [1763, 1, 1, "", "LambdaLR"], [1764, 1, 1, "", "LinearLR"], [1765, 1, 1, "", "MultiStepLR"], [1766, 1, 1, "", "MultiplicativeLR"], [1767, 1, 1, "", "OneCycleLR"], [1768, 1, 1, "", "PolynomialLR"], [1769, 1, 1, "", "ReduceLROnPlateau"], [1770, 1, 1, "", "SequentialLR"], [1771, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1757, 3, 1, "", "get_last_lr"], [1757, 3, 1, "", "load_state_dict"], [1757, 3, 1, "", "print_lr"], [1757, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1758, 3, 1, "", "get_last_lr"], [1758, 3, 1, "", "load_state_dict"], [1758, 3, 1, "", "print_lr"], [1758, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1759, 3, 1, "", "get_last_lr"], [1759, 3, 1, "", "load_state_dict"], [1759, 3, 1, "", "print_lr"], [1759, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1760, 3, 1, "", "get_last_lr"], [1760, 3, 1, "", "load_state_dict"], [1760, 3, 1, "", "print_lr"], [1760, 3, 1, "", "state_dict"], [1760, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1761, 3, 1, "", "get_last_lr"], [1761, 3, 1, "", "get_lr"], [1761, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1762, 3, 1, "", "get_last_lr"], [1762, 3, 1, "", "load_state_dict"], [1762, 3, 1, "", "print_lr"], [1762, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1763, 3, 1, "", "get_last_lr"], [1763, 3, 1, "", "load_state_dict"], [1763, 3, 1, "", "print_lr"], [1763, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1764, 3, 1, "", "get_last_lr"], [1764, 3, 1, "", "load_state_dict"], [1764, 3, 1, "", "print_lr"], [1764, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1765, 3, 1, "", "get_last_lr"], [1765, 3, 1, "", "load_state_dict"], [1765, 3, 1, "", "print_lr"], [1765, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1766, 3, 1, "", "get_last_lr"], [1766, 3, 1, "", "load_state_dict"], [1766, 3, 1, "", "print_lr"], [1766, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1767, 3, 1, "", "get_last_lr"], [1767, 3, 1, "", "load_state_dict"], [1767, 3, 1, "", "print_lr"], [1767, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1768, 3, 1, "", "get_last_lr"], [1768, 3, 1, "", "load_state_dict"], [1768, 3, 1, "", "print_lr"], [1768, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ReduceLROnPlateau": [[1769, 3, 1, "", "get_last_lr"], [1769, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.SequentialLR": [[1770, 3, 1, "", "get_last_lr"], [1770, 3, 1, "", "load_state_dict"], [1770, 3, 1, "", "print_lr"], [1770, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1771, 3, 1, "", "get_last_lr"], [1771, 3, 1, "", "load_state_dict"], [1771, 3, 1, "", "print_lr"], [1771, 3, 1, "", "state_dict"]], "torch.overrides": [[2055, 5, 1, "", "get_ignored_functions"], [2055, 5, 1, "", "get_overridable_functions"], [2055, 5, 1, "", "get_testing_overrides"], [2055, 5, 1, "", "handle_torch_function"], [2055, 5, 1, "", "has_torch_function"], [2055, 5, 1, "", "is_tensor_like"], [2055, 5, 1, "", "is_tensor_method_or_property"], [2055, 5, 1, "", "resolve_name"], [2055, 5, 1, "", "wrap_torch_function"]], "torch.package": [[2012, 1, 1, "", "Directory"], [2012, 1, 1, "", "EmptyMatchError"], [2012, 1, 1, "", "PackageExporter"], [2012, 1, 1, "", "PackageImporter"], [2012, 1, 1, "", "PackagingError"], [2012, 0, 0, "-", "analyze"], [2012, 0, 0, "-", "file_structure_representation"], [2012, 0, 0, "-", "find_file_dependencies"], [2012, 0, 0, "-", "glob_group"], [2012, 0, 0, "-", "importer"], [2012, 0, 0, "-", "package_exporter"], [2012, 0, 0, "-", "package_importer"]], "torch.package.Directory": [[2012, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[2012, 3, 1, "", "__init__"], [2012, 3, 1, "", "add_dependency"], [2012, 3, 1, "", "all_paths"], [2012, 3, 1, "", "close"], [2012, 3, 1, "", "denied_modules"], [2012, 3, 1, "", "deny"], [2012, 3, 1, "", "dependency_graph_string"], [2012, 3, 1, "", "extern"], [2012, 3, 1, "", "externed_modules"], [2012, 3, 1, "", "get_rdeps"], [2012, 3, 1, "", "get_unique_id"], [2012, 3, 1, "", "intern"], [2012, 3, 1, "", "interned_modules"], [2012, 3, 1, "", "mock"], [2012, 3, 1, "", "mocked_modules"], [2012, 3, 1, "", "register_extern_hook"], [2012, 3, 1, "", "register_intern_hook"], [2012, 3, 1, "", "register_mock_hook"], [2012, 3, 1, "", "save_binary"], [2012, 3, 1, "", "save_module"], [2012, 3, 1, "", "save_pickle"], [2012, 3, 1, "", "save_source_file"], [2012, 3, 1, "", "save_source_string"], [2012, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[2012, 3, 1, "", "__init__"], [2012, 3, 1, "", "file_structure"], [2012, 3, 1, "", "id"], [2012, 3, 1, "", "import_module"], [2012, 3, 1, "", "load_binary"], [2012, 3, 1, "", "load_pickle"], [2012, 3, 1, "", "load_text"], [2012, 3, 1, "", "python_version"]], "torch.package.analyze": [[2012, 0, 0, "-", "find_first_use_of_broken_modules"], [2012, 0, 0, "-", "is_from_package"], [2012, 0, 0, "-", "trace_dependencies"]], "torch.profiler": [[2014, 1, 1, "", "ProfilerAction"], [2014, 1, 1, "", "ProfilerActivity"], [2014, 1, 1, "", "_KinetoProfile"], [2014, 0, 0, "-", "itt"], [2014, 1, 1, "", "profile"], [2014, 0, 0, "-", "profiler"], [2014, 0, 0, "-", "python_tracer"], [2014, 5, 1, "", "schedule"], [2014, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[2014, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[2014, 3, 1, "", "add_metadata"], [2014, 3, 1, "", "add_metadata_json"], [2014, 3, 1, "", "events"], [2014, 3, 1, "", "export_chrome_trace"], [2014, 3, 1, "", "export_memory_timeline"], [2014, 3, 1, "", "export_stacks"], [2014, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[2014, 5, 1, "", "is_available"], [2014, 5, 1, "", "mark"], [2014, 5, 1, "", "range_pop"], [2014, 5, 1, "", "range_push"]], "torch.profiler.profile": [[2014, 3, 1, "", "step"]], "torch.quantization": [[2015, 0, 0, "-", "fake_quantize"], [2015, 0, 0, "-", "fuse_modules"], [2015, 0, 0, "-", "fuser_method_mappings"], [2018, 0, 0, "-", "fx"], [2015, 0, 0, "-", "observer"], [2015, 0, 0, "-", "qconfig"], [2015, 0, 0, "-", "quant_type"], [2015, 0, 0, "-", "quantization_mappings"], [2015, 0, 0, "-", "quantize"], [2015, 0, 0, "-", "quantize_fx"], [2015, 0, 0, "-", "quantize_jit"], [2015, 0, 0, "-", "stubs"], [2015, 0, 0, "-", "utils"]], "torch.quantization.fx": [[2015, 0, 0, "-", "convert"], [2015, 0, 0, "-", "fuse"], [2015, 0, 0, "-", "fusion_patterns"], [2015, 0, 0, "-", "graph_module"], [2015, 0, 0, "-", "match_utils"], [2015, 0, 0, "-", "pattern_utils"], [2015, 0, 0, "-", "prepare"], [2015, 0, 0, "-", "quantization_patterns"], [2015, 0, 0, "-", "quantization_types"], [2015, 0, 0, "-", "utils"]], "torch.quasirandom": [[1792, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1792, 3, 1, "", "draw"], [1792, 3, 1, "", "draw_base2"], [1792, 3, 1, "", "fast_forward"], [1792, 3, 1, "", "reset"]], "torch.random": [[2019, 5, 1, "", "fork_rng"], [2019, 5, 1, "", "get_rng_state"], [2019, 5, 1, "", "initial_seed"], [2019, 5, 1, "", "manual_seed"], [2019, 5, 1, "", "seed"], [2019, 5, 1, "", "set_rng_state"]], "torch.serialization": [[2004, 5, 1, "", "get_default_load_endianness"], [2004, 5, 1, "", "register_package"], [2004, 5, 1, "", "set_default_load_endianness"]], "torch.signal": [[2023, 0, 0, "-", "windows"]], "torch.signal.windows": [[1839, 5, 1, "", "bartlett"], [1840, 5, 1, "", "blackman"], [1841, 5, 1, "", "cosine"], [1842, 5, 1, "", "exponential"], [1843, 5, 1, "", "gaussian"], [1844, 5, 1, "", "general_cosine"], [1845, 5, 1, "", "general_hamming"], [1846, 5, 1, "", "hamming"], [1847, 5, 1, "", "hann"], [1848, 5, 1, "", "kaiser"], [1849, 5, 1, "", "nuttall"], [2032, 0, 0, "-", "windows"]], "torch.sparse": [[1859, 5, 1, "", "addmm"], [1860, 5, 1, "", "as_sparse_gradcheck"], [1861, 1, 1, "", "check_sparse_tensor_invariants"], [1862, 5, 1, "", "log_softmax"], [1863, 5, 1, "", "mm"], [1864, 5, 1, "", "sampled_addmm"], [2032, 0, 0, "-", "semi_structured"], [1865, 5, 1, "", "softmax"], [1866, 5, 1, "", "spdiags"], [1867, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1861, 3, 1, "", "disable"], [1861, 3, 1, "", "enable"], [1861, 3, 1, "", "is_enabled"]], "torch.special": [[2025, 5, 1, "", "airy_ai"], [2025, 5, 1, "", "bessel_j0"], [2025, 5, 1, "", "bessel_j1"], [2025, 5, 1, "", "digamma"], [2025, 5, 1, "", "entr"], [2025, 5, 1, "", "erf"], [2025, 5, 1, "", "erfc"], [2025, 5, 1, "", "erfcx"], [2025, 5, 1, "", "erfinv"], [2025, 5, 1, "", "exp2"], [2025, 5, 1, "", "expit"], [2025, 5, 1, "", "expm1"], [2025, 5, 1, "", "gammainc"], [2025, 5, 1, "", "gammaincc"], [2025, 5, 1, "", "gammaln"], [2025, 5, 1, "", "i0"], [2025, 5, 1, "", "i0e"], [2025, 5, 1, "", "i1"], [2025, 5, 1, "", "i1e"], [2025, 5, 1, "", "log1p"], [2025, 5, 1, "", "log_ndtr"], [2025, 5, 1, "", "log_softmax"], [2025, 5, 1, "", "logit"], [2025, 5, 1, "", "logsumexp"], [2025, 5, 1, "", "multigammaln"], [2025, 5, 1, "", "ndtr"], [2025, 5, 1, "", "ndtri"], [2025, 5, 1, "", "polygamma"], [2025, 5, 1, "", "psi"], [2025, 5, 1, "", "round"], [2025, 5, 1, "", "scaled_modified_bessel_k0"], [2025, 5, 1, "", "scaled_modified_bessel_k1"], [2025, 5, 1, "", "sinc"], [2025, 5, 1, "", "softmax"], [2025, 5, 1, "", "spherical_bessel_j0"], [2025, 5, 1, "", "xlog1py"], [2025, 5, 1, "", "xlogy"], [2025, 5, 1, "", "zeta"]], "torch.testing": [[2031, 5, 1, "", "assert_allclose"], [2031, 5, 1, "", "assert_close"], [2031, 5, 1, "", "make_tensor"]], "torch.torch": [[2032, 2, 1, "", "default_generator"], [2057, 1, 1, "", "finfo"], [2057, 1, 1, "", "iinfo"]], "torch.utils": [[2032, 0, 0, "-", "backcompat"], [2058, 0, 0, "-", "backend_registration"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [2058, 0, 0, "-", "bundled_inputs"], [2058, 0, 0, "-", "checkpoint"], [2058, 0, 0, "-", "collect_env"], [2058, 0, 0, "-", "cpp_backtrace"], [2058, 0, 0, "-", "cpp_extension"], [21, 0, 0, "-", "data"], [24, 0, 0, "-", "deterministic"], [2058, 0, 0, "-", "dlpack"], [2058, 0, 0, "-", "file_baton"], [2058, 0, 0, "-", "flop_counter"], [1924, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1925, 5, 1, "", "get_cpp_backtrace"], [2032, 0, 0, "-", "hipify"], [2058, 0, 0, "-", "hooks"], [1967, 0, 0, "-", "jit"], [2058, 0, 0, "-", "mkldnn"], [2058, 0, 0, "-", "mobile_optimizer"], [2032, 0, 0, "-", "model_dump"], [1974, 0, 0, "-", "model_zoo"], [1926, 5, 1, "", "rename_privateuse1_backend"], [1927, 5, 1, "", "set_module"], [2058, 0, 0, "-", "show_pickle"], [1928, 5, 1, "", "swap_tensors"], [2029, 0, 0, "-", "tensorboard"], [2058, 0, 0, "-", "throughput_benchmark"], [2032, 0, 0, "-", "viz"], [2058, 0, 0, "-", "weak"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "adaptive_autorange"], [3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.examples": [[2058, 0, 0, "-", "blas_compare_setup"], [2058, 0, 0, "-", "compare"], [2058, 0, 0, "-", "fuzzer"], [2058, 0, 0, "-", "op_benchmark"], [2058, 0, 0, "-", "simple_timeit"], [2058, 0, 0, "-", "spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers": [[2058, 0, 0, "-", "binary"], [2058, 0, 0, "-", "sparse_binary"], [2058, 0, 0, "-", "sparse_unary"], [2058, 0, 0, "-", "spectral"], [2058, 0, 0, "-", "unary"]], "torch.utils.benchmark.utils": [[2058, 0, 0, "-", "common"], [2058, 0, 0, "-", "compare"], [2058, 0, 0, "-", "compile"], [2058, 0, 0, "-", "cpp_jit"], [2058, 0, 0, "-", "fuzzer"], [2058, 0, 0, "-", "sparse_fuzzer"], [2058, 0, 0, "-", "timer"], [3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[2058, 0, 0, "-", "timer_interface"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"], [5, 5, 1, "", "set_checkpoint_debug_enabled"]], "torch.utils.cpp_extension": [[14, 5, 1, "", "BuildExtension"], [14, 5, 1, "", "CUDAExtension"], [14, 5, 1, "", "CppExtension"], [14, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [14, 5, 1, "", "include_paths"], [14, 5, 1, "", "is_ninja_available"], [14, 5, 1, "", "load"], [14, 5, 1, "", "load_inline"], [14, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[21, 1, 1, "", "BatchSampler"], [21, 1, 1, "", "ChainDataset"], [21, 1, 1, "", "ConcatDataset"], [21, 1, 1, "", "DataLoader"], [21, 1, 1, "", "Dataset"], [21, 1, 1, "", "IterableDataset"], [21, 1, 1, "", "RandomSampler"], [21, 1, 1, "", "Sampler"], [21, 1, 1, "", "SequentialSampler"], [21, 1, 1, "", "StackDataset"], [21, 1, 1, "", "Subset"], [21, 1, 1, "", "SubsetRandomSampler"], [21, 1, 1, "", "TensorDataset"], [21, 1, 1, "", "WeightedRandomSampler"], [2058, 0, 0, "-", "backward_compatibility"], [2058, 0, 0, "-", "dataloader"], [21, 0, 0, "-", "datapipes"], [2058, 0, 0, "-", "dataset"], [21, 5, 1, "", "default_collate"], [21, 5, 1, "", "default_convert"], [2058, 0, 0, "-", "distributed"], [21, 5, 1, "", "get_worker_info"], [2058, 0, 0, "-", "graph"], [2058, 0, 0, "-", "graph_settings"], [21, 5, 1, "", "random_split"], [2058, 0, 0, "-", "sampler"]], "torch.utils.data._utils.collate": [[21, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[21, 0, 0, "-", "dataframe"], [2058, 0, 0, "-", "datapipe"], [2058, 0, 0, "-", "gen_pyi"], [21, 0, 0, "-", "iter"], [21, 0, 0, "-", "map"], [21, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.dataframe": [[2058, 0, 0, "-", "dataframe_wrapper"], [2058, 0, 0, "-", "dataframes"], [2058, 0, 0, "-", "datapipes"], [2058, 0, 0, "-", "structures"]], "torch.utils.data.datapipes.iter": [[2058, 0, 0, "-", "callable"], [2058, 0, 0, "-", "combinatorics"], [2058, 0, 0, "-", "combining"], [2058, 0, 0, "-", "filelister"], [2058, 0, 0, "-", "fileopener"], [2058, 0, 0, "-", "grouping"], [2058, 0, 0, "-", "routeddecoder"], [2058, 0, 0, "-", "selecting"], [2058, 0, 0, "-", "sharding"], [2058, 0, 0, "-", "streamreader"], [2058, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.map": [[2058, 0, 0, "-", "callable"], [2058, 0, 0, "-", "combinatorics"], [2058, 0, 0, "-", "combining"], [2058, 0, 0, "-", "grouping"], [2058, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.utils": [[2058, 0, 0, "-", "common"], [2058, 0, 0, "-", "decoder"], [2058, 0, 0, "-", "snapshot"]], "torch.utils.data.distributed": [[21, 1, 1, "", "DistributedSampler"]], "torch.utils.deterministic": [[24, 2, 1, "", "fill_uninitialized_memory"]], "torch.utils.dlpack": [[32, 5, 1, "", "from_dlpack"], [32, 5, 1, "", "to_dlpack"]], "torch.utils.hipify": [[2058, 0, 0, "-", "constants"], [2058, 0, 0, "-", "cuda_to_hip_mappings"], [2058, 0, 0, "-", "hipify_python"], [2058, 0, 0, "-", "version"]], "torch.utils.jit": [[2058, 0, 0, "-", "log_extract"]], "torch.utils.mobile_optimizer": [[1973, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1974, 5, 1, "", "load_url"]], "torch.utils.tensorboard": [[2058, 0, 0, "-", "summary"], [2058, 0, 0, "-", "writer"]], "torch.utils.tensorboard.writer": [[2029, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[2029, 3, 1, "", "__init__"], [2029, 3, 1, "", "add_audio"], [2029, 3, 1, "", "add_custom_scalars"], [2029, 3, 1, "", "add_embedding"], [2029, 3, 1, "", "add_figure"], [2029, 3, 1, "", "add_graph"], [2029, 3, 1, "", "add_histogram"], [2029, 3, 1, "", "add_hparams"], [2029, 3, 1, "", "add_image"], [2029, 3, 1, "", "add_images"], [2029, 3, 1, "", "add_mesh"], [2029, 3, 1, "", "add_pr_curve"], [2029, 3, 1, "", "add_scalar"], [2029, 3, 1, "", "add_scalars"], [2029, 3, 1, "", "add_text"], [2029, 3, 1, "", "add_video"], [2029, 3, 1, "", "close"], [2029, 3, 1, "", "flush"]], "torch.xpu": [[1940, 1, 1, "", "Stream"], [1941, 1, 1, "", "StreamContext"], [1942, 5, 1, "", "current_device"], [1943, 5, 1, "", "current_stream"], [1944, 1, 1, "", "device"], [1945, 5, 1, "", "device_count"], [1946, 1, 1, "", "device_of"], [1947, 5, 1, "", "get_device_capability"], [1948, 5, 1, "", "get_device_name"], [1949, 5, 1, "", "get_device_properties"], [1950, 5, 1, "", "init"], [1951, 5, 1, "", "is_available"], [1952, 5, 1, "", "is_initialized"], [1953, 5, 1, "", "set_device"], [1954, 5, 1, "", "set_stream"], [1955, 5, 1, "", "stream"], [2059, 0, 0, "-", "streams"], [1956, 5, 1, "", "synchronize"]], "torch.xpu.Stream": [[1940, 3, 1, "", "query"], [1940, 3, 1, "", "synchronize"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 21, 1961, 1986, 1993], "mix": [0, 1961, 1986], "precis": [0, 1986, 1990, 2002], "packag": [0, 1, 15, 25, 1977, 2005, 2012], "torch": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14, 16, 17, 21, 23, 24, 25, 27, 28, 30, 31, 32, 43, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 68, 69, 70, 71, 72, 73, 74, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 892, 893, 894, 895, 897, 898, 899, 900, 903, 904, 905, 906, 907, 908, 909, 910, 914, 915, 916, 917, 918, 919, 920, 921, 922, 925, 926, 927, 928, 929, 930, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 991, 992, 993, 994, 995, 996, 997, 998, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1547, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1747, 1748, 1749, 1750, 1751, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1942, 1943, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1973, 1974, 1975, 1976, 1977, 1980, 1981, 1982, 1983, 1984, 1985, 1990, 1992, 1993, 1997, 2002, 2004, 2006, 2009, 2011, 2012, 2014, 2018, 2019, 2023, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2044, 2045, 2052, 2055, 2057, 2058, 2059], "amp": [0, 1990], "autocast": [0, 1986], "gradient": [0, 1, 55, 1204, 1986, 1987, 1993, 2032, 2044], "scale": [0, 1986, 1998], "op": [0, 12, 80, 1966, 1986, 2009, 2032], "refer": [0, 12, 18, 46, 47, 51, 58, 1961, 1963, 1964, 1965, 1975, 1979, 1997, 2007, 2012, 2014, 2015, 2018, 2022, 2030, 2037, 2056], "elig": 0, "cuda": [0, 2, 10, 17, 18, 205, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1977, 1986, 1990, 1994, 1997, 2001, 2003, 2005, 2039, 2044, 2052, 2056], "specif": [0, 21, 47, 2024], "behavior": [0, 21, 1987, 1996], "can": [0, 1987, 1994, 2044, 2051], "float16": 0, "float32": 0, "promot": [0, 7, 82], "widest": 0, "input": [0, 46, 1978, 1986, 1996], "type": [0, 21, 47, 82, 599, 1963, 1964, 1992, 2009, 2012, 2030, 2057], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1566], "over": [0, 8, 1963], "binary_cross_entropi": [0, 1565], "cpu": [0, 2, 10, 16, 202, 991, 992, 993, 994, 995, 996, 997, 1987, 1989, 2001, 2015, 2038], "bfloat16": [0, 151], "differenti": [1, 1987], "autograd": [1, 10, 11, 15, 54, 885, 886, 887, 888, 889, 892, 893, 894, 895, 897, 898, 899, 900, 903, 904, 905, 906, 907, 908, 909, 910, 914, 915, 916, 917, 918, 919, 920, 921, 922, 925, 926, 927, 928, 929, 930, 1979, 1986, 1987, 1992, 1993, 2009, 2020, 2021], "forward": [1, 886, 1992, 2021], "mode": [1, 43, 52, 410, 1356, 1987, 1992, 1996, 2009, 2015, 2021], "function": [1, 25, 31, 48, 50, 51, 53, 55, 58, 78, 81, 885, 886, 887, 888, 897, 898, 899, 900, 903, 904, 905, 906, 907, 908, 909, 1156, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1961, 1962, 1963, 1964, 1966, 1969, 1971, 1978, 1980, 1981, 1984, 1986, 1987, 1993, 1996, 2004, 2009, 2018, 2024, 2025, 2044, 2055], "higher": 1, "level": [1, 10, 80, 1968, 2018], "api": [1, 10, 12, 15, 18, 28, 36, 46, 51, 54, 58, 1960, 1961, 1964, 1968, 1975, 1979, 1989, 1990, 1992, 1997, 1998, 2007, 2009, 2012, 2013, 2014, 2015, 2018, 2037, 2042, 2043, 2044, 2045, 2056], "local": [1, 1964, 1987, 2032, 2051, 2053], "disabl": [1, 21, 974, 1961, 1987, 2032, 2044, 2045], "comput": [1, 55, 1987, 2002, 2021, 2032, 2044], "default": [1, 21, 22, 1963, 1987, 1990, 1996, 2017], "layout": [1, 2027], "manual": 1, "In": [1, 8, 1987, 1988, 2032], "place": [1, 54, 1978, 1987, 1988, 2009, 2032], "oper": [1, 10, 22, 25, 46, 54, 74, 83, 1963, 1964, 1969, 1971, 1978, 1979, 1980, 1987, 1992, 1998, 2005, 2009, 2010, 2015, 2024, 2030, 2032, 2043], "tensor": [1, 11, 15, 30, 46, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 1901, 1962, 1966, 1969, 1972, 1977, 1978, 1979, 1980, 1987, 1992, 2004, 2009, 2015, 2018, 2024, 2027, 2028, 2030, 2032, 2043], "correct": [1, 58, 1987], "check": [1, 58, 1961, 1987, 1997, 2051], "variabl": [1, 25, 43, 1961, 1963, 1964, 2047, 2048], "deprec": 1, "context": [1, 26, 40, 64, 2021], "method": [1, 35, 36, 39, 44, 1962, 1963, 1966, 2009, 2018, 2024], "mixin": 1, "custom": [1, 34, 44, 58, 1964, 1986, 1990, 1992, 1993, 1999, 2009, 2011, 2012, 2015, 2040], "util": [1, 3, 4, 5, 10, 14, 21, 24, 25, 32, 51, 53, 1076, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1924, 1925, 1926, 1927, 1928, 1967, 1973, 1974, 1981, 1982, 2004, 2018, 2029, 2032, 2034, 2053, 2058], "numer": [1, 1996, 2002, 2016], "profil": [1, 25, 925, 926, 927, 928, 929, 930, 1365, 1366, 1367, 1976, 1998, 1999, 2014, 2048, 2052, 2054], "debug": [1, 22, 25, 58, 80, 1961, 2015, 2016, 2040, 2044, 2054], "anomali": 1, "detect": 1, "graph": [1, 17, 46, 47, 58, 75, 917, 918, 919, 920, 921, 922, 1033, 1961, 1987, 1990, 2015, 2039, 2044, 2052, 2053, 2054], "backend": [2, 25, 42, 43, 1961, 1997, 2000, 2008, 2015, 2017, 2020, 2035, 2038, 2040, 2054], "cudnn": 2, "mha": 2, "mp": [2, 10, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1976, 2000], "mkl": 2, "mkldnn": [2, 10], "nnpack": 2, "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 2003, 2048], "bottleneck": 4, "checkpoint": [5, 22, 27], "pytorch": [6, 7, 8, 9, 10, 15, 23, 25, 46, 54, 1960, 1961, 1962, 1966, 1987, 1990, 1992, 2003, 2004, 2009, 2013, 2015, 2018, 2035, 2039, 2050, 2051, 2054], "govern": [6, 9, 10], "build": [6, 7, 10, 1989, 1998, 1999, 2005], "ci": [6, 10], "how": [6, 22, 52, 1959, 1987, 1992, 2011, 2012, 2041, 2043, 2044, 2051], "add": [6, 9, 93, 681], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 2006], "guid": 7, "process": [7, 9, 21, 40, 1986], "get": [7, 28, 2009, 2035, 2044, 2046], "start": [7, 28, 40, 1366, 2035, 2046], "propos": 7, "featur": [7, 1998, 1999, 2044], "report": [7, 1994], "issu": [7, 1961, 2007, 2052], "implement": [7, 33, 42, 44, 1959, 1991, 1996, 2009, 2016, 2018, 2022, 2043], "fix": [7, 43, 52, 257, 1136], "bug": 7, "ad": [7, 1992, 2009], "tutori": [7, 10, 2012, 2013, 2020], "improv": [7, 1999], "document": [7, 28, 1960], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 58, 1961, 1990, 2012, 2044], "readabl": 7, "test": [7, 1964, 1992, 2012, 2031, 2051], "case": [7, 1961], "make": [7, 9, 2039, 2047], "codebas": 7, "more": [7, 46, 50, 2020, 2035], "robust": 7, "triag": 7, "about": [7, 1987, 2020, 2043], "sourc": [7, 2003, 2005, 2012], "develop": [7, 46, 1960, 2006, 2035], "common": [7, 25, 58, 1998, 2015], "mistak": 7, "To": 7, "avoid": [7, 2001, 2003, 2009, 2012], "frequent": [7, 1961, 1994, 2009, 2015, 2044], "ask": [7, 1961, 1994, 2009, 2015, 2044], "question": [7, 1961, 1994, 2009, 2015, 2044], "On": [7, 22, 1963], "python": [7, 8, 25, 54, 61, 62, 63, 64, 65, 66, 67, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1992, 2003, 2009, 2047], "doc": [7, 10, 1997], "c": [7, 10, 15, 1987, 1992, 1997, 2004, 2009, 2036], "overview": [7, 18, 46, 58, 2006, 2007, 2012, 2014, 2024, 2040, 2047], "design": [8, 1964, 1991, 2020, 2021, 2022], "philosophi": 8, "principl": [8, 9], "1": [8, 43, 52, 1961, 1993], "usabl": 8, "perform": [8, 10, 1999, 2004, 2043, 2051, 2052, 2054], "2": [8, 52, 1961, 1990, 1993, 1994, 2015, 2018, 2050, 2051, 2054], "simpl": [8, 1963, 1964, 1999, 2007, 2021], "easi": 8, "3": [8, 43, 52], "first": [8, 2012], "best": [8, 1990, 2001, 2015, 2038], "class": [8, 35, 58, 1961, 1963, 1964, 1966, 2009, 2011, 2012, 2030], "languag": [8, 1960, 1961, 1963, 1964, 1965], "interoper": 8, "mechan": [9, 1984, 1987, 1996], "summari": [9, 2015, 2047], "modul": [9, 10, 51, 53, 58, 1488, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1961, 1962, 1963, 1964, 1966, 1981, 1987, 1992, 1999, 2004, 2012, 2015, 2050], "core": [9, 10, 2049], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1964], "confirm": 9, "remov": [9, 1713, 1978], "The": [9, 58, 1964, 1987, 2042], "re": [9, 2012], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 43, 52, 2044], "controversi": 9, "gener": [9, 17, 26, 54, 58, 84, 1988, 1993, 2003, 2015, 2016, 2032, 2041, 2056], "polici": [9, 2042], "faq": [9, 2005], "respons": 10, "nn": [10, 51, 53, 1547, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1963, 1964, 1981, 1982, 1983, 1984, 1985, 1987, 1990, 1992, 2004, 2018, 2024, 2050], "optim": [10, 29, 1747, 1748, 1749, 1750, 1751, 1986, 1987, 1990, 2011, 2020, 2021, 2032], "compil": [10, 53, 968, 970, 971, 972, 973, 974, 975, 976, 1990, 2035, 2036, 2037, 2044, 2045, 2052, 2054], "jit": [10, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1961, 1964, 1967], "torchscript": [10, 15, 1961, 1962, 1963, 1964, 1966, 1989, 1998, 2006, 2009, 2010, 2012], "fx": [10, 58, 59, 75, 76, 77, 79, 82, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1999, 2015, 2018, 2034], "torchdynamo": [10, 1991, 2006, 2007, 2008, 2039, 2041, 2045, 2054], "distribut": [10, 25, 27, 28, 29, 30, 31, 43, 1981, 1984, 1991, 1997, 1999, 2020, 2021, 2044], "rng": 10, "multiprocess": [10, 40, 1977, 1990, 2001, 2005], "dataload": [10, 2003], "linear": [10, 11, 728, 729, 752, 760, 777, 1163, 1475, 1610, 1981, 1984, 2002, 2024], "algebra": [10, 11, 2002, 2024], "linalg": [10, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1969, 2002], "spars": [10, 1859, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1981, 1984, 2024], "nestedtensor": 10, "nest": [10, 1980], "maskedtensor": [10, 1971], "mask": [10, 1971], "fast": [10, 48, 1996, 2021], "fourier": [10, 48], "transform": [10, 31, 48, 50, 51, 53, 55, 58, 1531, 1981, 1992, 1999, 2044, 2053], "fft": [10, 48, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135], "inductor": 10, "gpu": [10, 25, 1981, 1984, 1986, 1994, 2013, 2048], "triton": [10, 2048], "nvfuser": 10, "amd": [10, 2002], "rocm": [10, 1997], "hip": [10, 1997], "tool": [10, 17, 2016, 2024], "c10": 10, "dispatch": 10, "onnx": [10, 75, 76, 83, 2006, 2007, 2008, 2009, 2010], "export": [10, 46, 47, 2006, 2007, 2009, 2012, 2015, 2018, 2032, 2036, 2044], "mobil": 10, "edg": [10, 1961, 2012], "model": [10, 15, 46, 67, 1959, 1986, 1994, 1998, 2007, 2011, 2012, 2013, 2015, 2018, 2036, 2042, 2046, 2048], "compress": [10, 2024], "window": [10, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 2005, 2023], "appl": 10, "m1": 10, "powerpc": 10, "aarch64": 10, "librari": [10, 1960, 1968, 2003], "xla": 10, "torchserv": 10, "torchvis": [10, 52], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "complex": [11, 977, 1987, 1996], "number": [11, 17, 43, 1987, 1989, 1994, 2003, 2032], "creat": [11, 1961, 1979], "transit": [11, 43], "from": [11, 43, 53, 58, 1959, 1978, 2005, 2009, 2012], "old": 11, "represent": [11, 75], "access": [11, 1963, 2012, 2054], "real": [11, 479, 1803, 1996], "imag": [11, 307, 1221], "angl": [11, 113, 694], "ab": [11, 85, 677], "serial": [11, 46, 2004, 2032], "control": [12, 46, 54, 58, 65, 2003, 2032, 2045], "flow": [12, 46, 54, 58, 65, 2015, 2032], "cond": [12, 68, 980, 1282], "exampl": [12, 37, 46, 58, 1986, 1991, 1992, 1993, 2007, 2009, 2021, 2040], "invari": 12, "higher_ord": 12, "__config__": 13, "cpp_extens": 14, "extend": [15, 33, 1992, 1993], "extens": [15, 17, 1992, 1998, 2005], "author": [15, 58], "stream": [16, 17, 18, 989, 996, 1004, 1073, 1940, 1955, 1990, 2059], "event": [16, 17, 34, 36, 1001, 1362, 1976], "random": [17, 21, 54, 1994, 2003, 2019, 2032], "commun": [17, 22, 25, 1960, 1995], "collect": [17, 25], "beta": [17, 31], "memori": [17, 21, 1990, 1994, 1997, 1999, 2003, 2056], "manag": [17, 26, 64, 1977, 1990, 1997, 2012, 2053], "nvidia": [17, 2002], "nvtx": [17, 1058, 1059, 1060], "jiter": [17, 1041, 1042], "sanit": [17, 18], "prototyp": [17, 2015, 2016], "usag": [18, 28, 43, 1990, 1993, 1998, 1999, 2005, 2050, 2056], "data": [21, 46, 54, 66, 1964, 1991, 1994, 2009, 2016, 2030], "dataset": 21, "map": [21, 72, 1997], "style": 21, "iter": [21, 1963], "load": [21, 1258, 1322, 1959, 2004, 2012, 2015], "order": [21, 1987], "sampler": 21, "batch": [21, 52, 2002, 2011], "non": [21, 46, 58, 1981, 1984, 1987, 1990, 2002, 2012, 2015], "work": [21, 51, 1972, 1986, 1994, 2024, 2043, 2044, 2052], "collate_fn": 21, "singl": [21, 43, 1986], "multi": [21, 25, 43, 1981, 1984], "platform": 21, "pin": [21, 1990], "ddp": 22, "hook": [22, 1987, 1999, 2050], "us": [22, 25, 58, 1963, 1987, 1990, 1992, 1996, 2007, 2009, 2011, 2012, 2013, 2015, 2024, 2044, 2046, 2052, 2054, 2056], "what": [22, 47, 50, 52, 55, 1971, 1987, 2012, 2041, 2044, 2051, 2052], "doe": [22, 1987, 2043, 2044], "powersgd": 22, "state": [22, 1999, 2012, 2056], "acknowledg": [22, 2013], "deploi": 23, "ha": 23, "been": 23, "move": 23, "multipi": 23, "determinist": 24, "come": [25, 1987], "which": [25, 1987, 2044], "environ": [25, 43, 1998, 2012, 2048], "choos": 25, "network": [25, 1990, 1994, 1999], "interfac": [25, 1256, 1997], "other": [25, 1981, 2003, 2012, 2024, 2032, 2043], "nccl": [25, 1990], "basic": [25, 1964, 1979, 1993, 2020, 2030, 2052], "initi": [25, 1981, 1999, 2030], "tcp": 25, "share": [25, 1977, 1990, 2012, 2022], "file": [25, 1977, 2004, 2012], "system": [25, 1964, 1977, 1993], "post": [25, 2015], "kei": [25, 75, 2005], "valu": [25, 70, 610, 1963, 1964, 2002, 2017, 2022], "store": [25, 42], "group": 25, "devicemesh": 25, "point": [25, 1998], "synchron": [25, 997, 1074, 1371, 1956], "asynchron": [25, 1964, 1990, 2001], "third": 25, "parti": 25, "launch": [25, 43, 2052], "spawn": [25, 1977], "applic": 25, "breakpoint": 25, "monitor": [25, 1975], "barrier": 25, "torch_distributed_debug": 25, "log": [25, 365, 1324, 1998], "join": [26, 2032], "elast": [28, 33, 43], "advanc": [28, 1999], "plugin": 28, "parallel": [30, 1659, 1990, 1991, 1994, 2013, 2032], "probabl": 31, "score": 31, "pathwis": 31, "deriv": [31, 1987], "exponentialfamili": 31, "bernoulli": [31, 149, 938], "binomi": 31, "categor": 31, "cauchi": 31, "chi2": 31, "continuousbernoulli": 31, "dirichlet": 31, "exponenti": [31, 1842], "fishersnedecor": 31, "gamma": 31, "geometr": 31, "gumbel": 31, "halfcauchi": 31, "halfnorm": 31, "independ": 31, "inversegamma": 31, "kumaraswami": 31, "lkjcholeski": 31, "laplac": 31, "lognorm": 31, "lowrankmultivariatenorm": 31, "mixturesamefamili": 31, "multinomi": [31, 417, 1374], "multivariatenorm": 31, "negativebinomi": 31, "normal": [31, 1630, 1731, 1981, 2011], "onehotcategor": 31, "pareto": 31, "poisson": [31, 1778], "relaxedbernoulli": 31, "logitrelaxedbernoulli": 31, "relaxedonehotcategor": 31, "studentt": 31, "transformeddistribut": 31, "uniform": 31, "vonmis": 31, "weibul": 31, "wishart": 31, "kl": 31, "diverg": [31, 1966], "constraint": [31, 1990], "registri": [31, 42, 83], "dlpack": 32, "agent": 33, "server": [33, 42, 44], "concept": 33, "watchdog": 33, "launcher": 34, "rendezv": [34, 42, 43], "handler": [34, 39, 42, 1994], "metric": [34, 39], "error": [35, 1994, 2005, 2015, 2016, 2054], "propag": [35, 1979], "object": [36, 67, 2012], "torchelast": 38, "kubernet": 38, "multipl": [40, 1986, 1990, 1992, 2013], "worker": [40, 43, 1994], "quickstart": 41, "except": [42, 1994], "dynam": [42, 46, 54, 58, 69, 70, 2015, 2018, 2042, 2043], "c10d": 42, "etcd": 42, "legaci": 42, "torchrun": 43, "node": [43, 47, 76, 79, 82, 917, 918, 919, 920, 921, 1987], "stack": [43, 1879, 2015], "fault": 43, "toler": 43, "size": [43, 533, 1980, 1995], "failur": 43, "min": [43, 407, 1353], "max": [43, 403, 1348], "4": [43, 52], "up": [43, 2044], "membership": [43, 1964], "note": [43, 75, 1960, 1964, 1990, 1995, 2015, 2020], "definit": [43, 1964], "deploy": [43, 1998], "import": [43, 1959, 2005, 2012, 2043], "notic": [43, 1959], "expir": 44, "timer": 44, "client": 44, "write": [44, 58, 1987, 1992, 2009, 2053], "train": [45, 1986, 1999, 2001, 2015, 2044], "script": [45, 1262, 1961, 2005, 2009], "exist": 46, "framework": [46, 2012, 2020], "an": [46, 1959, 2009, 2011, 2012], "express": [46, 1963, 1964], "special": [46, 1964, 1987, 2025], "shape": [46, 54, 69, 519, 2009, 2042, 2043], "limit": [46, 54, 58, 1959, 1993, 2009, 2039, 2044, 2045, 2050], "break": [46, 1963, 1964, 2044, 2052, 2054], "depend": [46, 54, 2007, 2012, 2021], "miss": 46, "meta": [46, 1964, 1972], "kernel": [46, 933, 1997, 2015, 2048], "read": [46, 50, 2009, 2035, 2051], "addit": [46, 75], "link": 46, "user": [46, 2012, 2022, 2035], "deep": [46, 2035, 2041], "dive": [46, 2035, 2041], "ir": [47, 2049, 2053], "assumpt": [47, 2022], "i": [47, 55, 1971, 1987, 2012, 2041, 2043, 2044, 2051], "exportedprogram": 47, "call_funct": 47, "metadata": [47, 917, 1998], "placehold": 47, "output": [47, 1996], "get_attr": 47, "symint": [47, 2042], "faketensor": 47, "pytre": 47, "abl": 47, "helper": 48, "fullyshardeddataparallel": 49, "func": [50, 51, 53, 55, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1992, 1993, 2044], "ar": [50, 55, 1959, 1987, 2012, 2044], "compos": [50, 55, 2040], "why": [50, 55, 1990, 1996, 2012, 2024, 2044], "patch": [52, 2012], "norm": [52, 449, 1307, 1730], "": [52, 2012, 2044, 2051], "happen": 52, "option": [52, 1963, 1989, 2005, 2011], "batchnorm": 52, "paramet": [52, 1676, 1963, 2011], "functorch": [52, 53], "eval": [52, 1987], "migrat": [53, 1961], "make_funct": 53, "combine_state_for_ensembl": 53, "ux": 54, "vmap": [54, 55, 888, 1167, 1935, 1992, 1993, 2044], "mutat": [54, 73, 2032], "arbitrari": [54, 2012], "structur": [54, 66, 1964, 2024], "out": [54, 1978, 1994], "item": [54, 348], "nonzero": [54, 448, 1729], "friend": 54, "whirlwind": 55, "tour": 55, "grad": [55, 286, 910, 1157, 1987, 1990, 2044], "auto": 55, "vector": 55, "vjp": [55, 909, 1166], "jacobian": [55, 906], "product": [55, 1969, 2044], "jvp": [55, 887, 907, 1162, 1993], "jacrev": [55, 1161], "jacfwd": [55, 1160], "hessian": [55, 904, 1159], "__future__": 56, "futur": 57, "A": [58, 1999, 2007], "quick": 58, "primer": 58, "manipul": [58, 1979], "direct": 58, "subgraph": [58, 2053], "rewrit": [58, 2053], "With": [58, 1966], "replace_pattern": 58, "proxi": 58, "retrac": 58, "interpret": [58, 1961], "pattern": [58, 1963, 2009, 2012], "introduct": [58, 1971, 1980, 2015], "pitfal": [58, 2009], "pdb": 58, "print": [58, 1963, 1964], "to_fold": 58, "graphmodul": 58, "avail": 58, "debugg": 58, "symbol": [58, 78, 81, 2009, 2015, 2032], "trace": [58, 587, 1266, 1906, 1961, 2009, 2014, 2015, 2044, 2045, 2052], "static": [58, 2009, 2015], "tracer": [58, 1961], "leaf": 58, "miscellanea": 58, "experiment": [59, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1969], "symbolic_shap": [59, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191], "exportdb": 60, "tag": [60, 2032], "support": [60, 1962, 1964, 1971, 1978, 1979, 1980, 1993, 2009, 2010, 2015, 2024, 2044, 2050], "assume_constant_result": [60, 71, 971], "autograd_funct": 60, "class_method": 60, "cond_branch_class_method": [60, 68, 69], "cond_branch_nested_funct": [60, 68, 69], "cond_branch_nonlocal_vari": [60, 68, 69], "cond_closed_over_vari": [60, 63, 68], "cond_operand": [60, 68, 69], "cond_pred": [60, 68, 69], "constrain_as_size_exampl": [60, 70, 71], "constrain_as_value_exampl": [60, 70, 71], "decor": 60, "dictionari": [60, 66, 1964], "dynamic_shape_assert": [60, 61], "dynamic_shape_constructor": [60, 69], "dynamic_shape_if_guard": [60, 65, 69], "dynamic_shape_map": [60, 69, 72], "dynamic_shape_sl": [60, 69], "dynamic_shape_view": [60, 69], "fn_with_kwarg": [60, 66], "list_contain": [60, 61, 66, 69], "list_unpack": [60, 65, 66], "nested_funct": [60, 63], "null_context_manag": [60, 64], "pytree_flatten": 60, "scalar_output": [60, 69], "specialized_attribut": 60, "static_for_loop": [60, 65], "static_if": [60, 65], "tensor_setattr": [60, 62], "type_reflection_method": [60, 62], "user_input_mut": [60, 73], "Not": [60, 1966], "yet": 60, "dynamic_shape_round": [60, 62, 69], "model_attr_mut": [60, 67], "optional_input": [60, 67], "torch_sym_min": [60, 74], "assert": [61, 1964, 1997], "builtin": [62, 1962], "closur": [63, 2011], "escap": [71, 2044], "hatch": [71, 2044], "fxe0007": 75, "fxe0008": 76, "fxe0010": 77, "pass": [77, 1964, 1990, 2001, 2015, 2021, 2053], "fxe0011": 78, "call": [78, 1963, 1964, 1993, 2044], "fxe0012": 79, "unsupport": [79, 1963, 1964, 1966, 2009, 2010], "analysi": 79, "fxe0013": 80, "fxe0014": 81, "find": [81, 83, 2012, 2052], "opschema": 81, "match": [81, 1963, 1979], "fxe0015": 82, "insert": 82, "fxe0016": 83, "overload": 83, "abs_": 86, "absolut": [87, 678], "absolute_": 88, "aco": [89, 679], "acos_": 90, "acosh": [91, 680], "acosh_": 92, "add_": 94, "addbmm": [95, 682], "addbmm_": 96, "addcdiv": [97, 683], "addcdiv_": 98, "addcmul": [99, 684], "addcmul_": 100, "addmm": [101, 685, 1859], "addmm_": 102, "addmv": [103, 686], "addmv_": 104, "addr": [105, 687], "addr_": 106, "adjoint": [107, 688], "all": [108, 689, 1992, 2009, 2011], "allclos": [109, 690], "amax": [110, 691], "amin": [111, 692], "aminmax": [112, 693], "ani": [114, 695, 1964, 2044, 2051], "apply_": 115, "arcco": [116, 862], "arccos_": 117, "arccosh": [118, 863], "arccosh_": 119, "arcsin": [120, 864], "arcsin_": 121, "arcsinh": [122, 865], "arcsinh_": 123, "arctan": [124, 866], "arctan2": [125, 867], "arctan2_": 126, "arctan_": 127, "arctanh": [128, 868], "arctanh_": 129, "argmax": [130, 870], "argmin": [131, 871], "argsort": [132, 872], "argwher": [133, 873], "as_strid": [134, 874], "as_subclass": 135, "asin": [136, 877], "asin_": 137, "asinh": [138, 878], "asinh_": 139, "atan": [140, 879], "atan2": [141, 880], "atan2_": 142, "atan_": 143, "atanh": [144, 881], "atanh_": 145, "backward": [146, 885, 889, 1987, 1988, 1990, 1996, 2021], "baddbmm": [147, 936], "baddbmm_": 148, "bernoulli_": 150, "bincount": [152, 939], "bitwise_and": [153, 940], "bitwise_and_": 154, "bitwise_left_shift": [155, 941], "bitwise_left_shift_": 156, "bitwise_not": [157, 942], "bitwise_not_": 158, "bitwise_or": [159, 943], "bitwise_or_": 160, "bitwise_right_shift": [161, 944], "bitwise_right_shift_": 162, "bitwise_xor": [163, 945], "bitwise_xor_": 164, "bmm": [165, 948], "bool": 166, "broadcast_to": [167, 951], "byte": 168, "cauchy_": 169, "ccol_indic": 170, "cdoubl": 171, "ceil": [172, 957], "ceil_": 173, "cfloat": 174, "chalf": 175, "char": 176, "choleski": [177, 959, 1280], "cholesky_invers": [178, 960], "cholesky_solv": [179, 961], "chunk": [180, 962], "clamp": [181, 767, 963], "clamp_": 182, "clip": [183, 964, 1986], "clip_": 184, "clone": [185, 965], "coalesc": 186, "col_indic": 187, "conj": [188, 981], "conj_phys": [189, 982], "conj_physical_": 190, "contigu": 191, "copy_": 192, "copysign": [193, 983], "copysign_": 194, "corrcoef": [195, 984], "co": [196, 985], "cos_": 197, "cosh": [198, 986], "cosh_": 199, "count_nonzero": [200, 987], "cov": [201, 988], "cross": [203, 998, 1283, 1987], "crow_indic": 204, "cummax": [206, 1077], "cummin": [207, 1078], "cumprod": [208, 1079], "cumprod_": 209, "cumsum": [210, 1080], "cumsum_": 211, "data_ptr": 212, "deg2rad": [213, 1082], "dense_dim": 214, "dequant": [215, 1083, 2015], "det": [216, 1084, 1284], "detach": 217, "detach_": 218, "devic": [219, 1020, 1944, 1972, 1990, 2002, 2027], "diag": [220, 1085], "diag_emb": [221, 1086], "diagflat": [222, 1087], "diagon": [223, 1088, 1285], "diagonal_scatt": [224, 1089], "diff": [225, 1090], "digamma": [226, 1091], "digamma_": 227, "dim": [228, 1978], "dim_ord": 229, "dist": [230, 1092], "div": [231, 1093, 2004], "div_": 232, "divid": [233, 1094], "divide_": 234, "dot": [235, 1095], "doubl": 236, "dsplit": [237, 1096], "element_s": 238, "eq": [239, 1103], "eq_": 240, "equal": [241, 1104], "erf": [242, 1105], "erf_": 243, "erfc": [244, 1106], "erfc_": 245, "erfinv": [246, 1107], "erfinv_": 247, "exp": [248, 1108], "exp_": 249, "expand": 250, "expand_a": 251, "expm1": [252, 1110], "expm1_": 253, "exponential_": 254, "fill_": 255, "fill_diagonal_": 256, "fix_": 258, "flatten": [259, 1137, 1433], "flip": [260, 1138], "fliplr": [261, 1139], "flipud": [262, 1140], "float": [263, 2004], "float_pow": [264, 1141], "float_power_": 265, "floor": [266, 1142], "floor_": 267, "floor_divid": [268, 1143], "floor_divide_": 269, "fmax": [270, 1144], "fmin": [271, 1145], "fmod": [272, 1146], "fmod_": 273, "frac": [274, 1147], "frac_": 275, "frexp": [276, 1148], "gather": [277, 1013, 1192], "gcd": [278, 1193], "gcd_": 279, "ge": [280, 1194], "ge_": 281, "geometric_": 282, "geqrf": [283, 1195], "ger": [284, 1196], "get_devic": 285, "greater": [287, 1205], "greater_": 288, "greater_equ": [289, 1206], "greater_equal_": 290, "gt": [291, 1207], "gt_": 292, "half": 293, "hardshrink": [294, 1443, 1596], "heavisid": [295, 1210], "histc": [296, 1211], "histogram": [297, 1212], "hsplit": [298, 1214], "hypot": [299, 1217], "hypot_": 300, "i0": [301, 1218], "i0_": 302, "igamma": [303, 1219], "igamma_": 304, "igammac": [305, 1220], "igammac_": 306, "index_add": [308, 1222], "index_add_": 309, "index_copi": [310, 1223], "index_copy_": 311, "index_fil": 312, "index_fill_": 313, "index_put": 314, "index_put_": 315, "index_reduc": [316, 1224], "index_reduce_": 317, "index_select": [318, 1225], "indic": [319, 1960], "inner": [320, 1227], "int": 321, "int_repr": 322, "invers": [323, 1228, 1969], "is_coalesc": 324, "is_complex": [325, 1229], "is_conj": [326, 1230], "is_contigu": 327, "is_cuda": 328, "is_floating_point": [329, 1232], "is_infer": 330, "is_leaf": 331, "is_meta": 332, "is_pin": 333, "is_quant": 334, "is_set_to": 335, "is_shar": 336, "is_sign": 337, "is_spars": 338, "is_sparse_csr": 339, "isclos": [340, 1239], "isfinit": [341, 1240], "isinf": [342, 1242], "isnan": [343, 1243], "isneginf": [344, 1244], "isposinf": [345, 1245], "isreal": [346, 1246], "istft": [347, 1247], "items": 349, "kthvalu": [350, 1272], "lcm": [351, 1273], "lcm_": 352, "ldexp": [353, 1274], "ldexp_": 354, "le": [355, 1275], "le_": 356, "lerp": [357, 1276], "lerp_": 358, "less": [359, 1277], "less_": 360, "less_equ": [361, 1278], "less_equal_": 362, "lgamma": [363, 1279], "lgamma_": 364, "log10": [366, 1325], "log10_": 367, "log1p": [368, 1326], "log1p_": 369, "log2": [370, 1327], "log2_": 371, "log_": 372, "log_normal_": 373, "logaddexp": [374, 1328], "logaddexp2": [375, 1329], "logcumsumexp": [376, 1330], "logdet": [377, 1331], "logical_and": [378, 1332], "logical_and_": 379, "logical_not": [380, 1333], "logical_not_": 381, "logical_or": [382, 1334], "logical_or_": 383, "logical_xor": [384, 1335], "logical_xor_": 385, "logit": [386, 1336], "logit_": 387, "logsumexp": [388, 1338], "long": 389, "lt": [390, 1339], "lt_": 391, "lu": [392, 1297, 1340], "lu_solv": [393, 1300, 1341], "map_": 394, "masked_fil": 395, "masked_fill_": 396, "masked_scatt": 397, "masked_scatter_": 398, "masked_select": [399, 1344], "matmul": [400, 1301, 1345], "matrix_exp": [401, 1302, 1346], "matrix_pow": [402, 1304, 1347], "maximum": [404, 1349], "mean": [405, 1350], "median": [406, 1351], "minimum": [408, 1354], "mm": [409, 1355, 1863], "module_load": 411, "moveaxi": [412, 1357], "movedim": [413, 1358], "msort": [414, 1372], "mul": [415, 1373], "mul_": 416, "multipli": [418, 1375], "multiply_": 419, "mv": [420, 1376], "mvlgamma": [421, 1377], "mvlgamma_": 422, "nan_to_num": [423, 1378], "nan_to_num_": 424, "nanmean": [425, 1379], "nanmedian": [426, 1380], "nanquantil": [427, 1381], "nansum": [428, 1382], "narrow": [429, 1383], "narrow_copi": [430, 1384], "nbyte": 431, "ndim": 432, "ndimens": 433, "ne": [434, 1385], "ne_": 435, "neg": [436, 438, 1386, 1387], "neg_": 437, "negative_": 439, "nelement": 440, "new_empti": 441, "new_ful": 442, "new_on": 443, "new_tensor": 444, "new_zero": 445, "nextaft": [446, 1388], "nextafter_": 447, "normal_": 450, "not_equ": [451, 1732], "not_equal_": 452, "numel": [453, 1733], "numpi": [454, 2009, 2044], "orgqr": [455, 1772], "ormqr": [456, 1773], "outer": [457, 1774], "permut": [458, 1776, 1978], "pin_memori": 459, "pinvers": [460, 1777], "polygamma": [461, 1780], "polygamma_": 462, "posit": [463, 1781], "pow": [464, 1782], "pow_": 465, "prod": [466, 1783], "put_": 467, "q_per_channel_axi": 468, "q_per_channel_scal": 469, "q_per_channel_zero_point": 470, "q_scale": 471, "q_zero_point": 472, "qr": [473, 1309, 1785], "qscheme": 474, "quantil": [475, 1786], "rad2deg": [476, 1793], "random_": 477, "ravel": [478, 1802], "reciproc": [480, 1804], "reciprocal_": 481, "record_stream": 482, "register_hook": [483, 920], "register_post_accumulate_grad_hook": 484, "remaind": [485, 1805], "remainder_": 486, "renorm": [487, 1806], "renorm_": 488, "repeat": 489, "repeat_interleav": [490, 1807], "requires_grad": [491, 1987], "requires_grad_": 492, "reshap": [493, 1808], "reshape_a": 494, "resize_": 495, "resize_as_": 496, "resolve_conj": [497, 1809], "resolve_neg": [498, 1810], "retain_grad": 499, "retains_grad": 500, "roll": [501, 1812], "rot90": [502, 1813], "round": [503, 1814], "round_": 504, "row_indic": 505, "rsqrt": [506, 1816], "rsqrt_": 507, "scatter": [508, 1015, 1818], "scatter_": 509, "scatter_add": [510, 1819], "scatter_add_": 511, "scatter_reduc": [512, 1820], "scatter_reduce_": 513, "select": [514, 1823, 1971], "select_scatt": [515, 1824], "set_": 516, "sgn": [517, 1836], "sgn_": 518, "share_memory_": 520, "short": 521, "sigmoid": [522, 755, 1518, 1646, 1837], "sigmoid_": 523, "sign": [524, 1838], "sign_": 525, "signbit": [526, 1850], "sin": [527, 1851], "sin_": 528, "sinc": [529, 1852], "sinc_": 530, "sinh": [531, 1853], "sinh_": 532, "slice_scatt": [534, 1854], "slogdet": [535, 1310, 1855], "smm": [536, 1856], "softmax": [537, 1521, 1650, 1857, 1865], "sort": [538, 1858], "sparse_dim": 539, "sparse_mask": 540, "sparse_resize_": 541, "sparse_resize_and_clear_": 542, "split": [543, 1874], "sqrt": [544, 1875], "sqrt_": 545, "squar": [546, 1876], "square_": 547, "squeez": [548, 1877], "squeeze_": 549, "sspaddmm": [550, 1878], "std": [551, 1880], "stft": [552, 1882], "storag": [553, 2026], "storage_offset": 554, "storage_typ": 555, "stride": 556, "sub": [557, 1883], "sub_": 558, "subtract": [559, 1884], "subtract_": 560, "sum": [561, 1867, 1885, 1981], "sum_to_s": 562, "svd": [563, 1314, 1886], "swapax": [564, 1888], "swapdim": [565, 1889], "t": [566, 1896, 1964, 1994, 2044], "t_": 567, "take": [568, 1897, 2011], "take_along_dim": [569, 1898], "tan": [570, 1899], "tan_": 571, "tanh": [572, 1528, 1655, 1900], "tanh_": 573, "tensor_split": [574, 1902], "tile": [575, 1904], "to_dens": 577, "to_mkldnn": 578, "to_spars": 579, "to_sparse_bsc": 580, "to_sparse_bsr": 581, "to_sparse_coo": 582, "to_sparse_csc": 583, "to_sparse_csr": 584, "tolist": 585, "topk": [586, 1905], "transpos": [588, 1907], "transpose_": 589, "triangular_solv": [590, 1910], "tril": [591, 1911], "tril_": 592, "triu": [593, 1913], "triu_": 594, "true_divid": [595, 1915], "true_divide_": 596, "trunc": [597, 1916], "trunc_": 598, "type_a": 600, "unbind": [601, 1917, 1980], "unflatten": [602, 1538, 1918], "unfold": [603, 1539, 1662], "uniform_": 604, "uniqu": [605, 1919], "unique_consecut": [606, 1920], "unsqueez": [607, 1922], "unsqueeze_": 608, "untyped_storag": 609, "var": [611, 1930], "vdot": [612, 1932], "view": [613, 1971, 2004, 2028, 2052], "view_a": 614, "vsplit": [615, 1936], "where": [616, 1938, 1959], "xlogi": [617, 1939], "xlogy_": 618, "zero_": 619, "_assert": 620, "_foreach_ab": 621, "_foreach_abs_": 622, "_foreach_aco": 623, "_foreach_acos_": 624, "_foreach_asin": 625, "_foreach_asin_": 626, "_foreach_atan": 627, "_foreach_atan_": 628, "_foreach_ceil": 629, "_foreach_ceil_": 630, "_foreach_co": 631, "_foreach_cos_": 632, "_foreach_cosh": 633, "_foreach_cosh_": 634, "_foreach_erf": 635, "_foreach_erf_": 636, "_foreach_erfc": 637, "_foreach_erfc_": 638, "_foreach_exp": 639, "_foreach_exp_": 640, "_foreach_expm1": 641, "_foreach_expm1_": 642, "_foreach_floor": 643, "_foreach_floor_": 644, "_foreach_frac": 645, "_foreach_frac_": 646, "_foreach_lgamma": 647, "_foreach_lgamma_": 648, "_foreach_log": 649, "_foreach_log10": 650, "_foreach_log10_": 651, "_foreach_log1p": 652, "_foreach_log1p_": 653, "_foreach_log2": 654, "_foreach_log2_": 655, "_foreach_log_": 656, "_foreach_neg": 657, "_foreach_neg_": 658, "_foreach_reciproc": 659, "_foreach_reciprocal_": 660, "_foreach_round": 661, "_foreach_round_": 662, "_foreach_sigmoid": 663, "_foreach_sigmoid_": 664, "_foreach_sin": 665, "_foreach_sin_": 666, "_foreach_sinh": 667, "_foreach_sinh_": 668, "_foreach_sqrt": 669, "_foreach_sqrt_": 670, "_foreach_tan": 671, "_foreach_tan_": 672, "_foreach_trunc": 673, "_foreach_trunc_": 674, "_foreach_zero_": 675, "_log": [676, 1970], "set_log": 676, "bnrelu2d": [696, 719], "bnrelu3d": [697, 720], "convbn1d": [698, 708], "convbn2d": [699, 709], "convbn3d": [700, 710], "convbnrelu1d": [701, 711], "convbnrelu2d": [702, 712], "convbnrelu3d": [703, 713], "convrelu1d": [704, 721], "convrelu2d": [705, 714, 722], "convrelu3d": [706, 715, 723], "linearrelu": [707, 716, 724, 725], "freeze_bn_stat": 717, "update_bn_stat": 718, "conv2d": [726, 735, 769, 1416, 1569], "conv3d": [727, 736, 770, 1417, 1570], "lstm": [730, 758, 1458, 2003], "multiheadattent": [731, 1494], "batchnorm2d": [732, 1403], "batchnorm3d": [733, 1404], "conv1d": [734, 768, 1415, 1568], "convtranspose1d": [737, 1418], "convtranspose2d": [738, 1419], "convtranspose3d": [739, 1420], "elu": [740, 771, 1429, 1582], "embed": [741, 1430, 1584], "embeddingbag": [742, 1431], "fxfloatfunct": 743, "floatfunct": 744, "groupnorm": [745, 1442], "hardswish": [746, 773, 1445, 1598], "instancenorm1d": [747, 1450], "instancenorm2d": [748, 1451], "instancenorm3d": [749, 1452], "layernorm": [750, 1460], "leakyrelu": [751, 1474], "qfunction": 753, "relu6": [754, 1508, 1640], "gru": [756, 1439], "grucel": [757, 1440], "lstmcell": [759, 1459], "rnncell": [761, 1505], "adaptive_avg_pool2d": [762, 1553], "adaptive_avg_pool3d": [763, 1554], "avg_pool2d": [764, 1561], "avg_pool3d": [765, 1562], "celu": [766, 1406, 1567], "hardsigmoid": [772, 1444, 1597], "hardtanh": [774, 1446, 1599], "interpol": [775, 1604], "leaky_relu": [776, 1608], "max_pool1d": [778, 1618], "max_pool2d": [779, 1619], "threshold": [780, 1530, 1657], "upsampl": [781, 1540, 1663], "upsample_bilinear": [782, 1664], "upsample_nearest": [783, 1665], "dequantstub": 784, "quantstub": 785, "quantwrapp": 786, "add_quant_dequ": 787, "backendconfig": 788, "backendpatternconfig": 789, "dtypeconfig": 790, "dtypewithconstraint": 791, "observationtyp": 792, "convert": [793, 2043], "default_eval_fn": 794, "fakequant": [795, 2015], "fakequantizebas": 796, "fixedqparamsfakequant": 797, "fusedmovingavgobsfakequant": 798, "default_fake_qu": 799, "default_fused_act_fake_qu": 800, "default_fused_per_channel_wt_fake_qu": 801, "default_fused_wt_fake_qu": 802, "default_histogram_fake_qu": 803, "default_per_channel_weight_fake_qu": 804, "default_weight_fake_qu": 805, "disable_fake_qu": 806, "disable_observ": 807, "enable_fake_qu": 808, "enable_observ": 809, "fuse_modul": 810, "convertcustomconfig": 811, "fusecustomconfig": 812, "preparecustomconfig": 813, "standalonemoduleconfigentri": 814, "histogramobserv": 815, "minmaxobserv": 816, "movingaverageminmaxobserv": 817, "movingaverageperchannelminmaxobserv": 818, "noopobserv": 819, "observerbas": 820, "perchannelminmaxobserv": 821, "placeholderobserv": 822, "recordingobserv": 823, "default_debug_observ": 824, "default_dynamic_quant_observ": 825, "default_float_qparams_observ": 826, "default_histogram_observ": 827, "default_observ": 828, "default_per_channel_weight_observ": 829, "default_placeholder_observ": 830, "default_weight_observ": 831, "get_observer_state_dict": 832, "load_observer_state_dict": 833, "prepar": [834, 2015, 2018], "prepare_qat": 835, "propagate_qconfig": 836, "qconfig": [837, 2015, 2018], "default_activation_only_qconfig": 838, "default_debug_qconfig": 839, "default_dynamic_qconfig": 840, "default_per_channel_qconfig": 841, "default_qat_qconfig": 842, "default_qat_qconfig_v2": 843, "default_qconfig": 844, "default_weight_only_qconfig": 845, "float16_dynamic_qconfig": 846, "float16_static_qconfig": 847, "float_qparams_weight_only_qconfig": 848, "per_channel_dynamic_qconfig": 849, "qconfigmap": 850, "get_default_qat_qconfig_map": 851, "get_default_qconfig_map": 852, "quantiz": [853, 1981, 1999, 2009, 2015, 2016, 2017, 2018], "quantize_dynam": 854, "convert_fx": 855, "fuse_fx": 856, "prepare_fx": 857, "prepare_qat_fx": 858, "quantize_qat": 859, "swap_modul": 860, "arang": 861, "are_deterministic_algorithms_en": 869, "as_tensor": 875, "asarrai": 876, "atleast_1d": 882, "atleast_2d": 883, "atleast_3d": 884, "unpackeddualtensor": 890, "dual_level": 891, "forward_ad": [892, 893, 894, 895], "enter_dual_level": 892, "exit_dual_level": 893, "make_du": 894, "unpack_du": 895, "backwardcfunct": 896, "functionctx": [897, 898, 899, 900], "mark_dirti": 897, "mark_non_differenti": 898, "save_for_backward": 899, "set_materialize_grad": 900, "inplacefunct": 901, "nestediofunct": 902, "once_differenti": 903, "hvp": 905, "vhp": 908, "inference_mod": 911, "set_grad_en": 912, "set_multithreading_en": 913, "gradcheck": [914, 915, 916, 1996], "gradcheckerror": 914, "gradgradcheck": [916, 1996], "name": [918, 1963, 1978, 1979], "next_funct": 919, "register_prehook": 921, "increment_vers": 922, "enforceuniqu": 923, "kinetosteptrack": 924, "load_nvprof": 925, "parse_nvprof_trac": 926, "export_chrome_trac": 927, "key_averag": 928, "self_cpu_time_tot": 929, "total_averag": 930, "record_funct": 931, "interv": 932, "memrecordsacc": 934, "stringtabl": 935, "bartlett_window": 937, "blackman_window": 946, "block_diag": 947, "broadcast_shap": 949, "broadcast_tensor": 950, "bucket": 952, "can_cast": 953, "cartesian_prod": 954, "cat": 955, "cdist": 956, "chain_matmul": 958, "column_stack": 966, "combin": [967, 1992], "compiled_with_cxx11_abi": 969, "allow_in_graph": [970, 2045], "cudagraph_mark_step_begin": 973, "list_backend": 975, "reset": 976, "concat": 978, "concaten": 979, "streamcontext": [990, 1005, 1941], "current_devic": [991, 1017, 1942], "current_stream": [992, 1018, 1943], "device_count": [993, 1021, 1945], "is_avail": [994, 1038, 1951], "set_devic": [995, 1067, 1953], "cudagraph": [999, 2039], "cudapluggablealloc": 1000, "externalstream": 1002, "outofmemoryerror": 1003, "caching_allocator_alloc": 1006, "caching_allocator_delet": 1007, "can_device_access_p": 1008, "change_current_alloc": 1009, "clock_rat": 1010, "comm": [1011, 1012, 1013, 1014, 1015], "broadcast": [1011, 1988], "broadcast_coalesc": 1012, "reduce_add": 1014, "current_blas_handl": 1016, "default_stream": 1019, "device_of": [1022, 1946], "empty_cach": [1023, 1361], "get_allocator_backend": 1024, "get_arch_list": 1025, "get_device_cap": [1026, 1947], "get_device_nam": [1027, 1948], "get_device_properti": [1028, 1949], "get_gencode_flag": 1029, "get_rng_stat": [1030, 1203, 1363], "get_rng_state_al": 1031, "get_sync_debug_mod": 1032, "graph_pool_handl": 1034, "init": [1035, 1950, 1985], "initial_se": [1036, 1226], "ipc_collect": 1037, "is_current_stream_captur": 1039, "is_initi": [1040, 1952], "_create_jit_fn": 1041, "_create_multi_output_jit_fn": 1042, "list_gpu_process": 1043, "make_graphed_cal": 1044, "manual_se": [1045, 1343, 1364], "manual_seed_al": 1046, "max_memory_alloc": 1047, "max_memory_cach": 1048, "max_memory_reserv": 1049, "mem_get_info": 1050, "memory_alloc": 1051, "memory_cach": 1052, "memory_reserv": 1053, "memory_snapshot": 1054, "memory_stat": 1055, "memory_summari": 1056, "memory_usag": 1057, "mark": 1058, "range_pop": 1059, "range_push": 1060, "power_draw": 1061, "reset_max_memory_alloc": 1062, "reset_max_memory_cach": 1063, "reset_peak_memory_stat": 1064, "seed": [1065, 1368, 1822], "seed_al": 1066, "set_per_process_memory_fract": [1068, 1369], "set_rng_stat": [1069, 1370, 1834], "set_rng_state_al": 1070, "set_stream": [1071, 1954], "set_sync_debug_mod": 1072, "temperatur": 1075, "cumulative_trapezoid": 1081, "dstack": 1097, "einsum": 1098, "empti": 1099, "empty_lik": 1100, "empty_strid": 1101, "enable_grad": 1102, "exp2": 1109, "ey": 1111, "fake_quantize_per_channel_affin": 1112, "fake_quantize_per_tensor_affin": 1113, "fft2": 1115, "fftfreq": 1116, "fftn": 1117, "fftshift": 1118, "hfft": 1119, "hfft2": 1120, "hfftn": 1121, "ifft": 1122, "ifft2": 1123, "ifftn": 1124, "ifftshift": 1125, "ihfft": 1126, "ihfft2": 1127, "ihfftn": 1128, "irfft": 1129, "irfft2": 1130, "irfftn": 1131, "rfft": 1132, "rfft2": 1133, "rfftfreq": 1134, "rfftn": 1135, "from_dlpack": 1149, "from_fil": 1150, "from_numpi": 1151, "frombuff": 1152, "full": [1153, 2004], "full_lik": 1154, "functional_cal": [1155, 1725], "grad_and_valu": 1158, "replace_all_batch_norm_modules_": 1164, "stack_module_st": 1165, "dimconstraint": 1168, "dimdynam": [1169, 2042], "equalityconstraint": 1170, "relaxedunspecconstraint": 1171, "shapeenv": 1172, "statefulsymboliccontext": 1173, "statelesssymboliccontext": 1174, "strictminmaxconstraint": 1175, "subclasssymboliccontext": 1176, "symboliccontext": 1177, "canonicalize_bool_expr": 1178, "constrain_rang": 1179, "constrain_unifi": 1180, "definitely_fals": 1181, "definitely_tru": 1182, "guard_size_oblivi": 1183, "has_free_symbol": 1184, "hint_int": 1185, "is_concrete_bool": 1186, "is_concrete_int": 1187, "parallel_and": 1188, "parallel_or": 1189, "statically_known_tru": 1190, "sym_eq": 1191, "get_default_devic": 1197, "get_default_dtyp": 1198, "get_deterministic_debug_mod": 1199, "get_float32_matmul_precis": 1200, "get_num_interop_thread": 1201, "get_num_thread": 1202, "hamming_window": 1208, "hann_window": 1209, "histogramdd": 1213, "hspmm": 1215, "hstack": 1216, "is_deterministic_algorithms_warn_only_en": 1231, "is_grad_en": 1233, "is_inference_mode_en": 1234, "is_nonzero": 1235, "is_storag": 1236, "is_tensor": 1237, "is_warn_always_en": 1238, "isin": 1241, "attribut": [1248, 1961, 1963, 1964, 1966, 2027], "scriptfunct": 1249, "scriptmodul": [1250, 2004], "annot": [1251, 1964], "enable_onednn_fus": 1252, "fork": 1253, "freez": 1254, "ignor": 1255, "isinst": 1257, "onednn_fusion_en": 1259, "optimize_for_infer": 1260, "save": [1261, 1817, 1959, 1987, 1998, 2004, 2015], "script_if_trac": 1263, "set_fusion_strategi": 1264, "strict_fus": 1265, "trace_modul": 1267, "unus": 1268, "wait": 1269, "kaiser_window": 1270, "kron": 1271, "cholesky_ex": 1281, "eig": 1286, "eigh": 1287, "eigval": 1288, "eigvalsh": 1289, "householder_product": 1290, "inv": 1291, "inv_ex": 1292, "ldl_factor": 1293, "ldl_factor_ex": 1294, "ldl_solv": 1295, "lstsq": 1296, "lu_factor": 1298, "lu_factor_ex": 1299, "matrix_norm": 1303, "matrix_rank": 1305, "multi_dot": 1306, "pinv": 1308, "solv": 1311, "solve_ex": 1312, "solve_triangular": 1313, "svdval": 1315, "tensorinv": 1316, "tensorsolv": 1317, "vander": [1318, 1929], "vecdot": 1319, "vector_norm": 1320, "linspac": 1321, "lobpcg": 1323, "logspac": 1337, "lu_unpack": 1342, "meshgrid": 1352, "current_allocated_memori": 1359, "driver_allocated_memori": 1360, "stop": 1367, "adaptiveavgpool1d": 1389, "adaptiveavgpool2d": 1390, "adaptiveavgpool3d": 1391, "adaptivelogsoftmaxwithloss": 1392, "adaptivemaxpool1d": 1393, "adaptivemaxpool2d": 1394, "adaptivemaxpool3d": 1395, "alphadropout": 1396, "avgpool1d": 1397, "avgpool2d": 1398, "avgpool3d": 1399, "bceloss": 1400, "bcewithlogitsloss": 1401, "batchnorm1d": 1402, "bilinear": [1405, 1564], "ctcloss": 1407, "channelshuffl": 1408, "circularpad1d": 1409, "circularpad2d": 1410, "circularpad3d": 1411, "constantpad1d": 1412, "constantpad2d": 1413, "constantpad3d": 1414, "cosineembeddingloss": 1421, "cosinesimilar": 1422, "crossentropyloss": 1423, "dataparallel": [1424, 1981, 1984, 1986, 1990], "dropout": [1425, 1578, 1981, 1984], "dropout1d": [1426, 1579], "dropout2d": [1427, 1580], "dropout3d": [1428, 1581], "featurealphadropout": 1432, "fold": [1434, 1587], "fractionalmaxpool2d": 1435, "fractionalmaxpool3d": 1436, "gelu": [1437, 1591], "glu": [1438, 1592], "gaussiannllloss": 1441, "hingeembeddingloss": 1447, "huberloss": 1448, "ident": [1449, 1699, 1707, 1964, 1994], "kldivloss": 1453, "l1loss": 1454, "lppool1d": 1455, "lppool2d": 1456, "lppool3d": 1457, "lazybatchnorm1d": 1461, "lazybatchnorm2d": 1462, "lazybatchnorm3d": 1463, "lazyconv1d": 1464, "lazyconv2d": 1465, "lazyconv3d": 1466, "lazyconvtranspose1d": 1467, "lazyconvtranspose2d": 1468, "lazyconvtranspose3d": 1469, "lazyinstancenorm1d": 1470, "lazyinstancenorm2d": 1471, "lazyinstancenorm3d": 1472, "lazylinear": 1473, "localresponsenorm": 1476, "logsigmoid": [1477, 1613], "logsoftmax": 1478, "mseloss": 1479, "marginrankingloss": 1480, "maxpool1d": 1481, "maxpool2d": 1482, "maxpool3d": 1483, "maxunpool1d": 1484, "maxunpool2d": 1485, "maxunpool3d": 1486, "mish": [1487, 1624], "moduledict": [1489, 1964], "modulelist": [1490, 1963, 1964], "multilabelmarginloss": 1491, "multilabelsoftmarginloss": 1492, "multimarginloss": 1493, "nllloss": 1495, "prelu": [1496, 1638], "pairwisedist": 1497, "parameterdict": 1498, "parameterlist": 1499, "pixelshuffl": 1500, "pixelunshuffl": 1501, "poissonnllloss": 1502, "rnn": [1503, 1717, 1718, 1719, 1720, 1721, 1722, 2003], "rnnbase": 1504, "rrelu": [1506, 1642], "relu": [1507, 1639], "reflectionpad1d": 1509, "reflectionpad2d": 1510, "reflectionpad3d": 1511, "replicationpad1d": 1512, "replicationpad2d": 1513, "replicationpad3d": 1514, "selu": [1515, 1645], "sequenti": 1516, "silu": [1517, 1647], "smoothl1loss": 1519, "softmarginloss": 1520, "softmax2d": 1522, "softmin": [1523, 1651], "softplu": [1524, 1652], "softshrink": [1525, 1653], "softsign": [1526, 1654], "syncbatchnorm": 1527, "tanhshrink": [1529, 1656], "transformerdecod": 1532, "transformerdecoderlay": 1533, "transformerencod": 1534, "transformerencoderlay": 1535, "tripletmarginloss": 1536, "tripletmarginwithdistanceloss": 1537, "upsamplingbilinear2d": 1541, "upsamplingnearest2d": 1542, "zeropad1d": 1543, "zeropad2d": 1544, "zeropad3d": 1545, "sdpbackend": 1546, "attent": [1547, 1549, 1550, 1551, 1982, 1983, 1984], "bia": [1547, 1549, 1550, 1983], "causalbia": [1547, 1983], "causalvari": 1548, "causal_lower_right": 1549, "causal_upper_left": 1550, "sdpa_kernel": 1551, "adaptive_avg_pool1d": 1552, "adaptive_max_pool1d": 1555, "adaptive_max_pool2d": 1556, "adaptive_max_pool3d": 1557, "affine_grid": 1558, "alpha_dropout": 1559, "avg_pool1d": 1560, "batch_norm": 1563, "conv_transpose1d": 1571, "conv_transpose2d": 1572, "conv_transpose3d": 1573, "cosine_embedding_loss": 1574, "cosine_similar": 1575, "cross_entropi": 1576, "ctc_loss": 1577, "elu_": 1583, "embedding_bag": 1585, "feature_alpha_dropout": 1586, "fractional_max_pool2d": 1588, "fractional_max_pool3d": 1589, "gaussian_nll_loss": 1590, "grid_sampl": 1593, "group_norm": 1594, "gumbel_softmax": 1595, "hardtanh_": 1600, "hinge_embedding_loss": 1601, "huber_loss": 1602, "instance_norm": 1603, "kl_div": 1605, "l1_loss": 1606, "layer_norm": 1607, "leaky_relu_": 1609, "local_response_norm": 1611, "log_softmax": [1612, 1862], "lp_pool1d": 1614, "lp_pool2d": 1615, "lp_pool3d": 1616, "margin_ranking_loss": 1617, "max_pool3d": 1620, "max_unpool1d": 1621, "max_unpool2d": 1622, "max_unpool3d": 1623, "mse_loss": 1625, "multi_margin_loss": 1626, "multilabel_margin_loss": 1627, "multilabel_soft_margin_loss": 1628, "nll_loss": 1629, "one_hot": 1631, "pad": [1632, 1981], "pairwise_dist": 1633, "pdist": 1634, "pixel_shuffl": 1635, "pixel_unshuffl": 1636, "poisson_nll_loss": 1637, "relu_": 1641, "rrelu_": 1643, "scaled_dot_product_attent": 1644, "smooth_l1_loss": 1648, "soft_margin_loss": 1649, "threshold_": 1658, "data_parallel": [1659, 1984], "triplet_margin_loss": 1660, "triplet_margin_with_distance_loss": 1661, "lazymodulemixin": 1666, "register_module_backward_hook": 1667, "register_module_buffer_registration_hook": 1668, "register_module_forward_hook": 1669, "register_module_forward_pre_hook": 1670, "register_module_full_backward_hook": 1671, "register_module_full_backward_pre_hook": 1672, "register_module_module_registration_hook": 1673, "register_module_parameter_registration_hook": 1674, "distributeddataparallel": [1675, 1986, 1990, 1991], "uninitializedbuff": 1677, "uninitializedparamet": 1678, "clip_grad_norm": 1679, "clip_grad_norm_": 1680, "clip_grad_value_": 1681, "convert_conv2d_weight_memory_format": 1682, "convert_conv3d_weight_memory_format": 1683, "fuse_conv_bn_ev": 1684, "fuse_conv_bn_weight": 1685, "fuse_linear_bn_ev": 1686, "fuse_linear_bn_weight": 1687, "parameters_to_vector": 1688, "parametr": [1689, 1690, 1691, 1693, 1694, 1695, 1696, 1999], "orthogon": 1689, "spectral_norm": [1690, 1724], "weight_norm": [1691, 1727], "parametrizationlist": 1692, "cach": [1693, 1959, 1990, 1997, 2047], "is_parametr": 1694, "register_parametr": 1695, "remove_parametr": 1696, "basepruningmethod": 1697, "customfrommask": 1698, "l1unstructur": 1700, "lnstructur": 1701, "pruningcontain": 1702, "randomstructur": 1703, "randomunstructur": 1704, "prune": [1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1999], "custom_from_mask": 1705, "global_unstructur": 1706, "is_prun": 1708, "l1_unstructur": 1709, "ln_structur": 1710, "random_structur": 1711, "random_unstructur": 1712, "remove_spectral_norm": 1714, "remove_weight_norm": 1715, "packedsequ": 1716, "pack_padded_sequ": 1717, "pack_sequ": 1718, "pad_packed_sequ": 1719, "pad_sequ": 1720, "unpack_sequ": 1721, "unpad_sequ": 1722, "skip_init": 1723, "stateless": 1725, "vector_to_paramet": 1726, "no_grad": 1728, "ones": [1734, 2044], "ones_lik": 1735, "jitscalartyp": 1736, "graphinfo": 1737, "verificationopt": 1738, "asgd": 1739, "adadelta": 1740, "adagrad": 1741, "adam": 1742, "adamw": 1743, "adamax": 1744, "lbfg": 1745, "nadam": 1746, "add_param_group": 1747, "load_state_dict": 1748, "state_dict": [1749, 2050], "step": [1750, 2011, 2046], "zero_grad": 1751, "radam": 1752, "rmsprop": 1753, "rprop": 1754, "sgd": 1755, "sparseadam": 1756, "chainedschedul": 1757, "constantlr": 1758, "cosineannealinglr": 1759, "cosineannealingwarmrestart": 1760, "cycliclr": 1761, "exponentiallr": 1762, "lambdalr": 1763, "linearlr": 1764, "multisteplr": 1765, "multiplicativelr": 1766, "onecyclelr": 1767, "polynomiallr": 1768, "reducelronplateau": 1769, "sequentiallr": 1770, "steplr": 1771, "pca_lowrank": 1775, "polar": 1779, "promote_typ": 1784, "quantize_per_channel": 1787, "quantize_per_tensor": 1788, "quantized_batch_norm": 1789, "quantized_max_pool1d": 1790, "quantized_max_pool2d": 1791, "sobolengin": 1792, "rand": 1794, "rand_lik": 1795, "randint": 1796, "randint_lik": 1797, "randn": 1798, "randn_lik": 1799, "randperm": 1800, "rang": [1801, 1963], "result_typ": 1811, "row_stack": 1815, "searchsort": 1821, "set_default_devic": 1825, "set_default_dtyp": 1826, "set_default_tensor_typ": 1827, "set_deterministic_debug_mod": 1828, "set_float32_matmul_precis": 1829, "set_flush_denorm": 1830, "set_num_interop_thread": 1831, "set_num_thread": 1832, "set_printopt": 1833, "set_warn_alwai": 1835, "signal": [1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 2023], "bartlett": 1839, "blackman": 1840, "cosin": 1841, "gaussian": 1843, "general_cosin": 1844, "general_ham": 1845, "ham": 1846, "hann": 1847, "kaiser": 1848, "nuttal": 1849, "as_sparse_gradcheck": 1860, "check_sparse_tensor_invari": 1861, "sampled_addmm": 1864, "spdiag": 1866, "sparse_bsc_tensor": 1868, "sparse_bsr_tensor": 1869, "sparse_compressed_tensor": 1870, "sparse_coo_tensor": 1871, "sparse_csc_tensor": 1872, "sparse_csr_tensor": 1873, "std_mean": 1881, "svd_lowrank": 1887, "sym_float": 1890, "sym_int": 1891, "sym_it": 1892, "sym_max": 1893, "sym_min": 1894, "sym_not": 1895, "tensordot": 1903, "trapezoid": 1908, "trapz": 1909, "tril_indic": 1912, "triu_indic": 1914, "unravel_index": 1921, "use_deterministic_algorithm": 1923, "generate_methods_for_privateuse1_backend": 1924, "get_cpp_backtrac": 1925, "rename_privateuse1_backend": 1926, "set_modul": 1927, "swap_tensor": 1928, "var_mean": 1931, "view_as_complex": 1933, "view_as_r": 1934, "vstack": 1937, "xpu": [1942, 1943, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 2059], "zero": 1957, "zeros_lik": 1958, "hub": 1959, "publish": 1959, "entrypoint": 1959, "run": [1959, 2051], "my": [1959, 1987, 1994, 2012, 2044, 2051], "download": 1959, "logic": [1959, 1963], "known": [1959, 1961], "bind": 1960, "tabl": [1960, 2004], "built": [1961, 1962, 1964, 2009], "comparison": [1961, 1963, 1964, 2032, 2039], "inspect": [1961, 2007, 2041], "warn": 1961, "appendix": [1961, 1964], "recurs": 1961, "constant": [1961, 1963], "fusion": 1961, "math": [1962, 2032], "construct": [1963, 1964, 1966, 1980, 2011, 2024], "refin": [1963, 1964], "enum": [1963, 1964], "tupl": [1963, 1964], "liter": [1963, 1964], "list": [1963, 1964, 2009], "dict": 1963, "arithmet": [1963, 1964], "subscript": [1963, 1964], "slice": [1963, 1964, 2002, 2032], "ternari": [1963, 1964], "cast": 1963, "statement": [1963, 1964], "assign": [1963, 1964], "If": 1963, "while": [1963, 1964], "loop": 1963, "For": 1963, "continu": [1963, 1964], "return": [1963, 1964, 1994, 2022], "resolut": [1963, 1964], "lookup": 1963, "defin": [1963, 1992, 1993], "terminologi": 1964, "primit": 1964, "instanc": 1964, "when": [1964, 1987, 1992, 2009, 2015, 2024, 2044], "signatur": 1964, "expr": 1964, "convers": [1964, 1980], "atom": 1964, "identifi": [1964, 2044, 2054], "parenthes": 1964, "form": 1964, "displai": 1964, "primari": 1964, "power": 1964, "unari": [1964, 1971, 2024], "bitwis": 1964, "binari": [1964, 1971], "shift": 1964, "boolean": 1964, "condit": 1964, "augment": 1964, "rais": 1964, "del": 1964, "compound": 1964, "els": 1964, "getattr": 1964, "hasattr": 1964, "zip": [1964, 2012], "enumer": 1964, "rule": [1964, 1979, 1993, 2007], "remot": [1964, 2022], "procedur": 1964, "execut": [1964, 1987, 1990, 2012, 2013, 2044], "program": 1964, "coverag": [1965, 1978, 1992], "properti": [1966, 1969], "correctli": 1966, "bound": 1966, "schema": 1966, "between": [1966, 2012, 2044], "low": 1968, "matrix": [1969, 2015], "decomposit": 1969, "solver": 1969, "misc": 1969, "motiv": [1971, 2042, 2043], "reduct": [1971, 1990, 2002, 2032], "idiom": 1972, "mobile_optim": 1973, "model_zoo": 1974, "strategi": [1977, 2011], "descriptor": 1977, "file_descriptor": 1977, "file_system": 1977, "subprocess": 1977, "keep": [1978, 2012], "dimens": [1978, 1979], "unifi": 1978, "contract": 1978, "awai": 1978, "factori": 1978, "variant": 1978, "semant": [1979, 1988, 1990, 1997, 2004], "infer": [1979, 1987, 1989, 2004, 2036], "explicit": 1979, "align": 1979, "current": 1979, "subsystem": 1979, "constructor": 1980, "contain": 1981, "convolut": [1981, 1984, 2002, 2003], "layer": 1981, "pool": [1981, 1984], "activ": [1981, 1984, 2056], "weight": [1981, 2011], "nonlinear": 1981, "recurr": [1981, 1994], "distanc": [1981, 1984], "loss": [1981, 1984, 1986], "vision": [1981, 1984], "shuffl": 1981, "lazi": 1981, "submodul": 1982, "typic": 1986, "unscal": 1986, "accumul": 1986, "penalti": 1986, "one": 1986, "per": [1986, 2011], "need": [1986, 2044], "particular": [1986, 1987], "dtype": [1986, 2004, 2018, 2027], "encod": 1987, "histori": [1987, 2056], "set": [1987, 2009], "No": 1987, "evalu": [1987, 1996, 2047], "multithread": 1987, "concurr": 1987, "determin": [1987, 2003], "retain": 1987, "thread": [1987, 1989], "safeti": 1987, "wirting": 1987, "calculu": 1987, "pictur": 1987, "conjug": 1987, "own": 1987, "formula": 1987, "domain": 1987, "regist": [1987, 2040], "whether": [1987, 2012], "fire": 1987, "differ": [1987, 2009, 2044], "modifi": 1987, "compat": 1988, "runtim": [1989, 1994, 2054], "tune": 1989, "tensorfloat": [1990, 1997, 2002], "32": [1990, 1997, 2002, 2005], "tf32": [1990, 1997, 2002], "amper": [1990, 2002], "later": [1990, 2002, 2012], "reduc": [1990, 2002], "fp16": [1990, 2002], "gemm": [1990, 2002], "bf16": [1990, 2002], "bc": 1990, "pytorch_cuda_alloc_conf": 1990, "alloc": [1990, 1994, 2056], "cubla": 1990, "workspac": 1990, "cufft": 1990, "plan": [1990, 1997], "just": 1990, "time": [1990, 2036, 2048, 2052], "practic": [1990, 2001, 2015, 2038], "agnost": 1990, "buffer": [1990, 1995, 2001], "instead": 1990, "whole": [1990, 2044], "captur": 1990, "partial": 1990, "9": 1990, "6": 1990, "across": [1990, 2004], "intern": [1991, 2009, 2012, 2041, 2042], "processgroup": 1991, "ddpoptim": 1991, "separ": 1992, "setup_context": 1992, "like": [1992, 2012], "subclass": [1992, 2043], "wrapper": 1992, "__torch_function__": 1992, "overrid": [1992, 2055], "nativ": [1992, 2015, 2017], "anoth": 1993, "specifi": 1993, "gotcha": 1993, "staticmethod": 1993, "isn": 1994, "freed": 1994, "properli": 1994, "loader": 1994, "doesn": 1994, "fsdp": 1995, "prefetch": 1995, "nuanc": 1995, "payload": 1995, "notat": 1996, "background": [1996, 2021, 2022, 2039], "inform": [1996, 2020, 2053], "analyt": 1996, "u": 1996, "reus": [1997, 2001], "hipfft": 1997, "rocfft": 1997, "enabl": 1997, "larg": 1998, "fleet": 1998, "wide": 1998, "attach": 1998, "consider": 1998, "block": 1999, "neural": 1999, "tip": [2001, 2016], "fight": 2001, "deadlock": 2001, "through": 2001, "queue": 2001, "e": 2001, "g": 2001, "hogwild": 2001, "oversubscript": 2001, "accuraci": [2002, 2015, 2016, 2054], "extrem": 2002, "finit": 2002, "instinct": 2002, "mi200": 2002, "reproduc": 2003, "nondeterminist": 2003, "algorithm": [2003, 2011, 2021], "fill": 2003, "uniniti": 2003, "content": [2004, 2012], "preserv": 2004, "format": [2004, 2012], "them": [2004, 2012], "version": 2004, "integ": 2004, "divis": 2004, "alwai": 2004, "includ": [2005, 2012], "compon": 2005, "speed": [2005, 2044], "One": [2005, 2053], "instal": 2005, "cffi": 2005, "cpp": 2005, "found": 2005, "win": 2005, "channel": 2005, "without": 2005, "claus": 2005, "protect": 2005, "broken": 2005, "pipe": [2005, 2013], "driver": 2005, "shut": 2005, "down": 2005, "ipc": 2005, "base": [2006, 2007, 2009, 2011, 2053], "gui": 2007, "diagnos": [2007, 2054], "sarif": 2007, "diagnost": 2007, "alexnet": 2009, "v": 2009, "index": [2009, 2032], "aten": [2009, 2049, 2053], "inlin": 2009, "discov": 2009, "unconvert": 2009, "onc": 2009, "adjust": 2011, "learn": 2011, "rate": 2011, "averag": 2011, "swa": 2011, "ema": 2011, "schedul": 2011, "care": 2011, "put": 2011, "togeth": 2011, "your": 2012, "do": [2012, 2041, 2044], "see": [2012, 2044], "insid": [2012, 2044], "treat": 2012, "archiv": 2012, "file_structur": 2012, "given": 2012, "wa": 2012, "resourc": [2012, 2043], "distinguish": 2012, "explan": 2012, "analyz": 2012, "extern": 2012, "mock": 2012, "refactor": 2012, "sharp": 2012, "global": 2012, "isol": 2012, "each": [2012, 2043], "mangl": 2012, "pipelin": 2013, "skip": 2013, "connect": 2013, "intel": 2014, "instrument": 2014, "technologi": 2014, "eager": 2015, "awar": 2015, "maintainc": 2015, "engin": 2015, "observ": [2015, 2018], "hardwar": 2015, "configur": [2015, 2017], "insensit": 2016, "int8": 2016, "sensit": 2016, "ao": [2018, 2033, 2034], "top": 2018, "quantize_fx": 2018, "qconfig_map": 2018, "backend_config": 2018, "custom_config": 2018, "pt2e": 2018, "0": [2018, 2050, 2051, 2054], "relat": [2018, 2043], "fake_quant": 2018, "intrins": 2018, "qat": 2018, "scheme": 2018, "rpc": 2020, "tensorpip": 2020, "rref": [2020, 2022], "remotemodul": 2020, "record": 2021, "dure": 2021, "smart": 2021, "end": 2021, "protocol": 2022, "lifetim": 2022, "reason": 2022, "scenario": 2022, "owner": 2022, "argument": 2022, "sparsiti": 2024, "semi": 2024, "acceler": 2024, "coo": 2024, "hybrid": 2024, "uncoalesc": 2024, "csr": 2024, "csc": 2024, "bsr": 2024, "bsc": 2024, "memory_format": 2027, "tensorboard": 2029, "creation": 2032, "sampl": 2032, "quasi": 2032, "pointwis": 2032, "spectral": 2032, "bla": 2032, "lapack": 2032, "foreach": 2032, "path": 2032, "n": [2033, 2034], "_numeric_suit": 2033, "_numeric_suite_fx": 2034, "howto": 2035, "vendor": 2035, "aotinductor": 2036, "ahead": 2036, "Of": 2036, "ed": 2036, "x86": 2038, "tree": 2039, "integr": 2039, "callabl": 2039, "previou": 2039, "after": 2040, "aotautograd": 2040, "speedi": 2040, "guard": [2041, 2042, 2047], "dynamo": 2041, "artifact": 2041, "abridg": 2042, "public": 2042, "overal": [2042, 2043], "architectur": [2042, 2043], "unback": 2042, "fake": 2043, "bit": 2043, "detail": 2043, "individu": [2043, 2048], "characterist": 2043, "interact": 2043, "you": 2044, "still": 2044, "crash": 2044, "slow": 2044, "recompil": [2044, 2054], "am": 2044, "speedup": 2044, "caus": [2044, 2054], "didn": 2044, "incorrect": 2044, "result": 2044, "oom": 2044, "handl": 2044, "besid": 2044, "via": 2044, "under": 2044, "some": 2044, "did": 2044, "fine": [2044, 2045], "grain": [2044, 2045], "_dynamo": [2044, 2045], "disallow_in_graph": [2044, 2045], "_dynamo_skip": 2044, "pretrain": 2046, "next": 2046, "frame": 2047, "pep": 2047, "523": 2047, "instructiontransl": 2047, "torchinductor": [2048, 2051, 2054], "relev": 2048, "breakdown": 2048, "prim": 2049, "nnmodul": 2050, "__call__": 2050, "dashboard": 2051, "measur": 2051, "pr": 2051, "affect": 2051, "befor": 2051, "merg": 2051, "understand": [2052, 2056], "around": 2052, "overhead": 2052, "x": 2053, "none": 2053, "partition": 2053, "matcher": 2053, "capabl": 2053, "troubleshoot": 2054, "titl": 2054, "minifi": 2054, "torch_compile_debug": 2054, "excess": 2054, "snapshot": 2056, "visual": 2056, "timelin": 2056, "info": 2057, "finfo": 2057, "iinfo": 2057}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.byte": [[168, "torch-tensor-byte"]], "torch.Tensor.cholesky": [[177, "torch-tensor-cholesky"]], "torch.Tensor.bitwise_not_": [[158, "torch-tensor-bitwise-not"]], "torch.Tensor.cdouble": [[171, "torch-tensor-cdouble"]], "torch.Tensor.bitwise_or": [[159, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_right_shift_": [[162, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.cosh": [[198, "torch-tensor-cosh"]], "torch.Tensor.conj_physical_": [[190, "torch-tensor-conj-physical"]], "torch.Tensor.bitwise_left_shift_": [[156, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.ceil": [[172, "torch-tensor-ceil"]], "torch.Tensor.clip_": [[184, "torch-tensor-clip"]], "torch.Tensor.copysign": [[193, "torch-tensor-copysign"]], "torch.Tensor.cosh_": [[199, "torch-tensor-cosh"]], "torch.Tensor.col_indices": [[187, "torch-tensor-col-indices"]], "torch.Tensor.chunk": [[180, "torch-tensor-chunk"]], "torch.Tensor.chalf": [[175, "torch-tensor-chalf"]], "torch.Tensor.cholesky_inverse": [[178, "torch-tensor-cholesky-inverse"]], "torch.Tensor.bfloat16": [[151, "torch-tensor-bfloat16"]], "torch.Tensor.coalesce": [[186, "torch-tensor-coalesce"]], "torch.Tensor.corrcoef": [[195, "torch-tensor-corrcoef"]], "torch.Tensor.ceil_": [[173, "torch-tensor-ceil"]], "torch.Tensor.bmm": [[165, "torch-tensor-bmm"]], "torch.Tensor.bitwise_not": [[157, "torch-tensor-bitwise-not"]], "torch.Tensor.cholesky_solve": [[179, "torch-tensor-cholesky-solve"]], "torch.Tensor.cos": [[196, "torch-tensor-cos"]], "torch.Tensor.bincount": [[152, "torch-tensor-bincount"]], "torch.Tensor.bitwise_xor": [[163, "torch-tensor-bitwise-xor"]], "torch.Tensor.clamp": [[181, "torch-tensor-clamp"]], "torch.Tensor.conj": [[188, "torch-tensor-conj"]], "torch.Tensor.clip": [[183, "torch-tensor-clip"]], "torch.Tensor.clamp_": [[182, "torch-tensor-clamp"]], "torch.Tensor.clone": [[185, "torch-tensor-clone"]], "torch.Tensor.copysign_": [[194, "torch-tensor-copysign"]], "torch.Tensor.bitwise_or_": [[160, "torch-tensor-bitwise-or"]], "torch.Tensor.conj_physical": [[189, "torch-tensor-conj-physical"]], "torch.Tensor.bitwise_xor_": [[164, "torch-tensor-bitwise-xor"]], "torch.Tensor.cauchy_": [[169, "torch-tensor-cauchy"]], "torch.Tensor.contiguous": [[191, "torch-tensor-contiguous"]], "torch.Tensor.copy_": [[192, "torch-tensor-copy"]], "torch.Tensor.broadcast_to": [[167, "torch-tensor-broadcast-to"]], "torch.Tensor.bitwise_and_": [[154, "torch-tensor-bitwise-and"]], "torch.Tensor.bool": [[166, "torch-tensor-bool"]], "torch.Tensor.cfloat": [[174, "torch-tensor-cfloat"]], "torch.Tensor.bitwise_right_shift": [[161, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.cos_": [[197, "torch-tensor-cos"]], "torch.Tensor.ccol_indices": [[170, "torch-tensor-ccol-indices"]], "torch.Tensor.bernoulli_": [[150, "torch-tensor-bernoulli"]], "torch.Tensor.char": [[176, "torch-tensor-char"]], "torch.Tensor.bitwise_left_shift": [[155, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bitwise_and": [[153, "torch-tensor-bitwise-and"]], "torch.Tensor.floor_divide": [[268, "torch-tensor-floor-divide"]], "torch.Tensor.greater_equal": [[289, "torch-tensor-greater-equal"]], "torch.Tensor.hardshrink": [[294, "torch-tensor-hardshrink"]], "torch.Tensor.fix": [[257, "torch-tensor-fix"]], "torch.Tensor.expm1": [[252, "torch-tensor-expm1"]], "torch.Tensor.floor": [[266, "torch-tensor-floor"]], "torch.Tensor.fmod_": [[273, "torch-tensor-fmod"]], "torch.Tensor.expand_as": [[251, "torch-tensor-expand-as"]], "torch.Tensor.fmin": [[271, "torch-tensor-fmin"]], "torch.Tensor.gt": [[291, "torch-tensor-gt"]], "torch.Tensor.half": [[293, "torch-tensor-half"]], "torch.Tensor.floor_": [[267, "torch-tensor-floor"]], "torch.Tensor.geqrf": [[283, "torch-tensor-geqrf"]], "torch.Tensor.flipud": [[262, "torch-tensor-flipud"]], "torch.Tensor.flip": [[260, "torch-tensor-flip"]], "torch.Tensor.float_power": [[264, "torch-tensor-float-power"]], "torch.Tensor.fill_diagonal_": [[256, "torch-tensor-fill-diagonal"]], "torch.Tensor.float_power_": [[265, "torch-tensor-float-power"]], "torch.Tensor.frac_": [[275, "torch-tensor-frac"]], "torch.Tensor.greater": [[287, "torch-tensor-greater"]], "torch.Tensor.frexp": [[276, "torch-tensor-frexp"]], "torch.Tensor.ge": [[280, "torch-tensor-ge"]], "torch.Tensor.floor_divide_": [[269, "torch-tensor-floor-divide"]], "torch.Tensor.greater_equal_": [[290, "torch-tensor-greater-equal"]], "torch.Tensor.fix_": [[258, "torch-tensor-fix"]], "torch.Tensor.expand": [[250, "torch-tensor-expand"]], "torch.Tensor.exponential_": [[254, "torch-tensor-exponential"]], "torch.Tensor.ger": [[284, "torch-tensor-ger"]], "torch.Tensor.hypot": [[299, "torch-tensor-hypot"]], "torch.Tensor.ge_": [[281, "torch-tensor-ge"]], "torch.Tensor.fill_": [[255, "torch-tensor-fill"]], "torch.Tensor.grad": [[286, "torch-tensor-grad"]], "torch.Tensor.get_device": [[285, "torch-tensor-get-device"]], "torch.Tensor.float": [[263, "torch-tensor-float"]], "torch.Tensor.gcd": [[278, "torch-tensor-gcd"]], "torch.Tensor.geometric_": [[282, "torch-tensor-geometric"]], "torch.Tensor.greater_": [[288, "torch-tensor-greater"]], "torch.Tensor.histogram": [[297, "torch-tensor-histogram"]], "torch.Tensor.fmax": [[270, "torch-tensor-fmax"]], "torch.Tensor.gt_": [[292, "torch-tensor-gt"]], "torch.Tensor.fliplr": [[261, "torch-tensor-fliplr"]], "torch.Tensor.flatten": [[259, "torch-tensor-flatten"]], "torch.Tensor.expm1_": [[253, "torch-tensor-expm1"]], "torch.Tensor.histc": [[296, "torch-tensor-histc"]], "torch.Tensor.frac": [[274, "torch-tensor-frac"]], "torch.Tensor.heaviside": [[295, "torch-tensor-heaviside"]], "torch.Tensor.gather": [[277, "torch-tensor-gather"]], "torch.Tensor.hsplit": [[298, "torch-tensor-hsplit"]], "torch.Tensor.gcd_": [[279, "torch-tensor-gcd"]], "torch.Tensor.fmod": [[272, "torch-tensor-fmod"]], "torch.Tensor.eq": [[239, "torch-tensor-eq"]], "torch.Tensor.dot": [[235, "torch-tensor-dot"]], "torch.Tensor.element_size": [[238, "torch-tensor-element-size"]], "torch.Tensor.eq_": [[240, "torch-tensor-eq"]], "torch.Tensor.erfinv_": [[247, "torch-tensor-erfinv"]], "torch.Tensor.erf": [[242, "torch-tensor-erf"]], "torch.Tensor.dim": [[228, "torch-tensor-dim"]], "torch.Tensor.dense_dim": [[214, "torch-tensor-dense-dim"]], "torch.Tensor.erfc_": [[245, "torch-tensor-erfc"]], "torch.Tensor.cov": [[201, "torch-tensor-cov"]], "torch.Tensor.diag": [[220, "torch-tensor-diag"]], "torch.Tensor.diag_embed": [[221, "torch-tensor-diag-embed"]], "torch.Tensor.cumsum_": [[211, "torch-tensor-cumsum"]], "torch.Tensor.erfinv": [[246, "torch-tensor-erfinv"]], "torch.Tensor.digamma": [[226, "torch-tensor-digamma"]], "torch.Tensor.device": [[219, "torch-tensor-device"]], "torch.Tensor.equal": [[241, "torch-tensor-equal"]], "torch.Tensor.exp_": [[249, "torch-tensor-exp"]], "torch.Tensor.cummax": [[206, "torch-tensor-cummax"]], "torch.Tensor.cuda": [[205, "torch-tensor-cuda"]], "torch.Tensor.diagonal": [[223, "torch-tensor-diagonal"]], "torch.Tensor.detach": [[217, "torch-tensor-detach"]], "torch.Tensor.erf_": [[243, "torch-tensor-erf"]], "torch.Tensor.count_nonzero": [[200, "torch-tensor-count-nonzero"]], "torch.Tensor.diagflat": [[222, "torch-tensor-diagflat"]], "torch.Tensor.det": [[216, "torch-tensor-det"]], "torch.Tensor.cumprod": [[208, "torch-tensor-cumprod"]], "torch.Tensor.div": [[231, "torch-tensor-div"]], "torch.Tensor.dist": [[230, "torch-tensor-dist"]], "torch.Tensor.dsplit": [[237, "torch-tensor-dsplit"]], "torch.Tensor.exp": [[248, "torch-tensor-exp"]], "torch.Tensor.diff": [[225, "torch-tensor-diff"]], "torch.Tensor.double": [[236, "torch-tensor-double"]], "torch.Tensor.cpu": [[202, "torch-tensor-cpu"]], "torch.Tensor.dequantize": [[215, "torch-tensor-dequantize"]], "torch.Tensor.cumsum": [[210, "torch-tensor-cumsum"]], "torch.Tensor.cumprod_": [[209, "torch-tensor-cumprod"]], "torch.Tensor.crow_indices": [[204, "torch-tensor-crow-indices"]], "torch.Tensor.diagonal_scatter": [[224, "torch-tensor-diagonal-scatter"]], "torch.Tensor.deg2rad": [[213, "torch-tensor-deg2rad"]], "torch.Tensor.digamma_": [[227, "torch-tensor-digamma"]], "torch.Tensor.divide": [[233, "torch-tensor-divide"]], "torch.Tensor.divide_": [[234, "torch-tensor-divide"]], "torch.Tensor.dim_order": [[229, "torch-tensor-dim-order"]], "torch.Tensor.detach_": [[218, "torch-tensor-detach"]], "torch.Tensor.div_": [[232, "torch-tensor-div"]], "torch.Tensor.erfc": [[244, "torch-tensor-erfc"]], "torch.Tensor.data_ptr": [[212, "torch-tensor-data-ptr"]], "torch.Tensor.cross": [[203, "torch-tensor-cross"]], "torch.Tensor.cummin": [[207, "torch-tensor-cummin"]], "torch.Tensor.log": [[365, "torch-tensor-log"]], "torch.Tensor.logical_or_": [[383, "torch-tensor-logical-or"]], "torch.Tensor.masked_scatter": [[397, "torch-tensor-masked-scatter"]], "torch.Tensor.less_": [[360, "torch-tensor-less"]], "torch.Tensor.lgamma_": [[364, "torch-tensor-lgamma"]], "torch.Tensor.log1p": [[368, "torch-tensor-log1p"]], "torch.Tensor.le_": [[356, "torch-tensor-le"]], "torch.Tensor.log10": [[366, "torch-tensor-log10"]], "torch.Tensor.lu_solve": [[393, "torch-tensor-lu-solve"]], "torch.Tensor.log_normal_": [[373, "torch-tensor-log-normal"]], "torch.Tensor.lcm_": [[352, "torch-tensor-lcm"]], "torch.Tensor.logical_and": [[378, "torch-tensor-logical-and"]], "torch.Tensor.lerp": [[357, "torch-tensor-lerp"]], "torch.Tensor.log2_": [[371, "torch-tensor-log2"]], "torch.Tensor.logaddexp2": [[375, "torch-tensor-logaddexp2"]], "torch.Tensor.logical_xor_": [[385, "torch-tensor-logical-xor"]], "torch.Tensor.logical_and_": [[379, "torch-tensor-logical-and"]], "torch.Tensor.logical_not_": [[381, "torch-tensor-logical-not"]], "torch.Tensor.map_": [[394, "torch-tensor-map"]], "torch.Tensor.masked_fill": [[395, "torch-tensor-masked-fill"]], "torch.Tensor.kthvalue": [[350, "torch-tensor-kthvalue"]], "torch.Tensor.log1p_": [[369, "torch-tensor-log1p"]], "torch.Tensor.long": [[389, "torch-tensor-long"]], "torch.Tensor.masked_select": [[399, "torch-tensor-masked-select"]], "torch.Tensor.less": [[359, "torch-tensor-less"]], "torch.Tensor.le": [[355, "torch-tensor-le"]], "torch.Tensor.masked_fill_": [[396, "torch-tensor-masked-fill"]], "torch.Tensor.ldexp_": [[354, "torch-tensor-ldexp"]], "torch.Tensor.less_equal": [[361, "torch-tensor-less-equal"]], "torch.Tensor.log10_": [[367, "torch-tensor-log10"]], "torch.Tensor.logdet": [[377, "torch-tensor-logdet"]], "torch.Tensor.masked_scatter_": [[398, "torch-tensor-masked-scatter"]], "torch.Tensor.lt_": [[391, "torch-tensor-lt"]], "torch.Tensor.logical_not": [[380, "torch-tensor-logical-not"]], "torch.Tensor.log2": [[370, "torch-tensor-log2"]], "torch.Tensor.logcumsumexp": [[376, "torch-tensor-logcumsumexp"]], "torch.Tensor.logit_": [[387, "torch-tensor-logit"]], "torch.Tensor.less_equal_": [[362, "torch-tensor-less-equal"]], "torch.Tensor.lerp_": [[358, "torch-tensor-lerp"]], "torch.Tensor.logical_or": [[382, "torch-tensor-logical-or"]], "torch.Tensor.logical_xor": [[384, "torch-tensor-logical-xor"]], "torch.Tensor.log_": [[372, "torch-tensor-log"]], "torch.Tensor.ldexp": [[353, "torch-tensor-ldexp"]], "torch.Tensor.lgamma": [[363, "torch-tensor-lgamma"]], "torch.Tensor.logaddexp": [[374, "torch-tensor-logaddexp"]], "torch.Tensor.logsumexp": [[388, "torch-tensor-logsumexp"]], "torch.Tensor.logit": [[386, "torch-tensor-logit"]], "torch.Tensor.lt": [[390, "torch-tensor-lt"]], "torch.Tensor.lcm": [[351, "torch-tensor-lcm"]], "torch.Tensor.lu": [[392, "torch-tensor-lu"]], "torch.Tensor.asinh": [[138, "torch-tensor-asinh"]], "torch.Tensor.arctanh": [[128, "torch-tensor-arctanh"]], "torch.Tensor.bernoulli": [[149, "torch-tensor-bernoulli"]], "torch.Tensor.all": [[108, "torch-tensor-all"]], "torch.Tensor.atan_": [[143, "torch-tensor-atan"]], "torch.Tensor.arctan2_": [[126, "torch-tensor-arctan2"]], "torch.Tensor.addcmul_": [[100, "torch-tensor-addcmul"]], "torch.Tensor.addmv_": [[104, "torch-tensor-addmv"]], "torch.Tensor.backward": [[146, "torch-tensor-backward"]], "torch.Tensor.arccosh_": [[119, "torch-tensor-arccosh"]], "torch.Tensor.atan2_": [[142, "torch-tensor-atan2"]], "torch.Tensor.baddbmm_": [[148, "torch-tensor-baddbmm"]], "torch.Tensor.arctanh_": [[129, "torch-tensor-arctanh"]], "torch.Tensor.asin": [[136, "torch-tensor-asin"]], "torch.Tensor.angle": [[113, "torch-tensor-angle"]], "torch.Tensor.amin": [[111, "torch-tensor-amin"]], "torch.Tensor.asinh_": [[139, "torch-tensor-asinh"]], "torch.Tensor.arctan2": [[125, "torch-tensor-arctan2"]], "torch.Tensor.argsort": [[132, "torch-tensor-argsort"]], "torch.Tensor.arccosh": [[118, "torch-tensor-arccosh"]], "torch.Tensor.arctan_": [[127, "torch-tensor-arctan"]], "torch.Tensor.asin_": [[137, "torch-tensor-asin"]], "torch.Tensor.any": [[114, "torch-tensor-any"]], "torch.Tensor.aminmax": [[112, "torch-tensor-aminmax"]], "torch.Tensor.adjoint": [[107, "torch-tensor-adjoint"]], "torch.Tensor.allclose": [[109, "torch-tensor-allclose"]], "torch.Tensor.argwhere": [[133, "torch-tensor-argwhere"]], "torch.Tensor.baddbmm": [[147, "torch-tensor-baddbmm"]], "torch.Tensor.arcsin": [[120, "torch-tensor-arcsin"]], "torch.Tensor.arctan": [[124, "torch-tensor-arctan"]], "torch.Tensor.arcsin_": [[121, "torch-tensor-arcsin"]], "torch.Tensor.arcsinh_": [[123, "torch-tensor-arcsinh"]], "torch.Tensor.argmax": [[130, "torch-tensor-argmax"]], "torch.Tensor.argmin": [[131, "torch-tensor-argmin"]], "torch.Tensor.addmm": [[101, "torch-tensor-addmm"]], "torch.Tensor.atan": [[140, "torch-tensor-atan"]], "torch.Tensor.as_strided": [[134, "torch-tensor-as-strided"]], "torch.Tensor.addr": [[105, "torch-tensor-addr"]], "torch.Tensor.atan2": [[141, "torch-tensor-atan2"]], "torch.Tensor.apply_": [[115, "torch-tensor-apply"]], "torch.Tensor.atanh": [[144, "torch-tensor-atanh"]], "torch.Tensor.addmm_": [[102, "torch-tensor-addmm"]], "torch.Tensor.amax": [[110, "torch-tensor-amax"]], "torch.Tensor.addr_": [[106, "torch-tensor-addr"]], "torch.Tensor.arcsinh": [[122, "torch-tensor-arcsinh"]], "torch.Tensor.arccos": [[116, "torch-tensor-arccos"]], "torch.Tensor.addmv": [[103, "torch-tensor-addmv"]], "torch.Tensor.arccos_": [[117, "torch-tensor-arccos"]], "torch.Tensor.as_subclass": [[135, "torch-tensor-as-subclass"]], "torch.Tensor.atanh_": [[145, "torch-tensor-atanh"]], "torch.Tensor.is_inference": [[330, "torch-tensor-is-inference"]], "torch.Tensor.index_put": [[314, "torch-tensor-index-put"]], "torch.Tensor.is_coalesced": [[324, "torch-tensor-is-coalesced"]], "torch.Tensor.is_sparse": [[338, "torch-tensor-is-sparse"]], "torch.Tensor.is_set_to": [[335, "torch-tensor-is-set-to"]], "torch.Tensor.igamma": [[303, "torch-tensor-igamma"]], "torch.Tensor.is_contiguous": [[327, "torch-tensor-is-contiguous"]], "torch.Tensor.is_signed": [[337, "torch-tensor-is-signed"]], "torch.Tensor.index_select": [[318, "torch-tensor-index-select"]], "torch.Tensor.is_shared": [[336, "torch-tensor-is-shared"]], "torch.Tensor.inverse": [[323, "torch-tensor-inverse"]], "torch.Tensor.index_add_": [[309, "torch-tensor-index-add"]], "torch.Tensor.int": [[321, "torch-tensor-int"]], "torch.Tensor.index_reduce": [[316, "torch-tensor-index-reduce"]], "torch.Tensor.is_cuda": [[328, "torch-tensor-is-cuda"]], "torch.Tensor.isreal": [[346, "torch-tensor-isreal"]], "torch.Tensor.item": [[348, "torch-tensor-item"]], "torch.Tensor.isnan": [[343, "torch-tensor-isnan"]], "torch.Tensor.isposinf": [[345, "torch-tensor-isposinf"]], "torch.Tensor.istft": [[347, "torch-tensor-istft"]], "torch.Tensor.is_sparse_csr": [[339, "torch-tensor-is-sparse-csr"]], "torch.Tensor.imag": [[307, "torch-tensor-imag"]], "torch.Tensor.index_reduce_": [[317, "torch-tensor-index-reduce"]], "torch.Tensor.indices": [[319, "torch-tensor-indices"]], "torch.Tensor.is_floating_point": [[329, "torch-tensor-is-floating-point"]], "torch.Tensor.is_pinned": [[333, "torch-tensor-is-pinned"]], "torch.Tensor.index_fill": [[312, "torch-tensor-index-fill"]], "torch.Tensor.igammac_": [[306, "torch-tensor-igammac"]], "torch.Tensor.igamma_": [[304, "torch-tensor-igamma"]], "torch.Tensor.is_conj": [[326, "torch-tensor-is-conj"]], "torch.Tensor.index_copy_": [[311, "torch-tensor-index-copy"]], "torch.Tensor.is_leaf": [[331, "torch-tensor-is-leaf"]], "torch.Tensor.is_complex": [[325, "torch-tensor-is-complex"]], "torch.Tensor.hypot_": [[300, "torch-tensor-hypot"]], "torch.Tensor.is_quantized": [[334, "torch-tensor-is-quantized"]], "torch.Tensor.inner": [[320, "torch-tensor-inner"]], "torch.Tensor.isclose": [[340, "torch-tensor-isclose"]], "torch.Tensor.index_fill_": [[313, "torch-tensor-index-fill"]], "torch.Tensor.isfinite": [[341, "torch-tensor-isfinite"]], "torch.Tensor.index_put_": [[315, "torch-tensor-index-put"]], "torch.Tensor.i0_": [[302, "torch-tensor-i0"]], "torch.Tensor.index_add": [[308, "torch-tensor-index-add"]], "torch.Tensor.i0": [[301, "torch-tensor-i0"]], "torch.Tensor.int_repr": [[322, "torch-tensor-int-repr"]], "torch.Tensor.igammac": [[305, "torch-tensor-igammac"]], "torch.Tensor.isneginf": [[344, "torch-tensor-isneginf"]], "torch.Tensor.itemsize": [[349, "torch-tensor-itemsize"]], "torch.Tensor.isinf": [[342, "torch-tensor-isinf"]], "torch.Tensor.index_copy": [[310, "torch-tensor-index-copy"]], "torch.Tensor.is_meta": [[332, "torch-tensor-is-meta"]], "Understanding CUDA Memory Usage": [[2056, "understanding-cuda-memory-usage"]], "Generating a Snapshot": [[2056, "generating-a-snapshot"]], "Using the visualizer": [[2056, "using-the-visualizer"]], "Active Memory Timeline": [[2056, "active-memory-timeline"]], "Allocator State History": [[2056, "allocator-state-history"]], "Snapshot API Reference": [[2056, "snapshot-api-reference"]], "torch.overrides": [[2055, "module-torch.overrides"]], "Functions": [[2055, "functions"], [1961, "functions"], [1963, "functions"], [2025, "functions"], [2009, "functions"]], "Writing Graph Transformations on ATen IR": [[2053, "writing-graph-transformations-on-aten-ir"]], "Passes": [[2053, "passes"]], "Transformer": [[2053, "transformer"], [1531, "transformer"]], "One-to-One Pass": [[2053, "one-to-one-pass"]], "One-to-X Pass": [[2053, "one-to-x-pass"]], "One-to-None Pass": [[2053, "one-to-none-pass"]], "Utilizing Local Information": [[2053, "utilizing-local-information"]], "Subgraph Rewriter": [[2053, "subgraph-rewriter"]], "Pass Manager": [[2053, "pass-manager"]], "Partitioner": [[2053, "partitioner"]], "Subgraph Matcher": [[2053, "subgraph-matcher"]], "Capability Based Partitioner": [[2053, "capability-based-partitioner"]], "torch.utils": [[2058, "module-torch.utils"]], "PyTorch 2.0 Troubleshooting": [[2054, "pytorch-2-0-troubleshooting"]], "Title": [[2054, "id1"]], "Diagnosing Runtime Errors": [[2054, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[2054, "torchdynamo-errors"]], "Diagnosing TorchInductor Errors": [[2054, "diagnosing-torchinductor-errors"]], "Minifying TorchInductor Errors": [[2054, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[2054, "minifying-backend-compiler-errors"]], "Performance Profiling": [[2054, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[2054, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[2054, "torchinductor-debugging-using-torch-compile-debug"]], "Graph Breaks": [[2054, "graph-breaks"], [46, "graph-breaks"], [2044, "graph-breaks"]], "Identifying the Cause of a Graph Break": [[2054, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[2054, "excessive-recompilation"]], "Accuracy Debugging": [[2054, "accuracy-debugging"]], "PyTorch 2.0 Performance Dashboard": [[2051, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[2051, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[2051, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[2051, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[2051, "how-can-i-run-any-performance-test-locally"]], "Type Info": [[2057, "type-info"]], "torch.finfo": [[2057, "torch-finfo"]], "torch.iinfo": [[2057, "torch-iinfo"]], "torch.xpu": [[2059, "module-torch.xpu"]], "Streams": [[2059, "streams"]], "Profiling to understand torch.compile performance": [[2052, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[2052, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[2052, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[2052, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[2052, "understanding-compilation-time"]], "Finding graph breaks": [[2052, "finding-graph-breaks"]], "Launch overhead": [[2052, "launch-overhead"]], "PyTorch 2.0 NNModule Support": [[2050, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[2050, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[2050, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[2050, "state-dict-hooks"]], "torch.xlogy": [[1939, "torch-xlogy"]], "torch.tensor_split": [[1902, "torch-tensor-split"]], "torch.unflatten": [[1918, "torch-unflatten"]], "torch.utils.rename_privateuse1_backend": [[1926, "torch-utils-rename-privateuse1-backend"]], "torch.tensordot": [[1903, "torch-tensordot"]], "torch.trapezoid": [[1908, "torch-trapezoid"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1924, "torch-utils-generate-methods-for-privateuse1-backend"]], "torch.xpu.current_stream": [[1943, "torch-xpu-current-stream"]], "torch.utils.swap_tensors": [[1928, "torch-utils-swap-tensors"]], "torch.unique": [[1919, "torch-unique"]], "torch.tanh": [[1900, "torch-tanh"]], "torch.unbind": [[1917, "torch-unbind"]], "torch.use_deterministic_algorithms": [[1923, "torch-use-deterministic-algorithms"]], "device_of": [[1946, "device-of"], [1022, "device-of"]], "torch.xpu.get_device_capability": [[1947, "torch-xpu-get-device-capability"]], "torch.unsqueeze": [[1922, "torch-unsqueeze"]], "torch.trapz": [[1909, "torch-trapz"]], "torch.trace": [[1906, "torch-trace"]], "torch.view_as_complex": [[1933, "torch-view-as-complex"]], "torch.where": [[1938, "torch-where"]], "torch.tril_indices": [[1912, "torch-tril-indices"]], "torch.triu_indices": [[1914, "torch-triu-indices"]], "torch.trunc": [[1916, "torch-trunc"]], "torch.topk": [[1905, "torch-topk"]], "torch.var_mean": [[1931, "torch-var-mean"]], "torch.var": [[1930, "torch-var"]], "torch.tensor": [[1901, "torch-tensor"]], "torch.true_divide": [[1915, "torch-true-divide"]], "torch.utils.get_cpp_backtrace": [[1925, "torch-utils-get-cpp-backtrace"]], "torch.vsplit": [[1936, "torch-vsplit"]], "Stream": [[1940, "stream"], [1004, "stream"], [989, "stream"]], "torch.tril": [[1911, "torch-tril"]], "torch.unique_consecutive": [[1920, "torch-unique-consecutive"]], "torch.xpu.current_device": [[1942, "torch-xpu-current-device"]], "StreamContext": [[1941, "streamcontext"], [1005, "streamcontext"], [990, "streamcontext"]], "torch.xpu.get_device_name": [[1948, "torch-xpu-get-device-name"]], "torch.tile": [[1904, "torch-tile"]], "torch.vstack": [[1937, "torch-vstack"]], "torch.xpu.device_count": [[1945, "torch-xpu-device-count"]], "torch.unravel_index": [[1921, "torch-unravel-index"]], "torch.vdot": [[1932, "torch-vdot"]], "torch.triu": [[1913, "torch-triu"]], "torch.view_as_real": [[1934, "torch-view-as-real"]], "torch.vmap": [[1935, "torch-vmap"]], "torch.xpu.get_device_properties": [[1949, "torch-xpu-get-device-properties"]], "torch.vander": [[1929, "torch-vander"]], "torch.utils.set_module": [[1927, "torch-utils-set-module"]], "torch.triangular_solve": [[1910, "torch-triangular-solve"]], "device": [[1944, "device"], [1020, "device"]], "torch.transpose": [[1907, "torch-transpose"]], "torch.sparse_csc_tensor": [[1872, "torch-sparse-csc-tensor"]], "torch.signbit": [[1850, "torch-signbit"]], "torch.split": [[1874, "torch-split"]], "torch.sinh": [[1853, "torch-sinh"]], "torch.sparse.as_sparse_gradcheck": [[1860, "torch-sparse-as-sparse-gradcheck"]], "torch.sparse_compressed_tensor": [[1870, "torch-sparse-compressed-tensor"]], "torch.t": [[1896, "torch-t"]], "torch.sparse_bsr_tensor": [[1869, "torch-sparse-bsr-tensor"]], "torch.stft": [[1882, "torch-stft"]], "torch.sym_int": [[1891, "torch-sym-int"]], "torch.sym_max": [[1893, "torch-sym-max"]], "torch.sym_min": [[1894, "torch-sym-min"]], "torch.sparse.addmm": [[1859, "torch-sparse-addmm"]], "torch.svd": [[1886, "torch-svd"]], "torch.sparse.sampled_addmm": [[1864, "torch-sparse-sampled-addmm"]], "torch.sparse.log_softmax": [[1862, "torch-sparse-log-softmax"]], "torch.sparse_bsc_tensor": [[1868, "torch-sparse-bsc-tensor"]], "torch.sqrt": [[1875, "torch-sqrt"]], "torch.squeeze": [[1877, "torch-squeeze"]], "torch.sspaddmm": [[1878, "torch-sspaddmm"]], "torch.subtract": [[1884, "torch-subtract"]], "torch.sum": [[1885, "torch-sum"]], "torch.square": [[1876, "torch-square"]], "torch.sin": [[1851, "torch-sin"]], "torch.svd_lowrank": [[1887, "torch-svd-lowrank"]], "torch.slice_scatter": [[1854, "torch-slice-scatter"]], "torch.sparse.sum": [[1867, "torch-sparse-sum"]], "torch.swapdims": [[1889, "torch-swapdims"]], "torch.sym_float": [[1890, "torch-sym-float"]], "torch.sparse_coo_tensor": [[1871, "torch-sparse-coo-tensor"]], "torch.sparse.mm": [[1863, "torch-sparse-mm"]], "torch.tan": [[1899, "torch-tan"]], "torch.softmax": [[1857, "torch-softmax"]], "torch.swapaxes": [[1888, "torch-swapaxes"]], "torch.sparse.softmax": [[1865, "torch-sparse-softmax"]], "torch.std": [[1880, "torch-std"]], "torch.sort": [[1858, "torch-sort"]], "torch.sparse.spdiags": [[1866, "torch-sparse-spdiags"]], "torch.sparse_csr_tensor": [[1873, "torch-sparse-csr-tensor"]], "torch.sinc": [[1852, "torch-sinc"]], "torch.take": [[1897, "torch-take"]], "torch.std_mean": [[1881, "torch-std-mean"]], "torch.sym_ite": [[1892, "torch-sym-ite"]], "torch.smm": [[1856, "torch-smm"]], "torch.sub": [[1883, "torch-sub"]], "torch.sym_not": [[1895, "torch-sym-not"]], "torch.take_along_dim": [[1898, "torch-take-along-dim"]], "check_sparse_tensor_invariants": [[1861, "check-sparse-tensor-invariants"]], "torch.stack": [[1879, "torch-stack"]], "torch.slogdet": [[1855, "torch-slogdet"]], "torch.scatter_add": [[1819, "torch-scatter-add"]], "torch.set_default_device": [[1825, "torch-set-default-device"]], "torch.resolve_conj": [[1809, "torch-resolve-conj"]], "torch.repeat_interleave": [[1807, "torch-repeat-interleave"]], "torch.select_scatter": [[1824, "torch-select-scatter"]], "torch.signal.windows.cosine": [[1841, "torch-signal-windows-cosine"]], "torch.signal.windows.general_hamming": [[1845, "torch-signal-windows-general-hamming"]], "torch.rot90": [[1813, "torch-rot90"]], "torch.sign": [[1838, "torch-sign"]], "torch.set_default_dtype": [[1826, "torch-set-default-dtype"]], "torch.real": [[1803, "torch-real"]], "torch.set_num_interop_threads": [[1831, "torch-set-num-interop-threads"]], "torch.randperm": [[1800, "torch-randperm"]], "torch.ravel": [[1802, "torch-ravel"]], "torch.searchsorted": [[1821, "torch-searchsorted"]], "torch.signal.windows.general_cosine": [[1844, "torch-signal-windows-general-cosine"]], "torch.round": [[1814, "torch-round"]], "torch.signal.windows.exponential": [[1842, "torch-signal-windows-exponential"]], "torch.set_num_threads": [[1832, "torch-set-num-threads"]], "torch.set_default_tensor_type": [[1827, "torch-set-default-tensor-type"]], "torch.range": [[1801, "torch-range"]], "torch.select": [[1823, "torch-select"]], "torch.set_flush_denormal": [[1830, "torch-set-flush-denormal"]], "torch.result_type": [[1811, "torch-result-type"]], "torch.reciprocal": [[1804, "torch-reciprocal"]], "torch.signal.windows.hamming": [[1846, "torch-signal-windows-hamming"]], "torch.row_stack": [[1815, "torch-row-stack"]], "torch.renorm": [[1806, "torch-renorm"]], "torch.save": [[1817, "torch-save"]], "torch.resolve_neg": [[1810, "torch-resolve-neg"]], "torch.set_float32_matmul_precision": [[1829, "torch-set-float32-matmul-precision"]], "torch.reshape": [[1808, "torch-reshape"]], "torch.set_rng_state": [[1834, "torch-set-rng-state"]], "torch.remainder": [[1805, "torch-remainder"]], "torch.roll": [[1812, "torch-roll"]], "torch.signal.windows.nuttall": [[1849, "torch-signal-windows-nuttall"]], "torch.sgn": [[1836, "torch-sgn"]], "torch.signal.windows.bartlett": [[1839, "torch-signal-windows-bartlett"]], "torch.seed": [[1822, "torch-seed"]], "torch.signal.windows.kaiser": [[1848, "torch-signal-windows-kaiser"]], "torch.signal.windows.blackman": [[1840, "torch-signal-windows-blackman"]], "torch.signal.windows.hann": [[1847, "torch-signal-windows-hann"]], "torch.set_printoptions": [[1833, "torch-set-printoptions"]], "torch.scatter": [[1818, "torch-scatter"]], "torch.scatter_reduce": [[1820, "torch-scatter-reduce"]], "torch.set_deterministic_debug_mode": [[1828, "torch-set-deterministic-debug-mode"]], "torch.set_warn_always": [[1835, "torch-set-warn-always"]], "torch.sigmoid": [[1837, "torch-sigmoid"]], "torch.signal.windows.gaussian": [[1843, "torch-signal-windows-gaussian"]], "torch.rsqrt": [[1816, "torch-rsqrt"]], "FXE0010:fx-pass": [[77, "fxe0010-fx-pass"]], "torch.Tensor.addcmul": [[99, "torch-tensor-addcmul"]], "python.builtin": [[62, "python-builtin"]], "dynamic_shape_round": [[62, "dynamic-shape-round"], [60, "dynamic-shape-round"], [69, "dynamic-shape-round"]], "tensor_setattr": [[62, "tensor-setattr"], [60, "tensor-setattr"]], "type_reflection_method": [[62, "type-reflection-method"], [60, "type-reflection-method"]], "FXE0008:fx-node-to-onnx": [[76, "fxe0008-fx-node-to-onnx"]], "torch.fx.experimental": [[59, "torch-fx-experimental"]], "torch.fx.experimental.symbolic_shapes": [[59, "module-torch.fx.experimental.symbolic_shapes"]], "python.data-structure": [[66, "python-data-structure"]], "dictionary": [[66, "dictionary"], [60, "dictionary"]], "fn_with_kwargs": [[66, "fn-with-kwargs"], [60, "fn-with-kwargs"]], "list_contains": [[66, "list-contains"], [61, "list-contains"], [60, "list-contains"], [69, "list-contains"]], "list_unpack": [[66, "list-unpack"], [65, "list-unpack"], [60, "list-unpack"]], "torch.Tensor.absolute": [[87, "torch-tensor-absolute"]], "torch.mutation": [[73, "torch-mutation"]], "user_input_mutation": [[73, "user-input-mutation"], [60, "user-input-mutation"]], "torch.Tensor.acosh": [[91, "torch-tensor-acosh"]], "python.context-manager": [[64, "python-context-manager"]], "null_context_manager": [[64, "null-context-manager"], [60, "null-context-manager"]], "torch.Tensor.acos": [[89, "torch-tensor-acos"]], "python.closure": [[63, "python-closure"]], "cond_closed_over_variable": [[63, "cond-closed-over-variable"], [68, "cond-closed-over-variable"], [60, "cond-closed-over-variable"]], "nested_function": [[63, "nested-function"], [60, "nested-function"]], "FXE0007:fx-graph-to-onnx": [[75, "fxe0007-fx-graph-to-onnx"]], "Key Representations:": [[75, "key-representations"]], "Additional Notes:": [[75, "additional-notes"]], "torch.operator": [[74, "torch-operator"]], "torch_sym_min": [[74, "torch-sym-min"], [60, "torch-sym-min"]], "torch.func Whirlwind Tour": [[55, "torch-func-whirlwind-tour"]], "What is torch.func?": [[55, "what-is-torch-func"]], "Why composable function transforms?": [[55, "why-composable-function-transforms"], [50, "why-composable-function-transforms"]], "What are the transforms?": [[55, "what-are-the-transforms"]], "grad() (gradient computation)": [[55, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[55, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[55, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[55, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[55, "jacrev-jacfwd-and-hessian"]], "torch.Tensor.abs": [[85, "torch-tensor-abs"]], "torch.Tensor.addbmm": [[95, "torch-tensor-addbmm"]], "torch.Tensor.absolute_": [[88, "torch-tensor-absolute"]], "torch.func API Reference": [[51, "module-torch.func"]], "Function Transforms": [[51, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[51, "utilities-for-working-with-torch-nn-modules"]], "torch.__future__": [[56, "module-torch.__future__"]], "torch.Tensor.add_": [[94, "torch-tensor-add"]], "FXE0014:find-opschema-matched-symbolic-function": [[81, "fxe0014-find-opschema-matched-symbolic-function"]], "FXE0012:unsupported-fx-node-analysis": [[79, "fxe0012-unsupported-fx-node-analysis"]], "python.assert": [[61, "python-assert"]], "dynamic_shape_assert": [[61, "dynamic-shape-assert"], [60, "dynamic-shape-assert"]], "torch.Tensor.acosh_": [[92, "torch-tensor-acosh"]], "torch.func": [[50, "torch-func"]], "What are composable function transforms?": [[50, "what-are-composable-function-transforms"]], "Read More": [[50, "read-more"], [46, "read-more"], [2035, "read-more"]], "torch.Tensor.add": [[93, "torch-tensor-add"]], "torch.escape-hatch": [[71, "torch-escape-hatch"]], "assume_constant_result": [[71, "assume-constant-result"], [60, "assume-constant-result"]], "constrain_as_size_example": [[71, "constrain-as-size-example"], [60, "constrain-as-size-example"], [70, "constrain-as-size-example"]], "constrain_as_value_example": [[71, "constrain-as-value-example"], [60, "constrain-as-value-example"], [70, "constrain-as-value-example"]], "torch.Tensor.addcdiv": [[97, "torch-tensor-addcdiv"]], "Patching Batch Norm": [[52, "patching-batch-norm"]], "What\u2019s happening?": [[52, "what-s-happening"]], "How to fix": [[52, "how-to-fix"]], "Option 1: Change the BatchNorm": [[52, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[52, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[52, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[52, "option-4-eval-mode"]], "python.control-flow": [[65, "python-control-flow"]], "dynamic_shape_if_guard": [[65, "dynamic-shape-if-guard"], [60, "dynamic-shape-if-guard"], [69, "dynamic-shape-if-guard"]], "static_for_loop": [[65, "static-for-loop"], [60, "static-for-loop"]], "static_if": [[65, "static-if"], [60, "static-if"]], "FXE0015:fx-node-insert-type-promotion": [[82, "fxe0015-fx-node-insert-type-promotion"]], "torch.Tensor.addcdiv_": [[98, "torch-tensor-addcdiv"]], "torch.map": [[72, "torch-map"]], "dynamic_shape_map": [[72, "dynamic-shape-map"], [60, "dynamic-shape-map"], [69, "dynamic-shape-map"]], "torch.futures": [[57, "torch-futures"]], "FXE0013:op-level-debugging": [[80, "fxe0013-op-level-debugging"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[83, "fxe0016-find-operator-overloads-in-onnx-registry"]], "torch.Tensor.abs_": [[86, "torch-tensor-abs"]], "Migrating from functorch to torch.func": [[53, "migrating-from-functorch-to-torch-func"]], "function transforms": [[53, "function-transforms"]], "NN module utilities": [[53, "nn-module-utilities"]], "functorch.make_functional": [[53, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[53, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[53, "functorch-compile"]], "Generator": [[84, "generator"]], "python.object-model": [[67, "python-object-model"]], "model_attr_mutation": [[67, "model-attr-mutation"], [60, "model-attr-mutation"]], "optional_input": [[67, "optional-input"], [60, "optional-input"]], "torch.Tensor.acos_": [[90, "torch-tensor-acos"]], "FXE0011:no-symbolic-function-for-call-function": [[78, "fxe0011-no-symbolic-function-for-call-function"]], "torch.cond": [[68, "torch-cond"], [980, "torch-cond"]], "cond_branch_class_method": [[68, "cond-branch-class-method"], [60, "cond-branch-class-method"], [69, "cond-branch-class-method"]], "cond_branch_nested_function": [[68, "cond-branch-nested-function"], [60, "cond-branch-nested-function"], [69, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[68, "cond-branch-nonlocal-variables"], [60, "cond-branch-nonlocal-variables"], [69, "cond-branch-nonlocal-variables"]], "cond_operands": [[68, "cond-operands"], [60, "cond-operands"], [69, "cond-operands"]], "cond_predicate": [[68, "cond-predicate"], [60, "cond-predicate"], [69, "cond-predicate"]], "torch.Tensor.addbmm_": [[96, "torch-tensor-addbmm"]], "ExportDB": [[60, "exportdb"]], "Tags": [[60, null]], "Supported": [[60, "supported"]], "autograd_function": [[60, "autograd-function"]], "class_method": [[60, "class-method"]], "decorator": [[60, "decorator"]], "dynamic_shape_constructor": [[60, "dynamic-shape-constructor"], [69, "dynamic-shape-constructor"]], "dynamic_shape_slicing": [[60, "dynamic-shape-slicing"], [69, "dynamic-shape-slicing"]], "dynamic_shape_view": [[60, "dynamic-shape-view"], [69, "dynamic-shape-view"]], "pytree_flatten": [[60, "pytree-flatten"]], "scalar_output": [[60, "scalar-output"], [69, "scalar-output"]], "specialized_attribute": [[60, "specialized-attribute"]], "Not Supported Yet": [[60, "not-supported-yet"]], "torch.dynamic-shape": [[69, "torch-dynamic-shape"]], "torch.fx": [[58, "torch-fx"]], "Overview": [[58, "module-torch.fx"], [18, "module-torch.cuda._sanitizer"], [46, "overview"], [2006, "overview"], [2014, "module-torch.profiler"], [2040, "overview"], [2007, "overview"]], "Writing Transformations": [[58, "writing-transformations"]], "A Quick Primer on Graphs": [[58, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[58, "graph-manipulation"]], "Direct Graph Manipulation": [[58, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[58, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[58, "graph-manipulation-examples"]], "Proxy/Retracing": [[58, "proxy-retracing"]], "The Interpreter Pattern": [[58, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[58, "examples-of-the-interpreter-pattern"]], "Debugging": [[58, "debugging"], [1961, "debugging"]], "Introduction": [[58, "introduction"], [1971, "introduction"], [1980, "introduction"]], "Common Pitfalls in Transform Authoring": [[58, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[58, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[58, "debugging-the-generated-code"]], "Use pdb": [[58, "use-pdb"]], "Print the Generated Code": [[58, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[58, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[58, "debugging-the-transformation"]], "Available Debuggers": [[58, "available-debuggers"]], "Limitations of Symbolic Tracing": [[58, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[58, "dynamic-control-flow"]], "Static Control Flow": [[58, "static-control-flow"]], "Non-torch Functions": [[58, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[58, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[58, "leaf-modules"]], "Miscellanea": [[58, "miscellanea"]], "API Reference": [[58, "api-reference"], [1975, "module-torch.monitor"], [12, "api-reference"], [18, "api-reference"], [46, "module-torch.export"], [2012, "api-reference"], [2014, "api-reference"], [2007, "api-reference"]], "torch.dynamic-value": [[70, "torch-dynamic-value"]], "UX Limitations": [[54, "ux-limitations"]], "General limitations": [[54, "general-limitations"]], "torch.autograd APIs": [[54, "torch-autograd-apis"]], "vmap limitations": [[54, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[54, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[54, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[54, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[54, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[54, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[54, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[54, "randomness"]], "torch.nn.functional.relu6": [[1640, "torch-nn-functional-relu6"]], "torch.nn.functional.layer_norm": [[1607, "torch-nn-functional-layer-norm"]], "torch.nn.functional.local_response_norm": [[1611, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.nll_loss": [[1629, "torch-nn-functional-nll-loss"]], "torch.nn.functional.mse_loss": [[1625, "torch-nn-functional-mse-loss"]], "torch.nn.functional.kl_div": [[1605, "torch-nn-functional-kl-div"]], "torch.nn.functional.max_pool1d": [[1618, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.poisson_nll_loss": [[1637, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.max_pool3d": [[1620, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.max_unpool1d": [[1621, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.margin_ranking_loss": [[1617, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.max_unpool3d": [[1623, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.silu": [[1647, "torch-nn-functional-silu"]], "torch.nn.functional.pad": [[1632, "torch-nn-functional-pad"]], "torch.nn.functional.logsigmoid": [[1613, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.normalize": [[1630, "torch-nn-functional-normalize"]], "torch.nn.functional.selu": [[1645, "torch-nn-functional-selu"]], "torch.nn.functional.soft_margin_loss": [[1649, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.hardtanh_": [[1600, "torch-nn-functional-hardtanh"]], "torch.nn.functional.linear": [[1610, "torch-nn-functional-linear"]], "torch.nn.functional.multilabel_margin_loss": [[1627, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.sigmoid": [[1646, "torch-nn-functional-sigmoid"]], "torch.nn.functional.smooth_l1_loss": [[1648, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.lp_pool2d": [[1615, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.interpolate": [[1604, "torch-nn-functional-interpolate"]], "torch.nn.functional.instance_norm": [[1603, "torch-nn-functional-instance-norm"]], "torch.nn.functional.multi_margin_loss": [[1626, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.max_pool2d": [[1619, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.pixel_unshuffle": [[1636, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.huber_loss": [[1602, "torch-nn-functional-huber-loss"]], "torch.nn.functional.leaky_relu": [[1608, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.max_unpool2d": [[1622, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.one_hot": [[1631, "torch-nn-functional-one-hot"]], "torch.nn.functional.relu_": [[1641, "torch-nn-functional-relu"]], "torch.nn.functional.rrelu_": [[1643, "torch-nn-functional-rrelu"]], "torch.nn.functional.hinge_embedding_loss": [[1601, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.pairwise_distance": [[1633, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.rrelu": [[1642, "torch-nn-functional-rrelu"]], "torch.nn.functional.lp_pool3d": [[1616, "torch-nn-functional-lp-pool3d"]], "torch.nn.functional.pdist": [[1634, "torch-nn-functional-pdist"]], "torch.nn.functional.mish": [[1624, "torch-nn-functional-mish"]], "torch.nn.functional.prelu": [[1638, "torch-nn-functional-prelu"]], "torch.nn.functional.l1_loss": [[1606, "torch-nn-functional-l1-loss"]], "torch.nn.functional.leaky_relu_": [[1609, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.lp_pool1d": [[1614, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1628, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.log_softmax": [[1612, "torch-nn-functional-log-softmax"]], "torch.nn.functional.relu": [[1639, "torch-nn-functional-relu"]], "torch.nn.functional.pixel_shuffle": [[1635, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.scaled_dot_product_attention": [[1644, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1673, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.functional.softshrink": [[1653, "torch-nn-functional-softshrink"]], "ParametrizationList": [[1692, "parametrizationlist"]], "torch.nn.functional.unfold": [[1662, "torch-nn-functional-unfold"]], "torch.nn.utils.parametrize.register_parametrization": [[1695, "torch-nn-utils-parametrize-register-parametrization"]], "CustomFromMask": [[1698, "customfrommask"]], "torch.nn.functional.upsample_bilinear": [[1664, "torch-nn-functional-upsample-bilinear"]], "torch.nn.functional.softmax": [[1650, "torch-nn-functional-softmax"]], "torch.nn.utils.clip_grad_value_": [[1681, "torch-nn-utils-clip-grad-value"]], "torch.nn.functional.softplus": [[1652, "torch-nn-functional-softplus"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1674, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1661, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.functional.upsample_nearest": [[1665, "torch-nn-functional-upsample-nearest"]], "torch.nn.utils.parametrizations.weight_norm": [[1691, "torch-nn-utils-parametrizations-weight-norm"]], "torch.nn.functional.upsample": [[1663, "torch-nn-functional-upsample"]], "Parameter": [[1676, "parameter"]], "torch.nn.utils.clip_grad_norm": [[1679, "torch-nn-utils-clip-grad-norm"]], "torch.nn.modules.module.register_module_forward_hook": [[1669, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.functional.tanh": [[1655, "torch-nn-functional-tanh"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1659, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1668, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1671, "torch-nn-modules-module-register-module-full-backward-hook"]], "UninitializedBuffer": [[1677, "uninitializedbuffer"]], "DistributedDataParallel": [[1675, "distributeddataparallel"], [1991, "distributeddataparallel"]], "torch.nn.utils.parametrize.cached": [[1693, "torch-nn-utils-parametrize-cached"]], "torch.nn.utils.parametrize.is_parametrized": [[1694, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.utils.fuse_conv_bn_weights": [[1685, "torch-nn-utils-fuse-conv-bn-weights"]], "torch.nn.utils.fuse_conv_bn_eval": [[1684, "torch-nn-utils-fuse-conv-bn-eval"]], "torch.nn.functional.softsign": [[1654, "torch-nn-functional-softsign"]], "torch.nn.modules.module.register_module_backward_hook": [[1667, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.functional.threshold_": [[1658, "torch-nn-functional-threshold"]], "torch.nn.utils.convert_conv2d_weight_memory_format": [[1682, "torch-nn-utils-convert-conv2d-weight-memory-format"]], "torch.nn.utils.parameters_to_vector": [[1688, "torch-nn-utils-parameters-to-vector"]], "LazyModuleMixin": [[1666, "lazymodulemixin"]], "torch.nn.utils.convert_conv3d_weight_memory_format": [[1683, "torch-nn-utils-convert-conv3d-weight-memory-format"]], "BasePruningMethod": [[1697, "basepruningmethod"]], "torch.nn.utils.clip_grad_norm_": [[1680, "torch-nn-utils-clip-grad-norm"]], "Identity": [[1699, "identity"], [1449, "identity"]], "torch.nn.functional.tanhshrink": [[1656, "torch-nn-functional-tanhshrink"]], "torch.nn.utils.fuse_linear_bn_eval": [[1686, "torch-nn-utils-fuse-linear-bn-eval"]], "torch.nn.utils.parametrizations.orthogonal": [[1689, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1696, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.nn.utils.parametrizations.spectral_norm": [[1690, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.functional.threshold": [[1657, "torch-nn-functional-threshold"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1672, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.functional.softmin": [[1651, "torch-nn-functional-softmin"]], "UninitializedParameter": [[1678, "uninitializedparameter"]], "torch.nn.utils.fuse_linear_bn_weights": [[1687, "torch-nn-utils-fuse-linear-bn-weights"]], "torch.nn.functional.triplet_margin_loss": [[1660, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1670, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.functional.adaptive_max_pool1d": [[1555, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.adaptive_avg_pool2d": [[1553, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.ctc_loss": [[1577, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.fractional_max_pool2d": [[1588, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.batch_norm": [[1563, "torch-nn-functional-batch-norm"]], "torch.nn.functional.dropout2d": [[1580, "torch-nn-functional-dropout2d"]], "torch.nn.functional.conv_transpose3d": [[1573, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.elu_": [[1583, "torch-nn-functional-elu"]], "torch.nn.functional.gaussian_nll_loss": [[1590, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.adaptive_max_pool2d": [[1556, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.cosine_embedding_loss": [[1574, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.dropout3d": [[1581, "torch-nn-functional-dropout3d"]], "torch.nn.attention.sdpa_kernel": [[1551, "torch-nn-attention-sdpa-kernel"]], "torch.nn.functional.conv2d": [[1569, "torch-nn-functional-conv2d"]], "torch.nn.functional.fold": [[1587, "torch-nn-functional-fold"]], "torch.nn.functional.binary_cross_entropy": [[1565, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1566, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.avg_pool1d": [[1560, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.conv_transpose1d": [[1571, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.dropout": [[1578, "torch-nn-functional-dropout"]], "torch.nn.functional.hardsigmoid": [[1597, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.avg_pool3d": [[1562, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.adaptive_max_pool3d": [[1557, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.embedding_bag": [[1585, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.glu": [[1592, "torch-nn-functional-glu"]], "torch.nn.functional.conv3d": [[1570, "torch-nn-functional-conv3d"]], "torch.nn.functional.embedding": [[1584, "torch-nn-functional-embedding"]], "torch.nn.functional.adaptive_avg_pool1d": [[1552, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.alpha_dropout": [[1559, "torch-nn-functional-alpha-dropout"]], "torch.nn.functional.adaptive_avg_pool3d": [[1554, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.functional.avg_pool2d": [[1561, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.conv1d": [[1568, "torch-nn-functional-conv1d"]], "torch.nn.functional.conv_transpose2d": [[1572, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.grid_sample": [[1593, "torch-nn-functional-grid-sample"]], "torch.nn.functional.affine_grid": [[1558, "torch-nn-functional-affine-grid"]], "torch.nn.functional.gelu": [[1591, "torch-nn-functional-gelu"]], "torch.nn.functional.cross_entropy": [[1576, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.feature_alpha_dropout": [[1586, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.group_norm": [[1594, "torch-nn-functional-group-norm"]], "torch.nn.functional.bilinear": [[1564, "torch-nn-functional-bilinear"]], "torch.nn.functional.fractional_max_pool3d": [[1589, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.hardshrink": [[1596, "torch-nn-functional-hardshrink"]], "torch.nn.functional.hardtanh": [[1599, "torch-nn-functional-hardtanh"]], "torch.nn.functional.elu": [[1582, "torch-nn-functional-elu"]], "torch.nn.functional.dropout1d": [[1579, "torch-nn-functional-dropout1d"]], "torch.nn.functional.cosine_similarity": [[1575, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.hardswish": [[1598, "torch-nn-functional-hardswish"]], "torch.nn.attention.bias.causal_upper_left": [[1550, "torch-nn-attention-bias-causal-upper-left"]], "torch.nn.functional.celu": [[1567, "torch-nn-functional-celu"]], "torch.nn.functional.gumbel_softmax": [[1595, "torch-nn-functional-gumbel-softmax"]], "torch.promote_types": [[1784, "torch-promote-types"]], "torch.rand": [[1794, "torch-rand"]], "torch.pow": [[1782, "torch-pow"]], "SparseAdam": [[1756, "sparseadam"]], "torch.pinverse": [[1777, "torch-pinverse"]], "torch.randn_like": [[1799, "torch-randn-like"]], "MultiplicativeLR": [[1766, "multiplicativelr"]], "CosineAnnealingWarmRestarts": [[1760, "cosineannealingwarmrestarts"]], "torch.poisson": [[1778, "torch-poisson"]], "torch.randn": [[1798, "torch-randn"]], "torch.prod": [[1783, "torch-prod"]], "CosineAnnealingLR": [[1759, "cosineannealinglr"]], "torch.quantized_max_pool1d": [[1790, "torch-quantized-max-pool1d"]], "RMSprop": [[1753, "rmsprop"]], "Rprop": [[1754, "rprop"]], "torch.positive": [[1781, "torch-positive"]], "StepLR": [[1771, "steplr"]], "torch.qr": [[1785, "torch-qr"]], "torch.rad2deg": [[1793, "torch-rad2deg"]], "ConstantLR": [[1758, "constantlr"]], "SequentialLR": [[1770, "sequentiallr"]], "torch.quantized_batch_norm": [[1789, "torch-quantized-batch-norm"]], "torch.outer": [[1774, "torch-outer"]], "torch.ormqr": [[1773, "torch-ormqr"]], "torch.permute": [[1776, "torch-permute"]], "ChainedScheduler": [[1757, "chainedscheduler"]], "torch.orgqr": [[1772, "torch-orgqr"]], "torch.rand_like": [[1795, "torch-rand-like"]], "torch.polar": [[1779, "torch-polar"]], "SobolEngine": [[1792, "sobolengine"]], "OneCycleLR": [[1767, "onecyclelr"]], "torch.optim.Optimizer.step": [[1750, "torch-optim-optimizer-step"]], "torch.quantize_per_channel": [[1787, "torch-quantize-per-channel"]], "CyclicLR": [[1761, "cycliclr"]], "MultiStepLR": [[1765, "multisteplr"]], "torch.quantize_per_tensor": [[1788, "torch-quantize-per-tensor"]], "torch.pca_lowrank": [[1775, "torch-pca-lowrank"]], "PolynomialLR": [[1768, "polynomiallr"]], "RAdam": [[1752, "radam"]], "torch.optim.Optimizer.zero_grad": [[1751, "torch-optim-optimizer-zero-grad"]], "LinearLR": [[1764, "linearlr"]], "torch.quantile": [[1786, "torch-quantile"]], "SGD": [[1755, "sgd"]], "LambdaLR": [[1763, "lambdalr"]], "ExponentialLR": [[1762, "exponentiallr"]], "torch.quantized_max_pool2d": [[1791, "torch-quantized-max-pool2d"]], "torch.randint": [[1796, "torch-randint"]], "torch.randint_like": [[1797, "torch-randint-like"]], "ReduceLROnPlateau": [[1769, "reducelronplateau"]], "torch.polygamma": [[1780, "torch-polygamma"]], "torch.nn.utils.prune.custom_from_mask": [[1705, "torch-nn-utils-prune-custom-from-mask"]], "torch.normal": [[1731, "torch-normal"]], "torch.nn.utils.stateless.functional_call": [[1725, "torch-nn-utils-stateless-functional-call"]], "PackedSequence": [[1716, "packedsequence"]], "torch.nn.utils.prune.l1_unstructured": [[1709, "torch-nn-utils-prune-l1-unstructured"]], "torch.optim.Optimizer.state_dict": [[1749, "torch-optim-optimizer-state-dict"]], "torch.nn.utils.rnn.unpack_sequence": [[1721, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nonzero": [[1729, "torch-nonzero"]], "PruningContainer": [[1702, "pruningcontainer"]], "RandomUnstructured": [[1704, "randomunstructured"]], "torch.nn.utils.spectral_norm": [[1724, "torch-nn-utils-spectral-norm"]], "LBFGS": [[1745, "lbfgs"]], "torch.nn.utils.weight_norm": [[1727, "torch-nn-utils-weight-norm"]], "AdamW": [[1743, "adamw"]], "torch.optim.Optimizer.load_state_dict": [[1748, "torch-optim-optimizer-load-state-dict"]], "VerificationOptions": [[1738, "verificationoptions"]], "torch.nn.utils.prune.is_pruned": [[1708, "torch-nn-utils-prune-is-pruned"]], "torch.nn.utils.remove_spectral_norm": [[1714, "torch-nn-utils-remove-spectral-norm"]], "torch.nn.utils.prune.global_unstructured": [[1706, "torch-nn-utils-prune-global-unstructured"]], "Adamax": [[1744, "adamax"]], "torch.norm": [[1730, "torch-norm"]], "torch.not_equal": [[1732, "torch-not-equal"]], "NAdam": [[1746, "nadam"]], "torch.numel": [[1733, "torch-numel"]], "no_grad": [[1728, "no-grad"]], "L1Unstructured": [[1700, "l1unstructured"]], "GraphInfo": [[1737, "graphinfo"]], "ASGD": [[1739, "asgd"]], "torch.nn.utils.prune.random_unstructured": [[1712, "torch-nn-utils-prune-random-unstructured"]], "torch.nn.utils.remove_weight_norm": [[1715, "torch-nn-utils-remove-weight-norm"]], "torch.nn.utils.rnn.pack_sequence": [[1718, "torch-nn-utils-rnn-pack-sequence"]], "torch.optim.Optimizer.add_param_group": [[1747, "torch-optim-optimizer-add-param-group"]], "Adagrad": [[1741, "adagrad"]], "torch.nn.utils.vector_to_parameters": [[1726, "torch-nn-utils-vector-to-parameters"]], "torch.nn.utils.skip_init": [[1723, "torch-nn-utils-skip-init"]], "RandomStructured": [[1703, "randomstructured"]], "torch.nn.utils.prune.ln_structured": [[1710, "torch-nn-utils-prune-ln-structured"]], "LnStructured": [[1701, "lnstructured"]], "torch.ones": [[1734, "torch-ones"]], "JitScalarType": [[1736, "jitscalartype"]], "Adadelta": [[1740, "adadelta"]], "Adam": [[1742, "adam"]], "torch.nn.utils.prune.random_structured": [[1711, "torch-nn-utils-prune-random-structured"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1717, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.prune.identity": [[1707, "torch-nn-utils-prune-identity"]], "torch.nn.utils.prune.remove": [[1713, "torch-nn-utils-prune-remove"]], "torch.ones_like": [[1735, "torch-ones-like"]], "torch.nn.utils.rnn.pad_sequence": [[1720, "torch-nn-utils-rnn-pad-sequence"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1719, "torch-nn-utils-rnn-pad-packed-sequence"]], "torch.nn.utils.rnn.unpad_sequence": [[1722, "torch-nn-utils-rnn-unpad-sequence"]], "RNNBase": [[1504, "rnnbase"]], "ReLU6": [[1508, "relu6"], [754, "relu6"]], "ReplicationPad1d": [[1512, "replicationpad1d"]], "Sigmoid": [[1518, "sigmoid"], [755, "sigmoid"]], "Softplus": [[1524, "softplus"]], "SyncBatchNorm": [[1527, "syncbatchnorm"]], "RNN": [[1503, "rnn"]], "Tanh": [[1528, "tanh"]], "TransformerEncoderLayer": [[1535, "transformerencoderlayer"]], "ZeroPad1d": [[1543, "zeropad1d"]], "ReflectionPad2d": [[1510, "reflectionpad2d"]], "Softshrink": [[1525, "softshrink"]], "SoftMarginLoss": [[1520, "softmarginloss"]], "RNNCell": [[1505, "rnncell"], [761, "rnncell"]], "SDPBackend": [[1546, "sdpbackend"]], "RReLU": [[1506, "rrelu"]], "ReflectionPad1d": [[1509, "reflectionpad1d"]], "PoissonNLLLoss": [[1502, "poissonnllloss"]], "Upsample": [[1540, "upsample"]], "UpsamplingBilinear2d": [[1541, "upsamplingbilinear2d"]], "TripletMarginWithDistanceLoss": [[1537, "tripletmarginwithdistanceloss"]], "Softmax2d": [[1522, "softmax2d"]], "torch.nn.attention.bias.causal_lower_right": [[1549, "torch-nn-attention-bias-causal-lower-right"]], "ReflectionPad3d": [[1511, "reflectionpad3d"]], "SmoothL1Loss": [[1519, "smoothl1loss"]], "ZeroPad3d": [[1545, "zeropad3d"]], "Softsign": [[1526, "softsign"]], "Tanhshrink": [[1529, "tanhshrink"]], "TripletMarginLoss": [[1536, "tripletmarginloss"]], "TransformerDecoder": [[1532, "transformerdecoder"]], "SELU": [[1515, "selu"]], "Sequential": [[1516, "sequential"]], "Softmin": [[1523, "softmin"]], "ReLU": [[1507, "relu"]], "TransformerEncoder": [[1534, "transformerencoder"]], "UpsamplingNearest2d": [[1542, "upsamplingnearest2d"]], "Threshold": [[1530, "threshold"]], "torch.nn.attention.bias.CausalBias": [[1547, "torch-nn-attention-bias-causalbias"]], "CausalVariant": [[1548, "causalvariant"]], "PixelUnshuffle": [[1501, "pixelunshuffle"]], "SiLU": [[1517, "silu"]], "Softmax": [[1521, "softmax"]], "ZeroPad2d": [[1544, "zeropad2d"]], "ReplicationPad3d": [[1514, "replicationpad3d"]], "TransformerDecoderLayer": [[1533, "transformerdecoderlayer"]], "Unflatten": [[1538, "unflatten"]], "Unfold": [[1539, "unfold"]], "ReplicationPad2d": [[1513, "replicationpad2d"]], "PixelShuffle": [[1500, "pixelshuffle"]], "torch.narrow": [[1383, "torch-narrow"]], "AvgPool3d": [[1399, "avgpool3d"]], "torch.msort": [[1372, "torch-msort"]], "torch.mv": [[1376, "torch-mv"]], "torch.mps.empty_cache": [[1361, "torch-mps-empty-cache"]], "torch.moveaxis": [[1357, "torch-moveaxis"]], "AdaptiveMaxPool2d": [[1394, "adaptivemaxpool2d"]], "Event": [[1362, "event"], [1001, "event"]], "torch.multinomial": [[1374, "torch-multinomial"]], "torch.mps.seed": [[1368, "torch-mps-seed"]], "torch.meshgrid": [[1352, "torch-meshgrid"]], "torch.nextafter": [[1388, "torch-nextafter"]], "torch.nanquantile": [[1381, "torch-nanquantile"]], "torch.mps.profiler.start": [[1366, "torch-mps-profiler-start"]], "torch.movedim": [[1358, "torch-movedim"]], "torch.min": [[1353, "torch-min"]], "torch.mps.current_allocated_memory": [[1359, "torch-mps-current-allocated-memory"]], "torch.nansum": [[1382, "torch-nansum"]], "torch.mm": [[1355, "torch-mm"]], "torch.neg": [[1386, "torch-neg"]], "torch.nanmedian": [[1380, "torch-nanmedian"]], "AdaptiveMaxPool1d": [[1393, "adaptivemaxpool1d"]], "AlphaDropout": [[1396, "alphadropout"]], "torch.median": [[1351, "torch-median"]], "AvgPool1d": [[1397, "avgpool1d"]], "torch.nanmean": [[1379, "torch-nanmean"]], "torch.narrow_copy": [[1384, "torch-narrow-copy"]], "torch.mps.get_rng_state": [[1363, "torch-mps-get-rng-state"]], "AdaptiveLogSoftmaxWithLoss": [[1392, "adaptivelogsoftmaxwithloss"]], "torch.mps.synchronize": [[1371, "torch-mps-synchronize"]], "torch.mps.driver_allocated_memory": [[1360, "torch-mps-driver-allocated-memory"]], "torch.mps.profiler.stop": [[1367, "torch-mps-profiler-stop"]], "torch.mps.profiler.profile": [[1365, "torch-mps-profiler-profile"]], "torch.mean": [[1350, "torch-mean"]], "torch.multiply": [[1375, "torch-multiply"]], "AdaptiveAvgPool2d": [[1390, "adaptiveavgpool2d"]], "torch.mul": [[1373, "torch-mul"]], "torch.mvlgamma": [[1377, "torch-mvlgamma"]], "torch.nan_to_num": [[1378, "torch-nan-to-num"]], "torch.minimum": [[1354, "torch-minimum"]], "AvgPool2d": [[1398, "avgpool2d"]], "torch.mps.set_rng_state": [[1370, "torch-mps-set-rng-state"]], "AdaptiveAvgPool1d": [[1389, "adaptiveavgpool1d"]], "AdaptiveAvgPool3d": [[1391, "adaptiveavgpool3d"]], "AdaptiveMaxPool3d": [[1395, "adaptivemaxpool3d"]], "torch.mps.set_per_process_memory_fraction": [[1369, "torch-mps-set-per-process-memory-fraction"]], "torch.negative": [[1387, "torch-negative"]], "torch.ne": [[1385, "torch-ne"]], "torch.mps.manual_seed": [[1364, "torch-mps-manual-seed"]], "torch.mode": [[1356, "torch-mode"]], "Dropout3d": [[1428, "dropout3d"]], "GLU": [[1438, "glu"]], "Bilinear": [[1405, "bilinear"]], "Hardswish": [[1445, "hardswish"], [746, "hardswish"]], "CELU": [[1406, "celu"]], "Conv1d": [[1415, "conv1d"], [734, "conv1d"]], "Fold": [[1434, "fold"]], "EmbeddingBag": [[1431, "embeddingbag"], [742, "embeddingbag"]], "Conv2d": [[1416, "conv2d"], [726, "conv2d"], [735, "conv2d"]], "CircularPad1d": [[1409, "circularpad1d"]], "CosineEmbeddingLoss": [[1421, "cosineembeddingloss"]], "Dropout1d": [[1426, "dropout1d"]], "ConvTranspose3d": [[1420, "convtranspose3d"], [739, "convtranspose3d"]], "Dropout": [[1425, "dropout"]], "Embedding": [[1430, "embedding"], [741, "embedding"]], "Conv3d": [[1417, "conv3d"], [736, "conv3d"], [727, "conv3d"]], "ConvTranspose2d": [[1419, "convtranspose2d"], [738, "convtranspose2d"]], "BatchNorm1d": [[1402, "batchnorm1d"]], "GroupNorm": [[1442, "groupnorm"], [745, "groupnorm"]], "CircularPad3d": [[1411, "circularpad3d"]], "ChannelShuffle": [[1408, "channelshuffle"]], "ConstantPad2d": [[1413, "constantpad2d"]], "Hardtanh": [[1446, "hardtanh"]], "Hardshrink": [[1443, "hardshrink"]], "FractionalMaxPool2d": [[1435, "fractionalmaxpool2d"]], "BCEWithLogitsLoss": [[1401, "bcewithlogitsloss"]], "ConstantPad1d": [[1412, "constantpad1d"]], "GRU": [[1439, "gru"], [756, "gru"]], "CircularPad2d": [[1410, "circularpad2d"]], "BatchNorm3d": [[1404, "batchnorm3d"], [733, "batchnorm3d"]], "CrossEntropyLoss": [[1423, "crossentropyloss"]], "DataParallel": [[1424, "dataparallel"]], "FractionalMaxPool3d": [[1436, "fractionalmaxpool3d"]], "HingeEmbeddingLoss": [[1447, "hingeembeddingloss"]], "ConstantPad3d": [[1414, "constantpad3d"]], "HuberLoss": [[1448, "huberloss"]], "BatchNorm2d": [[1403, "batchnorm2d"], [732, "batchnorm2d"]], "GRUCell": [[1440, "grucell"], [757, "grucell"]], "ELU": [[1429, "elu"], [740, "elu"]], "BCELoss": [[1400, "bceloss"]], "Flatten": [[1433, "flatten"]], "CTCLoss": [[1407, "ctcloss"]], "CosineSimilarity": [[1422, "cosinesimilarity"]], "Hardsigmoid": [[1444, "hardsigmoid"]], "GELU": [[1437, "gelu"]], "FeatureAlphaDropout": [[1432, "featurealphadropout"]], "Dropout2d": [[1427, "dropout2d"]], "ConvTranspose1d": [[1418, "convtranspose1d"], [737, "convtranspose1d"]], "GaussianNLLLoss": [[1441, "gaussiannllloss"]], "MaxPool1d": [[1481, "maxpool1d"]], "LPPool3d": [[1457, "lppool3d"]], "LPPool2d": [[1456, "lppool2d"]], "PReLU": [[1496, "prelu"]], "MaxPool3d": [[1483, "maxpool3d"]], "LazyBatchNorm2d": [[1462, "lazybatchnorm2d"]], "NLLLoss": [[1495, "nllloss"]], "LogSoftmax": [[1478, "logsoftmax"]], "MultiLabelSoftMarginLoss": [[1492, "multilabelsoftmarginloss"]], "ParameterList": [[1499, "parameterlist"]], "PairwiseDistance": [[1497, "pairwisedistance"]], "LazyConvTranspose2d": [[1468, "lazyconvtranspose2d"]], "LazyInstanceNorm3d": [[1472, "lazyinstancenorm3d"]], "Linear": [[1475, "linear"], [760, "linear"], [752, "linear"], [728, "linear"], [729, "linear"]], "ParameterDict": [[1498, "parameterdict"]], "LayerNorm": [[1460, "layernorm"], [750, "layernorm"]], "MaxUnpool2d": [[1485, "maxunpool2d"]], "LazyConv2d": [[1465, "lazyconv2d"]], "LSTMCell": [[1459, "lstmcell"], [759, "lstmcell"]], "InstanceNorm2d": [[1451, "instancenorm2d"], [748, "instancenorm2d"]], "LSTM": [[1458, "lstm"], [758, "lstm"], [730, "lstm"]], "LazyInstanceNorm2d": [[1471, "lazyinstancenorm2d"]], "Module": [[1488, "module"]], "LazyConv3d": [[1466, "lazyconv3d"]], "LazyConvTranspose3d": [[1469, "lazyconvtranspose3d"]], "LazyConv1d": [[1464, "lazyconv1d"]], "LPPool1d": [[1455, "lppool1d"]], "InstanceNorm1d": [[1450, "instancenorm1d"], [747, "instancenorm1d"]], "LazyConvTranspose1d": [[1467, "lazyconvtranspose1d"]], "MaxUnpool1d": [[1484, "maxunpool1d"]], "MultiheadAttention": [[1494, "multiheadattention"], [731, "multiheadattention"]], "LazyBatchNorm1d": [[1461, "lazybatchnorm1d"]], "LocalResponseNorm": [[1476, "localresponsenorm"]], "LeakyReLU": [[1474, "leakyrelu"], [751, "leakyrelu"]], "Mish": [[1487, "mish"]], "ModuleDict": [[1489, "moduledict"]], "LogSigmoid": [[1477, "logsigmoid"]], "MultiMarginLoss": [[1493, "multimarginloss"]], "MultiLabelMarginLoss": [[1491, "multilabelmarginloss"]], "ModuleList": [[1490, "modulelist"]], "KLDivLoss": [[1453, "kldivloss"]], "L1Loss": [[1454, "l1loss"]], "MSELoss": [[1479, "mseloss"]], "LazyInstanceNorm1d": [[1470, "lazyinstancenorm1d"]], "MaxUnpool3d": [[1486, "maxunpool3d"]], "MaxPool2d": [[1482, "maxpool2d"]], "InstanceNorm3d": [[1452, "instancenorm3d"], [749, "instancenorm3d"]], "LazyLinear": [[1473, "lazylinear"]], "LazyBatchNorm3d": [[1463, "lazybatchnorm3d"]], "MarginRankingLoss": [[1480, "marginrankingloss"]], "torch.linalg.lu_solve": [[1300, "torch-linalg-lu-solve"]], "torch.lobpcg": [[1323, "torch-lobpcg"]], "torch.linalg.multi_dot": [[1306, "torch-linalg-multi-dot"]], "torch.linalg.slogdet": [[1310, "torch-linalg-slogdet"]], "torch.logaddexp": [[1328, "torch-logaddexp"]], "torch.linalg.tensorsolve": [[1317, "torch-linalg-tensorsolve"]], "torch.linalg.solve_ex": [[1312, "torch-linalg-solve-ex"]], "torch.lu": [[1340, "torch-lu"]], "torch.linalg.svd": [[1314, "torch-linalg-svd"]], "torch.linalg.tensorinv": [[1316, "torch-linalg-tensorinv"]], "torch.matrix_power": [[1347, "torch-matrix-power"]], "torch.maximum": [[1349, "torch-maximum"]], "torch.linalg.matrix_norm": [[1303, "torch-linalg-matrix-norm"]], "torch.linalg.vector_norm": [[1320, "torch-linalg-vector-norm"]], "torch.logit": [[1336, "torch-logit"]], "torch.linalg.solve": [[1311, "torch-linalg-solve"]], "torch.log2": [[1327, "torch-log2"]], "torch.linalg.pinv": [[1308, "torch-linalg-pinv"]], "torch.logaddexp2": [[1329, "torch-logaddexp2"]], "torch.logcumsumexp": [[1330, "torch-logcumsumexp"]], "torch.lu_unpack": [[1342, "torch-lu-unpack"]], "torch.linalg.svdvals": [[1315, "torch-linalg-svdvals"]], "torch.log": [[1324, "torch-log"]], "torch.log1p": [[1326, "torch-log1p"]], "torch.linalg.matmul": [[1301, "torch-linalg-matmul"]], "torch.linalg.vecdot": [[1319, "torch-linalg-vecdot"]], "torch.linalg.qr": [[1309, "torch-linalg-qr"]], "torch.linalg.vander": [[1318, "torch-linalg-vander"]], "torch.logical_and": [[1332, "torch-logical-and"]], "torch.logspace": [[1337, "torch-logspace"]], "torch.logical_not": [[1333, "torch-logical-not"]], "torch.logdet": [[1331, "torch-logdet"]], "torch.matrix_exp": [[1346, "torch-matrix-exp"]], "torch.matmul": [[1345, "torch-matmul"]], "torch.logsumexp": [[1338, "torch-logsumexp"]], "torch.max": [[1348, "torch-max"]], "torch.load": [[1322, "torch-load"]], "torch.logical_xor": [[1335, "torch-logical-xor"]], "torch.linalg.matrix_power": [[1304, "torch-linalg-matrix-power"]], "torch.lu_solve": [[1341, "torch-lu-solve"]], "torch.linalg.solve_triangular": [[1313, "torch-linalg-solve-triangular"]], "torch.manual_seed": [[1343, "torch-manual-seed"]], "torch.linalg.matrix_rank": [[1305, "torch-linalg-matrix-rank"]], "torch.lt": [[1339, "torch-lt"]], "torch.linalg.matrix_exp": [[1302, "torch-linalg-matrix-exp"]], "torch.masked_select": [[1344, "torch-masked-select"]], "torch.log10": [[1325, "torch-log10"]], "torch.linalg.norm": [[1307, "torch-linalg-norm"]], "torch.logical_or": [[1334, "torch-logical-or"]], "torch.linspace": [[1321, "torch-linspace"]], "torch.i0": [[1218, "torch-i0"]], "torch.is_storage": [[1236, "torch-is-storage"]], "torch.igamma": [[1219, "torch-igamma"]], "torch.is_inference_mode_enabled": [[1234, "torch-is-inference-mode-enabled"]], "torch.isneginf": [[1244, "torch-isneginf"]], "torch.hamming_window": [[1208, "torch-hamming-window"]], "torch.is_warn_always_enabled": [[1238, "torch-is-warn-always-enabled"]], "torch.get_float32_matmul_precision": [[1200, "torch-get-float32-matmul-precision"]], "torch.isposinf": [[1245, "torch-isposinf"]], "torch.histogram": [[1212, "torch-histogram"]], "torch.get_num_interop_threads": [[1201, "torch-get-num-interop-threads"]], "torch.gradient": [[1204, "torch-gradient"]], "torch.is_conj": [[1230, "torch-is-conj"]], "torch.heaviside": [[1210, "torch-heaviside"]], "torch.hstack": [[1216, "torch-hstack"]], "torch.isinf": [[1242, "torch-isinf"]], "torch.is_floating_point": [[1232, "torch-is-floating-point"]], "torch.get_rng_state": [[1203, "torch-get-rng-state"]], "torch.imag": [[1221, "torch-imag"]], "torch.isclose": [[1239, "torch-isclose"]], "torch.isnan": [[1243, "torch-isnan"]], "torch.hsplit": [[1214, "torch-hsplit"]], "torch.index_reduce": [[1224, "torch-index-reduce"]], "torch.index_add": [[1222, "torch-index-add"]], "torch.index_copy": [[1223, "torch-index-copy"]], "torch.initial_seed": [[1226, "torch-initial-seed"]], "torch.histc": [[1211, "torch-histc"]], "torch.isin": [[1241, "torch-isin"]], "torch.greater": [[1205, "torch-greater"]], "torch.isreal": [[1246, "torch-isreal"]], "torch.hann_window": [[1209, "torch-hann-window"]], "torch.get_num_threads": [[1202, "torch-get-num-threads"]], "torch.istft": [[1247, "torch-istft"]], "torch.igammac": [[1220, "torch-igammac"]], "torch.is_grad_enabled": [[1233, "torch-is-grad-enabled"]], "torch.hspmm": [[1215, "torch-hspmm"]], "torch.greater_equal": [[1206, "torch-greater-equal"]], "torch.is_nonzero": [[1235, "torch-is-nonzero"]], "torch.inverse": [[1228, "torch-inverse"]], "Attribute": [[1248, "attribute"]], "torch.is_complex": [[1229, "torch-is-complex"]], "torch.index_select": [[1225, "torch-index-select"]], "ScriptFunction": [[1249, "scriptfunction"]], "torch.histogramdd": [[1213, "torch-histogramdd"]], "torch.inner": [[1227, "torch-inner"]], "torch.isfinite": [[1240, "torch-isfinite"]], "torch.gt": [[1207, "torch-gt"]], "torch.hypot": [[1217, "torch-hypot"]], "torch.is_tensor": [[1237, "torch-is-tensor"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1231, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.jit.unused": [[1268, "torch-jit-unused"]], "torch.linalg.cross": [[1283, "torch-linalg-cross"]], "strict_fusion": [[1265, "strict-fusion"]], "ScriptModule": [[1250, "scriptmodule"]], "torch.jit.wait": [[1269, "torch-jit-wait"]], "torch.less_equal": [[1278, "torch-less-equal"]], "torch.kaiser_window": [[1270, "torch-kaiser-window"]], "torch.linalg.cond": [[1282, "torch-linalg-cond"]], "torch.jit.set_fusion_strategy": [[1264, "torch-jit-set-fusion-strategy"]], "torch.kron": [[1271, "torch-kron"]], "torch.jit.optimize_for_inference": [[1260, "torch-jit-optimize-for-inference"]], "torch.linalg.eigvalsh": [[1289, "torch-linalg-eigvalsh"]], "torch.linalg.lu_factor_ex": [[1299, "torch-linalg-lu-factor-ex"]], "torch.jit.save": [[1261, "torch-jit-save"]], "torch.linalg.cholesky": [[1280, "torch-linalg-cholesky"]], "torch.linalg.eig": [[1286, "torch-linalg-eig"]], "torch.linalg.eigvals": [[1288, "torch-linalg-eigvals"]], "torch.jit.trace_module": [[1267, "torch-jit-trace-module"]], "torch.linalg.ldl_solve": [[1295, "torch-linalg-ldl-solve"]], "torch.linalg.inv_ex": [[1292, "torch-linalg-inv-ex"]], "torch.jit.script": [[1262, "torch-jit-script"]], "torch.linalg.cholesky_ex": [[1281, "torch-linalg-cholesky-ex"]], "torch.linalg.diagonal": [[1285, "torch-linalg-diagonal"]], "torch.jit.load": [[1258, "torch-jit-load"]], "torch.jit.annotate": [[1251, "torch-jit-annotate"]], "torch.linalg.lu_factor": [[1298, "torch-linalg-lu-factor"]], "torch.lgamma": [[1279, "torch-lgamma"]], "torch.jit.ignore": [[1255, "torch-jit-ignore"]], "torch.jit.script_if_tracing": [[1263, "torch-jit-script-if-tracing"]], "torch.linalg.eigh": [[1287, "torch-linalg-eigh"]], "torch.linalg.ldl_factor_ex": [[1294, "torch-linalg-ldl-factor-ex"]], "torch.jit.enable_onednn_fusion": [[1252, "torch-jit-enable-onednn-fusion"]], "torch.jit.interface": [[1256, "torch-jit-interface"]], "torch.linalg.householder_product": [[1290, "torch-linalg-householder-product"]], "torch.jit.fork": [[1253, "torch-jit-fork"]], "torch.linalg.lu": [[1297, "torch-linalg-lu"]], "torch.linalg.det": [[1284, "torch-linalg-det"]], "torch.linalg.ldl_factor": [[1293, "torch-linalg-ldl-factor"]], "torch.jit.freeze": [[1254, "torch-jit-freeze"]], "torch.ldexp": [[1274, "torch-ldexp"]], "torch.jit.onednn_fusion_enabled": [[1259, "torch-jit-onednn-fusion-enabled"]], "torch.linalg.inv": [[1291, "torch-linalg-inv"]], "torch.lcm": [[1273, "torch-lcm"]], "torch.le": [[1275, "torch-le"]], "torch.less": [[1277, "torch-less"]], "torch.linalg.lstsq": [[1296, "torch-linalg-lstsq"]], "torch.jit.trace": [[1266, "torch-jit-trace"]], "torch.kthvalue": [[1272, "torch-kthvalue"]], "torch.jit.isinstance": [[1257, "torch-jit-isinstance"]], "torch.lerp": [[1276, "torch-lerp"]], "PyTorch documentation": [[1960, "pytorch-documentation"]], "Community": [[1960, null]], "Developer Notes": [[1960, null]], "Language Bindings": [[1960, null]], "Python API": [[1960, null], [2009, "module-torch.onnx"]], "Libraries": [[1960, null]], "Indices and tables": [[1960, "indices-and-tables"]], "TorchScript Unsupported PyTorch Constructs": [[1966, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1966, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1966, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1966, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1966, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1966, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1966, "pytorch-unsupported-modules-and-classes"]], "HIP (ROCm) semantics": [[1997, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1997, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1997, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1997, "tensorfloat-32-tf32-on-rocm"]], "Memory management": [[1997, "memory-management"], [1990, "memory-management"], [17, "memory-management"]], "hipFFT/rocFFT plan cache": [[1997, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1997, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1997, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1997, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1997, "enabling-kernel-asserts"]], "torch.xpu.init": [[1950, "torch-xpu-init"]], "torch.xpu.is_initialized": [[1952, "torch-xpu-is-initialized"]], "TorchScript": [[1961, "torchscript"]], "Creating TorchScript Code": [[1961, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1961, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1961, "torchscript-language"]], "Built-in Functions and Modules": [[1961, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1961, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1961, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1961, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[1961, "disable-jit-for-debugging"]], "Inspecting Code": [[1961, "inspecting-code"]], "Interpreting Graphs": [[1961, "interpreting-graphs"]], "Tracer": [[1961, "tracer"]], "Tracing Edge Cases": [[1961, "tracing-edge-cases"]], "Automatic Trace Checking": [[1961, "automatic-trace-checking"]], "Tracer Warnings": [[1961, "tracer-warnings"]], "Frequently Asked Questions": [[1961, "frequently-asked-questions"], [1994, "frequently-asked-questions"], [7, "frequently-asked-questions"], [2015, "frequently-asked-questions"], [2044, "frequently-asked-questions"], [2009, "frequently-asked-questions"]], "Known Issues": [[1961, "known-issues"]], "Appendix": [[1961, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1961, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1961, "modules"], [1999, "modules"]], "TorchScript Classes": [[1961, "torchscript-classes"], [1963, "id2"]], "Attributes": [[1961, "attributes"]], "Constants": [[1961, "constants"]], "Variables": [[1961, "variables"], [1963, "variables"], [2047, "variables"]], "Fusion Backends": [[1961, "fusion-backends"]], "References": [[1961, "references"], [47, "references"]], "torch.masked": [[1971, "torch-masked"]], "Motivation": [[1971, "motivation"], [2043, "motivation"], [2042, "motivation"]], "What is a MaskedTensor?": [[1971, "what-is-a-maskedtensor"]], "Supported Operators": [[1971, "supported-operators"]], "Unary Operators": [[1971, "unary-operators"]], "Binary Operators": [[1971, "binary-operators"]], "Reductions": [[1971, "reductions"]], "View and select functions": [[1971, "view-and-select-functions"]], "Named Tensors operator coverage": [[1978, "named-tensors-operator-coverage"]], "Supported Operations": [[1978, "id1"]], "Keeps input names": [[1978, "keeps-input-names"]], "Removes dimensions": [[1978, "removes-dimensions"]], "Unifies names from inputs": [[1978, "unifies-names-from-inputs"]], "Permutes dimensions": [[1978, "permutes-dimensions"]], "Contracts away dims": [[1978, "contracts-away-dims"]], "Factory functions": [[1978, "factory-functions"]], "out function and in-place variants": [[1978, "out-function-and-in-place-variants"]], "CUDA semantics": [[1990, "cuda-semantics"]], "TensorFloat-32 (TF32) on Ampere (and later) devices": [[1990, "tensorfloat-32-tf32-on-ampere-and-later-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1990, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1990, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1990, "asynchronous-execution"]], "CUDA streams": [[1990, "cuda-streams"]], "Stream semantics of backward passes": [[1990, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1990, "bc-note-using-grads-on-the-default-stream"]], "Optimizing memory usage  with PYTORCH_CUDA_ALLOC_CONF": [[1990, "optimizing-memory-usage-with-pytorch-cuda-alloc-conf"]], "Using custom memory allocators for CUDA": [[1990, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1990, "cublas-workspaces"]], "cuFFT plan cache": [[1990, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1990, "just-in-time-compilation"]], "Best practices": [[1990, "best-practices"]], "Device-agnostic code": [[1990, "device-agnostic-code"]], "Use pinned memory buffers": [[1990, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1990, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1990, "cuda-graphs"]], "Why CUDA Graphs?": [[1990, "why-cuda-graphs"]], "PyTorch API": [[1990, "pytorch-api"]], "Constraints": [[1990, "constraints"], [31, "module-torch.distributions.constraints"]], "Non-constraints": [[1990, "non-constraints"]], "Whole-network capture": [[1990, "whole-network-capture"]], "Partial-network capture": [[1990, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1990, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1990, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1990, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1990, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1990, "id5"]], "Graph memory management": [[1990, "graph-memory-management"]], "Sharing memory across captures": [[1990, "sharing-memory-across-captures"]], "torch.nested": [[1980, "module-torch.nested"]], "Construction": [[1980, "construction"], [2024, "construction"]], "size": [[1980, "size"]], "unbind": [[1980, "unbind"]], "Nested tensor constructor and conversion functions": [[1980, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1980, "supported-operations"], [2024, "supported-operations"]], "torch.zeros_like": [[1958, "torch-zeros-like"]], "torch.library": [[1968, "module-torch.library"]], "Low-level APIs": [[1968, "low-level-apis"]], "torch.nn.attention": [[1982, "module-torch.nn.attention"]], "Utils": [[1982, "utils"]], "Submodules": [[1982, "submodules"]], "torch.hub": [[1959, "torch-hub"]], "Publishing models": [[1959, "publishing-models"]], "How to implement an entrypoint?": [[1959, "how-to-implement-an-entrypoint"]], "Important Notice": [[1959, "important-notice"]], "Loading models from Hub": [[1959, "loading-models-from-hub"]], "Running a loaded model:": [[1959, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1959, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1959, "caching-logic"]], "Known limitations:": [[1959, "known-limitations"]], "Extending PyTorch": [[1992, "extending-pytorch"]], "Extending torch.autograd": [[1992, "extending-torch-autograd"]], "When to use": [[1992, "when-to-use"]], "When not to use": [[1992, "when-not-to-use"]], "How to use": [[1992, "how-to-use"]], "Example": [[1992, "example"], [1991, "example"]], "Combined or separate forward() and setup_context()": [[1992, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1992, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1992, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1992, "extending-torch-nn"]], "Adding a Module": [[1992, "adding-a-module"]], "Extending torch Python API": [[1992, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[1992, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1992, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1992, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1992, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1992, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[1992, "extending-torch-native-api"]], "Extending all torch API with Modes": [[1992, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[1992, "writing-custom-c-extensions"]], "Autograd mechanics": [[1987, "autograd-mechanics"]], "How autograd encodes the history": [[1987, "how-autograd-encodes-the-history"]], "Saved tensors": [[1987, "saved-tensors"]], "Gradients for non-differentiable functions": [[1987, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[1987, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [2032, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[1987, "setting-requires-grad"]], "Grad Modes": [[1987, "grad-modes"]], "Default Mode (Grad Mode)": [[1987, "default-mode-grad-mode"]], "No-grad Mode": [[1987, "no-grad-mode"]], "Inference Mode": [[1987, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1987, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1987, "in-place-operations-with-autograd"]], "In-place correctness checks": [[1987, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[1987, "multithreaded-autograd"]], "Concurrency on CPU": [[1987, "concurrency-on-cpu"]], "Non-determinism": [[1987, "non-determinism"]], "Graph retaining": [[1987, "graph-retaining"]], "Thread Safety on Autograd Node": [[1987, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1987, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1987, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1987, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1987, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1987, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1987, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1987, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1987, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1987, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1987, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1987, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1987, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1987, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1987, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1987, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1987, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "torch.monitor": [[1975, "torch-monitor"]], "torch.utils.mobile_optimizer": [[1973, "torch-utils-mobile-optimizer"]], "torch.nn.functional": [[1984, "torch-nn-functional"]], "Convolution functions": [[1984, "convolution-functions"]], "Pooling functions": [[1984, "pooling-functions"]], "Attention Mechanisms": [[1984, "attention-mechanisms"]], "Non-linear activation functions": [[1984, "non-linear-activation-functions"]], "Linear functions": [[1984, "linear-functions"]], "Dropout functions": [[1984, "dropout-functions"]], "Sparse functions": [[1984, "sparse-functions"]], "Distance functions": [[1984, "distance-functions"]], "Loss functions": [[1984, "loss-functions"]], "Vision functions": [[1984, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1984, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1984, "data-parallel"]], "torch.mps": [[1976, "module-torch.mps"]], "MPS Profiler": [[1976, "mps-profiler"]], "MPS Event": [[1976, "mps-event"]], "Meta device": [[1972, "meta-device"]], "Idioms for working with meta tensors": [[1972, "idioms-for-working-with-meta-tensors"]], "Multiprocessing package - torch.multiprocessing": [[1977, "module-torch.multiprocessing"]], "Strategy management": [[1977, "strategy-management"]], "Sharing CUDA tensors": [[1977, "sharing-cuda-tensors"]], "Sharing strategies": [[1977, "sharing-strategies"]], "File descriptor - file_descriptor": [[1977, "file-descriptor-file-descriptor"]], "File system - file_system": [[1977, "file-system-file-system"]], "Spawning subprocesses": [[1977, "spawning-subprocesses"]], "CUDA Automatic Mixed Precision examples": [[1986, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1986, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1986, "working-with-unscaled-gradients"]], "Gradient clipping": [[1986, "gradient-clipping"]], "Working with Scaled Gradients": [[1986, "working-with-scaled-gradients"]], "Gradient accumulation": [[1986, "gradient-accumulation"]], "Gradient penalty": [[1986, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1986, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1986, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1986, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1986, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1986, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1986, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1986, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1986, "functions-that-need-a-particular-dtype"]], "JIT Utils - torch.utils.jit": [[1967, "module-torch.utils.jit"]], "CPU threading and TorchScript inference": [[1989, "cpu-threading-and-torchscript-inference"]], "Build options": [[1989, "build-options"]], "Runtime API": [[1989, "runtime-api"]], "Tuning the number of threads": [[1989, "tuning-the-number-of-threads"]], "torch.nn": [[1981, "module-torch.nn"], [1981, "id1"]], "Containers": [[1981, "containers"]], "Convolution Layers": [[1981, "convolution-layers"]], "Pooling layers": [[1981, "pooling-layers"]], "Padding Layers": [[1981, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1981, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1981, "non-linear-activations-other"]], "Normalization Layers": [[1981, "normalization-layers"]], "Recurrent Layers": [[1981, "recurrent-layers"]], "Transformer Layers": [[1981, "transformer-layers"]], "Linear Layers": [[1981, "linear-layers"]], "Dropout Layers": [[1981, "dropout-layers"]], "Sparse Layers": [[1981, "sparse-layers"]], "Distance Functions": [[1981, "distance-functions"]], "Loss Functions": [[1981, "loss-functions"]], "Vision Layers": [[1981, "vision-layers"]], "Shuffle Layers": [[1981, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1981, "module-torch.nn.parallel"]], "Utilities": [[1981, "module-torch.nn.utils"], [2032, "utilities"]], "Quantized Functions": [[1981, "quantized-functions"]], "Lazy Modules Initialization": [[1981, "lazy-modules-initialization"]], "torch.nn.init": [[1985, "torch-nn-init"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1994, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1994, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1994, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1994, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1994, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "torch.nn.attention.bias": [[1983, "module-torch.nn.attention.bias"]], "CausalBias": [[1983, "causalbias"]], "torch.xpu.synchronize": [[1956, "torch-xpu-synchronize"]], "TorchScript Language Reference": [[1964, "torchscript-language-reference"], [1963, "torchscript-language-reference"]], "Terminology": [[1964, "terminology"]], "Type System": [[1964, "id1"]], "TorchScript Types": [[1964, "torchscript-types"]], "Meta Types": [[1964, "meta-types"]], "Any Type": [[1964, "any-type"]], "Operators Supported for Any Type": [[1964, "operators-supported-for-any-type"]], "Design Notes": [[1964, "design-notes"], [2020, "design-notes"]], "Primitive Types": [[1964, "primitive-types"]], "Structural Types": [[1964, "structural-types"]], "Nominal Types": [[1964, "nominal-types"]], "Built-in Class": [[1964, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1964, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1964, "custom-class"]], "Enum Type": [[1964, "enum-type"]], "TorchScript Module Class": [[1964, "torchscript-module-class"]], "Module Instance Class": [[1964, "module-instance-class"]], "Type Annotation": [[1964, "type-annotation"]], "When to Annotate Types": [[1964, "when-to-annotate-types"]], "Annotate Function Signature": [[1964, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1964, "annotate-variables-and-data-attributes"]], "Local Variables": [[1964, "local-variables"]], "Instance Data Attributes": [[1964, "instance-data-attributes"]], "Type Annotation APIs": [[1964, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1964, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1964, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1964, "torchscript-type-system-definition"]], "Unsupported Typing Constructs": [[1964, "unsupported-typing-constructs"], [1963, "unsupported-typing-constructs"]], "Expressions": [[1964, "expressions"], [1963, "expressions"]], "Arithmetic Conversions": [[1964, "arithmetic-conversions"]], "Atoms": [[1964, "atoms"]], "Identifiers": [[1964, "identifiers"]], "Literals": [[1964, "literals"], [1963, "literals"]], "Parenthesized Forms": [[1964, "parenthesized-forms"]], "List and Dictionary Displays": [[1964, "list-and-dictionary-displays"]], "Primaries": [[1964, "primaries"]], "Attribute References": [[1964, "attribute-references"]], "Subscriptions": [[1964, "subscriptions"]], "Slicings": [[1964, "slicings"]], "Calls": [[1964, "calls"]], "Power Operator": [[1964, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1964, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1964, "binary-arithmetic-operations"]], "Shifting Operations": [[1964, "shifting-operations"]], "Binary Bitwise Operations": [[1964, "binary-bitwise-operations"]], "Comparisons": [[1964, "comparisons"], [2039, "comparisons"]], "Value Comparisons": [[1964, "value-comparisons"]], "Membership Test Operations": [[1964, "membership-test-operations"]], "Identity Comparisons": [[1964, "identity-comparisons"]], "Boolean Operations": [[1964, "boolean-operations"]], "Conditional Expressions": [[1964, "conditional-expressions"]], "Expression Lists": [[1964, "expression-lists"]], "Simple Statements": [[1964, "simple-statements"]], "Expression Statements": [[1964, "expression-statements"]], "Assignment Statements": [[1964, "assignment-statements"]], "Augmented Assignment Statements": [[1964, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1964, "annotated-assignment-statements"]], "The raise Statement": [[1964, "the-raise-statement"]], "The assert Statement": [[1964, "the-assert-statement"]], "The return Statement": [[1964, "the-return-statement"]], "The del Statement": [[1964, "the-del-statement"]], "The pass Statement": [[1964, "the-pass-statement"]], "The print Statement": [[1964, "the-print-statement"]], "The break Statement": [[1964, "the-break-statement"]], "The continue Statement:": [[1964, "the-continue-statement"]], "Compound Statements": [[1964, "compound-statements"]], "The if Statement": [[1964, "the-if-statement"]], "Basic if/else Statement": [[1964, "basic-if-else-statement"]], "Ternary if/else Statement": [[1964, "ternary-if-else-statement"]], "The while Statement": [[1964, "the-while-statement"]], "The for-in Statement": [[1964, "the-for-in-statement"]], "The with Statement": [[1964, "the-with-statement"]], "The tuple Statement": [[1964, "the-tuple-statement"]], "The getattr Statement": [[1964, "the-getattr-statement"]], "The hasattr Statement": [[1964, "the-hasattr-statement"]], "The zip Statement": [[1964, "the-zip-statement"]], "The enumerate Statement": [[1964, "the-enumerate-statement"]], "Python Values": [[1964, "python-values"]], "Resolution Rules": [[1964, "resolution-rules"]], "Python Built-in Functions Support": [[1964, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1964, "id5"]], "Python Built-in Values Support": [[1964, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1964, "id6"]], "torch.* APIs": [[1964, "torch-apis"]], "Remote Procedure Calls": [[1964, "remote-procedure-calls"]], "Asynchronous Execution": [[1964, "asynchronous-execution"]], "Type Annotations": [[1964, "type-annotations"]], "Meta Programming": [[1964, "meta-programming"]], "Type Refinement": [[1964, "type-refinement"]], "torch.utils.model_zoo": [[1974, "torch-utils-model-zoo"]], "torch.xpu.stream": [[1955, "torch-xpu-stream"]], "Named Tensors": [[1979, "named-tensors"]], "Creating named tensors": [[1979, "creating-named-tensors"]], "Named dimensions": [[1979, "named-dimensions"]], "Name propagation semantics": [[1979, "name-propagation-semantics"]], "match semantics": [[1979, "match-semantics"]], "Basic name inference rules": [[1979, "basic-name-inference-rules"]], "Explicit alignment by names": [[1979, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1979, "manipulating-dimensions"]], "Autograd support": [[1979, "autograd-support"]], "Currently supported operations and subsystems": [[1979, "currently-supported-operations-and-subsystems"]], "Operators": [[1979, "operators"]], "Subsystems": [[1979, "subsystems"]], "Named tensor API reference": [[1979, "named-tensor-api-reference"]], "A Simple Custom Module": [[1999, "a-simple-custom-module"]], "Modules as Building Blocks": [[1999, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1999, "neural-network-training-with-modules"]], "Module State": [[1999, "module-state"]], "Module Initialization": [[1999, "module-initialization"]], "Module Hooks": [[1999, "module-hooks"]], "Advanced Features": [[1999, "advanced-features"]], "Distributed Training": [[1999, "distributed-training"]], "Profiling Performance": [[1999, "profiling-performance"]], "Improving Performance with Quantization": [[1999, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1999, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1999, "parametrizations"]], "Transforming Modules with FX": [[1999, "transforming-modules-with-fx"]], "torch.linalg": [[1969, "torch-linalg"]], "Matrix Properties": [[1969, "matrix-properties"]], "Decompositions": [[1969, "decompositions"]], "Solvers": [[1969, "solvers"]], "Inverses": [[1969, "inverses"]], "Matrix Functions": [[1969, "matrix-functions"]], "Matrix Products": [[1969, "matrix-products"]], "Tensor Operations": [[1969, "tensor-operations"]], "Misc": [[1969, "misc"]], "Experimental Functions": [[1969, "experimental-functions"]], "Features for large-scale deployments": [[1998, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1998, "fleet-wide-operator-profiling"]], "API usage logging": [[1998, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1998, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1998, "build-environment-considerations"]], "Common extension points": [[1998, "common-extension-points"]], "TorchScript Builtins": [[1962, "torchscript-builtins"]], "Supported Tensor Methods": [[1962, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1962, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1962, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1962, "python-built-in-functions"]], "math Module": [[1962, "math-module"]], "torch.zeros": [[1957, "torch-zeros"]], "torch._logging": [[1970, "torch-logging"]], "Types": [[1963, "supported-type"], [2009, "types"]], "Default Types": [[1963, "default-types"]], "Optional Type Refinement": [[1963, "optional-type-refinement"]], "TorchScript Enums": [[1963, "id4"]], "Named Tuples": [[1963, "named-tuples"]], "Iterables": [[1963, "iterables"]], "List Construction": [[1963, "list-construction"]], "Tuple Construction": [[1963, "tuple-construction"]], "Dict Construction": [[1963, "dict-construction"]], "Arithmetic Operators": [[1963, "arithmetic-operators"]], "Comparison Operators": [[1963, "comparison-operators"]], "Logical Operators": [[1963, "logical-operators"]], "Subscripts and Slicing": [[1963, "subscripts-and-slicing"]], "Function Calls": [[1963, "function-calls"]], "Method Calls": [[1963, "method-calls"]], "Ternary Expressions": [[1963, "ternary-expressions"]], "Casts": [[1963, "casts"]], "Accessing Module Parameters": [[1963, "accessing-module-parameters"]], "Statements": [[1963, "statements"]], "Simple Assignments": [[1963, "simple-assignments"]], "Pattern Matching Assignments": [[1963, "pattern-matching-assignments"]], "Print Statements": [[1963, "print-statements"]], "If Statements": [[1963, "if-statements"]], "While Loops": [[1963, "while-loops"]], "For loops with range": [[1963, "for-loops-with-range"]], "For loops over tuples": [[1963, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1963, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1963, "break-and-continue"]], "Return": [[1963, "return"]], "Variable Resolution": [[1963, "variable-resolution"]], "Use of Python Values": [[1963, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[1963, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1963, "python-defined-constants"]], "Module Attributes": [[1963, "module-attributes"]], "Python Language Reference Coverage": [[1965, "python-language-reference-coverage"]], "torch.xpu.set_device": [[1953, "torch-xpu-set-device"]], "Broadcasting semantics": [[1988, "broadcasting-semantics"]], "General semantics": [[1988, "general-semantics"]], "In-place semantics": [[1988, "in-place-semantics"]], "Backwards compatibility": [[1988, "backwards-compatibility"]], "torch.xpu.set_stream": [[1954, "torch-xpu-set-stream"]], "Gradcheck mechanics": [[1996, "gradcheck-mechanics"]], "Notations and background information": [[1996, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1996, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1996, "real-to-real-functions"]], "Default real input numerical evaluation": [[1996, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1996, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1996, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1996, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1996, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1996, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1996, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1996, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1996, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1996, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1996, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1996, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1996, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1996, "gradgradcheck-implementation"]], "FSDP Notes": [[1995, "fsdp-notes"]], "FSDP Prefetch Nuances": [[1995, "fsdp-prefetch-nuances"]], "Communication payload size": [[1995, "communication-payload-size"]], "FSDP buffers sizes": [[1995, "fsdp-buffers-sizes"]], "Extending torch.func with autograd.Function": [[1993, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1993, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1993, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1993, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1993, "limitations-and-gotchas"]], "torch.vmap() Support": [[1993, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1993, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1993, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1993, "torch-func-jvp-support"]], "torch.xpu.is_available": [[1951, "torch-xpu-is-available"]], "Distributed Data Parallel": [[1991, "distributed-data-parallel"]], "Internal Design": [[1991, "internal-design"]], "Implementation": [[1991, "implementation"], [2022, "implementation"]], "ProcessGroup": [[1991, "processgroup"]], "TorchDynamo DDPOptimizer": [[1991, "id1"]], "torch.get_deterministic_debug_mode": [[1199, "torch-get-deterministic-debug-mode"]], "torch.func.linearize": [[1163, "torch-func-linearize"]], "torch.func.functional_call": [[1155, "torch-func-functional-call"]], "torch.from_file": [[1150, "torch-from-file"]], "torch.gather": [[1192, "torch-gather"]], "StrictMinMaxConstraint": [[1175, "strictminmaxconstraint"]], "torch.fx.experimental.symbolic_shapes.has_free_symbols": [[1184, "torch-fx-experimental-symbolic-shapes-has-free-symbols"]], "torch.func.jacfwd": [[1160, "torch-func-jacfwd"]], "ShapeEnv": [[1172, "shapeenv"]], "torch.fx.experimental.symbolic_shapes.constrain_range": [[1179, "torch-fx-experimental-symbolic-shapes-constrain-range"]], "StatefulSymbolicContext": [[1173, "statefulsymboliccontext"]], "torch.func.vjp": [[1166, "torch-func-vjp"]], "DimDynamic": [[1169, "dimdynamic"]], "torch.fx.experimental.symbolic_shapes.constrain_unify": [[1180, "torch-fx-experimental-symbolic-shapes-constrain-unify"]], "torch.func.hessian": [[1159, "torch-func-hessian"]], "torch.fx.experimental.symbolic_shapes.guard_size_oblivious": [[1183, "torch-fx-experimental-symbolic-shapes-guard-size-oblivious"]], "DimConstraints": [[1168, "dimconstraints"]], "torch.get_default_device": [[1197, "torch-get-default-device"]], "torch.func.jacrev": [[1161, "torch-func-jacrev"]], "torch.get_default_dtype": [[1198, "torch-get-default-dtype"]], "torch.func.vmap": [[1167, "torch-func-vmap"]], "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr": [[1178, "torch-fx-experimental-symbolic-shapes-canonicalize-bool-expr"]], "torch.fx.experimental.symbolic_shapes.parallel_or": [[1189, "torch-fx-experimental-symbolic-shapes-parallel-or"]], "torch.full_like": [[1154, "torch-full-like"]], "torch.func.stack_module_state": [[1165, "torch-func-stack-module-state"]], "SubclassSymbolicContext": [[1176, "subclasssymboliccontext"]], "torch.fx.experimental.symbolic_shapes.sym_eq": [[1191, "torch-fx-experimental-symbolic-shapes-sym-eq"]], "torch.fx.experimental.symbolic_shapes.is_concrete_int": [[1187, "torch-fx-experimental-symbolic-shapes-is-concrete-int"]], "SymbolicContext": [[1177, "symboliccontext"]], "torch.fx.experimental.symbolic_shapes.definitely_true": [[1182, "torch-fx-experimental-symbolic-shapes-definitely-true"]], "torch.frombuffer": [[1152, "torch-frombuffer"]], "torch.fx.experimental.symbolic_shapes.hint_int": [[1185, "torch-fx-experimental-symbolic-shapes-hint-int"]], "torch.ge": [[1194, "torch-ge"]], "torch.geqrf": [[1195, "torch-geqrf"]], "torch.func.jvp": [[1162, "torch-func-jvp"]], "torch.func.functionalize": [[1156, "torch-func-functionalize"]], "StatelessSymbolicContext": [[1174, "statelesssymboliccontext"]], "torch.fx.experimental.symbolic_shapes.is_concrete_bool": [[1186, "torch-fx-experimental-symbolic-shapes-is-concrete-bool"]], "torch.func.grad_and_value": [[1158, "torch-func-grad-and-value"]], "torch.func.grad": [[1157, "torch-func-grad"]], "torch.from_numpy": [[1151, "torch-from-numpy"]], "torch.fx.experimental.symbolic_shapes.definitely_false": [[1181, "torch-fx-experimental-symbolic-shapes-definitely-false"]], "torch.ger": [[1196, "torch-ger"]], "torch.fx.experimental.symbolic_shapes.statically_known_true": [[1190, "torch-fx-experimental-symbolic-shapes-statically-known-true"]], "torch.gcd": [[1193, "torch-gcd"]], "torch.fx.experimental.symbolic_shapes.parallel_and": [[1188, "torch-fx-experimental-symbolic-shapes-parallel-and"]], "torch.full": [[1153, "torch-full"]], "torch.func.replace_all_batch_norm_modules_": [[1164, "torch-func-replace-all-batch-norm-modules"]], "RelaxedUnspecConstraint": [[1171, "relaxedunspecconstraint"]], "EqualityConstraint": [[1170, "equalityconstraint"]], "torch.flip": [[1138, "torch-flip"]], "torch.from_dlpack": [[1149, "torch-from-dlpack"]], "torch.eye": [[1111, "torch-eye"]], "torch.floor_divide": [[1143, "torch-floor-divide"]], "torch.fft.rfft2": [[1133, "torch-fft-rfft2"]], "torch.fmod": [[1146, "torch-fmod"]], "torch.equal": [[1104, "torch-equal"]], "torch.fft.ihfft": [[1126, "torch-fft-ihfft"]], "torch.empty_like": [[1100, "torch-empty-like"]], "torch.floor": [[1142, "torch-floor"]], "torch.fft.ihfft2": [[1127, "torch-fft-ihfft2"]], "torch.fake_quantize_per_channel_affine": [[1112, "torch-fake-quantize-per-channel-affine"]], "torch.empty_strided": [[1101, "torch-empty-strided"]], "torch.fft.ifft2": [[1123, "torch-fft-ifft2"]], "torch.frac": [[1147, "torch-frac"]], "torch.fft.ifftshift": [[1125, "torch-fft-ifftshift"]], "torch.eq": [[1103, "torch-eq"]], "torch.flatten": [[1137, "torch-flatten"]], "torch.erfc": [[1106, "torch-erfc"]], "torch.fmin": [[1145, "torch-fmin"]], "torch.fft.hfft": [[1119, "torch-fft-hfft"]], "torch.fft.rfftfreq": [[1134, "torch-fft-rfftfreq"]], "torch.fft.fft2": [[1115, "torch-fft-fft2"]], "torch.fake_quantize_per_tensor_affine": [[1113, "torch-fake-quantize-per-tensor-affine"]], "torch.fix": [[1136, "torch-fix"]], "torch.fft.ifftn": [[1124, "torch-fft-ifftn"]], "torch.fft.irfft2": [[1130, "torch-fft-irfft2"]], "torch.fft.irfft": [[1129, "torch-fft-irfft"]], "torch.expm1": [[1110, "torch-expm1"]], "torch.fft.hfft2": [[1120, "torch-fft-hfft2"]], "torch.exp2": [[1109, "torch-exp2"]], "torch.fft.ihfftn": [[1128, "torch-fft-ihfftn"]], "torch.fft.rfft": [[1132, "torch-fft-rfft"]], "torch.exp": [[1108, "torch-exp"]], "torch.float_power": [[1141, "torch-float-power"]], "torch.fft.fft": [[1114, "torch-fft-fft"]], "torch.fliplr": [[1139, "torch-fliplr"]], "torch.flipud": [[1140, "torch-flipud"]], "torch.frexp": [[1148, "torch-frexp"]], "torch.erfinv": [[1107, "torch-erfinv"]], "torch.fft.irfftn": [[1131, "torch-fft-irfftn"]], "torch.fft.fftn": [[1117, "torch-fft-fftn"]], "torch.fft.ifft": [[1122, "torch-fft-ifft"]], "torch.fft.hfftn": [[1121, "torch-fft-hfftn"]], "torch.fft.rfftn": [[1135, "torch-fft-rfftn"]], "torch.fmax": [[1144, "torch-fmax"]], "torch.fft.fftshift": [[1118, "torch-fft-fftshift"]], "torch.erf": [[1105, "torch-erf"]], "torch.fft.fftfreq": [[1116, "torch-fft-fftfreq"]], "enable_grad": [[1102, "enable-grad"]], "torch.cuda.seed_all": [[1066, "torch-cuda-seed-all"]], "torch.cuda.temperature": [[1075, "torch-cuda-temperature"]], "torch.cuda.power_draw": [[1061, "torch-cuda-power-draw"]], "torch.diagonal_scatter": [[1089, "torch-diagonal-scatter"]], "torch.div": [[1093, "torch-div"]], "torch.dstack": [[1097, "torch-dstack"]], "torch.cumsum": [[1080, "torch-cumsum"]], "torch.cuda.nvtx.range_push": [[1060, "torch-cuda-nvtx-range-push"]], "torch.cuda.nvtx.mark": [[1058, "torch-cuda-nvtx-mark"]], "torch.digamma": [[1091, "torch-digamma"]], "torch.cuda.memory_summary": [[1056, "torch-cuda-memory-summary"]], "torch.cuda.memory_cached": [[1052, "torch-cuda-memory-cached"]], "torch.cuda.memory_stats": [[1055, "torch-cuda-memory-stats"]], "torch.cuda.reset_peak_memory_stats": [[1064, "torch-cuda-reset-peak-memory-stats"]], "torch.cuda.mem_get_info": [[1050, "torch-cuda-mem-get-info"]], "torch.cumulative_trapezoid": [[1081, "torch-cumulative-trapezoid"]], "torch.diag": [[1085, "torch-diag"]], "torch.cuda.utilization": [[1076, "torch-cuda-utilization"]], "torch.cumprod": [[1079, "torch-cumprod"]], "torch.deg2rad": [[1082, "torch-deg2rad"]], "torch.cuda.memory_allocated": [[1051, "torch-cuda-memory-allocated"]], "torch.cuda.memory_snapshot": [[1054, "torch-cuda-memory-snapshot"]], "torch.det": [[1084, "torch-det"]], "torch.divide": [[1094, "torch-divide"]], "torch.cuda.nvtx.range_pop": [[1059, "torch-cuda-nvtx-range-pop"]], "torch.dot": [[1095, "torch-dot"]], "torch.cuda.set_device": [[1067, "torch-cuda-set-device"]], "torch.einsum": [[1098, "torch-einsum"]], "torch.cummin": [[1078, "torch-cummin"]], "torch.cuda.set_sync_debug_mode": [[1072, "torch-cuda-set-sync-debug-mode"]], "torch.cuda.memory_reserved": [[1053, "torch-cuda-memory-reserved"]], "torch.cuda.set_rng_state_all": [[1070, "torch-cuda-set-rng-state-all"]], "torch.cuda.reset_max_memory_allocated": [[1062, "torch-cuda-reset-max-memory-allocated"]], "torch.dequantize": [[1083, "torch-dequantize"]], "torch.diagflat": [[1087, "torch-diagflat"]], "torch.cuda.set_stream": [[1071, "torch-cuda-set-stream"]], "torch.dsplit": [[1096, "torch-dsplit"]], "torch.cuda.set_per_process_memory_fraction": [[1068, "torch-cuda-set-per-process-memory-fraction"]], "torch.diff": [[1090, "torch-diff"]], "torch.cuda.seed": [[1065, "torch-cuda-seed"]], "torch.empty": [[1099, "torch-empty"]], "torch.cuda.memory_usage": [[1057, "torch-cuda-memory-usage"]], "torch.cuda.set_rng_state": [[1069, "torch-cuda-set-rng-state"]], "torch.diag_embed": [[1086, "torch-diag-embed"]], "torch.cummax": [[1077, "torch-cummax"]], "torch.dist": [[1092, "torch-dist"]], "torch.cuda.synchronize": [[1074, "torch-cuda-synchronize"]], "torch.diagonal": [[1088, "torch-diagonal"]], "torch.cuda.reset_max_memory_cached": [[1063, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.stream": [[1073, "torch-cuda-stream"]], "torch.cuda.manual_seed": [[1045, "torch-cuda-manual-seed"]], "torch.cuda.get_arch_list": [[1025, "torch-cuda-get-arch-list"]], "torch.cuda.get_sync_debug_mode": [[1032, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.default_stream": [[1019, "torch-cuda-default-stream"]], "torch.cuda.get_device_capability": [[1026, "torch-cuda-get-device-capability"]], "torch.cuda.graph_pool_handle": [[1034, "torch-cuda-graph-pool-handle"]], "torch.cuda.max_memory_reserved": [[1049, "torch-cuda-max-memory-reserved"]], "torch.cuda.device_count": [[1021, "torch-cuda-device-count"]], "torch.cuda.current_device": [[1017, "torch-cuda-current-device"]], "torch.cuda.clock_rate": [[1010, "torch-cuda-clock-rate"]], "torch.cuda.comm.scatter": [[1015, "torch-cuda-comm-scatter"]], "torch.cuda.get_gencode_flags": [[1029, "torch-cuda-get-gencode-flags"]], "torch.cuda.is_available": [[1038, "torch-cuda-is-available"]], "torch.cuda.is_current_stream_capturing": [[1039, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.get_device_properties": [[1028, "torch-cuda-get-device-properties"]], "torch.cuda.current_stream": [[1018, "torch-cuda-current-stream"]], "ExternalStream": [[1002, "externalstream"]], "torch.cuda.comm.gather": [[1013, "torch-cuda-comm-gather"]], "torch.cuda.comm.broadcast": [[1011, "torch-cuda-comm-broadcast"]], "torch.cuda.get_rng_state": [[1030, "torch-cuda-get-rng-state"]], "torch.cuda.make_graphed_callables": [[1044, "torch-cuda-make-graphed-callables"]], "torch.cuda.can_device_access_peer": [[1008, "torch-cuda-can-device-access-peer"]], "torch.cuda.is_initialized": [[1040, "torch-cuda-is-initialized"]], "torch.cuda.ipc_collect": [[1037, "torch-cuda-ipc-collect"]], "graph": [[1033, "graph"]], "torch.cuda.max_memory_cached": [[1048, "torch-cuda-max-memory-cached"]], "torch.cuda.comm.broadcast_coalesced": [[1012, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.list_gpu_processes": [[1043, "torch-cuda-list-gpu-processes"]], "torch.cuda.caching_allocator_alloc": [[1006, "torch-cuda-caching-allocator-alloc"]], "torch.cuda.caching_allocator_delete": [[1007, "torch-cuda-caching-allocator-delete"]], "torch.cuda.get_allocator_backend": [[1024, "torch-cuda-get-allocator-backend"]], "torch.cuda.initial_seed": [[1036, "torch-cuda-initial-seed"]], "torch.cuda.current_blas_handle": [[1016, "torch-cuda-current-blas-handle"]], "torch.cuda.get_device_name": [[1027, "torch-cuda-get-device-name"]], "torch.cuda.max_memory_allocated": [[1047, "torch-cuda-max-memory-allocated"]], "torch.cuda.get_rng_state_all": [[1031, "torch-cuda-get-rng-state-all"]], "torch.cuda.comm.reduce_add": [[1014, "torch-cuda-comm-reduce-add"]], "torch.cuda.OutOfMemoryError": [[1003, "torch-cuda-outofmemoryerror"]], "torch.cuda.change_current_allocator": [[1009, "torch-cuda-change-current-allocator"]], "torch.cuda.manual_seed_all": [[1046, "torch-cuda-manual-seed-all"]], "CUDAPluggableAllocator": [[1000, "cudapluggableallocator"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1042, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.init": [[1035, "torch-cuda-init"]], "torch.cuda.jiterator._create_jit_fn": [[1041, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.empty_cache": [[1023, "torch-cuda-empty-cache"]], "torch.cross": [[998, "torch-cross"]], "torch.compiler.allow_in_graph": [[970, "torch-compiler-allow-in-graph"], [2045, "torch-compiler-allow-in-graph"]], "torch.compiler.assume_constant_result": [[971, "torch-compiler-assume-constant-result"]], "torch.compiler.compile": [[972, "torch-compiler-compile"]], "torch.compiled_with_cxx11_abi": [[969, "torch-compiled-with-cxx11-abi"]], "torch.cos": [[985, "torch-cos"]], "torch.cholesky_solve": [[961, "torch-cholesky-solve"]], "torch.cpu.stream": [[996, "torch-cpu-stream"]], "torch.cpu.current_stream": [[992, "torch-cpu-current-stream"]], "torch.broadcast_tensors": [[950, "torch-broadcast-tensors"]], "torch.cdist": [[956, "torch-cdist"]], "torch.cov": [[988, "torch-cov"]], "torch.bucketize": [[952, "torch-bucketize"]], "CUDAGraph": [[999, "cudagraph"]], "torch.copysign": [[983, "torch-copysign"]], "torch.compiler.reset": [[976, "torch-compiler-reset"]], "torch.concat": [[978, "torch-concat"]], "torch.count_nonzero": [[987, "torch-count-nonzero"]], "torch.conj_physical": [[982, "torch-conj-physical"]], "torch.compiler.list_backends": [[975, "torch-compiler-list-backends"]], "torch.cpu.set_device": [[995, "torch-cpu-set-device"]], "torch.cat": [[955, "torch-cat"]], "torch.cosh": [[986, "torch-cosh"]], "torch.ceil": [[957, "torch-ceil"]], "torch.compiler.cudagraph_mark_step_begin": [[973, "torch-compiler-cudagraph-mark-step-begin"]], "torch.conj": [[981, "torch-conj"]], "torch.cholesky": [[959, "torch-cholesky"]], "torch.complex": [[977, "torch-complex"]], "torch.cholesky_inverse": [[960, "torch-cholesky-inverse"]], "torch.cpu.is_available": [[994, "torch-cpu-is-available"]], "torch.cpu.device_count": [[993, "torch-cpu-device-count"]], "torch.column_stack": [[966, "torch-column-stack"]], "torch.compile": [[968, "torch-compile"]], "torch.can_cast": [[953, "torch-can-cast"]], "torch.clone": [[965, "torch-clone"]], "torch.broadcast_to": [[951, "torch-broadcast-to"]], "torch.chunk": [[962, "torch-chunk"]], "torch.compiler.disable": [[974, "torch-compiler-disable"], [2045, "torch-compiler-disable"]], "torch.concatenate": [[979, "torch-concatenate"]], "torch.cpu.current_device": [[991, "torch-cpu-current-device"]], "torch.cpu.synchronize": [[997, "torch-cpu-synchronize"]], "torch.corrcoef": [[984, "torch-corrcoef"]], "torch.cartesian_prod": [[954, "torch-cartesian-prod"]], "torch.combinations": [[967, "torch-combinations"]], "torch.clamp": [[963, "torch-clamp"]], "torch.chain_matmul": [[958, "torch-chain-matmul"]], "torch.clip": [[964, "torch-clip"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[929, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.bitwise_left_shift": [[941, "torch-bitwise-left-shift"]], "torch.autograd.profiler.profile.key_averages": [[928, "torch-autograd-profiler-profile-key-averages"]], "torch.block_diag": [[947, "torch-block-diag"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[900, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.autograd.graph.increment_version": [[922, "torch-autograd-graph-increment-version"]], "Interval": [[932, "interval"]], "torch.autograd.functional.jvp": [[907, "torch-autograd-functional-jvp"]], "NestedIOFunction": [[902, "nestediofunction"]], "inference_mode": [[911, "inference-mode"]], "torch.autograd.gradcheck.GradcheckError": [[914, "torch-autograd-gradcheck-gradcheckerror"]], "torch.autograd.functional.hessian": [[904, "torch-autograd-functional-hessian"]], "torch.autograd.graph.Node.next_functions": [[919, "torch-autograd-graph-node-next-functions"]], "torch.autograd.profiler.profile.total_average": [[930, "torch-autograd-profiler-profile-total-average"]], "MemRecordsAcc": [[934, "memrecordsacc"]], "StringTable": [[935, "stringtable"]], "set_grad_enabled": [[912, "set-grad-enabled"]], "torch.autograd.graph.Node.name": [[918, "torch-autograd-graph-node-name"]], "torch.autograd.graph.Node.register_prehook": [[921, "torch-autograd-graph-node-register-prehook"]], "torch.autograd.functional.vhp": [[908, "torch-autograd-functional-vhp"]], "torch.autograd.profiler.load_nvprof": [[925, "torch-autograd-profiler-load-nvprof"]], "torch.bitwise_right_shift": [[944, "torch-bitwise-right-shift"]], "torch.broadcast_shapes": [[949, "torch-broadcast-shapes"]], "torch.bmm": [[948, "torch-bmm"]], "torch.autograd.gradcheck.gradgradcheck": [[916, "torch-autograd-gradcheck-gradgradcheck"]], "torch.autograd.profiler.parse_nvprof_trace": [[926, "torch-autograd-profiler-parse-nvprof-trace"]], "torch.bitwise_xor": [[945, "torch-bitwise-xor"]], "torch.bitwise_or": [[943, "torch-bitwise-or"]], "torch.autograd.functional.jacobian": [[906, "torch-autograd-functional-jacobian"]], "torch.bitwise_not": [[942, "torch-bitwise-not"]], "torch.autograd.gradcheck.gradcheck": [[915, "torch-autograd-gradcheck-gradcheck"]], "set_multithreading_enabled": [[913, "set-multithreading-enabled"]], "record_function": [[931, "record-function"]], "Kernel": [[933, "kernel"]], "torch.bitwise_and": [[940, "torch-bitwise-and"]], "torch.autograd.functional.hvp": [[905, "torch-autograd-functional-hvp"]], "torch.blackman_window": [[946, "torch-blackman-window"]], "torch.autograd.grad": [[910, "torch-autograd-grad"]], "torch.bincount": [[939, "torch-bincount"]], "torch.autograd.functional.vjp": [[909, "torch-autograd-functional-vjp"]], "torch.bernoulli": [[938, "torch-bernoulli"]], "torch.autograd.graph.Node.register_hook": [[920, "torch-autograd-graph-node-register-hook"]], "torch.bartlett_window": [[937, "torch-bartlett-window"]], "InplaceFunction": [[901, "inplacefunction"]], "KinetoStepTracker": [[924, "kinetosteptracker"]], "torch.autograd.function.once_differentiable": [[903, "torch-autograd-function-once-differentiable"]], "torch.baddbmm": [[936, "torch-baddbmm"]], "torch.autograd.graph.Node.metadata": [[917, "torch-autograd-graph-node-metadata"]], "torch.autograd.profiler.profile.export_chrome_trace": [[927, "torch-autograd-profiler-profile-export-chrome-trace"]], "EnforceUnique": [[923, "enforceunique"]], "quantize_qat": [[859, "quantize-qat"]], "torch.argwhere": [[873, "torch-argwhere"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[897, "torch-autograd-function-functionctx-mark-dirty"]], "prepare_qat_fx": [[858, "prepare-qat-fx"]], "torch.asin": [[877, "torch-asin"]], "torch.argmax": [[870, "torch-argmax"]], "torch.asarray": [[876, "torch-asarray"]], "torch.argmin": [[871, "torch-argmin"]], "torch.arctan": [[866, "torch-arctan"]], "convert_fx": [[855, "convert-fx"]], "torch.atan2": [[880, "torch-atan2"]], "UnpackedDualTensor": [[890, "unpackeddualtensor"]], "torch.autograd.forward_ad.enter_dual_level": [[892, "torch-autograd-forward-ad-enter-dual-level"]], "torch.arccos": [[862, "torch-arccos"]], "torch.atleast_2d": [[883, "torch-atleast-2d"]], "torch.arange": [[861, "torch-arange"]], "torch.autograd.forward_ad.exit_dual_level": [[893, "torch-autograd-forward-ad-exit-dual-level"]], "BackwardCFunction": [[896, "backwardcfunction"]], "get_default_qconfig_mapping": [[852, "get-default-qconfig-mapping"]], "torch.arccosh": [[863, "torch-arccosh"]], "torch.autograd.Function.backward": [[885, "torch-autograd-function-backward"]], "torch.as_strided": [[874, "torch-as-strided"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[898, "torch-autograd-function-functionctx-mark-non-differentiable"]], "prepare_fx": [[857, "prepare-fx"]], "torch.atan": [[879, "torch-atan"]], "torch.are_deterministic_algorithms_enabled": [[869, "torch-are-deterministic-algorithms-enabled"]], "torch.arctan2": [[867, "torch-arctan2"]], "torch.atleast_1d": [[882, "torch-atleast-1d"]], "torch.asinh": [[878, "torch-asinh"]], "torch.atanh": [[881, "torch-atanh"]], "torch.autograd.backward": [[889, "torch-autograd-backward"]], "get_default_qat_qconfig_mapping": [[851, "get-default-qat-qconfig-mapping"]], "torch.autograd.Function.jvp": [[887, "torch-autograd-function-jvp"]], "dual_level": [[891, "dual-level"]], "quantize_dynamic": [[854, "quantize-dynamic"]], "swap_module": [[860, "swap-module"]], "torch.autograd.Function.vmap": [[888, "torch-autograd-function-vmap"]], "torch.arcsin": [[864, "torch-arcsin"]], "torch.as_tensor": [[875, "torch-as-tensor"]], "torch.argsort": [[872, "torch-argsort"]], "QConfigMapping": [[850, "qconfigmapping"]], "torch.autograd.forward_ad.unpack_dual": [[895, "torch-autograd-forward-ad-unpack-dual"]], "torch.arcsinh": [[865, "torch-arcsinh"]], "fuse_fx": [[856, "fuse-fx"]], "torch.arctanh": [[868, "torch-arctanh"]], "torch.autograd.Function.forward": [[886, "torch-autograd-function-forward"]], "torch.autograd.forward_ad.make_dual": [[894, "torch-autograd-forward-ad-make-dual"]], "quantize": [[853, "quantize"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[899, "torch-autograd-function-functionctx-save-for-backward"]], "torch.atleast_3d": [[884, "torch-atleast-3d"]], "ObserverBase": [[820, "observerbase"]], "default_per_channel_weight_fake_quant": [[804, "default-per-channel-weight-fake-quant"]], "default_per_channel_qconfig": [[841, "default-per-channel-qconfig"]], "PerChannelMinMaxObserver": [[821, "perchannelminmaxobserver"]], "disable_observer": [[807, "disable-observer"]], "default_weight_only_qconfig": [[845, "default-weight-only-qconfig"]], "ConvertCustomConfig": [[811, "convertcustomconfig"]], "PrepareCustomConfig": [[813, "preparecustomconfig"]], "disable_fake_quant": [[806, "disable-fake-quant"]], "default_qconfig": [[844, "default-qconfig"]], "float_qparams_weight_only_qconfig": [[848, "float-qparams-weight-only-qconfig"]], "QConfig": [[837, "qconfig"], [2015, "qconfig"]], "prepare_qat": [[835, "prepare-qat"]], "default_dynamic_quant_observer": [[825, "default-dynamic-quant-observer"]], "load_observer_state_dict": [[833, "load-observer-state-dict"]], "float16_static_qconfig": [[847, "float16-static-qconfig"]], "default_debug_qconfig": [[839, "default-debug-qconfig"]], "propagate_qconfig": [[836, "propagate-qconfig"]], "get_observer_state_dict": [[832, "get-observer-state-dict"]], "default_per_channel_weight_observer": [[829, "default-per-channel-weight-observer"]], "prepare": [[834, "prepare"]], "fuse_modules": [[810, "fuse-modules"]], "MovingAverageMinMaxObserver": [[817, "movingaverageminmaxobserver"]], "default_fused_per_channel_wt_fake_quant": [[801, "default-fused-per-channel-wt-fake-quant"]], "default_debug_observer": [[824, "default-debug-observer"]], "FuseCustomConfig": [[812, "fusecustomconfig"]], "RecordingObserver": [[823, "recordingobserver"]], "HistogramObserver": [[815, "histogramobserver"]], "default_float_qparams_observer": [[826, "default-float-qparams-observer"]], "MinMaxObserver": [[816, "minmaxobserver"]], "StandaloneModuleConfigEntry": [[814, "standalonemoduleconfigentry"]], "default_fused_wt_fake_quant": [[802, "default-fused-wt-fake-quant"]], "default_weight_observer": [[831, "default-weight-observer"]], "default_histogram_fake_quant": [[803, "default-histogram-fake-quant"]], "default_qat_qconfig": [[842, "default-qat-qconfig"]], "default_histogram_observer": [[827, "default-histogram-observer"]], "MovingAveragePerChannelMinMaxObserver": [[818, "movingaverageperchannelminmaxobserver"]], "enable_fake_quant": [[808, "enable-fake-quant"]], "default_placeholder_observer": [[830, "default-placeholder-observer"]], "default_weight_fake_quant": [[805, "default-weight-fake-quant"]], "default_fused_act_fake_quant": [[800, "default-fused-act-fake-quant"]], "PlaceholderObserver": [[822, "placeholderobserver"]], "NoopObserver": [[819, "noopobserver"]], "per_channel_dynamic_qconfig": [[849, "per-channel-dynamic-qconfig"]], "default_qat_qconfig_v2": [[843, "default-qat-qconfig-v2"]], "float16_dynamic_qconfig": [[846, "float16-dynamic-qconfig"]], "enable_observer": [[809, "enable-observer"]], "default_dynamic_qconfig": [[840, "default-dynamic-qconfig"]], "default_activation_only_qconfig": [[838, "default-activation-only-qconfig"]], "default_observer": [[828, "default-observer"]], "Probability distributions - torch.distributions": [[31, "module-torch.distributions"]], "Score function": [[31, "score-function"]], "Pathwise derivative": [[31, "pathwise-derivative"]], "Distribution": [[31, "distribution"]], "ExponentialFamily": [[31, "exponentialfamily"]], "Bernoulli": [[31, "bernoulli"]], "Beta": [[31, "beta"]], "Binomial": [[31, "binomial"]], "Categorical": [[31, "categorical"]], "Cauchy": [[31, "cauchy"]], "Chi2": [[31, "chi2"]], "ContinuousBernoulli": [[31, "continuousbernoulli"]], "Dirichlet": [[31, "dirichlet"]], "Exponential": [[31, "exponential"]], "FisherSnedecor": [[31, "fishersnedecor"]], "Gamma": [[31, "gamma"]], "Geometric": [[31, "geometric"]], "Gumbel": [[31, "gumbel"]], "HalfCauchy": [[31, "halfcauchy"]], "HalfNormal": [[31, "halfnormal"]], "Independent": [[31, "independent"]], "InverseGamma": [[31, "inversegamma"]], "Kumaraswamy": [[31, "kumaraswamy"]], "LKJCholesky": [[31, "lkjcholesky"]], "Laplace": [[31, "laplace"]], "LogNormal": [[31, "lognormal"]], "LowRankMultivariateNormal": [[31, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[31, "mixturesamefamily"]], "Multinomial": [[31, "multinomial"]], "MultivariateNormal": [[31, "multivariatenormal"]], "NegativeBinomial": [[31, "negativebinomial"]], "Normal": [[31, "normal"]], "OneHotCategorical": [[31, "onehotcategorical"]], "Pareto": [[31, "pareto"]], "Poisson": [[31, "poisson"]], "RelaxedBernoulli": [[31, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[31, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[31, "relaxedonehotcategorical"]], "StudentT": [[31, "studentt"]], "TransformedDistribution": [[31, "transformeddistribution"]], "Uniform": [[31, "uniform"]], "VonMises": [[31, "vonmises"]], "Weibull": [[31, "weibull"]], "Wishart": [[31, "wishart"]], "KL Divergence": [[31, "module-torch.distributions.kl"]], "Transforms": [[31, "module-torch.distributions.transforms"]], "Constraint Registry": [[31, "module-torch.distributions.constraint_registry"]], "torch.fft": [[48, "torch-fft"]], "Fast Fourier Transforms": [[48, "fast-fourier-transforms"]], "Helper Functions": [[48, "helper-functions"]], "torch.cpu": [[16, "module-torch.cpu"]], "Streams and events": [[16, "streams-and-events"], [17, "streams-and-events"]], "Torch Distributed Elastic": [[28, "torch-distributed-elastic"]], "Get Started": [[28, "get-started"]], "Usage": [[28, null], [18, "usage"], [43, "usage"]], "Documentation": [[28, "documentation"]], "API": [[28, null]], "Advanced": [[28, null]], "Plugins": [[28, null]], "Distributed Checkpoint - torch.distributed.checkpoint": [[27, "distributed-checkpoint-torch-distributed-checkpoint"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[30, "tensor-parallelism-torch-distributed-tensor-parallel"]], "Control Flow - Cond": [[12, "control-flow-cond"]], "Examples": [[12, "examples"], [37, "examples"], [2040, "examples"]], "Invariants of torch.ops.higher_order.cond": [[12, "invariants-of-torch-ops-higher-order-cond"]], "Complex Numbers": [[11, "complex-numbers"]], "Creating Complex Tensors": [[11, "creating-complex-tensors"]], "Transition from the old representation": [[11, "transition-from-the-old-representation"]], "Accessing real and imag": [[11, "accessing-real-and-imag"]], "Angle and abs": [[11, "angle-and-abs"]], "Linear Algebra": [[11, "linear-algebra"]], "Serialization": [[11, "serialization"], [46, "serialization"], [2032, "serialization"]], "Autograd": [[11, "autograd"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"], [2047, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Core Maintainers": [[9, "core-maintainers"], [10, "core-maintainers"]], "Lead Core Maintainer (BDFL)": [[9, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "torch.utils.deterministic": [[24, "module-torch.utils.deterministic"]], "Metrics": [[39, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[39, "metric-handlers"]], "Methods": [[39, "methods"]], "FullyShardedDataParallel": [[49, "module-torch.distributed.fsdp"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "Expiration Timers": [[44, "module-torch.distributed.elastic.timer"]], "Client Methods": [[44, "client-methods"]], "Server/Client Implementations": [[44, "server-client-implementations"]], "Writing a custom timer server/client": [[44, "writing-a-custom-timer-server-client"]], "Train script": [[45, "train-script"]], "Multiprocessing": [[40, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[40, "starting-multiple-workers"]], "Process Context": [[40, "process-context"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "Generic Join Context Manager": [[26, "generic-join-context-manager"]], "CUDA Stream Sanitizer": [[18, "cuda-stream-sanitizer"]], "torch.export IR Specification": [[47, "torch-export-ir-specification"]], "Assumptions": [[47, "assumptions"], [2022, "assumptions"]], "What is Export IR": [[47, "what-is-export-ir"]], "ExportedProgram": [[47, "exportedprogram"]], "Graph": [[47, "graph"]], "Node": [[47, "node"]], "call_function": [[47, "call-function"]], "Metadata": [[47, "metadata"]], "placeholder": [[47, "placeholder"]], "output": [[47, "output"]], "get_attr": [[47, "get-attr"]], "SymInt": [[47, "symint"]], "FakeTensor": [[47, "faketensor"]], "Pytree-able Types": [[47, "pytree-able-types"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Getting Started": [[7, "getting-started"], [2046, "getting-started"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [2012, "tutorials"], [2020, "tutorials"], [2013, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "Quickstart": [[41, "quickstart"]], "Events": [[36, "module-torch.distributed.elastic.events"]], "API Methods": [[36, "api-methods"]], "Event Objects": [[36, "event-objects"]], "torch.utils.cpp_extension": [[14, "torch-utils-cpp-extension"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "AArch64 CPU": [[10, "aarch64-cpu"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "torch::deploy has been moved to pytorch/multipy": [[23, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "torch.utils.data": [[21, "module-torch.utils.data"]], "Dataset Types": [[21, "dataset-types"]], "Map-style datasets": [[21, "map-style-datasets"]], "Iterable-style datasets": [[21, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[21, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[21, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[21, "automatic-batching-default"]], "Disable automatic batching": [[21, "disable-automatic-batching"]], "Working with collate_fn": [[21, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[21, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[21, "single-process-data-loading-default"]], "Multi-process data loading": [[21, "multi-process-data-loading"]], "Platform-specific behaviors": [[21, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[21, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[21, "memory-pinning"]], "Distributed communication package - torch.distributed": [[25, "distributed-communication-package-torch-distributed"]], "Backends": [[25, "backends"], [2020, "backends"]], "Backends that come with PyTorch": [[25, "backends-that-come-with-pytorch"]], "Which backend to use?": [[25, "which-backend-to-use"]], "Common environment variables": [[25, "common-environment-variables"]], "Choosing the network interface to use": [[25, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[25, "other-nccl-environment-variables"]], "Basics": [[25, "basics"], [2020, "basics"]], "Initialization": [[25, "initialization"]], "TCP initialization": [[25, "tcp-initialization"]], "Shared file-system initialization": [[25, "shared-file-system-initialization"]], "Environment variable initialization": [[25, "environment-variable-initialization"]], "Post-Initialization": [[25, "post-initialization"]], "Distributed Key-Value Store": [[25, "distributed-key-value-store"]], "Groups": [[25, "groups"]], "DeviceMesh": [[25, "devicemesh"]], "Point-to-point communication": [[25, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[25, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[25, "collective-functions"]], "Profiling Collective Communication": [[25, "profiling-collective-communication"]], "Multi-GPU collective functions": [[25, "multi-gpu-collective-functions"]], "Third-party backends": [[25, "third-party-backends"]], "Launch utility": [[25, "launch-utility"]], "Spawn utility": [[25, "spawn-utility"]], "Debugging torch.distributed applications": [[25, "debugging-torch-distributed-applications"]], "Python Breakpoint": [[25, "python-breakpoint"]], "Monitored Barrier": [[25, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[25, "torch-distributed-debug"]], "Logging": [[25, "logging"]], "torch.export": [[46, "torch-export"]], "Existing frameworks": [[46, "existing-frameworks"]], "Exporting a PyTorch Model": [[46, "exporting-a-pytorch-model"]], "An Example": [[46, "an-example"]], "Expressing Dynamism": [[46, "expressing-dynamism"]], "Specialization": [[46, "specialization"]], "Input shapes": [[46, "input-shapes"]], "Non-tensor inputs": [[46, "non-tensor-inputs"]], "Limitations of torch.export": [[46, "limitations-of-torch-export"]], "Data/Shape-Dependent Control Flow": [[46, "data-shape-dependent-control-flow"]], "Missing Meta Kernels for Operators": [[46, "missing-meta-kernels-for-operators"]], "Additional Links for Export Users": [[46, null]], "Deep Dive for PyTorch Developers": [[46, null], [2035, null]], "DDP Communication Hooks": [[22, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[22, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[22, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[22, "default-communication-hooks"]], "PowerSGD Communication Hook": [[22, "powersgd-communication-hook"]], "PowerSGD State": [[22, "powersgd-state"]], "PowerSGD Hooks": [[22, "powersgd-hooks"]], "Debugging Communication Hooks": [[22, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[22, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[22, "acknowledgements"], [2013, "acknowledgements"]], "Elastic Agent": [[33, "module-torch.distributed.elastic.agent"]], "Server": [[33, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[33, "concepts"]], "Implementations": [[33, "implementations"], [42, "implementations"]], "Extending the Agent": [[33, "extending-the-agent"]], "Watchdog in the Agent": [[33, "watchdog-in-the-agent"]], "C++": [[15, "c"]], "TorchScript C++ API": [[15, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[15, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[15, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[15, "authoring-models-in-c"]], "Packaging for C++": [[15, "packaging-for-c"]], "Distributed Optimizers": [[29, "distributed-optimizers"]], "TorchElastic Kubernetes": [[38, "torchelastic-kubernetes"]], "Rendezvous": [[42, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[42, "registry"]], "Handler": [[42, "handler"]], "Exceptions": [[42, "exceptions"]], "Dynamic Rendezvous": [[42, "dynamic-rendezvous"]], "C10d Backend": [[42, "c10d-backend"]], "Etcd Backend": [[42, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[42, "etcd-rendezvous-legacy"]], "Etcd Store": [[42, "etcd-store"]], "Etcd Server": [[42, "etcd-server"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Custom Function utilities": [[1, "custom-function-utilities"]], "Numerical gradient checking": [[1, "module-torch.autograd.gradcheck"]], "Profiler": [[1, "profiler"]], "Debugging and anomaly detection": [[1, "debugging-and-anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.cuda": [[17, "module-torch.cuda"]], "Random Number Generator": [[17, "random-number-generator"]], "Communication collectives": [[17, "communication-collectives"]], "Graphs (beta)": [[17, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[17, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[17, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[17, "stream-sanitizer-prototype"]], "torch.utils.dlpack": [[32, "torch-utils-dlpack"]], "torchrun (Elastic Launch)": [[43, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[43, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Single-node multi-worker": [[43, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[43, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[43, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[43, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[43, "note-on-rendezvous-backend"]], "Definitions": [[43, "definitions"]], "Environment Variables": [[43, "environment-variables"]], "Deployment": [[43, "deployment"]], "Failure Modes": [[43, "failure-modes"]], "Membership Changes": [[43, "membership-changes"]], "Important Notices": [[43, "important-notices"]], "torch.__config__": [[13, "module-torch.__config__"]], "Error Propagation": [[35, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[35, "methods-and-classes"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mha": [[2, "module-torch.backends.mha"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.nnpack": [[2, "module-torch.backends.nnpack"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "Customization": [[34, "customization"]], "Launcher": [[34, "launcher"]], "Rendezvous Handler": [[34, "rendezvous-handler"]], "Metric Handler": [[34, "metric-handler"]], "Events Handler": [[34, "events-handler"]], "leaky_relu": [[776, "leaky-relu"]], "BackendPatternConfig": [[789, "backendpatternconfig"]], "avg_pool3d": [[765, "avg-pool3d"]], "elu": [[771, "elu"]], "BackendConfig": [[788, "backendconfig"]], "FakeQuantize": [[795, "fakequantize"]], "add_quant_dequant": [[787, "add-quant-dequant"]], "linear": [[777, "linear"]], "adaptive_avg_pool2d": [[762, "adaptive-avg-pool2d"]], "upsample_nearest": [[783, "upsample-nearest"]], "QFunctional": [[753, "qfunctional"]], "conv2d": [[769, "conv2d"]], "DTypeWithConstraints": [[791, "dtypewithconstraints"]], "conv3d": [[770, "conv3d"]], "max_pool1d": [[778, "max-pool1d"]], "threshold": [[780, "threshold"]], "convert": [[793, "convert"]], "upsample_bilinear": [[782, "upsample-bilinear"]], "FixedQParamsFakeQuantize": [[797, "fixedqparamsfakequantize"]], "conv1d": [[768, "conv1d"]], "DeQuantStub": [[784, "dequantstub"]], "default_eval_fn": [[794, "default-eval-fn"]], "max_pool2d": [[779, "max-pool2d"]], "ObservationType": [[792, "observationtype"]], "adaptive_avg_pool3d": [[763, "adaptive-avg-pool3d"]], "hardtanh": [[774, "hardtanh"]], "celu": [[766, "celu"]], "interpolate": [[775, "interpolate"]], "FakeQuantizeBase": [[796, "fakequantizebase"]], "DTypeConfig": [[790, "dtypeconfig"]], "clamp": [[767, "clamp"]], "default_fake_quant": [[799, "default-fake-quant"]], "QuantWrapper": [[786, "quantwrapper"]], "QuantStub": [[785, "quantstub"]], "upsample": [[781, "upsample"]], "hardsigmoid": [[772, "hardsigmoid"]], "FusedMovingAvgObsFakeQuantize": [[798, "fusedmovingavgobsfakequantize"]], "avg_pool2d": [[764, "avg-pool2d"]], "hardswish": [[773, "hardswish"]], "ConvBnReLU3d": [[713, "convbnrelu3d"], [703, "convbnrelu3d"]], "ConvReLU1d": [[704, "convrelu1d"], [721, "convrelu1d"]], "LinearReLU": [[724, "linearrelu"], [707, "linearrelu"], [716, "linearrelu"], [725, "linearrelu"]], "freeze_bn_stats": [[717, "freeze-bn-stats"]], "ConvBn3d": [[710, "convbn3d"], [700, "convbn3d"]], "ConvBnReLU2d": [[712, "convbnrelu2d"], [702, "convbnrelu2d"]], "ConvBnReLU1d": [[701, "convbnrelu1d"], [711, "convbnrelu1d"]], "ConvReLU3d": [[723, "convrelu3d"], [715, "convrelu3d"], [706, "convrelu3d"]], "FXFloatFunctional": [[743, "fxfloatfunctional"]], "ConvReLU2d": [[705, "convrelu2d"], [714, "convrelu2d"], [722, "convrelu2d"]], "BNReLU2d": [[719, "bnrelu2d"], [696, "bnrelu2d"]], "BNReLU3d": [[720, "bnrelu3d"], [697, "bnrelu3d"]], "ConvBn2d": [[709, "convbn2d"], [699, "convbn2d"]], "ConvBn1d": [[708, "convbn1d"], [698, "convbn1d"]], "update_bn_stats": [[718, "update-bn-stats"]], "FloatFunctional": [[744, "floatfunctional"]], "Best Practices for Backends": [[2038, "best-practices-for-backends"]], "x86 CPU": [[2038, "x86-cpu"]], "Using a pretrained model": [[2046, "using-a-pretrained-model"]], "Next Steps": [[2046, "next-steps"]], "torch.special": [[2025, "torch-special"]], "torch.package": [[2012, "torch-package"]], "Packaging your first model": [[2012, "packaging-your-first-model"]], "How do I\u2026": [[2012, "how-do-i"]], "See what is inside a package?": [[2012, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[2012, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[2012, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[2012, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[2012, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[2012, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[2012, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[2012, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[2012, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[2012, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[2012, "re-export-an-imported-object"]], "Package a TorchScript module?": [[2012, "package-a-torchscript-module"]], "Explanation": [[2012, "explanation"]], "torch.package Format Overview": [[2012, "torch-package-format-overview"]], "Framework files": [[2012, "framework-files"]], "User files": [[2012, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[2012, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[2012, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[2012, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[2012, "dependency-management"]], "intern": [[2012, "intern"]], "extern": [[2012, "extern"]], "mock": [[2012, "mock"]], "Refactoring": [[2012, "refactoring"]], "Patterns": [[2012, "patterns"]], "torch.package sharp edges": [[2012, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[2012, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[2012, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[2012, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[2012, "mangling"]], "TorchDynamo Deep Dive": [[2041, "torchdynamo-deep-dive"]], "TorchDynamo Internals": [[2041, "torchdynamo-internals"]], "What is a guard?": [[2041, "what-is-a-guard"]], "What is Dynamo doing?": [[2041, "what-is-dynamo-doing"]], "How to inspect artifacts generated by TorchDynamo?": [[2041, "how-to-inspect-artifacts-generated-by-torchdynamo"]], "TorchInductor GPU Profiling": [[2048, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[2048, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[2048, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[2048, "benchmark-individual-triton-kernel"]], "torch.ao.ns._numeric_suite": [[2033, "torch-ao-ns-numeric-suite"]], "torch.Storage": [[2026, "torch-storage"]], "Fake tensor": [[2043, "fake-tensor"]], "Related work": [[2043, "related-work"]], "Overall architecture": [[2043, "overall-architecture"], [2042, "overall-architecture"]], "API: the important bits": [[2043, "api-the-important-bits"]], "Details": [[2043, "details"]], "About the tensor subclass": [[2043, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[2043, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[2043, "how-does-the-converter-work"]], "Performance characteristics": [[2043, "performance-characteristics"]], "Fake tensor of fake tensor?": [[2043, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[2043, "interaction-with-dynamic-shapes"]], "Other resources": [[2043, "other-resources"]], "torch.compiler API reference": [[2037, "torch-compiler-api-reference"]], "AOTInductor: Ahead-Of-Time Compilation for Torch.Export-ed Models": [[2036, "aotinductor-ahead-of-time-compilation-for-torch-export-ed-models"]], "Model Compilation": [[2036, "model-compilation"]], "Inference in C++": [[2036, "inference-in-c"]], "CUDAGraph Trees": [[2039, "cudagraph-trees"]], "CUDAGraph Background": [[2039, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[2039, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[2039, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[2039, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[2039, "cudagraph-trees-integration"]], "Limitations": [[2039, "limitations"], [2045, "limitations"], [2044, "limitations"], [2009, "limitations"]], "Quantization Accuracy Debugging": [[2016, "quantization-accuracy-debugging"], [2015, "quantization-accuracy-debugging"]], "Data insensitive error": [[2016, "data-insensitive-error"]], "General tips": [[2016, "general-tips"]], "Int8 quantization tips": [[2016, "int8-quantization-tips"]], "Data sensitive error": [[2016, "data-sensitive-error"]], "Implementation error": [[2016, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[2016, "numerical-debugging-tooling-prototype"]], "Windows FAQ": [[2005, "windows-faq"]], "Building from source": [[2005, "building-from-source"]], "Include optional components": [[2005, "include-optional-components"]], "Speeding CUDA build for Windows": [[2005, "speeding-cuda-build-for-windows"]], "One key install script": [[2005, "one-key-install-script"]], "Extension": [[2005, "extension"]], "CFFI Extension": [[2005, "cffi-extension"]], "Cpp Extension": [[2005, "cpp-extension"]], "Installation": [[2005, "installation"]], "Package not found in win-32 channel.": [[2005, "package-not-found-in-win-32-channel"]], "Import error": [[2005, "import-error"]], "Usage (multiprocessing)": [[2005, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[2005, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[2005, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[2005, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[2005, "cuda-ipc-operations"]], "torch.random": [[2019, "module-torch.random"]], "Quantization API Reference": [[2018, "quantization-api-reference"], [2015, "quantization-api-reference"]], "torch.ao.quantization": [[2018, "torch-ao-quantization"]], "Top level APIs": [[2018, "top-level-apis"]], "Preparing model for quantization": [[2018, "preparing-model-for-quantization"]], "Utility functions": [[2018, "utility-functions"], [2004, "utility-functions"]], "torch.ao.quantization.quantize_fx": [[2018, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[2018, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[2018, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[2018, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[2018, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[2018, "module-torch.ao.quantization.pt2e"]], "torch (quantization related functions)": [[2018, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[2018, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[2018, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[2018, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[2018, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[2018, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[2018, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[2018, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[2018, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[2018, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[2018, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[2018, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[2018, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[2018, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[2018, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[2018, "quantized-dtypes-and-quantization-schemes"]], "Serialization semantics": [[2004, "serialization-semantics"]], "Table of Contents": [[2004, "table-of-contents"]], "Saving and loading tensors": [[2004, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[2004, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[2004, "saving-and-loading-torch-nn-modules"]], "Serialized file format for torch.save": [[2004, "serialized-file-format-for-torch-save"]], "Serializing torch.nn.Modules and loading them in C++": [[2004, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[2004, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[2004, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[2004, "torch-full-always-inferring-a-float-dtype"]], "torch.utils.tensorboard": [[2029, "module-torch.utils.tensorboard"]], "torch.onnx": [[2006, "torch-onnx"]], "TorchDynamo-based ONNX Exporter": [[2006, "torchdynamo-based-onnx-exporter"], [2007, "torchdynamo-based-onnx-exporter"]], "TorchScript-based ONNX Exporter": [[2006, "torchscript-based-onnx-exporter"], [2009, "torchscript-based-onnx-exporter"]], "Contributing / Developing": [[2006, "contributing-developing"]], "Reproducibility": [[2003, "reproducibility"]], "Controlling sources of randomness": [[2003, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[2003, "pytorch-random-number-generator"]], "Python": [[2003, "python"]], "Random number generators in other libraries": [[2003, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[2003, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[2003, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[2003, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[2003, "cuda-rnn-and-lstm"]], "Filling uninitialized memory": [[2003, "filling-uninitialized-memory"]], "DataLoader": [[2003, "dataloader"]], "Multiprocessing best practices": [[2001, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[2001, "cuda-in-multiprocessing"]], "Best practices and tips": [[2001, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[2001, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[2001, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[2001, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[2001, "hogwild"]], "CPU in multiprocessing": [[2001, "cpu-in-multiprocessing"]], "CPU oversubscription": [[2001, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[2001, "avoid-cpu-oversubscription"]], "torch.profiler": [[2014, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[2014, "intel-instrumentation-and-tracing-technology-apis"]], "Distributed Autograd Design": [[2021, "distributed-autograd-design"]], "Background": [[2021, "background"], [2022, "background"]], "Autograd recording during the forward pass": [[2021, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[2021, "distributed-autograd-context"]], "Distributed Backward Pass": [[2021, "distributed-backward-pass"]], "Computing dependencies": [[2021, "computing-dependencies"]], "FAST mode algorithm": [[2021, "fast-mode-algorithm"]], "SMART mode algorithm": [[2021, "smart-mode-algorithm"]], "Distributed Optimizer": [[2021, "distributed-optimizer"], [2020, "distributed-optimizer"]], "Simple end to end example": [[2021, "simple-end-to-end-example"]], "Remote Reference Protocol": [[2022, "remote-reference-protocol"]], "RRef Lifetime": [[2022, "rref-lifetime"]], "Design Reasoning": [[2022, "design-reasoning"]], "Protocol Scenarios": [[2022, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[2022, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[2022, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[2022, "owner-share-rref-with-user"]], "User Share RRef with User": [[2022, "user-share-rref-with-user"]], "Dynamic shapes": [[2042, "dynamic-shapes"]], "Abridged public API": [[2042, "abridged-public-api"]], "The Guard Model": [[2042, "the-guard-model"]], "Abridged internal API": [[2042, "abridged-internal-api"]], "DimDynamic policy": [[2042, "dimdynamic-policy"]], "Unbacked SymInts": [[2042, "unbacked-symints"]], "torch.optim": [[2011, "module-torch.optim"]], "How to use an optimizer": [[2011, "how-to-use-an-optimizer"]], "Constructing it": [[2011, "constructing-it"]], "Per-parameter options": [[2011, "per-parameter-options"]], "Taking an optimization step": [[2011, "taking-an-optimization-step"]], "optimizer.step()": [[2011, "optimizer-step"]], "optimizer.step(closure)": [[2011, "optimizer-step-closure"]], "Base class": [[2011, "base-class"]], "Algorithms": [[2011, "algorithms"]], "How to adjust learning rate": [[2011, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[2011, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[2011, "constructing-averaged-models"]], "Custom averaging strategies": [[2011, "custom-averaging-strategies"]], "SWA learning rate schedules": [[2011, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[2011, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[2011, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[2011, "putting-it-all-together-ema"]], "TorchDynamo APIs for fine-grained tracing": [[2045, "torchdynamo-apis-for-fine-grained-tracing"]], "TorchDynamo APIs to control fine-grained tracing": [[2045, "id1"]], "torch._dynamo.disallow_in_graph": [[2045, "torch-dynamo-disallow-in-graph"]], "Guards Overview": [[2047, "guards-overview"]], "Caching and Guards Overview": [[2047, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[2047, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[2047, "instructiontranslator"]], "Making Guards": [[2047, "making-guards"]], "torch": [[2032, "module-torch"]], "Tensors": [[2032, "tensors"]], "Creation Ops": [[2032, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[2032, "indexing-slicing-joining-mutating-ops"]], "Generators": [[2032, "generators"]], "Random sampling": [[2032, "random-sampling"]], "In-place random sampling": [[2032, "in-place-random-sampling"]], "Quasi-random sampling": [[2032, "quasi-random-sampling"]], "Parallelism": [[2032, "parallelism"]], "Math operations": [[2032, "math-operations"]], "Pointwise Ops": [[2032, "pointwise-ops"]], "Reduction Ops": [[2032, "reduction-ops"]], "Comparison Ops": [[2032, "comparison-ops"]], "Spectral Ops": [[2032, "spectral-ops"]], "Other Operations": [[2032, "other-operations"]], "BLAS and LAPACK Operations": [[2032, "blas-and-lapack-operations"]], "Foreach Operations": [[2032, "foreach-operations"]], "Symbolic Numbers": [[2032, "symbolic-numbers"]], "Export Path": [[2032, "export-path"]], "Control Flow": [[2032, "control-flow"]], "Optimizations": [[2032, "optimizations"]], "Operator Tags": [[2032, "operator-tags"]], "torch.testing": [[2031, "module-torch.testing"]], "IRs": [[2049, "irs"]], "Core Aten IR": [[2049, "core-aten-ir"]], "Prims IR": [[2049, "prims-ir"]], "Quantization": [[2015, "module-torch.ao.quantization"]], "Introduction to Quantization": [[2015, "introduction-to-quantization"]], "Quantization API Summary": [[2015, "quantization-api-summary"]], "Eager Mode Quantization": [[2015, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[2015, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[2015, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[2015, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[2015, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype - maintaince mode) FX Graph Mode Quantization": [[2015, "prototype-maintaince-mode-fx-graph-mode-quantization"]], "(Prototype) PyTorch 2 Export Quantization": [[2015, "prototype-pytorch-2-export-quantization"]], "Quantization Stack": [[2015, "quantization-stack"]], "Quantized Model": [[2015, "quantized-model"]], "Quantized Tensor": [[2015, "quantized-tensor"]], "Quantize and Dequantize": [[2015, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[2015, "quantized-operators-modules"]], "Quantized Engine": [[2015, "quantized-engine"]], "Quantization Flow": [[2015, "quantization-flow"]], "Observer and FakeQuantize": [[2015, "observer-and-fakequantize"]], "General Quantization Flow": [[2015, "general-quantization-flow"]], "Quantization Support Matrix": [[2015, "quantization-support-matrix"]], "Quantization Mode Support": [[2015, "quantization-mode-support"]], "Quantization Flow Support": [[2015, "quantization-flow-support"]], "Backend/Hardware Support": [[2015, "backend-hardware-support"]], "Note for native CPU backends": [[2015, "note-for-native-cpu-backends"]], "Operator Support": [[2015, "operator-support"]], "Quantization Backend Configuration": [[2015, "quantization-backend-configuration"], [2017, "quantization-backend-configuration"]], "Quantization Customizations": [[2015, "quantization-customizations"]], "Quantization Custom Module API": [[2015, "quantization-custom-module-api"]], "Best Practices": [[2015, "best-practices"]], "Common Errors": [[2015, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[2015, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[2015, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[2015, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[2015, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "Custom Backends": [[2040, "custom-backends"]], "Registering Custom Backends": [[2040, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[2040, "custom-backends-after-aotautograd"]], "Debugging Backend": [[2040, "debugging-backend"]], "Speedy Backend": [[2040, "speedy-backend"]], "Composable Backends": [[2040, "composable-backends"]], "Default values for native configurations": [[2017, "default-values-for-native-configurations"]], "ONNX Backend for TorchDynamo": [[2008, "onnx-backend-for-torchdynamo"]], "Tensor Attributes": [[2027, "tensor-attributes"]], "torch.dtype": [[2027, "torch-dtype"]], "torch.device": [[2027, "torch-device"]], "torch.layout": [[2027, "torch-layout"]], "torch.memory_format": [[2027, "torch-memory-format"]], "Distributed RPC Framework": [[2020, "distributed-rpc-framework"]], "RPC": [[2020, "rpc"]], "TensorPipe Backend": [[2020, "tensorpipe-backend"]], "RRef": [[2020, "rref"]], "More Information about RRef": [[2020, null]], "RemoteModule": [[2020, "remotemodule"]], "Distributed Autograd Framework": [[2020, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[2020, null]], "Does torch.compile support training?": [[2044, "does-torch-compile-support-training"]], "Do you support Distributed code?": [[2044, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[2044, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[2044, "why-is-my-code-crashing"]], "Why is compilation slow?": [[2044, "why-is-compilation-slow"]], "Why are you recompiling in production?": [[2044, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[2044, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[2044, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[2044, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[2044, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[2044, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[2044, "why-am-i-getting-ooms"]], "Does torch.func work with torch.compile (for grad and vmap transforms)?": [[2044, "does-torch-func-work-with-torch-compile-for-grad-and-vmap-transforms"]], "Calling torch.func transform inside of a function handled with torch.compile": [[2044, "calling-torch-func-transform-inside-of-a-function-handled-with-torch-compile"]], "Compiling torch.func.grad with torch.compile": [[2044, "compiling-torch-func-grad-with-torch-compile"]], "Compiling torch.vmap with torch.compile": [[2044, "compiling-torch-vmap-with-torch-compile"]], "Compiling functions besides the ones which are supported (escape hatch)": [[2044, "compiling-functions-besides-the-ones-which-are-supported-escape-hatch"]], "Does NumPy work with torch.compile?": [[2044, "does-numpy-work-with-torch-compile"]], "Which NumPy features does torch.compile support?": [[2044, "which-numpy-features-does-torch-compile-support"]], "Can I compile NumPy code using torch.compile?": [[2044, "can-i-compile-numpy-code-using-torch-compile"]], "Can I execute NumPy code on CUDA and compute gradients via torch.compile?": [[2044, "can-i-execute-numpy-code-on-cuda-and-compute-gradients-via-torch-compile"]], "How do I debug NumPy code under torch.compile?": [[2044, "how-do-i-debug-numpy-code-under-torch-compile"]], "I torch.compile some NumPy code and I did not see any speed-up.": [[2044, "i-torch-compile-some-numpy-code-and-i-did-not-see-any-speed-up"]], "Which API to use for fine grain tracing?": [[2044, "which-api-to-use-for-fine-grain-tracing"]], "How do I graph break on a function?": [[2044, "how-do-i-graph-break-on-a-function"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo.disallow_in_graph": [[2044, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-disallow-in-graph"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo_skip": [[2044, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-skip"]], "torch.Tensor": [[2030, "torch-tensor"]], "Data types": [[2030, "data-types"]], "Initializing and basic operations": [[2030, "initializing-and-basic-operations"]], "Tensor class reference": [[2030, "tensor-class-reference"]], "Dependencies": [[2007, "dependencies"]], "A simple example": [[2007, "a-simple-example"]], "Inspecting the ONNX model using GUI": [[2007, "inspecting-the-onnx-model-using-gui"]], "Diagnosing issues with SARIF": [[2007, "diagnosing-issues-with-sarif"]], "ONNX Diagnostic SARIF Rules": [[2007, null]], "torch.sparse": [[2024, "torch-sparse"]], "Why and when to use sparsity": [[2024, "why-and-when-to-use-sparsity"]], "Functionality overview": [[2024, "functionality-overview"]], "Operator overview": [[2024, "operator-overview"]], "Sparse Semi-Structured Tensors": [[2024, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[2024, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[2024, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[2024, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[2024, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[2024, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[2024, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[2024, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[2024, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[2024, "sparse-csr-tensor"]], "Construction of CSR tensors": [[2024, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[2024, "csr-tensor-operations"]], "Sparse CSC Tensor": [[2024, "sparse-csc-tensor"]], "Construction of CSC tensors": [[2024, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[2024, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[2024, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[2024, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[2024, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[2024, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[2024, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[2024, "linear-algebra-operations"]], "Tensor methods and sparse": [[2024, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[2024, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[2024, "other-functions"]], "Unary functions": [[2024, "unary-functions"]], "torch.signal": [[2023, "module-torch.signal"]], "torch.signal.windows": [[2023, "module-torch.signal.windows"]], "ONNX supported TorchScript operators": [[2010, "onnx-supported-torchscript-operators"]], "Supported operators": [[2010, "supported-operators"]], "ONNX support for TorchScript operators": [[2010, "id1"]], "Unsupported operators": [[2010, "unsupported-operators"], [2010, "id2"]], "Tensor Views": [[2028, "tensor-views"]], "Numerical accuracy": [[2002, "numerical-accuracy"]], "Batched computations or slice computations": [[2002, "batched-computations-or-slice-computations"]], "Extremal values": [[2002, "extremal-values"]], "Linear algebra (torch.linalg)": [[2002, "linear-algebra-torch-linalg"]], "Non-finite values": [[2002, "non-finite-values"]], "Extremal values in linalg": [[2002, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere (and later) devices": [[2002, "tensorfloat-32-tf32-on-nvidia-ampere-and-later-devices"]], "Reduced Precision Reduction for FP16 and BF16 GEMMs": [[2002, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[2002, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "Pipeline Parallelism": [[2013, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[2013, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[2013, "pipelined-execution"]], "Pipe APIs in PyTorch": [[2013, "pipe-apis-in-pytorch"]], "Skip connections": [[2013, "skip-connections"]], "torch.compiler": [[2035, "torch-compiler"]], "Getting Started for PyTorch Users": [[2035, null]], "HowTo for PyTorch Backend Vendors": [[2035, null]], "torch.ao.ns._numeric_suite_fx": [[2034, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[2034, "torch-ao-ns-fx-utils"]], "MPS backend": [[2000, "mps-backend"]], "Example: AlexNet from PyTorch to ONNX": [[2009, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[2009, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[2009, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[2009, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[2009, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[2009, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Differences in Operator Implementations": [[2009, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[2009, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[2009, "reads-gets"]], "Writes / Sets": [[2009, "writes-sets"]], "Adding support for operators": [[2009, "adding-support-for-operators"]], "ONNX exporter internals": [[2009, "onnx-exporter-internals"]], "ATen operators": [[2009, "aten-operators"]], "List of supported operators": [[2009, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[2009, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[2009, "torch-autograd-functions"]], "Static Symbolic Method": [[2009, "static-symbolic-method"]], "Inline Autograd Function": [[2009, "inline-autograd-function"]], "Custom operators": [[2009, "custom-operators"]], "ONNX-script functions": [[2009, "onnx-script-functions"]], "C++ Operators": [[2009, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[2009, "discovering-all-unconvertible-aten-ops-at-once"]], "Classes": [[2009, "classes"]], "torch._foreach_neg_": [[658, "torch-foreach-neg"]], "torch.all": [[689, "torch-all"]], "torch._foreach_zero_": [[675, "torch-foreach-zero"]], "torch.addcmul": [[684, "torch-addcmul"]], "torch.absolute": [[678, "torch-absolute"]], "torch.addcdiv": [[683, "torch-addcdiv"]], "torch._foreach_round": [[661, "torch-foreach-round"]], "torch.addbmm": [[682, "torch-addbmm"]], "torch.addmv": [[686, "torch-addmv"]], "torch.acosh": [[680, "torch-acosh"]], "torch._foreach_log10": [[650, "torch-foreach-log10"]], "torch._foreach_tan": [[671, "torch-foreach-tan"]], "torch._foreach_reciprocal": [[659, "torch-foreach-reciprocal"]], "torch.amax": [[691, "torch-amax"]], "torch._foreach_log2": [[654, "torch-foreach-log2"]], "torch.acos": [[679, "torch-acos"]], "torch._foreach_reciprocal_": [[660, "torch-foreach-reciprocal"]], "torch._foreach_sqrt_": [[670, "torch-foreach-sqrt"]], "torch._logging.set_logs": [[676, "torch-logging-set-logs"]], "torch.add": [[681, "torch-add"]], "torch.angle": [[694, "torch-angle"]], "torch._foreach_log1p": [[652, "torch-foreach-log1p"]], "torch._foreach_log10_": [[651, "torch-foreach-log10"]], "torch.amin": [[692, "torch-amin"]], "torch._foreach_trunc": [[673, "torch-foreach-trunc"]], "torch.addr": [[687, "torch-addr"]], "torch.aminmax": [[693, "torch-aminmax"]], "torch._foreach_log_": [[656, "torch-foreach-log"]], "torch._foreach_sin_": [[666, "torch-foreach-sin"]], "torch._foreach_log2_": [[655, "torch-foreach-log2"]], "torch._foreach_tan_": [[672, "torch-foreach-tan"]], "torch.addmm": [[685, "torch-addmm"]], "torch._foreach_neg": [[657, "torch-foreach-neg"]], "torch._foreach_sigmoid": [[663, "torch-foreach-sigmoid"]], "torch._foreach_sinh": [[667, "torch-foreach-sinh"]], "torch.allclose": [[690, "torch-allclose"]], "torch.adjoint": [[688, "torch-adjoint"]], "torch._foreach_sigmoid_": [[664, "torch-foreach-sigmoid"]], "torch._foreach_round_": [[662, "torch-foreach-round"]], "torch._foreach_log1p_": [[653, "torch-foreach-log1p"]], "torch._foreach_trunc_": [[674, "torch-foreach-trunc"]], "torch.any": [[695, "torch-any"]], "torch._foreach_sqrt": [[669, "torch-foreach-sqrt"]], "torch._foreach_sinh_": [[668, "torch-foreach-sinh"]], "torch._foreach_sin": [[665, "torch-foreach-sin"]], "torch.abs": [[677, "torch-abs"]], "torch.Tensor.where": [[616, "torch-tensor-where"]], "torch._foreach_cos": [[631, "torch-foreach-cos"]], "torch.Tensor.view": [[613, "torch-tensor-view"]], "torch.Tensor.view_as": [[614, "torch-tensor-view-as"]], "torch.Tensor.uniform_": [[604, "torch-tensor-uniform"]], "torch.Tensor.values": [[610, "torch-tensor-values"]], "torch._foreach_exp_": [[640, "torch-foreach-exp"]], "torch._foreach_expm1_": [[642, "torch-foreach-expm1"]], "torch.Tensor.zero_": [[619, "torch-tensor-zero"]], "torch._foreach_frac": [[645, "torch-foreach-frac"]], "torch._foreach_cos_": [[632, "torch-foreach-cos"]], "torch.Tensor.unbind": [[601, "torch-tensor-unbind"]], "torch.Tensor.vsplit": [[615, "torch-tensor-vsplit"]], "torch._foreach_ceil_": [[630, "torch-foreach-ceil"]], "torch._foreach_exp": [[639, "torch-foreach-exp"]], "torch._foreach_acos": [[623, "torch-foreach-acos"]], "torch._assert": [[620, "torch-assert"]], "torch._foreach_cosh": [[633, "torch-foreach-cosh"]], "torch._foreach_ceil": [[629, "torch-foreach-ceil"]], "torch.Tensor.unique_consecutive": [[606, "torch-tensor-unique-consecutive"]], "torch.Tensor.untyped_storage": [[609, "torch-tensor-untyped-storage"]], "torch._foreach_erf_": [[636, "torch-foreach-erf"]], "torch._foreach_lgamma_": [[648, "torch-foreach-lgamma"]], "torch._foreach_cosh_": [[634, "torch-foreach-cosh"]], "torch.Tensor.unfold": [[603, "torch-tensor-unfold"]], "torch._foreach_frac_": [[646, "torch-foreach-frac"]], "torch._foreach_atan": [[627, "torch-foreach-atan"]], "torch._foreach_lgamma": [[647, "torch-foreach-lgamma"]], "torch._foreach_floor": [[643, "torch-foreach-floor"]], "torch.Tensor.xlogy": [[617, "torch-tensor-xlogy"]], "torch.Tensor.unsqueeze": [[607, "torch-tensor-unsqueeze"]], "torch.Tensor.vdot": [[612, "torch-tensor-vdot"]], "torch.Tensor.unique": [[605, "torch-tensor-unique"]], "torch._foreach_asin": [[625, "torch-foreach-asin"]], "torch._foreach_atan_": [[628, "torch-foreach-atan"]], "torch._foreach_abs_": [[622, "torch-foreach-abs"]], "torch._foreach_asin_": [[626, "torch-foreach-asin"]], "torch._foreach_erfc": [[637, "torch-foreach-erfc"]], "torch._foreach_erf": [[635, "torch-foreach-erf"]], "torch.Tensor.unflatten": [[602, "torch-tensor-unflatten"]], "torch._foreach_erfc_": [[638, "torch-foreach-erfc"]], "torch.Tensor.unsqueeze_": [[608, "torch-tensor-unsqueeze"]], "torch.Tensor.type_as": [[600, "torch-tensor-type-as"]], "torch.Tensor.xlogy_": [[618, "torch-tensor-xlogy"]], "torch._foreach_abs": [[621, "torch-foreach-abs"]], "torch._foreach_acos_": [[624, "torch-foreach-acos"]], "torch._foreach_expm1": [[641, "torch-foreach-expm1"]], "torch._foreach_floor_": [[644, "torch-foreach-floor"]], "torch.Tensor.var": [[611, "torch-tensor-var"]], "torch._foreach_log": [[649, "torch-foreach-log"]], "torch.Tensor.topk": [[586, "torch-tensor-topk"]], "torch.Tensor.tolist": [[585, "torch-tensor-tolist"]], "torch.Tensor.tensor_split": [[574, "torch-tensor-tensor-split"]], "torch.Tensor.triu": [[593, "torch-tensor-triu"]], "torch.Tensor.to_sparse_csc": [[583, "torch-tensor-to-sparse-csc"]], "torch.Tensor.to_sparse_csr": [[584, "torch-tensor-to-sparse-csr"]], "torch.Tensor.sub_": [[558, "torch-tensor-sub"]], "torch.Tensor.trace": [[587, "torch-tensor-trace"]], "torch.Tensor.stft": [[552, "torch-tensor-stft"]], "torch.Tensor.swapaxes": [[564, "torch-tensor-swapaxes"]], "torch.Tensor.t": [[566, "torch-tensor-t"]], "torch.Tensor.sub": [[557, "torch-tensor-sub"]], "torch.Tensor.sspaddmm": [[550, "torch-tensor-sspaddmm"]], "torch.Tensor.type": [[599, "torch-tensor-type"]], "torch.Tensor.t_": [[567, "torch-tensor-t"]], "torch.Tensor.take_along_dim": [[569, "torch-tensor-take-along-dim"]], "torch.Tensor.tan_": [[571, "torch-tensor-tan"]], "torch.Tensor.to_mkldnn": [[578, "torch-tensor-to-mkldnn"]], "torch.Tensor.to_sparse_coo": [[582, "torch-tensor-to-sparse-coo"]], "torch.Tensor.sum_to_size": [[562, "torch-tensor-sum-to-size"]], "torch.Tensor.true_divide_": [[596, "torch-tensor-true-divide"]], "torch.Tensor.sum": [[561, "torch-tensor-sum"]], "torch.Tensor.trunc": [[597, "torch-tensor-trunc"]], "torch.Tensor.tan": [[570, "torch-tensor-tan"]], "torch.Tensor.storage_offset": [[554, "torch-tensor-storage-offset"]], "torch.Tensor.swapdims": [[565, "torch-tensor-swapdims"]], "torch.Tensor.subtract": [[559, "torch-tensor-subtract"]], "torch.Tensor.transpose": [[588, "torch-tensor-transpose"]], "torch.Tensor.storage": [[553, "torch-tensor-storage"]], "torch.Tensor.trunc_": [[598, "torch-tensor-trunc"]], "torch.Tensor.std": [[551, "torch-tensor-std"]], "torch.Tensor.true_divide": [[595, "torch-tensor-true-divide"]], "torch.Tensor.storage_type": [[555, "torch-tensor-storage-type"]], "torch.Tensor.to_sparse": [[579, "torch-tensor-to-sparse"]], "torch.Tensor.to_dense": [[577, "torch-tensor-to-dense"]], "torch.Tensor.take": [[568, "torch-tensor-take"]], "torch.Tensor.subtract_": [[560, "torch-tensor-subtract"]], "torch.Tensor.tanh_": [[573, "torch-tensor-tanh"]], "torch.Tensor.transpose_": [[589, "torch-tensor-transpose"]], "torch.Tensor.tril": [[591, "torch-tensor-tril"]], "torch.Tensor.to": [[576, "torch-tensor-to"]], "torch.Tensor.tile": [[575, "torch-tensor-tile"]], "torch.Tensor.stride": [[556, "torch-tensor-stride"]], "torch.Tensor.to_sparse_bsr": [[581, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.tril_": [[592, "torch-tensor-tril"]], "torch.Tensor.tanh": [[572, "torch-tensor-tanh"]], "torch.Tensor.triu_": [[594, "torch-tensor-triu"]], "torch.Tensor.svd": [[563, "torch-tensor-svd"]], "torch.Tensor.to_sparse_bsc": [[580, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.triangular_solve": [[590, "torch-tensor-triangular-solve"]], "torch.Tensor.retains_grad": [[500, "torch-tensor-retains-grad"]], "torch.Tensor.signbit": [[526, "torch-tensor-signbit"]], "torch.Tensor.split": [[543, "torch-tensor-split"]], "torch.Tensor.scatter": [[508, "torch-tensor-scatter"]], "torch.Tensor.slice_scatter": [[534, "torch-tensor-slice-scatter"]], "torch.Tensor.select": [[514, "torch-tensor-select"]], "torch.Tensor.sparse_mask": [[540, "torch-tensor-sparse-mask"]], "torch.Tensor.sqrt_": [[545, "torch-tensor-sqrt"]], "torch.Tensor.row_indices": [[505, "torch-tensor-row-indices"]], "torch.Tensor.select_scatter": [[515, "torch-tensor-select-scatter"]], "torch.Tensor.scatter_add": [[510, "torch-tensor-scatter-add"]], "torch.Tensor.round": [[503, "torch-tensor-round"]], "torch.Tensor.square_": [[547, "torch-tensor-square"]], "torch.Tensor.smm": [[536, "torch-tensor-smm"]], "torch.Tensor.sparse_resize_": [[541, "torch-tensor-sparse-resize"]], "torch.Tensor.sparse_dim": [[539, "torch-tensor-sparse-dim"]], "torch.Tensor.scatter_reduce": [[512, "torch-tensor-scatter-reduce"]], "torch.Tensor.sin": [[527, "torch-tensor-sin"]], "torch.Tensor.sin_": [[528, "torch-tensor-sin"]], "torch.Tensor.scatter_reduce_": [[513, "torch-tensor-scatter-reduce"]], "torch.Tensor.sinh_": [[532, "torch-tensor-sinh"]], "torch.Tensor.rsqrt_": [[507, "torch-tensor-rsqrt"]], "torch.Tensor.set_": [[516, "torch-tensor-set"]], "torch.Tensor.shape": [[519, "torch-tensor-shape"]], "torch.Tensor.round_": [[504, "torch-tensor-round"]], "torch.Tensor.sort": [[538, "torch-tensor-sort"]], "torch.Tensor.slogdet": [[535, "torch-tensor-slogdet"]], "torch.Tensor.sgn_": [[518, "torch-tensor-sgn"]], "torch.Tensor.sparse_resize_and_clear_": [[542, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.scatter_add_": [[511, "torch-tensor-scatter-add"]], "torch.Tensor.sigmoid": [[522, "torch-tensor-sigmoid"]], "torch.Tensor.share_memory_": [[520, "torch-tensor-share-memory"]], "torch.Tensor.scatter_": [[509, "torch-tensor-scatter"]], "torch.Tensor.sign": [[524, "torch-tensor-sign"]], "torch.Tensor.short": [[521, "torch-tensor-short"]], "torch.Tensor.size": [[533, "torch-tensor-size"]], "torch.Tensor.sinc": [[529, "torch-tensor-sinc"]], "torch.Tensor.sqrt": [[544, "torch-tensor-sqrt"]], "torch.Tensor.sinh": [[531, "torch-tensor-sinh"]], "torch.Tensor.rsqrt": [[506, "torch-tensor-rsqrt"]], "torch.Tensor.squeeze": [[548, "torch-tensor-squeeze"]], "torch.Tensor.sinc_": [[530, "torch-tensor-sinc"]], "torch.Tensor.roll": [[501, "torch-tensor-roll"]], "torch.Tensor.sgn": [[517, "torch-tensor-sgn"]], "torch.Tensor.square": [[546, "torch-tensor-square"]], "torch.Tensor.squeeze_": [[549, "torch-tensor-squeeze"]], "torch.Tensor.softmax": [[537, "torch-tensor-softmax"]], "torch.Tensor.sigmoid_": [[523, "torch-tensor-sigmoid"]], "torch.Tensor.sign_": [[525, "torch-tensor-sign"]], "torch.Tensor.rot90": [[502, "torch-tensor-rot90"]], "torch.Tensor.reciprocal": [[480, "torch-tensor-reciprocal"]], "torch.Tensor.repeat_interleave": [[490, "torch-tensor-repeat-interleave"]], "torch.Tensor.renorm": [[487, "torch-tensor-renorm"]], "torch.Tensor.prod": [[466, "torch-tensor-prod"]], "torch.Tensor.rad2deg": [[476, "torch-tensor-rad2deg"]], "torch.Tensor.q_per_channel_scales": [[469, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.q_zero_point": [[472, "torch-tensor-q-zero-point"]], "torch.Tensor.requires_grad": [[491, "torch-tensor-requires-grad"]], "torch.Tensor.reshape": [[493, "torch-tensor-reshape"]], "torch.Tensor.put_": [[467, "torch-tensor-put"]], "torch.Tensor.q_per_channel_axis": [[468, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.requires_grad_": [[492, "torch-tensor-requires-grad"]], "torch.Tensor.polygamma_": [[462, "torch-tensor-polygamma"]], "torch.Tensor.resolve_neg": [[498, "torch-tensor-resolve-neg"]], "torch.Tensor.pin_memory": [[459, "torch-tensor-pin-memory"]], "torch.Tensor.not_equal_": [[452, "torch-tensor-not-equal"]], "torch.Tensor.pinverse": [[460, "torch-tensor-pinverse"]], "torch.Tensor.not_equal": [[451, "torch-tensor-not-equal"]], "torch.Tensor.pow_": [[465, "torch-tensor-pow"]], "torch.Tensor.ormqr": [[456, "torch-tensor-ormqr"]], "torch.Tensor.qscheme": [[474, "torch-tensor-qscheme"]], "torch.Tensor.resize_as_": [[496, "torch-tensor-resize-as"]], "torch.Tensor.q_per_channel_zero_points": [[470, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.polygamma": [[461, "torch-tensor-polygamma"]], "torch.Tensor.numpy": [[454, "torch-tensor-numpy"]], "torch.Tensor.positive": [[463, "torch-tensor-positive"]], "torch.Tensor.normal_": [[450, "torch-tensor-normal"]], "torch.Tensor.record_stream": [[482, "torch-tensor-record-stream"]], "torch.Tensor.random_": [[477, "torch-tensor-random"]], "torch.Tensor.renorm_": [[488, "torch-tensor-renorm"]], "torch.Tensor.q_scale": [[471, "torch-tensor-q-scale"]], "torch.Tensor.resolve_conj": [[497, "torch-tensor-resolve-conj"]], "torch.Tensor.remainder_": [[486, "torch-tensor-remainder"]], "torch.Tensor.qr": [[473, "torch-tensor-qr"]], "torch.Tensor.orgqr": [[455, "torch-tensor-orgqr"]], "torch.Tensor.permute": [[458, "torch-tensor-permute"]], "torch.Tensor.reshape_as": [[494, "torch-tensor-reshape-as"]], "torch.Tensor.retain_grad": [[499, "torch-tensor-retain-grad"]], "torch.Tensor.real": [[479, "torch-tensor-real"]], "torch.Tensor.reciprocal_": [[481, "torch-tensor-reciprocal"]], "torch.Tensor.register_post_accumulate_grad_hook": [[484, "torch-tensor-register-post-accumulate-grad-hook"]], "torch.Tensor.register_hook": [[483, "torch-tensor-register-hook"]], "torch.Tensor.quantile": [[475, "torch-tensor-quantile"]], "torch.Tensor.ravel": [[478, "torch-tensor-ravel"]], "torch.Tensor.resize_": [[495, "torch-tensor-resize"]], "torch.Tensor.remainder": [[485, "torch-tensor-remainder"]], "torch.Tensor.outer": [[457, "torch-tensor-outer"]], "torch.Tensor.pow": [[464, "torch-tensor-pow"]], "torch.Tensor.numel": [[453, "torch-tensor-numel"]], "torch.Tensor.repeat": [[489, "torch-tensor-repeat"]], "torch.Tensor.mode": [[410, "torch-tensor-mode"]], "torch.Tensor.msort": [[414, "torch-tensor-msort"]], "torch.Tensor.nanmean": [[425, "torch-tensor-nanmean"]], "torch.Tensor.mul": [[415, "torch-tensor-mul"]], "torch.Tensor.matrix_exp": [[401, "torch-tensor-matrix-exp"]], "torch.Tensor.narrow_copy": [[430, "torch-tensor-narrow-copy"]], "torch.Tensor.module_load": [[411, "torch-tensor-module-load"]], "torch.Tensor.maximum": [[404, "torch-tensor-maximum"]], "torch.Tensor.nextafter_": [[447, "torch-tensor-nextafter"]], "torch.Tensor.narrow": [[429, "torch-tensor-narrow"]], "torch.Tensor.new_empty": [[441, "torch-tensor-new-empty"]], "torch.Tensor.min": [[407, "torch-tensor-min"]], "torch.Tensor.multiply": [[418, "torch-tensor-multiply"]], "torch.Tensor.new_ones": [[443, "torch-tensor-new-ones"]], "torch.Tensor.max": [[403, "torch-tensor-max"]], "torch.Tensor.new_tensor": [[444, "torch-tensor-new-tensor"]], "torch.Tensor.new_full": [[442, "torch-tensor-new-full"]], "torch.Tensor.nelement": [[440, "torch-tensor-nelement"]], "torch.Tensor.nonzero": [[448, "torch-tensor-nonzero"]], "torch.Tensor.nan_to_num_": [[424, "torch-tensor-nan-to-num"]], "torch.Tensor.ndim": [[432, "torch-tensor-ndim"]], "torch.Tensor.norm": [[449, "torch-tensor-norm"]], "torch.Tensor.ne": [[434, "torch-tensor-ne"]], "torch.Tensor.ndimension": [[433, "torch-tensor-ndimension"]], "torch.Tensor.moveaxis": [[412, "torch-tensor-moveaxis"]], "torch.Tensor.mean": [[405, "torch-tensor-mean"]], "torch.Tensor.nanquantile": [[427, "torch-tensor-nanquantile"]], "torch.Tensor.mv": [[420, "torch-tensor-mv"]], "torch.Tensor.mul_": [[416, "torch-tensor-mul"]], "torch.Tensor.neg": [[436, "torch-tensor-neg"]], "torch.Tensor.matrix_power": [[402, "torch-tensor-matrix-power"]], "torch.Tensor.ne_": [[435, "torch-tensor-ne"]], "torch.Tensor.neg_": [[437, "torch-tensor-neg"]], "torch.Tensor.negative_": [[439, "torch-tensor-negative"]], "torch.Tensor.mvlgamma": [[421, "torch-tensor-mvlgamma"]], "torch.Tensor.nbytes": [[431, "torch-tensor-nbytes"]], "torch.Tensor.movedim": [[413, "torch-tensor-movedim"]], "torch.Tensor.negative": [[438, "torch-tensor-negative"]], "torch.Tensor.median": [[406, "torch-tensor-median"]], "torch.Tensor.nanmedian": [[426, "torch-tensor-nanmedian"]], "torch.Tensor.nansum": [[428, "torch-tensor-nansum"]], "torch.Tensor.nextafter": [[446, "torch-tensor-nextafter"]], "torch.Tensor.multinomial": [[417, "torch-tensor-multinomial"]], "torch.Tensor.mm": [[409, "torch-tensor-mm"]], "torch.Tensor.mvlgamma_": [[422, "torch-tensor-mvlgamma"]], "torch.Tensor.multiply_": [[419, "torch-tensor-multiply"]], "torch.Tensor.matmul": [[400, "torch-tensor-matmul"]], "torch.Tensor.new_zeros": [[445, "torch-tensor-new-zeros"]], "torch.Tensor.minimum": [[408, "torch-tensor-minimum"]], "torch.Tensor.nan_to_num": [[423, "torch-tensor-nan-to-num"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "module": [[0, "module-torch.amp"], [0, "module-torch.amp.autocast_mode"], [0, "module-torch.amp.grad_scaler"], [0, "module-torch.cpu.amp"], [0, "module-torch.cpu.amp.autocast_mode"], [0, "module-torch.cpu.amp.grad_scaler"], [0, "module-torch.cuda.amp"], [0, "module-torch.cuda.amp.autocast_mode"], [0, "module-torch.cuda.amp.common"], [0, "module-torch.cuda.amp.grad_scaler"], [1, "module-torch.autograd"], [1, "module-torch.autograd.anomaly_mode"], [1, "module-torch.autograd.forward_ad"], [1, "module-torch.autograd.function"], [1, "module-torch.autograd.functional"], [1, "module-torch.autograd.grad_mode"], [1, "module-torch.autograd.gradcheck"], [1, "module-torch.autograd.graph"], [1, "module-torch.autograd.profiler"], [1, "module-torch.autograd.profiler_legacy"], [1, "module-torch.autograd.profiler_util"], [1, "module-torch.autograd.variable"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.cudnn.rnn"], [2, "module-torch.backends.mha"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.nnpack"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xeon.run_cpu"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [13, "module-torch.__config__"], [16, "module-torch.cpu"], [17, "module-torch.cuda"], [17, "module-torch.cuda.comm"], [17, "module-torch.cuda.error"], [17, "module-torch.cuda.graphs"], [17, "module-torch.cuda.jiterator"], [17, "module-torch.cuda.memory"], [17, "module-torch.cuda.nccl"], [17, "module-torch.cuda.nvtx"], [17, "module-torch.cuda.profiler"], [17, "module-torch.cuda.random"], [17, "module-torch.cuda.sparse"], [17, "module-torch.cuda.streams"], [18, "module-torch.cuda._sanitizer"], [21, "module-torch.utils.data"], [21, "module-torch.utils.data.datapipes"], [21, "module-torch.utils.data.datapipes.dataframe"], [21, "module-torch.utils.data.datapipes.iter"], [21, "module-torch.utils.data.datapipes.map"], [21, "module-torch.utils.data.datapipes.utils"], [24, "module-torch.utils.deterministic"], [25, "module-torch.distributed"], [25, "module-torch.distributed.algorithms"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"], [25, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"], [25, "module-torch.distributed.algorithms.join"], [25, "module-torch.distributed.algorithms.model_averaging"], [25, "module-torch.distributed.algorithms.model_averaging.averagers"], [25, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"], [25, "module-torch.distributed.algorithms.model_averaging.utils"], [25, "module-torch.distributed.argparse_util"], [25, "module-torch.distributed.c10d_logger"], [25, "module-torch.distributed.checkpoint.api"], [25, "module-torch.distributed.checkpoint.default_planner"], [25, "module-torch.distributed.checkpoint.filesystem"], [25, "module-torch.distributed.checkpoint.metadata"], [25, "module-torch.distributed.checkpoint.optimizer"], [25, "module-torch.distributed.checkpoint.planner"], [25, "module-torch.distributed.checkpoint.planner_helpers"], [25, "module-torch.distributed.checkpoint.resharding"], [25, "module-torch.distributed.checkpoint.state_dict"], [25, "module-torch.distributed.checkpoint.state_dict_loader"], [25, "module-torch.distributed.checkpoint.state_dict_saver"], [25, "module-torch.distributed.checkpoint.stateful"], [25, "module-torch.distributed.checkpoint.storage"], [25, "module-torch.distributed.checkpoint.utils"], [25, "module-torch.distributed.collective_utils"], [25, "module-torch.distributed.constants"], [25, "module-torch.distributed.device_mesh"], [25, "module-torch.distributed.distributed_c10d"], [25, "module-torch.distributed.elastic"], [25, "module-torch.distributed.elastic.agent.server.api"], [25, "module-torch.distributed.elastic.agent.server.local_elastic_agent"], [25, "module-torch.distributed.elastic.events.api"], [25, "module-torch.distributed.elastic.events.handlers"], [25, "module-torch.distributed.elastic.metrics.api"], [25, "module-torch.distributed.elastic.multiprocessing.api"], [25, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"], [25, "module-torch.distributed.elastic.multiprocessing.errors.handlers"], [25, "module-torch.distributed.elastic.multiprocessing.redirects"], [25, "module-torch.distributed.elastic.multiprocessing.tail_log"], [25, "module-torch.distributed.elastic.rendezvous.api"], [25, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"], [25, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"], [25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"], [25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"], [25, "module-torch.distributed.elastic.rendezvous.etcd_server"], [25, "module-torch.distributed.elastic.rendezvous.etcd_store"], [25, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"], [25, "module-torch.distributed.elastic.rendezvous.utils"], [25, "module-torch.distributed.elastic.timer.api"], [25, "module-torch.distributed.elastic.timer.file_based_local_timer"], [25, "module-torch.distributed.elastic.timer.local_timer"], [25, "module-torch.distributed.elastic.utils"], [25, "module-torch.distributed.elastic.utils.api"], [25, "module-torch.distributed.elastic.utils.data"], [25, "module-torch.distributed.elastic.utils.data.cycling_iterator"], [25, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"], [25, "module-torch.distributed.elastic.utils.distributed"], [25, "module-torch.distributed.elastic.utils.log_level"], [25, "module-torch.distributed.elastic.utils.logging"], [25, "module-torch.distributed.elastic.utils.store"], [25, "module-torch.distributed.fsdp.api"], [25, "module-torch.distributed.fsdp.fully_sharded_data_parallel"], [25, "module-torch.distributed.fsdp.sharded_grad_scaler"], [25, "module-torch.distributed.fsdp.wrap"], [25, "module-torch.distributed.launch"], [25, "module-torch.distributed.launcher"], [25, "module-torch.distributed.launcher.api"], [25, "module-torch.distributed.logging_handlers"], [25, "module-torch.distributed.nn"], [25, "module-torch.distributed.nn.api"], [25, "module-torch.distributed.nn.api.remote_module"], [25, "module-torch.distributed.nn.functional"], [25, "module-torch.distributed.nn.jit"], [25, "module-torch.distributed.nn.jit.instantiator"], [25, "module-torch.distributed.nn.jit.templates"], [25, "module-torch.distributed.nn.jit.templates.remote_module_template"], [25, "module-torch.distributed.optim.apply_optimizer_in_backward"], [25, "module-torch.distributed.optim.functional_adadelta"], [25, "module-torch.distributed.optim.functional_adagrad"], [25, "module-torch.distributed.optim.functional_adam"], [25, "module-torch.distributed.optim.functional_adamax"], [25, "module-torch.distributed.optim.functional_adamw"], [25, "module-torch.distributed.optim.functional_rmsprop"], [25, "module-torch.distributed.optim.functional_rprop"], [25, "module-torch.distributed.optim.functional_sgd"], [25, "module-torch.distributed.optim.named_optimizer"], [25, "module-torch.distributed.optim.optimizer"], [25, "module-torch.distributed.optim.post_localSGD_optimizer"], [25, "module-torch.distributed.optim.utils"], [25, "module-torch.distributed.optim.zero_redundancy_optimizer"], [25, "module-torch.distributed.pipeline"], [25, "module-torch.distributed.pipeline.sync"], [25, "module-torch.distributed.pipeline.sync.batchnorm"], [25, "module-torch.distributed.pipeline.sync.checkpoint"], [25, "module-torch.distributed.pipeline.sync.copy"], [25, "module-torch.distributed.pipeline.sync.dependency"], [25, "module-torch.distributed.pipeline.sync.microbatch"], [25, "module-torch.distributed.pipeline.sync.phony"], [25, "module-torch.distributed.pipeline.sync.pipe"], [25, "module-torch.distributed.pipeline.sync.pipeline"], [25, "module-torch.distributed.pipeline.sync.skip"], [25, "module-torch.distributed.pipeline.sync.skip.layout"], [25, "module-torch.distributed.pipeline.sync.skip.namespace"], [25, "module-torch.distributed.pipeline.sync.skip.portal"], [25, "module-torch.distributed.pipeline.sync.skip.skippable"], [25, "module-torch.distributed.pipeline.sync.skip.tracker"], [25, "module-torch.distributed.pipeline.sync.stream"], [25, "module-torch.distributed.pipeline.sync.utils"], [25, "module-torch.distributed.pipeline.sync.worker"], [25, "module-torch.distributed.remote_device"], [25, "module-torch.distributed.rendezvous"], [25, "module-torch.distributed.rpc.api"], [25, "module-torch.distributed.rpc.backend_registry"], [25, "module-torch.distributed.rpc.constants"], [25, "module-torch.distributed.rpc.functions"], [25, "module-torch.distributed.rpc.internal"], [25, "module-torch.distributed.rpc.options"], [25, "module-torch.distributed.rpc.rref_proxy"], [25, "module-torch.distributed.rpc.server_process_global_profiler"], [25, "module-torch.distributed.tensor"], [25, "module-torch.distributed.tensor.parallel.api"], [25, "module-torch.distributed.tensor.parallel.ddp"], [25, "module-torch.distributed.tensor.parallel.fsdp"], [25, "module-torch.distributed.tensor.parallel.input_reshard"], [25, "module-torch.distributed.tensor.parallel.style"], [25, "module-torch.distributed.utils"], [27, "module-torch.distributed.checkpoint"], [29, "module-torch.distributed.optim"], [30, "module-torch.distributed.tensor.parallel"], [31, "module-torch.distributions"], [31, "module-torch.distributions.bernoulli"], [31, "module-torch.distributions.beta"], [31, "module-torch.distributions.binomial"], [31, "module-torch.distributions.categorical"], [31, "module-torch.distributions.cauchy"], [31, "module-torch.distributions.chi2"], [31, "module-torch.distributions.constraint_registry"], [31, "module-torch.distributions.constraints"], [31, "module-torch.distributions.continuous_bernoulli"], [31, "module-torch.distributions.dirichlet"], [31, "module-torch.distributions.distribution"], [31, "module-torch.distributions.exp_family"], [31, "module-torch.distributions.exponential"], [31, "module-torch.distributions.fishersnedecor"], [31, "module-torch.distributions.gamma"], [31, "module-torch.distributions.geometric"], [31, "module-torch.distributions.gumbel"], [31, "module-torch.distributions.half_cauchy"], [31, "module-torch.distributions.half_normal"], [31, "module-torch.distributions.independent"], [31, "module-torch.distributions.inverse_gamma"], [31, "module-torch.distributions.kl"], [31, "module-torch.distributions.kumaraswamy"], [31, "module-torch.distributions.laplace"], [31, "module-torch.distributions.lkj_cholesky"], [31, "module-torch.distributions.log_normal"], [31, "module-torch.distributions.logistic_normal"], [31, "module-torch.distributions.lowrank_multivariate_normal"], [31, "module-torch.distributions.mixture_same_family"], [31, "module-torch.distributions.multinomial"], [31, "module-torch.distributions.multivariate_normal"], [31, "module-torch.distributions.negative_binomial"], [31, "module-torch.distributions.normal"], [31, "module-torch.distributions.one_hot_categorical"], [31, "module-torch.distributions.pareto"], [31, "module-torch.distributions.poisson"], [31, "module-torch.distributions.relaxed_bernoulli"], [31, "module-torch.distributions.relaxed_categorical"], [31, "module-torch.distributions.studentT"], [31, "module-torch.distributions.transformed_distribution"], [31, "module-torch.distributions.transforms"], [31, "module-torch.distributions.uniform"], [31, "module-torch.distributions.utils"], [31, "module-torch.distributions.von_mises"], [31, "module-torch.distributions.weibull"], [31, "module-torch.distributions.wishart"], [33, "module-torch.distributed.elastic.agent"], [33, "module-torch.distributed.elastic.agent.server"], [35, "module-torch.distributed.elastic.multiprocessing.errors"], [36, "module-torch.distributed.elastic.events"], [39, "module-torch.distributed.elastic.metrics"], [40, "module-torch.distributed.elastic.multiprocessing"], [42, "module-torch.distributed.elastic.rendezvous"], [42, "module-torch.distributed.elastic.rendezvous.registry"], [43, "module-torch.distributed.run"], [44, "module-torch.distributed.elastic.timer"], [46, "module-torch.export"], [46, "module-torch.export.custom_obj"], [46, "module-torch.export.dynamic_shapes"], [46, "module-torch.export.exported_program"], [46, "module-torch.export.graph_signature"], [46, "module-torch.export.unflatten"], [46, "module-torch.export.wrapper"], [48, "module-torch.fft"], [49, "module-torch.distributed.fsdp"], [51, "module-torch.func"], [56, "module-torch.__future__"], [57, "module-torch.futures"], [58, "module-torch.fx"], [58, "module-torch.fx.annotate"], [58, "module-torch.fx.config"], [58, "module-torch.fx.experimental"], [58, "module-torch.fx.experimental.accelerator_partitioner"], [58, "module-torch.fx.experimental.const_fold"], [58, "module-torch.fx.experimental.debug"], [58, "module-torch.fx.experimental.graph_gradual_typechecker"], [58, "module-torch.fx.experimental.merge_matmul"], [58, "module-torch.fx.experimental.meta_tracer"], [58, "module-torch.fx.experimental.migrate_gradual_types"], [58, "module-torch.fx.experimental.migrate_gradual_types.constraint"], [58, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"], [58, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"], [58, "module-torch.fx.experimental.migrate_gradual_types.operation"], [58, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"], [58, "module-torch.fx.experimental.migrate_gradual_types.util"], [58, "module-torch.fx.experimental.migrate_gradual_types.z3_types"], [58, "module-torch.fx.experimental.normalize"], [58, "module-torch.fx.experimental.optimization"], [58, "module-torch.fx.experimental.partitioner_utils"], [58, "module-torch.fx.experimental.proxy_tensor"], [58, "module-torch.fx.experimental.recording"], [58, "module-torch.fx.experimental.refinement_types"], [58, "module-torch.fx.experimental.rewriter"], [58, "module-torch.fx.experimental.schema_type_annotation"], [58, "module-torch.fx.experimental.sym_node"], [58, "module-torch.fx.experimental.unification"], [58, "module-torch.fx.experimental.unification.core"], [58, "module-torch.fx.experimental.unification.dispatch"], [58, "module-torch.fx.experimental.unification.match"], [58, "module-torch.fx.experimental.unification.more"], [58, "module-torch.fx.experimental.unification.multipledispatch"], [58, "module-torch.fx.experimental.unification.multipledispatch.conflict"], [58, "module-torch.fx.experimental.unification.multipledispatch.core"], [58, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"], [58, "module-torch.fx.experimental.unification.multipledispatch.utils"], [58, "module-torch.fx.experimental.unification.multipledispatch.variadic"], [58, "module-torch.fx.experimental.unification.unification_tools"], [58, "module-torch.fx.experimental.unification.utils"], [58, "module-torch.fx.experimental.unification.variable"], [58, "module-torch.fx.experimental.unify_refinements"], [58, "module-torch.fx.experimental.validator"], [58, "module-torch.fx.graph"], [58, "module-torch.fx.graph_module"], [58, "module-torch.fx.immutable_collections"], [58, "module-torch.fx.interpreter"], [58, "module-torch.fx.node"], [58, "module-torch.fx.operator_schemas"], [58, "module-torch.fx.passes"], [58, "module-torch.fx.passes.annotate_getitem_nodes"], [58, "module-torch.fx.passes.backends"], [58, "module-torch.fx.passes.backends.cudagraphs"], [58, "module-torch.fx.passes.dialect"], [58, "module-torch.fx.passes.dialect.common"], [58, "module-torch.fx.passes.dialect.common.cse_pass"], [58, "module-torch.fx.passes.fake_tensor_prop"], [58, "module-torch.fx.passes.graph_drawer"], [58, "module-torch.fx.passes.graph_manipulation"], [58, "module-torch.fx.passes.infra"], [58, "module-torch.fx.passes.infra.partitioner"], [58, "module-torch.fx.passes.infra.pass_base"], [58, "module-torch.fx.passes.infra.pass_manager"], [58, "module-torch.fx.passes.net_min_base"], [58, "module-torch.fx.passes.operator_support"], [58, "module-torch.fx.passes.param_fetch"], [58, "module-torch.fx.passes.pass_manager"], [58, "module-torch.fx.passes.reinplace"], [58, "module-torch.fx.passes.shape_prop"], [58, "module-torch.fx.passes.split_module"], [58, "module-torch.fx.passes.split_utils"], [58, "module-torch.fx.passes.splitter_base"], [58, "module-torch.fx.passes.tests"], [58, "module-torch.fx.passes.tests.test_pass_manager"], [58, "module-torch.fx.passes.tools_common"], [58, "module-torch.fx.passes.utils"], [58, "module-torch.fx.passes.utils.common"], [58, "module-torch.fx.passes.utils.fuser_utils"], [58, "module-torch.fx.passes.utils.matcher_utils"], [58, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"], [58, "module-torch.fx.passes.utils.source_matcher_utils"], [58, "module-torch.fx.proxy"], [58, "module-torch.fx.subgraph_rewriter"], [58, "module-torch.fx.tensor_type"], [58, "module-torch.fx.traceback"], [59, "module-torch.fx.experimental.symbolic_shapes"], [1959, "module-torch.hub"], [1961, "module-torch.jit"], [1961, "module-torch.jit.annotations"], [1961, "module-torch.jit.frontend"], [1961, "module-torch.jit.generate_bytecode"], [1961, "module-torch.jit.mobile"], [1961, "module-torch.jit.quantized"], [1962, "module-torch.jit.supported_ops"], [1966, "module-torch.jit.unsupported_tensor_ops"], [1967, "module-torch.utils.jit"], [1968, "module-torch.library"], [1969, "module-torch.linalg"], [1970, "module-torch._logging"], [1971, "module-torch.masked"], [1971, "module-torch.masked.maskedtensor"], [1971, "module-torch.masked.maskedtensor.binary"], [1971, "module-torch.masked.maskedtensor.core"], [1971, "module-torch.masked.maskedtensor.creation"], [1971, "module-torch.masked.maskedtensor.passthrough"], [1971, "module-torch.masked.maskedtensor.reductions"], [1971, "module-torch.masked.maskedtensor.unary"], [1974, "module-torch.utils.model_zoo"], [1975, "module-torch.monitor"], [1976, "module-torch.mps"], [1976, "module-torch.mps.event"], [1976, "module-torch.mps.profiler"], [1977, "module-torch.multiprocessing"], [1977, "module-torch.multiprocessing.pool"], [1977, "module-torch.multiprocessing.queue"], [1977, "module-torch.multiprocessing.reductions"], [1977, "module-torch.multiprocessing.spawn"], [1980, "module-torch.nested"], [1981, "module-torch.nn"], [1981, "module-torch.nn.backends"], [1981, "module-torch.nn.backends.thnn"], [1981, "module-torch.nn.common_types"], [1981, "module-torch.nn.cpp"], [1981, "module-torch.nn.functional"], [1981, "module-torch.nn.grad"], [1981, "module-torch.nn.init"], [1981, "module-torch.nn.modules"], [1981, "module-torch.nn.modules.activation"], [1981, "module-torch.nn.modules.adaptive"], [1981, "module-torch.nn.modules.batchnorm"], [1981, "module-torch.nn.modules.channelshuffle"], [1981, "module-torch.nn.modules.container"], [1981, "module-torch.nn.modules.conv"], [1981, "module-torch.nn.modules.distance"], [1981, "module-torch.nn.modules.dropout"], [1981, "module-torch.nn.modules.flatten"], [1981, "module-torch.nn.modules.fold"], [1981, "module-torch.nn.modules.instancenorm"], [1981, "module-torch.nn.modules.lazy"], [1981, "module-torch.nn.modules.linear"], [1981, "module-torch.nn.modules.loss"], [1981, "module-torch.nn.modules.module"], [1981, "module-torch.nn.modules.normalization"], [1981, "module-torch.nn.modules.padding"], [1981, "module-torch.nn.modules.pixelshuffle"], [1981, "module-torch.nn.modules.pooling"], [1981, "module-torch.nn.modules.rnn"], [1981, "module-torch.nn.modules.sparse"], [1981, "module-torch.nn.modules.transformer"], [1981, "module-torch.nn.modules.upsampling"], [1981, "module-torch.nn.modules.utils"], [1981, "module-torch.nn.parallel"], [1981, "module-torch.nn.parallel.comm"], [1981, "module-torch.nn.parallel.data_parallel"], [1981, "module-torch.nn.parallel.distributed"], [1981, "module-torch.nn.parallel.parallel_apply"], [1981, "module-torch.nn.parallel.replicate"], [1981, "module-torch.nn.parallel.scatter_gather"], [1981, "module-torch.nn.parameter"], [1981, "module-torch.nn.utils"], [1981, "module-torch.nn.utils.clip_grad"], [1981, "module-torch.nn.utils.convert_parameters"], [1981, "module-torch.nn.utils.fusion"], [1981, "module-torch.nn.utils.init"], [1981, "module-torch.nn.utils.memory_format"], [1981, "module-torch.nn.utils.parametrizations"], [1981, "module-torch.nn.utils.parametrize"], [1981, "module-torch.nn.utils.prune"], [1981, "module-torch.nn.utils.rnn"], [1981, "module-torch.nn.utils.spectral_norm"], [1981, "module-torch.nn.utils.stateless"], [1981, "module-torch.nn.utils.weight_norm"], [1982, "module-torch.nn.attention"], [1983, "module-torch.nn.attention.bias"], [2006, "module-torch.onnx.errors"], [2006, "module-torch.onnx.operators"], [2006, "module-torch.onnx.symbolic_caffe2"], [2006, "module-torch.onnx.symbolic_helper"], [2006, "module-torch.onnx.symbolic_opset10"], [2006, "module-torch.onnx.symbolic_opset11"], [2006, "module-torch.onnx.symbolic_opset12"], [2006, "module-torch.onnx.symbolic_opset13"], [2006, "module-torch.onnx.symbolic_opset14"], [2006, "module-torch.onnx.symbolic_opset15"], [2006, "module-torch.onnx.symbolic_opset16"], [2006, "module-torch.onnx.symbolic_opset17"], [2006, "module-torch.onnx.symbolic_opset18"], [2006, "module-torch.onnx.symbolic_opset7"], [2006, "module-torch.onnx.symbolic_opset8"], [2006, "module-torch.onnx.symbolic_opset9"], [2006, "module-torch.onnx.utils"], [2006, "module-torch.onnx.verification"], [2009, "module-torch.onnx"], [2011, "module-torch.optim"], [2011, "module-torch.optim.adadelta"], [2011, "module-torch.optim.adagrad"], [2011, "module-torch.optim.adam"], [2011, "module-torch.optim.adamax"], [2011, "module-torch.optim.adamw"], [2011, "module-torch.optim.asgd"], [2011, "module-torch.optim.lbfgs"], [2011, "module-torch.optim.lr_scheduler"], [2011, "module-torch.optim.nadam"], [2011, "module-torch.optim.optimizer"], [2011, "module-torch.optim.radam"], [2011, "module-torch.optim.rmsprop"], [2011, "module-torch.optim.rprop"], [2011, "module-torch.optim.sgd"], [2011, "module-torch.optim.sparse_adam"], [2011, "module-torch.optim.swa_utils"], [2012, "module-torch.package"], [2012, "module-torch.package.analyze"], [2012, "module-torch.package.analyze.find_first_use_of_broken_modules"], [2012, "module-torch.package.analyze.is_from_package"], [2012, "module-torch.package.analyze.trace_dependencies"], [2012, "module-torch.package.file_structure_representation"], [2012, "module-torch.package.find_file_dependencies"], [2012, "module-torch.package.glob_group"], [2012, "module-torch.package.importer"], [2012, "module-torch.package.package_exporter"], [2012, "module-torch.package.package_importer"], [2014, "module-torch.profiler"], [2014, "module-torch.profiler.itt"], [2014, "module-torch.profiler.profiler"], [2014, "module-torch.profiler.python_tracer"], [2015, "module-torch.ao"], [2015, "module-torch.ao.nn"], [2015, "module-torch.ao.nn.intrinsic.modules.fused"], [2015, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"], [2015, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"], [2015, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"], [2015, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [2015, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"], [2015, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"], [2015, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"], [2015, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"], [2015, "module-torch.ao.nn.qat.dynamic.modules.linear"], [2015, "module-torch.ao.nn.qat.modules.conv"], [2015, "module-torch.ao.nn.qat.modules.embedding_ops"], [2015, "module-torch.ao.nn.qat.modules.linear"], [2015, "module-torch.ao.nn.quantizable"], [2015, "module-torch.ao.nn.quantizable.modules"], [2015, "module-torch.ao.nn.quantizable.modules.activation"], [2015, "module-torch.ao.nn.quantizable.modules.rnn"], [2015, "module-torch.ao.nn.quantized"], [2015, "module-torch.ao.nn.quantized.dynamic.modules.conv"], [2015, "module-torch.ao.nn.quantized.dynamic.modules.linear"], [2015, "module-torch.ao.nn.quantized.dynamic.modules.rnn"], [2015, "module-torch.ao.nn.quantized.modules.activation"], [2015, "module-torch.ao.nn.quantized.modules.batchnorm"], [2015, "module-torch.ao.nn.quantized.modules.conv"], [2015, "module-torch.ao.nn.quantized.modules.dropout"], [2015, "module-torch.ao.nn.quantized.modules.embedding_ops"], [2015, "module-torch.ao.nn.quantized.modules.functional_modules"], [2015, "module-torch.ao.nn.quantized.modules.linear"], [2015, "module-torch.ao.nn.quantized.modules.normalization"], [2015, "module-torch.ao.nn.quantized.modules.rnn"], [2015, "module-torch.ao.nn.quantized.modules.utils"], [2015, "module-torch.ao.nn.quantized.reference"], [2015, "module-torch.ao.nn.quantized.reference.modules"], [2015, "module-torch.ao.nn.quantized.reference.modules.conv"], [2015, "module-torch.ao.nn.quantized.reference.modules.linear"], [2015, "module-torch.ao.nn.quantized.reference.modules.rnn"], [2015, "module-torch.ao.nn.quantized.reference.modules.sparse"], [2015, "module-torch.ao.nn.quantized.reference.modules.utils"], [2015, "module-torch.ao.nn.sparse"], [2015, "module-torch.ao.nn.sparse.quantized"], [2015, "module-torch.ao.nn.sparse.quantized.dynamic"], [2015, "module-torch.ao.nn.sparse.quantized.dynamic.linear"], [2015, "module-torch.ao.nn.sparse.quantized.linear"], [2015, "module-torch.ao.nn.sparse.quantized.utils"], [2015, "module-torch.ao.ns"], [2015, "module-torch.ao.ns.fx"], [2015, "module-torch.ao.ns.fx.graph_matcher"], [2015, "module-torch.ao.ns.fx.graph_passes"], [2015, "module-torch.ao.ns.fx.mappings"], [2015, "module-torch.ao.ns.fx.n_shadows_utils"], [2015, "module-torch.ao.ns.fx.ns_types"], [2015, "module-torch.ao.ns.fx.pattern_utils"], [2015, "module-torch.ao.ns.fx.qconfig_multi_mapping"], [2015, "module-torch.ao.ns.fx.utils"], [2015, "module-torch.ao.ns.fx.weight_utils"], [2015, "module-torch.ao.pruning"], [2015, "module-torch.ao.pruning.scheduler"], [2015, "module-torch.ao.pruning.scheduler.base_scheduler"], [2015, "module-torch.ao.pruning.scheduler.cubic_scheduler"], [2015, "module-torch.ao.pruning.scheduler.lambda_scheduler"], [2015, "module-torch.ao.pruning.sparsifier"], [2015, "module-torch.ao.pruning.sparsifier.base_sparsifier"], [2015, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"], [2015, "module-torch.ao.pruning.sparsifier.utils"], [2015, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"], [2015, "module-torch.ao.quantization"], [2015, "module-torch.ao.quantization.backend_config"], [2015, "module-torch.ao.quantization.backend_config.backend_config"], [2015, "module-torch.ao.quantization.backend_config.executorch"], [2015, "module-torch.ao.quantization.backend_config.fbgemm"], [2015, "module-torch.ao.quantization.backend_config.native"], [2015, "module-torch.ao.quantization.backend_config.observation_type"], [2015, "module-torch.ao.quantization.backend_config.onednn"], [2015, "module-torch.ao.quantization.backend_config.qnnpack"], [2015, "module-torch.ao.quantization.backend_config.tensorrt"], [2015, "module-torch.ao.quantization.backend_config.utils"], [2015, "module-torch.ao.quantization.backend_config.x86"], [2015, "module-torch.ao.quantization.fake_quantize"], [2015, "module-torch.ao.quantization.fuse_modules"], [2015, "module-torch.ao.quantization.fuser_method_mappings"], [2015, "module-torch.ao.quantization.fx"], [2015, "module-torch.ao.quantization.fx.convert"], [2015, "module-torch.ao.quantization.fx.custom_config"], [2015, "module-torch.ao.quantization.fx.fuse"], [2015, "module-torch.ao.quantization.fx.fuse_handler"], [2015, "module-torch.ao.quantization.fx.graph_module"], [2015, "module-torch.ao.quantization.fx.lower_to_fbgemm"], [2015, "module-torch.ao.quantization.fx.lower_to_qnnpack"], [2015, "module-torch.ao.quantization.fx.lstm_utils"], [2015, "module-torch.ao.quantization.fx.match_utils"], [2015, "module-torch.ao.quantization.fx.pattern_utils"], [2015, "module-torch.ao.quantization.fx.prepare"], [2015, "module-torch.ao.quantization.fx.qconfig_mapping_utils"], [2015, "module-torch.ao.quantization.fx.quantize_handler"], [2015, "module-torch.ao.quantization.fx.tracer"], [2015, "module-torch.ao.quantization.fx.utils"], [2015, "module-torch.ao.quantization.observer"], [2015, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"], [2015, "module-torch.ao.quantization.pt2e.export_utils"], [2015, "module-torch.ao.quantization.pt2e.graph_utils"], [2015, "module-torch.ao.quantization.pt2e.port_metadata_pass"], [2015, "module-torch.ao.quantization.pt2e.prepare"], [2015, "module-torch.ao.quantization.pt2e.qat_utils"], [2015, "module-torch.ao.quantization.pt2e.representation.rewrite"], [2015, "module-torch.ao.quantization.pt2e.utils"], [2015, "module-torch.ao.quantization.qconfig"], [2015, "module-torch.ao.quantization.qconfig_mapping"], [2015, "module-torch.ao.quantization.quant_type"], [2015, "module-torch.ao.quantization.quantization_mappings"], [2015, "module-torch.ao.quantization.quantize"], [2015, "module-torch.ao.quantization.quantize_fx"], [2015, "module-torch.ao.quantization.quantize_jit"], [2015, "module-torch.ao.quantization.quantize_pt2e"], [2015, "module-torch.ao.quantization.quantizer.composable_quantizer"], [2015, "module-torch.ao.quantization.quantizer.embedding_quantizer"], [2015, "module-torch.ao.quantization.quantizer.quantizer"], [2015, "module-torch.ao.quantization.quantizer.utils"], [2015, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"], [2015, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"], [2015, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"], [2015, "module-torch.ao.quantization.stubs"], [2015, "module-torch.ao.quantization.utils"], [2015, "module-torch.nn.intrinsic.modules.fused"], [2015, "module-torch.nn.intrinsic.qat.modules.conv_fused"], [2015, "module-torch.nn.intrinsic.qat.modules.linear_fused"], [2015, "module-torch.nn.intrinsic.qat.modules.linear_relu"], [2015, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [2015, "module-torch.nn.intrinsic.quantized.modules.bn_relu"], [2015, "module-torch.nn.intrinsic.quantized.modules.conv_relu"], [2015, "module-torch.nn.intrinsic.quantized.modules.linear_relu"], [2015, "module-torch.nn.qat.dynamic.modules.linear"], [2015, "module-torch.nn.qat.modules.conv"], [2015, "module-torch.nn.qat.modules.embedding_ops"], [2015, "module-torch.nn.qat.modules.linear"], [2015, "module-torch.nn.quantizable.modules.activation"], [2015, "module-torch.nn.quantizable.modules.rnn"], [2015, "module-torch.nn.quantized.dynamic.modules.conv"], [2015, "module-torch.nn.quantized.dynamic.modules.linear"], [2015, "module-torch.nn.quantized.dynamic.modules.rnn"], [2015, "module-torch.nn.quantized.functional"], [2015, "module-torch.nn.quantized.modules.activation"], [2015, "module-torch.nn.quantized.modules.batchnorm"], [2015, "module-torch.nn.quantized.modules.conv"], [2015, "module-torch.nn.quantized.modules.dropout"], [2015, "module-torch.nn.quantized.modules.embedding_ops"], [2015, "module-torch.nn.quantized.modules.functional_modules"], [2015, "module-torch.nn.quantized.modules.linear"], [2015, "module-torch.nn.quantized.modules.normalization"], [2015, "module-torch.nn.quantized.modules.rnn"], [2015, "module-torch.nn.quantized.modules.utils"], [2015, "module-torch.quantization.fake_quantize"], [2015, "module-torch.quantization.fuse_modules"], [2015, "module-torch.quantization.fuser_method_mappings"], [2015, "module-torch.quantization.fx.convert"], [2015, "module-torch.quantization.fx.fuse"], [2015, "module-torch.quantization.fx.fusion_patterns"], [2015, "module-torch.quantization.fx.graph_module"], [2015, "module-torch.quantization.fx.match_utils"], [2015, "module-torch.quantization.fx.pattern_utils"], [2015, "module-torch.quantization.fx.prepare"], [2015, "module-torch.quantization.fx.quantization_patterns"], [2015, "module-torch.quantization.fx.quantization_types"], [2015, "module-torch.quantization.fx.utils"], [2015, "module-torch.quantization.observer"], [2015, "module-torch.quantization.qconfig"], [2015, "module-torch.quantization.quant_type"], [2015, "module-torch.quantization.quantization_mappings"], [2015, "module-torch.quantization.quantize"], [2015, "module-torch.quantization.quantize_fx"], [2015, "module-torch.quantization.quantize_jit"], [2015, "module-torch.quantization.stubs"], [2015, "module-torch.quantization.utils"], [2018, "module-torch.ao.nn.intrinsic"], [2018, "module-torch.ao.nn.intrinsic.modules"], [2018, "module-torch.ao.nn.intrinsic.qat"], [2018, "module-torch.ao.nn.intrinsic.qat.modules"], [2018, "module-torch.ao.nn.intrinsic.quantized"], [2018, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [2018, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [2018, "module-torch.ao.nn.intrinsic.quantized.modules"], [2018, "module-torch.ao.nn.qat"], [2018, "module-torch.ao.nn.qat.dynamic"], [2018, "module-torch.ao.nn.qat.dynamic.modules"], [2018, "module-torch.ao.nn.qat.modules"], [2018, "module-torch.ao.nn.quantized.dynamic"], [2018, "module-torch.ao.nn.quantized.dynamic.modules"], [2018, "module-torch.ao.nn.quantized.functional"], [2018, "module-torch.ao.nn.quantized.modules"], [2018, "module-torch.ao.quantization.pt2e"], [2018, "module-torch.ao.quantization.pt2e.generate_numeric_debug_handle"], [2018, "module-torch.ao.quantization.pt2e.representation"], [2018, "module-torch.ao.quantization.quantizer"], [2018, "module-torch.nn.intrinsic"], [2018, "module-torch.nn.intrinsic.modules"], [2018, "module-torch.nn.intrinsic.qat"], [2018, "module-torch.nn.intrinsic.qat.modules"], [2018, "module-torch.nn.intrinsic.quantized"], [2018, "module-torch.nn.intrinsic.quantized.dynamic"], [2018, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [2018, "module-torch.nn.intrinsic.quantized.modules"], [2018, "module-torch.nn.qat"], [2018, "module-torch.nn.qat.dynamic"], [2018, "module-torch.nn.qat.dynamic.modules"], [2018, "module-torch.nn.qat.modules"], [2018, "module-torch.nn.quantizable"], [2018, "module-torch.nn.quantizable.modules"], [2018, "module-torch.nn.quantized"], [2018, "module-torch.nn.quantized.dynamic"], [2018, "module-torch.nn.quantized.dynamic.modules"], [2018, "module-torch.nn.quantized.modules"], [2018, "module-torch.quantization"], [2018, "module-torch.quantization.fx"], [2019, "module-torch.random"], [2020, "module-torch.distributed.autograd"], [2020, "module-torch.distributed.rpc"], [2023, "module-torch.signal"], [2023, "module-torch.signal.windows"], [2024, "module-torch.sparse"], [2025, "module-torch.special"], [2029, "module-torch.utils.tensorboard"], [2031, "module-torch.testing"], [2032, "module-torch"], [2032, "module-torch.contrib"], [2032, "module-torch.functional"], [2032, "module-torch.quasirandom"], [2032, "module-torch.return_types"], [2032, "module-torch.serialization"], [2032, "module-torch.signal.windows.windows"], [2032, "module-torch.sparse.semi_structured"], [2032, "module-torch.storage"], [2032, "module-torch.torch_version"], [2032, "module-torch.types"], [2032, "module-torch.utils.backcompat"], [2032, "module-torch.utils.hipify"], [2032, "module-torch.utils.model_dump"], [2032, "module-torch.utils.viz"], [2032, "module-torch.version"], [2033, "module-torch.ao.ns._numeric_suite"], [2034, "module-torch.ao.ns._numeric_suite_fx"], [2037, "module-torch.compiler"], [2055, "module-torch.overrides"], [2058, "module-torch.utils"], [2058, "module-torch.utils.backend_registration"], [2058, "module-torch.utils.benchmark.examples.blas_compare_setup"], [2058, "module-torch.utils.benchmark.examples.compare"], [2058, "module-torch.utils.benchmark.examples.fuzzer"], [2058, "module-torch.utils.benchmark.examples.op_benchmark"], [2058, "module-torch.utils.benchmark.examples.simple_timeit"], [2058, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"], [2058, "module-torch.utils.benchmark.op_fuzzers.binary"], [2058, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"], [2058, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"], [2058, "module-torch.utils.benchmark.op_fuzzers.spectral"], [2058, "module-torch.utils.benchmark.op_fuzzers.unary"], [2058, "module-torch.utils.benchmark.utils.common"], [2058, "module-torch.utils.benchmark.utils.compare"], [2058, "module-torch.utils.benchmark.utils.compile"], [2058, "module-torch.utils.benchmark.utils.cpp_jit"], [2058, "module-torch.utils.benchmark.utils.fuzzer"], [2058, "module-torch.utils.benchmark.utils.sparse_fuzzer"], [2058, "module-torch.utils.benchmark.utils.timer"], [2058, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"], [2058, "module-torch.utils.bundled_inputs"], [2058, "module-torch.utils.checkpoint"], [2058, "module-torch.utils.collect_env"], [2058, "module-torch.utils.cpp_backtrace"], [2058, "module-torch.utils.cpp_extension"], [2058, "module-torch.utils.data.backward_compatibility"], [2058, "module-torch.utils.data.dataloader"], [2058, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"], [2058, "module-torch.utils.data.datapipes.dataframe.dataframes"], [2058, "module-torch.utils.data.datapipes.dataframe.datapipes"], [2058, "module-torch.utils.data.datapipes.dataframe.structures"], [2058, "module-torch.utils.data.datapipes.datapipe"], [2058, "module-torch.utils.data.datapipes.gen_pyi"], [2058, "module-torch.utils.data.datapipes.iter.callable"], [2058, "module-torch.utils.data.datapipes.iter.combinatorics"], [2058, "module-torch.utils.data.datapipes.iter.combining"], [2058, "module-torch.utils.data.datapipes.iter.filelister"], [2058, "module-torch.utils.data.datapipes.iter.fileopener"], [2058, "module-torch.utils.data.datapipes.iter.grouping"], [2058, "module-torch.utils.data.datapipes.iter.routeddecoder"], [2058, "module-torch.utils.data.datapipes.iter.selecting"], [2058, "module-torch.utils.data.datapipes.iter.sharding"], [2058, "module-torch.utils.data.datapipes.iter.streamreader"], [2058, "module-torch.utils.data.datapipes.iter.utils"], [2058, "module-torch.utils.data.datapipes.map.callable"], [2058, "module-torch.utils.data.datapipes.map.combinatorics"], [2058, "module-torch.utils.data.datapipes.map.combining"], [2058, "module-torch.utils.data.datapipes.map.grouping"], [2058, "module-torch.utils.data.datapipes.map.utils"], [2058, "module-torch.utils.data.datapipes.utils.common"], [2058, "module-torch.utils.data.datapipes.utils.decoder"], [2058, "module-torch.utils.data.datapipes.utils.snapshot"], [2058, "module-torch.utils.data.dataset"], [2058, "module-torch.utils.data.distributed"], [2058, "module-torch.utils.data.graph"], [2058, "module-torch.utils.data.graph_settings"], [2058, "module-torch.utils.data.sampler"], [2058, "module-torch.utils.dlpack"], [2058, "module-torch.utils.file_baton"], [2058, "module-torch.utils.flop_counter"], [2058, "module-torch.utils.hipify.constants"], [2058, "module-torch.utils.hipify.cuda_to_hip_mappings"], [2058, "module-torch.utils.hipify.hipify_python"], [2058, "module-torch.utils.hipify.version"], [2058, "module-torch.utils.hooks"], [2058, "module-torch.utils.jit.log_extract"], [2058, "module-torch.utils.mkldnn"], [2058, "module-torch.utils.mobile_optimizer"], [2058, "module-torch.utils.show_pickle"], [2058, "module-torch.utils.tensorboard.summary"], [2058, "module-torch.utils.tensorboard.writer"], [2058, "module-torch.utils.throughput_benchmark"], [2058, "module-torch.utils.weak"], [2059, "module-torch.xpu"], [2059, "module-torch.xpu.streams"]], "torch.amp": [[0, "module-torch.amp"]], "torch.amp.autocast_mode": [[0, "module-torch.amp.autocast_mode"]], "torch.amp.grad_scaler": [[0, "module-torch.amp.grad_scaler"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cpu.amp.autocast_mode": [[0, "module-torch.cpu.amp.autocast_mode"]], "torch.cpu.amp.grad_scaler": [[0, "module-torch.cpu.amp.grad_scaler"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "torch.cuda.amp.autocast_mode": [[0, "module-torch.cuda.amp.autocast_mode"]], "torch.cuda.amp.common": [[0, "module-torch.cuda.amp.common"]], "torch.cuda.amp.grad_scaler": [[0, "module-torch.cuda.amp.grad_scaler"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "gradientedge (class in torch.autograd.graph)": [[1, "torch.autograd.graph.GradientEdge"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "get_gradient_edge() (in module torch.autograd.graph)": [[1, "torch.autograd.graph.get_gradient_edge"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "torch.autograd.anomaly_mode": [[1, "module-torch.autograd.anomaly_mode"]], "torch.autograd.forward_ad": [[1, "module-torch.autograd.forward_ad"]], "torch.autograd.function": [[1, "module-torch.autograd.function"]], "torch.autograd.functional": [[1, "module-torch.autograd.functional"]], "torch.autograd.grad_mode": [[1, "module-torch.autograd.grad_mode"]], "torch.autograd.gradcheck": [[1, "module-torch.autograd.gradcheck"]], "torch.autograd.graph": [[1, "module-torch.autograd.graph"]], "torch.autograd.profiler": [[1, "module-torch.autograd.profiler"]], "torch.autograd.profiler_legacy": [[1, "module-torch.autograd.profiler_legacy"]], "torch.autograd.profiler_util": [[1, "module-torch.autograd.profiler_util"]], "torch.autograd.variable": [[1, "module-torch.autograd.variable"]], "sdpaparams (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPAParams"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "can_use_efficient_attention() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.can_use_efficient_attention"]], "can_use_flash_attention() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.can_use_flash_attention"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cudnn_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cudnn_sdp_enabled"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_cudnn_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_cudnn_sdp"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flags() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.flags"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_fastpath_enabled() (in module torch.backends.mha)": [[2, "torch.backends.mha.get_fastpath_enabled"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "set_fastpath_enabled() (in module torch.backends.mha)": [[2, "torch.backends.mha.set_fastpath_enabled"]], "set_flags() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.set_flags"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.cudnn.rnn": [[2, "module-torch.backends.cudnn.rnn"]], "torch.backends.mha": [[2, "module-torch.backends.mha"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.nnpack": [[2, "module-torch.backends.nnpack"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xeon.run_cpu": [[2, "module-torch.backends.xeon.run_cpu"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "adaptive_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.adaptive_autorange"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "set_checkpoint_debug_enabled() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.set_checkpoint_debug_enabled"]], "cond() (in module torch._higher_order_ops.cond)": [[12, "torch._higher_order_ops.cond.cond"]], "parallel_info() (in module torch.__config__)": [[13, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[13, "torch.__config__.show"]], "torch.__config__": [[13, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[16, "module-torch.cpu"]], "torch.cuda": [[17, "module-torch.cuda"]], "torch.cuda.comm": [[17, "module-torch.cuda.comm"]], "torch.cuda.error": [[17, "module-torch.cuda.error"]], "torch.cuda.graphs": [[17, "module-torch.cuda.graphs"]], "torch.cuda.jiterator": [[17, "module-torch.cuda.jiterator"]], "torch.cuda.memory": [[17, "module-torch.cuda.memory"]], "torch.cuda.nccl": [[17, "module-torch.cuda.nccl"]], "torch.cuda.nvtx": [[17, "module-torch.cuda.nvtx"]], "torch.cuda.profiler": [[17, "module-torch.cuda.profiler"]], "torch.cuda.random": [[17, "module-torch.cuda.random"]], "torch.cuda.sparse": [[17, "module-torch.cuda.sparse"]], "torch.cuda.streams": [[17, "module-torch.cuda.streams"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[18, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[18, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[21, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[21, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[21, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[21, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[21, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[21, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[21, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[21, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[21, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[21, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[21, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[21, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[21, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[21, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[21, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[21, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[21, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[21, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[21, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[21, "torch.utils.data.random_split"]], "torch.utils.data": [[21, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[21, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[21, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[21, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[21, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[21, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[22, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[22, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[22, "torch.distributed.GradBucket.set_buffer"]], "fill_uninitialized_memory (in module torch.utils.deterministic)": [[24, "torch.utils.deterministic.fill_uninitialized_memory"]], "torch.utils.deterministic": [[24, "module-torch.utils.deterministic"]], "backend (class in torch.distributed)": [[25, "torch.distributed.Backend"]], "devicemesh (class in torch.distributed.device_mesh)": [[25, "torch.distributed.device_mesh.DeviceMesh"]], "distbackenderror (class in torch.distributed)": [[25, "torch.distributed.DistBackendError"]], "disterror (class in torch.distributed)": [[25, "torch.distributed.DistError"]], "distnetworkerror (class in torch.distributed)": [[25, "torch.distributed.DistNetworkError"]], "diststoreerror (class in torch.distributed)": [[25, "torch.distributed.DistStoreError"]], "filestore (class in torch.distributed)": [[25, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[25, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[25, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[25, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[25, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[25, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[25, "torch.distributed.TCPStore"]], "work (class in torch.distributed)": [[25, "torch.distributed.Work"]], "add() (in module torch.distributed.store)": [[25, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[25, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[25, "torch.distributed.all_gather_into_tensor"]], "all_gather_object() (in module torch.distributed)": [[25, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[25, "torch.distributed.all_reduce"]], "all_to_all() (in module torch.distributed)": [[25, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[25, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[25, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[25, "torch.distributed.batch_isend_irecv"]], "breakpoint() (in module torch.distributed)": [[25, "torch.distributed.breakpoint"]], "broadcast() (in module torch.distributed)": [[25, "torch.distributed.broadcast"]], "broadcast_object_list() (in module torch.distributed)": [[25, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[25, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[25, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[25, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[25, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[25, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[25, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[25, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[25, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[25, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[25, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[25, "torch.distributed.get_world_size"]], "init_device_mesh() (in module torch.distributed.device_mesh)": [[25, "torch.distributed.device_mesh.init_device_mesh"]], "init_process_group() (in module torch.distributed)": [[25, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[25, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[25, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[25, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[25, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[25, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[25, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[25, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[25, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[25, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[25, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[25, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[25, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[25, "torch.distributed.reduce"]], "reduce_op (class in torch.distributed)": [[25, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[25, "torch.distributed.reduce_scatter"]], "reduce_scatter_tensor() (in module torch.distributed)": [[25, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[25, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[25, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[25, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[25, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[25, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[25, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[25, "module-torch.distributed"]], "torch.distributed.algorithms": [[25, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.post_localsgd_hook": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks": [[25, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"]], "torch.distributed.algorithms.join": [[25, "module-torch.distributed.algorithms.join"]], "torch.distributed.algorithms.model_averaging": [[25, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.algorithms.model_averaging.averagers": [[25, "module-torch.distributed.algorithms.model_averaging.averagers"]], "torch.distributed.algorithms.model_averaging.hierarchical_model_averager": [[25, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"]], "torch.distributed.algorithms.model_averaging.utils": [[25, "module-torch.distributed.algorithms.model_averaging.utils"]], "torch.distributed.argparse_util": [[25, "module-torch.distributed.argparse_util"]], "torch.distributed.c10d_logger": [[25, "module-torch.distributed.c10d_logger"]], "torch.distributed.checkpoint.api": [[25, "module-torch.distributed.checkpoint.api"]], "torch.distributed.checkpoint.default_planner": [[25, "module-torch.distributed.checkpoint.default_planner"]], "torch.distributed.checkpoint.filesystem": [[25, "module-torch.distributed.checkpoint.filesystem"]], "torch.distributed.checkpoint.metadata": [[25, "module-torch.distributed.checkpoint.metadata"]], "torch.distributed.checkpoint.optimizer": [[25, "module-torch.distributed.checkpoint.optimizer"]], "torch.distributed.checkpoint.planner": [[25, "module-torch.distributed.checkpoint.planner"]], "torch.distributed.checkpoint.planner_helpers": [[25, "module-torch.distributed.checkpoint.planner_helpers"]], "torch.distributed.checkpoint.resharding": [[25, "module-torch.distributed.checkpoint.resharding"]], "torch.distributed.checkpoint.state_dict": [[25, "module-torch.distributed.checkpoint.state_dict"]], "torch.distributed.checkpoint.state_dict_loader": [[25, "module-torch.distributed.checkpoint.state_dict_loader"]], "torch.distributed.checkpoint.state_dict_saver": [[25, "module-torch.distributed.checkpoint.state_dict_saver"]], "torch.distributed.checkpoint.stateful": [[25, "module-torch.distributed.checkpoint.stateful"]], "torch.distributed.checkpoint.storage": [[25, "module-torch.distributed.checkpoint.storage"]], "torch.distributed.checkpoint.utils": [[25, "module-torch.distributed.checkpoint.utils"]], "torch.distributed.collective_utils": [[25, "module-torch.distributed.collective_utils"]], "torch.distributed.constants": [[25, "module-torch.distributed.constants"]], "torch.distributed.device_mesh": [[25, "module-torch.distributed.device_mesh"]], "torch.distributed.distributed_c10d": [[25, "module-torch.distributed.distributed_c10d"]], "torch.distributed.elastic": [[25, "module-torch.distributed.elastic"]], "torch.distributed.elastic.agent.server.api": [[25, "module-torch.distributed.elastic.agent.server.api"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[25, "module-torch.distributed.elastic.agent.server.local_elastic_agent"]], "torch.distributed.elastic.events.api": [[25, "module-torch.distributed.elastic.events.api"]], "torch.distributed.elastic.events.handlers": [[25, "module-torch.distributed.elastic.events.handlers"]], "torch.distributed.elastic.metrics.api": [[25, "module-torch.distributed.elastic.metrics.api"]], "torch.distributed.elastic.multiprocessing.api": [[25, "module-torch.distributed.elastic.multiprocessing.api"]], "torch.distributed.elastic.multiprocessing.errors.error_handler": [[25, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"]], "torch.distributed.elastic.multiprocessing.errors.handlers": [[25, "module-torch.distributed.elastic.multiprocessing.errors.handlers"]], "torch.distributed.elastic.multiprocessing.redirects": [[25, "module-torch.distributed.elastic.multiprocessing.redirects"]], "torch.distributed.elastic.multiprocessing.tail_log": [[25, "module-torch.distributed.elastic.multiprocessing.tail_log"]], "torch.distributed.elastic.rendezvous.api": [[25, "module-torch.distributed.elastic.rendezvous.api"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[25, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[25, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[25, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.etcd_server": [[25, "module-torch.distributed.elastic.rendezvous.etcd_server"]], "torch.distributed.elastic.rendezvous.etcd_store": [[25, "module-torch.distributed.elastic.rendezvous.etcd_store"]], "torch.distributed.elastic.rendezvous.static_tcp_rendezvous": [[25, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"]], "torch.distributed.elastic.rendezvous.utils": [[25, "module-torch.distributed.elastic.rendezvous.utils"]], "torch.distributed.elastic.timer.api": [[25, "module-torch.distributed.elastic.timer.api"]], "torch.distributed.elastic.timer.file_based_local_timer": [[25, "module-torch.distributed.elastic.timer.file_based_local_timer"]], "torch.distributed.elastic.timer.local_timer": [[25, "module-torch.distributed.elastic.timer.local_timer"]], "torch.distributed.elastic.utils": [[25, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.api": [[25, "module-torch.distributed.elastic.utils.api"]], "torch.distributed.elastic.utils.data": [[25, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.elastic.utils.data.cycling_iterator": [[25, "module-torch.distributed.elastic.utils.data.cycling_iterator"]], "torch.distributed.elastic.utils.data.elastic_distributed_sampler": [[25, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"]], "torch.distributed.elastic.utils.distributed": [[25, "module-torch.distributed.elastic.utils.distributed"]], "torch.distributed.elastic.utils.log_level": [[25, "module-torch.distributed.elastic.utils.log_level"]], "torch.distributed.elastic.utils.logging": [[25, "module-torch.distributed.elastic.utils.logging"]], "torch.distributed.elastic.utils.store": [[25, "module-torch.distributed.elastic.utils.store"]], "torch.distributed.fsdp.api": [[25, "module-torch.distributed.fsdp.api"]], "torch.distributed.fsdp.fully_sharded_data_parallel": [[25, "module-torch.distributed.fsdp.fully_sharded_data_parallel"]], "torch.distributed.fsdp.sharded_grad_scaler": [[25, "module-torch.distributed.fsdp.sharded_grad_scaler"]], "torch.distributed.fsdp.wrap": [[25, "module-torch.distributed.fsdp.wrap"]], "torch.distributed.launch": [[25, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[25, "module-torch.distributed.launcher"]], "torch.distributed.launcher.api": [[25, "module-torch.distributed.launcher.api"]], "torch.distributed.logging_handlers": [[25, "module-torch.distributed.logging_handlers"]], "torch.distributed.nn": [[25, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[25, "module-torch.distributed.nn.api"]], "torch.distributed.nn.api.remote_module": [[25, "module-torch.distributed.nn.api.remote_module"]], "torch.distributed.nn.functional": [[25, "module-torch.distributed.nn.functional"]], "torch.distributed.nn.jit": [[25, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.instantiator": [[25, "module-torch.distributed.nn.jit.instantiator"]], "torch.distributed.nn.jit.templates": [[25, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.nn.jit.templates.remote_module_template": [[25, "module-torch.distributed.nn.jit.templates.remote_module_template"]], "torch.distributed.optim.apply_optimizer_in_backward": [[25, "module-torch.distributed.optim.apply_optimizer_in_backward"]], "torch.distributed.optim.functional_adadelta": [[25, "module-torch.distributed.optim.functional_adadelta"]], "torch.distributed.optim.functional_adagrad": [[25, "module-torch.distributed.optim.functional_adagrad"]], "torch.distributed.optim.functional_adam": [[25, "module-torch.distributed.optim.functional_adam"]], "torch.distributed.optim.functional_adamax": [[25, "module-torch.distributed.optim.functional_adamax"]], "torch.distributed.optim.functional_adamw": [[25, "module-torch.distributed.optim.functional_adamw"]], "torch.distributed.optim.functional_rmsprop": [[25, "module-torch.distributed.optim.functional_rmsprop"]], "torch.distributed.optim.functional_rprop": [[25, "module-torch.distributed.optim.functional_rprop"]], "torch.distributed.optim.functional_sgd": [[25, "module-torch.distributed.optim.functional_sgd"]], "torch.distributed.optim.named_optimizer": [[25, "module-torch.distributed.optim.named_optimizer"]], "torch.distributed.optim.optimizer": [[25, "module-torch.distributed.optim.optimizer"]], "torch.distributed.optim.post_localsgd_optimizer": [[25, "module-torch.distributed.optim.post_localSGD_optimizer"]], "torch.distributed.optim.utils": [[25, "module-torch.distributed.optim.utils"]], "torch.distributed.optim.zero_redundancy_optimizer": [[25, "module-torch.distributed.optim.zero_redundancy_optimizer"]], "torch.distributed.pipeline": [[25, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[25, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.batchnorm": [[25, "module-torch.distributed.pipeline.sync.batchnorm"]], "torch.distributed.pipeline.sync.checkpoint": [[25, "module-torch.distributed.pipeline.sync.checkpoint"]], "torch.distributed.pipeline.sync.copy": [[25, "module-torch.distributed.pipeline.sync.copy"]], "torch.distributed.pipeline.sync.dependency": [[25, "module-torch.distributed.pipeline.sync.dependency"]], "torch.distributed.pipeline.sync.microbatch": [[25, "module-torch.distributed.pipeline.sync.microbatch"]], "torch.distributed.pipeline.sync.phony": [[25, "module-torch.distributed.pipeline.sync.phony"]], "torch.distributed.pipeline.sync.pipe": [[25, "module-torch.distributed.pipeline.sync.pipe"]], "torch.distributed.pipeline.sync.pipeline": [[25, "module-torch.distributed.pipeline.sync.pipeline"]], "torch.distributed.pipeline.sync.skip": [[25, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.pipeline.sync.skip.layout": [[25, "module-torch.distributed.pipeline.sync.skip.layout"]], "torch.distributed.pipeline.sync.skip.namespace": [[25, "module-torch.distributed.pipeline.sync.skip.namespace"]], "torch.distributed.pipeline.sync.skip.portal": [[25, "module-torch.distributed.pipeline.sync.skip.portal"]], "torch.distributed.pipeline.sync.skip.skippable": [[25, "module-torch.distributed.pipeline.sync.skip.skippable"]], "torch.distributed.pipeline.sync.skip.tracker": [[25, "module-torch.distributed.pipeline.sync.skip.tracker"]], "torch.distributed.pipeline.sync.stream": [[25, "module-torch.distributed.pipeline.sync.stream"]], "torch.distributed.pipeline.sync.utils": [[25, "module-torch.distributed.pipeline.sync.utils"]], "torch.distributed.pipeline.sync.worker": [[25, "module-torch.distributed.pipeline.sync.worker"]], "torch.distributed.remote_device": [[25, "module-torch.distributed.remote_device"]], "torch.distributed.rendezvous": [[25, "module-torch.distributed.rendezvous"]], "torch.distributed.rpc.api": [[25, "module-torch.distributed.rpc.api"]], "torch.distributed.rpc.backend_registry": [[25, "module-torch.distributed.rpc.backend_registry"]], "torch.distributed.rpc.constants": [[25, "module-torch.distributed.rpc.constants"]], "torch.distributed.rpc.functions": [[25, "module-torch.distributed.rpc.functions"]], "torch.distributed.rpc.internal": [[25, "module-torch.distributed.rpc.internal"]], "torch.distributed.rpc.options": [[25, "module-torch.distributed.rpc.options"]], "torch.distributed.rpc.rref_proxy": [[25, "module-torch.distributed.rpc.rref_proxy"]], "torch.distributed.rpc.server_process_global_profiler": [[25, "module-torch.distributed.rpc.server_process_global_profiler"]], "torch.distributed.tensor": [[25, "module-torch.distributed.tensor"]], "torch.distributed.tensor.parallel.api": [[25, "module-torch.distributed.tensor.parallel.api"]], "torch.distributed.tensor.parallel.ddp": [[25, "module-torch.distributed.tensor.parallel.ddp"]], "torch.distributed.tensor.parallel.fsdp": [[25, "module-torch.distributed.tensor.parallel.fsdp"]], "torch.distributed.tensor.parallel.input_reshard": [[25, "module-torch.distributed.tensor.parallel.input_reshard"]], "torch.distributed.tensor.parallel.style": [[25, "module-torch.distributed.tensor.parallel.style"]], "torch.distributed.utils": [[25, "module-torch.distributed.utils"]], "wait() (in module torch.distributed.store)": [[25, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[26, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[26, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[26, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[26, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[26, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[26, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[26, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[26, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[26, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.SavePlanner"]], "statedictoptions (class in torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.StateDictOptions"]], "stateful (class in torch.distributed.checkpoint.stateful)": [[27, "torch.distributed.checkpoint.stateful.Stateful"]], "storagereader (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint.planner)": [[27, "torch.distributed.checkpoint.planner.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "get_model_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.get_model_state_dict"]], "get_optimizer_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.get_optimizer_state_dict"]], "get_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.get_state_dict"]], "load() (in module torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.load"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.load_state_dict"]], "load_state_dict() (torch.distributed.checkpoint.stateful.stateful method)": [[27, "torch.distributed.checkpoint.stateful.Stateful.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[27, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[27, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "reset() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.reset"]], "reset() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.reset"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save() (in module torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.save"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[27, "torch.distributed.checkpoint.save_state_dict"]], "set_model_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.set_model_state_dict"]], "set_optimizer_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.set_optimizer_state_dict"]], "set_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[27, "torch.distributed.checkpoint.state_dict.set_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[27, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[27, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[27, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "state_dict() (torch.distributed.checkpoint.stateful.stateful method)": [[27, "torch.distributed.checkpoint.stateful.Stateful.state_dict"]], "tensor_storage_size() (torch.distributed.checkpoint.planner.writeitem method)": [[27, "torch.distributed.checkpoint.planner.WriteItem.tensor_storage_size"]], "torch.distributed.checkpoint": [[27, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[27, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[27, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "validate_checkpoint_id() (torch.distributed.checkpoint.storagereader class method)": [[27, "torch.distributed.checkpoint.StorageReader.validate_checkpoint_id"]], "validate_checkpoint_id() (torch.distributed.checkpoint.storagewriter class method)": [[27, "torch.distributed.checkpoint.StorageWriter.validate_checkpoint_id"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[27, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[29, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_device (torch.distributed.optim.zeroredundancyoptimizer property)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.join_device"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "join_process_group (torch.distributed.optim.zeroredundancyoptimizer property)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.join_process_group"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[29, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[29, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[29, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[29, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel)": [[30, "torch.distributed.tensor.parallel.ColwiseParallel"]], "preparemoduleinput (class in torch.distributed.tensor.parallel)": [[30, "torch.distributed.tensor.parallel.PrepareModuleInput"]], "preparemoduleoutput (class in torch.distributed.tensor.parallel)": [[30, "torch.distributed.tensor.parallel.PrepareModuleOutput"]], "rowwiseparallel (class in torch.distributed.tensor.parallel)": [[30, "torch.distributed.tensor.parallel.RowwiseParallel"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[30, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[30, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[31, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[31, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[31, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[31, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[31, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[31, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[31, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[31, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[31, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[31, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[31, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[31, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[31, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[31, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[31, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[31, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[31, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[31, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.IndependentTransform"]], "inversegamma (class in torch.distributions.inverse_gamma)": [[31, "torch.distributions.inverse_gamma.InverseGamma"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[31, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[31, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[31, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[31, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[31, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[31, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[31, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[31, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[31, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[31, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[31, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[31, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[31, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[31, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[31, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[31, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[31, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[31, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[31, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[31, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[31, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[31, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[31, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[31, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[31, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[31, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[31, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.inverse_gamma.inversegamma attribute)": [[31, "torch.distributions.inverse_gamma.InverseGamma.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[31, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[31, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[31, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[31, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[31, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[31, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[31, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[31, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[31, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[31, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[31, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[31, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration (torch.distributions.inverse_gamma.inversegamma property)": [[31, "torch.distributions.inverse_gamma.InverseGamma.concentration"]], "concentration0 (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[31, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[31, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[31, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.inverse_gamma.inversegamma method)": [[31, "torch.distributions.inverse_gamma.InverseGamma.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[31, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[31, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[31, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[31, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[31, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.inverse_gamma.inversegamma method)": [[31, "torch.distributions.inverse_gamma.InverseGamma.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[31, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[31, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[31, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[31, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[31, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[31, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[31, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[31, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[31, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[31, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[31, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[31, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[31, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[31, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[31, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[31, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.inverse_gamma.inversegamma attribute)": [[31, "torch.distributions.inverse_gamma.InverseGamma.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[31, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[31, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[31, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[31, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[31, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[31, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[31, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[31, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[31, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[31, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[31, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[31, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[31, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[31, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[31, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[31, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[31, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[31, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[31, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.inverse_gamma.inversegamma property)": [[31, "torch.distributions.inverse_gamma.InverseGamma.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[31, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[31, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[31, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[31, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[31, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[31, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[31, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.inverse_gamma.inversegamma property)": [[31, "torch.distributions.inverse_gamma.InverseGamma.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[31, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[31, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[31, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[31, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "rate (torch.distributions.inverse_gamma.inversegamma property)": [[31, "torch.distributions.inverse_gamma.InverseGamma.rate"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[31, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[31, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[31, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[31, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[31, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[31, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[31, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[31, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[31, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[31, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[31, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[31, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[31, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[31, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[31, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[31, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[31, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[31, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[31, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[31, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[31, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[31, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[31, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[31, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[31, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[31, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[31, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[31, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[31, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[31, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[31, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[31, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[31, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[31, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.inverse_gamma.inversegamma attribute)": [[31, "torch.distributions.inverse_gamma.InverseGamma.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[31, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[31, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[31, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[31, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[31, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[31, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[31, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[31, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[31, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[31, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[31, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[31, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[31, "module-torch.distributions"]], "torch.distributions.bernoulli": [[31, "module-torch.distributions.bernoulli"]], "torch.distributions.beta": [[31, "module-torch.distributions.beta"]], "torch.distributions.binomial": [[31, "module-torch.distributions.binomial"]], "torch.distributions.categorical": [[31, "module-torch.distributions.categorical"]], "torch.distributions.cauchy": [[31, "module-torch.distributions.cauchy"]], "torch.distributions.chi2": [[31, "module-torch.distributions.chi2"]], "torch.distributions.constraint_registry": [[31, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[31, "module-torch.distributions.constraints"]], "torch.distributions.continuous_bernoulli": [[31, "module-torch.distributions.continuous_bernoulli"]], "torch.distributions.dirichlet": [[31, "module-torch.distributions.dirichlet"]], "torch.distributions.distribution": [[31, "module-torch.distributions.distribution"]], "torch.distributions.exp_family": [[31, "module-torch.distributions.exp_family"]], "torch.distributions.exponential": [[31, "module-torch.distributions.exponential"]], "torch.distributions.fishersnedecor": [[31, "module-torch.distributions.fishersnedecor"]], "torch.distributions.gamma": [[31, "module-torch.distributions.gamma"]], "torch.distributions.geometric": [[31, "module-torch.distributions.geometric"]], "torch.distributions.gumbel": [[31, "module-torch.distributions.gumbel"]], "torch.distributions.half_cauchy": [[31, "module-torch.distributions.half_cauchy"]], "torch.distributions.half_normal": [[31, "module-torch.distributions.half_normal"]], "torch.distributions.independent": [[31, "module-torch.distributions.independent"]], "torch.distributions.inverse_gamma": [[31, "module-torch.distributions.inverse_gamma"]], "torch.distributions.kl": [[31, "module-torch.distributions.kl"]], "torch.distributions.kumaraswamy": [[31, "module-torch.distributions.kumaraswamy"]], "torch.distributions.laplace": [[31, "module-torch.distributions.laplace"]], "torch.distributions.lkj_cholesky": [[31, "module-torch.distributions.lkj_cholesky"]], "torch.distributions.log_normal": [[31, "module-torch.distributions.log_normal"]], "torch.distributions.logistic_normal": [[31, "module-torch.distributions.logistic_normal"]], "torch.distributions.lowrank_multivariate_normal": [[31, "module-torch.distributions.lowrank_multivariate_normal"]], "torch.distributions.mixture_same_family": [[31, "module-torch.distributions.mixture_same_family"]], "torch.distributions.multinomial": [[31, "module-torch.distributions.multinomial"]], "torch.distributions.multivariate_normal": [[31, "module-torch.distributions.multivariate_normal"]], "torch.distributions.negative_binomial": [[31, "module-torch.distributions.negative_binomial"]], "torch.distributions.normal": [[31, "module-torch.distributions.normal"]], "torch.distributions.one_hot_categorical": [[31, "module-torch.distributions.one_hot_categorical"]], "torch.distributions.pareto": [[31, "module-torch.distributions.pareto"]], "torch.distributions.poisson": [[31, "module-torch.distributions.poisson"]], "torch.distributions.relaxed_bernoulli": [[31, "module-torch.distributions.relaxed_bernoulli"]], "torch.distributions.relaxed_categorical": [[31, "module-torch.distributions.relaxed_categorical"]], "torch.distributions.studentt": [[31, "module-torch.distributions.studentT"]], "torch.distributions.transformed_distribution": [[31, "module-torch.distributions.transformed_distribution"]], "torch.distributions.transforms": [[31, "module-torch.distributions.transforms"]], "torch.distributions.uniform": [[31, "module-torch.distributions.uniform"]], "torch.distributions.utils": [[31, "module-torch.distributions.utils"]], "torch.distributions.von_mises": [[31, "module-torch.distributions.von_mises"]], "torch.distributions.weibull": [[31, "module-torch.distributions.weibull"]], "torch.distributions.wishart": [[31, "module-torch.distributions.wishart"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[31, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[31, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[31, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[31, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[31, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[31, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[31, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[31, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[31, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[31, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[31, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[31, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[31, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[31, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[31, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[31, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[31, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.inverse_gamma.inversegamma property)": [[31, "torch.distributions.inverse_gamma.InverseGamma.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[31, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[31, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[31, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[31, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[31, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[31, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[31, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[31, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[31, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[31, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[31, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[31, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[31, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[31, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[31, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[31, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[31, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[32, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[32, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[33, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[33, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[33, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[33, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[33, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[33, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[33, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[33, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[33, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[33, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[35, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[35, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[36, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[36, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[36, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[36, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[36, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[36, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[39, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[39, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[39, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[39, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[39, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[39, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[39, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[40, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[40, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[40, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[42, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvousgracefulexiterror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousGracefulExitError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[42, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[42, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[42, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[42, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[42, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[42, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[43, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[44, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[44, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[44, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[44, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[44, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[44, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[44, "module-torch.distributed.elastic.timer"]], "constraint (class in torch.export)": [[46, "torch.export.Constraint"]], "customobjargument (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.CustomObjArgument"]], "dim() (in module torch.export.dynamic_shapes)": [[46, "torch.export.dynamic_shapes.Dim"]], "exportbackwardsignature (class in torch.export)": [[46, "torch.export.ExportBackwardSignature"]], "exportgraphsignature (class in torch.export)": [[46, "torch.export.ExportGraphSignature"]], "exportgraphsignature (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.ExportGraphSignature"]], "exportedprogram (class in torch.export)": [[46, "torch.export.ExportedProgram"]], "flatargsadapter (class in torch.export.unflatten)": [[46, "torch.export.unflatten.FlatArgsAdapter"]], "inputkind (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.InputKind"]], "inputspec (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.InputSpec"]], "interpretermodule (class in torch.export.unflatten)": [[46, "torch.export.unflatten.InterpreterModule"]], "modulecallentry (class in torch.export)": [[46, "torch.export.ModuleCallEntry"]], "modulecallsignature (class in torch.export)": [[46, "torch.export.ModuleCallSignature"]], "outputkind (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.OutputKind"]], "outputspec (class in torch.export.graph_signature)": [[46, "torch.export.graph_signature.OutputSpec"]], "wrappermodule (class in torch.export.wrapper)": [[46, "torch.export.wrapper.WrapperModule"]], "adapt() (torch.export.unflatten.flatargsadapter method)": [[46, "torch.export.unflatten.FlatArgsAdapter.adapt"]], "buffers() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.buffers"]], "dims() (in module torch.export)": [[46, "torch.export.dims"]], "dynamic_dim() (in module torch.export.dynamic_shapes)": [[46, "torch.export.dynamic_shapes.dynamic_dim"]], "export() (in module torch.export)": [[46, "torch.export.export"]], "forward() (torch.export.wrapper.wrappermodule method)": [[46, "torch.export.wrapper.WrapperModule.forward"]], "get_replace_hook() (torch.export.graph_signature.exportgraphsignature method)": [[46, "torch.export.graph_signature.ExportGraphSignature.get_replace_hook"]], "load() (in module torch.export)": [[46, "torch.export.load"]], "module() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.module"]], "named_buffers() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.named_buffers"]], "named_parameters() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.named_parameters"]], "parameters() (torch.export.exportedprogram method)": [[46, "torch.export.ExportedProgram.parameters"]], "register_dataclass() (in module torch.export)": [[46, "torch.export.register_dataclass"]], "replace_all_uses() (torch.export.graph_signature.exportgraphsignature method)": [[46, "torch.export.graph_signature.ExportGraphSignature.replace_all_uses"]], "save() (in module torch.export)": [[46, "torch.export.save"]], "torch.export": [[46, "module-torch.export"]], "torch.export.custom_obj": [[46, "module-torch.export.custom_obj"]], "torch.export.dynamic_shapes": [[46, "module-torch.export.dynamic_shapes"]], "torch.export.exported_program": [[46, "module-torch.export.exported_program"]], "torch.export.graph_signature": [[46, "module-torch.export.graph_signature"]], "torch.export.unflatten": [[46, "module-torch.export.unflatten"]], "torch.export.wrapper": [[46, "module-torch.export.wrapper"]], "unflatten() (in module torch.export.unflatten)": [[46, "torch.export.unflatten.unflatten"]], "torch.fft": [[48, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp)": [[49, "torch.distributed.fsdp.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "check_is_root() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.check_is_root"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[49, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[49, "module-torch.distributed.fsdp"]], "torch.func": [[51, "module-torch.func"]], "get_overwrite_module_params_on_conversion() (in module torch.__future__)": [[56, "torch.__future__.get_overwrite_module_params_on_conversion"]], "get_swap_module_params_on_conversion() (in module torch.__future__)": [[56, "torch.__future__.get_swap_module_params_on_conversion"]], "set_overwrite_module_params_on_conversion() (in module torch.__future__)": [[56, "torch.__future__.set_overwrite_module_params_on_conversion"]], "set_swap_module_params_on_conversion() (in module torch.__future__)": [[56, "torch.__future__.set_swap_module_params_on_conversion"]], "torch.__future__": [[56, "module-torch.__future__"]], "future (class in torch.futures)": [[57, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[57, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[57, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[57, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[57, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[57, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[57, "torch.futures.Future.then"]], "torch.futures": [[57, "module-torch.futures"]], "value() (torch.futures.future method)": [[57, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[57, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[57, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[58, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[58, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[58, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[58, "torch.fx.Node"]], "proxy (class in torch.fx)": [[58, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[58, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[58, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[58, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[58, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[58, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[58, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[58, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[58, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[58, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[58, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[58, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[58, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[58, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[58, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[58, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[58, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[58, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[58, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[58, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[58, "torch.fx.Graph.graph_copy"]], "insert_arg() (torch.fx.node method)": [[58, "torch.fx.Node.insert_arg"]], "inserting_after() (torch.fx.graph method)": [[58, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[58, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[58, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[58, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[58, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[58, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[58, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[58, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[58, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[58, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[58, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[58, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[58, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[58, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[58, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[58, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[58, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[58, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[58, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[58, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[58, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[58, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[58, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[58, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[58, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[58, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[58, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[58, "module-torch.fx"]], "torch.fx.annotate": [[58, "module-torch.fx.annotate"]], "torch.fx.config": [[58, "module-torch.fx.config"]], "torch.fx.experimental": [[58, "module-torch.fx.experimental"]], "torch.fx.experimental.accelerator_partitioner": [[58, "module-torch.fx.experimental.accelerator_partitioner"]], "torch.fx.experimental.const_fold": [[58, "module-torch.fx.experimental.const_fold"]], "torch.fx.experimental.debug": [[58, "module-torch.fx.experimental.debug"]], "torch.fx.experimental.graph_gradual_typechecker": [[58, "module-torch.fx.experimental.graph_gradual_typechecker"]], "torch.fx.experimental.merge_matmul": [[58, "module-torch.fx.experimental.merge_matmul"]], "torch.fx.experimental.meta_tracer": [[58, "module-torch.fx.experimental.meta_tracer"]], "torch.fx.experimental.migrate_gradual_types": [[58, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.migrate_gradual_types.constraint": [[58, "module-torch.fx.experimental.migrate_gradual_types.constraint"]], "torch.fx.experimental.migrate_gradual_types.constraint_generator": [[58, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"]], "torch.fx.experimental.migrate_gradual_types.constraint_transformation": [[58, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"]], "torch.fx.experimental.migrate_gradual_types.operation": [[58, "module-torch.fx.experimental.migrate_gradual_types.operation"]], "torch.fx.experimental.migrate_gradual_types.transform_to_z3": [[58, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"]], "torch.fx.experimental.migrate_gradual_types.util": [[58, "module-torch.fx.experimental.migrate_gradual_types.util"]], "torch.fx.experimental.migrate_gradual_types.z3_types": [[58, "module-torch.fx.experimental.migrate_gradual_types.z3_types"]], "torch.fx.experimental.normalize": [[58, "module-torch.fx.experimental.normalize"]], "torch.fx.experimental.optimization": [[58, "module-torch.fx.experimental.optimization"]], "torch.fx.experimental.partitioner_utils": [[58, "module-torch.fx.experimental.partitioner_utils"]], "torch.fx.experimental.proxy_tensor": [[58, "module-torch.fx.experimental.proxy_tensor"]], "torch.fx.experimental.recording": [[58, "module-torch.fx.experimental.recording"]], "torch.fx.experimental.refinement_types": [[58, "module-torch.fx.experimental.refinement_types"]], "torch.fx.experimental.rewriter": [[58, "module-torch.fx.experimental.rewriter"]], "torch.fx.experimental.schema_type_annotation": [[58, "module-torch.fx.experimental.schema_type_annotation"]], "torch.fx.experimental.sym_node": [[58, "module-torch.fx.experimental.sym_node"]], "torch.fx.experimental.unification": [[58, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.core": [[58, "module-torch.fx.experimental.unification.core"]], "torch.fx.experimental.unification.dispatch": [[58, "module-torch.fx.experimental.unification.dispatch"]], "torch.fx.experimental.unification.match": [[58, "module-torch.fx.experimental.unification.match"]], "torch.fx.experimental.unification.more": [[58, "module-torch.fx.experimental.unification.more"]], "torch.fx.experimental.unification.multipledispatch": [[58, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.experimental.unification.multipledispatch.conflict": [[58, "module-torch.fx.experimental.unification.multipledispatch.conflict"]], "torch.fx.experimental.unification.multipledispatch.core": [[58, "module-torch.fx.experimental.unification.multipledispatch.core"]], "torch.fx.experimental.unification.multipledispatch.dispatcher": [[58, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"]], "torch.fx.experimental.unification.multipledispatch.utils": [[58, "module-torch.fx.experimental.unification.multipledispatch.utils"]], "torch.fx.experimental.unification.multipledispatch.variadic": [[58, "module-torch.fx.experimental.unification.multipledispatch.variadic"]], "torch.fx.experimental.unification.unification_tools": [[58, "module-torch.fx.experimental.unification.unification_tools"]], "torch.fx.experimental.unification.utils": [[58, "module-torch.fx.experimental.unification.utils"]], "torch.fx.experimental.unification.variable": [[58, "module-torch.fx.experimental.unification.variable"]], "torch.fx.experimental.unify_refinements": [[58, "module-torch.fx.experimental.unify_refinements"]], "torch.fx.experimental.validator": [[58, "module-torch.fx.experimental.validator"]], "torch.fx.graph": [[58, "module-torch.fx.graph"]], "torch.fx.graph_module": [[58, "module-torch.fx.graph_module"]], "torch.fx.immutable_collections": [[58, "module-torch.fx.immutable_collections"]], "torch.fx.interpreter": [[58, "module-torch.fx.interpreter"]], "torch.fx.node": [[58, "module-torch.fx.node"]], "torch.fx.operator_schemas": [[58, "module-torch.fx.operator_schemas"]], "torch.fx.passes": [[58, "module-torch.fx.passes"]], "torch.fx.passes.annotate_getitem_nodes": [[58, "module-torch.fx.passes.annotate_getitem_nodes"]], "torch.fx.passes.backends": [[58, "module-torch.fx.passes.backends"]], "torch.fx.passes.backends.cudagraphs": [[58, "module-torch.fx.passes.backends.cudagraphs"]], "torch.fx.passes.dialect": [[58, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[58, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.dialect.common.cse_pass": [[58, "module-torch.fx.passes.dialect.common.cse_pass"]], "torch.fx.passes.fake_tensor_prop": [[58, "module-torch.fx.passes.fake_tensor_prop"]], "torch.fx.passes.graph_drawer": [[58, "module-torch.fx.passes.graph_drawer"]], "torch.fx.passes.graph_manipulation": [[58, "module-torch.fx.passes.graph_manipulation"]], "torch.fx.passes.infra": [[58, "module-torch.fx.passes.infra"]], "torch.fx.passes.infra.partitioner": [[58, "module-torch.fx.passes.infra.partitioner"]], "torch.fx.passes.infra.pass_base": [[58, "module-torch.fx.passes.infra.pass_base"]], "torch.fx.passes.infra.pass_manager": [[58, "module-torch.fx.passes.infra.pass_manager"]], "torch.fx.passes.net_min_base": [[58, "module-torch.fx.passes.net_min_base"]], "torch.fx.passes.operator_support": [[58, "module-torch.fx.passes.operator_support"]], "torch.fx.passes.param_fetch": [[58, "module-torch.fx.passes.param_fetch"]], "torch.fx.passes.pass_manager": [[58, "module-torch.fx.passes.pass_manager"]], "torch.fx.passes.reinplace": [[58, "module-torch.fx.passes.reinplace"]], "torch.fx.passes.shape_prop": [[58, "module-torch.fx.passes.shape_prop"]], "torch.fx.passes.split_module": [[58, "module-torch.fx.passes.split_module"]], "torch.fx.passes.split_utils": [[58, "module-torch.fx.passes.split_utils"]], "torch.fx.passes.splitter_base": [[58, "module-torch.fx.passes.splitter_base"]], "torch.fx.passes.tests": [[58, "module-torch.fx.passes.tests"]], "torch.fx.passes.tests.test_pass_manager": [[58, "module-torch.fx.passes.tests.test_pass_manager"]], "torch.fx.passes.tools_common": [[58, "module-torch.fx.passes.tools_common"]], "torch.fx.passes.utils": [[58, "module-torch.fx.passes.utils"]], "torch.fx.passes.utils.common": [[58, "module-torch.fx.passes.utils.common"]], "torch.fx.passes.utils.fuser_utils": [[58, "module-torch.fx.passes.utils.fuser_utils"]], "torch.fx.passes.utils.matcher_utils": [[58, "module-torch.fx.passes.utils.matcher_utils"]], "torch.fx.passes.utils.matcher_with_name_node_map_utils": [[58, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"]], "torch.fx.passes.utils.source_matcher_utils": [[58, "module-torch.fx.passes.utils.source_matcher_utils"]], "torch.fx.proxy": [[58, "module-torch.fx.proxy"]], "torch.fx.subgraph_rewriter": [[58, "module-torch.fx.subgraph_rewriter"]], "torch.fx.tensor_type": [[58, "module-torch.fx.tensor_type"]], "torch.fx.traceback": [[58, "module-torch.fx.traceback"]], "trace() (torch.fx.tracer method)": [[58, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[58, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[58, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[58, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[58, "torch.fx.wrap"]], "torch.fx.experimental.symbolic_shapes": [[59, "module-torch.fx.experimental.symbolic_shapes"]], "generator (class in torch)": [[84, "torch.Generator"]], "device (torch.generator attribute)": [[84, "torch.Generator.device"]], "get_state() (torch.generator method)": [[84, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[84, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[84, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[84, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[84, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[85, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[86, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[87, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[88, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[89, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[90, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[91, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[92, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[93, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[94, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[95, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[96, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[97, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[98, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[99, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[100, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[101, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[102, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[103, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[104, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[105, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[106, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[107, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[108, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[109, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[110, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[111, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[112, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[113, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[114, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[115, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[116, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[117, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[118, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[119, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[120, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[121, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[122, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[123, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[124, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[125, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[126, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[127, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[128, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[129, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[130, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[131, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[132, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[133, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[134, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[135, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[136, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[137, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[138, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[139, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[140, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[141, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[142, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[143, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[144, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[145, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[146, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[147, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[148, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[149, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[150, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[151, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[152, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[153, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[154, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[155, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[156, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[157, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[158, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[159, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[160, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[161, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[162, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[163, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[164, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[165, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[166, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[167, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[168, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[169, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[170, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[171, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[172, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[173, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[174, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[175, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[176, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[177, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[178, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[179, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[180, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[181, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[182, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[183, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[184, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[185, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[186, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[187, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[188, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[189, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[190, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[191, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[192, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[193, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[194, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[195, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[196, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[197, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[198, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[199, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[200, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[201, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[202, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[203, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[204, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[205, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[206, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[207, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[208, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[209, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[210, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[211, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[212, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[213, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[214, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[215, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[216, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[217, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[218, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[219, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[220, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[221, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[222, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[223, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[224, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[225, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[226, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[227, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[228, "torch.Tensor.dim"]], "dim_order() (torch.tensor method)": [[229, "torch.Tensor.dim_order"]], "dist() (torch.tensor method)": [[230, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[231, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[232, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[233, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[234, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[235, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[236, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[237, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[238, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[239, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[240, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[241, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[242, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[243, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[244, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[245, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[246, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[247, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[248, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[249, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[250, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[251, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[252, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[253, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[254, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[255, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[256, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[257, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[258, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[259, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[260, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[261, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[262, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[263, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[264, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[265, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[266, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[267, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[268, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[269, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[270, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[271, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[272, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[273, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[274, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[275, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[276, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[277, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[278, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[279, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[280, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[281, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[282, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[283, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[284, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[285, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[286, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[287, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[288, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[289, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[290, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[291, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[292, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[293, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[294, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[295, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[296, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[297, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[298, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[299, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[300, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[301, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[302, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[303, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[304, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[305, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[306, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[307, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[308, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[309, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[310, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[311, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[312, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[313, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[314, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[315, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[316, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[317, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[318, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[319, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[320, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[321, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[322, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[323, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[324, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[325, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[326, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[327, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[328, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[329, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[330, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[331, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[332, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[333, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[334, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[335, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[336, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[337, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[338, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[339, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[340, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[341, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[342, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[343, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[344, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[345, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[346, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[347, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[348, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[349, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[350, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[351, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[352, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[353, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[354, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[355, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[356, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[357, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[358, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[359, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[360, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[361, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[362, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[363, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[364, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[365, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[366, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[367, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[368, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[369, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[370, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[371, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[372, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[373, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[374, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[375, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[376, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[377, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[378, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[379, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[380, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[381, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[382, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[383, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[384, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[385, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[386, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[387, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[388, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[389, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[390, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[391, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[392, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[393, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[394, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[395, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[396, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[397, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[398, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[399, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[400, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[401, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[402, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[403, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[404, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[405, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[406, "torch.Tensor.median"]], "min() (torch.tensor method)": [[407, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[408, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[409, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[410, "torch.Tensor.mode"]], "module_load() (torch.tensor method)": [[411, "torch.Tensor.module_load"]], "moveaxis() (torch.tensor method)": [[412, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[413, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[414, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[415, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[416, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[417, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[418, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[419, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[420, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[421, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[422, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[423, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[424, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[425, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[426, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[427, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[428, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[429, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[430, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[431, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[432, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[433, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[434, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[435, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[436, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[437, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[438, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[439, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[440, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[441, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[442, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[443, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[444, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[445, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[446, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[447, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[448, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[449, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[450, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[451, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[452, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[453, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[454, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[455, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[456, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[457, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[458, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[459, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[460, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[461, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[462, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[463, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[464, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[465, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[466, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[467, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[468, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[469, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[470, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[471, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[472, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[473, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[474, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[475, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[476, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[477, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[478, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[479, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[480, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[481, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[482, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[483, "torch.Tensor.register_hook"]], "register_post_accumulate_grad_hook() (torch.tensor method)": [[484, "torch.Tensor.register_post_accumulate_grad_hook"]], "remainder() (torch.tensor method)": [[485, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[486, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[487, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[488, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[489, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[490, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[491, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[492, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[493, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[494, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[495, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[496, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[497, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[498, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[499, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[500, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[501, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[502, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[503, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[504, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[505, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[506, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[507, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[508, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[509, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[510, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[511, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[512, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[513, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[514, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[515, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[516, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[517, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[518, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[519, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[520, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[521, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[522, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[523, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[524, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[525, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[526, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[527, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[528, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[529, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[530, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[531, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[532, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[533, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[534, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[535, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[536, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[537, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[538, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[539, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[540, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[541, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[542, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[543, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[544, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[545, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[546, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[547, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[548, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[549, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[550, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[551, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[552, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[553, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[554, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[555, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[556, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[557, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[558, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[559, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[560, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[561, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[562, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[563, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[564, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[565, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[566, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[567, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[568, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[569, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[570, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[571, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[572, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[573, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[574, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[575, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[576, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[577, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[578, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[579, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[580, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[581, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[582, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[583, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[584, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[585, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[586, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[587, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[588, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[589, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[590, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[591, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[592, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[593, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[594, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[595, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[596, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[597, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[598, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[599, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[600, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[601, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[602, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[603, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[604, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[605, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[606, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[607, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[608, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[609, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[610, "torch.Tensor.values"]], "var() (torch.tensor method)": [[611, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[612, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[613, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[614, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[615, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[616, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[617, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[618, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[619, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[620, "torch._assert"]], "_foreach_abs() (in module torch)": [[621, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[622, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[623, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[624, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[625, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[626, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[627, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[628, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[629, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[630, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[631, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[632, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[633, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[634, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[635, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[636, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[637, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[638, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[639, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[640, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[641, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[642, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[643, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[644, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[645, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[646, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[647, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[648, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[649, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[650, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[651, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[652, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[653, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[654, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[655, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[656, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[657, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[658, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[659, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[660, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[661, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[662, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[663, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[664, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[665, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[666, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[667, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[668, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[669, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[670, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[671, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[672, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[673, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[674, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[675, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[676, "torch._logging.set_logs"]], "abs() (in module torch)": [[677, "torch.abs"]], "absolute() (in module torch)": [[678, "torch.absolute"]], "acos() (in module torch)": [[679, "torch.acos"]], "acosh() (in module torch)": [[680, "torch.acosh"]], "add() (in module torch)": [[681, "torch.add"]], "addbmm() (in module torch)": [[682, "torch.addbmm"]], "addcdiv() (in module torch)": [[683, "torch.addcdiv"]], "addcmul() (in module torch)": [[684, "torch.addcmul"]], "addmm() (in module torch)": [[685, "torch.addmm"]], "addmv() (in module torch)": [[686, "torch.addmv"]], "addr() (in module torch)": [[687, "torch.addr"]], "adjoint() (in module torch)": [[688, "torch.adjoint"]], "all() (in module torch)": [[689, "torch.all"]], "allclose() (in module torch)": [[690, "torch.allclose"]], "amax() (in module torch)": [[691, "torch.amax"]], "amin() (in module torch)": [[692, "torch.amin"]], "aminmax() (in module torch)": [[693, "torch.aminmax"]], "angle() (in module torch)": [[694, "torch.angle"]], "any() (in module torch)": [[695, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[701, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[702, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[703, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[704, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[705, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[706, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[707, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[712, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[713, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[714, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[715, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[716, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[717, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[718, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[719, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[720, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[721, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[722, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[723, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[724, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[725, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[726, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[727, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[728, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[728, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[729, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[730, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[731, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[731, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[731, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[734, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[735, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[736, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[741, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[742, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[751, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[752, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[752, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[754, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[755, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[756, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[757, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[758, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[759, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[760, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[760, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[760, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[761, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[778, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[779, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[780, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[781, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[782, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[783, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[784, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[785, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[786, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[787, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[788, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[788, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[790, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[790, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[790, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[791, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[792, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[792, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[792, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[792, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[793, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[794, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "extra_repr() (torch.ao.quantization.fake_quantize.fixedqparamsfakequantize method)": [[797, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.extra_repr"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[803, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[804, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[805, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[806, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[807, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[808, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[809, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization.fuse_modules)": [[810, "torch.ao.quantization.fuse_modules.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[814, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[816, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[816, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[816, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[820, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[820, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[821, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[827, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[828, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[829, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[830, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[831, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[832, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[833, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[834, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[835, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[836, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[843, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[844, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[845, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[846, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[847, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[848, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[849, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[851, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[852, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[853, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[854, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[855, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[856, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[857, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[858, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[859, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[860, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[861, "torch.arange"]], "arccos() (in module torch)": [[862, "torch.arccos"]], "arccosh() (in module torch)": [[863, "torch.arccosh"]], "arcsin() (in module torch)": [[864, "torch.arcsin"]], "arcsinh() (in module torch)": [[865, "torch.arcsinh"]], "arctan() (in module torch)": [[866, "torch.arctan"]], "arctan2() (in module torch)": [[867, "torch.arctan2"]], "arctanh() (in module torch)": [[868, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[869, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[870, "torch.argmax"]], "argmin() (in module torch)": [[871, "torch.argmin"]], "argsort() (in module torch)": [[872, "torch.argsort"]], "argwhere() (in module torch)": [[873, "torch.argwhere"]], "as_strided() (in module torch)": [[874, "torch.as_strided"]], "as_tensor() (in module torch)": [[875, "torch.as_tensor"]], "asarray() (in module torch)": [[876, "torch.asarray"]], "asin() (in module torch)": [[877, "torch.asin"]], "asinh() (in module torch)": [[878, "torch.asinh"]], "atan() (in module torch)": [[879, "torch.atan"]], "atan2() (in module torch)": [[880, "torch.atan2"]], "atanh() (in module torch)": [[881, "torch.atanh"]], "atleast_1d() (in module torch)": [[882, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[883, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[884, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[885, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[886, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[887, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[888, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[889, "torch.autograd.backward"]], "unpackeddualtensor (class in torch.autograd.forward_ad)": [[890, "torch.autograd.forward_ad.UnpackedDualTensor"]], "count() (torch.autograd.forward_ad.unpackeddualtensor method)": [[890, "torch.autograd.forward_ad.UnpackedDualTensor.count"]], "index() (torch.autograd.forward_ad.unpackeddualtensor method)": [[890, "torch.autograd.forward_ad.UnpackedDualTensor.index"]], "primal (torch.autograd.forward_ad.unpackeddualtensor attribute)": [[890, "torch.autograd.forward_ad.UnpackedDualTensor.primal"]], "tangent (torch.autograd.forward_ad.unpackeddualtensor attribute)": [[890, "torch.autograd.forward_ad.UnpackedDualTensor.tangent"]], "dual_level (class in torch.autograd.forward_ad)": [[891, "torch.autograd.forward_ad.dual_level"]], "enter_dual_level() (in module torch.autograd.forward_ad)": [[892, "torch.autograd.forward_ad.enter_dual_level"]], "exit_dual_level() (in module torch.autograd.forward_ad)": [[893, "torch.autograd.forward_ad.exit_dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[894, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[895, "torch.autograd.forward_ad.unpack_dual"]], "backwardcfunction (class in torch.autograd.function)": [[896, "torch.autograd.function.BackwardCFunction"]], "apply() (torch.autograd.function.backwardcfunction method)": [[896, "torch.autograd.function.BackwardCFunction.apply"]], "apply_jvp() (torch.autograd.function.backwardcfunction method)": [[896, "torch.autograd.function.BackwardCFunction.apply_jvp"]], "mark_dirty() (torch.autograd.function.backwardcfunction method)": [[896, "torch.autograd.function.BackwardCFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.backwardcfunction method)": [[896, "torch.autograd.function.BackwardCFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.backwardcfunction method)": [[896, "torch.autograd.function.BackwardCFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.backwardcfunction method)": [[896, "torch.autograd.function.BackwardCFunction.save_for_forward"]], "set_materialize_grads() (torch.autograd.function.backwardcfunction method)": [[896, "torch.autograd.function.BackwardCFunction.set_materialize_grads"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[897, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[898, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[899, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[900, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "inplacefunction (class in torch.autograd.function)": [[901, "torch.autograd.function.InplaceFunction"]], "backward() (torch.autograd.function.inplacefunction static method)": [[901, "torch.autograd.function.InplaceFunction.backward"]], "forward() (torch.autograd.function.inplacefunction static method)": [[901, "torch.autograd.function.InplaceFunction.forward"]], "jvp() (torch.autograd.function.inplacefunction static method)": [[901, "torch.autograd.function.InplaceFunction.jvp"]], "mark_dirty() (torch.autograd.function.inplacefunction method)": [[901, "torch.autograd.function.InplaceFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.inplacefunction method)": [[901, "torch.autograd.function.InplaceFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.inplacefunction method)": [[901, "torch.autograd.function.InplaceFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.inplacefunction method)": [[901, "torch.autograd.function.InplaceFunction.save_for_forward"]], "set_materialize_grads() (torch.autograd.function.inplacefunction method)": [[901, "torch.autograd.function.InplaceFunction.set_materialize_grads"]], "setup_context() (torch.autograd.function.inplacefunction static method)": [[901, "torch.autograd.function.InplaceFunction.setup_context"]], "vjp() (torch.autograd.function.inplacefunction static method)": [[901, "torch.autograd.function.InplaceFunction.vjp"]], "vmap() (torch.autograd.function.inplacefunction static method)": [[901, "torch.autograd.function.InplaceFunction.vmap"]], "nestediofunction (class in torch.autograd.function)": [[902, "torch.autograd.function.NestedIOFunction"]], "backward() (torch.autograd.function.nestediofunction method)": [[902, "torch.autograd.function.NestedIOFunction.backward"]], "backward_extended() (torch.autograd.function.nestediofunction method)": [[902, "torch.autograd.function.NestedIOFunction.backward_extended"]], "forward() (torch.autograd.function.nestediofunction method)": [[902, "torch.autograd.function.NestedIOFunction.forward"]], "forward_extended() (torch.autograd.function.nestediofunction method)": [[902, "torch.autograd.function.NestedIOFunction.forward_extended"]], "jvp() (torch.autograd.function.nestediofunction static method)": [[902, "torch.autograd.function.NestedIOFunction.jvp"]], "mark_dirty() (torch.autograd.function.nestediofunction method)": [[902, "torch.autograd.function.NestedIOFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.nestediofunction method)": [[902, "torch.autograd.function.NestedIOFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.nestediofunction method)": [[902, "torch.autograd.function.NestedIOFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.nestediofunction method)": [[902, "torch.autograd.function.NestedIOFunction.save_for_forward"]], "saved_tensors (torch.autograd.function.nestediofunction property)": [[902, "torch.autograd.function.NestedIOFunction.saved_tensors"]], "set_materialize_grads() (torch.autograd.function.nestediofunction method)": [[902, "torch.autograd.function.NestedIOFunction.set_materialize_grads"]], "setup_context() (torch.autograd.function.nestediofunction static method)": [[902, "torch.autograd.function.NestedIOFunction.setup_context"]], "vjp() (torch.autograd.function.nestediofunction static method)": [[902, "torch.autograd.function.NestedIOFunction.vjp"]], "vmap() (torch.autograd.function.nestediofunction static method)": [[902, "torch.autograd.function.NestedIOFunction.vmap"]], "once_differentiable() (in module torch.autograd.function)": [[903, "torch.autograd.function.once_differentiable"]], "hessian() (in module torch.autograd.functional)": [[904, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[905, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[906, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[907, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[908, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[909, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[910, "torch.autograd.grad"]], "clone() (torch.autograd.grad_mode.inference_mode method)": [[911, "torch.autograd.grad_mode.inference_mode.clone"]], "inference_mode (class in torch.autograd.grad_mode)": [[911, "torch.autograd.grad_mode.inference_mode"]], "clone() (torch.autograd.grad_mode.set_grad_enabled method)": [[912, "torch.autograd.grad_mode.set_grad_enabled.clone"]], "set_grad_enabled (class in torch.autograd.grad_mode)": [[912, "torch.autograd.grad_mode.set_grad_enabled"]], "clone() (torch.autograd.grad_mode.set_multithreading_enabled method)": [[913, "torch.autograd.grad_mode.set_multithreading_enabled.clone"]], "set_multithreading_enabled (class in torch.autograd.grad_mode)": [[913, "torch.autograd.grad_mode.set_multithreading_enabled"]], "gradcheckerror": [[914, "torch.autograd.gradcheck.GradcheckError"]], "gradcheck() (in module torch.autograd.gradcheck)": [[915, "torch.autograd.gradcheck.gradcheck"]], "gradgradcheck() (in module torch.autograd.gradcheck)": [[916, "torch.autograd.gradcheck.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[917, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[918, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[919, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[920, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[921, "torch.autograd.graph.Node.register_prehook"]], "increment_version() (in module torch.autograd.graph)": [[922, "torch.autograd.graph.increment_version"]], "enforceunique (class in torch.autograd.profiler)": [[923, "torch.autograd.profiler.EnforceUnique"]], "see() (torch.autograd.profiler.enforceunique method)": [[923, "torch.autograd.profiler.EnforceUnique.see"]], "kinetosteptracker (class in torch.autograd.profiler)": [[924, "torch.autograd.profiler.KinetoStepTracker"]], "current_step() (torch.autograd.profiler.kinetosteptracker class method)": [[924, "torch.autograd.profiler.KinetoStepTracker.current_step"]], "erase_step_count() (torch.autograd.profiler.kinetosteptracker class method)": [[924, "torch.autograd.profiler.KinetoStepTracker.erase_step_count"]], "increment_step() (torch.autograd.profiler.kinetosteptracker class method)": [[924, "torch.autograd.profiler.KinetoStepTracker.increment_step"]], "init_step_count() (torch.autograd.profiler.kinetosteptracker class method)": [[924, "torch.autograd.profiler.KinetoStepTracker.init_step_count"]], "load_nvprof() (in module torch.autograd.profiler)": [[925, "torch.autograd.profiler.load_nvprof"]], "parse_nvprof_trace() (in module torch.autograd.profiler)": [[926, "torch.autograd.profiler.parse_nvprof_trace"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[927, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[928, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[929, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[930, "torch.autograd.profiler.profile.total_average"]], "record_function (class in torch.autograd.profiler)": [[931, "torch.autograd.profiler.record_function"]], "interval (class in torch.autograd.profiler_util)": [[932, "torch.autograd.profiler_util.Interval"]], "elapsed_us() (torch.autograd.profiler_util.interval method)": [[932, "torch.autograd.profiler_util.Interval.elapsed_us"]], "kernel (class in torch.autograd.profiler_util)": [[933, "torch.autograd.profiler_util.Kernel"]], "count() (torch.autograd.profiler_util.kernel method)": [[933, "torch.autograd.profiler_util.Kernel.count"]], "device (torch.autograd.profiler_util.kernel attribute)": [[933, "torch.autograd.profiler_util.Kernel.device"]], "duration (torch.autograd.profiler_util.kernel attribute)": [[933, "torch.autograd.profiler_util.Kernel.duration"]], "index() (torch.autograd.profiler_util.kernel method)": [[933, "torch.autograd.profiler_util.Kernel.index"]], "name (torch.autograd.profiler_util.kernel attribute)": [[933, "torch.autograd.profiler_util.Kernel.name"]], "memrecordsacc (class in torch.autograd.profiler_util)": [[934, "torch.autograd.profiler_util.MemRecordsAcc"]], "in_interval() (torch.autograd.profiler_util.memrecordsacc method)": [[934, "torch.autograd.profiler_util.MemRecordsAcc.in_interval"]], "stringtable (class in torch.autograd.profiler_util)": [[935, "torch.autograd.profiler_util.StringTable"]], "clear() (torch.autograd.profiler_util.stringtable method)": [[935, "torch.autograd.profiler_util.StringTable.clear"]], "copy() (torch.autograd.profiler_util.stringtable method)": [[935, "torch.autograd.profiler_util.StringTable.copy"]], "default_factory (torch.autograd.profiler_util.stringtable attribute)": [[935, "torch.autograd.profiler_util.StringTable.default_factory"]], "fromkeys() (torch.autograd.profiler_util.stringtable method)": [[935, "torch.autograd.profiler_util.StringTable.fromkeys"]], "get() (torch.autograd.profiler_util.stringtable method)": [[935, "torch.autograd.profiler_util.StringTable.get"]], "items() (torch.autograd.profiler_util.stringtable method)": [[935, "torch.autograd.profiler_util.StringTable.items"]], "keys() (torch.autograd.profiler_util.stringtable method)": [[935, "torch.autograd.profiler_util.StringTable.keys"]], "pop() (torch.autograd.profiler_util.stringtable method)": [[935, "torch.autograd.profiler_util.StringTable.pop"]], "popitem() (torch.autograd.profiler_util.stringtable method)": [[935, "torch.autograd.profiler_util.StringTable.popitem"]], "setdefault() (torch.autograd.profiler_util.stringtable method)": [[935, "torch.autograd.profiler_util.StringTable.setdefault"]], "update() (torch.autograd.profiler_util.stringtable method)": [[935, "torch.autograd.profiler_util.StringTable.update"]], "values() (torch.autograd.profiler_util.stringtable method)": [[935, "torch.autograd.profiler_util.StringTable.values"]], "baddbmm() (in module torch)": [[936, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[937, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[938, "torch.bernoulli"]], "bincount() (in module torch)": [[939, "torch.bincount"]], "bitwise_and() (in module torch)": [[940, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[941, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[942, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[943, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[944, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[945, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[946, "torch.blackman_window"]], "block_diag() (in module torch)": [[947, "torch.block_diag"]], "bmm() (in module torch)": [[948, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[949, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[950, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[951, "torch.broadcast_to"]], "bucketize() (in module torch)": [[952, "torch.bucketize"]], "can_cast() (in module torch)": [[953, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[954, "torch.cartesian_prod"]], "cat() (in module torch)": [[955, "torch.cat"]], "cdist() (in module torch)": [[956, "torch.cdist"]], "ceil() (in module torch)": [[957, "torch.ceil"]], "chain_matmul() (in module torch)": [[958, "torch.chain_matmul"]], "cholesky() (in module torch)": [[959, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[960, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[961, "torch.cholesky_solve"]], "chunk() (in module torch)": [[962, "torch.chunk"]], "clamp() (in module torch)": [[963, "torch.clamp"]], "clip() (in module torch)": [[964, "torch.clip"]], "clone() (in module torch)": [[965, "torch.clone"]], "column_stack() (in module torch)": [[966, "torch.column_stack"]], "combinations() (in module torch)": [[967, "torch.combinations"]], "compile() (in module torch)": [[968, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[969, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[970, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[971, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[972, "torch.compiler.compile"]], "cudagraph_mark_step_begin() (in module torch.compiler)": [[973, "torch.compiler.cudagraph_mark_step_begin"]], "disable() (in module torch.compiler)": [[974, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[975, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[976, "torch.compiler.reset"]], "complex() (in module torch)": [[977, "torch.complex"]], "concat() (in module torch)": [[978, "torch.concat"]], "concatenate() (in module torch)": [[979, "torch.concatenate"]], "cond() (in module torch)": [[980, "torch.cond"]], "conj() (in module torch)": [[981, "torch.conj"]], "conj_physical() (in module torch)": [[982, "torch.conj_physical"]], "copysign() (in module torch)": [[983, "torch.copysign"]], "corrcoef() (in module torch)": [[984, "torch.corrcoef"]], "cos() (in module torch)": [[985, "torch.cos"]], "cosh() (in module torch)": [[986, "torch.cosh"]], "count_nonzero() (in module torch)": [[987, "torch.count_nonzero"]], "cov() (in module torch)": [[988, "torch.cov"]], "stream (class in torch.cpu)": [[989, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[990, "torch.cpu.StreamContext"]], "current_device() (in module torch.cpu)": [[991, "torch.cpu.current_device"]], "current_stream() (in module torch.cpu)": [[992, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[993, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[994, "torch.cpu.is_available"]], "set_device() (in module torch.cpu)": [[995, "torch.cpu.set_device"]], "stream() (in module torch.cpu)": [[996, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[997, "torch.cpu.synchronize"]], "cross() (in module torch)": [[998, "torch.cross"]], "cudagraph (class in torch.cuda)": [[999, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[999, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[999, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[999, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[999, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[999, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[999, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[999, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[1000, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[1001, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[1001, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[1001, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[1001, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[1001, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[1001, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[1001, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[1001, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[1002, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[1002, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[1002, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[1002, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[1002, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[1002, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[1003, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[1004, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[1004, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[1004, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[1004, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[1004, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[1004, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[1005, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[1006, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[1007, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[1008, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[1009, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[1010, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[1011, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[1012, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[1013, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[1014, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[1015, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[1016, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[1017, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[1018, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[1019, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[1020, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[1021, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[1022, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[1023, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[1024, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[1025, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[1026, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[1027, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[1028, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[1029, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1030, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1031, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1032, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1033, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1034, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1035, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1036, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1037, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1038, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1039, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1040, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1041, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1042, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1043, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1044, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1045, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1046, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1047, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1048, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1049, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1050, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1051, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1052, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1053, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1054, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1055, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1056, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1057, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1058, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1059, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1060, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1061, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1062, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1063, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1064, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1065, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1066, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1067, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1068, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1069, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1070, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1071, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1072, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1073, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1074, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1075, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1076, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1077, "torch.cummax"]], "cummin() (in module torch)": [[1078, "torch.cummin"]], "cumprod() (in module torch)": [[1079, "torch.cumprod"]], "cumsum() (in module torch)": [[1080, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1081, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1082, "torch.deg2rad"]], "dequantize() (in module torch)": [[1083, "torch.dequantize"]], "det() (in module torch)": [[1084, "torch.det"]], "diag() (in module torch)": [[1085, "torch.diag"]], "diag_embed() (in module torch)": [[1086, "torch.diag_embed"]], "diagflat() (in module torch)": [[1087, "torch.diagflat"]], "diagonal() (in module torch)": [[1088, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1089, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1090, "torch.diff"]], "digamma() (in module torch)": [[1091, "torch.digamma"]], "dist() (in module torch)": [[1092, "torch.dist"]], "div() (in module torch)": [[1093, "torch.div"]], "divide() (in module torch)": [[1094, "torch.divide"]], "dot() (in module torch)": [[1095, "torch.dot"]], "dsplit() (in module torch)": [[1096, "torch.dsplit"]], "dstack() (in module torch)": [[1097, "torch.dstack"]], "einsum() (in module torch)": [[1098, "torch.einsum"]], "empty() (in module torch)": [[1099, "torch.empty"]], "empty_like() (in module torch)": [[1100, "torch.empty_like"]], "empty_strided() (in module torch)": [[1101, "torch.empty_strided"]], "enable_grad (class in torch)": [[1102, "torch.enable_grad"]], "eq() (in module torch)": [[1103, "torch.eq"]], "equal() (in module torch)": [[1104, "torch.equal"]], "erf() (in module torch)": [[1105, "torch.erf"]], "erfc() (in module torch)": [[1106, "torch.erfc"]], "erfinv() (in module torch)": [[1107, "torch.erfinv"]], "exp() (in module torch)": [[1108, "torch.exp"]], "exp2() (in module torch)": [[1109, "torch.exp2"]], "expm1() (in module torch)": [[1110, "torch.expm1"]], "eye() (in module torch)": [[1111, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1112, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1113, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1114, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1115, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1116, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1117, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1118, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1119, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1120, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1121, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1122, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1123, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1124, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1125, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1126, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1127, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1128, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1129, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1130, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1131, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1132, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1133, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1134, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1135, "torch.fft.rfftn"]], "fix() (in module torch)": [[1136, "torch.fix"]], "flatten() (in module torch)": [[1137, "torch.flatten"]], "flip() (in module torch)": [[1138, "torch.flip"]], "fliplr() (in module torch)": [[1139, "torch.fliplr"]], "flipud() (in module torch)": [[1140, "torch.flipud"]], "float_power() (in module torch)": [[1141, "torch.float_power"]], "floor() (in module torch)": [[1142, "torch.floor"]], "floor_divide() (in module torch)": [[1143, "torch.floor_divide"]], "fmax() (in module torch)": [[1144, "torch.fmax"]], "fmin() (in module torch)": [[1145, "torch.fmin"]], "fmod() (in module torch)": [[1146, "torch.fmod"]], "frac() (in module torch)": [[1147, "torch.frac"]], "frexp() (in module torch)": [[1148, "torch.frexp"]], "from_dlpack() (in module torch)": [[1149, "torch.from_dlpack"]], "from_file() (in module torch)": [[1150, "torch.from_file"]], "from_numpy() (in module torch)": [[1151, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1152, "torch.frombuffer"]], "full() (in module torch)": [[1153, "torch.full"]], "full_like() (in module torch)": [[1154, "torch.full_like"]], "functional_call() (in module torch.func)": [[1155, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1156, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1157, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1158, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1159, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1160, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1161, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1162, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1163, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1164, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1165, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1166, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1167, "torch.func.vmap"]], "dimconstraints (class in torch.fx.experimental.symbolic_shapes)": [[1168, "torch.fx.experimental.symbolic_shapes.DimConstraints"]], "add() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1168, "torch.fx.experimental.symbolic_shapes.DimConstraints.add"]], "add_equality() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1168, "torch.fx.experimental.symbolic_shapes.DimConstraints.add_equality"]], "forced_specializations() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1168, "torch.fx.experimental.symbolic_shapes.DimConstraints.forced_specializations"]], "prettify_results() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1168, "torch.fx.experimental.symbolic_shapes.DimConstraints.prettify_results"]], "remove_redundant_dynamic_results() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1168, "torch.fx.experimental.symbolic_shapes.DimConstraints.remove_redundant_dynamic_results"]], "rewrite_with_congruences() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1168, "torch.fx.experimental.symbolic_shapes.DimConstraints.rewrite_with_congruences"]], "solve() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1168, "torch.fx.experimental.symbolic_shapes.DimConstraints.solve"]], "dimdynamic (class in torch.fx.experimental.symbolic_shapes)": [[1169, "torch.fx.experimental.symbolic_shapes.DimDynamic"]], "equalityconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1170, "torch.fx.experimental.symbolic_shapes.EqualityConstraint"]], "relaxedunspecconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1171, "torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint"]], "shapeenv (class in torch.fx.experimental.symbolic_shapes)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv"]], "bind_symbols() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.bind_symbols"]], "bound_sympy() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.bound_sympy"]], "check_equal() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.check_equal"]], "cleanup() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.cleanup"]], "create_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbol"]], "create_symbolic_sizes_strides_storage_offset() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbolic_sizes_strides_storage_offset"]], "create_symboolnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symboolnode"]], "create_symintnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symintnode"]], "create_unbacked_symbool() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symbool"]], "create_unbacked_symfloat() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symfloat"]], "create_unbacked_symint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symint"]], "create_unspecified_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symbol"]], "create_unspecified_symint_and_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symint_and_symbol"]], "defer_runtime_assert() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.defer_runtime_assert"]], "evaluate_expr() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_expr"]], "evaluate_guards_expression() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_expression"]], "evaluate_guards_for_args() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_for_args"]], "format_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.format_guards"]], "freeze() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.freeze"]], "get_nontrivial_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_nontrivial_guards"]], "get_shape_groups() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_shape_groups"]], "is_unbacked_symint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.is_unbacked_symint"]], "produce_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards"]], "produce_guards_expression() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards_expression"]], "replace() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.replace"]], "simplify() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.simplify"]], "size_hint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.size_hint"]], "suppress_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1172, "torch.fx.experimental.symbolic_shapes.ShapeEnv.suppress_guards"]], "statefulsymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1173, "torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext"]], "statelesssymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1174, "torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext"]], "strictminmaxconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1175, "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint"]], "render() (torch.fx.experimental.symbolic_shapes.strictminmaxconstraint method)": [[1175, "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint.render"]], "subclasssymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1176, "torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext"]], "symboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1177, "torch.fx.experimental.symbolic_shapes.SymbolicContext"]], "canonicalize_bool_expr() (in module torch.fx.experimental.symbolic_shapes)": [[1178, "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr"]], "constrain_range() (in module torch.fx.experimental.symbolic_shapes)": [[1179, "torch.fx.experimental.symbolic_shapes.constrain_range"]], "constrain_unify() (in module torch.fx.experimental.symbolic_shapes)": [[1180, "torch.fx.experimental.symbolic_shapes.constrain_unify"]], "definitely_false() (in module torch.fx.experimental.symbolic_shapes)": [[1181, "torch.fx.experimental.symbolic_shapes.definitely_false"]], "definitely_true() (in module torch.fx.experimental.symbolic_shapes)": [[1182, "torch.fx.experimental.symbolic_shapes.definitely_true"]], "guard_size_oblivious() (in module torch.fx.experimental.symbolic_shapes)": [[1183, "torch.fx.experimental.symbolic_shapes.guard_size_oblivious"]], "has_free_symbols() (in module torch.fx.experimental.symbolic_shapes)": [[1184, "torch.fx.experimental.symbolic_shapes.has_free_symbols"]], "hint_int() (in module torch.fx.experimental.symbolic_shapes)": [[1185, "torch.fx.experimental.symbolic_shapes.hint_int"]], "is_concrete_bool() (in module torch.fx.experimental.symbolic_shapes)": [[1186, "torch.fx.experimental.symbolic_shapes.is_concrete_bool"]], "is_concrete_int() (in module torch.fx.experimental.symbolic_shapes)": [[1187, "torch.fx.experimental.symbolic_shapes.is_concrete_int"]], "parallel_and() (in module torch.fx.experimental.symbolic_shapes)": [[1188, "torch.fx.experimental.symbolic_shapes.parallel_and"]], "parallel_or() (in module torch.fx.experimental.symbolic_shapes)": [[1189, "torch.fx.experimental.symbolic_shapes.parallel_or"]], "statically_known_true() (in module torch.fx.experimental.symbolic_shapes)": [[1190, "torch.fx.experimental.symbolic_shapes.statically_known_true"]], "sym_eq() (in module torch.fx.experimental.symbolic_shapes)": [[1191, "torch.fx.experimental.symbolic_shapes.sym_eq"]], "gather() (in module torch)": [[1192, "torch.gather"]], "gcd() (in module torch)": [[1193, "torch.gcd"]], "ge() (in module torch)": [[1194, "torch.ge"]], "geqrf() (in module torch)": [[1195, "torch.geqrf"]], "ger() (in module torch)": [[1196, "torch.ger"]], "get_default_device() (in module torch)": [[1197, "torch.get_default_device"]], "get_default_dtype() (in module torch)": [[1198, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1199, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1200, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1201, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1202, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1203, "torch.get_rng_state"]], "gradient() (in module torch)": [[1204, "torch.gradient"]], "greater() (in module torch)": [[1205, "torch.greater"]], "greater_equal() (in module torch)": [[1206, "torch.greater_equal"]], "gt() (in module torch)": [[1207, "torch.gt"]], "hamming_window() (in module torch)": [[1208, "torch.hamming_window"]], "hann_window() (in module torch)": [[1209, "torch.hann_window"]], "heaviside() (in module torch)": [[1210, "torch.heaviside"]], "histc() (in module torch)": [[1211, "torch.histc"]], "histogram() (in module torch)": [[1212, "torch.histogram"]], "histogramdd() (in module torch)": [[1213, "torch.histogramdd"]], "hsplit() (in module torch)": [[1214, "torch.hsplit"]], "hspmm() (in module torch)": [[1215, "torch.hspmm"]], "hstack() (in module torch)": [[1216, "torch.hstack"]], "hypot() (in module torch)": [[1217, "torch.hypot"]], "i0() (in module torch)": [[1218, "torch.i0"]], "igamma() (in module torch)": [[1219, "torch.igamma"]], "igammac() (in module torch)": [[1220, "torch.igammac"]], "imag() (in module torch)": [[1221, "torch.imag"]], "index_add() (in module torch)": [[1222, "torch.index_add"]], "index_copy() (in module torch)": [[1223, "torch.index_copy"]], "index_reduce() (in module torch)": [[1224, "torch.index_reduce"]], "index_select() (in module torch)": [[1225, "torch.index_select"]], "initial_seed() (in module torch)": [[1226, "torch.initial_seed"]], "inner() (in module torch)": [[1227, "torch.inner"]], "inverse() (in module torch)": [[1228, "torch.inverse"]], "is_complex() (in module torch)": [[1229, "torch.is_complex"]], "is_conj() (in module torch)": [[1230, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1231, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1232, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1233, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1234, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1235, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1236, "torch.is_storage"]], "is_tensor() (in module torch)": [[1237, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1238, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1239, "torch.isclose"]], "isfinite() (in module torch)": [[1240, "torch.isfinite"]], "isin() (in module torch)": [[1241, "torch.isin"]], "isinf() (in module torch)": [[1242, "torch.isinf"]], "isnan() (in module torch)": [[1243, "torch.isnan"]], "isneginf() (in module torch)": [[1244, "torch.isneginf"]], "isposinf() (in module torch)": [[1245, "torch.isposinf"]], "isreal() (in module torch)": [[1246, "torch.isreal"]], "istft() (in module torch)": [[1247, "torch.istft"]], "attribute (class in torch.jit)": [[1248, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1248, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1248, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1248, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1248, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1249, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1249, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1249, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1249, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1250, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1250, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1250, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1250, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1250, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1250, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1251, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1252, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1253, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1254, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1255, "torch.jit.ignore"]], "interface() (in module torch.jit)": [[1256, "torch.jit.interface"]], "isinstance() (in module torch.jit)": [[1257, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1258, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1259, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1260, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1261, "torch.jit.save"]], "script() (in module torch.jit)": [[1262, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1263, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1264, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1265, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1266, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1267, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1268, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1269, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1270, "torch.kaiser_window"]], "kron() (in module torch)": [[1271, "torch.kron"]], "kthvalue() (in module torch)": [[1272, "torch.kthvalue"]], "lcm() (in module torch)": [[1273, "torch.lcm"]], "ldexp() (in module torch)": [[1274, "torch.ldexp"]], "le() (in module torch)": [[1275, "torch.le"]], "lerp() (in module torch)": [[1276, "torch.lerp"]], "less() (in module torch)": [[1277, "torch.less"]], "less_equal() (in module torch)": [[1278, "torch.less_equal"]], "lgamma() (in module torch)": [[1279, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1280, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1281, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1282, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1283, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1284, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1285, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1286, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1287, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1288, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1289, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1290, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1291, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1292, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1293, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1294, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1295, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1296, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1297, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1298, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1299, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1300, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1301, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1302, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1303, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1304, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1305, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1306, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1307, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1308, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1309, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1310, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1311, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1312, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1313, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1314, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1315, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1316, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1317, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1318, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1319, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1320, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1321, "torch.linspace"]], "load() (in module torch)": [[1322, "torch.load"]], "lobpcg() (in module torch)": [[1323, "torch.lobpcg"]], "log() (in module torch)": [[1324, "torch.log"]], "log10() (in module torch)": [[1325, "torch.log10"]], "log1p() (in module torch)": [[1326, "torch.log1p"]], "log2() (in module torch)": [[1327, "torch.log2"]], "logaddexp() (in module torch)": [[1328, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1329, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1330, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1331, "torch.logdet"]], "logical_and() (in module torch)": [[1332, "torch.logical_and"]], "logical_not() (in module torch)": [[1333, "torch.logical_not"]], "logical_or() (in module torch)": [[1334, "torch.logical_or"]], "logical_xor() (in module torch)": [[1335, "torch.logical_xor"]], "logit() (in module torch)": [[1336, "torch.logit"]], "logspace() (in module torch)": [[1337, "torch.logspace"]], "logsumexp() (in module torch)": [[1338, "torch.logsumexp"]], "lt() (in module torch)": [[1339, "torch.lt"]], "lu() (in module torch)": [[1340, "torch.lu"]], "lu_solve() (in module torch)": [[1341, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1342, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1343, "torch.manual_seed"]], "masked_select() (in module torch)": [[1344, "torch.masked_select"]], "matmul() (in module torch)": [[1345, "torch.matmul"]], "matrix_exp() (in module torch)": [[1346, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1347, "torch.matrix_power"]], "max() (in module torch)": [[1348, "torch.max"]], "maximum() (in module torch)": [[1349, "torch.maximum"]], "mean() (in module torch)": [[1350, "torch.mean"]], "median() (in module torch)": [[1351, "torch.median"]], "meshgrid() (in module torch)": [[1352, "torch.meshgrid"]], "min() (in module torch)": [[1353, "torch.min"]], "minimum() (in module torch)": [[1354, "torch.minimum"]], "mm() (in module torch)": [[1355, "torch.mm"]], "mode() (in module torch)": [[1356, "torch.mode"]], "moveaxis() (in module torch)": [[1357, "torch.moveaxis"]], "movedim() (in module torch)": [[1358, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1359, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1360, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1361, "torch.mps.empty_cache"]], "event (class in torch.mps.event)": [[1362, "torch.mps.event.Event"]], "elapsed_time() (torch.mps.event.event method)": [[1362, "torch.mps.event.Event.elapsed_time"]], "query() (torch.mps.event.event method)": [[1362, "torch.mps.event.Event.query"]], "record() (torch.mps.event.event method)": [[1362, "torch.mps.event.Event.record"]], "synchronize() (torch.mps.event.event method)": [[1362, "torch.mps.event.Event.synchronize"]], "wait() (torch.mps.event.event method)": [[1362, "torch.mps.event.Event.wait"]], "get_rng_state() (in module torch.mps)": [[1363, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1364, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1365, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1366, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1367, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1368, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1369, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1370, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1371, "torch.mps.synchronize"]], "msort() (in module torch)": [[1372, "torch.msort"]], "mul() (in module torch)": [[1373, "torch.mul"]], "multinomial() (in module torch)": [[1374, "torch.multinomial"]], "multiply() (in module torch)": [[1375, "torch.multiply"]], "mv() (in module torch)": [[1376, "torch.mv"]], "mvlgamma() (in module torch)": [[1377, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1378, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1379, "torch.nanmean"]], "nanmedian() (in module torch)": [[1380, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1381, "torch.nanquantile"]], "nansum() (in module torch)": [[1382, "torch.nansum"]], "narrow() (in module torch)": [[1383, "torch.narrow"]], "narrow_copy() (in module torch)": [[1384, "torch.narrow_copy"]], "ne() (in module torch)": [[1385, "torch.ne"]], "neg() (in module torch)": [[1386, "torch.neg"]], "negative() (in module torch)": [[1387, "torch.negative"]], "nextafter() (in module torch)": [[1388, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1389, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1390, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1391, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1392, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1392, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1392, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1393, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1394, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1395, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1396, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1397, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1398, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1399, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1400, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1401, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1402, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1403, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1404, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1405, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1406, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1407, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1408, "torch.nn.ChannelShuffle"]], "circularpad1d (class in torch.nn)": [[1409, "torch.nn.CircularPad1d"]], "circularpad2d (class in torch.nn)": [[1410, "torch.nn.CircularPad2d"]], "circularpad3d (class in torch.nn)": [[1411, "torch.nn.CircularPad3d"]], "constantpad1d (class in torch.nn)": [[1412, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1413, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1414, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1415, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1416, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1417, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1418, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1419, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1420, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1421, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1422, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1423, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1424, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1425, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1426, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1427, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1428, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1429, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1430, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1430, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1431, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1431, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1431, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1432, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1433, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1434, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1435, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1436, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1437, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1438, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1439, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1440, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1441, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1442, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1443, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1444, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1445, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1446, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1447, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1448, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1449, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1450, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1451, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1452, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1453, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1454, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1455, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1456, "torch.nn.LPPool2d"]], "lppool3d (class in torch.nn)": [[1457, "torch.nn.LPPool3d"]], "lstm (class in torch.nn)": [[1458, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1459, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1460, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1461, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1461, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1462, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1462, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1463, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1463, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1464, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1464, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1465, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1465, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1466, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1466, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1467, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1467, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1468, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1468, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1469, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1469, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1470, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1470, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1471, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1471, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1472, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1472, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1473, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1473, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1474, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1475, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1476, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1477, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1478, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1479, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1480, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1481, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1482, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1483, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1484, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1485, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1486, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1487, "torch.nn.Mish"]], "module (class in torch.nn)": [[1488, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1488, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1488, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1488, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1488, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1488, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1488, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1488, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1488, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1488, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1488, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1488, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1488, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1488, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1488, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1488, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1488, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1488, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1488, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1488, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1488, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1488, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1488, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1488, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1488, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1488, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1488, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1488, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1488, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1488, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1488, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1488, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1488, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1488, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1488, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1488, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1488, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1488, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1488, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1488, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1488, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1488, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1488, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1488, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1488, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1488, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1488, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1489, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1489, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1489, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1489, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1489, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1489, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1489, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1490, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1490, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1490, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1490, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1491, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1492, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1493, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1494, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1494, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1494, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1495, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1496, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1497, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1498, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1498, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1498, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1498, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1498, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1498, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1498, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1498, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1498, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1498, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1498, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1498, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1499, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1499, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1499, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1500, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1501, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1502, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1503, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1504, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1504, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1505, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1506, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1507, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1508, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1509, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1510, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1511, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1512, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1513, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1514, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1515, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1516, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1516, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1517, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1518, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1519, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1520, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1521, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1522, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1523, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1524, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1525, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1526, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1527, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1527, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1528, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1529, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1530, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1531, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1531, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1531, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1532, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1532, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1533, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1533, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1534, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1534, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1535, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1535, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1536, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1537, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1538, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1539, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1540, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1541, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1542, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1543, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1544, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1545, "torch.nn.ZeroPad3d"]], "sdpbackend (class in torch.nn.attention)": [[1546, "torch.nn.attention.SDPBackend"]], "name (torch.nn.attention.sdpbackend property)": [[1546, "torch.nn.attention.SDPBackend.name"]], "causalbias (class in torch.nn.attention.bias)": [[1547, "torch.nn.attention.bias.CausalBias"]], "causalvariant (class in torch.nn.attention.bias)": [[1548, "torch.nn.attention.bias.CausalVariant"]], "causal_lower_right() (in module torch.nn.attention.bias)": [[1549, "torch.nn.attention.bias.causal_lower_right"]], "causal_upper_left() (in module torch.nn.attention.bias)": [[1550, "torch.nn.attention.bias.causal_upper_left"]], "sdpa_kernel() (in module torch.nn.attention)": [[1551, "torch.nn.attention.sdpa_kernel"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1552, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1553, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1554, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1555, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1556, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1557, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1558, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1559, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1560, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1561, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1562, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1563, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1564, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1565, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1566, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1567, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1568, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1569, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1570, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1571, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1572, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1573, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1574, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1575, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1576, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1577, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1578, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1579, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1580, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1581, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1582, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1583, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1584, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1585, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1586, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1587, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1588, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1589, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1590, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1591, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1592, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1593, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1594, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1595, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1596, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1597, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1598, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1599, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1600, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1601, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1602, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1603, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1604, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1605, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1606, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1607, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1608, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1609, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1610, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1611, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1612, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1613, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1614, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1615, "torch.nn.functional.lp_pool2d"]], "lp_pool3d() (in module torch.nn.functional)": [[1616, "torch.nn.functional.lp_pool3d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1617, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1618, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1619, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1620, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1621, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1622, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1623, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1624, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1625, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1626, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1627, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1628, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1629, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1630, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1631, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1632, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1633, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1634, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1635, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1636, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1637, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1638, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1639, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1640, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1641, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1642, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1643, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1644, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1645, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1646, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1647, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1648, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1649, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1650, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1651, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1652, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1653, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1654, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1655, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1656, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1657, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1658, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1659, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1660, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1661, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1662, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1663, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1664, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1665, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1666, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1666, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1666, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1667, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1668, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1669, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1670, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1671, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1672, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1673, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1674, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1675, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1675, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1675, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1675, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1675, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1676, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1677, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1678, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1678, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm() (in module torch.nn.utils)": [[1679, "torch.nn.utils.clip_grad_norm"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1680, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1681, "torch.nn.utils.clip_grad_value_"]], "convert_conv2d_weight_memory_format() (in module torch.nn.utils)": [[1682, "torch.nn.utils.convert_conv2d_weight_memory_format"]], "convert_conv3d_weight_memory_format() (in module torch.nn.utils)": [[1683, "torch.nn.utils.convert_conv3d_weight_memory_format"]], "fuse_conv_bn_eval() (in module torch.nn.utils)": [[1684, "torch.nn.utils.fuse_conv_bn_eval"]], "fuse_conv_bn_weights() (in module torch.nn.utils)": [[1685, "torch.nn.utils.fuse_conv_bn_weights"]], "fuse_linear_bn_eval() (in module torch.nn.utils)": [[1686, "torch.nn.utils.fuse_linear_bn_eval"]], "fuse_linear_bn_weights() (in module torch.nn.utils)": [[1687, "torch.nn.utils.fuse_linear_bn_weights"]], "parameters_to_vector() (in module torch.nn.utils)": [[1688, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1689, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1690, "torch.nn.utils.parametrizations.spectral_norm"]], "weight_norm() (in module torch.nn.utils.parametrizations)": [[1691, "torch.nn.utils.parametrizations.weight_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1692, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1692, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1693, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1694, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1695, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1696, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1697, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1697, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1697, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1697, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1697, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1697, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1698, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1698, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1698, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1698, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1698, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1699, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1699, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1699, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1699, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1699, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1700, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1700, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1700, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1700, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1700, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1701, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1701, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1701, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1701, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1701, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1701, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1702, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1702, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1702, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1702, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1702, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1702, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1702, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1703, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1703, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1703, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1703, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1703, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1703, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1704, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1704, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1704, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1704, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1704, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1705, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1706, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1707, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1708, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1709, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1710, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1711, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1712, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1713, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1714, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1715, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1716, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1716, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1716, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1716, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1716, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1716, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1716, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1716, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1716, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1716, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1717, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1718, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1719, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1720, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1721, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1722, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1723, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1724, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1725, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1726, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1727, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1728, "torch.no_grad"]], "nonzero() (in module torch)": [[1729, "torch.nonzero"]], "norm() (in module torch)": [[1730, "torch.norm"]], "normal() (in module torch)": [[1731, "torch.normal"]], "not_equal() (in module torch)": [[1732, "torch.not_equal"]], "numel() (in module torch)": [[1733, "torch.numel"]], "ones() (in module torch)": [[1734, "torch.ones"]], "ones_like() (in module torch)": [[1735, "torch.ones_like"]], "jitscalartype (class in torch.onnx)": [[1736, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1736, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1736, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1736, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1736, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1736, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1736, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1736, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1737, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1737, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1737, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1737, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1737, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1737, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1737, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1737, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1737, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1737, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1737, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1737, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1738, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1739, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1739, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1739, "torch.optim.ASGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.asgd method)": [[1739, "torch.optim.ASGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.asgd method)": [[1739, "torch.optim.ASGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.asgd method)": [[1739, "torch.optim.ASGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.asgd method)": [[1739, "torch.optim.ASGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.asgd method)": [[1739, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1739, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1739, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1739, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1739, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1740, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1740, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1740, "torch.optim.Adadelta.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adadelta method)": [[1740, "torch.optim.Adadelta.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adadelta method)": [[1740, "torch.optim.Adadelta.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adadelta method)": [[1740, "torch.optim.Adadelta.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adadelta method)": [[1740, "torch.optim.Adadelta.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1740, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1740, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1740, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1740, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1740, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1741, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1741, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1741, "torch.optim.Adagrad.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adagrad method)": [[1741, "torch.optim.Adagrad.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adagrad method)": [[1741, "torch.optim.Adagrad.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adagrad method)": [[1741, "torch.optim.Adagrad.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adagrad method)": [[1741, "torch.optim.Adagrad.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1741, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1741, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1741, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1741, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1741, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1742, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1742, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1742, "torch.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adam method)": [[1742, "torch.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adam method)": [[1742, "torch.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adam method)": [[1742, "torch.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adam method)": [[1742, "torch.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adam method)": [[1742, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1742, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1742, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1742, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1742, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1743, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1743, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1743, "torch.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamw method)": [[1743, "torch.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamw method)": [[1743, "torch.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamw method)": [[1743, "torch.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamw method)": [[1743, "torch.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamw method)": [[1743, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1743, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1743, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1743, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1743, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1744, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1744, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1744, "torch.optim.Adamax.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamax method)": [[1744, "torch.optim.Adamax.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamax method)": [[1744, "torch.optim.Adamax.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamax method)": [[1744, "torch.optim.Adamax.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamax method)": [[1744, "torch.optim.Adamax.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamax method)": [[1744, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1744, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1744, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1744, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1744, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1745, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1745, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1745, "torch.optim.LBFGS.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.lbfgs method)": [[1745, "torch.optim.LBFGS.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1745, "torch.optim.LBFGS.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.lbfgs method)": [[1745, "torch.optim.LBFGS.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1745, "torch.optim.LBFGS.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1745, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1745, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1745, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1745, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1745, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1746, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1746, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1746, "torch.optim.NAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.nadam method)": [[1746, "torch.optim.NAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.nadam method)": [[1746, "torch.optim.NAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.nadam method)": [[1746, "torch.optim.NAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.nadam method)": [[1746, "torch.optim.NAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.nadam method)": [[1746, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1746, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1746, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1746, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1746, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1747, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1748, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1749, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1750, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1751, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1752, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1752, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1752, "torch.optim.RAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.radam method)": [[1752, "torch.optim.RAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.radam method)": [[1752, "torch.optim.RAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.radam method)": [[1752, "torch.optim.RAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.radam method)": [[1752, "torch.optim.RAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.radam method)": [[1752, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1752, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1752, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1752, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1752, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1753, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1753, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1753, "torch.optim.RMSprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rmsprop method)": [[1753, "torch.optim.RMSprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1753, "torch.optim.RMSprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rmsprop method)": [[1753, "torch.optim.RMSprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1753, "torch.optim.RMSprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1753, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1753, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1753, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1753, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1753, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1754, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1754, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1754, "torch.optim.Rprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rprop method)": [[1754, "torch.optim.Rprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rprop method)": [[1754, "torch.optim.Rprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rprop method)": [[1754, "torch.optim.Rprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rprop method)": [[1754, "torch.optim.Rprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rprop method)": [[1754, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1754, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1754, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1754, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1754, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1755, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1755, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1755, "torch.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sgd method)": [[1755, "torch.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sgd method)": [[1755, "torch.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sgd method)": [[1755, "torch.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sgd method)": [[1755, "torch.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sgd method)": [[1755, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1755, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1755, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1755, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1755, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1756, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1756, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1756, "torch.optim.SparseAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sparseadam method)": [[1756, "torch.optim.SparseAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1756, "torch.optim.SparseAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sparseadam method)": [[1756, "torch.optim.SparseAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1756, "torch.optim.SparseAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1756, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1756, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1756, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1756, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1756, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1757, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1757, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1757, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1757, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1757, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1758, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1758, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1758, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1758, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1758, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1759, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1759, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1759, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1759, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1759, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1760, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1760, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1760, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1760, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1760, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1760, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1761, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1761, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1761, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1761, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1762, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1762, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1762, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1762, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1762, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1763, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1763, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1763, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1763, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1763, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1764, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1764, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1764, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1764, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1764, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1765, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1765, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1765, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1765, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1765, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1766, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1766, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1766, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1766, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1766, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1767, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1767, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1767, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1767, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1767, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1768, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1768, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1768, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1768, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1768, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1769, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "get_last_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1769, "torch.optim.lr_scheduler.ReduceLROnPlateau.get_last_lr"]], "print_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1769, "torch.optim.lr_scheduler.ReduceLROnPlateau.print_lr"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1770, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1770, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1770, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1770, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1770, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1771, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1771, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1771, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1771, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1771, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1772, "torch.orgqr"]], "ormqr() (in module torch)": [[1773, "torch.ormqr"]], "outer() (in module torch)": [[1774, "torch.outer"]], "pca_lowrank() (in module torch)": [[1775, "torch.pca_lowrank"]], "permute() (in module torch)": [[1776, "torch.permute"]], "pinverse() (in module torch)": [[1777, "torch.pinverse"]], "poisson() (in module torch)": [[1778, "torch.poisson"]], "polar() (in module torch)": [[1779, "torch.polar"]], "polygamma() (in module torch)": [[1780, "torch.polygamma"]], "positive() (in module torch)": [[1781, "torch.positive"]], "pow() (in module torch)": [[1782, "torch.pow"]], "prod() (in module torch)": [[1783, "torch.prod"]], "promote_types() (in module torch)": [[1784, "torch.promote_types"]], "qr() (in module torch)": [[1785, "torch.qr"]], "quantile() (in module torch)": [[1786, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1787, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1788, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1789, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1790, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1791, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1792, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1792, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1792, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1792, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1792, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1793, "torch.rad2deg"]], "rand() (in module torch)": [[1794, "torch.rand"]], "rand_like() (in module torch)": [[1795, "torch.rand_like"]], "randint() (in module torch)": [[1796, "torch.randint"]], "randint_like() (in module torch)": [[1797, "torch.randint_like"]], "randn() (in module torch)": [[1798, "torch.randn"]], "randn_like() (in module torch)": [[1799, "torch.randn_like"]], "randperm() (in module torch)": [[1800, "torch.randperm"]], "range() (in module torch)": [[1801, "torch.range"]], "ravel() (in module torch)": [[1802, "torch.ravel"]], "real() (in module torch)": [[1803, "torch.real"]], "reciprocal() (in module torch)": [[1804, "torch.reciprocal"]], "remainder() (in module torch)": [[1805, "torch.remainder"]], "renorm() (in module torch)": [[1806, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1807, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1808, "torch.reshape"]], "resolve_conj() (in module torch)": [[1809, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1810, "torch.resolve_neg"]], "result_type() (in module torch)": [[1811, "torch.result_type"]], "roll() (in module torch)": [[1812, "torch.roll"]], "rot90() (in module torch)": [[1813, "torch.rot90"]], "round() (in module torch)": [[1814, "torch.round"]], "row_stack() (in module torch)": [[1815, "torch.row_stack"]], "rsqrt() (in module torch)": [[1816, "torch.rsqrt"]], "save() (in module torch)": [[1817, "torch.save"]], "scatter() (in module torch)": [[1818, "torch.scatter"]], "scatter_add() (in module torch)": [[1819, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1820, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1821, "torch.searchsorted"]], "seed() (in module torch)": [[1822, "torch.seed"]], "select() (in module torch)": [[1823, "torch.select"]], "select_scatter() (in module torch)": [[1824, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1825, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1826, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1827, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1828, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1829, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1830, "torch.set_flush_denormal"]], "set_num_interop_threads() (in module torch)": [[1831, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1832, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1833, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1834, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1835, "torch.set_warn_always"]], "sgn() (in module torch)": [[1836, "torch.sgn"]], "sigmoid() (in module torch)": [[1837, "torch.sigmoid"]], "sign() (in module torch)": [[1838, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1839, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1840, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1841, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1842, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1843, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1844, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1845, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1846, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1847, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1848, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1849, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1850, "torch.signbit"]], "sin() (in module torch)": [[1851, "torch.sin"]], "sinc() (in module torch)": [[1852, "torch.sinc"]], "sinh() (in module torch)": [[1853, "torch.sinh"]], "slice_scatter() (in module torch)": [[1854, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1855, "torch.slogdet"]], "smm() (in module torch)": [[1856, "torch.smm"]], "softmax() (in module torch)": [[1857, "torch.softmax"]], "sort() (in module torch)": [[1858, "torch.sort"]], "addmm() (in module torch.sparse)": [[1859, "torch.sparse.addmm"]], "as_sparse_gradcheck() (in module torch.sparse)": [[1860, "torch.sparse.as_sparse_gradcheck"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1861, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1861, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1861, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1861, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1862, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1863, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1864, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1865, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1866, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1867, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1868, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1869, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1870, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1871, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1872, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1873, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1874, "torch.split"]], "sqrt() (in module torch)": [[1875, "torch.sqrt"]], "square() (in module torch)": [[1876, "torch.square"]], "squeeze() (in module torch)": [[1877, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1878, "torch.sspaddmm"]], "stack() (in module torch)": [[1879, "torch.stack"]], "std() (in module torch)": [[1880, "torch.std"]], "std_mean() (in module torch)": [[1881, "torch.std_mean"]], "stft() (in module torch)": [[1882, "torch.stft"]], "sub() (in module torch)": [[1883, "torch.sub"]], "subtract() (in module torch)": [[1884, "torch.subtract"]], "sum() (in module torch)": [[1885, "torch.sum"]], "svd() (in module torch)": [[1886, "torch.svd"]], "svd_lowrank() (in module torch)": [[1887, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1888, "torch.swapaxes"]], "swapdims() (in module torch)": [[1889, "torch.swapdims"]], "sym_float() (in module torch)": [[1890, "torch.sym_float"]], "sym_int() (in module torch)": [[1891, "torch.sym_int"]], "sym_ite() (in module torch)": [[1892, "torch.sym_ite"]], "sym_max() (in module torch)": [[1893, "torch.sym_max"]], "sym_min() (in module torch)": [[1894, "torch.sym_min"]], "sym_not() (in module torch)": [[1895, "torch.sym_not"]], "t() (in module torch)": [[1896, "torch.t"]], "take() (in module torch)": [[1897, "torch.take"]], "take_along_dim() (in module torch)": [[1898, "torch.take_along_dim"]], "tan() (in module torch)": [[1899, "torch.tan"]], "tanh() (in module torch)": [[1900, "torch.tanh"]], "tensor() (in module torch)": [[1901, "torch.tensor"]], "tensor_split() (in module torch)": [[1902, "torch.tensor_split"]], "tensordot() (in module torch)": [[1903, "torch.tensordot"]], "tile() (in module torch)": [[1904, "torch.tile"]], "topk() (in module torch)": [[1905, "torch.topk"]], "trace() (in module torch)": [[1906, "torch.trace"]], "transpose() (in module torch)": [[1907, "torch.transpose"]], "trapezoid() (in module torch)": [[1908, "torch.trapezoid"]], "trapz() (in module torch)": [[1909, "torch.trapz"]], "triangular_solve() (in module torch)": [[1910, "torch.triangular_solve"]], "tril() (in module torch)": [[1911, "torch.tril"]], "tril_indices() (in module torch)": [[1912, "torch.tril_indices"]], "triu() (in module torch)": [[1913, "torch.triu"]], "triu_indices() (in module torch)": [[1914, "torch.triu_indices"]], "true_divide() (in module torch)": [[1915, "torch.true_divide"]], "trunc() (in module torch)": [[1916, "torch.trunc"]], "unbind() (in module torch)": [[1917, "torch.unbind"]], "unflatten() (in module torch)": [[1918, "torch.unflatten"]], "unique() (in module torch)": [[1919, "torch.unique"]], "unique_consecutive() (in module torch)": [[1920, "torch.unique_consecutive"]], "unravel_index() (in module torch)": [[1921, "torch.unravel_index"]], "unsqueeze() (in module torch)": [[1922, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1923, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1924, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1925, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1926, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1927, "torch.utils.set_module"]], "swap_tensors() (in module torch.utils)": [[1928, "torch.utils.swap_tensors"]], "vander() (in module torch)": [[1929, "torch.vander"]], "var() (in module torch)": [[1930, "torch.var"]], "var_mean() (in module torch)": [[1931, "torch.var_mean"]], "vdot() (in module torch)": [[1932, "torch.vdot"]], "view_as_complex() (in module torch)": [[1933, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1934, "torch.view_as_real"]], "vmap() (in module torch)": [[1935, "torch.vmap"]], "vsplit() (in module torch)": [[1936, "torch.vsplit"]], "vstack() (in module torch)": [[1937, "torch.vstack"]], "where() (in module torch)": [[1938, "torch.where"]], "xlogy() (in module torch)": [[1939, "torch.xlogy"]], "stream (class in torch.xpu)": [[1940, "torch.xpu.Stream"]], "query() (torch.xpu.stream method)": [[1940, "torch.xpu.Stream.query"]], "synchronize() (torch.xpu.stream method)": [[1940, "torch.xpu.Stream.synchronize"]], "streamcontext (class in torch.xpu)": [[1941, "torch.xpu.StreamContext"]], "current_device() (in module torch.xpu)": [[1942, "torch.xpu.current_device"]], "current_stream() (in module torch.xpu)": [[1943, "torch.xpu.current_stream"]], "device (class in torch.xpu)": [[1944, "torch.xpu.device"]], "device_count() (in module torch.xpu)": [[1945, "torch.xpu.device_count"]], "device_of (class in torch.xpu)": [[1946, "torch.xpu.device_of"]], "get_device_capability() (in module torch.xpu)": [[1947, "torch.xpu.get_device_capability"]], "get_device_name() (in module torch.xpu)": [[1948, "torch.xpu.get_device_name"]], "get_device_properties() (in module torch.xpu)": [[1949, "torch.xpu.get_device_properties"]], "init() (in module torch.xpu)": [[1950, "torch.xpu.init"]], "is_available() (in module torch.xpu)": [[1951, "torch.xpu.is_available"]], "is_initialized() (in module torch.xpu)": [[1952, "torch.xpu.is_initialized"]], "set_device() (in module torch.xpu)": [[1953, "torch.xpu.set_device"]], "set_stream() (in module torch.xpu)": [[1954, "torch.xpu.set_stream"]], "stream() (in module torch.xpu)": [[1955, "torch.xpu.stream"]], "synchronize() (in module torch.xpu)": [[1956, "torch.xpu.synchronize"]], "zeros() (in module torch)": [[1957, "torch.zeros"]], "zeros_like() (in module torch)": [[1958, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1959, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1959, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1959, "torch.hub.help"]], "list() (in module torch.hub)": [[1959, "torch.hub.list"]], "load() (in module torch.hub)": [[1959, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1959, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1959, "torch.hub.set_dir"]], "torch.hub": [[1959, "module-torch.hub"]], "pytorch_jit": [[1961, "envvar-PYTORCH_JIT"]], "environment variable": [[1961, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1961, "torch.jit.export"]], "torch.jit": [[1961, "module-torch.jit"]], "torch.jit.annotations": [[1961, "module-torch.jit.annotations"]], "torch.jit.frontend": [[1961, "module-torch.jit.frontend"]], "torch.jit.generate_bytecode": [[1961, "module-torch.jit.generate_bytecode"]], "torch.jit.mobile": [[1961, "module-torch.jit.mobile"]], "torch.jit.quantized": [[1961, "module-torch.jit.quantized"]], "torch.jit.supported_ops": [[1962, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1963, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1963, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1966, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1967, "module-torch.utils.jit"]], "library (class in torch.library)": [[1968, "torch.library.Library"]], "define() (in module torch.library)": [[1968, "torch.library.define"]], "define() (torch.library.library method)": [[1968, "torch.library.Library.define"]], "fallthrough_kernel() (in module torch.library)": [[1968, "torch.library.fallthrough_kernel"]], "get_ctx() (in module torch.library)": [[1968, "torch.library.get_ctx"]], "impl() (in module torch.library)": [[1968, "torch.library.impl"]], "impl() (torch.library.library method)": [[1968, "torch.library.Library.impl"]], "impl_abstract() (in module torch.library)": [[1968, "torch.library.impl_abstract"]], "torch.library": [[1968, "module-torch.library"]], "torch.linalg": [[1969, "module-torch.linalg"]], "torch._logging": [[1970, "module-torch._logging"]], "torch.masked": [[1971, "module-torch.masked"]], "torch.masked.maskedtensor": [[1971, "module-torch.masked.maskedtensor"]], "torch.masked.maskedtensor.binary": [[1971, "module-torch.masked.maskedtensor.binary"]], "torch.masked.maskedtensor.core": [[1971, "module-torch.masked.maskedtensor.core"]], "torch.masked.maskedtensor.creation": [[1971, "module-torch.masked.maskedtensor.creation"]], "torch.masked.maskedtensor.passthrough": [[1971, "module-torch.masked.maskedtensor.passthrough"]], "torch.masked.maskedtensor.reductions": [[1971, "module-torch.masked.maskedtensor.reductions"]], "torch.masked.maskedtensor.unary": [[1971, "module-torch.masked.maskedtensor.unary"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1973, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1974, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1974, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1975, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1975, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1975, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1975, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1975, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1975, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1975, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1975, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1975, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1975, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1975, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1975, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1975, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1975, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1975, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1975, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1975, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1975, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1975, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1975, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1975, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1976, "module-torch.mps"]], "torch.mps.event": [[1976, "module-torch.mps.event"]], "torch.mps.profiler": [[1976, "module-torch.mps.profiler"]], "spawncontext (class in torch.multiprocessing)": [[1977, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1977, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1977, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1977, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1977, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing.spawn)": [[1977, "torch.multiprocessing.spawn.spawn"]], "torch.multiprocessing": [[1977, "module-torch.multiprocessing"]], "torch.multiprocessing.pool": [[1977, "module-torch.multiprocessing.pool"]], "torch.multiprocessing.queue": [[1977, "module-torch.multiprocessing.queue"]], "torch.multiprocessing.reductions": [[1977, "module-torch.multiprocessing.reductions"]], "torch.multiprocessing.spawn": [[1977, "module-torch.multiprocessing.spawn"]], "align_as() (torch.tensor method)": [[1979, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1979, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1979, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1979, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1979, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1979, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1980, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1980, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1980, "torch.nested.to_padded_tensor"]], "torch.nested": [[1980, "module-torch.nested"]], "torch.nn": [[1981, "module-torch.nn"]], "torch.nn.backends": [[1981, "module-torch.nn.backends"]], "torch.nn.backends.thnn": [[1981, "module-torch.nn.backends.thnn"]], "torch.nn.common_types": [[1981, "module-torch.nn.common_types"]], "torch.nn.cpp": [[1981, "module-torch.nn.cpp"]], "torch.nn.functional": [[1981, "module-torch.nn.functional"]], "torch.nn.grad": [[1981, "module-torch.nn.grad"]], "torch.nn.init": [[1981, "module-torch.nn.init"]], "torch.nn.modules": [[1981, "module-torch.nn.modules"]], "torch.nn.modules.activation": [[1981, "module-torch.nn.modules.activation"]], "torch.nn.modules.adaptive": [[1981, "module-torch.nn.modules.adaptive"]], "torch.nn.modules.batchnorm": [[1981, "module-torch.nn.modules.batchnorm"]], "torch.nn.modules.channelshuffle": [[1981, "module-torch.nn.modules.channelshuffle"]], "torch.nn.modules.container": [[1981, "module-torch.nn.modules.container"]], "torch.nn.modules.conv": [[1981, "module-torch.nn.modules.conv"]], "torch.nn.modules.distance": [[1981, "module-torch.nn.modules.distance"]], "torch.nn.modules.dropout": [[1981, "module-torch.nn.modules.dropout"]], "torch.nn.modules.flatten": [[1981, "module-torch.nn.modules.flatten"]], "torch.nn.modules.fold": [[1981, "module-torch.nn.modules.fold"]], "torch.nn.modules.instancenorm": [[1981, "module-torch.nn.modules.instancenorm"]], "torch.nn.modules.lazy": [[1981, "module-torch.nn.modules.lazy"]], "torch.nn.modules.linear": [[1981, "module-torch.nn.modules.linear"]], "torch.nn.modules.loss": [[1981, "module-torch.nn.modules.loss"]], "torch.nn.modules.module": [[1981, "module-torch.nn.modules.module"]], "torch.nn.modules.normalization": [[1981, "module-torch.nn.modules.normalization"]], "torch.nn.modules.padding": [[1981, "module-torch.nn.modules.padding"]], "torch.nn.modules.pixelshuffle": [[1981, "module-torch.nn.modules.pixelshuffle"]], "torch.nn.modules.pooling": [[1981, "module-torch.nn.modules.pooling"]], "torch.nn.modules.rnn": [[1981, "module-torch.nn.modules.rnn"]], "torch.nn.modules.sparse": [[1981, "module-torch.nn.modules.sparse"]], "torch.nn.modules.transformer": [[1981, "module-torch.nn.modules.transformer"]], "torch.nn.modules.upsampling": [[1981, "module-torch.nn.modules.upsampling"]], "torch.nn.modules.utils": [[1981, "module-torch.nn.modules.utils"]], "torch.nn.parallel": [[1981, "module-torch.nn.parallel"]], "torch.nn.parallel.comm": [[1981, "module-torch.nn.parallel.comm"]], "torch.nn.parallel.data_parallel": [[1981, "module-torch.nn.parallel.data_parallel"]], "torch.nn.parallel.distributed": [[1981, "module-torch.nn.parallel.distributed"]], "torch.nn.parallel.parallel_apply": [[1981, "module-torch.nn.parallel.parallel_apply"]], "torch.nn.parallel.replicate": [[1981, "module-torch.nn.parallel.replicate"]], "torch.nn.parallel.scatter_gather": [[1981, "module-torch.nn.parallel.scatter_gather"]], "torch.nn.parameter": [[1981, "module-torch.nn.parameter"]], "torch.nn.utils": [[1981, "module-torch.nn.utils"]], "torch.nn.utils.clip_grad": [[1981, "module-torch.nn.utils.clip_grad"]], "torch.nn.utils.convert_parameters": [[1981, "module-torch.nn.utils.convert_parameters"]], "torch.nn.utils.fusion": [[1981, "module-torch.nn.utils.fusion"]], "torch.nn.utils.init": [[1981, "module-torch.nn.utils.init"]], "torch.nn.utils.memory_format": [[1981, "module-torch.nn.utils.memory_format"]], "torch.nn.utils.parametrizations": [[1981, "module-torch.nn.utils.parametrizations"]], "torch.nn.utils.parametrize": [[1981, "module-torch.nn.utils.parametrize"]], "torch.nn.utils.prune": [[1981, "module-torch.nn.utils.prune"]], "torch.nn.utils.rnn": [[1981, "module-torch.nn.utils.rnn"]], "torch.nn.utils.spectral_norm": [[1981, "module-torch.nn.utils.spectral_norm"]], "torch.nn.utils.stateless": [[1981, "module-torch.nn.utils.stateless"]], "torch.nn.utils.weight_norm": [[1981, "module-torch.nn.utils.weight_norm"]], "torch.nn.attention": [[1982, "module-torch.nn.attention"]], "torch.nn.attention.bias": [[1983, "module-torch.nn.attention.bias"]], "calculate_gain() (in module torch.nn.init)": [[1985, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1985, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1985, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1985, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1985, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1985, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1985, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1985, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1985, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1985, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1985, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1985, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1985, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1985, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1985, "torch.nn.init.zeros_"]], "get_default_load_endianness() (in module torch.serialization)": [[2004, "torch.serialization.get_default_load_endianness"]], "register_package() (in module torch.serialization)": [[2004, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[2004, "torch.serialization.set_default_load_endianness"]], "torch.onnx.errors": [[2006, "module-torch.onnx.errors"]], "torch.onnx.operators": [[2006, "module-torch.onnx.operators"]], "torch.onnx.symbolic_caffe2": [[2006, "module-torch.onnx.symbolic_caffe2"]], "torch.onnx.symbolic_helper": [[2006, "module-torch.onnx.symbolic_helper"]], "torch.onnx.symbolic_opset10": [[2006, "module-torch.onnx.symbolic_opset10"]], "torch.onnx.symbolic_opset11": [[2006, "module-torch.onnx.symbolic_opset11"]], "torch.onnx.symbolic_opset12": [[2006, "module-torch.onnx.symbolic_opset12"]], "torch.onnx.symbolic_opset13": [[2006, "module-torch.onnx.symbolic_opset13"]], "torch.onnx.symbolic_opset14": [[2006, "module-torch.onnx.symbolic_opset14"]], "torch.onnx.symbolic_opset15": [[2006, "module-torch.onnx.symbolic_opset15"]], "torch.onnx.symbolic_opset16": [[2006, "module-torch.onnx.symbolic_opset16"]], "torch.onnx.symbolic_opset17": [[2006, "module-torch.onnx.symbolic_opset17"]], "torch.onnx.symbolic_opset18": [[2006, "module-torch.onnx.symbolic_opset18"]], "torch.onnx.symbolic_opset7": [[2006, "module-torch.onnx.symbolic_opset7"]], "torch.onnx.symbolic_opset8": [[2006, "module-torch.onnx.symbolic_opset8"]], "torch.onnx.symbolic_opset9": [[2006, "module-torch.onnx.symbolic_opset9"]], "torch.onnx.utils": [[2006, "module-torch.onnx.utils"]], "torch.onnx.verification": [[2006, "module-torch.onnx.verification"]], "diagnosticoptions (class in torch.onnx)": [[2007, "torch.onnx.DiagnosticOptions"]], "exportoptions (class in torch.onnx)": [[2007, "torch.onnx.ExportOptions"]], "invalidexportoptionserror (class in torch.onnx)": [[2007, "torch.onnx.InvalidExportOptionsError"]], "onnxprogram (class in torch.onnx)": [[2007, "torch.onnx.ONNXProgram"]], "onnxprogramserializer (class in torch.onnx)": [[2007, "torch.onnx.ONNXProgramSerializer"]], "onnxruntimeoptions (class in torch.onnx)": [[2007, "torch.onnx.ONNXRuntimeOptions"]], "onnxexportererror (class in torch.onnx)": [[2007, "torch.onnx.OnnxExporterError"]], "onnxregistry (class in torch.onnx)": [[2007, "torch.onnx.OnnxRegistry"]], "adapt_torch_inputs_to_onnx() (torch.onnx.onnxprogram method)": [[2007, "torch.onnx.ONNXProgram.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.onnxprogram method)": [[2007, "torch.onnx.ONNXProgram.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.onnxprogram property)": [[2007, "torch.onnx.ONNXProgram.diagnostic_context"]], "dynamo_export() (in module torch.onnx)": [[2007, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[2007, "torch.onnx.enable_fake_mode"]], "fake_context (torch.onnx.onnxprogram property)": [[2007, "torch.onnx.ONNXProgram.fake_context"]], "get_op_functions() (torch.onnx.onnxregistry method)": [[2007, "torch.onnx.OnnxRegistry.get_op_functions"]], "is_registered_op() (torch.onnx.onnxregistry method)": [[2007, "torch.onnx.OnnxRegistry.is_registered_op"]], "model_proto (torch.onnx.onnxprogram property)": [[2007, "torch.onnx.ONNXProgram.model_proto"]], "model_signature (torch.onnx.onnxprogram property)": [[2007, "torch.onnx.ONNXProgram.model_signature"]], "opset_version (torch.onnx.onnxregistry property)": [[2007, "torch.onnx.OnnxRegistry.opset_version"]], "register_op() (torch.onnx.onnxregistry method)": [[2007, "torch.onnx.OnnxRegistry.register_op"]], "save() (torch.onnx.onnxprogram method)": [[2007, "torch.onnx.ONNXProgram.save"]], "save_diagnostics() (torch.onnx.onnxprogram method)": [[2007, "torch.onnx.ONNXProgram.save_diagnostics"]], "serialize() (torch.onnx.onnxprogramserializer method)": [[2007, "torch.onnx.ONNXProgramSerializer.serialize"]], "is_onnxrt_backend_supported() (in module torch.onnx)": [[2008, "torch.onnx.is_onnxrt_backend_supported"]], "disable_log() (in module torch.onnx)": [[2009, "torch.onnx.disable_log"]], "enable_log() (in module torch.onnx)": [[2009, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[2009, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[2009, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[2009, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[2009, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[2009, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[2009, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[2009, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[2009, "torch.onnx.unregister_custom_op_symbolic"]], "optimizer (class in torch.optim)": [[2011, "torch.optim.Optimizer"]], "torch.optim": [[2011, "module-torch.optim"]], "torch.optim.adadelta": [[2011, "module-torch.optim.adadelta"]], "torch.optim.adagrad": [[2011, "module-torch.optim.adagrad"]], "torch.optim.adam": [[2011, "module-torch.optim.adam"]], "torch.optim.adamax": [[2011, "module-torch.optim.adamax"]], "torch.optim.adamw": [[2011, "module-torch.optim.adamw"]], "torch.optim.asgd": [[2011, "module-torch.optim.asgd"]], "torch.optim.lbfgs": [[2011, "module-torch.optim.lbfgs"]], "torch.optim.lr_scheduler": [[2011, "module-torch.optim.lr_scheduler"]], "torch.optim.nadam": [[2011, "module-torch.optim.nadam"]], "torch.optim.optimizer": [[2011, "module-torch.optim.optimizer"]], "torch.optim.radam": [[2011, "module-torch.optim.radam"]], "torch.optim.rmsprop": [[2011, "module-torch.optim.rmsprop"]], "torch.optim.rprop": [[2011, "module-torch.optim.rprop"]], "torch.optim.sgd": [[2011, "module-torch.optim.sgd"]], "torch.optim.sparse_adam": [[2011, "module-torch.optim.sparse_adam"]], "torch.optim.swa_utils": [[2011, "module-torch.optim.swa_utils"]], "directory (class in torch.package)": [[2012, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[2012, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[2012, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[2012, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[2012, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[2012, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[2012, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[2012, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[2012, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[2012, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[2012, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[2012, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[2012, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[2012, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[2012, "torch.package.PackageExporter.save_text"]], "torch.package": [[2012, "module-torch.package"]], "torch.package.analyze": [[2012, "module-torch.package.analyze"]], "torch.package.analyze.find_first_use_of_broken_modules": [[2012, "module-torch.package.analyze.find_first_use_of_broken_modules"]], "torch.package.analyze.is_from_package": [[2012, "module-torch.package.analyze.is_from_package"]], "torch.package.analyze.trace_dependencies": [[2012, "module-torch.package.analyze.trace_dependencies"]], "torch.package.file_structure_representation": [[2012, "module-torch.package.file_structure_representation"]], "torch.package.find_file_dependencies": [[2012, "module-torch.package.find_file_dependencies"]], "torch.package.glob_group": [[2012, "module-torch.package.glob_group"]], "torch.package.importer": [[2012, "module-torch.package.importer"]], "torch.package.package_exporter": [[2012, "module-torch.package.package_exporter"]], "torch.package.package_importer": [[2012, "module-torch.package.package_importer"]], "pipe (class in torch.distributed.pipeline.sync)": [[2013, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[2013, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[2013, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[2013, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[2013, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[2013, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[2014, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[2014, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[2014, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[2014, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[2014, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[2014, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[2014, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[2014, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[2014, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[2014, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[2014, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[2014, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[2014, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[2014, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[2014, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[2014, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[2014, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[2014, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[2014, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[2014, "module-torch.profiler"]], "torch.profiler.itt": [[2014, "module-torch.profiler.itt"]], "torch.profiler.profiler": [[2014, "module-torch.profiler.profiler"]], "torch.profiler.python_tracer": [[2014, "module-torch.profiler.python_tracer"]], "torch.ao": [[2015, "module-torch.ao"]], "torch.ao.nn": [[2015, "module-torch.ao.nn"]], "torch.ao.nn.intrinsic.modules.fused": [[2015, "module-torch.ao.nn.intrinsic.modules.fused"]], "torch.ao.nn.intrinsic.qat.modules.conv_fused": [[2015, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_fused": [[2015, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_relu": [[2015, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[2015, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules.bn_relu": [[2015, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"]], "torch.ao.nn.intrinsic.quantized.modules.conv_add": [[2015, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"]], "torch.ao.nn.intrinsic.quantized.modules.conv_relu": [[2015, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"]], "torch.ao.nn.intrinsic.quantized.modules.linear_relu": [[2015, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"]], "torch.ao.nn.qat.dynamic.modules.linear": [[2015, "module-torch.ao.nn.qat.dynamic.modules.linear"]], "torch.ao.nn.qat.modules.conv": [[2015, "module-torch.ao.nn.qat.modules.conv"]], "torch.ao.nn.qat.modules.embedding_ops": [[2015, "module-torch.ao.nn.qat.modules.embedding_ops"]], "torch.ao.nn.qat.modules.linear": [[2015, "module-torch.ao.nn.qat.modules.linear"]], "torch.ao.nn.quantizable": [[2015, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[2015, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantizable.modules.activation": [[2015, "module-torch.ao.nn.quantizable.modules.activation"]], "torch.ao.nn.quantizable.modules.rnn": [[2015, "module-torch.ao.nn.quantizable.modules.rnn"]], "torch.ao.nn.quantized": [[2015, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.dynamic.modules.conv": [[2015, "module-torch.ao.nn.quantized.dynamic.modules.conv"]], "torch.ao.nn.quantized.dynamic.modules.linear": [[2015, "module-torch.ao.nn.quantized.dynamic.modules.linear"]], "torch.ao.nn.quantized.dynamic.modules.rnn": [[2015, "module-torch.ao.nn.quantized.dynamic.modules.rnn"]], "torch.ao.nn.quantized.modules.activation": [[2015, "module-torch.ao.nn.quantized.modules.activation"]], "torch.ao.nn.quantized.modules.batchnorm": [[2015, "module-torch.ao.nn.quantized.modules.batchnorm"]], "torch.ao.nn.quantized.modules.conv": [[2015, "module-torch.ao.nn.quantized.modules.conv"]], "torch.ao.nn.quantized.modules.dropout": [[2015, "module-torch.ao.nn.quantized.modules.dropout"]], "torch.ao.nn.quantized.modules.embedding_ops": [[2015, "module-torch.ao.nn.quantized.modules.embedding_ops"]], "torch.ao.nn.quantized.modules.functional_modules": [[2015, "module-torch.ao.nn.quantized.modules.functional_modules"]], "torch.ao.nn.quantized.modules.linear": [[2015, "module-torch.ao.nn.quantized.modules.linear"]], "torch.ao.nn.quantized.modules.normalization": [[2015, "module-torch.ao.nn.quantized.modules.normalization"]], "torch.ao.nn.quantized.modules.rnn": [[2015, "module-torch.ao.nn.quantized.modules.rnn"]], "torch.ao.nn.quantized.modules.utils": [[2015, "module-torch.ao.nn.quantized.modules.utils"]], "torch.ao.nn.quantized.reference": [[2015, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[2015, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.quantized.reference.modules.conv": [[2015, "module-torch.ao.nn.quantized.reference.modules.conv"]], "torch.ao.nn.quantized.reference.modules.linear": [[2015, "module-torch.ao.nn.quantized.reference.modules.linear"]], "torch.ao.nn.quantized.reference.modules.rnn": [[2015, "module-torch.ao.nn.quantized.reference.modules.rnn"]], "torch.ao.nn.quantized.reference.modules.sparse": [[2015, "module-torch.ao.nn.quantized.reference.modules.sparse"]], "torch.ao.nn.quantized.reference.modules.utils": [[2015, "module-torch.ao.nn.quantized.reference.modules.utils"]], "torch.ao.nn.sparse": [[2015, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[2015, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[2015, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.nn.sparse.quantized.dynamic.linear": [[2015, "module-torch.ao.nn.sparse.quantized.dynamic.linear"]], "torch.ao.nn.sparse.quantized.linear": [[2015, "module-torch.ao.nn.sparse.quantized.linear"]], "torch.ao.nn.sparse.quantized.utils": [[2015, "module-torch.ao.nn.sparse.quantized.utils"]], "torch.ao.ns": [[2015, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[2015, "module-torch.ao.ns.fx"]], "torch.ao.ns.fx.graph_matcher": [[2015, "module-torch.ao.ns.fx.graph_matcher"]], "torch.ao.ns.fx.graph_passes": [[2015, "module-torch.ao.ns.fx.graph_passes"]], "torch.ao.ns.fx.mappings": [[2015, "module-torch.ao.ns.fx.mappings"]], "torch.ao.ns.fx.n_shadows_utils": [[2015, "module-torch.ao.ns.fx.n_shadows_utils"]], "torch.ao.ns.fx.ns_types": [[2015, "module-torch.ao.ns.fx.ns_types"]], "torch.ao.ns.fx.pattern_utils": [[2015, "module-torch.ao.ns.fx.pattern_utils"]], "torch.ao.ns.fx.qconfig_multi_mapping": [[2015, "module-torch.ao.ns.fx.qconfig_multi_mapping"]], "torch.ao.ns.fx.utils": [[2015, "module-torch.ao.ns.fx.utils"]], "torch.ao.ns.fx.weight_utils": [[2015, "module-torch.ao.ns.fx.weight_utils"]], "torch.ao.pruning": [[2015, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[2015, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.scheduler.base_scheduler": [[2015, "module-torch.ao.pruning.scheduler.base_scheduler"]], "torch.ao.pruning.scheduler.cubic_scheduler": [[2015, "module-torch.ao.pruning.scheduler.cubic_scheduler"]], "torch.ao.pruning.scheduler.lambda_scheduler": [[2015, "module-torch.ao.pruning.scheduler.lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[2015, "module-torch.ao.pruning.sparsifier"]], "torch.ao.pruning.sparsifier.base_sparsifier": [[2015, "module-torch.ao.pruning.sparsifier.base_sparsifier"]], "torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier": [[2015, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"]], "torch.ao.pruning.sparsifier.utils": [[2015, "module-torch.ao.pruning.sparsifier.utils"]], "torch.ao.pruning.sparsifier.weight_norm_sparsifier": [[2015, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"]], "torch.ao.quantization": [[2015, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[2015, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.backend_config.backend_config": [[2015, "module-torch.ao.quantization.backend_config.backend_config"]], "torch.ao.quantization.backend_config.executorch": [[2015, "module-torch.ao.quantization.backend_config.executorch"]], "torch.ao.quantization.backend_config.fbgemm": [[2015, "module-torch.ao.quantization.backend_config.fbgemm"]], "torch.ao.quantization.backend_config.native": [[2015, "module-torch.ao.quantization.backend_config.native"]], "torch.ao.quantization.backend_config.observation_type": [[2015, "module-torch.ao.quantization.backend_config.observation_type"]], "torch.ao.quantization.backend_config.onednn": [[2015, "module-torch.ao.quantization.backend_config.onednn"]], "torch.ao.quantization.backend_config.qnnpack": [[2015, "module-torch.ao.quantization.backend_config.qnnpack"]], "torch.ao.quantization.backend_config.tensorrt": [[2015, "module-torch.ao.quantization.backend_config.tensorrt"]], "torch.ao.quantization.backend_config.utils": [[2015, "module-torch.ao.quantization.backend_config.utils"]], "torch.ao.quantization.backend_config.x86": [[2015, "module-torch.ao.quantization.backend_config.x86"]], "torch.ao.quantization.fake_quantize": [[2015, "module-torch.ao.quantization.fake_quantize"]], "torch.ao.quantization.fuse_modules": [[2015, "module-torch.ao.quantization.fuse_modules"]], "torch.ao.quantization.fuser_method_mappings": [[2015, "module-torch.ao.quantization.fuser_method_mappings"]], "torch.ao.quantization.fx": [[2015, "module-torch.ao.quantization.fx"]], "torch.ao.quantization.fx.convert": [[2015, "module-torch.ao.quantization.fx.convert"]], "torch.ao.quantization.fx.custom_config": [[2015, "module-torch.ao.quantization.fx.custom_config"]], "torch.ao.quantization.fx.fuse": [[2015, "module-torch.ao.quantization.fx.fuse"]], "torch.ao.quantization.fx.fuse_handler": [[2015, "module-torch.ao.quantization.fx.fuse_handler"]], "torch.ao.quantization.fx.graph_module": [[2015, "module-torch.ao.quantization.fx.graph_module"]], "torch.ao.quantization.fx.lower_to_fbgemm": [[2015, "module-torch.ao.quantization.fx.lower_to_fbgemm"]], "torch.ao.quantization.fx.lower_to_qnnpack": [[2015, "module-torch.ao.quantization.fx.lower_to_qnnpack"]], "torch.ao.quantization.fx.lstm_utils": [[2015, "module-torch.ao.quantization.fx.lstm_utils"]], "torch.ao.quantization.fx.match_utils": [[2015, "module-torch.ao.quantization.fx.match_utils"]], "torch.ao.quantization.fx.pattern_utils": [[2015, "module-torch.ao.quantization.fx.pattern_utils"]], "torch.ao.quantization.fx.prepare": [[2015, "module-torch.ao.quantization.fx.prepare"]], "torch.ao.quantization.fx.qconfig_mapping_utils": [[2015, "module-torch.ao.quantization.fx.qconfig_mapping_utils"]], "torch.ao.quantization.fx.quantize_handler": [[2015, "module-torch.ao.quantization.fx.quantize_handler"]], "torch.ao.quantization.fx.tracer": [[2015, "module-torch.ao.quantization.fx.tracer"]], "torch.ao.quantization.fx.utils": [[2015, "module-torch.ao.quantization.fx.utils"]], "torch.ao.quantization.observer": [[2015, "module-torch.ao.quantization.observer"]], "torch.ao.quantization.pt2e.duplicate_dq_pass": [[2015, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"]], "torch.ao.quantization.pt2e.export_utils": [[2015, "module-torch.ao.quantization.pt2e.export_utils"]], "torch.ao.quantization.pt2e.graph_utils": [[2015, "module-torch.ao.quantization.pt2e.graph_utils"]], "torch.ao.quantization.pt2e.port_metadata_pass": [[2015, "module-torch.ao.quantization.pt2e.port_metadata_pass"]], "torch.ao.quantization.pt2e.prepare": [[2015, "module-torch.ao.quantization.pt2e.prepare"]], "torch.ao.quantization.pt2e.qat_utils": [[2015, "module-torch.ao.quantization.pt2e.qat_utils"]], "torch.ao.quantization.pt2e.representation.rewrite": [[2015, "module-torch.ao.quantization.pt2e.representation.rewrite"]], "torch.ao.quantization.pt2e.utils": [[2015, "module-torch.ao.quantization.pt2e.utils"]], "torch.ao.quantization.qconfig": [[2015, "module-torch.ao.quantization.qconfig"]], "torch.ao.quantization.qconfig_mapping": [[2015, "module-torch.ao.quantization.qconfig_mapping"]], "torch.ao.quantization.quant_type": [[2015, "module-torch.ao.quantization.quant_type"]], "torch.ao.quantization.quantization_mappings": [[2015, "module-torch.ao.quantization.quantization_mappings"]], "torch.ao.quantization.quantize": [[2015, "module-torch.ao.quantization.quantize"]], "torch.ao.quantization.quantize_fx": [[2015, "module-torch.ao.quantization.quantize_fx"]], "torch.ao.quantization.quantize_jit": [[2015, "module-torch.ao.quantization.quantize_jit"]], "torch.ao.quantization.quantize_pt2e": [[2015, "module-torch.ao.quantization.quantize_pt2e"]], "torch.ao.quantization.quantizer.composable_quantizer": [[2015, "module-torch.ao.quantization.quantizer.composable_quantizer"]], "torch.ao.quantization.quantizer.embedding_quantizer": [[2015, "module-torch.ao.quantization.quantizer.embedding_quantizer"]], "torch.ao.quantization.quantizer.quantizer": [[2015, "module-torch.ao.quantization.quantizer.quantizer"]], "torch.ao.quantization.quantizer.utils": [[2015, "module-torch.ao.quantization.quantizer.utils"]], "torch.ao.quantization.quantizer.x86_inductor_quantizer": [[2015, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer": [[2015, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer_utils": [[2015, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"]], "torch.ao.quantization.stubs": [[2015, "module-torch.ao.quantization.stubs"]], "torch.ao.quantization.utils": [[2015, "module-torch.ao.quantization.utils"]], "torch.nn.intrinsic.modules.fused": [[2015, "module-torch.nn.intrinsic.modules.fused"]], "torch.nn.intrinsic.qat.modules.conv_fused": [[2015, "module-torch.nn.intrinsic.qat.modules.conv_fused"]], "torch.nn.intrinsic.qat.modules.linear_fused": [[2015, "module-torch.nn.intrinsic.qat.modules.linear_fused"]], "torch.nn.intrinsic.qat.modules.linear_relu": [[2015, "module-torch.nn.intrinsic.qat.modules.linear_relu"]], "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[2015, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.nn.intrinsic.quantized.modules.bn_relu": [[2015, "module-torch.nn.intrinsic.quantized.modules.bn_relu"]], "torch.nn.intrinsic.quantized.modules.conv_relu": [[2015, "module-torch.nn.intrinsic.quantized.modules.conv_relu"]], "torch.nn.intrinsic.quantized.modules.linear_relu": [[2015, "module-torch.nn.intrinsic.quantized.modules.linear_relu"]], "torch.nn.qat.dynamic.modules.linear": [[2015, "module-torch.nn.qat.dynamic.modules.linear"]], "torch.nn.qat.modules.conv": [[2015, "module-torch.nn.qat.modules.conv"]], "torch.nn.qat.modules.embedding_ops": [[2015, "module-torch.nn.qat.modules.embedding_ops"]], "torch.nn.qat.modules.linear": [[2015, "module-torch.nn.qat.modules.linear"]], "torch.nn.quantizable.modules.activation": [[2015, "module-torch.nn.quantizable.modules.activation"]], "torch.nn.quantizable.modules.rnn": [[2015, "module-torch.nn.quantizable.modules.rnn"]], "torch.nn.quantized.dynamic.modules.conv": [[2015, "module-torch.nn.quantized.dynamic.modules.conv"]], "torch.nn.quantized.dynamic.modules.linear": [[2015, "module-torch.nn.quantized.dynamic.modules.linear"]], "torch.nn.quantized.dynamic.modules.rnn": [[2015, "module-torch.nn.quantized.dynamic.modules.rnn"]], "torch.nn.quantized.functional": [[2015, "module-torch.nn.quantized.functional"]], "torch.nn.quantized.modules.activation": [[2015, "module-torch.nn.quantized.modules.activation"]], "torch.nn.quantized.modules.batchnorm": [[2015, "module-torch.nn.quantized.modules.batchnorm"]], "torch.nn.quantized.modules.conv": [[2015, "module-torch.nn.quantized.modules.conv"]], "torch.nn.quantized.modules.dropout": [[2015, "module-torch.nn.quantized.modules.dropout"]], "torch.nn.quantized.modules.embedding_ops": [[2015, "module-torch.nn.quantized.modules.embedding_ops"]], "torch.nn.quantized.modules.functional_modules": [[2015, "module-torch.nn.quantized.modules.functional_modules"]], "torch.nn.quantized.modules.linear": [[2015, "module-torch.nn.quantized.modules.linear"]], "torch.nn.quantized.modules.normalization": [[2015, "module-torch.nn.quantized.modules.normalization"]], "torch.nn.quantized.modules.rnn": [[2015, "module-torch.nn.quantized.modules.rnn"]], "torch.nn.quantized.modules.utils": [[2015, "module-torch.nn.quantized.modules.utils"]], "torch.quantization.fake_quantize": [[2015, "module-torch.quantization.fake_quantize"]], "torch.quantization.fuse_modules": [[2015, "module-torch.quantization.fuse_modules"]], "torch.quantization.fuser_method_mappings": [[2015, "module-torch.quantization.fuser_method_mappings"]], "torch.quantization.fx.convert": [[2015, "module-torch.quantization.fx.convert"]], "torch.quantization.fx.fuse": [[2015, "module-torch.quantization.fx.fuse"]], "torch.quantization.fx.fusion_patterns": [[2015, "module-torch.quantization.fx.fusion_patterns"]], "torch.quantization.fx.graph_module": [[2015, "module-torch.quantization.fx.graph_module"]], "torch.quantization.fx.match_utils": [[2015, "module-torch.quantization.fx.match_utils"]], "torch.quantization.fx.pattern_utils": [[2015, "module-torch.quantization.fx.pattern_utils"]], "torch.quantization.fx.prepare": [[2015, "module-torch.quantization.fx.prepare"]], "torch.quantization.fx.quantization_patterns": [[2015, "module-torch.quantization.fx.quantization_patterns"]], "torch.quantization.fx.quantization_types": [[2015, "module-torch.quantization.fx.quantization_types"]], "torch.quantization.fx.utils": [[2015, "module-torch.quantization.fx.utils"]], "torch.quantization.observer": [[2015, "module-torch.quantization.observer"]], "torch.quantization.qconfig": [[2015, "module-torch.quantization.qconfig"]], "torch.quantization.quant_type": [[2015, "module-torch.quantization.quant_type"]], "torch.quantization.quantization_mappings": [[2015, "module-torch.quantization.quantization_mappings"]], "torch.quantization.quantize": [[2015, "module-torch.quantization.quantize"]], "torch.quantization.quantize_fx": [[2015, "module-torch.quantization.quantize_fx"]], "torch.quantization.quantize_jit": [[2015, "module-torch.quantization.quantize_jit"]], "torch.quantization.stubs": [[2015, "module-torch.quantization.stubs"]], "torch.quantization.utils": [[2015, "module-torch.quantization.utils"]], "torch.ao.nn.intrinsic": [[2018, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[2018, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[2018, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[2018, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[2018, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[2018, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[2018, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[2018, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[2018, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[2018, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[2018, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[2018, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[2018, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[2018, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[2018, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[2018, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[2018, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.generate_numeric_debug_handle": [[2018, "module-torch.ao.quantization.pt2e.generate_numeric_debug_handle"]], "torch.ao.quantization.pt2e.representation": [[2018, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[2018, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[2018, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[2018, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[2018, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[2018, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[2018, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[2018, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[2018, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[2018, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[2018, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[2018, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[2018, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[2018, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[2018, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[2018, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[2018, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[2018, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[2018, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[2018, "module-torch.nn.quantized.modules"]], "torch.quantization": [[2018, "module-torch.quantization"]], "torch.quantization.fx": [[2018, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[2019, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[2019, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[2019, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[2019, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[2019, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[2019, "torch.random.set_rng_state"]], "torch.random": [[2019, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[2020, "torch.distributed.rpc.BackendType"]], "pyrref (class in torch.distributed.rpc)": [[2020, "torch.distributed.rpc.PyRRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[2020, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[2020, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[2020, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[2020, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[2020, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[2020, "torch.distributed.autograd.backward"]], "backward() (torch.distributed.rpc.pyrref method)": [[2020, "torch.distributed.rpc.PyRRef.backward"]], "confirmed_by_owner() (torch.distributed.rpc.pyrref method)": [[2020, "torch.distributed.rpc.PyRRef.confirmed_by_owner"]], "context (class in torch.distributed.autograd)": [[2020, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2020, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2020, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[2020, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[2020, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[2020, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[2020, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[2020, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2020, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[2020, "torch.distributed.rpc.init_rpc"]], "is_owner() (torch.distributed.rpc.pyrref method)": [[2020, "torch.distributed.rpc.PyRRef.is_owner"]], "local_value() (torch.distributed.rpc.pyrref method)": [[2020, "torch.distributed.rpc.PyRRef.local_value"]], "name (torch.distributed.rpc.workerinfo property)": [[2020, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2020, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "owner() (torch.distributed.rpc.pyrref method)": [[2020, "torch.distributed.rpc.PyRRef.owner"]], "owner_name() (torch.distributed.rpc.pyrref method)": [[2020, "torch.distributed.rpc.PyRRef.owner_name"]], "remote() (in module torch.distributed.rpc)": [[2020, "torch.distributed.rpc.remote"]], "remote() (torch.distributed.rpc.pyrref method)": [[2020, "torch.distributed.rpc.PyRRef.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[2020, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[2020, "torch.distributed.rpc.rpc_async"]], "rpc_async() (torch.distributed.rpc.pyrref method)": [[2020, "torch.distributed.rpc.PyRRef.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[2020, "torch.distributed.rpc.rpc_sync"]], "rpc_sync() (torch.distributed.rpc.pyrref method)": [[2020, "torch.distributed.rpc.PyRRef.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[2020, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2020, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[2020, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[2020, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[2020, "torch.distributed.rpc.shutdown"]], "to_here() (torch.distributed.rpc.pyrref method)": [[2020, "torch.distributed.rpc.PyRRef.to_here"]], "torch.distributed.autograd": [[2020, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[2020, "module-torch.distributed.rpc"]], "torch.signal": [[2023, "module-torch.signal"]], "torch.signal.windows": [[2023, "module-torch.signal.windows"]], "torch.sparse": [[2024, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[2025, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[2025, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[2025, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[2025, "torch.special.digamma"]], "entr() (in module torch.special)": [[2025, "torch.special.entr"]], "erf() (in module torch.special)": [[2025, "torch.special.erf"]], "erfc() (in module torch.special)": [[2025, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[2025, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[2025, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[2025, "torch.special.exp2"]], "expit() (in module torch.special)": [[2025, "torch.special.expit"]], "expm1() (in module torch.special)": [[2025, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[2025, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[2025, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[2025, "torch.special.gammaln"]], "i0() (in module torch.special)": [[2025, "torch.special.i0"]], "i0e() (in module torch.special)": [[2025, "torch.special.i0e"]], "i1() (in module torch.special)": [[2025, "torch.special.i1"]], "i1e() (in module torch.special)": [[2025, "torch.special.i1e"]], "log1p() (in module torch.special)": [[2025, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[2025, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[2025, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[2025, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[2025, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[2025, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[2025, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[2025, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[2025, "torch.special.polygamma"]], "psi() (in module torch.special)": [[2025, "torch.special.psi"]], "round() (in module torch.special)": [[2025, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[2025, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[2025, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[2025, "torch.special.sinc"]], "softmax() (in module torch.special)": [[2025, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[2025, "torch.special.spherical_bessel_j0"]], "torch.special": [[2025, "module-torch.special"]], "xlog1py() (in module torch.special)": [[2025, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[2025, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[2025, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[2026, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[2026, "torch.BoolStorage"]], "bytestorage (class in torch)": [[2026, "torch.ByteStorage"]], "charstorage (class in torch)": [[2026, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[2026, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[2026, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[2026, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[2026, "torch.FloatStorage"]], "halfstorage (class in torch)": [[2026, "torch.HalfStorage"]], "intstorage (class in torch)": [[2026, "torch.IntStorage"]], "longstorage (class in torch)": [[2026, "torch.LongStorage"]], "qint32storage (class in torch)": [[2026, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[2026, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[2026, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[2026, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[2026, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[2026, "torch.ShortStorage"]], "typedstorage (class in torch)": [[2026, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[2026, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[2026, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[2026, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[2026, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[2026, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[2026, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[2026, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[2026, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[2026, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[2026, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[2026, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[2026, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[2026, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[2026, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[2026, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[2026, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[2026, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[2026, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[2026, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[2026, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[2026, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[2026, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[2026, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[2026, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[2026, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[2026, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[2026, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[2026, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[2026, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[2026, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[2026, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[2026, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[2026, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[2026, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.element_size"]], "filename (torch.typedstorage property)": [[2026, "torch.TypedStorage.filename"]], "filename (torch.untypedstorage property)": [[2026, "torch.UntypedStorage.filename"]], "fill_() (torch.typedstorage method)": [[2026, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[2026, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.float"]], "float8_e4m3fn() (torch.typedstorage method)": [[2026, "torch.TypedStorage.float8_e4m3fn"]], "float8_e4m3fn() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.float8_e4m3fn"]], "float8_e4m3fnuz() (torch.typedstorage method)": [[2026, "torch.TypedStorage.float8_e4m3fnuz"]], "float8_e4m3fnuz() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.float8_e4m3fnuz"]], "float8_e5m2() (torch.typedstorage method)": [[2026, "torch.TypedStorage.float8_e5m2"]], "float8_e5m2() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.float8_e5m2"]], "float8_e5m2fnuz() (torch.typedstorage method)": [[2026, "torch.TypedStorage.float8_e5m2fnuz"]], "float8_e5m2fnuz() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.float8_e5m2fnuz"]], "from_buffer() (torch.typedstorage class method)": [[2026, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[2026, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[2026, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[2026, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[2026, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[2026, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[2026, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[2026, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[2026, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[2026, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[2026, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[2026, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[2026, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[2026, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[2026, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[2026, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[2026, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[2026, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[2026, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[2026, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[2026, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.pin_memory"]], "resizable() (torch.typedstorage method)": [[2026, "torch.TypedStorage.resizable"]], "resizable() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.resizable"]], "resize_() (torch.typedstorage method)": [[2026, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[2026, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[2026, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[2026, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[2026, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[2026, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[2026, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[2026, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[2027, "torch.device"]], "dtype (class in torch)": [[2027, "torch.dtype"]], "layout (class in torch)": [[2027, "torch.layout"]], "memory_format (class in torch)": [[2027, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[2029, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[2029, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[2030, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[2030, "torch.Tensor.T"]], "tensor (class in torch)": [[2030, "torch.Tensor"]], "mh (torch.tensor attribute)": [[2030, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[2030, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[2031, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[2031, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[2031, "torch.testing.make_tensor"]], "torch.testing": [[2031, "module-torch.testing"]], "symbool (class in torch)": [[2032, "torch.SymBool"]], "symfloat (class in torch)": [[2032, "torch.SymFloat"]], "symint (class in torch)": [[2032, "torch.SymInt"]], "tag (class in torch)": [[2032, "torch.Tag"]], "default_generator (torch.torch attribute)": [[2032, "torch.torch.default_generator"]], "is_integer() (torch.symfloat method)": [[2032, "torch.SymFloat.is_integer"]], "name (torch.tag property)": [[2032, "torch.Tag.name"]], "torch": [[2032, "module-torch"]], "torch.contrib": [[2032, "module-torch.contrib"]], "torch.functional": [[2032, "module-torch.functional"]], "torch.quasirandom": [[2032, "module-torch.quasirandom"]], "torch.return_types": [[2032, "module-torch.return_types"]], "torch.serialization": [[2032, "module-torch.serialization"]], "torch.signal.windows.windows": [[2032, "module-torch.signal.windows.windows"]], "torch.sparse.semi_structured": [[2032, "module-torch.sparse.semi_structured"]], "torch.storage": [[2032, "module-torch.storage"]], "torch.torch_version": [[2032, "module-torch.torch_version"]], "torch.types": [[2032, "module-torch.types"]], "torch.utils.backcompat": [[2032, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[2032, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[2032, "module-torch.utils.model_dump"]], "torch.utils.viz": [[2032, "module-torch.utils.viz"]], "torch.version": [[2032, "module-torch.version"]], "logger (class in torch.ao.ns._numeric_suite)": [[2033, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[2033, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[2033, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[2033, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[2033, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[2033, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[2033, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[2033, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[2033, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[2033, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[2033, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[2033, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[2033, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[2033, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[2033, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[2033, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[2033, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[2033, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[2033, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[2033, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[2033, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[2033, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[2034, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[2034, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[2034, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[2034, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[2034, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[2034, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2034, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[2034, "module-torch.ao.ns._numeric_suite_fx"]], "torch.compiler": [[2037, "module-torch.compiler"]], "get_ignored_functions() (in module torch.overrides)": [[2055, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[2055, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[2055, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[2055, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[2055, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[2055, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[2055, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[2055, "torch.overrides.resolve_name"]], "torch.overrides": [[2055, "module-torch.overrides"]], "wrap_torch_function() (in module torch.overrides)": [[2055, "torch.overrides.wrap_torch_function"]], "_dump_snapshot() (in module torch.cuda.memory)": [[2056, "torch.cuda.memory._dump_snapshot"]], "_record_memory_history() (in module torch.cuda.memory)": [[2056, "torch.cuda.memory._record_memory_history"]], "_snapshot() (in module torch.cuda.memory)": [[2056, "torch.cuda.memory._snapshot"]], "torch.finfo (class in torch)": [[2057, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[2057, "torch.torch.iinfo"]], "torch.utils": [[2058, "module-torch.utils"]], "torch.utils.backend_registration": [[2058, "module-torch.utils.backend_registration"]], "torch.utils.benchmark.examples.blas_compare_setup": [[2058, "module-torch.utils.benchmark.examples.blas_compare_setup"]], "torch.utils.benchmark.examples.compare": [[2058, "module-torch.utils.benchmark.examples.compare"]], "torch.utils.benchmark.examples.fuzzer": [[2058, "module-torch.utils.benchmark.examples.fuzzer"]], "torch.utils.benchmark.examples.op_benchmark": [[2058, "module-torch.utils.benchmark.examples.op_benchmark"]], "torch.utils.benchmark.examples.simple_timeit": [[2058, "module-torch.utils.benchmark.examples.simple_timeit"]], "torch.utils.benchmark.examples.spectral_ops_fuzz_test": [[2058, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers.binary": [[2058, "module-torch.utils.benchmark.op_fuzzers.binary"]], "torch.utils.benchmark.op_fuzzers.sparse_binary": [[2058, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"]], "torch.utils.benchmark.op_fuzzers.sparse_unary": [[2058, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"]], "torch.utils.benchmark.op_fuzzers.spectral": [[2058, "module-torch.utils.benchmark.op_fuzzers.spectral"]], "torch.utils.benchmark.op_fuzzers.unary": [[2058, "module-torch.utils.benchmark.op_fuzzers.unary"]], "torch.utils.benchmark.utils.common": [[2058, "module-torch.utils.benchmark.utils.common"]], "torch.utils.benchmark.utils.compare": [[2058, "module-torch.utils.benchmark.utils.compare"]], "torch.utils.benchmark.utils.compile": [[2058, "module-torch.utils.benchmark.utils.compile"]], "torch.utils.benchmark.utils.cpp_jit": [[2058, "module-torch.utils.benchmark.utils.cpp_jit"]], "torch.utils.benchmark.utils.fuzzer": [[2058, "module-torch.utils.benchmark.utils.fuzzer"]], "torch.utils.benchmark.utils.sparse_fuzzer": [[2058, "module-torch.utils.benchmark.utils.sparse_fuzzer"]], "torch.utils.benchmark.utils.timer": [[2058, "module-torch.utils.benchmark.utils.timer"]], "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface": [[2058, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"]], "torch.utils.bundled_inputs": [[2058, "module-torch.utils.bundled_inputs"]], "torch.utils.checkpoint": [[2058, "module-torch.utils.checkpoint"]], "torch.utils.collect_env": [[2058, "module-torch.utils.collect_env"]], "torch.utils.cpp_backtrace": [[2058, "module-torch.utils.cpp_backtrace"]], "torch.utils.cpp_extension": [[2058, "module-torch.utils.cpp_extension"]], "torch.utils.data.backward_compatibility": [[2058, "module-torch.utils.data.backward_compatibility"]], "torch.utils.data.dataloader": [[2058, "module-torch.utils.data.dataloader"]], "torch.utils.data.datapipes.dataframe.dataframe_wrapper": [[2058, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"]], "torch.utils.data.datapipes.dataframe.dataframes": [[2058, "module-torch.utils.data.datapipes.dataframe.dataframes"]], "torch.utils.data.datapipes.dataframe.datapipes": [[2058, "module-torch.utils.data.datapipes.dataframe.datapipes"]], "torch.utils.data.datapipes.dataframe.structures": [[2058, "module-torch.utils.data.datapipes.dataframe.structures"]], "torch.utils.data.datapipes.datapipe": [[2058, "module-torch.utils.data.datapipes.datapipe"]], "torch.utils.data.datapipes.gen_pyi": [[2058, "module-torch.utils.data.datapipes.gen_pyi"]], "torch.utils.data.datapipes.iter.callable": [[2058, "module-torch.utils.data.datapipes.iter.callable"]], "torch.utils.data.datapipes.iter.combinatorics": [[2058, "module-torch.utils.data.datapipes.iter.combinatorics"]], "torch.utils.data.datapipes.iter.combining": [[2058, "module-torch.utils.data.datapipes.iter.combining"]], "torch.utils.data.datapipes.iter.filelister": [[2058, "module-torch.utils.data.datapipes.iter.filelister"]], "torch.utils.data.datapipes.iter.fileopener": [[2058, "module-torch.utils.data.datapipes.iter.fileopener"]], "torch.utils.data.datapipes.iter.grouping": [[2058, "module-torch.utils.data.datapipes.iter.grouping"]], "torch.utils.data.datapipes.iter.routeddecoder": [[2058, "module-torch.utils.data.datapipes.iter.routeddecoder"]], "torch.utils.data.datapipes.iter.selecting": [[2058, "module-torch.utils.data.datapipes.iter.selecting"]], "torch.utils.data.datapipes.iter.sharding": [[2058, "module-torch.utils.data.datapipes.iter.sharding"]], "torch.utils.data.datapipes.iter.streamreader": [[2058, "module-torch.utils.data.datapipes.iter.streamreader"]], "torch.utils.data.datapipes.iter.utils": [[2058, "module-torch.utils.data.datapipes.iter.utils"]], "torch.utils.data.datapipes.map.callable": [[2058, "module-torch.utils.data.datapipes.map.callable"]], "torch.utils.data.datapipes.map.combinatorics": [[2058, "module-torch.utils.data.datapipes.map.combinatorics"]], "torch.utils.data.datapipes.map.combining": [[2058, "module-torch.utils.data.datapipes.map.combining"]], "torch.utils.data.datapipes.map.grouping": [[2058, "module-torch.utils.data.datapipes.map.grouping"]], "torch.utils.data.datapipes.map.utils": [[2058, "module-torch.utils.data.datapipes.map.utils"]], "torch.utils.data.datapipes.utils.common": [[2058, "module-torch.utils.data.datapipes.utils.common"]], "torch.utils.data.datapipes.utils.decoder": [[2058, "module-torch.utils.data.datapipes.utils.decoder"]], "torch.utils.data.datapipes.utils.snapshot": [[2058, "module-torch.utils.data.datapipes.utils.snapshot"]], "torch.utils.data.dataset": [[2058, "module-torch.utils.data.dataset"]], "torch.utils.data.distributed": [[2058, "module-torch.utils.data.distributed"]], "torch.utils.data.graph": [[2058, "module-torch.utils.data.graph"]], "torch.utils.data.graph_settings": [[2058, "module-torch.utils.data.graph_settings"]], "torch.utils.data.sampler": [[2058, "module-torch.utils.data.sampler"]], "torch.utils.dlpack": [[2058, "module-torch.utils.dlpack"]], "torch.utils.file_baton": [[2058, "module-torch.utils.file_baton"]], "torch.utils.flop_counter": [[2058, "module-torch.utils.flop_counter"]], "torch.utils.hipify.constants": [[2058, "module-torch.utils.hipify.constants"]], "torch.utils.hipify.cuda_to_hip_mappings": [[2058, "module-torch.utils.hipify.cuda_to_hip_mappings"]], "torch.utils.hipify.hipify_python": [[2058, "module-torch.utils.hipify.hipify_python"]], "torch.utils.hipify.version": [[2058, "module-torch.utils.hipify.version"]], "torch.utils.hooks": [[2058, "module-torch.utils.hooks"]], "torch.utils.jit.log_extract": [[2058, "module-torch.utils.jit.log_extract"]], "torch.utils.mkldnn": [[2058, "module-torch.utils.mkldnn"]], "torch.utils.mobile_optimizer": [[2058, "module-torch.utils.mobile_optimizer"]], "torch.utils.show_pickle": [[2058, "module-torch.utils.show_pickle"]], "torch.utils.tensorboard.summary": [[2058, "module-torch.utils.tensorboard.summary"]], "torch.utils.tensorboard.writer": [[2058, "module-torch.utils.tensorboard.writer"]], "torch.utils.throughput_benchmark": [[2058, "module-torch.utils.throughput_benchmark"]], "torch.utils.weak": [[2058, "module-torch.utils.weak"]], "torch.xpu": [[2059, "module-torch.xpu"]], "torch.xpu.streams": [[2059, "module-torch.xpu.streams"]]}})