Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "complex_numbers", "config_mod", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "export", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.dynamic-value", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/onnx_diagnostics_rules/FXE0007:fx-graph-to-onnx", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dim_order", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.register_post_accumulate_grad_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.event.Event", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.DiagnosticOptions", "generated/torch.onnx.ExportOptions", "generated/torch.onnx.ExportOutput", "generated/torch.onnx.ExportOutputSerializer", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.OnnxExporterError", "generated/torch.onnx.OnnxRegistry", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.as_sparse_gradcheck", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_diagnostics", "onnx_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler_api", "torch.compiler_best_practices_for_backends", "torch.compiler_cudagraph_trees", "torch.compiler_custom_backends", "torch.compiler_deepdive", "torch.compiler_dynamic_shapes", "torch.compiler_fake_tensor", "torch.compiler_faq", "torch.compiler_fine_grain_apis", "torch.compiler_get_started", "torch.compiler_guards_overview", "torch.compiler_inductor_profiling", "torch.compiler_ir", "torch.compiler_nn_module", "torch.compiler_performance_dashboard", "torch.compiler_profiling_torch_compile", "torch.compiler_transformations", "torch.compiler_troubleshooting", "torch.overrides", "torch_cuda_memory", "type_info", "utils"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "complex_numbers.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.dynamic-value.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/onnx_diagnostics_rules/FXE0007:fx-graph-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dim_order.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.register_post_accumulate_grad_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.event.Event.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.DiagnosticOptions.rst", "generated/torch.onnx.ExportOptions.rst", "generated/torch.onnx.ExportOutput.rst", "generated/torch.onnx.ExportOutputSerializer.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.OnnxExporterError.rst", "generated/torch.onnx.OnnxRegistry.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.as_sparse_gradcheck.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_diagnostics.rst", "onnx_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.compiler.rst", "torch.compiler_api.rst", "torch.compiler_best_practices_for_backends.rst", "torch.compiler_cudagraph_trees.rst", "torch.compiler_custom_backends.rst", "torch.compiler_deepdive.rst", "torch.compiler_dynamic_shapes.rst", "torch.compiler_fake_tensor.rst", "torch.compiler_faq.rst", "torch.compiler_fine_grain_apis.rst", "torch.compiler_get_started.rst", "torch.compiler_guards_overview.rst", "torch.compiler_inductor_profiling.rst", "torch.compiler_ir.rst", "torch.compiler_nn_module.rst", "torch.compiler_performance_dashboard.rst", "torch.compiler_profiling_torch_compile.rst", "torch.compiler_transformations.rst", "torch.compiler_troubleshooting.rst", "torch.overrides.rst", "torch_cuda_memory.rst", "type_info.rst", "utils.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Complex Numbers", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.export", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "torch.cond", "torch.dynamic-shape", "torch.dynamic-value", "torch.escape-hatch", "torch.map", "FXE0007:fx-graph-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dim_order", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.register_post_accumulate_grad_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "Event", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "DiagnosticOptions", "ExportOptions", "ExportOutput", "ExportOutputSerializer", "JitScalarType", "OnnxExporterError", "OnnxRegistry", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "torch.sparse.as_sparse_gradcheck", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "torch.onnx diagnostics", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler API reference", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deep Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs for fine-grained tracing", "Getting Started", "Guards Overview", "TorchInductor GPU Profiling", "IRs", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.overrides", "Understanding CUDA Memory Usage", "Type Info", "torch.utils"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 13, 14, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 38, 40, 41, 42, 43, 44, 46, 50, 53, 54, 55, 64, 65, 138, 590, 667, 676, 722, 725, 726, 727, 732, 733, 735, 743, 744, 747, 751, 775, 776, 786, 787, 801, 811, 828, 845, 880, 889, 891, 892, 893, 918, 923, 926, 931, 932, 944, 957, 976, 1022, 1065, 1085, 1121, 1133, 1145, 1153, 1154, 1189, 1192, 1198, 1199, 1203, 1205, 1207, 1222, 1239, 1264, 1296, 1356, 1357, 1358, 1361, 1377, 1378, 1386, 1391, 1395, 1396, 1421, 1422, 1423, 1425, 1431, 1432, 1435, 1440, 1442, 1453, 1468, 1469, 1470, 1471, 1472, 1496, 1497, 1574, 1605, 1619, 1639, 1647, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1695, 1698, 1703, 1739, 1749, 1797, 1798, 1799, 1800, 1801, 1802, 1840, 1842, 1851, 1861, 1868, 1870, 1872, 1873, 1877, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1896, 1897, 1898, 1899, 1901, 1904, 1905, 1907, 1911, 1914, 1915, 1916, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1940, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1950, 1954, 1955, 1956, 1958, 1959], "conveni": [0, 3, 7, 13, 37, 40, 41, 46, 52, 1133, 1249, 1596, 1757, 1851, 1853, 1861, 1868, 1872, 1877, 1892, 1893, 1896, 1898, 1903, 1904, 1915, 1922, 1941, 1943, 1944, 1949, 1950], "method": [0, 3, 7, 9, 13, 14, 17, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 38, 40, 44, 46, 53, 54, 55, 57, 62, 63, 68, 209, 210, 311, 473, 474, 475, 484, 485, 486, 507, 601, 780, 784, 786, 802, 803, 804, 825, 828, 841, 861, 862, 863, 880, 884, 885, 886, 887, 900, 901, 1002, 1116, 1145, 1190, 1192, 1193, 1195, 1196, 1197, 1202, 1203, 1207, 1208, 1209, 1237, 1255, 1256, 1263, 1264, 1322, 1325, 1333, 1341, 1368, 1425, 1426, 1427, 1435, 1436, 1453, 1524, 1596, 1605, 1613, 1614, 1617, 1619, 1621, 1624, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1641, 1646, 1660, 1661, 1668, 1669, 1670, 1672, 1682, 1714, 1796, 1811, 1815, 1851, 1868, 1869, 1870, 1873, 1874, 1881, 1883, 1885, 1886, 1887, 1891, 1892, 1893, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1909, 1914, 1915, 1918, 1920, 1923, 1925, 1929, 1930, 1932, 1933, 1935, 1938, 1942, 1943, 1949, 1954, 1956, 1957], "where": [0, 1, 2, 3, 4, 7, 8, 9, 11, 13, 14, 20, 21, 23, 27, 28, 29, 31, 33, 40, 41, 42, 43, 46, 48, 49, 51, 54, 74, 141, 211, 242, 388, 390, 473, 667, 680, 682, 683, 686, 722, 745, 747, 768, 807, 808, 820, 864, 883, 888, 890, 903, 908, 917, 923, 930, 931, 932, 939, 953, 957, 969, 971, 980, 982, 1044, 1045, 1048, 1052, 1070, 1081, 1082, 1084, 1087, 1088, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1100, 1102, 1126, 1127, 1128, 1132, 1133, 1136, 1148, 1149, 1150, 1151, 1181, 1182, 1184, 1185, 1188, 1189, 1190, 1193, 1205, 1211, 1212, 1213, 1216, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1259, 1260, 1261, 1263, 1264, 1269, 1272, 1279, 1280, 1281, 1282, 1286, 1289, 1291, 1292, 1293, 1294, 1297, 1315, 1320, 1321, 1323, 1326, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1495, 1497, 1507, 1508, 1515, 1520, 1522, 1523, 1541, 1542, 1559, 1561, 1562, 1565, 1566, 1568, 1574, 1577, 1605, 1607, 1608, 1612, 1639, 1640, 1641, 1642, 1651, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1701, 1711, 1713, 1714, 1734, 1735, 1771, 1777, 1778, 1783, 1787, 1792, 1793, 1794, 1797, 1798, 1799, 1800, 1801, 1802, 1809, 1810, 1811, 1814, 1815, 1829, 1838, 1839, 1840, 1841, 1842, 1847, 1848, 1856, 1857, 1858, 1859, 1860, 1861, 1870, 1871, 1873, 1874, 1879, 1880, 1882, 1885, 1888, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1923, 1925, 1927, 1928, 1930, 1932, 1937, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1954, 1956, 1957, 1958], "some": [0, 1, 3, 7, 8, 9, 13, 19, 20, 21, 23, 25, 28, 29, 31, 33, 41, 42, 44, 46, 49, 51, 52, 53, 54, 73, 75, 464, 483, 554, 676, 735, 939, 966, 1000, 1018, 1022, 1025, 1065, 1086, 1088, 1096, 1097, 1098, 1113, 1122, 1133, 1167, 1189, 1190, 1192, 1193, 1202, 1205, 1207, 1237, 1255, 1261, 1286, 1293, 1296, 1333, 1337, 1341, 1342, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1385, 1388, 1389, 1390, 1391, 1392, 1395, 1416, 1417, 1425, 1428, 1429, 1430, 1432, 1439, 1440, 1456, 1457, 1473, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1508, 1509, 1536, 1541, 1559, 1562, 1567, 1574, 1596, 1605, 1606, 1607, 1608, 1612, 1645, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1713, 1733, 1757, 1764, 1778, 1815, 1853, 1861, 1868, 1870, 1871, 1872, 1873, 1874, 1877, 1878, 1879, 1880, 1881, 1885, 1886, 1887, 1892, 1893, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1932, 1938, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1956], "oper": [0, 2, 4, 5, 7, 8, 11, 14, 17, 20, 25, 29, 30, 37, 38, 40, 41, 44, 47, 52, 53, 54, 67, 68, 70, 71, 72, 73, 74, 242, 301, 309, 323, 340, 390, 432, 433, 434, 435, 436, 475, 480, 483, 486, 500, 502, 504, 576, 667, 673, 676, 728, 729, 730, 734, 735, 744, 745, 755, 756, 766, 772, 779, 780, 782, 783, 786, 810, 813, 846, 848, 849, 852, 876, 878, 884, 886, 907, 908, 910, 912, 915, 917, 919, 921, 926, 929, 932, 936, 939, 946, 951, 969, 971, 999, 1008, 1039, 1044, 1045, 1046, 1047, 1060, 1065, 1066, 1067, 1068, 1078, 1083, 1101, 1113, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1133, 1140, 1143, 1149, 1150, 1167, 1192, 1202, 1203, 1207, 1208, 1211, 1221, 1234, 1244, 1247, 1248, 1261, 1262, 1271, 1278, 1286, 1291, 1296, 1306, 1307, 1320, 1323, 1337, 1342, 1347, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1382, 1383, 1384, 1385, 1387, 1392, 1411, 1416, 1421, 1422, 1423, 1425, 1438, 1443, 1444, 1445, 1452, 1467, 1468, 1470, 1472, 1476, 1492, 1493, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1509, 1510, 1511, 1512, 1516, 1517, 1519, 1520, 1524, 1528, 1535, 1541, 1543, 1549, 1550, 1560, 1562, 1566, 1574, 1580, 1581, 1592, 1593, 1594, 1595, 1605, 1607, 1608, 1641, 1647, 1652, 1656, 1657, 1664, 1681, 1687, 1697, 1701, 1710, 1711, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1733, 1739, 1756, 1757, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1789, 1791, 1792, 1793, 1794, 1797, 1798, 1799, 1800, 1801, 1802, 1806, 1814, 1829, 1850, 1851, 1853, 1861, 1864, 1866, 1867, 1869, 1870, 1874, 1877, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1904, 1905, 1906, 1907, 1908, 1912, 1914, 1917, 1919, 1921, 1922, 1923, 1924, 1928, 1930, 1931, 1934, 1941, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1951, 1955, 1956], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 18, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 44, 46, 47, 49, 50, 51, 52, 53, 55, 57, 62, 63, 64, 65, 70, 71, 72, 74, 76, 85, 107, 138, 142, 179, 196, 307, 309, 323, 330, 331, 394, 422, 435, 445, 473, 474, 475, 483, 486, 500, 504, 507, 531, 544, 570, 571, 572, 574, 575, 604, 667, 673, 676, 699, 700, 701, 702, 703, 704, 707, 716, 717, 718, 719, 720, 722, 735, 744, 747, 755, 756, 759, 760, 761, 766, 768, 772, 773, 774, 777, 780, 781, 782, 783, 786, 789, 794, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 818, 819, 820, 821, 824, 841, 845, 846, 848, 849, 852, 865, 866, 867, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 889, 890, 891, 894, 895, 896, 900, 901, 904, 907, 908, 909, 917, 919, 920, 927, 929, 931, 939, 942, 946, 950, 953, 955, 965, 966, 967, 968, 969, 971, 973, 974, 976, 979, 989, 990, 993, 994, 1000, 1004, 1008, 1010, 1011, 1012, 1014, 1016, 1017, 1022, 1023, 1032, 1034, 1035, 1041, 1046, 1047, 1048, 1057, 1065, 1066, 1067, 1068, 1078, 1079, 1080, 1083, 1085, 1093, 1095, 1099, 1101, 1108, 1110, 1113, 1119, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1138, 1142, 1143, 1145, 1149, 1150, 1151, 1152, 1166, 1167, 1179, 1189, 1190, 1192, 1193, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1211, 1213, 1215, 1223, 1227, 1228, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1244, 1245, 1246, 1248, 1249, 1255, 1256, 1257, 1261, 1262, 1263, 1264, 1269, 1272, 1278, 1281, 1282, 1285, 1286, 1291, 1292, 1293, 1296, 1302, 1303, 1315, 1320, 1322, 1323, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1385, 1386, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1411, 1412, 1413, 1418, 1419, 1420, 1421, 1422, 1425, 1427, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1458, 1461, 1464, 1472, 1473, 1474, 1475, 1477, 1480, 1481, 1482, 1489, 1491, 1492, 1493, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1519, 1520, 1524, 1526, 1533, 1535, 1536, 1543, 1548, 1549, 1550, 1560, 1562, 1568, 1574, 1578, 1580, 1581, 1589, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1639, 1640, 1641, 1645, 1646, 1647, 1649, 1650, 1652, 1653, 1656, 1660, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1692, 1693, 1695, 1696, 1698, 1699, 1701, 1711, 1713, 1714, 1715, 1718, 1719, 1720, 1722, 1724, 1726, 1728, 1729, 1735, 1742, 1745, 1750, 1751, 1753, 1754, 1755, 1757, 1759, 1760, 1761, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1782, 1787, 1790, 1791, 1793, 1794, 1797, 1798, 1799, 1800, 1801, 1802, 1811, 1814, 1815, 1816, 1829, 1833, 1836, 1840, 1842, 1847, 1849, 1850, 1851, 1853, 1858, 1861, 1866, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1877, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1895, 1897, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1917, 1919, 1921, 1922, 1923, 1924, 1925, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1952, 1953, 1955, 1957], "float": [0, 1, 3, 11, 20, 21, 23, 27, 29, 31, 34, 42, 44, 46, 54, 141, 142, 207, 301, 303, 305, 309, 321, 388, 462, 468, 486, 500, 672, 674, 679, 681, 685, 719, 722, 725, 726, 727, 731, 732, 733, 735, 742, 743, 748, 749, 750, 751, 752, 757, 758, 759, 760, 761, 762, 764, 766, 767, 768, 772, 779, 780, 781, 786, 804, 806, 817, 825, 826, 839, 844, 845, 848, 849, 852, 867, 895, 896, 908, 909, 917, 924, 927, 931, 947, 952, 953, 957, 965, 1035, 1048, 1059, 1060, 1066, 1067, 1068, 1070, 1083, 1101, 1110, 1111, 1112, 1113, 1115, 1136, 1139, 1148, 1149, 1150, 1153, 1154, 1174, 1181, 1182, 1184, 1185, 1186, 1187, 1190, 1192, 1207, 1208, 1211, 1215, 1217, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1269, 1278, 1280, 1282, 1310, 1314, 1315, 1319, 1321, 1322, 1323, 1326, 1329, 1333, 1337, 1343, 1344, 1345, 1347, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1373, 1374, 1379, 1380, 1381, 1384, 1385, 1386, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1411, 1413, 1417, 1425, 1430, 1431, 1433, 1434, 1439, 1443, 1446, 1447, 1448, 1449, 1450, 1456, 1462, 1464, 1467, 1468, 1470, 1472, 1473, 1474, 1477, 1478, 1479, 1506, 1507, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1521, 1526, 1535, 1560, 1567, 1574, 1593, 1605, 1609, 1610, 1613, 1622, 1623, 1625, 1626, 1628, 1631, 1632, 1633, 1634, 1641, 1642, 1646, 1652, 1653, 1660, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1695, 1697, 1699, 1701, 1707, 1710, 1714, 1715, 1716, 1717, 1729, 1733, 1734, 1754, 1755, 1758, 1762, 1771, 1772, 1774, 1775, 1777, 1812, 1815, 1819, 1836, 1838, 1850, 1870, 1871, 1872, 1873, 1874, 1880, 1883, 1885, 1886, 1888, 1889, 1891, 1892, 1896, 1898, 1900, 1904, 1907, 1911, 1913, 1915, 1917, 1918, 1919, 1923, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1944, 1948, 1951, 1955, 1959], "datatyp": [0, 54, 867, 1189, 1192, 1425, 1607, 1608, 1757, 1907, 1911, 1927], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 17, 20, 21, 24, 27, 28, 29, 30, 31, 33, 37, 38, 40, 41, 46, 47, 49, 51, 52, 53, 54, 85, 86, 101, 117, 118, 121, 133, 134, 137, 138, 147, 148, 153, 154, 184, 185, 186, 195, 222, 227, 231, 232, 233, 243, 262, 263, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 291, 292, 295, 296, 297, 298, 301, 303, 309, 312, 332, 340, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 366, 367, 382, 383, 396, 400, 425, 426, 437, 438, 442, 443, 474, 475, 485, 507, 548, 549, 550, 551, 567, 570, 603, 604, 605, 608, 609, 667, 672, 681, 725, 726, 727, 728, 729, 730, 747, 801, 813, 848, 852, 858, 865, 866, 871, 877, 880, 881, 894, 895, 896, 900, 901, 911, 912, 914, 915, 916, 918, 923, 939, 952, 965, 966, 969, 971, 973, 980, 990, 1000, 1011, 1053, 1059, 1060, 1061, 1062, 1069, 1070, 1071, 1085, 1092, 1110, 1111, 1112, 1113, 1116, 1122, 1123, 1124, 1125, 1128, 1132, 1134, 1135, 1136, 1146, 1147, 1148, 1157, 1158, 1160, 1161, 1166, 1167, 1169, 1181, 1190, 1192, 1196, 1203, 1212, 1214, 1215, 1216, 1218, 1219, 1224, 1228, 1242, 1244, 1247, 1248, 1261, 1269, 1270, 1271, 1273, 1275, 1276, 1279, 1280, 1286, 1289, 1290, 1294, 1295, 1299, 1302, 1314, 1316, 1326, 1329, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1362, 1372, 1377, 1379, 1391, 1425, 1426, 1435, 1453, 1468, 1472, 1476, 1499, 1500, 1501, 1526, 1535, 1574, 1593, 1596, 1605, 1609, 1610, 1628, 1650, 1654, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1692, 1693, 1699, 1701, 1729, 1733, 1749, 1754, 1757, 1759, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1797, 1798, 1799, 1800, 1801, 1802, 1806, 1812, 1813, 1829, 1835, 1839, 1841, 1858, 1859, 1864, 1865, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1881, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1909, 1911, 1914, 1918, 1919, 1923, 1924, 1925, 1928, 1932, 1933, 1934, 1941, 1943, 1944, 1946, 1947, 1949, 1951, 1954, 1955, 1956, 1957], "lower": [0, 1, 8, 21, 23, 29, 44, 780, 782, 846, 918, 923, 930, 931, 932, 934, 1079, 1080, 1152, 1153, 1221, 1228, 1230, 1238, 1239, 1246, 1249, 1254, 1292, 1315, 1322, 1333, 1443, 1499, 1500, 1501, 1572, 1573, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1697, 1712, 1714, 1734, 1749, 1757, 1795, 1838, 1839, 1840, 1870, 1871, 1873, 1889, 1891, 1893, 1904, 1909, 1913, 1918, 1928, 1934, 1951, 1956], "point": [0, 1, 7, 8, 9, 11, 20, 21, 24, 27, 31, 37, 40, 41, 46, 54, 76, 141, 142, 309, 321, 327, 468, 486, 685, 725, 726, 727, 728, 729, 730, 731, 736, 737, 738, 739, 740, 741, 742, 743, 746, 748, 749, 750, 751, 752, 762, 764, 766, 767, 768, 772, 782, 786, 806, 807, 808, 809, 812, 817, 839, 848, 849, 852, 867, 889, 891, 892, 893, 895, 896, 908, 909, 917, 939, 952, 953, 957, 1014, 1016, 1025, 1029, 1030, 1066, 1067, 1068, 1111, 1112, 1113, 1139, 1145, 1149, 1150, 1154, 1174, 1189, 1192, 1207, 1208, 1215, 1217, 1238, 1239, 1262, 1264, 1269, 1278, 1322, 1329, 1338, 1339, 1340, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1418, 1419, 1420, 1425, 1476, 1477, 1489, 1515, 1524, 1535, 1574, 1593, 1605, 1652, 1667, 1698, 1714, 1715, 1716, 1720, 1729, 1742, 1754, 1755, 1762, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1850, 1851, 1869, 1870, 1872, 1873, 1874, 1877, 1883, 1889, 1891, 1892, 1893, 1896, 1897, 1901, 1904, 1907, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1927, 1930, 1932, 1933, 1934, 1936, 1942, 1943, 1946, 1948, 1949, 1952, 1955, 1958, 1959], "lower_precision_fp": 0, "half": [0, 1, 10, 21, 29, 604, 947, 1079, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1192, 1254, 1260, 1353, 1354, 1355, 1356, 1357, 1358, 1373, 1374, 1376, 1425, 1519, 1520, 1523, 1662, 1664, 1689, 1742, 1811, 1886, 1904, 1907, 1927, 1929, 1930, 1933], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 20, 21, 23, 28, 29, 38, 40, 41, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 324, 576, 604, 747, 780, 828, 847, 865, 886, 895, 896, 908, 917, 941, 946, 1008, 1009, 1018, 1060, 1065, 1066, 1086, 1108, 1111, 1112, 1118, 1122, 1125, 1126, 1127, 1133, 1149, 1150, 1190, 1192, 1193, 1199, 1202, 1207, 1211, 1238, 1239, 1250, 1263, 1333, 1341, 1369, 1372, 1388, 1389, 1390, 1425, 1426, 1427, 1435, 1436, 1453, 1476, 1518, 1536, 1592, 1596, 1605, 1606, 1607, 1608, 1613, 1638, 1656, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1707, 1722, 1726, 1745, 1754, 1757, 1815, 1826, 1851, 1861, 1866, 1868, 1869, 1870, 1872, 1873, 1880, 1885, 1886, 1887, 1892, 1893, 1896, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1914, 1916, 1917, 1918, 1921, 1923, 1924, 1927, 1929, 1930, 1934, 1935, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1957, 1958], "linear": [0, 2, 9, 21, 23, 24, 27, 29, 46, 48, 50, 52, 54, 55, 418, 459, 460, 461, 462, 463, 466, 698, 707, 715, 716, 752, 779, 780, 781, 783, 801, 841, 845, 846, 848, 849, 890, 932, 971, 1065, 1121, 1123, 1131, 1133, 1145, 1192, 1196, 1203, 1217, 1223, 1228, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1252, 1254, 1282, 1322, 1341, 1347, 1367, 1375, 1376, 1384, 1410, 1425, 1427, 1440, 1442, 1444, 1452, 1454, 1461, 1464, 1468, 1470, 1472, 1475, 1477, 1513, 1522, 1523, 1535, 1569, 1577, 1582, 1593, 1596, 1605, 1612, 1613, 1617, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1645, 1646, 1649, 1661, 1692, 1695, 1703, 1714, 1850, 1861, 1869, 1871, 1872, 1878, 1881, 1888, 1891, 1896, 1897, 1898, 1900, 1904, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1923, 1954, 1956], "layer": [0, 8, 21, 23, 25, 27, 28, 46, 49, 721, 722, 747, 828, 845, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1364, 1365, 1366, 1370, 1377, 1378, 1380, 1388, 1389, 1390, 1395, 1396, 1397, 1410, 1412, 1418, 1419, 1420, 1431, 1432, 1440, 1442, 1453, 1464, 1468, 1469, 1470, 1471, 1472, 1538, 1605, 1612, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1869, 1891, 1896, 1898, 1900, 1903, 1904, 1909, 1911, 1914, 1916, 1918, 1919, 1921, 1927, 1937], "convolut": [0, 1, 2, 725, 726, 727, 728, 729, 730, 759, 760, 761, 939, 1201, 1353, 1354, 1355, 1356, 1357, 1358, 1364, 1365, 1366, 1370, 1401, 1402, 1403, 1404, 1405, 1406, 1437, 1438, 1443, 1473, 1474, 1476, 1499, 1500, 1501, 1502, 1503, 1504, 1523, 1524, 1757, 1869, 1871, 1881, 1891, 1895, 1896, 1901, 1904, 1913, 1917, 1918, 1921, 1951], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 63, 69, 70, 72, 73, 74, 75, 76, 85, 138, 221, 242, 307, 309, 323, 324, 327, 365, 390, 435, 458, 468, 473, 486, 500, 504, 531, 567, 576, 604, 667, 676, 677, 678, 684, 722, 743, 747, 748, 750, 751, 752, 766, 769, 770, 772, 773, 774, 779, 780, 781, 782, 783, 786, 801, 802, 803, 804, 806, 807, 808, 809, 812, 827, 841, 845, 846, 847, 848, 849, 852, 861, 862, 873, 874, 875, 877, 880, 886, 888, 889, 890, 891, 892, 893, 895, 896, 908, 917, 918, 920, 921, 923, 926, 932, 939, 947, 952, 953, 956, 957, 967, 968, 969, 971, 972, 974, 979, 991, 1002, 1008, 1011, 1012, 1022, 1032, 1039, 1048, 1053, 1057, 1060, 1065, 1066, 1067, 1068, 1081, 1082, 1083, 1084, 1086, 1088, 1093, 1095, 1101, 1104, 1106, 1107, 1111, 1112, 1113, 1121, 1122, 1127, 1129, 1131, 1132, 1133, 1137, 1145, 1149, 1150, 1152, 1154, 1167, 1169, 1181, 1182, 1184, 1185, 1188, 1189, 1190, 1192, 1193, 1196, 1198, 1199, 1202, 1205, 1207, 1208, 1213, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1244, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1258, 1261, 1262, 1263, 1264, 1273, 1274, 1275, 1276, 1278, 1279, 1281, 1283, 1284, 1286, 1289, 1292, 1293, 1294, 1297, 1299, 1303, 1315, 1319, 1320, 1321, 1322, 1323, 1333, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1370, 1372, 1377, 1378, 1379, 1380, 1385, 1388, 1389, 1390, 1391, 1392, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1442, 1453, 1456, 1457, 1458, 1464, 1468, 1470, 1472, 1473, 1474, 1476, 1477, 1489, 1495, 1496, 1497, 1507, 1508, 1515, 1516, 1517, 1518, 1524, 1535, 1536, 1559, 1562, 1564, 1567, 1574, 1592, 1593, 1594, 1595, 1596, 1601, 1602, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1615, 1617, 1624, 1638, 1642, 1645, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1660, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1691, 1694, 1695, 1707, 1713, 1714, 1720, 1729, 1732, 1733, 1740, 1742, 1753, 1754, 1757, 1787, 1788, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1807, 1810, 1811, 1814, 1815, 1824, 1826, 1830, 1832, 1833, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1850, 1851, 1853, 1855, 1856, 1857, 1861, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959], "much": [0, 4, 7, 9, 14, 20, 21, 138, 880, 889, 894, 1022, 1227, 1228, 1255, 1264, 1369, 1605, 1628, 1695, 1870, 1893, 1896, 1901, 1904, 1909, 1915, 1916, 1923, 1924, 1927, 1944, 1946, 1949], "faster": [0, 2, 8, 11, 20, 21, 23, 889, 895, 896, 1121, 1221, 1222, 1227, 1228, 1232, 1237, 1245, 1247, 1249, 1252, 1255, 1257, 1261, 1264, 1441, 1458, 1564, 1580, 1605, 1609, 1610, 1612, 1670, 1671, 1682, 1757, 1797, 1798, 1799, 1801, 1802, 1881, 1893, 1896, 1901, 1914, 1918, 1927, 1932, 1938, 1943, 1946, 1952], "reduct": [0, 2, 23, 46, 309, 500, 504, 939, 1237, 1269, 1322, 1341, 1342, 1348, 1359, 1361, 1369, 1379, 1385, 1386, 1391, 1392, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1474, 1496, 1497, 1505, 1507, 1508, 1516, 1521, 1532, 1533, 1536, 1537, 1547, 1555, 1556, 1557, 1558, 1559, 1567, 1578, 1579, 1590, 1591, 1605, 1714, 1792, 1871, 1886, 1897, 1901, 1915, 1918, 1950, 1956], "often": [0, 2, 4, 7, 8, 13, 20, 23, 29, 41, 46, 49, 54, 138, 880, 894, 1207, 1238, 1239, 1248, 1297, 1368, 1388, 1389, 1390, 1489, 1497, 1515, 1524, 1596, 1612, 1660, 1697, 1873, 1893, 1896, 1900, 1903, 1904, 1906, 1907, 1908, 1915, 1923, 1932, 1945, 1946, 1954, 1956], "requir": [0, 1, 5, 8, 9, 13, 14, 20, 21, 23, 24, 25, 27, 29, 31, 39, 40, 44, 46, 49, 51, 53, 54, 107, 138, 209, 323, 445, 475, 483, 500, 502, 504, 547, 780, 782, 810, 813, 867, 876, 880, 885, 888, 889, 890, 891, 892, 893, 894, 939, 965, 966, 1021, 1065, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1106, 1107, 1133, 1134, 1205, 1231, 1262, 1264, 1278, 1361, 1368, 1369, 1468, 1469, 1470, 1471, 1472, 1474, 1516, 1574, 1596, 1605, 1606, 1615, 1617, 1619, 1660, 1661, 1673, 1683, 1701, 1799, 1811, 1850, 1861, 1868, 1870, 1873, 1875, 1880, 1881, 1885, 1887, 1888, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1906, 1909, 1911, 1915, 1916, 1918, 1919, 1923, 1924, 1925, 1927, 1932, 1934, 1937, 1938, 1941, 1942, 1943, 1945, 1946, 1952, 1954, 1957], "dynam": [0, 13, 14, 20, 44, 55, 56, 57, 60, 61, 62, 65, 66, 667, 716, 720, 747, 748, 749, 750, 751, 752, 781, 802, 813, 816, 831, 837, 838, 839, 840, 845, 846, 939, 967, 1199, 1205, 1207, 1263, 1612, 1872, 1873, 1874, 1891, 1896, 1904, 1907, 1911, 1914, 1915, 1919, 1938, 1943, 1946, 1953, 1956], "rang": [0, 1, 3, 20, 23, 24, 27, 29, 40, 41, 43, 44, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 76, 289, 468, 671, 748, 750, 752, 782, 806, 807, 808, 809, 810, 812, 813, 814, 872, 909, 934, 1026, 1027, 1035, 1065, 1115, 1131, 1152, 1153, 1154, 1258, 1269, 1284, 1293, 1310, 1322, 1333, 1361, 1371, 1373, 1374, 1378, 1384, 1396, 1415, 1427, 1432, 1436, 1442, 1458, 1459, 1460, 1464, 1519, 1520, 1524, 1580, 1605, 1610, 1685, 1686, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1714, 1794, 1849, 1870, 1871, 1873, 1893, 1895, 1896, 1900, 1904, 1906, 1907, 1911, 1913, 1914, 1917, 1918, 1921, 1922, 1928, 1930, 1932, 1933, 1934, 1935, 1942, 1943, 1944, 1949, 1954, 1956], "tri": [0, 2, 3, 7, 20, 29, 33, 54, 75, 567, 1192, 1425, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1872, 1873, 1885, 1896, 1900, 1911, 1915, 1945, 1946, 1948], "match": [0, 1, 3, 23, 25, 27, 29, 40, 44, 46, 54, 55, 62, 63, 72, 138, 301, 303, 309, 460, 461, 486, 487, 567, 570, 680, 686, 766, 780, 781, 782, 841, 865, 880, 894, 895, 896, 965, 968, 980, 981, 982, 1011, 1057, 1065, 1121, 1133, 1169, 1192, 1205, 1207, 1224, 1263, 1285, 1360, 1369, 1425, 1431, 1477, 1496, 1497, 1535, 1561, 1568, 1574, 1593, 1605, 1617, 1647, 1653, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1715, 1749, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1831, 1861, 1870, 1873, 1880, 1886, 1888, 1893, 1894, 1896, 1898, 1904, 1909, 1911, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1923, 1930, 1934, 1936, 1946, 1949, 1955], "each": [0, 1, 2, 5, 9, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 38, 41, 42, 43, 46, 47, 49, 51, 52, 54, 68, 69, 71, 74, 85, 107, 141, 142, 386, 390, 480, 500, 502, 504, 532, 594, 604, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 673, 680, 682, 683, 686, 722, 747, 779, 827, 828, 846, 848, 849, 852, 864, 873, 874, 875, 876, 878, 879, 880, 885, 894, 907, 910, 919, 923, 927, 928, 930, 933, 937, 939, 941, 957, 977, 978, 982, 1011, 1014, 1016, 1022, 1024, 1028, 1031, 1037, 1042, 1043, 1044, 1045, 1048, 1049, 1060, 1063, 1065, 1082, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1094, 1095, 1096, 1097, 1098, 1100, 1102, 1106, 1107, 1109, 1114, 1118, 1123, 1124, 1128, 1132, 1133, 1134, 1145, 1151, 1153, 1154, 1155, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1192, 1207, 1208, 1213, 1245, 1263, 1264, 1279, 1281, 1289, 1291, 1292, 1293, 1294, 1297, 1299, 1306, 1307, 1315, 1321, 1323, 1333, 1338, 1341, 1342, 1346, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1377, 1378, 1380, 1385, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1405, 1406, 1410, 1412, 1416, 1417, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1439, 1440, 1442, 1453, 1456, 1457, 1459, 1464, 1467, 1473, 1474, 1476, 1494, 1496, 1497, 1502, 1503, 1504, 1507, 1508, 1510, 1511, 1512, 1515, 1516, 1517, 1521, 1524, 1534, 1536, 1559, 1560, 1562, 1564, 1567, 1574, 1587, 1596, 1601, 1602, 1605, 1638, 1639, 1641, 1651, 1652, 1653, 1660, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1706, 1710, 1711, 1714, 1721, 1729, 1734, 1735, 1740, 1744, 1749, 1757, 1762, 1773, 1779, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1814, 1815, 1830, 1832, 1833, 1836, 1847, 1848, 1855, 1861, 1862, 1868, 1872, 1873, 1879, 1886, 1887, 1888, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1906, 1907, 1908, 1909, 1911, 1914, 1916, 1917, 1918, 1923, 1924, 1925, 1927, 1928, 1930, 1932, 1933, 1934, 1936, 1937, 1938, 1940, 1941, 1943, 1946, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956, 1958], "its": [0, 1, 4, 5, 7, 8, 9, 13, 14, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 40, 41, 42, 44, 46, 53, 54, 55, 57, 69, 70, 71, 138, 445, 474, 475, 491, 500, 502, 504, 570, 571, 572, 604, 667, 810, 813, 861, 862, 863, 865, 866, 867, 880, 883, 895, 900, 901, 931, 932, 946, 947, 953, 957, 972, 1000, 1002, 1011, 1048, 1052, 1055, 1065, 1068, 1113, 1118, 1122, 1123, 1124, 1127, 1132, 1153, 1154, 1158, 1172, 1192, 1202, 1227, 1228, 1232, 1237, 1244, 1246, 1249, 1250, 1255, 1261, 1286, 1313, 1341, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1388, 1389, 1390, 1425, 1426, 1435, 1456, 1464, 1472, 1524, 1535, 1562, 1568, 1596, 1601, 1602, 1606, 1607, 1608, 1613, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1639, 1645, 1649, 1653, 1665, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1704, 1729, 1733, 1737, 1738, 1754, 1755, 1759, 1779, 1789, 1816, 1835, 1836, 1838, 1846, 1859, 1870, 1872, 1873, 1877, 1881, 1883, 1885, 1892, 1893, 1894, 1896, 1897, 1898, 1900, 1901, 1904, 1906, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1923, 1924, 1925, 1927, 1930, 1931, 1933, 1936, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1949, 1950, 1952, 1958], "appropri": [0, 7, 8, 9, 23, 24, 29, 46, 53, 54, 881, 1011, 1207, 1664, 1757, 1873, 1874, 1877, 1887, 1896, 1901, 1906, 1909, 1916, 1918, 1921, 1923, 1924, 1925, 1929, 1946, 1949, 1952, 1957], "ordinarili": [0, 1892], "train": [0, 1, 14, 20, 21, 23, 24, 26, 27, 31, 38, 39, 40, 41, 46, 49, 50, 54, 699, 700, 701, 702, 703, 704, 705, 706, 707, 717, 718, 719, 720, 786, 788, 825, 826, 842, 843, 844, 846, 848, 849, 850, 1010, 1011, 1014, 1016, 1023, 1131, 1167, 1192, 1197, 1203, 1206, 1207, 1333, 1337, 1343, 1344, 1345, 1361, 1362, 1363, 1368, 1369, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1425, 1431, 1432, 1443, 1464, 1472, 1490, 1494, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1572, 1573, 1574, 1605, 1613, 1615, 1617, 1646, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1868, 1870, 1871, 1881, 1883, 1891, 1893, 1896, 1897, 1900, 1905, 1907, 1909, 1911, 1914, 1915, 1916, 1917, 1921, 1923, 1925, 1932, 1938, 1940, 1941, 1942, 1943, 1948, 1950, 1951, 1953, 1956], "gradscal": [0, 1892, 1896], "togeth": [0, 3, 9, 20, 23, 28, 29, 47, 52, 54, 747, 1008, 1065, 1121, 1123, 1127, 1131, 1132, 1137, 1231, 1377, 1395, 1440, 1535, 1605, 1609, 1836, 1881, 1892, 1898, 1899, 1900, 1903, 1904, 1918, 1923, 1924, 1925, 1927, 1932, 1942, 1945, 1946, 1952], "shown": [0, 21, 32, 41, 1008, 1018, 1397, 1617, 1665, 1695, 1762, 1870, 1873, 1892, 1896, 1898, 1900, 1904, 1916, 1918, 1927, 1942, 1947], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 55, 57, 62, 63, 76, 179, 196, 221, 230, 242, 248, 277, 299, 301, 303, 305, 309, 323, 340, 389, 390, 432, 433, 434, 435, 436, 458, 468, 470, 474, 475, 480, 483, 486, 500, 502, 504, 510, 524, 531, 545, 547, 567, 568, 570, 571, 572, 573, 574, 575, 576, 594, 604, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 707, 715, 716, 721, 725, 726, 727, 728, 729, 730, 732, 733, 735, 743, 744, 745, 747, 748, 749, 750, 751, 752, 759, 760, 761, 772, 779, 780, 781, 783, 784, 797, 798, 799, 800, 801, 802, 803, 804, 811, 825, 841, 846, 847, 848, 849, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 898, 900, 901, 907, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 947, 950, 951, 952, 953, 954, 955, 956, 957, 965, 1008, 1009, 1014, 1016, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1129, 1131, 1133, 1134, 1135, 1136, 1139, 1145, 1148, 1151, 1152, 1153, 1154, 1155, 1157, 1158, 1162, 1166, 1167, 1169, 1177, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1271, 1272, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1313, 1314, 1315, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1489, 1491, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1515, 1516, 1519, 1520, 1524, 1526, 1559, 1561, 1562, 1565, 1566, 1574, 1593, 1596, 1605, 1612, 1613, 1615, 1617, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1702, 1704, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1762, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1787, 1789, 1790, 1792, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1810, 1812, 1814, 1815, 1817, 1818, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1877, 1879, 1880, 1882, 1883, 1886, 1887, 1888, 1891, 1893, 1894, 1895, 1896, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1957], "recip": [0, 3, 27, 1425, 1605, 1619, 1892, 1904, 1945], "howev": [0, 2, 3, 4, 5, 7, 9, 13, 14, 20, 21, 23, 27, 29, 31, 37, 46, 47, 48, 50, 51, 53, 54, 55, 60, 63, 69, 72, 73, 74, 468, 532, 881, 888, 968, 990, 1011, 1053, 1055, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1121, 1122, 1126, 1127, 1129, 1132, 1133, 1192, 1195, 1196, 1202, 1204, 1231, 1246, 1247, 1249, 1263, 1264, 1281, 1341, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1369, 1425, 1499, 1500, 1501, 1524, 1596, 1605, 1638, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1797, 1798, 1799, 1800, 1801, 1802, 1861, 1869, 1873, 1888, 1892, 1893, 1896, 1898, 1902, 1904, 1906, 1908, 1909, 1910, 1911, 1915, 1916, 1923, 1925, 1927, 1941, 1943, 1944, 1945, 1946, 1947], "modular": [0, 1892], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 19, 20, 21, 23, 27, 29, 30, 31, 33, 37, 39, 40, 44, 46, 47, 51, 53, 54, 72, 184, 209, 242, 301, 309, 445, 502, 504, 543, 590, 604, 667, 676, 802, 803, 804, 848, 879, 886, 888, 890, 894, 895, 904, 910, 921, 933, 939, 950, 951, 953, 955, 965, 966, 968, 969, 977, 990, 1000, 1001, 1002, 1008, 1009, 1011, 1022, 1024, 1028, 1042, 1043, 1065, 1104, 1108, 1113, 1116, 1118, 1125, 1126, 1128, 1154, 1189, 1192, 1195, 1196, 1201, 1202, 1204, 1205, 1207, 1213, 1222, 1223, 1227, 1228, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1247, 1249, 1250, 1253, 1254, 1255, 1261, 1263, 1264, 1269, 1286, 1296, 1310, 1333, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1391, 1395, 1421, 1422, 1423, 1425, 1432, 1440, 1470, 1472, 1477, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1516, 1524, 1526, 1535, 1541, 1562, 1574, 1592, 1593, 1594, 1595, 1596, 1605, 1612, 1614, 1615, 1617, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1689, 1713, 1733, 1736, 1754, 1757, 1764, 1782, 1795, 1811, 1815, 1838, 1850, 1868, 1869, 1870, 1872, 1873, 1877, 1879, 1880, 1881, 1883, 1887, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1904, 1907, 1908, 1909, 1910, 1911, 1915, 1917, 1918, 1919, 1921, 1923, 1925, 1927, 1929, 1935, 1941, 1944, 1945, 1946, 1949, 1950, 1954, 1956, 1957, 1958], "separ": [0, 1, 3, 9, 13, 20, 23, 27, 40, 41, 46, 47, 49, 52, 53, 54, 722, 747, 877, 1065, 1082, 1084, 1090, 1091, 1094, 1095, 1100, 1102, 1121, 1202, 1237, 1252, 1380, 1388, 1389, 1390, 1431, 1433, 1543, 1653, 1660, 1868, 1871, 1873, 1879, 1892, 1893, 1895, 1896, 1899, 1909, 1914, 1915, 1924, 1927, 1928, 1932, 1941, 1956], "desir": [0, 1, 3, 20, 23, 29, 46, 54, 76, 143, 158, 160, 163, 166, 167, 168, 183, 194, 197, 228, 242, 255, 285, 313, 381, 432, 433, 434, 435, 436, 484, 486, 487, 507, 512, 531, 532, 533, 547, 567, 570, 590, 591, 604, 780, 852, 866, 908, 917, 936, 1012, 1013, 1036, 1037, 1046, 1047, 1066, 1067, 1068, 1078, 1083, 1101, 1118, 1119, 1120, 1149, 1150, 1192, 1211, 1262, 1278, 1284, 1291, 1305, 1311, 1320, 1322, 1323, 1341, 1342, 1425, 1475, 1497, 1543, 1580, 1581, 1596, 1638, 1652, 1656, 1657, 1704, 1711, 1714, 1715, 1716, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1763, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1791, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1814, 1829, 1840, 1842, 1866, 1867, 1886, 1887, 1888, 1892, 1893, 1896, 1899, 1902, 1904, 1909, 1916, 1922, 1923, 1928, 1929, 1930, 1956], "As": [0, 1, 8, 21, 23, 25, 29, 46, 49, 50, 54, 242, 921, 1065, 1196, 1223, 1227, 1228, 1238, 1239, 1250, 1255, 1364, 1365, 1366, 1370, 1391, 1425, 1456, 1592, 1651, 1657, 1867, 1870, 1872, 1873, 1880, 1888, 1893, 1896, 1898, 1900, 1904, 1907, 1910, 1911, 1915, 1916, 1922, 1923, 1924, 1925, 1927, 1938, 1940, 1942, 1946, 1947, 1948, 1949, 1956], "section": [0, 1, 7, 20, 29, 31, 32, 44, 50, 54, 74, 107, 1022, 1065, 1145, 1362, 1377, 1395, 1423, 1440, 1507, 1641, 1830, 1870, 1871, 1872, 1873, 1874, 1885, 1887, 1888, 1892, 1893, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1906, 1924, 1932, 1942, 1943, 1946, 1947, 1948, 1949, 1950, 1954, 1956], "infer": [0, 1, 2, 3, 5, 11, 14, 29, 40, 46, 567, 604, 848, 849, 852, 866, 867, 982, 1118, 1119, 1154, 1167, 1176, 1190, 1193, 1201, 1206, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1431, 1477, 1535, 1561, 1596, 1650, 1684, 1695, 1729, 1736, 1754, 1755, 1797, 1798, 1799, 1800, 1801, 1802, 1829, 1846, 1869, 1870, 1872, 1873, 1877, 1886, 1888, 1896, 1904, 1911, 1917, 1918, 1919, 1921, 1927, 1938, 1940, 1941, 1944, 1946, 1948, 1953], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 38, 40, 41, 44, 46, 50, 51, 53, 54, 70, 71, 72, 107, 242, 299, 309, 311, 323, 340, 432, 433, 434, 435, 436, 445, 468, 473, 475, 500, 502, 504, 544, 570, 571, 572, 574, 575, 601, 604, 667, 682, 683, 722, 725, 726, 727, 728, 730, 759, 760, 761, 766, 772, 773, 774, 778, 780, 788, 801, 804, 807, 808, 811, 815, 829, 836, 845, 865, 881, 884, 885, 886, 887, 888, 890, 895, 908, 909, 917, 939, 958, 959, 960, 961, 962, 963, 964, 966, 967, 968, 969, 971, 978, 980, 982, 1000, 1008, 1009, 1011, 1032, 1062, 1066, 1068, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1111, 1112, 1116, 1117, 1122, 1133, 1145, 1149, 1150, 1154, 1162, 1173, 1181, 1190, 1192, 1195, 1196, 1203, 1207, 1208, 1211, 1222, 1227, 1228, 1230, 1231, 1232, 1233, 1235, 1237, 1238, 1239, 1240, 1250, 1252, 1253, 1255, 1256, 1263, 1264, 1281, 1286, 1333, 1356, 1357, 1358, 1361, 1362, 1368, 1369, 1372, 1395, 1397, 1425, 1428, 1430, 1431, 1433, 1441, 1464, 1472, 1476, 1477, 1507, 1516, 1518, 1524, 1535, 1562, 1592, 1593, 1596, 1599, 1600, 1601, 1602, 1605, 1607, 1608, 1618, 1638, 1639, 1640, 1652, 1660, 1666, 1670, 1671, 1673, 1684, 1687, 1691, 1694, 1695, 1697, 1701, 1713, 1722, 1726, 1728, 1730, 1753, 1757, 1758, 1760, 1764, 1789, 1792, 1796, 1806, 1811, 1815, 1829, 1840, 1842, 1847, 1848, 1850, 1851, 1853, 1858, 1859, 1860, 1861, 1868, 1871, 1872, 1873, 1877, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1921, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1938, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1955, 1956, 1958], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 17, 20, 21, 23, 24, 25, 28, 29, 31, 37, 38, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 67, 68, 69, 184, 209, 242, 277, 301, 303, 309, 323, 340, 458, 468, 480, 486, 500, 502, 504, 570, 576, 590, 604, 673, 674, 675, 676, 677, 680, 686, 721, 725, 726, 727, 728, 729, 730, 747, 779, 780, 781, 801, 845, 846, 879, 895, 907, 911, 913, 914, 916, 919, 928, 932, 939, 1000, 1014, 1016, 1022, 1046, 1047, 1048, 1065, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1109, 1131, 1133, 1134, 1145, 1154, 1169, 1192, 1202, 1203, 1205, 1207, 1208, 1223, 1227, 1228, 1231, 1234, 1235, 1236, 1237, 1239, 1248, 1249, 1251, 1255, 1264, 1271, 1279, 1286, 1292, 1296, 1333, 1337, 1341, 1342, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1368, 1369, 1371, 1372, 1377, 1379, 1386, 1391, 1395, 1397, 1425, 1428, 1429, 1430, 1431, 1439, 1440, 1446, 1447, 1448, 1449, 1450, 1451, 1456, 1461, 1475, 1476, 1480, 1481, 1482, 1497, 1499, 1500, 1501, 1524, 1535, 1560, 1562, 1574, 1582, 1596, 1601, 1602, 1605, 1615, 1638, 1639, 1640, 1642, 1652, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1697, 1742, 1751, 1789, 1790, 1800, 1806, 1815, 1830, 1832, 1836, 1844, 1851, 1853, 1859, 1860, 1861, 1868, 1869, 1870, 1873, 1875, 1877, 1879, 1880, 1881, 1883, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1904, 1906, 1907, 1908, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1938, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1952, 1953, 1955, 1956, 1957], "api": [0, 2, 3, 5, 8, 9, 21, 23, 24, 28, 31, 32, 33, 37, 38, 39, 40, 41, 44, 46, 47, 50, 53, 55, 60, 63, 64, 65, 221, 787, 811, 848, 881, 882, 883, 891, 928, 966, 1000, 1001, 1002, 1008, 1009, 1011, 1038, 1069, 1109, 1122, 1125, 1126, 1128, 1133, 1202, 1203, 1205, 1310, 1605, 1647, 1649, 1650, 1660, 1662, 1742, 1753, 1759, 1844, 1853, 1861, 1868, 1877, 1879, 1880, 1881, 1884, 1885, 1886, 1888, 1893, 1897, 1909, 1911, 1919, 1923, 1924, 1927, 1930, 1932, 1935, 1938, 1941, 1943, 1948, 1957], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 17, 20, 21, 23, 27, 28, 29, 30, 37, 40, 44, 46, 50, 51, 52, 53, 54, 55, 62, 63, 75, 142, 206, 209, 210, 242, 311, 500, 502, 504, 510, 530, 601, 728, 729, 730, 747, 787, 801, 848, 867, 876, 877, 886, 908, 917, 931, 939, 944, 965, 1008, 1011, 1022, 1046, 1047, 1065, 1069, 1085, 1116, 1122, 1128, 1132, 1133, 1134, 1137, 1139, 1149, 1150, 1154, 1167, 1192, 1195, 1196, 1198, 1201, 1205, 1207, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1259, 1260, 1293, 1299, 1313, 1321, 1333, 1341, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1369, 1372, 1377, 1391, 1395, 1425, 1432, 1440, 1454, 1456, 1464, 1473, 1474, 1476, 1502, 1503, 1504, 1524, 1561, 1577, 1596, 1605, 1615, 1617, 1627, 1629, 1631, 1632, 1633, 1634, 1650, 1670, 1671, 1685, 1691, 1695, 1698, 1701, 1726, 1733, 1745, 1755, 1770, 1771, 1788, 1792, 1806, 1815, 1824, 1826, 1829, 1835, 1836, 1847, 1848, 1861, 1864, 1868, 1869, 1870, 1872, 1873, 1877, 1879, 1880, 1881, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1923, 1924, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1941, 1942, 1944, 1945, 1946, 1947, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958], "arg": [0, 1, 3, 4, 5, 13, 20, 21, 23, 27, 29, 31, 32, 38, 39, 41, 42, 43, 44, 46, 53, 54, 55, 60, 61, 62, 63, 567, 590, 667, 719, 734, 736, 738, 739, 740, 741, 747, 749, 750, 811, 848, 877, 879, 884, 885, 943, 1011, 1121, 1125, 1126, 1127, 1133, 1192, 1195, 1281, 1341, 1342, 1359, 1361, 1377, 1385, 1387, 1392, 1395, 1414, 1416, 1417, 1425, 1428, 1429, 1430, 1432, 1439, 1440, 1453, 1455, 1456, 1457, 1459, 1463, 1464, 1465, 1466, 1473, 1496, 1497, 1507, 1536, 1559, 1567, 1596, 1605, 1619, 1624, 1638, 1645, 1647, 1661, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1816, 1848, 1858, 1861, 1868, 1871, 1873, 1874, 1885, 1887, 1893, 1896, 1897, 1898, 1899, 1906, 1911, 1915, 1916, 1923, 1924, 1925, 1929, 1937, 1942, 1943, 1945, 1949, 1955, 1956, 1957], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 85, 138, 141, 142, 143, 158, 160, 163, 166, 167, 168, 178, 179, 183, 184, 194, 196, 197, 206, 211, 221, 228, 242, 243, 255, 278, 285, 299, 301, 303, 307, 309, 311, 313, 316, 317, 318, 319, 320, 321, 323, 324, 326, 328, 329, 330, 331, 340, 381, 388, 390, 394, 435, 445, 458, 459, 468, 470, 473, 474, 475, 480, 482, 483, 484, 485, 486, 487, 490, 491, 500, 502, 504, 507, 511, 512, 524, 530, 531, 532, 544, 547, 567, 568, 570, 571, 572, 574, 575, 576, 590, 591, 594, 601, 604, 605, 607, 611, 667, 668, 670, 671, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710, 711, 712, 713, 714, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 752, 755, 756, 759, 760, 761, 762, 763, 764, 765, 766, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 786, 788, 789, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 811, 813, 814, 820, 825, 826, 827, 844, 845, 846, 848, 849, 852, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 900, 901, 904, 907, 908, 909, 910, 912, 915, 917, 919, 920, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 938, 939, 941, 942, 946, 950, 951, 952, 953, 954, 955, 956, 957, 962, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 982, 985, 986, 987, 989, 993, 994, 997, 1000, 1001, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1052, 1053, 1054, 1055, 1056, 1057, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1075, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1145, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1162, 1166, 1167, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1211, 1212, 1213, 1215, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1272, 1274, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1313, 1315, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1456, 1457, 1458, 1460, 1461, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1489, 1492, 1493, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1535, 1536, 1541, 1543, 1545, 1546, 1548, 1549, 1550, 1559, 1560, 1562, 1564, 1565, 1566, 1567, 1568, 1574, 1577, 1580, 1581, 1589, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1657, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1720, 1722, 1723, 1724, 1726, 1727, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1742, 1744, 1745, 1749, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1782, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1807, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1846, 1847, 1848, 1850, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1944, 1947, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959], "equival": [0, 3, 5, 20, 21, 27, 29, 33, 40, 41, 44, 46, 50, 51, 54, 70, 143, 158, 160, 163, 166, 167, 168, 228, 243, 255, 285, 307, 313, 381, 435, 445, 485, 487, 512, 591, 597, 604, 605, 607, 679, 731, 735, 742, 744, 746, 772, 773, 774, 863, 877, 920, 922, 925, 927, 930, 937, 938, 1053, 1057, 1060, 1063, 1064, 1065, 1067, 1082, 1084, 1087, 1090, 1091, 1094, 1095, 1097, 1100, 1102, 1120, 1122, 1125, 1127, 1133, 1155, 1157, 1169, 1191, 1192, 1202, 1207, 1208, 1211, 1223, 1244, 1248, 1256, 1261, 1293, 1298, 1313, 1320, 1333, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1368, 1369, 1380, 1386, 1388, 1389, 1390, 1391, 1395, 1397, 1425, 1456, 1464, 1476, 1478, 1543, 1564, 1574, 1593, 1594, 1595, 1605, 1657, 1684, 1720, 1723, 1727, 1751, 1757, 1765, 1787, 1794, 1807, 1817, 1818, 1824, 1829, 1848, 1861, 1862, 1863, 1867, 1870, 1872, 1873, 1893, 1911, 1915, 1919, 1927, 1928, 1930, 1933, 1934, 1942, 1943, 1949, 1957, 1959], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 20, 21, 23, 25, 27, 28, 29, 30, 32, 33, 40, 41, 46, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 74, 75, 299, 309, 445, 570, 604, 672, 673, 674, 676, 680, 682, 683, 686, 716, 725, 726, 727, 759, 760, 761, 766, 772, 773, 774, 779, 780, 781, 782, 788, 804, 820, 846, 848, 849, 879, 881, 886, 895, 896, 907, 908, 912, 915, 917, 919, 931, 932, 939, 952, 965, 967, 1008, 1009, 1011, 1028, 1060, 1062, 1065, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1128, 1132, 1149, 1150, 1162, 1189, 1196, 1203, 1207, 1211, 1212, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1264, 1282, 1286, 1290, 1295, 1296, 1314, 1353, 1354, 1355, 1356, 1357, 1358, 1365, 1368, 1369, 1372, 1392, 1412, 1430, 1431, 1464, 1472, 1474, 1476, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1516, 1518, 1524, 1535, 1541, 1574, 1592, 1593, 1595, 1605, 1652, 1657, 1660, 1664, 1670, 1671, 1673, 1701, 1713, 1732, 1733, 1754, 1757, 1758, 1788, 1789, 1792, 1795, 1812, 1815, 1838, 1840, 1842, 1851, 1853, 1858, 1859, 1860, 1867, 1868, 1869, 1870, 1872, 1874, 1875, 1877, 1881, 1883, 1885, 1889, 1893, 1894, 1895, 1896, 1897, 1898, 1902, 1904, 1906, 1907, 1909, 1910, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1955, 1956, 1957], "now": [0, 1, 23, 28, 30, 37, 41, 42, 44, 46, 51, 54, 209, 483, 887, 894, 980, 1008, 1029, 1030, 1116, 1139, 1189, 1190, 1196, 1207, 1241, 1422, 1441, 1477, 1596, 1617, 1628, 1649, 1673, 1754, 1806, 1811, 1853, 1870, 1880, 1886, 1887, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1904, 1905, 1911, 1915, 1918, 1924, 1925, 1927, 1941, 1944, 1945, 1946, 1947, 1949, 1950, 1955, 1956, 1957, 1958], "new": [0, 1, 5, 8, 13, 17, 20, 22, 23, 25, 29, 31, 40, 41, 44, 46, 47, 50, 51, 52, 53, 54, 74, 209, 242, 299, 435, 470, 474, 483, 486, 531, 567, 570, 604, 667, 671, 747, 778, 801, 806, 841, 866, 868, 869, 870, 871, 872, 882, 900, 901, 922, 923, 926, 928, 937, 941, 952, 954, 955, 969, 971, 1049, 1053, 1075, 1079, 1080, 1106, 1107, 1109, 1122, 1131, 1133, 1162, 1166, 1167, 1181, 1182, 1185, 1188, 1192, 1198, 1203, 1205, 1265, 1266, 1267, 1268, 1285, 1324, 1327, 1343, 1344, 1345, 1377, 1388, 1389, 1390, 1425, 1426, 1431, 1435, 1464, 1475, 1477, 1535, 1598, 1601, 1602, 1603, 1604, 1605, 1613, 1617, 1619, 1623, 1624, 1625, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1642, 1646, 1649, 1650, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1697, 1721, 1731, 1732, 1736, 1737, 1738, 1744, 1745, 1749, 1754, 1755, 1765, 1767, 1778, 1780, 1782, 1804, 1805, 1808, 1825, 1827, 1828, 1844, 1846, 1849, 1850, 1859, 1860, 1861, 1868, 1870, 1872, 1873, 1877, 1880, 1881, 1885, 1886, 1887, 1888, 1889, 1893, 1896, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1921, 1925, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1937, 1941, 1943, 1944, 1946, 1949, 1955, 1956], "version": [0, 1, 2, 5, 8, 13, 19, 21, 23, 25, 29, 41, 44, 46, 49, 50, 54, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 109, 111, 113, 115, 118, 119, 121, 129, 131, 134, 135, 137, 140, 146, 148, 150, 152, 154, 156, 165, 174, 182, 186, 189, 191, 201, 203, 219, 224, 226, 232, 235, 237, 239, 241, 245, 250, 257, 259, 261, 265, 267, 271, 273, 280, 282, 284, 292, 294, 296, 298, 300, 302, 304, 306, 344, 346, 348, 350, 352, 354, 356, 359, 361, 363, 364, 371, 373, 375, 377, 379, 383, 387, 389, 407, 410, 413, 415, 426, 428, 430, 438, 443, 453, 456, 472, 477, 479, 495, 498, 499, 501, 503, 509, 514, 516, 519, 521, 523, 536, 538, 540, 543, 549, 551, 558, 562, 564, 580, 583, 585, 587, 589, 599, 609, 722, 723, 724, 736, 737, 738, 739, 740, 741, 762, 763, 764, 765, 767, 771, 772, 791, 792, 793, 826, 834, 842, 843, 845, 1011, 1121, 1149, 1167, 1189, 1192, 1195, 1196, 1199, 1202, 1221, 1228, 1234, 1235, 1239, 1240, 1253, 1286, 1324, 1342, 1395, 1425, 1426, 1440, 1477, 1489, 1514, 1524, 1531, 1540, 1571, 1573, 1588, 1589, 1593, 1597, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1646, 1647, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1746, 1747, 1748, 1806, 1809, 1810, 1811, 1815, 1835, 1850, 1856, 1857, 1868, 1886, 1887, 1893, 1894, 1896, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1908, 1910, 1911, 1914, 1915, 1917, 1921, 1927, 1934, 1935, 1946, 1947, 1954, 1956, 1958], "1": [0, 1, 2, 3, 11, 13, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 43, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 124, 139, 140, 161, 179, 193, 196, 213, 215, 216, 217, 221, 230, 242, 246, 251, 274, 277, 299, 300, 301, 303, 305, 309, 340, 365, 389, 390, 432, 434, 435, 441, 458, 468, 470, 474, 475, 480, 483, 486, 500, 502, 504, 524, 525, 529, 531, 541, 542, 543, 545, 547, 548, 549, 550, 551, 568, 570, 571, 572, 574, 575, 594, 595, 602, 604, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 699, 700, 701, 702, 703, 704, 705, 706, 710, 711, 712, 713, 714, 717, 718, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 738, 739, 740, 743, 744, 745, 747, 757, 759, 760, 761, 762, 765, 769, 770, 772, 783, 795, 796, 806, 807, 808, 809, 812, 814, 842, 848, 849, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877, 881, 884, 886, 887, 888, 889, 890, 891, 892, 893, 900, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 937, 938, 940, 947, 950, 951, 952, 953, 954, 955, 956, 957, 961, 965, 977, 1008, 1009, 1024, 1028, 1035, 1039, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1062, 1063, 1064, 1065, 1068, 1069, 1070, 1071, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1162, 1163, 1166, 1167, 1169, 1177, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1196, 1202, 1203, 1207, 1208, 1211, 1212, 1213, 1215, 1216, 1217, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1237, 1238, 1239, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1269, 1271, 1272, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1310, 1313, 1314, 1315, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1467, 1468, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1489, 1491, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1522, 1523, 1524, 1526, 1528, 1530, 1531, 1532, 1533, 1534, 1542, 1544, 1548, 1549, 1550, 1556, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1568, 1572, 1573, 1574, 1575, 1576, 1578, 1580, 1581, 1582, 1584, 1589, 1590, 1591, 1592, 1593, 1596, 1605, 1612, 1613, 1617, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1706, 1707, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1749, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1762, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1782, 1783, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1845, 1846, 1847, 1848, 1849, 1850, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1871, 1872, 1873, 1874, 1877, 1880, 1881, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1900, 1901, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1959], "10": [0, 1, 19, 20, 21, 23, 24, 29, 30, 40, 42, 44, 55, 60, 62, 63, 301, 309, 323, 458, 500, 547, 568, 570, 571, 572, 672, 673, 684, 721, 732, 733, 747, 748, 749, 750, 752, 907, 919, 929, 931, 932, 933, 937, 957, 1044, 1045, 1046, 1047, 1048, 1063, 1065, 1082, 1084, 1087, 1088, 1090, 1091, 1094, 1095, 1097, 1098, 1100, 1102, 1108, 1116, 1135, 1145, 1155, 1181, 1197, 1202, 1203, 1209, 1214, 1217, 1244, 1246, 1247, 1262, 1264, 1266, 1271, 1273, 1274, 1275, 1276, 1278, 1286, 1297, 1315, 1331, 1332, 1333, 1335, 1336, 1342, 1345, 1348, 1349, 1352, 1355, 1358, 1368, 1369, 1377, 1378, 1379, 1380, 1390, 1395, 1396, 1397, 1422, 1426, 1427, 1432, 1435, 1436, 1440, 1442, 1464, 1468, 1469, 1470, 1471, 1472, 1476, 1482, 1501, 1504, 1508, 1515, 1516, 1526, 1596, 1605, 1628, 1636, 1650, 1653, 1665, 1669, 1689, 1695, 1697, 1715, 1716, 1724, 1749, 1757, 1762, 1768, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1787, 1803, 1815, 1816, 1826, 1830, 1831, 1834, 1836, 1850, 1862, 1868, 1870, 1871, 1872, 1873, 1874, 1880, 1893, 1896, 1897, 1904, 1907, 1908, 1909, 1910, 1911, 1913, 1927, 1928, 1930, 1932, 1933, 1934, 1941, 1942, 1943, 1946, 1948, 1949, 1954, 1956, 1959], "class": [0, 1, 2, 3, 14, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 34, 37, 38, 40, 42, 44, 46, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 76, 544, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 823, 824, 825, 826, 827, 828, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 881, 884, 885, 886, 887, 958, 959, 966, 967, 968, 969, 971, 972, 987, 989, 1000, 1040, 1069, 1131, 1167, 1190, 1191, 1192, 1195, 1197, 1198, 1202, 1203, 1206, 1207, 1208, 1209, 1303, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1497, 1507, 1515, 1559, 1561, 1596, 1605, 1606, 1607, 1608, 1614, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1638, 1645, 1650, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1720, 1759, 1790, 1851, 1869, 1871, 1874, 1877, 1880, 1883, 1885, 1887, 1892, 1893, 1896, 1898, 1899, 1900, 1904, 1906, 1909, 1916, 1917, 1918, 1920, 1921, 1923, 1924, 1927, 1929, 1930, 1932, 1934, 1935, 1936, 1937, 1942, 1943, 1944, 1949, 1952, 1954, 1955, 1956, 1957, 1958, 1959], "device_typ": [0, 1, 23, 1892, 1922], "dtype": [0, 1, 5, 11, 17, 18, 20, 23, 25, 44, 46, 54, 55, 60, 62, 63, 64, 65, 73, 141, 142, 179, 196, 200, 201, 202, 203, 230, 299, 301, 303, 305, 307, 309, 397, 416, 419, 432, 433, 434, 435, 436, 440, 445, 457, 468, 470, 500, 502, 552, 567, 568, 590, 604, 674, 676, 679, 680, 684, 686, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 745, 747, 748, 751, 752, 759, 760, 761, 781, 782, 786, 806, 807, 808, 809, 810, 811, 812, 813, 814, 828, 845, 846, 848, 849, 852, 866, 867, 884, 886, 888, 890, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 924, 931, 947, 950, 951, 957, 965, 981, 1046, 1047, 1066, 1067, 1068, 1078, 1082, 1083, 1084, 1090, 1091, 1101, 1108, 1113, 1115, 1117, 1118, 1119, 1120, 1139, 1149, 1150, 1162, 1192, 1196, 1205, 1211, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1273, 1274, 1275, 1276, 1278, 1281, 1282, 1286, 1290, 1291, 1292, 1295, 1296, 1315, 1319, 1320, 1321, 1323, 1333, 1342, 1343, 1344, 1345, 1346, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1368, 1369, 1372, 1377, 1378, 1380, 1388, 1389, 1390, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1425, 1431, 1432, 1433, 1440, 1441, 1442, 1446, 1447, 1448, 1449, 1450, 1464, 1468, 1470, 1472, 1476, 1477, 1478, 1479, 1491, 1507, 1508, 1535, 1541, 1543, 1574, 1580, 1581, 1596, 1607, 1608, 1614, 1617, 1618, 1638, 1652, 1656, 1657, 1662, 1666, 1701, 1707, 1711, 1712, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1739, 1742, 1754, 1755, 1757, 1758, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1786, 1789, 1791, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1814, 1815, 1826, 1829, 1840, 1842, 1847, 1850, 1851, 1853, 1859, 1860, 1864, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1875, 1880, 1887, 1888, 1896, 1898, 1904, 1907, 1911, 1913, 1918, 1919, 1920, 1927, 1928, 1929, 1932, 1933, 1934, 1943, 1945, 1951, 1956, 1959], "none": [0, 1, 2, 3, 5, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 37, 38, 40, 42, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 100, 102, 103, 104, 106, 122, 123, 126, 138, 141, 142, 144, 161, 173, 174, 175, 176, 192, 193, 195, 197, 200, 201, 202, 203, 217, 221, 223, 224, 225, 226, 246, 274, 278, 289, 323, 339, 342, 365, 395, 397, 398, 399, 402, 408, 414, 415, 416, 417, 418, 419, 432, 433, 434, 435, 436, 440, 441, 457, 466, 468, 474, 475, 481, 490, 500, 507, 524, 525, 539, 540, 542, 543, 552, 567, 568, 570, 575, 577, 590, 595, 596, 597, 602, 613, 615, 617, 619, 621, 623, 625, 627, 629, 631, 633, 635, 637, 639, 642, 644, 646, 647, 649, 651, 653, 655, 657, 659, 661, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 736, 737, 738, 739, 740, 741, 742, 753, 754, 755, 756, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 780, 781, 782, 784, 786, 801, 804, 806, 807, 808, 809, 812, 813, 825, 826, 827, 844, 845, 846, 847, 848, 849, 852, 853, 854, 855, 856, 857, 858, 859, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 876, 877, 878, 879, 880, 881, 882, 883, 886, 887, 889, 891, 892, 893, 894, 895, 896, 900, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 923, 926, 928, 929, 930, 931, 932, 934, 935, 937, 939, 944, 947, 948, 949, 951, 952, 954, 955, 956, 957, 960, 964, 965, 966, 968, 969, 971, 972, 973, 977, 978, 980, 981, 982, 985, 986, 987, 993, 994, 1000, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1035, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1057, 1058, 1060, 1061, 1062, 1064, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1119, 1120, 1121, 1122, 1123, 1127, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1165, 1166, 1169, 1170, 1186, 1187, 1189, 1191, 1192, 1196, 1199, 1201, 1202, 1203, 1205, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1368, 1369, 1371, 1373, 1374, 1375, 1378, 1379, 1380, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1439, 1441, 1442, 1456, 1457, 1458, 1459, 1460, 1464, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1477, 1478, 1479, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1507, 1508, 1515, 1516, 1519, 1520, 1521, 1522, 1524, 1525, 1532, 1534, 1535, 1536, 1537, 1538, 1541, 1543, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1560, 1562, 1564, 1567, 1574, 1578, 1579, 1580, 1581, 1589, 1590, 1591, 1593, 1594, 1595, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1613, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1638, 1640, 1641, 1642, 1643, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1657, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1701, 1702, 1703, 1706, 1707, 1708, 1710, 1711, 1713, 1714, 1717, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1740, 1742, 1743, 1744, 1749, 1762, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1786, 1787, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1826, 1827, 1828, 1829, 1831, 1833, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1847, 1848, 1851, 1853, 1855, 1856, 1857, 1858, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1874, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1891, 1893, 1896, 1898, 1899, 1904, 1906, 1909, 1911, 1915, 1916, 1917, 1918, 1920, 1922, 1923, 1928, 1929, 1930, 1932, 1934, 1936, 1937, 1942, 1949, 1951, 1956, 1957, 1958], "enabl": [0, 1, 2, 5, 8, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 31, 41, 46, 67, 73, 75, 475, 490, 491, 667, 747, 799, 800, 881, 886, 939, 966, 1011, 1065, 1069, 1167, 1175, 1176, 1194, 1200, 1306, 1307, 1377, 1395, 1440, 1441, 1471, 1574, 1605, 1614, 1615, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1650, 1683, 1758, 1759, 1762, 1790, 1850, 1853, 1873, 1879, 1880, 1881, 1884, 1888, 1892, 1893, 1894, 1895, 1896, 1898, 1903, 1905, 1907, 1908, 1911, 1916, 1917, 1922, 1923, 1924, 1927, 1935, 1937, 1938, 1940, 1942, 1943, 1945, 1946, 1949, 1950, 1954, 1956, 1957, 1958], "true": [0, 1, 2, 3, 5, 13, 20, 21, 23, 24, 25, 27, 29, 31, 42, 44, 46, 51, 52, 53, 54, 55, 62, 63, 138, 184, 197, 248, 307, 309, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 339, 384, 388, 390, 435, 445, 447, 458, 464, 474, 475, 482, 483, 486, 491, 503, 504, 543, 554, 567, 568, 577, 581, 590, 596, 604, 667, 674, 679, 680, 681, 682, 683, 684, 686, 705, 706, 707, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 725, 726, 727, 728, 729, 730, 733, 736, 741, 743, 747, 748, 751, 752, 755, 756, 766, 772, 773, 784, 801, 813, 846, 860, 862, 863, 867, 876, 879, 880, 881, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 900, 901, 908, 911, 914, 916, 917, 923, 924, 930, 931, 932, 938, 939, 942, 944, 950, 968, 1006, 1060, 1066, 1067, 1068, 1069, 1070, 1071, 1087, 1088, 1094, 1095, 1118, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1132, 1133, 1134, 1136, 1148, 1149, 1150, 1153, 1154, 1165, 1167, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1196, 1197, 1198, 1201, 1207, 1208, 1209, 1211, 1213, 1216, 1221, 1222, 1233, 1234, 1235, 1238, 1239, 1240, 1241, 1244, 1246, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1261, 1263, 1264, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1283, 1285, 1289, 1291, 1292, 1293, 1294, 1297, 1303, 1315, 1320, 1323, 1326, 1329, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1374, 1377, 1378, 1379, 1380, 1385, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1431, 1432, 1434, 1439, 1440, 1441, 1442, 1456, 1457, 1464, 1468, 1470, 1471, 1472, 1473, 1474, 1477, 1478, 1489, 1491, 1492, 1493, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1519, 1520, 1524, 1526, 1528, 1534, 1535, 1536, 1548, 1549, 1550, 1559, 1567, 1574, 1593, 1594, 1596, 1599, 1605, 1606, 1608, 1609, 1612, 1613, 1616, 1617, 1618, 1630, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1701, 1703, 1711, 1713, 1714, 1718, 1719, 1720, 1737, 1738, 1745, 1748, 1749, 1757, 1758, 1759, 1762, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1787, 1789, 1790, 1792, 1800, 1809, 1810, 1811, 1814, 1815, 1829, 1833, 1838, 1847, 1848, 1850, 1853, 1855, 1856, 1857, 1861, 1864, 1868, 1871, 1872, 1873, 1880, 1882, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1907, 1908, 1909, 1911, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1943, 1944, 1946, 1948, 1949, 1951, 1952, 1954, 1955, 1956, 1957], "cache_en": [0, 1011], "sourc": [0, 1, 2, 3, 4, 5, 9, 12, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 42, 44, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 138, 184, 197, 221, 300, 301, 309, 328, 339, 384, 389, 390, 403, 404, 440, 458, 474, 475, 500, 502, 504, 507, 511, 534, 543, 544, 546, 573, 590, 593, 596, 597, 611, 667, 682, 683, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 823, 824, 825, 826, 827, 828, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 860, 873, 874, 875, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 902, 903, 904, 906, 918, 920, 921, 925, 927, 929, 939, 940, 941, 942, 943, 944, 945, 946, 958, 959, 960, 961, 962, 963, 964, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1065, 1069, 1116, 1118, 1134, 1140, 1141, 1144, 1163, 1164, 1165, 1167, 1168, 1173, 1178, 1179, 1180, 1190, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1263, 1264, 1284, 1293, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1484, 1485, 1489, 1490, 1494, 1496, 1497, 1498, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1542, 1543, 1545, 1546, 1547, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1567, 1569, 1570, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1652, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1703, 1720, 1745, 1750, 1753, 1754, 1755, 1756, 1757, 1759, 1762, 1763, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1789, 1790, 1796, 1803, 1811, 1816, 1819, 1820, 1821, 1822, 1823, 1831, 1850, 1851, 1852, 1853, 1854, 1868, 1870, 1871, 1872, 1877, 1879, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1891, 1900, 1902, 1903, 1907, 1909, 1911, 1914, 1916, 1917, 1918, 1922, 1923, 1924, 1929, 1932, 1934, 1935, 1936, 1937, 1946, 1947, 1949, 1956, 1957, 1958], "instanc": [0, 3, 20, 23, 24, 25, 27, 29, 30, 31, 37, 40, 41, 42, 46, 51, 54, 127, 604, 667, 721, 735, 744, 780, 783, 811, 813, 828, 845, 966, 1065, 1116, 1190, 1192, 1203, 1207, 1264, 1368, 1369, 1372, 1388, 1389, 1390, 1397, 1425, 1435, 1469, 1471, 1472, 1476, 1534, 1605, 1613, 1624, 1638, 1646, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1800, 1830, 1870, 1872, 1874, 1879, 1881, 1885, 1887, 1892, 1893, 1896, 1897, 1898, 1900, 1904, 1908, 1915, 1918, 1923, 1924, 1925, 1927, 1929, 1934, 1941, 1949, 1955, 1957], "serv": [0, 7, 8, 14, 23, 75, 1880, 1912, 1914, 1923, 1924, 1942, 1946, 1951], "context": [0, 2, 5, 20, 27, 31, 40, 41, 46, 54, 55, 138, 779, 876, 877, 878, 880, 881, 894, 895, 944, 959, 963, 972, 987, 989, 1000, 1006, 1011, 1018, 1038, 1040, 1069, 1123, 1127, 1132, 1167, 1192, 1306, 1425, 1574, 1596, 1605, 1606, 1615, 1617, 1650, 1658, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1759, 1790, 1869, 1873, 1874, 1885, 1892, 1893, 1896, 1898, 1902, 1903, 1906, 1911, 1915, 1917, 1922, 1923, 1925, 1927, 1930, 1935, 1944, 1945, 1949, 1954, 1958], "manag": [0, 1, 2, 5, 7, 23, 27, 29, 31, 38, 40, 41, 42, 46, 54, 55, 76, 473, 881, 944, 959, 963, 966, 967, 969, 972, 973, 974, 976, 987, 989, 990, 991, 1000, 1001, 1011, 1014, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1029, 1030, 1031, 1038, 1040, 1069, 1123, 1127, 1132, 1167, 1306, 1574, 1605, 1614, 1615, 1617, 1650, 1759, 1790, 1869, 1873, 1874, 1893, 1900, 1903, 1911, 1916, 1917, 1922, 1923, 1924, 1927, 1930, 1935, 1944, 1945, 1946, 1949], "decor": [0, 1, 29, 33, 37, 41, 54, 65, 886, 941, 944, 1069, 1167, 1197, 1203, 1209, 1650, 1789, 1790, 1870, 1872, 1873, 1877, 1892, 1893, 1898, 1916, 1923, 1942, 1943, 1947, 1957], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 20, 21, 23, 24, 29, 31, 32, 40, 41, 46, 47, 49, 50, 51, 52, 54, 55, 57, 138, 500, 667, 722, 780, 784, 786, 811, 880, 882, 894, 895, 924, 938, 942, 1008, 1011, 1035, 1065, 1126, 1192, 1197, 1209, 1247, 1269, 1310, 1324, 1338, 1339, 1340, 1361, 1362, 1379, 1418, 1419, 1420, 1425, 1428, 1431, 1453, 1468, 1605, 1610, 1651, 1660, 1663, 1666, 1682, 1792, 1850, 1868, 1872, 1873, 1880, 1886, 1887, 1888, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1909, 1911, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1927, 1930, 1931, 1932, 1934, 1943, 1944, 1945, 1946, 1949, 1952, 1955, 1956], "region": [0, 3, 5, 29, 37, 755, 756, 939, 1338, 1339, 1340, 1373, 1374, 1384, 1386, 1418, 1419, 1420, 1492, 1493, 1519, 1520, 1549, 1550, 1870, 1885, 1892, 1896, 1945, 1946, 1954], "your": [0, 1, 2, 4, 7, 8, 9, 11, 13, 14, 16, 20, 23, 27, 28, 29, 32, 33, 37, 39, 40, 41, 42, 43, 44, 46, 50, 51, 53, 54, 880, 886, 888, 889, 894, 939, 942, 1167, 1192, 1196, 1197, 1201, 1204, 1207, 1208, 1209, 1425, 1432, 1472, 1605, 1614, 1617, 1650, 1684, 1758, 1847, 1851, 1853, 1870, 1872, 1873, 1877, 1879, 1885, 1886, 1887, 1889, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1914, 1916, 1919, 1922, 1924, 1927, 1932, 1933, 1935, 1938, 1940, 1941, 1942, 1945, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1957, 1958], "script": [0, 2, 4, 17, 20, 23, 26, 31, 33, 39, 41, 42, 1193, 1195, 1196, 1197, 1198, 1201, 1202, 1204, 1206, 1207, 1209, 1664, 1868, 1869, 1872, 1873, 1881, 1895, 1903, 1905, 1909, 1915, 1918, 1923, 1940, 1942, 1948, 1950, 1953], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 13, 14, 17, 20, 21, 23, 24, 27, 29, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 138, 475, 779, 785, 804, 806, 807, 808, 809, 812, 844, 848, 849, 850, 880, 894, 895, 896, 939, 1010, 1011, 1122, 1127, 1133, 1167, 1192, 1193, 1195, 1196, 1199, 1201, 1203, 1205, 1207, 1208, 1228, 1237, 1263, 1264, 1292, 1343, 1344, 1345, 1362, 1388, 1389, 1390, 1398, 1399, 1400, 1407, 1408, 1409, 1425, 1453, 1464, 1574, 1596, 1599, 1605, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1757, 1761, 1794, 1840, 1842, 1850, 1861, 1869, 1870, 1873, 1881, 1883, 1884, 1885, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1921, 1922, 1923, 1924, 1925, 1927, 1932, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1954, 1955, 1956, 1958], "In": [0, 2, 3, 4, 7, 9, 14, 17, 20, 23, 25, 27, 29, 33, 40, 41, 42, 44, 46, 48, 49, 50, 51, 53, 54, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 109, 111, 113, 115, 118, 119, 121, 129, 131, 134, 135, 137, 140, 142, 146, 148, 150, 152, 154, 156, 165, 174, 182, 186, 189, 191, 201, 203, 209, 219, 224, 226, 232, 235, 237, 239, 241, 245, 250, 257, 259, 261, 265, 267, 271, 273, 280, 282, 284, 292, 294, 296, 298, 344, 346, 348, 350, 352, 354, 356, 359, 361, 363, 364, 371, 373, 375, 377, 379, 383, 407, 410, 413, 415, 426, 428, 430, 438, 443, 453, 456, 472, 477, 479, 495, 498, 509, 514, 516, 519, 521, 523, 536, 538, 540, 549, 551, 558, 562, 564, 580, 583, 585, 587, 589, 599, 609, 667, 747, 787, 811, 841, 886, 915, 923, 950, 951, 965, 1011, 1022, 1034, 1035, 1039, 1040, 1065, 1086, 1088, 1096, 1097, 1098, 1113, 1123, 1127, 1130, 1132, 1190, 1192, 1201, 1204, 1205, 1207, 1223, 1232, 1237, 1238, 1239, 1247, 1250, 1255, 1260, 1264, 1269, 1272, 1281, 1286, 1292, 1293, 1320, 1338, 1339, 1340, 1342, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1364, 1365, 1366, 1370, 1372, 1377, 1386, 1395, 1410, 1418, 1419, 1420, 1425, 1431, 1468, 1470, 1472, 1476, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1514, 1524, 1531, 1540, 1568, 1571, 1573, 1574, 1588, 1605, 1612, 1617, 1618, 1650, 1660, 1684, 1695, 1697, 1733, 1749, 1751, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1815, 1816, 1838, 1850, 1851, 1853, 1858, 1859, 1868, 1869, 1870, 1872, 1873, 1879, 1880, 1885, 1886, 1887, 1888, 1891, 1892, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1906, 1907, 1908, 1909, 1911, 1914, 1915, 1917, 1918, 1919, 1920, 1923, 1924, 1925, 1927, 1932, 1934, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1958], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 67, 68, 69, 71, 73, 74, 76, 138, 142, 178, 209, 230, 242, 301, 303, 309, 311, 316, 323, 486, 500, 502, 504, 524, 532, 547, 594, 601, 604, 667, 674, 675, 722, 728, 729, 730, 743, 747, 752, 766, 772, 774, 776, 779, 783, 802, 804, 810, 813, 841, 848, 849, 851, 865, 866, 867, 876, 878, 879, 880, 882, 884, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 902, 903, 904, 910, 926, 936, 939, 950, 951, 953, 966, 968, 969, 971, 978, 979, 980, 981, 982, 1000, 1001, 1008, 1009, 1011, 1023, 1025, 1035, 1039, 1040, 1050, 1063, 1065, 1066, 1067, 1068, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1108, 1116, 1118, 1121, 1122, 1125, 1126, 1127, 1129, 1131, 1133, 1134, 1137, 1145, 1153, 1154, 1155, 1189, 1190, 1192, 1195, 1196, 1199, 1202, 1203, 1205, 1207, 1208, 1209, 1210, 1221, 1222, 1227, 1228, 1233, 1235, 1237, 1240, 1241, 1245, 1248, 1250, 1253, 1254, 1261, 1263, 1264, 1281, 1283, 1286, 1292, 1303, 1310, 1315, 1324, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1374, 1377, 1385, 1389, 1390, 1393, 1394, 1395, 1397, 1407, 1408, 1409, 1410, 1412, 1413, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1440, 1442, 1444, 1453, 1456, 1458, 1459, 1460, 1464, 1468, 1469, 1470, 1471, 1472, 1473, 1476, 1478, 1479, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1499, 1500, 1501, 1502, 1503, 1504, 1509, 1515, 1516, 1518, 1519, 1520, 1524, 1535, 1542, 1543, 1545, 1546, 1548, 1549, 1550, 1574, 1578, 1593, 1595, 1596, 1599, 1605, 1609, 1610, 1611, 1612, 1615, 1616, 1617, 1624, 1641, 1648, 1650, 1652, 1657, 1660, 1661, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1713, 1718, 1719, 1720, 1739, 1741, 1745, 1753, 1756, 1765, 1771, 1792, 1795, 1796, 1800, 1803, 1808, 1811, 1815, 1829, 1830, 1846, 1847, 1848, 1850, 1853, 1859, 1860, 1861, 1862, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1957, 1958, 1959], "chosen": [0, 51, 1053, 1213, 1574, 1762, 1787, 1833, 1888, 1892, 1896, 1898, 1906, 1911, 1918, 1956], "improv": [0, 1, 3, 9, 13, 18, 21, 23, 46, 54, 747, 791, 792, 793, 888, 890, 894, 953, 1145, 1363, 1377, 1395, 1440, 1471, 1574, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1697, 1869, 1870, 1892, 1897, 1898, 1899, 1907, 1908, 1912, 1918, 1919, 1923, 1950, 1952, 1954, 1956, 1958], "perform": [0, 1, 2, 3, 4, 5, 11, 13, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 40, 41, 44, 46, 50, 53, 54, 69, 107, 194, 197, 445, 567, 590, 604, 673, 674, 675, 676, 677, 678, 747, 768, 791, 792, 793, 834, 845, 848, 881, 886, 888, 890, 891, 894, 895, 907, 919, 939, 950, 951, 967, 973, 1022, 1046, 1047, 1060, 1085, 1108, 1110, 1121, 1122, 1125, 1156, 1167, 1192, 1201, 1202, 1207, 1235, 1237, 1240, 1244, 1247, 1248, 1252, 1253, 1261, 1262, 1264, 1269, 1278, 1291, 1296, 1306, 1307, 1317, 1320, 1323, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1365, 1368, 1369, 1377, 1395, 1425, 1431, 1433, 1440, 1453, 1468, 1471, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1543, 1560, 1574, 1580, 1581, 1596, 1605, 1607, 1608, 1613, 1617, 1638, 1645, 1647, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1703, 1711, 1739, 1753, 1757, 1785, 1791, 1792, 1793, 1794, 1814, 1816, 1850, 1869, 1870, 1873, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1905, 1906, 1907, 1908, 1911, 1914, 1915, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1938, 1940, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1952, 1957, 1958], "while": [0, 2, 3, 5, 7, 8, 11, 13, 20, 21, 23, 24, 25, 29, 42, 44, 46, 51, 53, 54, 73, 682, 683, 722, 841, 871, 879, 969, 1040, 1122, 1154, 1192, 1195, 1207, 1208, 1264, 1321, 1333, 1349, 1386, 1388, 1389, 1390, 1395, 1425, 1431, 1443, 1456, 1464, 1468, 1472, 1543, 1599, 1605, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1652, 1749, 1757, 1874, 1879, 1880, 1887, 1888, 1892, 1893, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1908, 1909, 1911, 1914, 1916, 1918, 1921, 1923, 1925, 1927, 1928, 1931, 1932, 1933, 1945, 1947, 1949, 1950, 1956], "maintain": [0, 7, 8, 20, 21, 23, 29, 44, 46, 50, 54, 1337, 1365, 1370, 1517, 1605, 1638, 1652, 1664, 1869, 1888, 1892, 1893, 1896, 1898, 1904, 1918, 1944, 1945, 1949], "accuraci": [0, 21, 939, 1255, 1574, 1757, 1869, 1883, 1892, 1904, 1932, 1936, 1946], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 16, 19, 20, 23, 24, 29, 32, 40, 41, 43, 44, 46, 51, 52, 53, 54, 77, 81, 83, 85, 87, 89, 91, 93, 95, 97, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 114, 116, 117, 120, 122, 123, 124, 125, 126, 128, 130, 132, 133, 136, 138, 139, 141, 142, 143, 144, 145, 147, 149, 151, 153, 155, 157, 158, 159, 160, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 177, 180, 181, 185, 187, 188, 190, 192, 193, 195, 198, 199, 200, 202, 205, 206, 208, 212, 213, 214, 215, 216, 217, 218, 222, 223, 225, 227, 228, 229, 231, 233, 234, 236, 238, 240, 243, 244, 249, 251, 252, 253, 254, 255, 256, 258, 260, 262, 263, 264, 266, 268, 269, 270, 272, 275, 276, 279, 281, 283, 285, 286, 287, 288, 289, 290, 291, 293, 295, 297, 301, 309, 310, 311, 312, 313, 315, 316, 322, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362, 366, 367, 368, 369, 370, 372, 374, 376, 378, 380, 381, 382, 384, 385, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 414, 416, 417, 418, 419, 420, 421, 425, 427, 429, 437, 439, 440, 442, 444, 446, 447, 448, 449, 451, 452, 454, 455, 457, 464, 466, 467, 469, 471, 474, 475, 476, 478, 480, 481, 482, 484, 485, 486, 488, 489, 492, 493, 494, 497, 502, 504, 505, 506, 508, 510, 512, 513, 515, 517, 518, 520, 522, 525, 526, 527, 529, 530, 534, 535, 537, 539, 541, 542, 543, 548, 550, 552, 554, 555, 556, 557, 559, 560, 561, 563, 565, 566, 577, 578, 579, 581, 582, 584, 586, 588, 592, 593, 596, 597, 598, 601, 602, 603, 605, 606, 607, 608, 667, 680, 682, 683, 686, 717, 718, 719, 720, 721, 722, 725, 726, 727, 728, 729, 730, 732, 733, 735, 743, 744, 747, 748, 749, 750, 751, 752, 753, 754, 755, 758, 759, 760, 761, 766, 767, 768, 769, 770, 771, 772, 780, 827, 846, 847, 848, 849, 852, 861, 862, 863, 866, 877, 879, 880, 881, 882, 883, 885, 886, 890, 894, 895, 900, 901, 904, 908, 910, 917, 919, 922, 936, 939, 943, 955, 966, 967, 968, 969, 971, 973, 974, 976, 990, 991, 1000, 1001, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1029, 1030, 1031, 1060, 1063, 1065, 1066, 1068, 1069, 1078, 1083, 1101, 1104, 1119, 1124, 1125, 1126, 1128, 1137, 1145, 1149, 1150, 1154, 1155, 1163, 1164, 1165, 1167, 1192, 1196, 1203, 1207, 1208, 1210, 1211, 1213, 1223, 1228, 1231, 1234, 1237, 1239, 1246, 1248, 1249, 1257, 1261, 1262, 1264, 1270, 1272, 1278, 1279, 1281, 1289, 1291, 1292, 1293, 1294, 1296, 1297, 1306, 1307, 1313, 1320, 1322, 1323, 1333, 1341, 1342, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1368, 1369, 1371, 1377, 1379, 1385, 1386, 1391, 1392, 1395, 1416, 1417, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1432, 1437, 1438, 1439, 1440, 1443, 1452, 1454, 1456, 1457, 1469, 1470, 1471, 1472, 1473, 1474, 1477, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1521, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1561, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1590, 1591, 1592, 1593, 1594, 1595, 1605, 1606, 1612, 1613, 1614, 1617, 1623, 1632, 1641, 1646, 1649, 1650, 1651, 1652, 1656, 1701, 1711, 1712, 1722, 1724, 1726, 1728, 1729, 1733, 1736, 1739, 1745, 1754, 1757, 1759, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1782, 1790, 1791, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1809, 1810, 1811, 1814, 1824, 1826, 1829, 1835, 1836, 1840, 1842, 1850, 1853, 1856, 1857, 1862, 1864, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1878, 1879, 1880, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1916, 1917, 1918, 1919, 1922, 1923, 1924, 1927, 1928, 1930, 1931, 1933, 1934, 1935, 1938, 1939, 1942, 1943, 1944, 1947, 1948, 1949, 1950, 1954, 1955, 1956, 1957, 1958, 1959], "detail": [0, 1, 2, 3, 7, 8, 11, 12, 13, 14, 16, 17, 20, 23, 24, 25, 29, 31, 41, 46, 52, 54, 67, 68, 69, 138, 311, 482, 601, 667, 722, 725, 726, 727, 728, 729, 730, 747, 753, 754, 755, 758, 759, 760, 761, 766, 767, 769, 770, 771, 772, 780, 846, 847, 848, 849, 860, 877, 879, 880, 881, 882, 883, 886, 895, 922, 943, 955, 967, 971, 973, 974, 976, 990, 991, 1000, 1011, 1014, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1029, 1030, 1031, 1048, 1065, 1104, 1126, 1137, 1140, 1141, 1145, 1173, 1180, 1192, 1196, 1207, 1228, 1231, 1249, 1256, 1264, 1270, 1272, 1292, 1333, 1337, 1347, 1356, 1357, 1358, 1362, 1368, 1369, 1370, 1371, 1373, 1374, 1377, 1395, 1425, 1431, 1437, 1438, 1440, 1452, 1473, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1525, 1527, 1528, 1529, 1530, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1572, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1590, 1591, 1592, 1596, 1605, 1606, 1641, 1651, 1665, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1684, 1689, 1701, 1713, 1745, 1756, 1782, 1791, 1836, 1850, 1853, 1868, 1870, 1871, 1872, 1873, 1880, 1882, 1884, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1907, 1908, 1909, 1911, 1915, 1916, 1918, 1920, 1922, 1923, 1924, 1925, 1927, 1931, 1932, 1934, 1935, 1949, 1953, 1956, 1957, 1958], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 46, 49, 51, 52, 53, 54, 70, 72, 73, 85, 138, 179, 196, 248, 301, 309, 435, 474, 475, 484, 485, 500, 502, 504, 531, 547, 567, 604, 667, 673, 676, 722, 755, 756, 766, 772, 778, 780, 811, 827, 845, 852, 864, 867, 880, 888, 889, 890, 891, 892, 893, 894, 895, 896, 900, 901, 907, 910, 919, 927, 930, 938, 939, 950, 951, 955, 968, 970, 980, 982, 1004, 1010, 1011, 1023, 1048, 1065, 1104, 1108, 1113, 1118, 1122, 1123, 1128, 1131, 1132, 1133, 1145, 1167, 1181, 1182, 1184, 1185, 1188, 1192, 1193, 1195, 1203, 1204, 1205, 1207, 1208, 1212, 1213, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1261, 1262, 1263, 1264, 1272, 1278, 1281, 1286, 1292, 1293, 1296, 1315, 1320, 1321, 1322, 1333, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1368, 1369, 1372, 1375, 1377, 1378, 1380, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1412, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1439, 1440, 1452, 1453, 1456, 1457, 1458, 1459, 1461, 1464, 1470, 1471, 1472, 1473, 1475, 1476, 1477, 1478, 1479, 1489, 1491, 1492, 1493, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1508, 1516, 1522, 1524, 1535, 1536, 1559, 1562, 1564, 1567, 1568, 1574, 1582, 1593, 1594, 1595, 1596, 1601, 1602, 1605, 1606, 1607, 1608, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1641, 1646, 1650, 1651, 1652, 1653, 1660, 1662, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1701, 1703, 1710, 1713, 1714, 1736, 1742, 1749, 1754, 1757, 1764, 1782, 1788, 1792, 1794, 1795, 1796, 1800, 1806, 1811, 1815, 1824, 1829, 1831, 1836, 1840, 1842, 1847, 1850, 1851, 1861, 1864, 1868, 1869, 1870, 1872, 1879, 1881, 1883, 1885, 1886, 1887, 1891, 1894, 1895, 1896, 1897, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1914, 1915, 1916, 1917, 1922, 1923, 1924, 1925, 1928, 1930, 1931, 1932, 1933, 1934, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1952, 1954, 1955, 1956, 1958], "enter": [0, 23, 881, 1167, 1898], "tensor": [0, 2, 5, 7, 8, 13, 16, 17, 20, 21, 23, 24, 25, 27, 29, 30, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 76, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 707, 719, 721, 722, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 737, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772, 773, 774, 775, 776, 777, 781, 785, 786, 787, 788, 789, 806, 807, 808, 809, 811, 812, 814, 852, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 900, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 965, 978, 979, 980, 981, 982, 989, 997, 998, 1004, 1008, 1011, 1014, 1018, 1029, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1174, 1177, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1195, 1196, 1198, 1199, 1202, 1203, 1205, 1207, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1304, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1333, 1337, 1338, 1341, 1342, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1377, 1378, 1379, 1385, 1391, 1392, 1395, 1396, 1412, 1415, 1416, 1417, 1418, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1440, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1457, 1458, 1459, 1460, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1601, 1602, 1605, 1606, 1607, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1762, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1824, 1825, 1826, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1872, 1873, 1877, 1880, 1889, 1891, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1913, 1914, 1915, 1916, 1917, 1919, 1922, 1923, 1924, 1928, 1929, 1932, 1934, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1951, 1955, 1956, 1957, 1958], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 34, 38, 39, 40, 41, 43, 44, 46, 51, 53, 54, 76, 138, 242, 486, 532, 604, 684, 745, 768, 779, 780, 781, 787, 797, 798, 799, 800, 802, 803, 804, 805, 810, 811, 813, 841, 852, 876, 877, 878, 880, 886, 888, 894, 895, 896, 915, 921, 925, 926, 950, 968, 1004, 1011, 1022, 1066, 1067, 1068, 1081, 1082, 1084, 1085, 1086, 1088, 1092, 1096, 1097, 1098, 1113, 1121, 1122, 1129, 1130, 1131, 1133, 1154, 1191, 1192, 1196, 1198, 1202, 1203, 1205, 1207, 1213, 1221, 1223, 1227, 1228, 1232, 1237, 1238, 1239, 1244, 1245, 1248, 1252, 1255, 1261, 1263, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1341, 1342, 1346, 1347, 1353, 1354, 1355, 1362, 1363, 1367, 1371, 1372, 1375, 1376, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1391, 1392, 1411, 1412, 1414, 1415, 1416, 1424, 1425, 1433, 1435, 1436, 1439, 1443, 1444, 1445, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1474, 1475, 1476, 1495, 1499, 1500, 1501, 1541, 1560, 1561, 1574, 1596, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1629, 1639, 1640, 1642, 1645, 1647, 1652, 1660, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1689, 1729, 1745, 1760, 1762, 1815, 1861, 1868, 1870, 1871, 1872, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1892, 1893, 1895, 1896, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1911, 1913, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1929, 1932, 1934, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1951, 1952, 1954, 1955, 1956, 1957, 1958], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 19, 20, 21, 23, 27, 28, 29, 31, 32, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 63, 64, 65, 70, 71, 138, 242, 323, 435, 475, 486, 667, 676, 721, 722, 735, 744, 768, 876, 877, 878, 879, 880, 885, 886, 888, 889, 890, 894, 921, 939, 966, 989, 1000, 1002, 1011, 1012, 1032, 1065, 1121, 1122, 1125, 1126, 1127, 1128, 1133, 1167, 1192, 1196, 1197, 1204, 1207, 1208, 1209, 1237, 1255, 1263, 1286, 1293, 1296, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1395, 1421, 1422, 1423, 1425, 1430, 1431, 1432, 1440, 1459, 1468, 1470, 1472, 1477, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1535, 1541, 1574, 1592, 1593, 1596, 1605, 1613, 1639, 1647, 1649, 1650, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1695, 1713, 1736, 1745, 1753, 1797, 1798, 1799, 1801, 1802, 1806, 1851, 1853, 1861, 1868, 1870, 1872, 1873, 1875, 1877, 1880, 1881, 1883, 1885, 1886, 1888, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1930, 1931, 1932, 1933, 1934, 1935, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958], "should": [0, 1, 3, 4, 5, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 44, 46, 50, 51, 53, 54, 55, 60, 61, 63, 72, 107, 138, 142, 301, 309, 386, 390, 432, 433, 434, 435, 436, 474, 475, 483, 500, 502, 504, 570, 571, 572, 574, 575, 673, 676, 677, 722, 747, 759, 760, 761, 780, 783, 787, 804, 811, 825, 826, 841, 842, 843, 846, 852, 876, 877, 878, 879, 880, 884, 885, 886, 887, 888, 889, 890, 894, 900, 901, 907, 908, 909, 910, 917, 930, 944, 957, 968, 971, 981, 982, 1000, 1002, 1011, 1056, 1066, 1067, 1068, 1078, 1083, 1086, 1087, 1088, 1096, 1097, 1098, 1101, 1116, 1118, 1119, 1120, 1122, 1123, 1127, 1131, 1132, 1133, 1149, 1150, 1153, 1154, 1189, 1190, 1192, 1193, 1197, 1201, 1203, 1204, 1207, 1208, 1209, 1211, 1236, 1261, 1262, 1263, 1269, 1278, 1281, 1282, 1283, 1303, 1333, 1341, 1342, 1346, 1359, 1361, 1362, 1364, 1365, 1366, 1369, 1370, 1391, 1395, 1417, 1425, 1431, 1432, 1433, 1452, 1473, 1477, 1489, 1495, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1516, 1524, 1574, 1596, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1633, 1634, 1638, 1639, 1640, 1643, 1645, 1656, 1657, 1661, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1713, 1715, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1736, 1752, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1797, 1798, 1799, 1800, 1801, 1802, 1815, 1829, 1838, 1853, 1861, 1866, 1867, 1868, 1869, 1870, 1872, 1873, 1877, 1879, 1880, 1882, 1883, 1885, 1887, 1888, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1906, 1907, 1908, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1925, 1927, 1931, 1932, 1934, 1940, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1952, 1954, 1955, 1956, 1957], "call": [0, 1, 2, 3, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 40, 42, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 63, 68, 74, 138, 278, 311, 323, 445, 473, 474, 475, 543, 567, 601, 604, 667, 684, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 768, 777, 784, 811, 844, 848, 849, 880, 884, 885, 886, 887, 888, 890, 891, 894, 900, 901, 922, 939, 944, 946, 966, 969, 971, 1000, 1002, 1012, 1013, 1022, 1029, 1030, 1032, 1033, 1063, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1121, 1122, 1133, 1137, 1155, 1167, 1177, 1192, 1195, 1197, 1202, 1203, 1204, 1211, 1247, 1255, 1259, 1261, 1263, 1264, 1293, 1337, 1343, 1344, 1345, 1362, 1363, 1364, 1365, 1366, 1368, 1370, 1372, 1410, 1421, 1422, 1423, 1425, 1432, 1433, 1453, 1464, 1476, 1502, 1503, 1504, 1510, 1511, 1512, 1517, 1535, 1574, 1593, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1614, 1617, 1624, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1640, 1646, 1647, 1649, 1650, 1662, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1726, 1753, 1760, 1761, 1790, 1809, 1810, 1811, 1831, 1850, 1851, 1853, 1856, 1857, 1861, 1862, 1868, 1870, 1874, 1877, 1883, 1885, 1887, 1888, 1889, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1938, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1955, 1956, 1957, 1958, 1959], "model": [0, 1, 2, 3, 4, 5, 8, 9, 21, 23, 24, 25, 27, 28, 29, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 70, 71, 779, 780, 781, 784, 785, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 811, 812, 813, 823, 824, 825, 826, 841, 844, 845, 846, 847, 848, 849, 850, 939, 1012, 1032, 1121, 1122, 1123, 1131, 1133, 1167, 1192, 1196, 1197, 1201, 1203, 1207, 1209, 1263, 1333, 1362, 1379, 1390, 1391, 1425, 1431, 1453, 1464, 1468, 1470, 1471, 1472, 1523, 1605, 1606, 1611, 1613, 1615, 1628, 1647, 1648, 1660, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1697, 1811, 1861, 1869, 1870, 1872, 1873, 1874, 1881, 1882, 1888, 1893, 1895, 1896, 1897, 1898, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1917, 1919, 1923, 1924, 1926, 1927, 1928, 1932, 1936, 1937, 1940, 1941, 1942, 1945, 1946, 1947, 1949, 1952, 1954, 1956], "": [0, 1, 2, 3, 4, 7, 8, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 40, 41, 44, 46, 48, 50, 51, 53, 54, 68, 69, 74, 75, 450, 468, 480, 483, 500, 531, 545, 568, 611, 667, 676, 681, 682, 683, 722, 747, 780, 781, 782, 802, 803, 804, 807, 810, 813, 841, 848, 849, 862, 864, 865, 866, 867, 883, 884, 885, 889, 890, 892, 896, 923, 925, 938, 950, 951, 952, 957, 964, 966, 968, 972, 987, 991, 1000, 1002, 1007, 1008, 1011, 1012, 1013, 1032, 1033, 1034, 1040, 1057, 1060, 1062, 1063, 1065, 1079, 1080, 1082, 1083, 1084, 1087, 1088, 1090, 1091, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1111, 1112, 1113, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1131, 1133, 1137, 1145, 1153, 1154, 1155, 1179, 1181, 1189, 1190, 1192, 1196, 1202, 1203, 1207, 1222, 1223, 1233, 1234, 1235, 1237, 1240, 1244, 1246, 1248, 1249, 1253, 1254, 1255, 1256, 1261, 1263, 1264, 1279, 1286, 1291, 1293, 1296, 1298, 1299, 1303, 1306, 1307, 1310, 1319, 1320, 1323, 1325, 1331, 1332, 1333, 1341, 1342, 1343, 1344, 1345, 1348, 1362, 1368, 1379, 1425, 1426, 1431, 1435, 1441, 1453, 1456, 1458, 1464, 1468, 1470, 1472, 1478, 1479, 1496, 1497, 1508, 1521, 1524, 1535, 1536, 1541, 1574, 1580, 1593, 1596, 1601, 1602, 1605, 1606, 1617, 1628, 1641, 1645, 1652, 1653, 1662, 1663, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1701, 1703, 1707, 1714, 1729, 1732, 1733, 1736, 1737, 1738, 1740, 1742, 1749, 1756, 1757, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1806, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1826, 1830, 1832, 1838, 1853, 1856, 1857, 1858, 1861, 1862, 1868, 1870, 1871, 1872, 1873, 1874, 1877, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1911, 1913, 1914, 1916, 1917, 1918, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957], "wrap": [0, 1, 14, 20, 21, 23, 27, 28, 33, 42, 46, 50, 51, 54, 55, 248, 777, 778, 969, 1122, 1192, 1207, 1362, 1425, 1464, 1600, 1605, 1615, 1641, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1870, 1871, 1873, 1880, 1892, 1893, 1896, 1897, 1898, 1899, 1904, 1910, 1911, 1916, 1917, 1918, 1923, 1924, 1935, 1937, 1942, 1943, 1946, 1949, 1956, 1957], "forward": [0, 5, 7, 8, 13, 21, 23, 24, 27, 28, 29, 44, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 138, 209, 210, 667, 722, 735, 744, 747, 787, 802, 803, 804, 807, 811, 848, 849, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 894, 895, 1011, 1057, 1069, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1122, 1124, 1125, 1126, 1128, 1131, 1167, 1192, 1195, 1196, 1197, 1198, 1202, 1203, 1207, 1208, 1209, 1337, 1341, 1343, 1344, 1345, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1377, 1395, 1410, 1421, 1422, 1423, 1425, 1426, 1427, 1431, 1432, 1435, 1436, 1440, 1453, 1468, 1469, 1470, 1471, 1472, 1510, 1511, 1512, 1517, 1562, 1596, 1599, 1600, 1601, 1602, 1605, 1615, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1646, 1649, 1650, 1661, 1720, 1759, 1788, 1850, 1869, 1870, 1872, 1873, 1879, 1881, 1885, 1887, 1891, 1892, 1893, 1895, 1896, 1897, 1899, 1900, 1901, 1903, 1904, 1907, 1909, 1911, 1914, 1915, 1916, 1917, 1918, 1923, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1946, 1949, 1950, 1951, 1952, 1954, 1955, 1956], "pass": [0, 1, 3, 5, 6, 7, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 50, 51, 53, 54, 55, 62, 63, 67, 74, 138, 242, 435, 475, 500, 502, 504, 531, 547, 780, 781, 810, 813, 846, 848, 867, 876, 877, 878, 879, 880, 886, 894, 923, 939, 945, 966, 1000, 1011, 1055, 1086, 1087, 1088, 1096, 1097, 1098, 1104, 1118, 1121, 1122, 1126, 1127, 1128, 1131, 1132, 1154, 1190, 1192, 1193, 1196, 1201, 1203, 1207, 1208, 1236, 1252, 1254, 1263, 1310, 1333, 1334, 1335, 1336, 1343, 1344, 1345, 1362, 1368, 1369, 1373, 1374, 1425, 1430, 1431, 1453, 1469, 1470, 1471, 1472, 1477, 1489, 1519, 1520, 1524, 1535, 1536, 1562, 1574, 1596, 1599, 1600, 1601, 1602, 1605, 1615, 1617, 1619, 1624, 1638, 1641, 1645, 1647, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1745, 1749, 1753, 1815, 1868, 1870, 1874, 1877, 1881, 1883, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1901, 1903, 1904, 1907, 1911, 1912, 1914, 1915, 1916, 1923, 1925, 1927, 1928, 1930, 1932, 1933, 1934, 1937, 1938, 1942, 1943, 1945, 1946, 1949, 1953, 1956, 1957], "e": [0, 1, 2, 3, 5, 7, 11, 13, 14, 20, 21, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 43, 44, 46, 49, 51, 53, 54, 55, 62, 63, 138, 246, 323, 365, 567, 604, 722, 735, 744, 747, 780, 781, 802, 804, 841, 845, 846, 848, 849, 867, 876, 880, 885, 895, 896, 918, 920, 923, 997, 1011, 1036, 1065, 1075, 1116, 1122, 1127, 1131, 1142, 1167, 1171, 1172, 1174, 1177, 1189, 1192, 1198, 1199, 1207, 1227, 1228, 1243, 1255, 1263, 1264, 1265, 1267, 1269, 1286, 1297, 1341, 1342, 1343, 1344, 1345, 1348, 1353, 1354, 1355, 1361, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1377, 1380, 1385, 1388, 1389, 1390, 1391, 1392, 1395, 1397, 1398, 1399, 1400, 1416, 1425, 1426, 1431, 1432, 1434, 1435, 1439, 1440, 1456, 1464, 1468, 1472, 1473, 1474, 1476, 1499, 1500, 1501, 1508, 1510, 1511, 1512, 1515, 1516, 1517, 1524, 1535, 1567, 1574, 1593, 1595, 1596, 1601, 1605, 1606, 1607, 1608, 1613, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1638, 1639, 1645, 1649, 1652, 1660, 1661, 1670, 1671, 1706, 1717, 1735, 1742, 1749, 1753, 1757, 1760, 1765, 1800, 1811, 1815, 1868, 1870, 1872, 1873, 1874, 1877, 1880, 1881, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1907, 1909, 1911, 1914, 1915, 1917, 1918, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1932, 1934, 1941, 1944, 1945, 1949, 1954, 1956, 1957, 1959], "network": [0, 1, 7, 8, 14, 27, 29, 40, 828, 1011, 1192, 1207, 1208, 1337, 1343, 1344, 1345, 1348, 1356, 1357, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1379, 1391, 1395, 1425, 1432, 1437, 1438, 1443, 1452, 1454, 1464, 1468, 1470, 1472, 1489, 1523, 1524, 1577, 1596, 1613, 1615, 1641, 1646, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1870, 1872, 1873, 1891, 1892, 1898, 1907, 1908, 1911, 1914, 1918, 1923, 1924, 1925, 1944], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 13, 14, 20, 21, 23, 25, 37, 40, 41, 44, 46, 54, 69, 71, 309, 475, 504, 570, 755, 756, 846, 848, 941, 1093, 1095, 1153, 1190, 1192, 1193, 1221, 1300, 1301, 1338, 1339, 1340, 1346, 1348, 1362, 1371, 1379, 1412, 1421, 1422, 1423, 1425, 1431, 1468, 1469, 1470, 1471, 1472, 1475, 1491, 1492, 1493, 1508, 1521, 1541, 1605, 1639, 1640, 1642, 1778, 1839, 1840, 1841, 1842, 1868, 1870, 1872, 1873, 1880, 1881, 1883, 1885, 1893, 1895, 1896, 1900, 1903, 1904, 1909, 1911, 1917, 1918, 1923, 1925, 1932, 1935, 1938, 1940, 1942, 1943, 1945, 1946, 1947, 1952, 1953, 1954, 1956, 1957, 1958], "loss": [0, 1, 21, 23, 24, 27, 29, 46, 1123, 1189, 1227, 1228, 1237, 1255, 1333, 1341, 1342, 1348, 1359, 1361, 1368, 1379, 1385, 1386, 1391, 1392, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1474, 1496, 1497, 1507, 1508, 1521, 1536, 1559, 1567, 1605, 1639, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1684, 1688, 1697, 1757, 1868, 1869, 1883, 1887, 1893, 1896, 1897, 1900, 1901, 1904, 1914, 1918, 1919, 1923, 1924, 1932], "comput": [0, 3, 5, 7, 8, 11, 13, 16, 20, 21, 23, 25, 29, 31, 33, 44, 46, 47, 48, 50, 138, 278, 474, 482, 668, 670, 684, 685, 747, 755, 756, 787, 789, 806, 807, 808, 809, 811, 812, 876, 880, 881, 882, 884, 885, 888, 889, 890, 891, 892, 893, 894, 895, 896, 900, 901, 911, 912, 913, 914, 915, 916, 927, 929, 930, 931, 938, 951, 953, 965, 1008, 1011, 1048, 1057, 1059, 1062, 1065, 1069, 1070, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1108, 1110, 1111, 1112, 1114, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1135, 1136, 1137, 1145, 1148, 1151, 1152, 1153, 1154, 1167, 1169, 1192, 1195, 1203, 1211, 1212, 1214, 1216, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1264, 1272, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1290, 1291, 1292, 1295, 1320, 1322, 1326, 1333, 1337, 1338, 1339, 1340, 1343, 1344, 1345, 1356, 1357, 1358, 1360, 1361, 1363, 1368, 1369, 1377, 1380, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1431, 1432, 1434, 1439, 1440, 1458, 1460, 1464, 1473, 1474, 1477, 1491, 1492, 1493, 1506, 1507, 1515, 1516, 1523, 1524, 1526, 1535, 1543, 1548, 1549, 1550, 1551, 1552, 1553, 1564, 1567, 1574, 1580, 1581, 1596, 1599, 1601, 1602, 1605, 1606, 1609, 1612, 1615, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1631, 1632, 1639, 1645, 1649, 1650, 1652, 1668, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1701, 1707, 1713, 1714, 1718, 1719, 1733, 1734, 1757, 1759, 1765, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1788, 1791, 1792, 1793, 1794, 1811, 1815, 1816, 1831, 1836, 1858, 1861, 1869, 1870, 1873, 1880, 1883, 1886, 1887, 1889, 1892, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1911, 1914, 1918, 1921, 1923, 1927, 1928, 1933, 1936, 1940, 1941, 1944, 1945, 1946, 1948, 1955, 1958], "backward": [0, 1, 5, 9, 23, 24, 25, 27, 29, 44, 46, 50, 51, 54, 55, 278, 323, 474, 475, 483, 490, 491, 500, 502, 504, 568, 667, 673, 676, 747, 802, 803, 804, 877, 882, 883, 884, 885, 886, 887, 889, 891, 894, 895, 900, 901, 907, 919, 1011, 1069, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1121, 1122, 1192, 1264, 1272, 1286, 1296, 1341, 1342, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1362, 1368, 1377, 1378, 1379, 1392, 1395, 1396, 1412, 1416, 1417, 1425, 1431, 1432, 1439, 1440, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1496, 1497, 1507, 1508, 1524, 1535, 1559, 1562, 1597, 1601, 1602, 1605, 1617, 1650, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1688, 1701, 1713, 1788, 1792, 1796, 1815, 1850, 1868, 1869, 1871, 1873, 1879, 1887, 1888, 1891, 1892, 1897, 1898, 1899, 1900, 1903, 1904, 1906, 1907, 1911, 1914, 1915, 1917, 1918, 1923, 1927, 1928, 1933, 1938, 1941, 1942, 1946, 1950, 1952, 1954, 1955, 1956], "under": [0, 1, 3, 4, 5, 9, 20, 23, 40, 44, 46, 47, 49, 51, 53, 69, 895, 903, 924, 1167, 1192, 1348, 1425, 1489, 1515, 1516, 1612, 1614, 1617, 1664, 1665, 1734, 1885, 1892, 1893, 1896, 1897, 1899, 1901, 1906, 1911, 1915, 1916, 1918, 1921, 1922, 1925, 1928, 1932, 1935, 1937, 1943, 1944, 1945, 1946, 1949, 1951, 1954, 1956], "recommend": [0, 1, 5, 20, 21, 23, 25, 28, 29, 31, 40, 41, 46, 50, 53, 54, 55, 72, 73, 75, 435, 880, 946, 950, 951, 965, 1086, 1087, 1088, 1096, 1097, 1098, 1179, 1195, 1237, 1264, 1310, 1333, 1362, 1536, 1605, 1720, 1847, 1851, 1868, 1870, 1882, 1885, 1887, 1891, 1892, 1893, 1895, 1896, 1898, 1899, 1904, 1906, 1907, 1909, 1911, 1915, 1918, 1947], "same": [0, 1, 3, 7, 13, 14, 16, 17, 20, 21, 23, 24, 25, 27, 29, 31, 37, 38, 40, 41, 42, 43, 44, 46, 49, 51, 53, 54, 55, 62, 63, 127, 141, 183, 209, 243, 299, 301, 303, 307, 309, 327, 432, 433, 434, 435, 436, 458, 470, 484, 485, 487, 500, 502, 504, 507, 531, 567, 604, 605, 673, 676, 680, 682, 683, 684, 686, 707, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 732, 733, 743, 745, 748, 749, 750, 751, 752, 766, 772, 775, 776, 780, 781, 783, 787, 789, 801, 806, 809, 811, 812, 846, 848, 865, 866, 867, 879, 882, 885, 888, 889, 890, 891, 892, 893, 895, 896, 907, 909, 910, 919, 921, 923, 926, 931, 933, 939, 942, 947, 965, 966, 968, 979, 981, 1000, 1011, 1048, 1053, 1055, 1056, 1062, 1065, 1067, 1068, 1071, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1113, 1117, 1118, 1120, 1121, 1122, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1134, 1137, 1145, 1153, 1154, 1162, 1166, 1183, 1189, 1192, 1202, 1203, 1207, 1208, 1212, 1213, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1259, 1279, 1283, 1285, 1286, 1289, 1291, 1292, 1293, 1294, 1297, 1320, 1323, 1324, 1325, 1331, 1332, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1372, 1375, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1394, 1397, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1433, 1434, 1439, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1476, 1477, 1480, 1481, 1482, 1489, 1495, 1496, 1497, 1499, 1500, 1501, 1507, 1516, 1524, 1526, 1535, 1536, 1574, 1593, 1605, 1612, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1638, 1642, 1647, 1652, 1653, 1657, 1660, 1666, 1701, 1706, 1707, 1710, 1711, 1723, 1725, 1727, 1731, 1733, 1735, 1736, 1740, 1742, 1749, 1752, 1757, 1765, 1788, 1797, 1798, 1799, 1801, 1802, 1808, 1809, 1810, 1814, 1815, 1825, 1836, 1847, 1848, 1849, 1850, 1856, 1857, 1858, 1861, 1867, 1868, 1870, 1872, 1873, 1883, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1906, 1907, 1908, 1909, 1911, 1914, 1915, 1916, 1918, 1921, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1940, 1941, 1942, 1944, 1945, 1946, 1949, 1952, 1954, 1955, 1956, 1957], "correspond": [0, 1, 7, 17, 20, 21, 23, 25, 27, 28, 29, 40, 46, 54, 70, 460, 461, 500, 502, 504, 531, 532, 667, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 722, 780, 784, 823, 825, 844, 845, 846, 851, 867, 876, 878, 879, 880, 885, 888, 890, 895, 931, 952, 1011, 1031, 1060, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1145, 1154, 1181, 1192, 1208, 1222, 1227, 1228, 1233, 1236, 1255, 1262, 1264, 1278, 1293, 1315, 1362, 1368, 1395, 1425, 1431, 1471, 1515, 1524, 1561, 1601, 1605, 1613, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1646, 1652, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1689, 1706, 1707, 1717, 1740, 1749, 1765, 1800, 1809, 1810, 1815, 1846, 1849, 1856, 1857, 1868, 1870, 1871, 1873, 1877, 1883, 1886, 1887, 1892, 1893, 1896, 1897, 1898, 1899, 1901, 1903, 1904, 1908, 1911, 1915, 1917, 1918, 1923, 1924, 1927, 1928, 1929, 1932, 1934, 1936, 1937, 1947, 1953, 1954, 1956], "devic": [0, 1, 2, 5, 8, 13, 15, 17, 20, 21, 23, 24, 25, 28, 41, 42, 44, 46, 50, 53, 54, 55, 60, 63, 64, 65, 76, 184, 194, 197, 277, 301, 309, 323, 432, 433, 434, 435, 436, 502, 504, 567, 673, 676, 710, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 736, 737, 738, 739, 740, 741, 742, 852, 864, 866, 867, 888, 890, 907, 908, 910, 917, 919, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 971, 972, 973, 974, 975, 977, 978, 979, 980, 981, 982, 984, 985, 986, 989, 993, 994, 995, 997, 998, 1006, 1008, 1009, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1041, 1042, 1043, 1066, 1067, 1068, 1078, 1083, 1101, 1119, 1120, 1149, 1150, 1192, 1196, 1199, 1202, 1205, 1211, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1238, 1239, 1240, 1246, 1249, 1250, 1252, 1253, 1255, 1256, 1262, 1263, 1278, 1281, 1286, 1292, 1296, 1303, 1310, 1312, 1333, 1343, 1344, 1345, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1368, 1369, 1378, 1380, 1388, 1389, 1390, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1425, 1431, 1433, 1441, 1442, 1464, 1468, 1470, 1472, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1516, 1535, 1541, 1574, 1589, 1593, 1594, 1595, 1596, 1605, 1607, 1608, 1609, 1610, 1638, 1645, 1651, 1653, 1656, 1657, 1673, 1713, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1753, 1757, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1792, 1793, 1797, 1798, 1799, 1800, 1801, 1802, 1815, 1829, 1831, 1840, 1842, 1850, 1851, 1853, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1875, 1881, 1886, 1888, 1892, 1897, 1899, 1900, 1902, 1904, 1905, 1906, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1922, 1923, 1927, 1929, 1933, 1934, 1941, 1943, 1945, 1948, 1951, 1953, 1954, 1956, 1958], "creat": [0, 1, 3, 5, 6, 7, 9, 13, 20, 21, 23, 25, 27, 29, 31, 32, 38, 40, 41, 42, 43, 46, 53, 54, 55, 72, 73, 75, 76, 138, 210, 242, 323, 567, 568, 570, 571, 572, 574, 575, 667, 719, 725, 726, 727, 732, 733, 743, 751, 779, 780, 781, 801, 802, 803, 804, 806, 811, 841, 865, 866, 867, 880, 882, 894, 918, 920, 936, 937, 939, 952, 967, 976, 1008, 1009, 1018, 1053, 1068, 1117, 1118, 1119, 1189, 1192, 1195, 1204, 1210, 1215, 1221, 1222, 1228, 1230, 1249, 1262, 1278, 1293, 1315, 1341, 1359, 1368, 1369, 1372, 1386, 1392, 1416, 1417, 1425, 1428, 1429, 1430, 1453, 1456, 1457, 1464, 1473, 1474, 1476, 1605, 1617, 1638, 1645, 1650, 1660, 1662, 1665, 1684, 1752, 1783, 1795, 1800, 1829, 1836, 1869, 1873, 1874, 1877, 1881, 1885, 1892, 1893, 1896, 1897, 1898, 1899, 1901, 1904, 1905, 1906, 1909, 1911, 1914, 1915, 1917, 1918, 1923, 1924, 1925, 1927, 1929, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1941, 1942, 1943, 1944, 1945, 1949, 1955, 1956, 1958, 1959], "optim": [0, 1, 2, 7, 8, 11, 13, 14, 21, 23, 24, 25, 29, 46, 54, 806, 895, 904, 939, 942, 1065, 1131, 1192, 1196, 1201, 1203, 1207, 1208, 1247, 1264, 1343, 1344, 1345, 1361, 1368, 1388, 1389, 1390, 1425, 1428, 1429, 1430, 1431, 1457, 1464, 1472, 1574, 1596, 1605, 1612, 1617, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1703, 1869, 1870, 1872, 1881, 1887, 1891, 1895, 1896, 1897, 1898, 1900, 1901, 1904, 1906, 1911, 1917, 1918, 1927, 1938, 1940, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1956], "default": [0, 2, 3, 5, 9, 11, 13, 17, 23, 24, 25, 27, 28, 29, 31, 32, 37, 38, 39, 40, 41, 43, 44, 46, 49, 50, 51, 52, 54, 55, 59, 60, 62, 63, 64, 65, 69, 72, 73, 75, 138, 143, 158, 160, 163, 166, 167, 168, 183, 194, 197, 228, 255, 278, 285, 313, 319, 381, 432, 433, 434, 435, 436, 445, 483, 486, 487, 507, 512, 567, 568, 570, 667, 681, 684, 699, 700, 701, 702, 703, 704, 707, 717, 718, 719, 720, 722, 742, 745, 747, 755, 756, 757, 759, 760, 761, 766, 772, 780, 785, 790, 795, 796, 801, 804, 806, 807, 808, 809, 812, 815, 816, 817, 818, 819, 820, 821, 822, 828, 829, 830, 831, 832, 833, 835, 836, 841, 842, 843, 845, 852, 866, 867, 880, 881, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 908, 917, 923, 927, 930, 931, 932, 936, 939, 957, 965, 968, 971, 973, 977, 980, 981, 982, 985, 986, 993, 994, 997, 1008, 1010, 1011, 1014, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1035, 1036, 1039, 1041, 1042, 1043, 1046, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1060, 1065, 1066, 1067, 1068, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1132, 1133, 1137, 1139, 1145, 1149, 1150, 1153, 1154, 1181, 1183, 1189, 1192, 1193, 1196, 1203, 1207, 1208, 1211, 1212, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1278, 1281, 1283, 1289, 1291, 1292, 1293, 1297, 1303, 1319, 1320, 1322, 1323, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1439, 1440, 1442, 1443, 1444, 1445, 1452, 1456, 1457, 1461, 1462, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1476, 1477, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1521, 1523, 1524, 1526, 1528, 1535, 1536, 1543, 1548, 1549, 1550, 1559, 1560, 1562, 1567, 1574, 1580, 1581, 1589, 1593, 1599, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1639, 1640, 1642, 1644, 1645, 1646, 1647, 1649, 1651, 1652, 1656, 1657, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1711, 1713, 1714, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1735, 1741, 1742, 1745, 1749, 1753, 1754, 1755, 1756, 1757, 1762, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1809, 1810, 1811, 1814, 1815, 1816, 1829, 1830, 1836, 1838, 1840, 1842, 1847, 1848, 1850, 1851, 1853, 1855, 1856, 1857, 1861, 1866, 1867, 1868, 1869, 1870, 1873, 1877, 1879, 1881, 1882, 1885, 1888, 1891, 1892, 1895, 1897, 1898, 1899, 1900, 1902, 1904, 1907, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1922, 1923, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1938, 1942, 1944, 1945, 1946, 1950, 1952, 1953, 1955, 1956, 1958, 1959], "net": [0, 6, 14, 31, 49, 54, 1192, 1207, 1208, 1362, 1425, 1605, 1628, 1688, 1872, 1873, 1892, 1893, 1896, 1904, 1932], "sgd": [0, 20, 21, 27, 475, 1368, 1596, 1605, 1689, 1695, 1697, 1892, 1896, 1897, 1904, 1906, 1914, 1923, 1924], "paramet": [0, 1, 2, 3, 5, 11, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 34, 38, 40, 42, 44, 46, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 76, 138, 143, 158, 160, 163, 166, 167, 168, 183, 184, 194, 197, 221, 228, 242, 243, 248, 255, 285, 301, 303, 305, 307, 309, 313, 319, 381, 388, 390, 432, 433, 434, 435, 436, 445, 458, 480, 483, 484, 485, 486, 487, 500, 502, 504, 507, 512, 524, 531, 532, 533, 547, 553, 570, 571, 572, 574, 575, 590, 591, 594, 604, 605, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 722, 725, 726, 727, 728, 729, 730, 731, 732, 733, 737, 742, 743, 745, 746, 747, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 778, 780, 782, 784, 786, 787, 788, 801, 806, 807, 808, 809, 810, 811, 812, 813, 814, 825, 826, 827, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 880, 888, 889, 890, 891, 892, 893, 894, 895, 896, 902, 903, 904, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 938, 939, 941, 942, 944, 945, 947, 950, 951, 952, 953, 954, 955, 956, 957, 960, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 976, 977, 978, 979, 980, 981, 982, 985, 986, 987, 989, 993, 994, 995, 997, 1000, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1162, 1166, 1167, 1169, 1171, 1172, 1174, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1202, 1203, 1204, 1205, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1303, 1305, 1306, 1307, 1310, 1311, 1313, 1314, 1315, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1460, 1461, 1462, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1519, 1520, 1521, 1523, 1524, 1526, 1528, 1535, 1536, 1543, 1548, 1549, 1550, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1567, 1568, 1574, 1580, 1581, 1589, 1593, 1594, 1595, 1596, 1599, 1604, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1785, 1787, 1788, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1815, 1819, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1873, 1875, 1877, 1881, 1882, 1885, 1887, 1888, 1889, 1891, 1892, 1893, 1896, 1897, 1898, 1902, 1903, 1904, 1906, 1908, 1909, 1911, 1915, 1916, 1917, 1918, 1922, 1923, 1924, 1927, 1928, 1929, 1932, 1934, 1936, 1937, 1946, 1955, 1957, 1958], "target": [0, 13, 27, 44, 46, 50, 52, 53, 54, 55, 68, 486, 722, 753, 754, 779, 784, 846, 848, 849, 924, 1123, 1192, 1201, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1341, 1342, 1348, 1359, 1361, 1373, 1374, 1379, 1385, 1386, 1391, 1392, 1416, 1417, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1431, 1432, 1439, 1456, 1457, 1468, 1477, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1496, 1497, 1505, 1507, 1508, 1519, 1520, 1521, 1532, 1533, 1536, 1537, 1547, 1555, 1556, 1557, 1558, 1559, 1567, 1574, 1578, 1579, 1605, 1664, 1683, 1850, 1871, 1873, 1892, 1893, 1896, 1906, 1911, 1914, 1915, 1918, 1919, 1923, 1932, 1936, 1942, 1943, 1944, 1949, 1955, 1956], "data": [0, 1, 2, 3, 7, 11, 17, 18, 21, 23, 25, 27, 28, 29, 30, 31, 34, 37, 40, 42, 44, 46, 50, 54, 55, 56, 60, 63, 127, 138, 183, 184, 314, 317, 321, 324, 329, 432, 435, 468, 480, 484, 486, 604, 725, 726, 727, 747, 759, 760, 761, 768, 779, 780, 781, 785, 806, 807, 808, 809, 810, 812, 814, 852, 866, 867, 877, 880, 908, 917, 923, 969, 1046, 1047, 1066, 1067, 1068, 1078, 1079, 1080, 1083, 1085, 1086, 1088, 1096, 1097, 1098, 1101, 1104, 1105, 1106, 1107, 1116, 1118, 1119, 1120, 1122, 1131, 1149, 1150, 1152, 1171, 1174, 1199, 1203, 1207, 1211, 1262, 1263, 1264, 1278, 1283, 1291, 1293, 1306, 1307, 1320, 1322, 1323, 1346, 1348, 1353, 1354, 1355, 1362, 1377, 1380, 1388, 1389, 1390, 1395, 1397, 1412, 1432, 1440, 1441, 1477, 1489, 1494, 1495, 1499, 1500, 1501, 1534, 1541, 1543, 1580, 1581, 1605, 1606, 1607, 1608, 1638, 1639, 1640, 1641, 1643, 1652, 1656, 1657, 1662, 1665, 1689, 1695, 1703, 1711, 1714, 1715, 1716, 1720, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1791, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1814, 1815, 1829, 1838, 1840, 1842, 1849, 1850, 1851, 1866, 1867, 1869, 1870, 1871, 1874, 1880, 1881, 1883, 1885, 1888, 1892, 1893, 1894, 1896, 1898, 1899, 1903, 1906, 1908, 1909, 1910, 1913, 1914, 1915, 1916, 1918, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1940, 1944, 1945, 1946, 1948, 1949, 1954, 1958], "zero_grad": [0, 1, 27, 1192, 1425, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1688, 1892, 1896, 1900, 1904, 1906, 1914], "output": [0, 1, 4, 5, 7, 17, 20, 21, 23, 27, 28, 29, 31, 37, 38, 44, 50, 51, 52, 54, 55, 63, 68, 127, 301, 309, 432, 433, 434, 436, 500, 504, 553, 604, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 707, 715, 716, 721, 722, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 772, 773, 774, 779, 780, 781, 783, 786, 789, 801, 804, 845, 848, 849, 850, 852, 861, 862, 865, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 907, 909, 910, 911, 912, 913, 914, 915, 916, 919, 923, 926, 927, 928, 929, 930, 931, 932, 934, 937, 951, 952, 954, 955, 965, 978, 980, 981, 982, 1008, 1009, 1011, 1021, 1022, 1044, 1045, 1046, 1047, 1049, 1052, 1053, 1055, 1057, 1060, 1062, 1064, 1065, 1066, 1067, 1068, 1070, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1119, 1120, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1148, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1166, 1169, 1186, 1187, 1189, 1192, 1196, 1203, 1207, 1208, 1212, 1213, 1214, 1215, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1313, 1314, 1315, 1317, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1515, 1516, 1518, 1519, 1520, 1521, 1524, 1526, 1535, 1536, 1541, 1543, 1548, 1549, 1550, 1559, 1560, 1564, 1565, 1566, 1567, 1574, 1589, 1593, 1594, 1595, 1599, 1601, 1602, 1605, 1613, 1614, 1615, 1618, 1639, 1641, 1642, 1646, 1649, 1651, 1652, 1653, 1656, 1657, 1660, 1665, 1666, 1684, 1688, 1701, 1702, 1710, 1711, 1714, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1737, 1738, 1742, 1744, 1749, 1757, 1762, 1765, 1767, 1779, 1780, 1782, 1787, 1792, 1793, 1795, 1796, 1804, 1805, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1815, 1826, 1827, 1828, 1833, 1836, 1838, 1839, 1841, 1844, 1846, 1847, 1848, 1850, 1855, 1856, 1857, 1858, 1861, 1863, 1864, 1866, 1867, 1868, 1870, 1871, 1873, 1879, 1881, 1886, 1887, 1888, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1907, 1911, 1914, 1915, 1916, 1917, 1918, 1920, 1924, 1927, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1955, 1956], "loss_fn": [0, 27, 1683, 1892, 1896, 1897, 1906, 1914], "exit": [0, 1, 2, 4, 17, 23, 31, 40, 46, 53, 54, 881, 1605, 1873, 1885, 1893, 1898, 1906, 1911, 1925, 1949], "befor": [0, 1, 3, 6, 7, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 32, 37, 39, 40, 41, 42, 46, 54, 85, 138, 734, 747, 775, 776, 777, 880, 884, 886, 937, 946, 968, 1046, 1047, 1048, 1057, 1065, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1106, 1107, 1110, 1118, 1121, 1192, 1203, 1205, 1228, 1244, 1248, 1261, 1291, 1303, 1320, 1323, 1362, 1368, 1369, 1372, 1377, 1425, 1426, 1427, 1464, 1468, 1476, 1524, 1543, 1580, 1581, 1596, 1599, 1600, 1601, 1602, 1605, 1613, 1646, 1649, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1697, 1711, 1714, 1740, 1749, 1760, 1761, 1791, 1794, 1797, 1798, 1799, 1801, 1802, 1811, 1814, 1836, 1847, 1870, 1872, 1873, 1885, 1892, 1893, 1896, 1897, 1898, 1901, 1903, 1904, 1907, 1909, 1910, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1928, 1932, 1934, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1952], "step": [0, 1, 2, 4, 9, 13, 20, 21, 23, 24, 25, 27, 29, 41, 46, 50, 54, 67, 525, 594, 673, 755, 756, 844, 852, 881, 882, 883, 910, 934, 1151, 1239, 1262, 1263, 1264, 1278, 1281, 1293, 1373, 1374, 1395, 1492, 1493, 1519, 1520, 1605, 1638, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1720, 1729, 1757, 1783, 1853, 1870, 1871, 1887, 1892, 1893, 1896, 1897, 1898, 1900, 1904, 1906, 1908, 1910, 1911, 1915, 1917, 1918, 1923, 1924, 1927, 1932, 1946, 1949, 1950, 1951, 1954, 1956], "usag": [0, 1, 4, 7, 9, 14, 20, 23, 27, 29, 30, 31, 34, 37, 38, 40, 42, 46, 54, 55, 56, 735, 744, 779, 780, 781, 797, 798, 799, 800, 802, 803, 804, 841, 845, 877, 939, 1014, 1034, 1038, 1065, 1116, 1121, 1125, 1126, 1127, 1205, 1264, 1605, 1661, 1869, 1870, 1873, 1883, 1887, 1892, 1893, 1898, 1900, 1911, 1917, 1925, 1932, 1933, 1935, 1936, 1937, 1944, 1945, 1946, 1947, 1956], "along": [0, 13, 17, 20, 23, 29, 33, 40, 55, 61, 301, 303, 305, 309, 480, 500, 502, 504, 673, 684, 806, 862, 863, 926, 933, 956, 965, 980, 982, 1048, 1056, 1057, 1064, 1065, 1081, 1086, 1089, 1093, 1096, 1099, 1105, 1133, 1134, 1157, 1166, 1169, 1213, 1224, 1260, 1313, 1320, 1324, 1325, 1334, 1335, 1336, 1342, 1360, 1373, 1374, 1415, 1418, 1419, 1420, 1458, 1460, 1489, 1497, 1506, 1519, 1520, 1523, 1526, 1543, 1548, 1549, 1550, 1560, 1580, 1581, 1623, 1625, 1632, 1633, 1642, 1651, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1695, 1714, 1734, 1735, 1740, 1751, 1787, 1791, 1794, 1795, 1803, 1808, 1826, 1830, 1833, 1836, 1845, 1858, 1861, 1863, 1868, 1872, 1877, 1888, 1894, 1898, 1900, 1903, 1904, 1915, 1918, 1928], "more": [0, 1, 2, 3, 4, 5, 8, 9, 11, 13, 14, 16, 19, 20, 21, 23, 24, 29, 30, 31, 32, 36, 39, 40, 41, 42, 44, 46, 49, 50, 51, 52, 54, 69, 71, 73, 74, 138, 242, 243, 301, 309, 474, 475, 480, 482, 485, 500, 502, 504, 532, 605, 667, 722, 758, 767, 771, 780, 841, 846, 847, 848, 860, 873, 874, 875, 877, 879, 880, 886, 888, 890, 894, 895, 896, 900, 901, 910, 918, 921, 923, 929, 930, 931, 932, 939, 968, 969, 971, 973, 974, 990, 1009, 1014, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1029, 1030, 1031, 1035, 1043, 1048, 1054, 1063, 1065, 1069, 1081, 1082, 1084, 1086, 1105, 1106, 1107, 1108, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1140, 1141, 1145, 1154, 1155, 1167, 1173, 1177, 1179, 1180, 1192, 1205, 1208, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1261, 1264, 1267, 1270, 1272, 1282, 1283, 1306, 1307, 1310, 1321, 1333, 1337, 1342, 1347, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1368, 1369, 1370, 1386, 1395, 1421, 1422, 1423, 1425, 1431, 1437, 1438, 1439, 1440, 1452, 1464, 1472, 1489, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1513, 1515, 1516, 1524, 1527, 1528, 1529, 1530, 1535, 1539, 1543, 1544, 1554, 1561, 1568, 1569, 1570, 1572, 1574, 1575, 1576, 1577, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1592, 1593, 1594, 1595, 1596, 1605, 1606, 1612, 1614, 1615, 1650, 1651, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1701, 1712, 1713, 1739, 1745, 1749, 1757, 1759, 1790, 1791, 1815, 1836, 1838, 1850, 1853, 1861, 1862, 1868, 1869, 1870, 1872, 1873, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1907, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1924, 1925, 1927, 1930, 1931, 1932, 1933, 1934, 1935, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1956, 1957, 1958, 1959], "complex": [0, 1, 3, 7, 8, 20, 21, 23, 54, 299, 317, 470, 486, 672, 679, 895, 896, 932, 950, 951, 1060, 1066, 1067, 1068, 1086, 1108, 1113, 1145, 1162, 1171, 1182, 1184, 1185, 1188, 1189, 1192, 1212, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1241, 1244, 1246, 1248, 1249, 1250, 1251, 1255, 1256, 1260, 1261, 1262, 1264, 1272, 1278, 1290, 1295, 1314, 1353, 1354, 1355, 1392, 1425, 1499, 1500, 1501, 1612, 1652, 1664, 1707, 1720, 1733, 1754, 1765, 1811, 1812, 1815, 1850, 1858, 1859, 1860, 1868, 1869, 1871, 1873, 1874, 1882, 1906, 1913, 1929, 1930, 1933, 1934, 1947, 1948], "scenario": [0, 20, 23, 40, 1661, 1662, 1851, 1896, 1901, 1906, 1911, 1917, 1923, 1946, 1947], "g": [0, 1, 2, 3, 5, 7, 11, 13, 14, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 43, 44, 46, 49, 51, 53, 54, 55, 62, 63, 567, 604, 735, 744, 747, 780, 781, 802, 804, 841, 846, 848, 849, 876, 885, 895, 896, 920, 1011, 1065, 1116, 1122, 1126, 1127, 1142, 1145, 1167, 1189, 1192, 1198, 1199, 1207, 1263, 1348, 1349, 1362, 1364, 1365, 1366, 1370, 1372, 1377, 1385, 1391, 1395, 1396, 1425, 1426, 1435, 1440, 1456, 1508, 1510, 1511, 1512, 1517, 1524, 1605, 1606, 1607, 1608, 1649, 1652, 1660, 1661, 1668, 1669, 1670, 1671, 1674, 1680, 1681, 1682, 1683, 1735, 1742, 1753, 1757, 1760, 1778, 1800, 1811, 1868, 1870, 1872, 1873, 1874, 1877, 1880, 1885, 1892, 1893, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1907, 1908, 1911, 1914, 1915, 1917, 1918, 1923, 1927, 1930, 1931, 1932, 1942, 1944, 1945, 1946, 1954, 1956, 1957], "penalti": [0, 768, 1022, 1667, 1668, 1669, 1670, 1672, 1674, 1680, 1681, 1683, 1919, 1952], "multipl": [0, 1, 2, 3, 5, 20, 21, 23, 24, 25, 29, 30, 33, 40, 41, 42, 46, 51, 53, 54, 67, 179, 196, 303, 500, 673, 675, 676, 682, 683, 747, 828, 861, 862, 865, 894, 927, 929, 939, 953, 957, 980, 981, 982, 1008, 1063, 1065, 1068, 1118, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1141, 1155, 1156, 1205, 1208, 1213, 1214, 1229, 1230, 1231, 1247, 1252, 1257, 1258, 1286, 1289, 1294, 1296, 1341, 1342, 1356, 1357, 1358, 1359, 1361, 1369, 1372, 1377, 1385, 1391, 1392, 1413, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1476, 1496, 1497, 1507, 1516, 1536, 1559, 1567, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1682, 1690, 1691, 1692, 1693, 1694, 1699, 1701, 1757, 1785, 1792, 1793, 1797, 1798, 1799, 1801, 1802, 1830, 1831, 1838, 1846, 1850, 1861, 1862, 1868, 1869, 1872, 1873, 1885, 1886, 1887, 1888, 1893, 1895, 1897, 1899, 1901, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1937, 1938, 1940, 1941, 1945, 1946, 1955], "custom": [0, 1, 3, 5, 13, 14, 20, 23, 24, 25, 26, 27, 33, 36, 37, 39, 44, 46, 55, 57, 68, 70, 71, 72, 73, 75, 486, 780, 784, 801, 802, 803, 804, 825, 827, 846, 847, 848, 849, 886, 939, 941, 967, 976, 1040, 1192, 1425, 1468, 1472, 1473, 1474, 1619, 1628, 1645, 1664, 1689, 1851, 1853, 1869, 1874, 1877, 1879, 1885, 1886, 1893, 1903, 1908, 1909, 1910, 1921, 1922, 1936, 1938, 1945, 1947, 1949], "autograd": [0, 4, 5, 7, 8, 23, 27, 29, 46, 47, 50, 55, 127, 323, 432, 433, 434, 435, 436, 475, 483, 676, 852, 866, 867, 881, 908, 917, 936, 941, 1011, 1066, 1067, 1068, 1078, 1083, 1101, 1118, 1119, 1120, 1121, 1122, 1131, 1133, 1149, 1150, 1167, 1192, 1211, 1231, 1262, 1278, 1286, 1296, 1379, 1425, 1431, 1472, 1526, 1541, 1605, 1656, 1657, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1761, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1789, 1797, 1798, 1799, 1800, 1801, 1802, 1829, 1861, 1866, 1867, 1869, 1871, 1875, 1880, 1888, 1891, 1896, 1897, 1900, 1901, 1903, 1904, 1917, 1933, 1934, 1938, 1946, 1947, 1952, 1956, 1957], "function": [0, 2, 3, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 20, 24, 25, 27, 28, 30, 31, 33, 37, 38, 40, 41, 44, 46, 49, 51, 53, 55, 57, 58, 62, 63, 66, 68, 69, 71, 72, 75, 76, 107, 138, 183, 248, 277, 286, 309, 474, 475, 480, 483, 504, 528, 543, 667, 676, 680, 681, 685, 686, 735, 744, 745, 747, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 778, 779, 780, 784, 785, 787, 801, 802, 803, 804, 811, 813, 825, 828, 841, 844, 846, 848, 849, 850, 864, 865, 880, 881, 882, 883, 894, 895, 896, 900, 901, 904, 908, 917, 919, 927, 929, 933, 936, 939, 941, 942, 943, 944, 946, 950, 951, 960, 961, 962, 963, 964, 965, 966, 967, 969, 971, 973, 976, 993, 994, 997, 1002, 1003, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1021, 1022, 1029, 1030, 1032, 1033, 1034, 1038, 1048, 1053, 1055, 1056, 1063, 1065, 1069, 1081, 1082, 1084, 1104, 1108, 1111, 1112, 1113, 1116, 1118, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1138, 1145, 1149, 1150, 1151, 1153, 1155, 1163, 1164, 1165, 1167, 1179, 1189, 1190, 1191, 1192, 1193, 1195, 1197, 1198, 1202, 1203, 1204, 1205, 1207, 1209, 1211, 1212, 1213, 1215, 1220, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1243, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1267, 1269, 1278, 1281, 1282, 1286, 1289, 1292, 1294, 1296, 1297, 1298, 1317, 1320, 1321, 1337, 1341, 1347, 1348, 1350, 1351, 1352, 1359, 1363, 1367, 1370, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1391, 1393, 1394, 1395, 1396, 1411, 1414, 1415, 1417, 1424, 1425, 1430, 1431, 1433, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1472, 1473, 1474, 1476, 1478, 1480, 1481, 1482, 1597, 1601, 1602, 1605, 1612, 1613, 1617, 1628, 1638, 1639, 1640, 1642, 1645, 1646, 1647, 1649, 1650, 1652, 1653, 1657, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1685, 1688, 1689, 1691, 1694, 1695, 1696, 1701, 1702, 1703, 1707, 1713, 1720, 1724, 1729, 1742, 1751, 1752, 1753, 1756, 1759, 1765, 1773, 1777, 1778, 1783, 1786, 1788, 1789, 1790, 1791, 1792, 1794, 1800, 1807, 1811, 1817, 1818, 1826, 1830, 1832, 1836, 1846, 1847, 1848, 1850, 1851, 1858, 1859, 1860, 1861, 1862, 1867, 1868, 1869, 1874, 1877, 1879, 1882, 1883, 1885, 1887, 1891, 1894, 1896, 1897, 1898, 1900, 1903, 1904, 1906, 1907, 1912, 1914, 1915, 1916, 1917, 1918, 1920, 1922, 1923, 1924, 1925, 1930, 1932, 1934, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1951, 1952, 1953, 1955, 1956], "autocastmodel": 0, "nn": [0, 3, 5, 14, 20, 21, 23, 24, 27, 28, 41, 44, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 286, 528, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 779, 780, 801, 841, 846, 847, 848, 849, 851, 1008, 1011, 1065, 1121, 1130, 1131, 1190, 1192, 1193, 1195, 1196, 1197, 1198, 1201, 1202, 1203, 1207, 1208, 1209, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1596, 1605, 1606, 1607, 1608, 1614, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1638, 1650, 1661, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1786, 1811, 1850, 1851, 1868, 1869, 1870, 1871, 1875, 1887, 1888, 1892, 1897, 1900, 1904, 1906, 1907, 1908, 1911, 1914, 1915, 1916, 1918, 1920, 1923, 1932, 1934, 1937, 1942, 1945, 1946, 1949, 1954, 1955, 1956], "modul": [0, 1, 3, 5, 6, 8, 11, 13, 17, 21, 23, 25, 27, 28, 32, 34, 37, 40, 41, 44, 46, 47, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 474, 475, 667, 673, 676, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 725, 726, 727, 732, 733, 734, 743, 748, 749, 750, 751, 752, 775, 776, 777, 778, 779, 780, 784, 786, 787, 789, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 825, 826, 827, 841, 844, 845, 846, 847, 848, 849, 851, 900, 901, 907, 919, 939, 1011, 1121, 1130, 1131, 1133, 1167, 1190, 1192, 1193, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1207, 1208, 1209, 1263, 1286, 1296, 1333, 1337, 1343, 1344, 1345, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1378, 1380, 1388, 1389, 1390, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1426, 1427, 1435, 1436, 1441, 1453, 1458, 1464, 1468, 1472, 1515, 1516, 1589, 1596, 1605, 1606, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1641, 1645, 1646, 1647, 1649, 1661, 1684, 1745, 1790, 1851, 1853, 1854, 1861, 1868, 1869, 1874, 1879, 1881, 1883, 1885, 1887, 1888, 1891, 1895, 1896, 1897, 1900, 1903, 1905, 1906, 1908, 1910, 1911, 1914, 1916, 1917, 1920, 1921, 1923, 1926, 1927, 1928, 1932, 1935, 1936, 1937, 1942, 1943, 1945, 1946, 1950, 1954, 1955, 1956, 1957], "def": [0, 1, 20, 21, 23, 24, 25, 29, 31, 32, 33, 37, 38, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 386, 779, 780, 848, 849, 877, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 939, 1069, 1121, 1122, 1123, 1125, 1126, 1127, 1129, 1131, 1132, 1133, 1167, 1190, 1192, 1193, 1195, 1196, 1197, 1198, 1202, 1203, 1206, 1207, 1208, 1209, 1425, 1426, 1427, 1435, 1436, 1474, 1574, 1596, 1605, 1617, 1650, 1660, 1661, 1790, 1861, 1868, 1870, 1872, 1873, 1877, 1887, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1904, 1906, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1925, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1954, 1955, 1956, 1957], "self": [0, 1, 9, 17, 20, 21, 23, 25, 31, 32, 37, 42, 44, 46, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 85, 127, 138, 141, 142, 143, 158, 160, 163, 166, 167, 168, 178, 179, 183, 184, 196, 204, 206, 220, 221, 228, 242, 243, 246, 247, 255, 274, 278, 285, 299, 301, 303, 305, 307, 309, 311, 313, 314, 316, 317, 318, 319, 321, 329, 365, 381, 386, 388, 389, 390, 441, 458, 468, 470, 484, 485, 486, 487, 500, 502, 504, 507, 510, 512, 524, 530, 531, 532, 533, 545, 547, 567, 568, 570, 571, 572, 574, 575, 591, 594, 595, 601, 604, 605, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 848, 849, 905, 1121, 1122, 1131, 1162, 1190, 1191, 1192, 1195, 1196, 1197, 1198, 1202, 1203, 1207, 1208, 1209, 1333, 1337, 1370, 1424, 1425, 1426, 1427, 1431, 1435, 1436, 1452, 1454, 1464, 1470, 1472, 1554, 1577, 1596, 1614, 1615, 1617, 1623, 1625, 1638, 1647, 1661, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1710, 1731, 1870, 1871, 1872, 1873, 1877, 1883, 1886, 1887, 1891, 1893, 1894, 1895, 1898, 1900, 1904, 1909, 1911, 1915, 1916, 1918, 1923, 1929, 1942, 1949, 1951, 1954, 1955, 1956], "produc": [0, 7, 13, 20, 23, 25, 30, 32, 34, 37, 42, 44, 51, 52, 53, 54, 67, 76, 719, 725, 726, 727, 732, 733, 743, 751, 779, 780, 910, 930, 1004, 1096, 1097, 1098, 1116, 1126, 1127, 1133, 1145, 1203, 1207, 1208, 1211, 1227, 1228, 1231, 1238, 1239, 1250, 1255, 1289, 1292, 1293, 1294, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1401, 1402, 1403, 1404, 1405, 1406, 1431, 1508, 1516, 1524, 1535, 1593, 1594, 1595, 1652, 1684, 1713, 1720, 1729, 1815, 1850, 1861, 1870, 1872, 1873, 1885, 1886, 1892, 1893, 1894, 1896, 1898, 1902, 1903, 1904, 1907, 1908, 1909, 1910, 1911, 1927, 1931, 1942, 1944, 1946, 1949, 1952, 1956], "after": [0, 1, 7, 9, 13, 20, 21, 23, 24, 25, 27, 28, 40, 42, 46, 53, 54, 55, 60, 61, 248, 475, 747, 777, 844, 846, 848, 849, 880, 881, 884, 939, 946, 966, 968, 1004, 1011, 1064, 1122, 1177, 1192, 1196, 1247, 1263, 1286, 1303, 1329, 1362, 1377, 1410, 1425, 1428, 1468, 1470, 1472, 1489, 1524, 1596, 1599, 1605, 1617, 1619, 1623, 1625, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1688, 1689, 1695, 1697, 1753, 1811, 1836, 1851, 1853, 1863, 1868, 1872, 1873, 1883, 1885, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1901, 1903, 1904, 1906, 1907, 1911, 1914, 1915, 1917, 1918, 1923, 1924, 1925, 1926, 1928, 1930, 1932, 1941, 1943, 1946, 1947, 1949, 1950, 1952, 1954, 1955, 1956], "return": [0, 1, 2, 3, 5, 11, 12, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 42, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 76, 107, 141, 143, 158, 160, 163, 166, 167, 168, 178, 179, 183, 184, 194, 196, 197, 204, 206, 207, 209, 220, 221, 228, 230, 242, 248, 255, 277, 285, 299, 307, 311, 313, 314, 316, 317, 318, 319, 321, 325, 327, 329, 340, 365, 381, 422, 432, 433, 434, 435, 436, 445, 459, 460, 461, 462, 463, 465, 470, 474, 475, 483, 484, 485, 500, 502, 510, 512, 524, 530, 531, 543, 544, 545, 546, 547, 567, 568, 569, 570, 576, 590, 591, 594, 596, 600, 601, 604, 671, 679, 680, 682, 683, 684, 685, 686, 722, 753, 754, 757, 758, 762, 763, 764, 765, 768, 771, 778, 779, 780, 781, 801, 802, 803, 804, 823, 827, 828, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 860, 861, 862, 863, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 904, 905, 906, 908, 909, 910, 917, 918, 920, 923, 925, 927, 928, 929, 930, 931, 932, 933, 934, 936, 938, 939, 940, 941, 942, 945, 950, 951, 953, 954, 955, 957, 960, 961, 962, 963, 965, 966, 968, 969, 971, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1059, 1065, 1066, 1067, 1068, 1069, 1070, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1101, 1104, 1105, 1106, 1107, 1108, 1109, 1113, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1158, 1162, 1166, 1167, 1168, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1188, 1189, 1190, 1192, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1216, 1217, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1271, 1272, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1300, 1301, 1303, 1304, 1310, 1315, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1329, 1333, 1334, 1335, 1336, 1341, 1342, 1359, 1360, 1361, 1362, 1369, 1373, 1374, 1385, 1391, 1392, 1415, 1416, 1417, 1418, 1419, 1420, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1436, 1439, 1453, 1456, 1457, 1458, 1459, 1460, 1464, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1494, 1496, 1497, 1498, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1542, 1543, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1567, 1569, 1570, 1572, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1587, 1589, 1590, 1591, 1592, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1660, 1661, 1662, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1744, 1749, 1750, 1751, 1752, 1758, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1787, 1789, 1790, 1791, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1810, 1811, 1814, 1815, 1816, 1824, 1825, 1826, 1827, 1828, 1829, 1831, 1833, 1834, 1835, 1838, 1839, 1840, 1841, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1852, 1853, 1855, 1857, 1859, 1860, 1861, 1864, 1866, 1867, 1868, 1870, 1874, 1877, 1881, 1882, 1883, 1885, 1887, 1888, 1891, 1892, 1893, 1895, 1896, 1898, 1899, 1901, 1902, 1903, 1904, 1907, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1922, 1923, 1924, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1954, 1955, 1956, 1957, 1958, 1959], "disabl": [0, 2, 5, 24, 29, 46, 54, 797, 798, 939, 1011, 1065, 1069, 1121, 1167, 1192, 1194, 1207, 1208, 1425, 1431, 1464, 1472, 1574, 1605, 1606, 1647, 1650, 1758, 1759, 1762, 1790, 1869, 1872, 1879, 1892, 1895, 1896, 1897, 1898, 1902, 1907, 1908, 1911, 1916, 1922, 1927, 1934, 1945, 1950, 1953, 1956, 1958], "them": [0, 1, 3, 5, 7, 8, 9, 11, 13, 14, 20, 23, 25, 31, 32, 37, 40, 42, 44, 46, 50, 51, 53, 54, 138, 209, 242, 721, 880, 886, 890, 921, 1011, 1050, 1053, 1065, 1192, 1213, 1222, 1233, 1247, 1259, 1263, 1291, 1323, 1349, 1368, 1425, 1458, 1460, 1580, 1624, 1639, 1642, 1685, 1794, 1796, 1814, 1851, 1853, 1868, 1872, 1873, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1908, 1910, 1914, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1928, 1932, 1933, 1936, 1944, 1945, 1946, 1949, 1952, 1953, 1955, 1956], "differ": [0, 1, 3, 5, 8, 13, 17, 20, 23, 25, 27, 28, 29, 31, 32, 33, 37, 38, 40, 41, 43, 46, 47, 50, 51, 52, 54, 184, 473, 480, 604, 667, 673, 676, 682, 683, 722, 747, 780, 783, 784, 809, 811, 812, 848, 849, 852, 866, 867, 895, 896, 907, 919, 920, 957, 1048, 1053, 1055, 1057, 1065, 1105, 1106, 1107, 1111, 1112, 1118, 1121, 1126, 1127, 1133, 1145, 1166, 1192, 1202, 1207, 1221, 1227, 1228, 1238, 1239, 1247, 1250, 1255, 1259, 1286, 1296, 1333, 1342, 1343, 1344, 1345, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1377, 1378, 1386, 1388, 1389, 1390, 1391, 1395, 1396, 1412, 1425, 1428, 1431, 1446, 1447, 1449, 1450, 1451, 1453, 1456, 1464, 1470, 1472, 1474, 1477, 1480, 1481, 1482, 1489, 1497, 1515, 1524, 1535, 1537, 1548, 1549, 1550, 1574, 1596, 1605, 1607, 1608, 1612, 1647, 1652, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1697, 1703, 1713, 1735, 1809, 1810, 1815, 1836, 1847, 1848, 1850, 1856, 1857, 1861, 1868, 1870, 1872, 1873, 1875, 1879, 1880, 1885, 1886, 1888, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1904, 1906, 1907, 1908, 1910, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1925, 1927, 1930, 1932, 1933, 1934, 1937, 1938, 1940, 1943, 1945, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1956], "caus": [0, 1, 2, 3, 5, 13, 17, 20, 23, 27, 33, 39, 40, 41, 51, 54, 72, 543, 604, 864, 867, 880, 942, 1118, 1203, 1207, 1227, 1228, 1255, 1310, 1535, 1536, 1593, 1596, 1605, 1651, 1666, 1753, 1764, 1811, 1850, 1870, 1873, 1885, 1894, 1896, 1898, 1900, 1906, 1908, 1910, 1911, 1915, 1918, 1919, 1925, 1927, 1930, 1945, 1947], "mismatch": [0, 23, 54, 73, 75, 867, 1193, 1665, 1666, 1872, 1892, 1897, 1898, 1900, 1911, 1934], "error": [0, 1, 5, 8, 13, 16, 17, 20, 21, 23, 24, 26, 29, 38, 40, 41, 44, 46, 49, 51, 53, 54, 55, 56, 70, 71, 72, 73, 75, 178, 209, 301, 303, 309, 311, 316, 475, 532, 543, 601, 604, 667, 806, 852, 865, 867, 886, 888, 889, 890, 891, 892, 893, 894, 966, 976, 1000, 1011, 1022, 1035, 1039, 1063, 1121, 1125, 1126, 1128, 1133, 1155, 1192, 1197, 1206, 1221, 1222, 1231, 1233, 1235, 1238, 1239, 1240, 1250, 1253, 1263, 1281, 1310, 1315, 1341, 1342, 1375, 1386, 1392, 1416, 1425, 1454, 1456, 1522, 1533, 1555, 1574, 1577, 1578, 1605, 1607, 1608, 1609, 1647, 1652, 1663, 1665, 1666, 1709, 1749, 1756, 1800, 1806, 1811, 1850, 1853, 1861, 1862, 1868, 1869, 1870, 1872, 1873, 1879, 1880, 1885, 1886, 1887, 1888, 1892, 1893, 1896, 1898, 1899, 1901, 1902, 1908, 1911, 1915, 1921, 1923, 1928, 1933, 1934, 1936, 1937, 1941, 1945, 1946, 1958], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 62, 63, 64, 65, 70, 71, 72, 73, 75, 85, 138, 142, 183, 194, 197, 242, 303, 307, 309, 432, 433, 434, 435, 436, 445, 458, 468, 483, 486, 504, 507, 524, 532, 567, 568, 570, 571, 572, 574, 575, 590, 594, 604, 667, 673, 676, 677, 678, 680, 682, 683, 684, 686, 722, 743, 747, 751, 766, 768, 772, 781, 782, 804, 807, 808, 809, 812, 841, 845, 848, 852, 861, 862, 863, 864, 865, 866, 867, 876, 878, 879, 880, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 907, 908, 910, 917, 919, 920, 921, 923, 927, 929, 930, 931, 932, 933, 934, 941, 947, 950, 951, 952, 956, 957, 965, 968, 969, 971, 973, 976, 978, 980, 982, 989, 1000, 1006, 1011, 1012, 1032, 1035, 1046, 1047, 1048, 1052, 1053, 1054, 1055, 1056, 1065, 1066, 1067, 1068, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1108, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1132, 1133, 1134, 1145, 1149, 1150, 1152, 1153, 1154, 1155, 1166, 1169, 1183, 1189, 1192, 1195, 1196, 1197, 1199, 1201, 1203, 1204, 1207, 1208, 1211, 1212, 1213, 1217, 1221, 1222, 1227, 1228, 1230, 1231, 1233, 1234, 1235, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1254, 1255, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1274, 1278, 1279, 1281, 1283, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1310, 1315, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1333, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1374, 1377, 1378, 1379, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1401, 1402, 1403, 1404, 1405, 1406, 1410, 1412, 1416, 1417, 1418, 1419, 1420, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1439, 1440, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1456, 1457, 1464, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1476, 1477, 1480, 1481, 1482, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1519, 1520, 1524, 1526, 1528, 1535, 1536, 1541, 1543, 1545, 1546, 1548, 1549, 1550, 1559, 1560, 1561, 1564, 1567, 1568, 1574, 1580, 1581, 1592, 1593, 1599, 1605, 1606, 1609, 1610, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1633, 1634, 1638, 1639, 1640, 1641, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1656, 1657, 1660, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1701, 1702, 1707, 1711, 1713, 1714, 1718, 1719, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1734, 1735, 1740, 1742, 1745, 1749, 1751, 1753, 1756, 1757, 1762, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1787, 1791, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1806, 1809, 1810, 1811, 1814, 1815, 1829, 1830, 1832, 1833, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1847, 1848, 1850, 1853, 1855, 1856, 1857, 1861, 1866, 1867, 1868, 1870, 1873, 1875, 1877, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1955, 1956, 1957, 1958], "so": [0, 1, 2, 3, 7, 9, 13, 16, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 40, 41, 43, 44, 46, 49, 50, 51, 53, 54, 55, 64, 65, 323, 445, 483, 667, 846, 881, 886, 888, 889, 894, 936, 939, 967, 990, 1053, 1055, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1116, 1118, 1121, 1125, 1126, 1128, 1129, 1179, 1189, 1192, 1195, 1196, 1201, 1203, 1205, 1247, 1249, 1259, 1264, 1269, 1281, 1302, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1369, 1372, 1379, 1425, 1441, 1458, 1460, 1476, 1489, 1499, 1500, 1501, 1524, 1580, 1581, 1596, 1605, 1651, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1779, 1794, 1806, 1811, 1815, 1835, 1847, 1851, 1855, 1870, 1872, 1873, 1879, 1881, 1883, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1918, 1922, 1923, 1927, 1928, 1930, 1932, 1933, 1935, 1941, 1944, 1945, 1946, 1947, 1949, 1950, 1952, 1955, 1956, 1958], "cast": [0, 6, 21, 38, 46, 74, 323, 590, 591, 924, 1046, 1047, 1192, 1244, 1248, 1261, 1291, 1320, 1323, 1425, 1543, 1580, 1581, 1652, 1711, 1791, 1794, 1800, 1814, 1819, 1820, 1870, 1892, 1907, 1911, 1928, 1929, 1930], "back": [0, 1, 2, 13, 20, 21, 23, 25, 28, 29, 40, 46, 51, 54, 55, 60, 63, 722, 824, 895, 936, 939, 1085, 1122, 1193, 1205, 1257, 1263, 1471, 1609, 1610, 1796, 1868, 1870, 1873, 1893, 1898, 1899, 1906, 1907, 1908, 1911, 1914, 1915, 1918, 1923, 1927, 1941, 1946, 1948, 1949, 1957], "from": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 37, 38, 40, 42, 43, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 76, 141, 142, 161, 184, 209, 210, 221, 246, 274, 301, 303, 307, 309, 365, 390, 435, 441, 458, 460, 461, 468, 473, 474, 475, 480, 486, 500, 502, 504, 531, 533, 547, 567, 594, 595, 597, 604, 667, 699, 700, 701, 702, 703, 704, 707, 715, 716, 719, 722, 725, 726, 727, 728, 729, 730, 732, 733, 743, 747, 751, 759, 760, 761, 768, 775, 776, 779, 780, 781, 784, 787, 802, 803, 804, 811, 813, 827, 841, 845, 847, 848, 849, 851, 852, 866, 867, 878, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 900, 901, 908, 909, 917, 918, 923, 924, 936, 967, 968, 971, 980, 981, 982, 1000, 1004, 1022, 1049, 1065, 1066, 1067, 1068, 1085, 1087, 1088, 1093, 1094, 1095, 1099, 1100, 1101, 1102, 1105, 1106, 1107, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1149, 1150, 1154, 1169, 1189, 1190, 1192, 1193, 1195, 1197, 1198, 1199, 1202, 1203, 1215, 1231, 1235, 1244, 1247, 1248, 1261, 1262, 1263, 1264, 1278, 1282, 1283, 1296, 1301, 1303, 1306, 1307, 1308, 1310, 1315, 1324, 1325, 1333, 1337, 1343, 1344, 1345, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1377, 1378, 1379, 1380, 1386, 1388, 1389, 1390, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1425, 1426, 1427, 1431, 1435, 1436, 1440, 1442, 1443, 1464, 1469, 1470, 1472, 1474, 1476, 1477, 1489, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1521, 1524, 1526, 1535, 1548, 1549, 1550, 1562, 1592, 1596, 1605, 1609, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1632, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1649, 1653, 1660, 1662, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1706, 1714, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1735, 1736, 1739, 1741, 1742, 1749, 1762, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1811, 1812, 1816, 1826, 1829, 1838, 1840, 1842, 1847, 1848, 1850, 1852, 1853, 1855, 1864, 1869, 1870, 1871, 1872, 1873, 1875, 1877, 1879, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1891, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1914, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1953, 1954, 1955, 1956, 1957, 1958], "alreadi": [0, 1, 11, 20, 21, 23, 24, 40, 41, 46, 53, 54, 183, 194, 197, 450, 473, 511, 567, 590, 591, 779, 827, 841, 845, 866, 976, 1002, 1192, 1201, 1263, 1425, 1600, 1605, 1638, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1845, 1847, 1853, 1868, 1870, 1880, 1882, 1886, 1887, 1892, 1893, 1896, 1898, 1901, 1906, 1911, 1914, 1915, 1918, 1924, 1925, 1927, 1929, 1931, 1941, 1945], "incur": [0, 5, 21, 23, 46, 929, 1906, 1923], "addit": [0, 1, 3, 5, 7, 9, 13, 14, 20, 23, 24, 25, 29, 34, 40, 41, 44, 46, 53, 54, 55, 63, 323, 500, 594, 736, 738, 739, 740, 741, 745, 747, 768, 782, 801, 846, 1022, 1189, 1192, 1196, 1201, 1206, 1333, 1344, 1345, 1346, 1356, 1357, 1358, 1369, 1376, 1377, 1379, 1386, 1389, 1390, 1397, 1404, 1405, 1406, 1410, 1411, 1412, 1413, 1415, 1421, 1422, 1423, 1425, 1431, 1433, 1458, 1460, 1464, 1468, 1470, 1472, 1474, 1495, 1502, 1503, 1504, 1541, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1757, 1847, 1848, 1859, 1870, 1872, 1873, 1879, 1883, 1886, 1887, 1888, 1893, 1895, 1896, 1898, 1899, 1903, 1906, 1907, 1910, 1911, 1912, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1931, 1934, 1941, 1944, 1946, 1952, 1953, 1956, 1958], "overhead": [0, 1, 3, 4, 8, 21, 23, 46, 768, 939, 1022, 1203, 1605, 1893, 1895, 1896, 1897, 1902, 1903, 1906, 1916, 1917, 1924, 1927, 1933, 1941, 1945, 1946, 1948, 1949, 1950], "here": [0, 1, 7, 8, 9, 14, 17, 20, 21, 23, 24, 29, 39, 41, 44, 48, 49, 50, 51, 53, 54, 73, 75, 567, 780, 781, 955, 974, 1065, 1082, 1084, 1085, 1090, 1091, 1092, 1094, 1095, 1100, 1102, 1121, 1131, 1190, 1203, 1343, 1344, 1345, 1356, 1357, 1358, 1388, 1389, 1390, 1433, 1464, 1524, 1526, 1614, 1681, 1684, 1695, 1757, 1782, 1868, 1870, 1872, 1873, 1875, 1886, 1887, 1888, 1892, 1893, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1910, 1911, 1914, 1915, 1916, 1918, 1921, 1927, 1931, 1932, 1934, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1956], "assum": [0, 11, 20, 23, 28, 29, 31, 33, 40, 41, 44, 46, 49, 52, 54, 804, 1048, 1083, 1086, 1088, 1096, 1097, 1098, 1101, 1183, 1189, 1190, 1193, 1207, 1227, 1228, 1230, 1237, 1246, 1249, 1252, 1254, 1264, 1348, 1417, 1477, 1508, 1574, 1605, 1614, 1617, 1642, 1685, 1686, 1691, 1692, 1693, 1696, 1698, 1699, 1703, 1816, 1836, 1838, 1853, 1868, 1870, 1872, 1873, 1886, 1893, 1896, 1898, 1899, 1901, 1903, 1906, 1907, 1911, 1914, 1915, 1916, 1923, 1924, 1925, 1927, 1943, 1944, 1952], "a_float32": 0, "rand": [0, 1, 17, 29, 44, 54, 323, 680, 686, 888, 889, 890, 891, 892, 893, 957, 1008, 1009, 1082, 1084, 1087, 1088, 1090, 1091, 1094, 1095, 1097, 1098, 1100, 1102, 1123, 1198, 1203, 1207, 1208, 1209, 1265, 1266, 1268, 1341, 1391, 1468, 1469, 1470, 1471, 1472, 1496, 1515, 1516, 1574, 1605, 1617, 1650, 1706, 1717, 1718, 1719, 1723, 1870, 1871, 1872, 1873, 1875, 1886, 1887, 1911, 1913, 1916, 1918, 1923, 1924, 1927, 1928, 1931, 1932, 1935, 1951, 1954], "8": [0, 1, 13, 19, 20, 21, 23, 29, 31, 44, 55, 60, 301, 303, 305, 309, 389, 390, 458, 500, 504, 547, 594, 604, 672, 673, 684, 685, 732, 733, 748, 750, 752, 760, 761, 807, 808, 809, 812, 891, 910, 918, 929, 932, 933, 937, 1008, 1009, 1044, 1048, 1063, 1068, 1081, 1097, 1098, 1104, 1105, 1108, 1115, 1145, 1154, 1155, 1215, 1244, 1247, 1248, 1249, 1257, 1259, 1262, 1263, 1324, 1325, 1330, 1331, 1332, 1334, 1335, 1336, 1349, 1360, 1395, 1421, 1422, 1428, 1430, 1432, 1439, 1440, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1464, 1468, 1469, 1470, 1471, 1472, 1476, 1500, 1503, 1506, 1562, 1567, 1572, 1573, 1574, 1652, 1653, 1660, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1689, 1697, 1702, 1706, 1710, 1730, 1740, 1741, 1742, 1749, 1757, 1762, 1769, 1772, 1777, 1783, 1787, 1795, 1797, 1798, 1803, 1811, 1815, 1825, 1830, 1831, 1832, 1834, 1836, 1845, 1850, 1855, 1862, 1870, 1874, 1880, 1896, 1898, 1909, 1911, 1913, 1915, 1916, 1917, 1918, 1921, 1923, 1927, 1928, 1930, 1931, 1933, 1943, 1949, 1956], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 931, 932, 1196, 1247, 1286, 1435, 1436, 1713, 1815, 1850, 1871, 1872, 1886, 1892, 1895, 1898, 1907, 1913, 1927, 1950, 1951], "list": [0, 1, 3, 5, 6, 7, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 29, 31, 40, 42, 44, 46, 51, 53, 54, 55, 56, 60, 61, 62, 63, 71, 172, 229, 290, 432, 434, 436, 565, 570, 571, 572, 576, 606, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 779, 780, 785, 801, 802, 803, 804, 825, 841, 848, 866, 873, 874, 875, 921, 922, 925, 929, 933, 938, 939, 941, 945, 992, 998, 1050, 1063, 1065, 1066, 1105, 1119, 1131, 1145, 1155, 1192, 1196, 1198, 1203, 1205, 1207, 1208, 1291, 1293, 1323, 1362, 1368, 1397, 1425, 1427, 1436, 1453, 1464, 1475, 1515, 1589, 1605, 1606, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1652, 1656, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1689, 1691, 1693, 1694, 1695, 1697, 1698, 1716, 1718, 1719, 1722, 1726, 1741, 1778, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1809, 1810, 1814, 1829, 1830, 1831, 1847, 1848, 1850, 1851, 1853, 1856, 1857, 1862, 1866, 1868, 1870, 1871, 1874, 1875, 1879, 1881, 1883, 1886, 1887, 1888, 1898, 1902, 1904, 1907, 1908, 1909, 1913, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1927, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1938, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1954, 1955, 1956, 1957, 1958], "No": [0, 9, 43, 53, 887, 1605, 1650, 1872, 1896, 1911, 1921, 1931, 1934, 1941], "manual": [0, 20, 23, 38, 40, 41, 43, 46, 54, 784, 825, 865, 894, 1154, 1196, 1341, 1342, 1361, 1429, 1430, 1432, 1453, 1472, 1496, 1497, 1507, 1559, 1617, 1638, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1870, 1873, 1885, 1892, 1896, 1898, 1899, 1900, 1901, 1904, 1910, 1911, 1918, 1919, 1932, 1941, 1943, 1944, 1953], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 13, 20, 21, 23, 24, 25, 27, 28, 31, 32, 33, 40, 41, 46, 53, 54, 474, 475, 827, 877, 887, 900, 901, 941, 952, 968, 983, 1010, 1023, 1065, 1111, 1112, 1133, 1192, 1222, 1362, 1425, 1472, 1474, 1524, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1733, 1779, 1816, 1861, 1868, 1883, 1885, 1887, 1896, 1898, 1899, 1900, 1901, 1906, 1911, 1915, 1918, 1923, 1925, 1934, 1935, 1941, 1945, 1947, 1949, 1952], "f_float16": 0, "g_float32": 0, "epoch": [0, 20, 33, 43, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1883, 1892, 1906, 1914, 1932], "eval": [0, 54, 801, 847, 848, 1131, 1192, 1196, 1201, 1207, 1343, 1344, 1345, 1388, 1389, 1390, 1398, 1399, 1400, 1407, 1408, 1409, 1425, 1431, 1464, 1472, 1613, 1873, 1881, 1904, 1911, 1918, 1937, 1957], "jit": [0, 11, 13, 1008, 1009, 1040, 1142, 1190, 1191, 1192, 1206, 1662, 1665, 1760, 1761, 1869, 1872, 1875, 1881, 1887, 1895, 1903, 1909, 1911, 1918, 1923, 1932, 1942, 1943, 1944, 1946, 1948], "trace": [0, 1, 5, 14, 17, 20, 21, 23, 33, 44, 55, 58, 59, 60, 61, 64, 65, 67, 667, 902, 903, 904, 939, 1065, 1195, 1203, 1204, 1208, 1264, 1306, 1307, 1308, 1666, 1852, 1869, 1871, 1872, 1873, 1875, 1879, 1893, 1896, 1897, 1909, 1913, 1915, 1932, 1938, 1942, 1944, 1945, 1948, 1949, 1950, 1952, 1956, 1958], "testmodel": 0, "__init__": [0, 1, 20, 21, 23, 29, 44, 54, 55, 60, 62, 63, 65, 848, 849, 1131, 1190, 1193, 1195, 1198, 1203, 1207, 1208, 1209, 1425, 1426, 1427, 1435, 1436, 1596, 1661, 1870, 1872, 1873, 1883, 1893, 1898, 1900, 1904, 1909, 1911, 1915, 1918, 1932, 1942, 1944, 1954, 1955, 1956], "input_s": [0, 721, 747, 748, 752, 1377, 1378, 1395, 1396, 1440, 1441, 1442, 1871], "num_class": [0, 1561, 1871, 1948], "super": [0, 9, 20, 21, 23, 25, 44, 54, 55, 60, 62, 63, 65, 848, 849, 1131, 1190, 1195, 1198, 1203, 1207, 1208, 1209, 1425, 1426, 1427, 1435, 1436, 1437, 1438, 1596, 1661, 1695, 1870, 1872, 1873, 1874, 1893, 1898, 1904, 1909, 1911, 1915, 1918, 1942, 1954, 1955, 1956], "fc1": [0, 21, 1596, 1916], "x": [0, 1, 3, 11, 13, 20, 21, 23, 29, 31, 37, 44, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 161, 242, 246, 274, 277, 299, 301, 303, 305, 309, 340, 365, 435, 470, 480, 486, 545, 547, 570, 594, 595, 604, 679, 745, 747, 757, 766, 767, 771, 772, 783, 786, 789, 807, 808, 848, 849, 865, 871, 873, 874, 875, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 921, 922, 923, 926, 927, 939, 950, 953, 956, 957, 1008, 1009, 1048, 1055, 1059, 1060, 1065, 1069, 1079, 1080, 1081, 1082, 1084, 1085, 1090, 1091, 1093, 1095, 1099, 1100, 1102, 1105, 1106, 1107, 1115, 1121, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1145, 1162, 1166, 1167, 1179, 1197, 1198, 1202, 1203, 1206, 1207, 1208, 1209, 1213, 1223, 1236, 1237, 1241, 1244, 1248, 1252, 1254, 1257, 1258, 1259, 1260, 1261, 1264, 1269, 1270, 1271, 1279, 1282, 1285, 1286, 1293, 1319, 1320, 1324, 1325, 1331, 1332, 1341, 1342, 1343, 1344, 1345, 1347, 1359, 1361, 1367, 1373, 1374, 1375, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1411, 1414, 1415, 1416, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1440, 1442, 1443, 1444, 1445, 1452, 1454, 1455, 1456, 1457, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1473, 1474, 1477, 1498, 1522, 1524, 1528, 1529, 1535, 1539, 1543, 1554, 1559, 1564, 1568, 1570, 1575, 1576, 1577, 1581, 1582, 1584, 1585, 1586, 1593, 1596, 1613, 1615, 1617, 1638, 1639, 1640, 1641, 1642, 1647, 1650, 1651, 1652, 1660, 1661, 1665, 1668, 1689, 1703, 1704, 1715, 1717, 1731, 1734, 1735, 1737, 1738, 1740, 1741, 1745, 1749, 1759, 1787, 1789, 1792, 1806, 1809, 1810, 1811, 1817, 1818, 1824, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1848, 1849, 1855, 1856, 1857, 1859, 1860, 1861, 1864, 1868, 1870, 1871, 1872, 1873, 1874, 1885, 1886, 1887, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1910, 1911, 1915, 1918, 1923, 1927, 1928, 1930, 1932, 1933, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1954, 1956], "2": [0, 1, 3, 11, 13, 17, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 33, 38, 40, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 161, 179, 196, 213, 221, 222, 242, 248, 301, 303, 305, 309, 323, 365, 389, 390, 432, 433, 434, 435, 436, 468, 474, 475, 480, 483, 486, 500, 502, 504, 531, 545, 547, 567, 568, 570, 571, 572, 574, 575, 576, 594, 604, 667, 668, 670, 671, 672, 673, 676, 677, 678, 679, 680, 682, 684, 685, 686, 721, 725, 726, 727, 728, 729, 730, 732, 733, 742, 745, 747, 749, 780, 783, 807, 852, 861, 862, 863, 864, 865, 866, 867, 871, 873, 874, 875, 877, 886, 888, 889, 890, 891, 892, 893, 900, 901, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 925, 926, 927, 929, 930, 931, 932, 933, 937, 938, 947, 950, 951, 952, 953, 956, 957, 965, 1039, 1044, 1047, 1048, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1075, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1126, 1127, 1128, 1132, 1133, 1134, 1135, 1136, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1158, 1166, 1167, 1169, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1195, 1196, 1201, 1203, 1205, 1207, 1211, 1212, 1213, 1215, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1268, 1269, 1270, 1271, 1278, 1280, 1281, 1282, 1283, 1285, 1286, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1310, 1313, 1314, 1315, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1332, 1337, 1338, 1339, 1340, 1341, 1342, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1375, 1376, 1377, 1379, 1381, 1382, 1383, 1384, 1386, 1393, 1394, 1395, 1396, 1397, 1411, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1428, 1430, 1431, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1452, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1473, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1489, 1491, 1496, 1497, 1508, 1515, 1516, 1522, 1524, 1526, 1528, 1535, 1541, 1548, 1549, 1550, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1574, 1590, 1596, 1605, 1609, 1612, 1613, 1617, 1629, 1630, 1631, 1632, 1634, 1635, 1638, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1692, 1696, 1697, 1698, 1702, 1703, 1704, 1706, 1707, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1726, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1762, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1787, 1788, 1789, 1790, 1792, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1810, 1811, 1812, 1814, 1815, 1816, 1817, 1818, 1824, 1825, 1827, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1871, 1872, 1873, 1874, 1880, 1881, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1901, 1902, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1954, 1955], "we": [0, 1, 2, 5, 7, 8, 9, 11, 13, 14, 20, 21, 23, 25, 27, 28, 29, 30, 31, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 64, 65, 74, 483, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 732, 733, 743, 748, 749, 750, 751, 752, 766, 772, 775, 776, 778, 780, 781, 825, 844, 846, 848, 849, 852, 880, 881, 884, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 908, 917, 939, 965, 1022, 1065, 1083, 1085, 1086, 1087, 1088, 1095, 1100, 1101, 1102, 1116, 1125, 1126, 1128, 1133, 1145, 1149, 1150, 1166, 1190, 1192, 1195, 1196, 1203, 1205, 1207, 1247, 1250, 1255, 1263, 1264, 1283, 1315, 1333, 1341, 1342, 1391, 1425, 1477, 1524, 1526, 1535, 1593, 1600, 1605, 1612, 1614, 1623, 1625, 1628, 1632, 1633, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1686, 1692, 1697, 1714, 1757, 1851, 1861, 1868, 1869, 1870, 1872, 1873, 1875, 1877, 1880, 1881, 1885, 1886, 1887, 1888, 1893, 1896, 1898, 1899, 1900, 1901, 1902, 1904, 1906, 1907, 1910, 1911, 1914, 1915, 1916, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1930, 1932, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956], "suggest": [0, 9, 21, 44, 47, 70, 71, 73, 75, 1359, 1868, 1875, 1892, 1893, 1900, 1927, 1950, 1956], "issu": [0, 2, 3, 5, 9, 10, 11, 13, 19, 20, 23, 30, 46, 47, 49, 51, 54, 55, 72, 73, 888, 894, 939, 941, 942, 1116, 1127, 1129, 1133, 1237, 1281, 1293, 1391, 1395, 1421, 1422, 1423, 1440, 1477, 1535, 1536, 1649, 1753, 1861, 1868, 1869, 1873, 1875, 1880, 1885, 1886, 1887, 1888, 1892, 1893, 1896, 1898, 1906, 1907, 1908, 1910, 1911, 1915, 1918, 1919, 1923, 1927, 1928, 1930, 1941, 1946, 1947, 1956, 1958], "http": [0, 2, 3, 4, 7, 9, 13, 14, 21, 22, 23, 28, 29, 40, 41, 44, 46, 138, 667, 717, 718, 719, 720, 732, 733, 743, 748, 749, 750, 751, 752, 779, 780, 880, 939, 1065, 1122, 1264, 1293, 1348, 1395, 1421, 1422, 1423, 1443, 1444, 1468, 1471, 1474, 1649, 1703, 1720, 1753, 1757, 1778, 1850, 1853, 1868, 1874, 1882, 1884, 1893, 1894, 1898, 1901, 1902, 1904, 1908, 1910, 1911, 1915, 1917, 1930, 1932, 1948, 1950, 1955, 1959], "github": [0, 7, 9, 13, 22, 23, 36, 46, 47, 51, 138, 779, 780, 880, 894, 1122, 1293, 1421, 1422, 1423, 1468, 1649, 1689, 1753, 1853, 1868, 1875, 1880, 1898, 1901, 1908, 1911, 1917, 1918, 1927, 1928, 1930, 1946, 1950, 1955], "com": [0, 7, 13, 22, 23, 39, 41, 46, 138, 779, 780, 880, 1122, 1293, 1421, 1422, 1423, 1468, 1649, 1753, 1850, 1853, 1868, 1882, 1884, 1898, 1901, 1902, 1908, 1910, 1911, 1917, 1930, 1950, 1955], "pytorch": [0, 1, 2, 3, 4, 5, 11, 12, 13, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 40, 41, 44, 46, 47, 50, 52, 54, 55, 70, 71, 72, 73, 74, 75, 138, 500, 570, 667, 685, 717, 718, 719, 720, 732, 733, 743, 747, 748, 749, 750, 751, 752, 779, 780, 797, 798, 799, 800, 867, 880, 924, 929, 930, 939, 940, 965, 990, 991, 1002, 1007, 1065, 1110, 1116, 1122, 1123, 1127, 1132, 1133, 1138, 1178, 1179, 1202, 1222, 1228, 1233, 1235, 1236, 1237, 1240, 1253, 1262, 1278, 1281, 1282, 1293, 1341, 1342, 1348, 1377, 1391, 1421, 1422, 1423, 1468, 1497, 1574, 1605, 1638, 1646, 1647, 1649, 1652, 1660, 1666, 1713, 1745, 1753, 1754, 1764, 1811, 1815, 1838, 1850, 1853, 1861, 1868, 1872, 1873, 1877, 1879, 1880, 1882, 1883, 1887, 1888, 1889, 1894, 1895, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1914, 1915, 1917, 1918, 1919, 1920, 1923, 1924, 1927, 1928, 1930, 1931, 1932, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1957, 1958, 1959], "75956": 0, "_c": [0, 20, 21, 23, 53, 888, 894, 1191, 1203, 1662, 1871, 1873, 1883, 1896, 1903, 1907, 1910, 1911, 1923], "_jit_set_autocast_mod": 0, "fals": [0, 1, 3, 5, 13, 20, 21, 23, 24, 25, 27, 29, 31, 44, 46, 49, 54, 55, 60, 62, 63, 64, 65, 100, 101, 102, 103, 104, 106, 122, 123, 124, 138, 169, 170, 171, 184, 197, 248, 289, 306, 307, 309, 316, 320, 323, 324, 326, 330, 331, 332, 339, 342, 380, 384, 395, 397, 398, 399, 402, 408, 416, 417, 418, 419, 432, 433, 434, 435, 436, 440, 445, 447, 457, 458, 466, 482, 483, 491, 504, 529, 542, 543, 552, 567, 581, 590, 596, 597, 602, 604, 667, 680, 681, 682, 683, 684, 686, 699, 700, 701, 702, 703, 704, 721, 722, 732, 733, 738, 739, 740, 742, 745, 747, 755, 756, 763, 765, 766, 767, 769, 770, 772, 784, 801, 806, 807, 808, 809, 811, 812, 813, 825, 826, 844, 845, 850, 852, 861, 862, 863, 867, 880, 881, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 904, 908, 911, 914, 916, 917, 923, 924, 930, 931, 932, 938, 939, 950, 968, 1006, 1011, 1023, 1065, 1066, 1067, 1068, 1070, 1071, 1078, 1082, 1083, 1084, 1085, 1090, 1091, 1096, 1097, 1098, 1100, 1101, 1102, 1118, 1119, 1120, 1121, 1123, 1124, 1126, 1127, 1128, 1130, 1132, 1134, 1136, 1148, 1149, 1150, 1153, 1154, 1167, 1177, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1197, 1198, 1199, 1207, 1208, 1209, 1211, 1213, 1216, 1221, 1222, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1244, 1246, 1248, 1249, 1252, 1253, 1254, 1255, 1256, 1261, 1262, 1263, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1283, 1285, 1289, 1291, 1292, 1294, 1297, 1303, 1306, 1307, 1315, 1320, 1321, 1322, 1323, 1326, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1359, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1373, 1374, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1410, 1411, 1412, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1428, 1429, 1430, 1431, 1432, 1434, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1452, 1454, 1456, 1457, 1464, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1477, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1519, 1520, 1521, 1524, 1526, 1528, 1529, 1530, 1535, 1536, 1539, 1545, 1546, 1548, 1549, 1550, 1554, 1559, 1563, 1567, 1569, 1570, 1572, 1573, 1574, 1575, 1577, 1587, 1590, 1591, 1593, 1599, 1605, 1607, 1609, 1612, 1614, 1617, 1618, 1630, 1639, 1640, 1641, 1642, 1644, 1647, 1650, 1651, 1652, 1656, 1657, 1658, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1711, 1713, 1714, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1737, 1738, 1745, 1749, 1757, 1758, 1759, 1762, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1787, 1797, 1798, 1799, 1800, 1801, 1802, 1809, 1810, 1811, 1814, 1815, 1829, 1833, 1838, 1847, 1850, 1853, 1855, 1856, 1857, 1864, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1879, 1880, 1881, 1882, 1885, 1887, 1888, 1892, 1893, 1896, 1897, 1898, 1900, 1904, 1907, 1908, 1911, 1915, 1916, 1917, 1919, 1922, 1923, 1927, 1928, 1929, 1931, 1932, 1934, 1935, 1937, 1941, 1946, 1949, 1951, 1952, 1955, 1956, 1957], "randn": [0, 1, 11, 23, 29, 44, 48, 50, 51, 52, 54, 55, 57, 62, 63, 277, 299, 470, 531, 567, 571, 572, 573, 574, 575, 576, 604, 670, 671, 672, 673, 674, 675, 676, 677, 682, 683, 686, 707, 715, 716, 721, 725, 726, 727, 728, 729, 730, 743, 745, 747, 748, 749, 750, 751, 752, 759, 760, 761, 848, 849, 861, 862, 863, 865, 868, 869, 870, 871, 872, 907, 919, 926, 928, 929, 930, 931, 932, 934, 952, 953, 954, 955, 956, 965, 1044, 1045, 1046, 1047, 1052, 1053, 1054, 1055, 1059, 1065, 1079, 1080, 1109, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1162, 1166, 1169, 1203, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1245, 1246, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1267, 1271, 1272, 1279, 1281, 1282, 1283, 1285, 1286, 1289, 1291, 1292, 1294, 1296, 1297, 1298, 1299, 1313, 1314, 1317, 1327, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1451, 1452, 1454, 1455, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1473, 1475, 1476, 1480, 1481, 1482, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1519, 1520, 1526, 1559, 1565, 1566, 1655, 1660, 1661, 1704, 1709, 1710, 1711, 1713, 1714, 1727, 1731, 1732, 1744, 1780, 1782, 1787, 1793, 1796, 1804, 1805, 1814, 1815, 1824, 1827, 1828, 1831, 1835, 1838, 1839, 1841, 1844, 1846, 1850, 1859, 1860, 1861, 1864, 1871, 1872, 1873, 1875, 1886, 1887, 1888, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1904, 1908, 1909, 1911, 1913, 1915, 1918, 1923, 1927, 1928, 1930, 1932, 1935, 1937, 1941, 1942, 1943, 1946, 1948, 1949, 1951, 1954, 1956], "freez": [0, 46, 1192, 1201, 1368, 1369, 1425, 1893], "_": [0, 1, 3, 20, 21, 23, 24, 27, 33, 52, 54, 668, 670, 671, 685, 852, 868, 869, 870, 871, 872, 881, 887, 909, 928, 951, 952, 954, 955, 957, 1109, 1114, 1128, 1132, 1158, 1212, 1220, 1271, 1279, 1343, 1344, 1345, 1388, 1389, 1390, 1464, 1605, 1613, 1646, 1681, 1683, 1703, 1726, 1729, 1732, 1744, 1759, 1765, 1767, 1773, 1780, 1782, 1804, 1815, 1827, 1828, 1893, 1896, 1899, 1900, 1904, 1910, 1914, 1915, 1917, 1928, 1942, 1943, 1949, 1950, 1954, 1956], "3": [0, 1, 3, 4, 6, 9, 11, 17, 18, 20, 21, 23, 25, 27, 29, 30, 31, 33, 38, 40, 44, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 179, 196, 221, 242, 248, 277, 301, 303, 305, 309, 389, 390, 432, 433, 434, 435, 436, 458, 474, 475, 480, 483, 486, 500, 502, 504, 510, 524, 531, 545, 547, 568, 570, 571, 572, 574, 575, 594, 604, 667, 668, 672, 673, 674, 675, 676, 677, 678, 679, 680, 684, 685, 686, 721, 725, 726, 727, 728, 729, 730, 733, 735, 744, 747, 748, 749, 750, 752, 759, 760, 761, 772, 780, 811, 848, 849, 852, 862, 863, 865, 866, 867, 874, 875, 888, 889, 890, 891, 892, 893, 907, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 920, 921, 922, 923, 925, 926, 927, 929, 930, 931, 932, 933, 937, 938, 947, 950, 951, 956, 957, 965, 1008, 1009, 1011, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1078, 1081, 1086, 1089, 1093, 1099, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1123, 1128, 1129, 1131, 1133, 1134, 1135, 1136, 1145, 1148, 1151, 1152, 1153, 1154, 1155, 1157, 1158, 1166, 1167, 1169, 1177, 1179, 1181, 1183, 1192, 1196, 1198, 1201, 1203, 1207, 1208, 1212, 1213, 1214, 1215, 1216, 1217, 1221, 1223, 1224, 1225, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1269, 1272, 1274, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1313, 1314, 1315, 1317, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1338, 1339, 1340, 1341, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1361, 1368, 1369, 1372, 1373, 1374, 1375, 1377, 1378, 1380, 1382, 1383, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1428, 1430, 1432, 1437, 1438, 1440, 1442, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1458, 1459, 1460, 1464, 1472, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1489, 1491, 1496, 1497, 1500, 1501, 1503, 1504, 1507, 1515, 1516, 1519, 1520, 1522, 1524, 1528, 1529, 1535, 1543, 1559, 1561, 1562, 1565, 1566, 1572, 1573, 1580, 1581, 1593, 1605, 1613, 1627, 1629, 1631, 1632, 1633, 1634, 1638, 1640, 1641, 1642, 1643, 1646, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1692, 1695, 1696, 1698, 1702, 1704, 1706, 1710, 1711, 1713, 1714, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1726, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1742, 1745, 1749, 1753, 1754, 1755, 1762, 1765, 1767, 1769, 1771, 1772, 1773, 1777, 1778, 1779, 1787, 1789, 1790, 1792, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1806, 1814, 1815, 1817, 1818, 1824, 1825, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1855, 1858, 1861, 1862, 1863, 1864, 1866, 1867, 1870, 1871, 1872, 1873, 1874, 1880, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1904, 1905, 1909, 1910, 1911, 1914, 1915, 1918, 1920, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1941, 1943, 1946, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956], "bug": [0, 13, 17, 23, 54, 1125, 1126, 1128, 1281, 1892, 1906, 1927, 1946, 1956], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 53, 54, 55, 57, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 107, 138, 142, 183, 184, 194, 197, 209, 210, 211, 243, 248, 277, 278, 301, 309, 311, 323, 325, 328, 340, 432, 433, 434, 435, 436, 445, 473, 474, 475, 480, 482, 483, 484, 485, 486, 487, 490, 491, 500, 502, 504, 511, 543, 553, 570, 571, 572, 574, 575, 576, 590, 591, 601, 604, 605, 667, 671, 673, 676, 680, 681, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 722, 723, 724, 731, 735, 736, 737, 738, 739, 740, 741, 742, 744, 746, 747, 762, 763, 764, 765, 766, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 789, 797, 798, 799, 800, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 841, 846, 848, 849, 861, 862, 863, 864, 865, 872, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 900, 901, 904, 907, 910, 912, 915, 919, 920, 923, 927, 929, 930, 933, 934, 936, 939, 941, 942, 943, 944, 946, 950, 951, 953, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 973, 976, 987, 989, 992, 993, 994, 996, 997, 1000, 1001, 1002, 1003, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1018, 1021, 1022, 1023, 1029, 1030, 1032, 1033, 1034, 1038, 1039, 1040, 1046, 1047, 1048, 1053, 1055, 1056, 1060, 1063, 1064, 1065, 1069, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1111, 1112, 1113, 1116, 1118, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1135, 1137, 1138, 1139, 1145, 1149, 1155, 1157, 1167, 1179, 1189, 1190, 1192, 1193, 1195, 1197, 1198, 1199, 1201, 1202, 1203, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1215, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1267, 1269, 1272, 1281, 1282, 1286, 1289, 1291, 1292, 1293, 1294, 1296, 1297, 1298, 1303, 1306, 1307, 1317, 1320, 1321, 1322, 1323, 1325, 1333, 1337, 1341, 1342, 1343, 1344, 1345, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1374, 1377, 1378, 1380, 1385, 1386, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1410, 1412, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1428, 1431, 1432, 1435, 1437, 1440, 1441, 1453, 1456, 1458, 1461, 1464, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1489, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1519, 1520, 1524, 1526, 1528, 1535, 1541, 1543, 1548, 1549, 1550, 1560, 1562, 1564, 1574, 1580, 1581, 1589, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1649, 1650, 1652, 1653, 1657, 1660, 1661, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1692, 1693, 1695, 1697, 1699, 1701, 1702, 1703, 1707, 1711, 1713, 1720, 1724, 1729, 1733, 1735, 1742, 1749, 1751, 1752, 1753, 1755, 1756, 1757, 1759, 1762, 1764, 1765, 1783, 1788, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1807, 1809, 1810, 1811, 1814, 1815, 1817, 1818, 1824, 1826, 1830, 1832, 1836, 1838, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959], "what": [0, 1, 3, 5, 7, 8, 9, 23, 28, 29, 33, 37, 38, 44, 46, 48, 50, 51, 54, 55, 879, 1126, 1207, 1208, 1281, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1419, 1420, 1453, 1476, 1548, 1549, 1550, 1574, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1714, 1868, 1869, 1870, 1872, 1873, 1886, 1896, 1898, 1899, 1901, 1904, 1906, 1911, 1914, 1917, 1918, 1923, 1924, 1927, 1941, 1942, 1944, 1945, 1947, 1948, 1949, 1956, 1958], "observ": [0, 21, 31, 40, 44, 743, 776, 777, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 795, 796, 798, 800, 802, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 846, 848, 849, 851, 953, 957, 1205, 1293, 1341, 1342, 1343, 1344, 1345, 1359, 1361, 1385, 1388, 1389, 1390, 1391, 1392, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1464, 1473, 1496, 1497, 1507, 1536, 1559, 1567, 1892, 1893, 1896, 1897, 1903, 1906, 1919, 1937, 1940, 1941, 1946, 1954, 1956, 1958], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 11, 14, 21, 23, 29, 32, 35, 36, 40, 41, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 64, 65, 69, 74, 242, 243, 485, 500, 605, 676, 717, 718, 719, 720, 721, 722, 728, 729, 730, 732, 733, 743, 748, 749, 750, 751, 752, 848, 849, 879, 881, 882, 883, 888, 890, 891, 894, 921, 1048, 1121, 1125, 1126, 1127, 1128, 1129, 1133, 1192, 1255, 1286, 1296, 1348, 1356, 1391, 1425, 1524, 1535, 1536, 1541, 1562, 1574, 1592, 1605, 1646, 1647, 1649, 1670, 1671, 1691, 1753, 1800, 1861, 1875, 1880, 1886, 1887, 1888, 1889, 1892, 1893, 1898, 1899, 1902, 1907, 1908, 1910, 1911, 1914, 1915, 1918, 1921, 1923, 1924, 1927, 1928, 1930, 1931, 1932, 1934, 1942, 1945, 1946, 1953, 1956], "file": [0, 1, 3, 6, 7, 9, 11, 13, 17, 20, 25, 31, 33, 38, 40, 42, 44, 49, 51, 54, 888, 894, 902, 903, 967, 1004, 1125, 1126, 1128, 1129, 1167, 1192, 1199, 1202, 1263, 1660, 1665, 1745, 1790, 1868, 1870, 1873, 1874, 1875, 1882, 1886, 1887, 1888, 1893, 1896, 1898, 1903, 1906, 1908, 1909, 1910, 1911, 1917, 1921, 1924, 1927, 1929, 1932, 1942, 1944, 1946, 1948, 1950, 1953, 1954, 1956, 1958], "subregion": 0, "nest": [0, 1, 5, 13, 25, 44, 46, 54, 55, 58, 62, 63, 576, 780, 802, 804, 881, 890, 1026, 1027, 1123, 1133, 1192, 1195, 1207, 1425, 1431, 1471, 1472, 1660, 1666, 1861, 1869, 1899, 1911, 1917, 1923], "local": [0, 23, 25, 27, 28, 31, 38, 40, 41, 42, 43, 46, 54, 1008, 1069, 1122, 1167, 1192, 1264, 1364, 1365, 1366, 1370, 1372, 1413, 1425, 1476, 1518, 1542, 1592, 1605, 1606, 1650, 1759, 1790, 1868, 1869, 1872, 1885, 1892, 1896, 1897, 1900, 1911, 1915, 1916, 1920, 1923, 1924, 1925, 1932, 1943, 1946, 1949, 1956, 1958], "want": [0, 1, 7, 8, 9, 13, 20, 23, 28, 29, 37, 44, 46, 48, 49, 50, 51, 53, 54, 55, 435, 483, 486, 768, 778, 825, 1004, 1121, 1122, 1204, 1207, 1208, 1293, 1373, 1374, 1477, 1519, 1520, 1535, 1593, 1605, 1606, 1647, 1650, 1670, 1671, 1684, 1745, 1853, 1868, 1877, 1880, 1892, 1893, 1895, 1896, 1898, 1899, 1901, 1904, 1911, 1914, 1915, 1918, 1927, 1932, 1933, 1936, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1952, 1955], "forc": [0, 1, 13, 17, 46, 445, 867, 939, 1004, 1195, 1206, 1210, 1764, 1800, 1868, 1870, 1873, 1892, 1896, 1932, 1935, 1941, 1943], "particular": [0, 3, 7, 20, 25, 31, 37, 40, 41, 46, 54, 55, 60, 63, 547, 667, 848, 849, 1039, 1133, 1192, 1286, 1362, 1425, 1660, 1861, 1870, 1872, 1880, 1888, 1896, 1898, 1900, 1903, 1904, 1907, 1911, 1914, 1927, 1929, 1935, 1941, 1945, 1946, 1947, 1956, 1957, 1958], "give": [0, 3, 4, 7, 9, 17, 20, 21, 25, 27, 39, 44, 46, 54, 895, 896, 957, 1083, 1085, 1086, 1088, 1092, 1101, 1125, 1126, 1127, 1205, 1221, 1228, 1353, 1354, 1355, 1430, 1476, 1477, 1612, 1651, 1670, 1671, 1811, 1850, 1868, 1870, 1885, 1887, 1891, 1893, 1896, 1898, 1899, 1901, 1902, 1904, 1908, 1911, 1914, 1916, 1927, 1941, 1944, 1945, 1953, 1956, 1957], "explicit": [0, 8, 23, 44, 46, 50, 54, 1000, 1145, 1179, 1536, 1753, 1831, 1868, 1869, 1873, 1874, 1886, 1892, 1896, 1898, 1915, 1930, 1931, 1951], "control": [0, 1, 2, 13, 20, 21, 23, 24, 25, 29, 31, 36, 39, 40, 44, 55, 61, 63, 742, 786, 845, 848, 863, 867, 881, 908, 917, 1052, 1053, 1054, 1055, 1056, 1149, 1150, 1203, 1204, 1205, 1207, 1222, 1228, 1230, 1233, 1235, 1238, 1240, 1244, 1250, 1253, 1255, 1261, 1281, 1333, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1411, 1419, 1420, 1476, 1574, 1605, 1701, 1757, 1758, 1772, 1787, 1790, 1795, 1811, 1815, 1833, 1839, 1840, 1841, 1842, 1870, 1879, 1893, 1895, 1896, 1897, 1904, 1906, 1907, 1909, 1911, 1914, 1918, 1925, 1927, 1941, 1942, 1944, 1946, 1949], "execut": [0, 1, 2, 3, 4, 5, 7, 13, 14, 20, 23, 25, 27, 31, 32, 34, 41, 44, 46, 51, 53, 54, 69, 474, 475, 900, 901, 939, 971, 982, 1043, 1122, 1192, 1193, 1195, 1207, 1208, 1263, 1306, 1307, 1362, 1425, 1431, 1468, 1469, 1470, 1471, 1472, 1599, 1601, 1605, 1760, 1869, 1870, 1872, 1874, 1881, 1892, 1894, 1895, 1900, 1903, 1904, 1906, 1908, 1910, 1911, 1917, 1918, 1923, 1924, 1927, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1955, 1956], "surround": [0, 54, 777, 1872, 1892, 1896], "ensur": [0, 1, 4, 6, 7, 9, 20, 23, 24, 25, 27, 31, 40, 41, 43, 46, 53, 54, 468, 473, 722, 806, 884, 886, 946, 1122, 1192, 1337, 1418, 1425, 1428, 1468, 1524, 1548, 1549, 1550, 1574, 1605, 1761, 1868, 1870, 1872, 1880, 1882, 1885, 1892, 1893, 1896, 1898, 1899, 1901, 1906, 1908, 1915, 1918, 1919, 1923, 1924, 1941, 1945, 1946, 1956], "necessari": [0, 1, 3, 9, 13, 20, 25, 31, 40, 41, 44, 46, 53, 76, 179, 196, 547, 576, 887, 1122, 1166, 1203, 1431, 1639, 1640, 1870, 1873, 1887, 1891, 1893, 1894, 1896, 1897, 1902, 1904, 1907, 1910, 1915, 1918, 1923, 1924, 1925, 1930, 1946, 1956], "becaus": [0, 1, 3, 4, 5, 7, 8, 13, 20, 21, 23, 27, 29, 33, 44, 46, 50, 51, 53, 54, 55, 62, 63, 483, 890, 895, 896, 1086, 1087, 1088, 1096, 1097, 1098, 1123, 1127, 1132, 1133, 1189, 1193, 1196, 1199, 1238, 1239, 1263, 1281, 1343, 1344, 1345, 1362, 1464, 1596, 1605, 1606, 1687, 1729, 1757, 1811, 1861, 1869, 1870, 1873, 1875, 1885, 1886, 1887, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1911, 1915, 1918, 1919, 1923, 1925, 1927, 1932, 1934, 1937, 1941, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1954, 1956, 1957, 1958], "wa": [0, 1, 3, 7, 17, 21, 23, 38, 39, 40, 41, 46, 53, 54, 323, 473, 483, 667, 772, 779, 841, 929, 940, 968, 969, 992, 996, 1011, 1024, 1043, 1085, 1133, 1189, 1198, 1207, 1222, 1233, 1235, 1239, 1263, 1281, 1303, 1315, 1395, 1421, 1422, 1423, 1454, 1477, 1489, 1524, 1577, 1593, 1605, 1606, 1641, 1689, 1695, 1809, 1810, 1847, 1848, 1856, 1857, 1861, 1868, 1870, 1872, 1873, 1874, 1877, 1879, 1880, 1883, 1885, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1903, 1905, 1911, 1914, 1916, 1918, 1922, 1923, 1927, 1934, 1945, 1946, 1949, 1955, 1958], "f_float32": 0, "re": [0, 1, 4, 5, 7, 13, 20, 23, 27, 30, 37, 40, 44, 46, 47, 48, 49, 50, 51, 53, 54, 475, 919, 966, 1000, 1116, 1192, 1196, 1425, 1580, 1606, 1641, 1740, 1794, 1870, 1873, 1880, 1885, 1892, 1893, 1896, 1898, 1899, 1901, 1906, 1918, 1924, 1925, 1928, 1941, 1943, 1944, 1945, 1946, 1955, 1956, 1957], "again": [0, 17, 20, 23, 27, 31, 44, 49, 1315, 1893, 1898, 1899, 1904, 1941, 1944, 1945, 1949, 1950], "regardless": [0, 20, 39, 46, 951, 1192, 1196, 1201, 1425, 1599, 1847, 1892, 1896, 1909, 1923, 1934, 1946], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 50, 51, 52, 53, 55, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 138, 179, 184, 196, 197, 209, 221, 243, 278, 299, 301, 303, 307, 309, 386, 388, 389, 390, 435, 445, 470, 473, 474, 475, 480, 482, 485, 486, 500, 502, 504, 524, 531, 570, 590, 604, 605, 667, 671, 674, 675, 676, 677, 681, 682, 683, 684, 722, 735, 744, 747, 753, 754, 755, 756, 759, 760, 761, 766, 767, 769, 770, 772, 773, 774, 779, 780, 781, 782, 786, 789, 802, 804, 806, 807, 808, 809, 812, 814, 824, 825, 841, 846, 851, 864, 865, 867, 871, 872, 876, 877, 879, 880, 881, 882, 883, 888, 889, 891, 892, 893, 894, 895, 896, 900, 901, 903, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 924, 925, 931, 938, 942, 944, 947, 953, 957, 967, 968, 974, 981, 997, 1008, 1009, 1011, 1012, 1013, 1022, 1035, 1036, 1037, 1048, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1065, 1066, 1070, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1113, 1115, 1116, 1117, 1118, 1119, 1122, 1125, 1128, 1131, 1132, 1133, 1136, 1137, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1162, 1166, 1169, 1189, 1192, 1195, 1197, 1199, 1202, 1203, 1205, 1207, 1208, 1211, 1212, 1216, 1217, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1237, 1238, 1239, 1241, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1258, 1261, 1263, 1264, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1292, 1300, 1301, 1305, 1306, 1307, 1310, 1311, 1315, 1321, 1324, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1368, 1369, 1370, 1372, 1373, 1374, 1377, 1378, 1379, 1380, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1425, 1428, 1430, 1432, 1439, 1440, 1442, 1443, 1453, 1454, 1456, 1464, 1467, 1468, 1473, 1474, 1476, 1477, 1489, 1492, 1493, 1507, 1508, 1515, 1516, 1517, 1519, 1520, 1523, 1524, 1526, 1535, 1536, 1548, 1549, 1550, 1559, 1562, 1574, 1577, 1593, 1596, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1615, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1631, 1632, 1635, 1641, 1645, 1646, 1649, 1651, 1652, 1653, 1660, 1662, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1703, 1704, 1707, 1710, 1713, 1718, 1719, 1720, 1722, 1724, 1726, 1731, 1733, 1735, 1737, 1738, 1740, 1742, 1745, 1752, 1753, 1754, 1755, 1757, 1762, 1763, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1783, 1789, 1790, 1792, 1793, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1806, 1809, 1810, 1811, 1815, 1816, 1825, 1831, 1832, 1833, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1853, 1855, 1856, 1857, 1859, 1861, 1864, 1868, 1870, 1871, 1872, 1874, 1875, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1938, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1958, 1959], "state": [0, 1, 2, 5, 9, 20, 23, 25, 27, 29, 31, 33, 40, 43, 44, 46, 54, 76, 735, 747, 823, 946, 997, 998, 1002, 1007, 1011, 1021, 1036, 1037, 1122, 1131, 1144, 1192, 1195, 1207, 1264, 1304, 1311, 1377, 1378, 1395, 1396, 1425, 1440, 1442, 1472, 1596, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1660, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1720, 1763, 1790, 1853, 1869, 1881, 1892, 1893, 1896, 1897, 1898, 1902, 1906, 1909, 1911, 1914, 1922, 1936, 1941, 1943, 1944, 1945, 1946, 1952], "thread": [0, 1, 3, 20, 23, 25, 31, 42, 46, 53, 966, 968, 1000, 1069, 1142, 1143, 1167, 1303, 1362, 1650, 1759, 1760, 1761, 1852, 1869, 1870, 1883, 1892, 1896, 1903, 1906, 1923, 1925, 1935, 1943], "must": [0, 3, 5, 6, 9, 13, 20, 23, 25, 27, 29, 30, 31, 38, 41, 42, 44, 46, 49, 51, 53, 54, 55, 62, 63, 76, 85, 127, 141, 142, 184, 248, 301, 303, 309, 386, 388, 390, 500, 531, 532, 553, 570, 571, 572, 574, 575, 604, 673, 674, 675, 676, 677, 678, 684, 735, 744, 759, 760, 761, 780, 802, 804, 846, 847, 865, 871, 876, 877, 878, 879, 881, 887, 889, 891, 892, 893, 895, 896, 907, 909, 911, 912, 913, 914, 915, 916, 919, 923, 926, 947, 957, 967, 968, 978, 979, 980, 982, 1008, 1009, 1011, 1053, 1055, 1056, 1057, 1059, 1062, 1063, 1065, 1086, 1087, 1088, 1093, 1095, 1096, 1097, 1098, 1099, 1106, 1107, 1116, 1118, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1145, 1154, 1155, 1158, 1169, 1189, 1192, 1202, 1207, 1214, 1217, 1246, 1247, 1248, 1249, 1255, 1257, 1258, 1261, 1264, 1282, 1284, 1285, 1286, 1292, 1299, 1315, 1321, 1324, 1325, 1329, 1342, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1368, 1369, 1372, 1373, 1374, 1379, 1380, 1386, 1418, 1425, 1428, 1429, 1431, 1456, 1462, 1477, 1497, 1506, 1508, 1516, 1535, 1548, 1549, 1550, 1568, 1605, 1628, 1638, 1639, 1645, 1647, 1652, 1660, 1661, 1693, 1695, 1702, 1703, 1706, 1707, 1710, 1718, 1719, 1740, 1749, 1752, 1761, 1777, 1788, 1792, 1793, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1811, 1816, 1826, 1830, 1831, 1835, 1840, 1842, 1846, 1850, 1853, 1858, 1859, 1861, 1862, 1864, 1870, 1871, 1872, 1873, 1880, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1902, 1906, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1934, 1941, 1942, 1944, 1946, 1947, 1949, 1955, 1956, 1957], "invok": [0, 2, 8, 14, 17, 20, 23, 38, 40, 41, 44, 53, 54, 888, 890, 1008, 1009, 1192, 1195, 1201, 1362, 1425, 1598, 1600, 1603, 1604, 1649, 1689, 1695, 1870, 1873, 1874, 1881, 1892, 1895, 1896, 1897, 1898, 1899, 1903, 1904, 1915, 1923, 1924, 1941, 1945, 1946, 1947, 1949], "affect": [0, 1, 2, 7, 9, 17, 19, 30, 46, 209, 210, 772, 969, 971, 1069, 1116, 1139, 1167, 1192, 1306, 1307, 1395, 1425, 1440, 1477, 1593, 1606, 1650, 1753, 1756, 1757, 1759, 1892, 1893, 1896, 1901, 1904, 1907, 1908, 1929, 1952, 1954], "dataparallel": [0, 23, 1589, 1605, 1641, 1869, 1893, 1900, 1906, 1923], "parallel": [0, 12, 13, 20, 21, 23, 24, 25, 27, 40, 41, 46, 1142, 1143, 1195, 1362, 1431, 1464, 1524, 1605, 1760, 1761, 1869, 1873, 1892, 1893, 1895, 1906, 1910, 1923, 1925, 1940, 1946], "distributeddataparallel": [0, 20, 21, 23, 24, 27, 28, 41, 46, 1362, 1464, 1906, 1916, 1923, 1946], "than": [0, 3, 4, 5, 6, 8, 9, 11, 13, 20, 21, 23, 24, 25, 29, 30, 31, 33, 37, 40, 41, 42, 44, 46, 51, 54, 55, 56, 63, 138, 242, 486, 532, 604, 667, 680, 686, 766, 772, 880, 889, 890, 904, 910, 921, 928, 929, 933, 934, 980, 1018, 1022, 1035, 1053, 1054, 1105, 1106, 1107, 1109, 1113, 1118, 1129, 1136, 1148, 1152, 1166, 1177, 1189, 1190, 1193, 1203, 1212, 1213, 1216, 1221, 1222, 1228, 1232, 1237, 1245, 1246, 1248, 1249, 1252, 1257, 1263, 1267, 1280, 1283, 1289, 1292, 1294, 1297, 1310, 1315, 1325, 1341, 1342, 1353, 1354, 1355, 1362, 1368, 1369, 1386, 1395, 1417, 1431, 1439, 1456, 1462, 1472, 1473, 1474, 1489, 1499, 1500, 1501, 1515, 1516, 1524, 1535, 1561, 1574, 1592, 1593, 1596, 1605, 1612, 1613, 1614, 1615, 1641, 1646, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1695, 1697, 1711, 1712, 1733, 1734, 1757, 1762, 1796, 1797, 1798, 1799, 1801, 1802, 1832, 1840, 1842, 1850, 1868, 1870, 1872, 1873, 1875, 1887, 1888, 1889, 1891, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1909, 1911, 1914, 1915, 1916, 1918, 1919, 1923, 1927, 1928, 1930, 1932, 1933, 1934, 1941, 1942, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1954, 1956, 1958], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 37, 40, 42, 43, 44, 46, 50, 51, 52, 53, 54, 55, 60, 62, 63, 70, 71, 72, 73, 75, 138, 209, 242, 340, 390, 473, 500, 507, 532, 547, 684, 735, 744, 780, 841, 842, 843, 867, 873, 879, 880, 881, 882, 884, 890, 910, 921, 923, 933, 937, 941, 964, 969, 971, 976, 978, 982, 1009, 1032, 1043, 1054, 1065, 1069, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1101, 1104, 1108, 1111, 1112, 1113, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1145, 1154, 1155, 1167, 1171, 1174, 1177, 1196, 1201, 1205, 1211, 1212, 1222, 1223, 1233, 1236, 1237, 1239, 1244, 1248, 1250, 1252, 1255, 1261, 1262, 1278, 1286, 1290, 1295, 1315, 1321, 1333, 1338, 1341, 1342, 1343, 1344, 1345, 1348, 1353, 1356, 1357, 1358, 1369, 1373, 1374, 1379, 1388, 1389, 1390, 1392, 1393, 1394, 1404, 1405, 1406, 1416, 1425, 1429, 1431, 1464, 1472, 1477, 1489, 1499, 1502, 1503, 1504, 1519, 1520, 1521, 1526, 1561, 1574, 1592, 1596, 1605, 1606, 1611, 1613, 1614, 1618, 1628, 1639, 1648, 1649, 1650, 1651, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1691, 1693, 1694, 1695, 1715, 1716, 1733, 1749, 1757, 1759, 1762, 1765, 1806, 1815, 1830, 1835, 1836, 1838, 1846, 1849, 1850, 1853, 1861, 1869, 1870, 1873, 1877, 1879, 1881, 1883, 1885, 1886, 1887, 1888, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1903, 1904, 1906, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1919, 1923, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1953, 1955, 1956, 1958], "gpu": [0, 1, 2, 3, 4, 7, 13, 16, 18, 20, 21, 25, 31, 41, 42, 46, 53, 184, 197, 277, 320, 590, 747, 939, 973, 974, 977, 978, 979, 980, 981, 982, 988, 989, 990, 997, 1003, 1004, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1042, 1043, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1113, 1192, 1201, 1238, 1263, 1292, 1300, 1301, 1302, 1306, 1307, 1333, 1362, 1377, 1395, 1425, 1440, 1441, 1464, 1589, 1605, 1638, 1815, 1869, 1870, 1881, 1884, 1896, 1898, 1902, 1904, 1905, 1907, 1908, 1910, 1918, 1923, 1927, 1929, 1933, 1935, 1938, 1941, 1943, 1945, 1948, 1953, 1954, 1956, 1958], "per": [0, 13, 20, 21, 23, 24, 25, 27, 28, 30, 31, 33, 39, 41, 42, 46, 47, 52, 459, 460, 461, 721, 722, 788, 795, 806, 809, 812, 820, 832, 840, 879, 888, 890, 939, 972, 1048, 1079, 1123, 1133, 1264, 1341, 1342, 1343, 1344, 1345, 1359, 1361, 1362, 1369, 1380, 1385, 1388, 1389, 1390, 1391, 1392, 1397, 1416, 1417, 1425, 1428, 1429, 1430, 1431, 1432, 1439, 1456, 1457, 1464, 1468, 1469, 1470, 1471, 1472, 1473, 1496, 1497, 1507, 1536, 1559, 1567, 1605, 1649, 1653, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1703, 1715, 1762, 1764, 1816, 1832, 1836, 1853, 1861, 1883, 1887, 1889, 1895, 1896, 1897, 1899, 1903, 1916, 1918, 1919, 1921, 1924, 1927, 1932, 1944, 1958], "process": [0, 1, 3, 11, 13, 21, 23, 24, 25, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 46, 54, 67, 68, 69, 72, 74, 968, 1004, 1010, 1035, 1192, 1202, 1264, 1301, 1310, 1341, 1342, 1359, 1361, 1368, 1369, 1385, 1392, 1416, 1417, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1464, 1468, 1470, 1472, 1473, 1496, 1497, 1507, 1536, 1559, 1567, 1605, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1692, 1698, 1764, 1778, 1853, 1868, 1869, 1870, 1883, 1885, 1886, 1887, 1893, 1895, 1896, 1897, 1898, 1903, 1904, 1906, 1908, 1910, 1911, 1915, 1916, 1917, 1918, 1921, 1923, 1925, 1927, 1929, 1936, 1940, 1944, 1946, 1949, 1954, 1956], "work": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 16, 23, 24, 25, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 46, 47, 51, 54, 55, 62, 63, 69, 107, 138, 340, 432, 433, 434, 435, 436, 473, 574, 575, 808, 848, 849, 880, 894, 939, 966, 968, 969, 971, 1000, 1011, 1012, 1032, 1066, 1068, 1085, 1105, 1106, 1107, 1122, 1192, 1196, 1203, 1204, 1227, 1228, 1255, 1256, 1264, 1303, 1362, 1422, 1425, 1441, 1458, 1562, 1580, 1605, 1665, 1695, 1722, 1726, 1728, 1754, 1760, 1826, 1829, 1853, 1868, 1870, 1873, 1874, 1884, 1885, 1886, 1887, 1888, 1891, 1893, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1906, 1909, 1910, 1911, 1915, 1916, 1918, 1921, 1923, 1924, 1933, 1935, 1942, 1943, 1944, 1947, 1948, 1949, 1952, 1953, 1956, 1957, 1958], "str": [0, 1, 2, 3, 5, 13, 20, 21, 23, 25, 27, 28, 29, 31, 34, 38, 40, 42, 44, 46, 54, 309, 500, 504, 590, 766, 772, 779, 780, 781, 802, 803, 804, 841, 888, 890, 898, 902, 903, 927, 939, 945, 966, 967, 978, 979, 980, 982, 991, 992, 994, 995, 996, 1000, 1008, 1009, 1010, 1022, 1023, 1025, 1027, 1039, 1060, 1065, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1121, 1122, 1126, 1131, 1133, 1141, 1190, 1191, 1192, 1193, 1195, 1196, 1198, 1201, 1237, 1250, 1255, 1256, 1263, 1264, 1293, 1306, 1307, 1322, 1341, 1342, 1348, 1353, 1354, 1355, 1359, 1361, 1369, 1375, 1379, 1385, 1386, 1391, 1392, 1401, 1402, 1403, 1416, 1417, 1425, 1426, 1428, 1429, 1430, 1432, 1435, 1439, 1442, 1453, 1456, 1457, 1468, 1470, 1472, 1473, 1474, 1475, 1477, 1496, 1497, 1507, 1508, 1516, 1521, 1524, 1535, 1536, 1559, 1567, 1593, 1605, 1612, 1613, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1646, 1647, 1649, 1660, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1697, 1714, 1745, 1749, 1756, 1757, 1792, 1811, 1852, 1853, 1861, 1868, 1870, 1871, 1872, 1873, 1874, 1881, 1882, 1883, 1885, 1887, 1891, 1893, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1922, 1923, 1929, 1932, 1934, 1936, 1937, 1946, 1949, 1951, 1955, 1956, 1957, 1958], "possibl": [0, 2, 9, 13, 14, 17, 23, 25, 29, 44, 50, 51, 54, 484, 485, 567, 604, 845, 866, 867, 933, 939, 975, 1066, 1067, 1068, 1113, 1125, 1192, 1205, 1232, 1245, 1248, 1249, 1252, 1257, 1263, 1342, 1348, 1425, 1431, 1515, 1516, 1535, 1568, 1593, 1617, 1618, 1733, 1736, 1751, 1803, 1811, 1829, 1870, 1872, 1873, 1885, 1886, 1891, 1893, 1895, 1896, 1897, 1898, 1901, 1906, 1907, 1908, 1910, 1915, 1918, 1923, 1925, 1930, 1934, 1938, 1941, 1942, 1944, 1945, 1946, 1947, 1949, 1952, 1956], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 17, 20, 21, 24, 25, 27, 29, 31, 32, 34, 37, 38, 40, 41, 44, 46, 48, 51, 53, 54, 55, 57, 60, 63, 65, 76, 89, 90, 91, 92, 107, 138, 142, 209, 223, 224, 225, 226, 242, 247, 248, 260, 261, 287, 299, 301, 303, 304, 305, 306, 307, 309, 311, 314, 340, 387, 388, 406, 407, 409, 410, 458, 468, 470, 486, 500, 502, 504, 524, 531, 547, 570, 571, 572, 574, 575, 586, 587, 667, 668, 671, 674, 675, 678, 682, 683, 684, 722, 743, 751, 757, 758, 766, 771, 772, 774, 780, 782, 783, 786, 789, 806, 807, 808, 809, 812, 813, 814, 841, 846, 852, 861, 862, 863, 867, 872, 876, 878, 880, 882, 883, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 908, 909, 910, 915, 917, 923, 927, 932, 934, 944, 952, 953, 956, 969, 999, 1008, 1009, 1022, 1035, 1044, 1045, 1048, 1056, 1057, 1066, 1067, 1068, 1070, 1079, 1080, 1082, 1084, 1086, 1087, 1088, 1093, 1095, 1096, 1097, 1098, 1099, 1108, 1113, 1119, 1121, 1122, 1123, 1124, 1128, 1129, 1131, 1132, 1134, 1136, 1140, 1141, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1162, 1177, 1182, 1183, 1184, 1185, 1188, 1189, 1190, 1192, 1193, 1195, 1198, 1199, 1207, 1210, 1212, 1213, 1216, 1220, 1221, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1237, 1241, 1244, 1246, 1248, 1249, 1251, 1255, 1256, 1261, 1262, 1263, 1264, 1267, 1272, 1278, 1280, 1281, 1284, 1289, 1291, 1292, 1294, 1297, 1310, 1313, 1315, 1319, 1320, 1321, 1322, 1325, 1326, 1329, 1333, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1367, 1368, 1369, 1370, 1372, 1379, 1380, 1381, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1453, 1456, 1458, 1459, 1460, 1461, 1462, 1464, 1467, 1468, 1470, 1472, 1473, 1474, 1476, 1477, 1496, 1497, 1499, 1500, 1501, 1506, 1507, 1516, 1517, 1521, 1524, 1526, 1535, 1536, 1537, 1548, 1549, 1550, 1559, 1560, 1561, 1562, 1564, 1567, 1574, 1587, 1588, 1593, 1595, 1596, 1598, 1600, 1603, 1604, 1605, 1610, 1612, 1613, 1614, 1615, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1631, 1632, 1638, 1641, 1642, 1645, 1647, 1651, 1652, 1656, 1657, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1703, 1707, 1710, 1714, 1716, 1717, 1729, 1731, 1733, 1734, 1735, 1740, 1741, 1742, 1749, 1752, 1762, 1765, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1783, 1787, 1792, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1811, 1815, 1816, 1826, 1830, 1833, 1836, 1839, 1840, 1841, 1842, 1844, 1847, 1848, 1849, 1850, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1874, 1880, 1882, 1883, 1885, 1888, 1891, 1892, 1893, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1904, 1906, 1908, 1909, 1911, 1913, 1914, 1915, 1917, 1918, 1921, 1922, 1923, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1941, 1943, 1944, 1946, 1949, 1950, 1951, 1955, 1956], "xpu": [0, 1192, 1425, 1917], "hpu": [0, 1929], "attribut": [0, 1, 11, 20, 21, 23, 24, 30, 54, 55, 68, 73, 138, 278, 482, 483, 714, 725, 726, 727, 728, 729, 730, 732, 733, 743, 751, 778, 789, 802, 803, 804, 825, 826, 827, 845, 846, 876, 880, 882, 886, 1116, 1191, 1192, 1193, 1195, 1196, 1202, 1203, 1264, 1362, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1425, 1468, 1605, 1606, 1616, 1617, 1618, 1639, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1851, 1854, 1869, 1871, 1874, 1888, 1892, 1893, 1896, 1898, 1899, 1904, 1909, 1911, 1915, 1918, 1923, 1933, 1934, 1949, 1955, 1957, 1959], "thu": [0, 1, 11, 20, 23, 29, 41, 44, 46, 54, 772, 809, 812, 841, 1065, 1086, 1255, 1286, 1365, 1477, 1593, 1605, 1670, 1671, 1681, 1800, 1870, 1873, 1880, 1881, 1893, 1895, 1898, 1900, 1901, 1903, 1904, 1911, 1918, 1923, 1927, 1931, 1933, 1934], "obtain": [0, 3, 20, 23, 29, 33, 53, 54, 483, 905, 1137, 1310, 1348, 1432, 1508, 1605, 1674, 1680, 1703, 1720, 1816, 1873, 1885, 1886, 1895, 1908, 1911, 1914, 1917, 1918, 1954], "bool": [0, 1, 2, 3, 5, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 34, 40, 42, 44, 46, 53, 54, 138, 184, 197, 233, 248, 307, 309, 316, 317, 318, 319, 321, 322, 327, 329, 432, 433, 434, 435, 436, 445, 458, 483, 504, 568, 590, 667, 680, 681, 682, 683, 684, 686, 722, 745, 766, 767, 772, 781, 801, 852, 860, 861, 862, 863, 867, 880, 888, 889, 890, 891, 892, 893, 894, 895, 896, 908, 911, 913, 914, 916, 917, 923, 924, 930, 931, 932, 938, 939, 940, 962, 968, 975, 1005, 1011, 1023, 1066, 1067, 1068, 1071, 1078, 1083, 1101, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1126, 1127, 1128, 1132, 1134, 1149, 1150, 1153, 1154, 1167, 1173, 1177, 1180, 1181, 1183, 1189, 1192, 1196, 1198, 1199, 1207, 1208, 1211, 1213, 1221, 1222, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1244, 1246, 1248, 1249, 1252, 1253, 1254, 1255, 1261, 1262, 1263, 1264, 1273, 1274, 1275, 1276, 1278, 1279, 1281, 1283, 1289, 1291, 1292, 1294, 1297, 1303, 1306, 1307, 1315, 1320, 1321, 1322, 1323, 1324, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1373, 1374, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1411, 1412, 1416, 1417, 1418, 1419, 1420, 1425, 1428, 1429, 1430, 1431, 1432, 1434, 1439, 1442, 1443, 1444, 1445, 1452, 1456, 1457, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1477, 1489, 1496, 1497, 1507, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1521, 1524, 1526, 1528, 1535, 1536, 1559, 1567, 1574, 1593, 1599, 1605, 1606, 1609, 1610, 1612, 1614, 1616, 1617, 1618, 1639, 1640, 1641, 1642, 1644, 1647, 1652, 1656, 1657, 1660, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1709, 1711, 1713, 1714, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1749, 1754, 1758, 1759, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1787, 1797, 1798, 1799, 1800, 1801, 1802, 1809, 1810, 1811, 1814, 1815, 1823, 1829, 1833, 1838, 1847, 1848, 1850, 1851, 1853, 1855, 1856, 1857, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1882, 1883, 1885, 1886, 1887, 1888, 1902, 1909, 1911, 1913, 1915, 1916, 1917, 1922, 1923, 1927, 1929, 1930, 1932, 1933, 1934, 1935, 1937, 1944, 1951, 1955, 1957], "option": [0, 1, 3, 5, 13, 20, 23, 27, 28, 29, 31, 34, 38, 39, 40, 42, 43, 44, 46, 54, 69, 71, 76, 138, 143, 158, 160, 163, 166, 167, 168, 183, 194, 197, 228, 255, 285, 313, 319, 381, 432, 433, 434, 435, 436, 474, 486, 487, 500, 507, 512, 524, 547, 567, 568, 570, 571, 572, 574, 575, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 722, 745, 766, 767, 772, 779, 781, 786, 805, 841, 846, 849, 852, 863, 865, 866, 867, 868, 869, 870, 871, 872, 879, 880, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 923, 926, 928, 929, 930, 931, 932, 934, 936, 937, 938, 939, 944, 945, 951, 952, 954, 955, 956, 957, 960, 964, 965, 966, 968, 969, 971, 973, 977, 978, 980, 981, 982, 985, 986, 993, 994, 997, 1000, 1008, 1009, 1010, 1014, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1035, 1036, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1062, 1064, 1065, 1066, 1067, 1068, 1070, 1075, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1118, 1119, 1120, 1121, 1122, 1125, 1126, 1127, 1134, 1135, 1136, 1137, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1156, 1157, 1158, 1166, 1169, 1181, 1183, 1186, 1187, 1189, 1190, 1192, 1193, 1196, 1198, 1205, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1303, 1306, 1307, 1313, 1314, 1315, 1317, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1331, 1332, 1333, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1347, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1379, 1382, 1383, 1384, 1385, 1386, 1391, 1392, 1397, 1401, 1402, 1403, 1404, 1405, 1406, 1411, 1416, 1417, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1443, 1444, 1445, 1452, 1456, 1457, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1476, 1477, 1478, 1479, 1489, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1515, 1516, 1519, 1520, 1521, 1524, 1526, 1535, 1536, 1543, 1548, 1549, 1550, 1559, 1560, 1567, 1574, 1580, 1581, 1593, 1601, 1602, 1605, 1606, 1612, 1613, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1646, 1647, 1649, 1651, 1652, 1653, 1656, 1657, 1658, 1659, 1660, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1678, 1680, 1681, 1682, 1683, 1684, 1688, 1701, 1702, 1703, 1706, 1710, 1711, 1713, 1714, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1742, 1744, 1749, 1762, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1787, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1815, 1816, 1826, 1827, 1828, 1829, 1830, 1833, 1835, 1838, 1839, 1840, 1841, 1842, 1844, 1847, 1848, 1850, 1855, 1856, 1857, 1858, 1863, 1864, 1866, 1867, 1868, 1870, 1871, 1873, 1875, 1877, 1879, 1881, 1882, 1883, 1888, 1891, 1896, 1898, 1899, 1900, 1903, 1904, 1908, 1909, 1911, 1915, 1917, 1918, 1923, 1927, 1928, 1930, 1932, 1934, 1937, 1938, 1946, 1949, 1953, 1955, 1956, 1958], "whether": [0, 1, 2, 7, 13, 20, 21, 23, 24, 25, 28, 29, 31, 39, 40, 46, 54, 75, 307, 309, 458, 504, 604, 667, 680, 682, 683, 686, 861, 862, 867, 876, 884, 887, 888, 890, 895, 896, 908, 917, 930, 931, 932, 938, 939, 940, 942, 944, 1007, 1023, 1121, 1133, 1149, 1150, 1167, 1189, 1192, 1199, 1200, 1208, 1213, 1221, 1222, 1228, 1230, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1246, 1248, 1249, 1252, 1253, 1254, 1255, 1263, 1279, 1281, 1289, 1291, 1292, 1294, 1297, 1315, 1320, 1321, 1322, 1323, 1348, 1359, 1385, 1391, 1425, 1434, 1439, 1474, 1486, 1487, 1488, 1508, 1536, 1567, 1599, 1605, 1612, 1614, 1617, 1630, 1644, 1647, 1652, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1689, 1701, 1711, 1714, 1758, 1759, 1809, 1810, 1811, 1814, 1815, 1833, 1838, 1847, 1848, 1850, 1851, 1856, 1857, 1861, 1868, 1873, 1879, 1880, 1882, 1888, 1892, 1896, 1898, 1902, 1911, 1916, 1918, 1923, 1927, 1929, 1931, 1932, 1937, 1943, 1946, 1949, 1956], "torch_dtyp": 0, "weight": [0, 20, 23, 29, 46, 52, 54, 55, 144, 289, 349, 350, 483, 699, 700, 701, 702, 703, 704, 705, 706, 707, 717, 718, 719, 720, 721, 722, 725, 726, 727, 728, 729, 730, 732, 733, 736, 738, 739, 740, 741, 743, 747, 748, 750, 751, 752, 759, 760, 761, 768, 779, 780, 781, 795, 796, 820, 822, 828, 832, 836, 837, 838, 839, 840, 845, 846, 848, 849, 910, 957, 1121, 1123, 1131, 1133, 1153, 1154, 1192, 1196, 1201, 1203, 1208, 1217, 1315, 1341, 1342, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1368, 1369, 1377, 1378, 1380, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1425, 1429, 1430, 1431, 1432, 1433, 1440, 1442, 1454, 1468, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1515, 1516, 1525, 1534, 1538, 1541, 1556, 1558, 1559, 1568, 1577, 1596, 1605, 1612, 1613, 1615, 1617, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1645, 1646, 1647, 1649, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1717, 1850, 1861, 1868, 1869, 1871, 1872, 1873, 1881, 1882, 1887, 1888, 1891, 1898, 1900, 1904, 1909, 1918, 1919, 1920, 1921, 1927, 1932, 1936, 1937, 1946, 1951], "cach": [0, 2, 3, 29, 54, 473, 939, 946, 990, 991, 1008, 1011, 1016, 1018, 1020, 1022, 1030, 1035, 1300, 1301, 1302, 1606, 1617, 1649, 1885, 1900, 1941, 1943, 1946, 1950, 1954, 1956, 1958], "insid": [0, 1, 7, 20, 40, 46, 51, 53, 54, 884, 885, 886, 887, 974, 1011, 1123, 1127, 1132, 1203, 1605, 1870, 1872, 1873, 1881, 1892, 1896, 1898, 1899, 1903, 1911, 1927, 1936, 1943, 1945, 1949, 1956], "custom_fwd": [0, 1892], "fwd": [0, 1950], "cast_input": [0, 1892], "helper": [0, 3, 5, 23, 50, 54, 1464, 1868, 1869, 1872, 1896, 1897, 1911, 1915, 1923, 1955, 1957], "subclass": [0, 1, 13, 20, 25, 29, 33, 51, 54, 127, 524, 876, 877, 878, 1190, 1193, 1202, 1425, 1606, 1619, 1624, 1645, 1870, 1873, 1874, 1880, 1892, 1904, 1911, 1923, 1927, 1943, 1949, 1957], "page": [0, 6, 7, 9, 20, 24, 41, 43, 1264, 1468, 1470, 1472, 1896, 1897, 1904, 1913, 1923, 1953], "incom": [0, 23, 42, 768, 806, 807, 808, 809, 812, 1346, 1412, 1495, 1541, 1885, 1893], "non": [0, 1, 3, 5, 13, 19, 21, 23, 24, 25, 28, 29, 31, 33, 40, 42, 43, 44, 46, 53, 55, 65, 72, 76, 138, 323, 475, 491, 500, 504, 532, 685, 721, 726, 727, 728, 729, 730, 732, 733, 743, 747, 751, 752, 759, 760, 761, 825, 852, 864, 876, 878, 880, 885, 887, 895, 896, 910, 923, 926, 939, 950, 951, 956, 1022, 1111, 1112, 1118, 1122, 1127, 1133, 1169, 1192, 1195, 1204, 1207, 1208, 1227, 1228, 1235, 1239, 1240, 1253, 1255, 1264, 1274, 1281, 1286, 1291, 1315, 1320, 1321, 1325, 1338, 1339, 1340, 1354, 1355, 1357, 1358, 1361, 1371, 1377, 1394, 1395, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1430, 1432, 1440, 1442, 1456, 1507, 1526, 1554, 1559, 1601, 1602, 1605, 1651, 1684, 1706, 1749, 1750, 1765, 1777, 1792, 1793, 1797, 1798, 1799, 1800, 1801, 1802, 1831, 1847, 1861, 1868, 1869, 1870, 1872, 1873, 1875, 1885, 1888, 1891, 1894, 1898, 1899, 1900, 1904, 1908, 1911, 1916, 1917, 1922, 1923, 1925, 1927, 1928, 1930, 1931, 1932, 1934, 1941, 1944, 1945, 1946, 1947, 1954, 1955, 1957], "intern": [0, 3, 8, 9, 13, 20, 21, 23, 25, 29, 31, 37, 46, 51, 54, 966, 1000, 1021, 1122, 1192, 1228, 1230, 1246, 1249, 1272, 1343, 1344, 1345, 1379, 1464, 1499, 1500, 1501, 1524, 1614, 1662, 1757, 1800, 1850, 1874, 1892, 1893, 1895, 1896, 1901, 1907, 1908, 1924, 1925, 1929, 1931, 1938, 1946, 1949, 1956], "current": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 20, 23, 25, 27, 28, 29, 31, 33, 40, 41, 46, 47, 53, 54, 68, 76, 138, 197, 209, 473, 484, 485, 486, 728, 730, 768, 780, 782, 804, 846, 848, 849, 852, 866, 867, 877, 880, 881, 888, 889, 890, 895, 908, 917, 960, 962, 966, 967, 968, 969, 971, 976, 977, 980, 981, 983, 984, 985, 986, 989, 990, 991, 993, 994, 997, 999, 1000, 1003, 1005, 1006, 1010, 1011, 1012, 1014, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1034, 1036, 1038, 1041, 1042, 1043, 1066, 1068, 1078, 1083, 1101, 1117, 1119, 1139, 1140, 1141, 1149, 1150, 1175, 1176, 1192, 1196, 1207, 1211, 1262, 1264, 1278, 1293, 1300, 1302, 1303, 1365, 1368, 1372, 1425, 1464, 1472, 1476, 1518, 1524, 1535, 1574, 1592, 1593, 1595, 1605, 1618, 1622, 1623, 1624, 1625, 1626, 1631, 1632, 1633, 1634, 1656, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1713, 1722, 1724, 1726, 1728, 1729, 1753, 1757, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1790, 1797, 1798, 1799, 1800, 1801, 1802, 1829, 1840, 1842, 1847, 1852, 1853, 1866, 1869, 1870, 1872, 1873, 1874, 1875, 1877, 1880, 1883, 1885, 1888, 1892, 1893, 1896, 1897, 1902, 1903, 1904, 1905, 1906, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1921, 1923, 1924, 1927, 1929, 1930, 1932, 1933, 1936, 1944, 1945, 1946, 1949, 1952, 1953, 1956, 1957, 1958], "outsid": [0, 5, 9, 20, 33, 44, 46, 51, 55, 64, 65, 671, 782, 872, 1121, 1123, 1127, 1132, 1193, 1524, 1605, 1686, 1687, 1692, 1693, 1699, 1872, 1873, 1891, 1893, 1896, 1899, 1900, 1934, 1946, 1952], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 138, 184, 197, 243, 248, 323, 432, 433, 434, 435, 436, 460, 461, 475, 483, 485, 531, 567, 568, 590, 591, 605, 667, 676, 680, 682, 683, 684, 686, 722, 747, 766, 768, 772, 774, 778, 784, 825, 827, 834, 845, 851, 861, 862, 864, 876, 879, 880, 882, 884, 890, 895, 896, 909, 927, 930, 931, 939, 941, 950, 951, 952, 965, 968, 969, 971, 976, 1004, 1007, 1008, 1053, 1055, 1069, 1101, 1113, 1121, 1122, 1125, 1126, 1129, 1133, 1145, 1154, 1155, 1166, 1189, 1192, 1196, 1199, 1202, 1203, 1204, 1207, 1212, 1213, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1243, 1245, 1246, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1258, 1259, 1263, 1272, 1279, 1281, 1286, 1289, 1291, 1292, 1293, 1294, 1296, 1297, 1303, 1320, 1321, 1322, 1323, 1341, 1342, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1362, 1363, 1369, 1372, 1373, 1374, 1377, 1380, 1385, 1388, 1389, 1390, 1395, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1429, 1430, 1431, 1432, 1433, 1440, 1456, 1458, 1464, 1472, 1476, 1477, 1489, 1499, 1500, 1501, 1507, 1516, 1519, 1520, 1524, 1535, 1559, 1561, 1562, 1564, 1568, 1574, 1580, 1593, 1595, 1596, 1599, 1600, 1605, 1612, 1614, 1616, 1619, 1623, 1625, 1628, 1638, 1639, 1646, 1647, 1651, 1653, 1660, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1691, 1695, 1697, 1701, 1711, 1713, 1714, 1715, 1716, 1733, 1735, 1745, 1757, 1779, 1793, 1794, 1795, 1800, 1806, 1808, 1809, 1810, 1811, 1814, 1815, 1832, 1838, 1856, 1857, 1861, 1870, 1872, 1873, 1879, 1880, 1883, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1932, 1933, 1934, 1935, 1938, 1941, 1942, 1943, 1945, 1946, 1947, 1949, 1950, 1952, 1956], "effect": [0, 3, 7, 13, 20, 21, 23, 29, 42, 44, 46, 51, 54, 55, 58, 184, 197, 590, 722, 766, 772, 1000, 1048, 1133, 1192, 1234, 1235, 1236, 1237, 1293, 1333, 1348, 1356, 1357, 1358, 1363, 1364, 1365, 1366, 1370, 1425, 1431, 1477, 1535, 1562, 1593, 1599, 1605, 1606, 1624, 1681, 1689, 1790, 1795, 1815, 1836, 1851, 1861, 1868, 1870, 1881, 1891, 1892, 1893, 1896, 1898, 1918, 1921, 1929, 1930, 1932, 1941], "custom_bwd": [0, 1892], "bwd": 0, "small": [0, 3, 7, 9, 20, 21, 23, 29, 40, 852, 895, 896, 939, 979, 1022, 1254, 1255, 1267, 1269, 1333, 1360, 1434, 1439, 1453, 1473, 1477, 1506, 1560, 1567, 1605, 1686, 1692, 1701, 1815, 1870, 1872, 1873, 1896, 1898, 1900, 1904, 1907, 1909, 1911, 1915, 1918, 1919, 1927, 1928, 1934, 1941, 1945, 1946, 1947, 1950, 1954, 1956, 1958], "magnitud": [0, 952, 1649, 1765, 1891, 1892, 1896], "represent": [0, 3, 13, 20, 23, 25, 38, 44, 54, 69, 468, 745, 813, 969, 1081, 1082, 1084, 1108, 1137, 1192, 1231, 1234, 1236, 1239, 1319, 1425, 1431, 1660, 1701, 1869, 1870, 1873, 1888, 1898, 1907, 1911, 1912, 1915, 1918, 1927, 1934, 1944, 1946, 1956, 1959], "These": [0, 1, 2, 3, 8, 13, 14, 20, 23, 24, 29, 47, 49, 52, 54, 781, 867, 957, 1065, 1129, 1189, 1192, 1234, 1299, 1333, 1425, 1596, 1613, 1869, 1870, 1871, 1872, 1873, 1883, 1886, 1887, 1889, 1892, 1893, 1896, 1897, 1898, 1904, 1907, 1909, 1911, 1915, 1921, 1923, 1924, 1930, 1935, 1941, 1944, 1946, 1949, 1952, 1956, 1957], "flush": [0, 1, 25, 44, 1022, 1202, 1745, 1758, 1907, 1932], "zero": [0, 1, 2, 21, 23, 24, 27, 29, 42, 46, 51, 54, 138, 248, 303, 500, 502, 531, 532, 571, 572, 574, 575, 610, 666, 678, 685, 699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 714, 717, 718, 725, 726, 727, 728, 729, 730, 731, 736, 737, 738, 739, 740, 741, 742, 743, 746, 747, 751, 755, 756, 759, 760, 761, 762, 764, 767, 768, 782, 786, 806, 807, 808, 809, 812, 817, 864, 873, 874, 875, 880, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 909, 910, 930, 931, 932, 937, 952, 956, 1011, 1022, 1026, 1027, 1056, 1060, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1113, 1118, 1121, 1129, 1151, 1152, 1155, 1177, 1189, 1192, 1203, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1259, 1264, 1272, 1273, 1274, 1275, 1276, 1281, 1282, 1315, 1319, 1323, 1337, 1338, 1339, 1340, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1377, 1378, 1380, 1393, 1394, 1395, 1396, 1397, 1401, 1402, 1403, 1404, 1405, 1406, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1431, 1434, 1437, 1438, 1439, 1440, 1442, 1462, 1476, 1477, 1480, 1481, 1482, 1491, 1492, 1493, 1502, 1503, 1504, 1506, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1524, 1545, 1546, 1560, 1561, 1562, 1574, 1622, 1623, 1624, 1625, 1640, 1647, 1651, 1655, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1701, 1713, 1715, 1716, 1717, 1733, 1742, 1752, 1779, 1783, 1793, 1797, 1798, 1799, 1800, 1801, 1802, 1806, 1815, 1829, 1830, 1832, 1838, 1867, 1870, 1871, 1873, 1875, 1883, 1885, 1886, 1887, 1888, 1891, 1893, 1896, 1898, 1904, 1907, 1910, 1911, 1913, 1915, 1917, 1918, 1921, 1923, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1945], "underflow": [0, 1391, 1892], "updat": [0, 9, 11, 20, 21, 25, 27, 31, 40, 44, 46, 49, 50, 54, 74, 209, 475, 500, 502, 747, 786, 787, 811, 1121, 1130, 1192, 1228, 1343, 1344, 1345, 1362, 1368, 1369, 1377, 1388, 1389, 1390, 1425, 1426, 1435, 1464, 1515, 1516, 1613, 1617, 1647, 1667, 1673, 1678, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1868, 1870, 1881, 1892, 1893, 1896, 1897, 1898, 1904, 1906, 1909, 1910, 1911, 1913, 1914, 1916, 1918, 1923, 1924, 1925, 1932, 1941, 1955], "lost": [0, 31, 41, 43, 1362, 1421, 1422, 1423], "To": [0, 1, 2, 3, 4, 5, 6, 9, 13, 14, 20, 21, 23, 24, 27, 28, 29, 31, 32, 38, 39, 41, 42, 44, 46, 51, 54, 67, 70, 71, 74, 323, 486, 544, 721, 881, 894, 936, 939, 967, 1012, 1032, 1053, 1055, 1065, 1093, 1095, 1099, 1110, 1192, 1193, 1195, 1196, 1202, 1203, 1237, 1259, 1264, 1292, 1333, 1342, 1365, 1391, 1421, 1422, 1423, 1425, 1478, 1479, 1497, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1649, 1695, 1703, 1714, 1753, 1757, 1761, 1800, 1816, 1868, 1870, 1872, 1873, 1877, 1885, 1886, 1887, 1889, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1909, 1911, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1925, 1927, 1930, 1931, 1932, 1933, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1954, 1955, 1956, 1958], "prevent": [0, 7, 8, 20, 21, 23, 24, 31, 46, 54, 486, 722, 886, 968, 1046, 1047, 1066, 1067, 1068, 1189, 1291, 1303, 1320, 1323, 1363, 1431, 1456, 1543, 1580, 1581, 1596, 1605, 1711, 1791, 1794, 1814, 1840, 1842, 1850, 1885, 1892, 1893, 1896, 1897, 1900, 1904, 1915, 1917, 1925, 1927, 1928, 1941, 1945, 1946, 1949], "multipli": [0, 23, 44, 301, 309, 410, 500, 672, 673, 674, 675, 676, 677, 678, 747, 766, 772, 773, 774, 907, 919, 1035, 1048, 1065, 1145, 1156, 1215, 1227, 1228, 1232, 1245, 1247, 1249, 1255, 1257, 1286, 1296, 1310, 1314, 1317, 1341, 1353, 1354, 1355, 1358, 1377, 1395, 1477, 1478, 1479, 1535, 1593, 1594, 1595, 1617, 1686, 1692, 1694, 1701, 1757, 1785, 1788, 1792, 1793, 1807, 1811, 1812, 1815, 1836, 1871, 1886, 1896, 1901, 1904, 1907, 1913, 1927, 1928, 1946], "factor": [0, 3, 21, 29, 54, 676, 677, 678, 786, 806, 907, 930, 931, 932, 1234, 1235, 1236, 1239, 1241, 1281, 1282, 1283, 1363, 1386, 1413, 1437, 1438, 1565, 1566, 1574, 1681, 1682, 1683, 1685, 1686, 1688, 1690, 1691, 1692, 1693, 1694, 1697, 1698, 1699, 1713, 1771, 1793, 1815, 1891, 1892, 1918, 1927, 1946], "flow": [0, 44, 55, 61, 63, 936, 1204, 1207, 1489, 1524, 1605, 1870, 1891, 1893, 1896, 1898, 1909, 1911, 1925, 1941, 1942, 1944, 1949, 1954], "through": [0, 5, 7, 9, 14, 20, 23, 25, 29, 33, 46, 51, 53, 54, 55, 58, 60, 67, 483, 779, 827, 841, 848, 849, 886, 895, 896, 973, 1011, 1092, 1125, 1133, 1190, 1193, 1195, 1207, 1208, 1210, 1227, 1228, 1249, 1255, 1272, 1432, 1469, 1470, 1471, 1472, 1526, 1596, 1605, 1617, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1713, 1861, 1868, 1869, 1872, 1873, 1877, 1879, 1883, 1885, 1886, 1887, 1893, 1896, 1898, 1900, 1901, 1903, 1904, 1910, 1911, 1915, 1916, 1918, 1921, 1923, 1924, 1925, 1927, 1931, 1935, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1955, 1956, 1959], "word": [0, 1, 8, 23, 40, 41, 49, 53, 54, 923, 1333, 1353, 1354, 1355, 1368, 1369, 1468, 1515, 1516, 1535, 1593, 1605, 1612, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1872, 1893, 1900, 1915, 1924], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 13, 20, 23, 24, 25, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 54, 55, 62, 63, 72, 141, 142, 209, 210, 301, 303, 309, 323, 386, 390, 435, 445, 458, 473, 474, 475, 490, 500, 502, 504, 507, 531, 604, 667, 676, 680, 682, 683, 684, 686, 802, 804, 828, 867, 876, 880, 888, 890, 900, 901, 908, 909, 917, 926, 927, 939, 942, 957, 971, 980, 981, 1011, 1022, 1056, 1064, 1071, 1085, 1095, 1100, 1102, 1116, 1121, 1122, 1133, 1134, 1135, 1149, 1150, 1153, 1154, 1166, 1167, 1189, 1191, 1192, 1195, 1196, 1199, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1213, 1214, 1223, 1227, 1228, 1244, 1251, 1252, 1255, 1257, 1263, 1272, 1274, 1279, 1286, 1289, 1291, 1292, 1293, 1294, 1296, 1297, 1315, 1320, 1321, 1323, 1325, 1333, 1337, 1341, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1362, 1368, 1369, 1373, 1374, 1379, 1384, 1388, 1389, 1390, 1417, 1425, 1428, 1429, 1430, 1431, 1432, 1472, 1474, 1506, 1515, 1516, 1519, 1520, 1524, 1541, 1559, 1561, 1564, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1609, 1610, 1612, 1614, 1617, 1641, 1645, 1650, 1652, 1660, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1711, 1737, 1738, 1752, 1757, 1765, 1788, 1792, 1796, 1797, 1798, 1799, 1801, 1802, 1809, 1810, 1811, 1814, 1815, 1826, 1830, 1836, 1838, 1850, 1853, 1856, 1857, 1859, 1861, 1863, 1868, 1870, 1871, 1872, 1873, 1875, 1877, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1919, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1953, 1955, 1956, 1957, 1958], "larger": [0, 9, 23, 29, 54, 242, 486, 896, 910, 1022, 1122, 1246, 1249, 1333, 1362, 1368, 1369, 1417, 1474, 1477, 1515, 1516, 1893, 1896, 1900, 1901, 1903, 1907, 1909, 1927, 1932, 1949, 1950, 1953, 1954, 1955], "thei": [0, 1, 3, 5, 7, 9, 11, 16, 17, 20, 23, 25, 29, 30, 40, 44, 46, 49, 50, 53, 54, 72, 309, 323, 324, 673, 676, 677, 684, 787, 802, 803, 804, 811, 828, 841, 846, 877, 886, 896, 907, 939, 1011, 1069, 1116, 1121, 1131, 1167, 1181, 1182, 1189, 1192, 1199, 1204, 1213, 1227, 1228, 1234, 1255, 1263, 1285, 1289, 1292, 1294, 1297, 1315, 1338, 1339, 1340, 1356, 1357, 1358, 1372, 1410, 1418, 1419, 1420, 1425, 1431, 1441, 1453, 1476, 1524, 1526, 1596, 1605, 1606, 1609, 1612, 1614, 1615, 1638, 1641, 1650, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1691, 1694, 1753, 1759, 1811, 1815, 1850, 1851, 1855, 1868, 1870, 1872, 1873, 1875, 1877, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1902, 1904, 1906, 1907, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1923, 1927, 1932, 1934, 1935, 1936, 1941, 1944, 1945, 1946, 1947, 1948, 1952, 1956, 1957], "don": [0, 1, 4, 7, 9, 11, 23, 39, 47, 49, 51, 54, 55, 64, 65, 138, 772, 782, 880, 881, 894, 1039, 1121, 1207, 1285, 1388, 1389, 1390, 1477, 1593, 1596, 1605, 1653, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1756, 1868, 1870, 1874, 1885, 1886, 1887, 1893, 1896, 1898, 1900, 1904, 1906, 1910, 1911, 1914, 1915, 1916, 1918, 1923, 1924, 1927, 1944, 1945, 1946, 1947, 1949, 1957], "t": [0, 1, 2, 3, 4, 7, 8, 9, 11, 20, 21, 23, 25, 29, 30, 33, 37, 39, 40, 44, 47, 49, 51, 52, 53, 54, 55, 57, 64, 65, 69, 72, 138, 301, 303, 309, 445, 510, 524, 558, 674, 675, 684, 747, 768, 772, 782, 810, 813, 864, 865, 866, 867, 876, 878, 880, 881, 884, 886, 889, 894, 930, 931, 932, 937, 957, 966, 969, 990, 1008, 1009, 1039, 1063, 1081, 1086, 1087, 1088, 1089, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1116, 1117, 1118, 1121, 1122, 1123, 1133, 1134, 1145, 1155, 1189, 1190, 1192, 1193, 1195, 1198, 1199, 1203, 1205, 1207, 1210, 1212, 1221, 1222, 1228, 1230, 1231, 1234, 1241, 1249, 1250, 1255, 1263, 1264, 1272, 1285, 1298, 1299, 1313, 1322, 1342, 1346, 1348, 1353, 1354, 1355, 1362, 1368, 1369, 1377, 1386, 1388, 1389, 1390, 1391, 1395, 1412, 1425, 1440, 1456, 1458, 1468, 1476, 1477, 1495, 1499, 1500, 1501, 1508, 1515, 1516, 1536, 1541, 1560, 1580, 1593, 1596, 1599, 1600, 1605, 1606, 1612, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1639, 1641, 1642, 1653, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1687, 1697, 1703, 1709, 1713, 1730, 1755, 1756, 1765, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1788, 1792, 1811, 1815, 1816, 1826, 1829, 1835, 1838, 1861, 1862, 1868, 1870, 1871, 1872, 1874, 1883, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1901, 1903, 1904, 1906, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1944, 1945, 1947, 1949, 1951, 1954, 1956, 1957], "grad": [0, 1, 5, 23, 29, 47, 50, 51, 54, 138, 323, 445, 474, 475, 482, 483, 490, 491, 568, 867, 876, 880, 881, 887, 888, 890, 895, 896, 900, 901, 1011, 1069, 1121, 1122, 1124, 1128, 1132, 1133, 1167, 1175, 1192, 1264, 1425, 1605, 1650, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1759, 1792, 1850, 1861, 1869, 1870, 1871, 1886, 1887, 1888, 1892, 1897, 1898, 1899, 1901, 1904, 1906, 1913, 1923, 1924, 1927, 1933, 1946, 1952], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 13, 23, 27, 28, 29, 31, 33, 37, 39, 40, 42, 44, 46, 49, 50, 51, 53, 54, 55, 138, 242, 323, 422, 445, 570, 604, 667, 682, 683, 735, 744, 747, 777, 781, 848, 867, 919, 1002, 1006, 1056, 1065, 1069, 1118, 1121, 1133, 1166, 1191, 1193, 1196, 1202, 1207, 1217, 1222, 1234, 1235, 1239, 1240, 1247, 1253, 1255, 1261, 1264, 1281, 1285, 1286, 1292, 1296, 1300, 1317, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1365, 1368, 1369, 1372, 1377, 1378, 1388, 1389, 1390, 1395, 1396, 1398, 1399, 1400, 1407, 1408, 1409, 1419, 1420, 1426, 1432, 1435, 1440, 1442, 1464, 1476, 1507, 1559, 1605, 1606, 1614, 1617, 1621, 1647, 1650, 1652, 1657, 1660, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1698, 1702, 1707, 1749, 1752, 1753, 1757, 1759, 1783, 1788, 1815, 1835, 1838, 1850, 1851, 1861, 1867, 1868, 1869, 1870, 1872, 1873, 1875, 1881, 1885, 1886, 1887, 1888, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1904, 1906, 1907, 1908, 1911, 1915, 1916, 1918, 1923, 1925, 1927, 1930, 1934, 1941, 1949, 1956, 1958], "interfer": [0, 1883, 1896, 1911, 1946], "learn": [0, 7, 8, 14, 29, 39, 46, 54, 74, 1346, 1359, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1385, 1397, 1410, 1412, 1433, 1454, 1468, 1470, 1472, 1473, 1474, 1577, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1869, 1877, 1889, 1891, 1896, 1902, 1904, 1905, 1911, 1915, 1918, 1923, 1925, 1938, 1940, 1942, 1944, 1949], "rate": [0, 8, 21, 29, 46, 1364, 1365, 1366, 1370, 1471, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1706, 1869, 1903, 1932, 1953], "fp16": [0, 2, 716, 1605, 1918, 1919], "everi": [0, 1, 2, 8, 9, 20, 21, 23, 25, 27, 29, 31, 46, 51, 54, 468, 474, 597, 667, 768, 806, 884, 900, 901, 939, 1048, 1065, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1122, 1145, 1154, 1192, 1223, 1237, 1247, 1250, 1281, 1337, 1363, 1364, 1365, 1366, 1370, 1418, 1425, 1458, 1460, 1464, 1510, 1511, 1512, 1517, 1548, 1549, 1550, 1564, 1581, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1613, 1646, 1649, 1650, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1753, 1815, 1848, 1873, 1879, 1883, 1892, 1893, 1896, 1897, 1898, 1899, 1901, 1905, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1929, 1930, 1932, 1934, 1944, 1945, 1949, 1953, 1954, 1955, 1956], "most": [0, 1, 3, 4, 7, 8, 14, 20, 23, 25, 27, 29, 30, 31, 32, 39, 40, 42, 43, 46, 51, 52, 53, 54, 55, 486, 780, 884, 885, 886, 891, 895, 904, 939, 1034, 1048, 1065, 1122, 1167, 1177, 1190, 1193, 1297, 1333, 1472, 1524, 1574, 1605, 1617, 1678, 1757, 1790, 1836, 1868, 1870, 1872, 1873, 1875, 1880, 1885, 1887, 1888, 1893, 1896, 1898, 1906, 1907, 1908, 1914, 1917, 1918, 1924, 1925, 1927, 1930, 1932, 1934, 1938, 1940, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1956], "bf16": [0, 2], "pretrain": [0, 849, 1368, 1369, 1868, 1893, 1911], "cannot": [0, 3, 8, 9, 20, 21, 23, 29, 30, 33, 40, 46, 47, 51, 52, 53, 54, 55, 210, 242, 511, 532, 867, 1086, 1088, 1096, 1097, 1098, 1104, 1121, 1189, 1197, 1315, 1348, 1368, 1477, 1508, 1574, 1605, 1662, 1816, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1883, 1887, 1888, 1893, 1897, 1898, 1909, 1910, 1911, 1918, 1923, 1925, 1927, 1929, 1930, 1941, 1947, 1957], "numer": [0, 20, 29, 47, 52, 674, 780, 895, 896, 923, 1196, 1207, 1208, 1223, 1227, 1228, 1232, 1237, 1245, 1246, 1249, 1252, 1255, 1257, 1279, 1281, 1342, 1343, 1344, 1345, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1458, 1461, 1464, 1473, 1515, 1536, 1543, 1574, 1580, 1582, 1613, 1646, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1717, 1749, 1815, 1869, 1873, 1874, 1878, 1881, 1896, 1898, 1899, 1911, 1918, 1928, 1933, 1946, 1956, 1959], "max": [0, 20, 23, 31, 33, 39, 40, 42, 44, 46, 54, 55, 64, 65, 104, 173, 174, 175, 176, 288, 682, 683, 684, 745, 757, 758, 767, 769, 770, 789, 806, 807, 808, 809, 812, 861, 910, 927, 934, 935, 939, 1044, 1079, 1080, 1152, 1203, 1223, 1237, 1244, 1246, 1248, 1249, 1261, 1334, 1335, 1336, 1347, 1348, 1359, 1360, 1369, 1373, 1374, 1379, 1384, 1385, 1393, 1394, 1411, 1413, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1428, 1429, 1430, 1433, 1444, 1445, 1452, 1473, 1474, 1476, 1486, 1487, 1488, 1498, 1506, 1516, 1519, 1520, 1535, 1539, 1548, 1549, 1550, 1560, 1564, 1568, 1570, 1575, 1593, 1609, 1641, 1670, 1671, 1672, 1682, 1687, 1688, 1697, 1718, 1719, 1792, 1821, 1822, 1850, 1870, 1871, 1880, 1883, 1888, 1894, 1896, 1900, 1913, 1918, 1921, 1945, 1950, 1951, 1959], "65504": 0, "overflow": [0, 1046, 1047, 1291, 1320, 1323, 1543, 1580, 1581, 1711, 1742, 1791, 1794, 1814, 1840, 1842, 1896, 1907, 1928], "instead": [0, 1, 3, 5, 8, 9, 13, 20, 21, 23, 25, 28, 29, 31, 37, 40, 41, 44, 46, 49, 50, 51, 54, 55, 57, 63, 209, 394, 445, 486, 500, 735, 744, 755, 756, 780, 804, 813, 867, 877, 888, 889, 890, 891, 894, 895, 923, 929, 1100, 1102, 1126, 1127, 1128, 1129, 1132, 1133, 1138, 1179, 1190, 1192, 1193, 1197, 1221, 1222, 1228, 1230, 1246, 1249, 1255, 1261, 1263, 1292, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1359, 1361, 1362, 1364, 1365, 1366, 1370, 1377, 1385, 1391, 1392, 1393, 1394, 1395, 1416, 1417, 1418, 1419, 1420, 1425, 1428, 1429, 1430, 1432, 1439, 1440, 1452, 1456, 1457, 1458, 1464, 1473, 1491, 1492, 1493, 1496, 1497, 1507, 1517, 1524, 1536, 1548, 1549, 1550, 1559, 1567, 1580, 1605, 1647, 1649, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1688, 1689, 1695, 1718, 1719, 1729, 1749, 1753, 1796, 1811, 1815, 1850, 1861, 1870, 1872, 1873, 1880, 1887, 1891, 1892, 1893, 1897, 1898, 1899, 1900, 1901, 1902, 1906, 1908, 1909, 1910, 1911, 1914, 1915, 1917, 1918, 1921, 1924, 1927, 1934, 1935, 1937, 1941, 1942, 1944, 1945, 1946, 1949, 1952, 1955, 1956, 1957], "case": [0, 1, 3, 4, 8, 9, 11, 13, 14, 20, 21, 23, 25, 27, 29, 31, 32, 33, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 72, 138, 142, 184, 340, 483, 486, 667, 747, 771, 778, 781, 807, 808, 810, 813, 845, 852, 880, 888, 890, 894, 908, 910, 915, 952, 965, 990, 1012, 1013, 1032, 1033, 1034, 1065, 1086, 1088, 1096, 1097, 1098, 1113, 1123, 1127, 1132, 1151, 1177, 1190, 1193, 1201, 1204, 1205, 1207, 1221, 1223, 1227, 1228, 1232, 1237, 1238, 1239, 1241, 1247, 1250, 1255, 1257, 1261, 1263, 1264, 1269, 1272, 1281, 1292, 1315, 1333, 1338, 1339, 1340, 1341, 1342, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1364, 1365, 1366, 1367, 1369, 1370, 1372, 1381, 1382, 1383, 1384, 1385, 1386, 1392, 1393, 1394, 1411, 1416, 1418, 1419, 1420, 1431, 1432, 1433, 1443, 1456, 1462, 1467, 1472, 1474, 1476, 1489, 1507, 1516, 1524, 1528, 1529, 1559, 1561, 1568, 1605, 1607, 1608, 1612, 1614, 1617, 1618, 1651, 1652, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1695, 1733, 1736, 1749, 1751, 1765, 1768, 1800, 1815, 1816, 1846, 1850, 1864, 1868, 1873, 1878, 1885, 1886, 1887, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1909, 1911, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1931, 1932, 1933, 1934, 1938, 1944, 1945, 1946, 1947, 1949, 1952, 1954, 1955, 1956, 1957, 1959], "decreas": [0, 29, 1022, 1237, 1364, 1365, 1366, 1370, 1438, 1639, 1640, 1682, 1689, 1697, 1879, 1881, 1906, 1908, 1927, 1930], "attempt": [0, 1, 8, 13, 23, 40, 41, 46, 51, 73, 933, 939, 942, 953, 1196, 1202, 1281, 1574, 1607, 1608, 1670, 1671, 1850, 1853, 1870, 1873, 1886, 1887, 1892, 1896, 1898, 1910, 1914, 1915, 1923, 1944, 1945, 1946, 1956], "bring": [0, 47, 54, 1086, 1489, 1524, 1916, 1950, 1953], "number": [0, 1, 2, 3, 4, 5, 7, 13, 20, 21, 23, 27, 28, 29, 31, 38, 39, 40, 43, 47, 49, 52, 54, 55, 60, 73, 76, 142, 161, 206, 220, 242, 301, 340, 365, 386, 390, 422, 433, 458, 460, 461, 468, 480, 484, 486, 500, 502, 504, 530, 532, 533, 545, 570, 571, 572, 574, 575, 576, 595, 604, 672, 673, 674, 675, 676, 677, 678, 685, 745, 747, 755, 756, 759, 760, 761, 768, 806, 852, 864, 877, 895, 907, 909, 910, 915, 919, 921, 925, 933, 934, 938, 952, 956, 957, 961, 971, 973, 979, 988, 997, 998, 1009, 1011, 1012, 1013, 1022, 1032, 1033, 1036, 1037, 1057, 1060, 1062, 1065, 1066, 1070, 1078, 1108, 1110, 1113, 1118, 1120, 1134, 1136, 1142, 1143, 1144, 1148, 1152, 1153, 1154, 1166, 1168, 1189, 1190, 1192, 1205, 1212, 1215, 1216, 1223, 1237, 1246, 1255, 1259, 1264, 1269, 1280, 1284, 1292, 1304, 1305, 1309, 1311, 1314, 1315, 1319, 1323, 1326, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1346, 1347, 1348, 1349, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1367, 1368, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1391, 1392, 1395, 1396, 1401, 1402, 1403, 1404, 1405, 1406, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1439, 1440, 1442, 1443, 1444, 1445, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1491, 1492, 1493, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1508, 1515, 1516, 1519, 1520, 1525, 1535, 1536, 1538, 1541, 1548, 1549, 1550, 1559, 1561, 1567, 1568, 1574, 1596, 1605, 1613, 1617, 1622, 1623, 1625, 1626, 1628, 1631, 1632, 1633, 1634, 1638, 1639, 1640, 1642, 1646, 1651, 1652, 1653, 1655, 1656, 1665, 1673, 1686, 1687, 1688, 1689, 1692, 1693, 1695, 1696, 1697, 1703, 1706, 1710, 1720, 1722, 1723, 1724, 1726, 1727, 1728, 1733, 1735, 1736, 1739, 1740, 1741, 1742, 1750, 1754, 1757, 1758, 1760, 1761, 1762, 1763, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1788, 1793, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1807, 1808, 1809, 1810, 1811, 1812, 1816, 1830, 1831, 1832, 1840, 1842, 1847, 1848, 1852, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1866, 1869, 1871, 1872, 1873, 1874, 1875, 1880, 1883, 1885, 1888, 1891, 1894, 1896, 1898, 1901, 1904, 1906, 1907, 1909, 1911, 1914, 1915, 1916, 1917, 1919, 1922, 1923, 1924, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1941, 1944, 1945, 1946, 1953, 1956, 1958, 1959], "expect": [0, 1, 3, 5, 7, 9, 20, 21, 23, 25, 27, 31, 38, 40, 42, 44, 46, 51, 52, 54, 68, 667, 684, 747, 841, 888, 889, 890, 891, 892, 893, 1011, 1086, 1088, 1105, 1106, 1107, 1126, 1127, 1166, 1189, 1192, 1207, 1208, 1236, 1257, 1258, 1292, 1344, 1345, 1361, 1377, 1378, 1379, 1380, 1389, 1390, 1391, 1395, 1396, 1397, 1407, 1408, 1409, 1425, 1431, 1432, 1440, 1442, 1458, 1464, 1468, 1470, 1472, 1477, 1515, 1521, 1535, 1559, 1567, 1568, 1580, 1593, 1594, 1595, 1596, 1605, 1639, 1698, 1754, 1824, 1859, 1868, 1869, 1875, 1893, 1897, 1900, 1901, 1904, 1911, 1914, 1915, 1918, 1919, 1920, 1923, 1927, 1932, 1934, 1942, 1945, 1946, 1950, 1952], "alwai": [0, 5, 7, 13, 16, 20, 21, 23, 38, 42, 44, 46, 50, 54, 328, 435, 445, 781, 867, 885, 888, 894, 908, 917, 927, 933, 939, 961, 1011, 1022, 1052, 1060, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1096, 1097, 1098, 1099, 1101, 1104, 1108, 1149, 1150, 1192, 1202, 1207, 1222, 1227, 1228, 1229, 1230, 1232, 1233, 1245, 1248, 1249, 1250, 1251, 1255, 1257, 1321, 1341, 1343, 1344, 1345, 1362, 1388, 1389, 1390, 1398, 1399, 1400, 1407, 1408, 1409, 1425, 1461, 1464, 1596, 1605, 1638, 1737, 1738, 1764, 1811, 1815, 1847, 1850, 1873, 1874, 1885, 1888, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1903, 1904, 1915, 1916, 1922, 1923, 1925, 1927, 1930, 1933, 1934, 1941, 1944, 1945], "abov": [0, 1, 3, 14, 23, 29, 33, 40, 42, 44, 46, 47, 52, 54, 55, 57, 70, 604, 667, 779, 780, 867, 908, 917, 932, 1022, 1048, 1052, 1053, 1054, 1055, 1056, 1065, 1137, 1149, 1150, 1192, 1193, 1212, 1223, 1227, 1228, 1246, 1248, 1249, 1252, 1255, 1258, 1261, 1264, 1341, 1372, 1425, 1453, 1461, 1476, 1574, 1596, 1653, 1689, 1713, 1724, 1725, 1757, 1762, 1775, 1795, 1836, 1839, 1840, 1841, 1842, 1868, 1870, 1872, 1873, 1880, 1893, 1894, 1895, 1896, 1898, 1899, 1901, 1904, 1906, 1908, 1909, 1911, 1915, 1918, 1923, 1924, 1925, 1927, 1928, 1934, 1938, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1956], "our": [0, 3, 7, 8, 23, 36, 39, 40, 41, 43, 50, 51, 52, 54, 884, 1085, 1122, 1341, 1670, 1671, 1757, 1893, 1898, 1901, 1906, 1911, 1914, 1918, 1924, 1927, 1938, 1941, 1944, 1945, 1946, 1948, 1949, 1950, 1955, 1956], "NOT": [0, 20, 23, 31, 40, 41, 42, 54, 913, 966, 1000, 1192, 1274, 1365, 1605, 1606, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1650, 1660, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1893, 1911, 1925, 1927], "make": [0, 1, 2, 3, 4, 5, 8, 13, 14, 20, 21, 23, 25, 26, 28, 29, 31, 32, 37, 40, 41, 42, 43, 44, 50, 51, 54, 55, 65, 127, 210, 483, 766, 772, 848, 849, 880, 930, 931, 932, 968, 969, 971, 1053, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1106, 1107, 1192, 1196, 1201, 1202, 1221, 1222, 1234, 1235, 1236, 1264, 1303, 1341, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1386, 1425, 1435, 1472, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1524, 1526, 1535, 1574, 1593, 1605, 1612, 1628, 1645, 1691, 1754, 1787, 1797, 1798, 1799, 1801, 1802, 1833, 1850, 1853, 1868, 1870, 1872, 1873, 1877, 1883, 1885, 1886, 1888, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1908, 1910, 1911, 1914, 1915, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1930, 1932, 1936, 1938, 1943, 1944, 1945, 1946, 1948, 1950, 1952, 1955, 1956, 1957], "guarante": [0, 1, 5, 9, 20, 23, 25, 27, 29, 40, 42, 44, 51, 53, 54, 55, 863, 939, 1192, 1201, 1362, 1425, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1787, 1789, 1850, 1893, 1895, 1896, 1907, 1908, 1915, 1917, 1919, 1923, 1925, 1944], "encount": [0, 5, 23, 51, 53, 54, 667, 1605, 1870, 1873, 1875, 1879, 1895, 1907, 1915, 1918, 1942, 1946, 1949, 1952, 1954, 1956], "nan": [0, 1, 29, 414, 415, 486, 671, 673, 676, 677, 678, 681, 684, 685, 868, 872, 907, 923, 1066, 1067, 1068, 1111, 1112, 1113, 1152, 1181, 1182, 1184, 1185, 1231, 1238, 1251, 1254, 1267, 1272, 1290, 1291, 1295, 1319, 1320, 1321, 1322, 1323, 1524, 1609, 1707, 1744, 1749, 1804, 1838, 1850, 1871, 1880, 1892, 1893, 1899, 1907, 1928, 1934], "verifi": [0, 23, 54, 75, 895, 1048, 1665, 1666, 1684, 1836, 1868, 1870, 1882, 1898, 1901, 1911, 1916, 1948], "compat": [0, 1, 13, 20, 25, 29, 31, 44, 46, 50, 51, 54, 55, 484, 485, 590, 604, 667, 802, 803, 804, 877, 920, 950, 951, 1192, 1197, 1209, 1222, 1233, 1246, 1249, 1425, 1431, 1468, 1469, 1470, 1471, 1472, 1535, 1649, 1660, 1662, 1736, 1868, 1869, 1872, 1873, 1879, 1885, 1886, 1892, 1898, 1909, 1911, 1915, 1917, 1918, 1921, 1923, 1927, 1929, 1935], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 42, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 142, 144, 161, 172, 179, 196, 212, 213, 214, 215, 216, 221, 242, 248, 251, 277, 286, 288, 299, 301, 303, 305, 309, 340, 389, 390, 414, 415, 432, 435, 436, 441, 468, 470, 474, 475, 483, 494, 495, 500, 502, 504, 507, 525, 530, 531, 534, 543, 545, 547, 565, 567, 568, 570, 571, 572, 574, 575, 576, 582, 583, 584, 585, 592, 594, 595, 604, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 699, 700, 701, 702, 703, 704, 705, 706, 710, 711, 712, 713, 714, 717, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 738, 739, 740, 742, 743, 744, 745, 747, 755, 756, 757, 759, 760, 761, 762, 765, 767, 769, 770, 772, 781, 783, 786, 789, 804, 807, 808, 809, 812, 841, 843, 852, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 885, 888, 889, 890, 892, 895, 896, 898, 900, 901, 904, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 923, 926, 927, 928, 929, 930, 931, 932, 933, 934, 937, 948, 949, 952, 953, 954, 955, 956, 957, 965, 971, 980, 982, 1008, 1009, 1035, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1063, 1065, 1067, 1068, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1123, 1124, 1125, 1126, 1127, 1131, 1132, 1133, 1134, 1135, 1145, 1149, 1151, 1152, 1153, 1154, 1155, 1158, 1162, 1166, 1169, 1177, 1188, 1189, 1190, 1192, 1196, 1198, 1199, 1203, 1211, 1212, 1213, 1214, 1215, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1253, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1272, 1273, 1274, 1275, 1276, 1278, 1281, 1285, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1310, 1313, 1314, 1315, 1317, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1329, 1331, 1332, 1333, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1411, 1413, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1452, 1456, 1458, 1459, 1460, 1462, 1464, 1467, 1468, 1470, 1472, 1473, 1474, 1476, 1477, 1480, 1481, 1482, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1522, 1524, 1527, 1528, 1529, 1532, 1533, 1534, 1535, 1539, 1540, 1542, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1559, 1560, 1561, 1562, 1563, 1564, 1567, 1568, 1570, 1574, 1575, 1578, 1580, 1583, 1589, 1590, 1591, 1592, 1593, 1596, 1605, 1609, 1612, 1613, 1617, 1622, 1623, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1638, 1639, 1641, 1642, 1644, 1645, 1646, 1647, 1649, 1651, 1652, 1653, 1657, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1704, 1706, 1707, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1739, 1740, 1741, 1742, 1744, 1745, 1749, 1751, 1752, 1753, 1756, 1758, 1762, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1787, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1810, 1811, 1812, 1814, 1815, 1817, 1818, 1824, 1825, 1827, 1828, 1829, 1830, 1831, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1844, 1845, 1847, 1848, 1849, 1850, 1852, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1864, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1880, 1886, 1887, 1888, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1924, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1950, 1951, 1954, 1955, 1957, 1959], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 11, 13, 17, 18, 20, 21, 23, 29, 38, 44, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 142, 179, 196, 221, 248, 277, 286, 301, 303, 305, 309, 389, 390, 432, 458, 486, 500, 502, 504, 510, 524, 531, 545, 547, 571, 572, 573, 574, 575, 594, 672, 673, 677, 684, 721, 726, 727, 728, 729, 730, 732, 733, 747, 749, 760, 761, 848, 849, 852, 867, 873, 874, 875, 888, 891, 893, 907, 910, 917, 918, 919, 923, 925, 929, 932, 933, 934, 937, 952, 956, 1044, 1046, 1048, 1055, 1057, 1059, 1060, 1063, 1064, 1065, 1068, 1081, 1083, 1085, 1086, 1092, 1093, 1096, 1101, 1104, 1105, 1108, 1111, 1113, 1114, 1115, 1123, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1135, 1145, 1151, 1153, 1155, 1157, 1158, 1169, 1177, 1181, 1198, 1202, 1203, 1212, 1213, 1214, 1217, 1220, 1221, 1238, 1241, 1244, 1247, 1248, 1249, 1250, 1255, 1256, 1259, 1261, 1262, 1264, 1265, 1266, 1267, 1268, 1274, 1278, 1285, 1286, 1292, 1293, 1297, 1322, 1324, 1325, 1327, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1342, 1343, 1344, 1345, 1349, 1350, 1351, 1352, 1354, 1355, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1379, 1380, 1381, 1386, 1388, 1389, 1390, 1391, 1392, 1395, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1413, 1416, 1421, 1422, 1425, 1432, 1435, 1439, 1440, 1446, 1447, 1448, 1449, 1450, 1453, 1456, 1462, 1464, 1468, 1470, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1490, 1491, 1499, 1500, 1502, 1503, 1507, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1519, 1520, 1522, 1524, 1527, 1535, 1559, 1561, 1567, 1583, 1593, 1594, 1595, 1605, 1617, 1627, 1630, 1632, 1633, 1635, 1640, 1641, 1643, 1645, 1651, 1652, 1653, 1655, 1656, 1660, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1686, 1692, 1696, 1702, 1704, 1706, 1707, 1709, 1710, 1713, 1714, 1717, 1718, 1719, 1720, 1724, 1729, 1730, 1733, 1734, 1740, 1741, 1742, 1749, 1762, 1769, 1771, 1772, 1773, 1774, 1777, 1778, 1787, 1793, 1795, 1796, 1797, 1798, 1800, 1803, 1811, 1814, 1815, 1816, 1817, 1818, 1825, 1827, 1829, 1830, 1831, 1833, 1834, 1836, 1845, 1846, 1850, 1855, 1861, 1862, 1863, 1866, 1870, 1871, 1872, 1873, 1874, 1880, 1887, 1888, 1891, 1892, 1893, 1894, 1896, 1898, 1900, 1901, 1904, 1905, 1909, 1910, 1911, 1914, 1916, 1918, 1923, 1927, 1928, 1930, 1932, 1933, 1934, 1943, 1954, 1955, 1956], "growth_interv": 0, "2000": [0, 23, 27, 1083, 1085, 1092, 1101, 1114, 1269, 1477, 1689, 1717, 1767, 1768, 1829], "get_backoff_factor": 0, "python": [0, 1, 3, 4, 9, 13, 14, 17, 20, 23, 27, 29, 30, 31, 33, 34, 37, 38, 40, 41, 44, 46, 54, 55, 62, 63, 340, 576, 611, 667, 768, 867, 888, 889, 890, 891, 892, 893, 895, 896, 925, 926, 938, 939, 941, 1002, 1008, 1009, 1011, 1060, 1065, 1083, 1085, 1113, 1118, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1167, 1168, 1190, 1192, 1193, 1195, 1196, 1197, 1202, 1203, 1207, 1263, 1426, 1427, 1435, 1436, 1574, 1605, 1707, 1729, 1733, 1753, 1754, 1790, 1853, 1854, 1861, 1868, 1877, 1879, 1884, 1885, 1887, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1903, 1906, 1909, 1910, 1915, 1918, 1922, 1923, 1924, 1925, 1930, 1933, 1934, 1938, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1952, 1953, 1956, 1957, 1958], "contain": [0, 1, 2, 3, 5, 11, 13, 14, 20, 23, 24, 27, 28, 29, 31, 33, 34, 38, 41, 44, 46, 53, 54, 55, 56, 61, 63, 71, 76, 138, 142, 179, 183, 196, 278, 299, 301, 303, 307, 309, 458, 470, 531, 590, 594, 673, 684, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 747, 801, 824, 828, 864, 879, 880, 888, 889, 890, 891, 892, 893, 894, 904, 907, 908, 909, 917, 919, 923, 941, 952, 953, 957, 967, 978, 979, 980, 981, 982, 1011, 1065, 1099, 1100, 1102, 1108, 1128, 1129, 1132, 1133, 1149, 1150, 1153, 1154, 1162, 1166, 1183, 1190, 1192, 1193, 1198, 1199, 1202, 1207, 1208, 1211, 1222, 1228, 1229, 1230, 1231, 1233, 1235, 1237, 1238, 1254, 1263, 1281, 1285, 1292, 1315, 1321, 1333, 1342, 1361, 1362, 1368, 1369, 1372, 1377, 1378, 1380, 1385, 1395, 1396, 1417, 1425, 1426, 1427, 1432, 1435, 1440, 1442, 1453, 1457, 1464, 1476, 1507, 1515, 1516, 1518, 1589, 1596, 1599, 1600, 1605, 1613, 1614, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1645, 1646, 1649, 1651, 1660, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1703, 1706, 1731, 1745, 1749, 1810, 1811, 1815, 1831, 1838, 1840, 1842, 1847, 1848, 1852, 1853, 1857, 1861, 1869, 1870, 1872, 1873, 1874, 1880, 1883, 1887, 1888, 1892, 1893, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1907, 1909, 1911, 1914, 1915, 1916, 1917, 1918, 1920, 1921, 1923, 1925, 1927, 1929, 1930, 1932, 1933, 1935, 1936, 1937, 1940, 1942, 1943, 1945, 1948, 1949, 1950, 1953, 1955, 1956, 1957, 1958], "backoff": [0, 1923], "get_growth_factor": 0, "growth": [0, 8], "get_growth_interv": 0, "int": [0, 2, 3, 17, 20, 21, 23, 25, 27, 28, 29, 31, 34, 37, 38, 40, 41, 43, 44, 46, 54, 55, 62, 63, 64, 65, 76, 204, 206, 220, 221, 230, 242, 301, 303, 305, 309, 424, 431, 432, 434, 436, 444, 459, 463, 480, 484, 486, 500, 502, 504, 507, 524, 530, 532, 533, 545, 547, 553, 570, 571, 572, 574, 575, 594, 604, 667, 680, 682, 683, 684, 686, 742, 743, 762, 764, 766, 767, 772, 773, 774, 806, 861, 862, 863, 865, 879, 886, 899, 908, 910, 917, 924, 926, 933, 938, 956, 957, 960, 961, 964, 965, 967, 969, 971, 973, 974, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 993, 994, 995, 997, 999, 1003, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1052, 1053, 1054, 1055, 1056, 1057, 1063, 1066, 1068, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1133, 1134, 1140, 1142, 1143, 1145, 1149, 1150, 1152, 1153, 1154, 1155, 1166, 1168, 1189, 1190, 1192, 1193, 1195, 1198, 1203, 1211, 1213, 1223, 1224, 1244, 1245, 1248, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1271, 1278, 1279, 1284, 1289, 1291, 1292, 1294, 1297, 1299, 1300, 1301, 1305, 1315, 1320, 1321, 1322, 1323, 1324, 1325, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1368, 1369, 1371, 1372, 1373, 1374, 1376, 1378, 1380, 1388, 1389, 1390, 1393, 1394, 1396, 1397, 1401, 1402, 1403, 1404, 1405, 1406, 1410, 1412, 1413, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1427, 1430, 1432, 1433, 1436, 1437, 1438, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1458, 1460, 1461, 1464, 1468, 1470, 1472, 1473, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1506, 1507, 1508, 1515, 1516, 1523, 1526, 1535, 1543, 1559, 1560, 1561, 1565, 1566, 1580, 1581, 1589, 1593, 1594, 1595, 1605, 1613, 1622, 1623, 1625, 1626, 1628, 1631, 1632, 1633, 1634, 1639, 1641, 1646, 1649, 1652, 1653, 1655, 1656, 1660, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1703, 1704, 1711, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1726, 1728, 1734, 1735, 1736, 1739, 1740, 1741, 1742, 1745, 1750, 1751, 1752, 1756, 1760, 1761, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1783, 1787, 1791, 1794, 1795, 1796, 1803, 1806, 1808, 1809, 1810, 1811, 1814, 1816, 1820, 1826, 1830, 1831, 1833, 1835, 1836, 1839, 1840, 1841, 1842, 1845, 1846, 1847, 1848, 1849, 1852, 1853, 1855, 1856, 1857, 1861, 1862, 1866, 1870, 1871, 1872, 1873, 1874, 1883, 1885, 1886, 1888, 1891, 1896, 1899, 1906, 1909, 1911, 1913, 1916, 1917, 1918, 1922, 1923, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1944, 1949, 1951, 1955, 1958, 1959], "interv": [0, 29, 42, 852, 953, 1115, 1306, 1307, 1698, 1722, 1723, 1771, 1883, 1896, 1917], "get_scal": [0, 1892], "sync": [0, 23, 27, 46, 53, 54, 1605, 1896, 1897, 1916, 1941, 1945], "is_en": [0, 1790, 1797, 1798, 1799, 1800, 1801, 1802], "indic": [0, 1, 2, 3, 20, 21, 23, 24, 28, 29, 40, 44, 68, 71, 72, 179, 196, 209, 301, 303, 305, 306, 307, 309, 458, 500, 502, 504, 531, 559, 560, 570, 601, 682, 683, 722, 732, 733, 861, 862, 863, 864, 865, 885, 895, 896, 923, 930, 931, 944, 962, 966, 968, 969, 971, 1005, 1044, 1045, 1068, 1123, 1124, 1126, 1127, 1128, 1132, 1133, 1134, 1145, 1166, 1190, 1192, 1197, 1205, 1208, 1209, 1213, 1222, 1233, 1235, 1246, 1249, 1263, 1271, 1279, 1281, 1283, 1289, 1292, 1294, 1297, 1303, 1315, 1321, 1325, 1333, 1334, 1335, 1336, 1361, 1368, 1369, 1373, 1374, 1419, 1420, 1421, 1422, 1423, 1428, 1430, 1431, 1486, 1487, 1488, 1507, 1515, 1516, 1519, 1520, 1536, 1551, 1552, 1553, 1561, 1574, 1589, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1631, 1632, 1651, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1693, 1695, 1714, 1749, 1787, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1825, 1826, 1830, 1833, 1839, 1840, 1841, 1842, 1847, 1848, 1850, 1851, 1853, 1861, 1864, 1870, 1871, 1873, 1877, 1886, 1887, 1898, 1906, 1909, 1911, 1913, 1923, 1927, 1931, 1932, 1934, 1947, 1949, 1951, 1956], "load_state_dict": [0, 21, 25, 27, 46, 1192, 1263, 1425, 1596, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1868, 1869, 1904, 1909, 1918], "state_dict": [0, 21, 25, 27, 44, 46, 823, 824, 1192, 1425, 1596, 1631, 1649, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1868, 1882, 1897, 1904, 1906, 1909, 1911, 1918, 1936], "load": [0, 1, 11, 13, 14, 21, 25, 27, 44, 46, 824, 849, 903, 939, 967, 1196, 1202, 1207, 1369, 1596, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1745, 1869, 1870, 1881, 1882, 1887, 1893, 1896, 1903, 1904, 1908, 1910, 1911, 1923, 1932, 1948, 1950, 1954, 1956], "scaler": [0, 1892, 1896], "dict": [0, 3, 5, 20, 21, 23, 24, 25, 27, 28, 29, 31, 34, 38, 42, 44, 46, 48, 50, 54, 667, 779, 780, 781, 802, 803, 804, 823, 841, 897, 939, 1008, 1009, 1022, 1031, 1121, 1131, 1133, 1190, 1191, 1192, 1193, 1198, 1203, 1207, 1208, 1263, 1264, 1362, 1372, 1425, 1426, 1435, 1476, 1596, 1605, 1628, 1647, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1861, 1868, 1870, 1871, 1873, 1874, 1882, 1883, 1898, 1904, 1909, 1911, 1913, 1914, 1923, 1924, 1932, 1936, 1937, 1952, 1955, 1957], "object": [0, 1, 3, 5, 6, 8, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 40, 42, 44, 46, 53, 54, 55, 57, 76, 194, 197, 590, 780, 781, 841, 848, 867, 877, 878, 879, 904, 906, 939, 989, 1000, 1040, 1065, 1104, 1116, 1118, 1123, 1124, 1126, 1127, 1128, 1132, 1178, 1179, 1192, 1198, 1199, 1202, 1203, 1207, 1208, 1223, 1244, 1248, 1261, 1263, 1264, 1284, 1362, 1364, 1365, 1366, 1370, 1388, 1389, 1390, 1425, 1435, 1464, 1605, 1615, 1630, 1639, 1640, 1643, 1644, 1645, 1660, 1662, 1663, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1745, 1819, 1820, 1823, 1851, 1854, 1868, 1872, 1873, 1874, 1877, 1881, 1882, 1885, 1889, 1893, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1906, 1908, 1909, 1910, 1911, 1914, 1918, 1920, 1921, 1922, 1923, 1925, 1929, 1930, 1932, 1934, 1942, 1943, 1945, 1949, 1952, 1955, 1957, 1958, 1959], "unmodifi": [0, 23, 1943], "iter": [0, 1, 2, 3, 7, 21, 23, 24, 25, 27, 29, 41, 43, 46, 54, 55, 60, 978, 979, 980, 981, 982, 1011, 1014, 1016, 1037, 1192, 1264, 1425, 1426, 1427, 1435, 1436, 1605, 1606, 1609, 1610, 1611, 1613, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1646, 1648, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1692, 1703, 1773, 1816, 1871, 1873, 1874, 1885, 1887, 1892, 1893, 1894, 1896, 1897, 1898, 1901, 1904, 1914, 1917, 1922, 1932, 1946, 1949, 1955, 1956, 1957], "set_backoff_factor": 0, "new_factor": 0, "new_scal": 0, "set_growth_factor": 0, "set_growth_interv": 0, "new_interv": 0, "It": [0, 1, 3, 4, 5, 7, 8, 16, 17, 20, 21, 23, 24, 25, 28, 29, 31, 33, 37, 38, 39, 40, 41, 42, 44, 46, 48, 50, 51, 52, 53, 54, 55, 72, 138, 184, 460, 461, 500, 502, 504, 531, 544, 876, 877, 878, 879, 880, 884, 939, 941, 944, 946, 950, 951, 982, 987, 993, 994, 1012, 1013, 1032, 1033, 1041, 1088, 1117, 1122, 1125, 1133, 1134, 1153, 1189, 1192, 1193, 1198, 1202, 1224, 1228, 1232, 1235, 1237, 1239, 1240, 1245, 1249, 1250, 1252, 1253, 1255, 1257, 1260, 1261, 1263, 1264, 1272, 1333, 1342, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1362, 1372, 1419, 1420, 1421, 1422, 1423, 1425, 1432, 1453, 1456, 1476, 1478, 1526, 1536, 1580, 1598, 1599, 1600, 1603, 1604, 1605, 1613, 1614, 1617, 1638, 1641, 1642, 1650, 1660, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1701, 1720, 1733, 1749, 1759, 1765, 1772, 1794, 1846, 1861, 1868, 1872, 1873, 1883, 1885, 1887, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1928, 1929, 1931, 1935, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1950, 1955, 1956, 1958], "five": [0, 1873, 1909], "entri": [0, 3, 23, 24, 27, 29, 38, 40, 41, 303, 722, 845, 846, 904, 1008, 1009, 1055, 1106, 1107, 1166, 1192, 1212, 1368, 1369, 1425, 1431, 1515, 1516, 1601, 1602, 1623, 1624, 1632, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1794, 1870, 1873, 1874, 1880, 1888, 1893, 1897, 1898, 1901, 1904, 1921, 1927, 1932, 1936, 1942, 1943, 1944, 1949], "_growth_track": 0, "recent": [0, 1, 7, 8, 43, 53, 1167, 1177, 1790, 1872, 1873, 1888, 1898, 1907, 1908, 1927, 1934, 1953, 1956], "consecut": [0, 23, 46, 597, 1640, 1685, 1836, 1847, 1848, 1887, 1911], "unskip": 0, "empti": [0, 3, 23, 25, 31, 38, 46, 51, 54, 221, 309, 500, 502, 510, 524, 532, 804, 909, 910, 920, 926, 1065, 1067, 1190, 1193, 1217, 1237, 1238, 1243, 1250, 1273, 1274, 1275, 1276, 1283, 1342, 1361, 1369, 1432, 1497, 1516, 1562, 1645, 1657, 1662, 1800, 1815, 1829, 1850, 1867, 1870, 1871, 1872, 1873, 1875, 1881, 1886, 1887, 1888, 1891, 1894, 1896, 1898, 1911, 1913, 1915, 1927, 1928, 1935, 1944, 1945, 1951, 1954], "wish": [0, 1128, 1806, 1892, 1896, 1898, 1899], "checkpoint": [0, 27, 41, 43, 46, 903, 1263, 1605, 1660, 1868, 1869, 1882, 1900, 1909, 1916, 1925, 1941], "kwarg": [0, 1, 5, 13, 20, 23, 24, 27, 40, 44, 46, 54, 55, 567, 590, 734, 747, 749, 750, 808, 809, 811, 814, 877, 943, 969, 971, 1008, 1009, 1121, 1132, 1133, 1192, 1195, 1197, 1255, 1281, 1377, 1387, 1395, 1414, 1425, 1440, 1455, 1459, 1463, 1465, 1466, 1596, 1601, 1605, 1619, 1624, 1628, 1638, 1645, 1647, 1650, 1661, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1745, 1848, 1861, 1868, 1873, 1874, 1898, 1899, 1904, 1914, 1923, 1929, 1937, 1942, 1943, 1955, 1956, 1957], "carri": [0, 50, 324, 784, 825, 826, 844, 845, 1894, 1918], "out": [0, 1, 2, 3, 7, 8, 9, 11, 14, 17, 20, 23, 25, 28, 29, 37, 38, 41, 44, 47, 50, 54, 55, 59, 61, 221, 300, 302, 304, 306, 387, 389, 435, 483, 499, 501, 503, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 743, 747, 751, 759, 760, 761, 766, 768, 772, 784, 823, 825, 826, 844, 845, 852, 853, 854, 855, 856, 857, 858, 859, 864, 868, 869, 870, 871, 872, 881, 882, 883, 886, 895, 907, 909, 910, 911, 912, 913, 914, 915, 916, 919, 923, 926, 928, 929, 930, 931, 932, 934, 935, 937, 939, 947, 948, 949, 951, 952, 954, 955, 965, 970, 978, 980, 982, 1009, 1010, 1022, 1023, 1035, 1039, 1044, 1045, 1046, 1047, 1049, 1052, 1057, 1058, 1060, 1061, 1062, 1064, 1065, 1066, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1122, 1123, 1125, 1126, 1128, 1133, 1134, 1135, 1136, 1137, 1138, 1146, 1147, 1148, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1186, 1187, 1192, 1203, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1310, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1325, 1326, 1327, 1328, 1329, 1330, 1334, 1335, 1336, 1338, 1339, 1340, 1346, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1363, 1364, 1365, 1366, 1368, 1370, 1373, 1374, 1377, 1378, 1393, 1394, 1395, 1410, 1412, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1437, 1438, 1440, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1468, 1469, 1470, 1471, 1472, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1495, 1499, 1500, 1501, 1502, 1503, 1504, 1510, 1511, 1512, 1517, 1520, 1524, 1535, 1541, 1560, 1562, 1593, 1605, 1622, 1623, 1624, 1625, 1651, 1652, 1653, 1654, 1656, 1657, 1661, 1684, 1701, 1702, 1706, 1707, 1708, 1710, 1713, 1714, 1720, 1721, 1722, 1724, 1726, 1728, 1729, 1732, 1733, 1734, 1738, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1765, 1766, 1767, 1779, 1780, 1781, 1782, 1787, 1792, 1793, 1804, 1805, 1807, 1808, 1809, 1810, 1812, 1813, 1815, 1826, 1827, 1828, 1831, 1833, 1835, 1838, 1839, 1841, 1843, 1844, 1850, 1856, 1857, 1858, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1880, 1883, 1885, 1887, 1888, 1893, 1894, 1896, 1897, 1898, 1899, 1904, 1906, 1911, 1914, 1915, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1928, 1930, 1932, 1933, 1937, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1954, 1955, 1957, 1958], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 13, 14, 17, 18, 19, 20, 21, 23, 25, 27, 28, 29, 31, 37, 38, 39, 40, 41, 44, 46, 48, 50, 51, 54, 55, 57, 62, 63, 70, 71, 72, 474, 475, 604, 667, 747, 766, 772, 779, 780, 781, 787, 801, 802, 803, 804, 806, 807, 808, 809, 811, 812, 841, 848, 849, 876, 877, 878, 882, 900, 901, 923, 928, 1008, 1022, 1065, 1083, 1085, 1109, 1118, 1131, 1145, 1192, 1193, 1201, 1205, 1212, 1223, 1234, 1244, 1247, 1248, 1261, 1264, 1283, 1286, 1333, 1342, 1348, 1361, 1369, 1372, 1377, 1395, 1425, 1440, 1456, 1472, 1476, 1543, 1574, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1612, 1652, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1692, 1695, 1703, 1714, 1742, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1790, 1791, 1792, 1793, 1800, 1811, 1836, 1844, 1850, 1853, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1879, 1880, 1881, 1882, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1933, 1934, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1954, 1956, 1957, 1958, 1959], "two": [0, 1, 3, 4, 5, 6, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 37, 38, 40, 41, 44, 46, 50, 51, 54, 72, 73, 570, 571, 572, 574, 575, 594, 604, 667, 679, 681, 747, 780, 874, 877, 890, 895, 927, 929, 975, 1014, 1016, 1044, 1045, 1053, 1062, 1065, 1071, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1111, 1112, 1121, 1131, 1153, 1155, 1181, 1190, 1192, 1202, 1205, 1212, 1215, 1217, 1222, 1224, 1227, 1228, 1233, 1234, 1239, 1244, 1247, 1248, 1250, 1251, 1253, 1255, 1260, 1263, 1286, 1289, 1292, 1294, 1297, 1322, 1339, 1341, 1342, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1372, 1377, 1385, 1386, 1392, 1394, 1395, 1416, 1417, 1419, 1425, 1428, 1429, 1430, 1432, 1433, 1439, 1440, 1456, 1457, 1472, 1473, 1474, 1476, 1496, 1497, 1507, 1526, 1536, 1543, 1559, 1567, 1574, 1612, 1617, 1639, 1649, 1651, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1688, 1689, 1691, 1695, 1714, 1729, 1742, 1757, 1795, 1800, 1815, 1831, 1835, 1836, 1838, 1858, 1862, 1868, 1870, 1872, 1873, 1877, 1879, 1880, 1886, 1887, 1888, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1904, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1919, 1923, 1924, 1925, 1927, 1928, 1932, 1933, 1934, 1936, 1937, 1941, 1942, 1944, 1945, 1951, 1954, 1956], "unscale_": [0, 1892], "unless": [0, 1, 4, 7, 21, 23, 42, 44, 46, 47, 54, 138, 475, 486, 827, 845, 884, 910, 966, 1000, 1121, 1192, 1235, 1240, 1253, 1263, 1292, 1379, 1425, 1472, 1600, 1628, 1647, 1678, 1684, 1749, 1850, 1873, 1879, 1893, 1896, 1908, 1911, 1915, 1919, 1944], "explicitli": [0, 8, 13, 23, 28, 33, 46, 74, 1002, 1053, 1055, 1065, 1154, 1232, 1245, 1249, 1257, 1299, 1535, 1593, 1695, 1811, 1870, 1872, 1873, 1874, 1879, 1896, 1898, 1901, 1903, 1909, 1911, 1915, 1916, 1922, 1923, 1927, 1944], "earlier": [0, 1, 6, 46, 1815, 1893, 1896, 1900, 1903, 1909, 1911, 1917], "part": [0, 1, 3, 4, 5, 6, 7, 9, 13, 14, 17, 20, 21, 23, 25, 29, 40, 41, 44, 46, 50, 51, 54, 70, 71, 828, 894, 947, 1065, 1182, 1184, 1185, 1188, 1192, 1202, 1204, 1207, 1208, 1222, 1228, 1230, 1239, 1246, 1249, 1425, 1464, 1574, 1605, 1615, 1687, 1714, 1796, 1836, 1839, 1840, 1841, 1842, 1868, 1869, 1870, 1872, 1873, 1881, 1882, 1892, 1893, 1896, 1898, 1900, 1901, 1904, 1909, 1911, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1932, 1934, 1942, 1945, 1946, 1947, 1954, 1955, 1956], "check": [0, 4, 5, 11, 13, 20, 23, 24, 29, 31, 40, 44, 46, 55, 56, 61, 63, 209, 328, 486, 681, 848, 884, 886, 887, 895, 896, 941, 968, 969, 971, 975, 1004, 1022, 1179, 1189, 1192, 1207, 1208, 1221, 1222, 1227, 1228, 1230, 1233, 1235, 1240, 1246, 1249, 1253, 1255, 1256, 1281, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1425, 1596, 1605, 1614, 1617, 1630, 1640, 1664, 1665, 1666, 1790, 1797, 1798, 1799, 1800, 1801, 1802, 1851, 1853, 1868, 1869, 1872, 1873, 1874, 1886, 1887, 1892, 1896, 1898, 1899, 1900, 1903, 1904, 1905, 1908, 1911, 1914, 1915, 1916, 1917, 1923, 1927, 1932, 1934, 1940, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1956, 1957], "inf": [0, 29, 46, 671, 673, 676, 677, 678, 872, 907, 923, 1181, 1182, 1184, 1186, 1187, 1223, 1238, 1244, 1248, 1251, 1261, 1272, 1319, 1415, 1458, 1468, 1574, 1609, 1623, 1632, 1652, 1742, 1749, 1892, 1893, 1899, 1907, 1928, 1934, 1956], "found": [0, 7, 14, 15, 17, 40, 54, 71, 73, 74, 75, 923, 965, 1044, 1045, 1192, 1196, 1213, 1289, 1292, 1294, 1297, 1321, 1337, 1347, 1370, 1425, 1452, 1680, 1749, 1868, 1870, 1873, 1888, 1892, 1898, 1901, 1904, 1906, 1911, 1915, 1917, 1918, 1923, 1932, 1942, 1945, 1950, 1953, 1955, 1957], "otherwis": [0, 1, 3, 5, 7, 9, 11, 13, 20, 23, 24, 30, 33, 44, 46, 47, 51, 54, 76, 197, 309, 316, 320, 324, 326, 330, 331, 482, 491, 547, 567, 568, 570, 590, 604, 667, 673, 674, 675, 676, 677, 680, 682, 683, 684, 686, 722, 747, 755, 756, 771, 781, 804, 807, 808, 848, 849, 852, 879, 882, 890, 895, 907, 923, 1006, 1065, 1071, 1104, 1116, 1183, 1189, 1192, 1195, 1198, 1204, 1213, 1237, 1252, 1261, 1263, 1264, 1279, 1284, 1289, 1291, 1292, 1294, 1296, 1297, 1320, 1323, 1339, 1340, 1359, 1361, 1364, 1365, 1366, 1370, 1377, 1381, 1382, 1383, 1384, 1386, 1395, 1411, 1425, 1429, 1430, 1431, 1432, 1433, 1435, 1440, 1441, 1443, 1456, 1462, 1464, 1467, 1468, 1470, 1472, 1473, 1474, 1492, 1493, 1526, 1528, 1529, 1533, 1568, 1578, 1605, 1612, 1617, 1638, 1642, 1650, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1684, 1701, 1703, 1711, 1713, 1720, 1729, 1736, 1749, 1757, 1765, 1809, 1810, 1811, 1814, 1846, 1847, 1848, 1856, 1857, 1864, 1868, 1870, 1872, 1873, 1880, 1881, 1886, 1892, 1898, 1899, 1906, 1911, 1918, 1919, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1931, 1932, 1934, 1957], "skip": [0, 40, 846, 941, 1065, 1118, 1221, 1222, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1783, 1852, 1870, 1892, 1893, 1896, 1897, 1898, 1904, 1914, 1917, 1923, 1944, 1946, 1947, 1949], "avoid": [0, 5, 8, 9, 20, 23, 28, 29, 38, 41, 46, 54, 55, 62, 63, 179, 196, 435, 768, 852, 880, 920, 939, 1022, 1192, 1237, 1263, 1360, 1391, 1392, 1416, 1425, 1434, 1439, 1476, 1506, 1536, 1560, 1567, 1605, 1613, 1684, 1735, 1764, 1811, 1829, 1847, 1869, 1883, 1887, 1893, 1895, 1896, 1900, 1901, 1904, 1916, 1923, 1924, 1931, 1932, 1933, 1944, 1945, 1946, 1947, 1949], "corrupt": [0, 23, 40, 1362, 1896, 1906], "param": [0, 1, 27, 29, 32, 40, 46, 48, 50, 54, 475, 751, 782, 1121, 1131, 1192, 1210, 1425, 1431, 1435, 1436, 1604, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1697, 1852, 1871, 1881, 1891, 1892, 1896, 1897, 1914, 1957], "appli": [0, 1, 3, 5, 8, 21, 25, 27, 28, 29, 31, 33, 40, 44, 46, 50, 51, 52, 54, 55, 65, 69, 70, 71, 107, 309, 386, 459, 500, 504, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 722, 725, 726, 727, 728, 729, 730, 745, 747, 753, 754, 755, 756, 757, 758, 759, 760, 761, 767, 768, 769, 770, 771, 797, 798, 799, 800, 827, 845, 884, 886, 887, 895, 912, 915, 941, 952, 1053, 1055, 1060, 1069, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1113, 1121, 1122, 1129, 1132, 1133, 1192, 1196, 1241, 1264, 1281, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1367, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1439, 1440, 1443, 1444, 1445, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1478, 1479, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1519, 1520, 1521, 1522, 1525, 1527, 1528, 1529, 1530, 1534, 1535, 1536, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1550, 1554, 1559, 1567, 1568, 1569, 1570, 1574, 1575, 1576, 1577, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1596, 1601, 1602, 1605, 1612, 1613, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1638, 1639, 1646, 1647, 1649, 1650, 1652, 1668, 1680, 1684, 1697, 1710, 1715, 1716, 1717, 1718, 1719, 1759, 1791, 1792, 1794, 1811, 1847, 1848, 1849, 1861, 1870, 1873, 1880, 1885, 1887, 1892, 1893, 1896, 1897, 1898, 1899, 1901, 1904, 1907, 1911, 1914, 1915, 1916, 1918, 1921, 1924, 1927, 1928, 1940, 1941, 1943, 1947, 1955], "argument": [0, 1, 3, 4, 5, 8, 9, 13, 17, 20, 23, 24, 25, 27, 29, 31, 38, 41, 43, 44, 46, 50, 51, 53, 54, 55, 61, 62, 63, 72, 76, 138, 184, 197, 301, 309, 432, 433, 434, 435, 436, 474, 475, 500, 504, 547, 567, 568, 570, 571, 572, 574, 575, 590, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 721, 725, 726, 727, 728, 729, 730, 780, 781, 786, 806, 807, 808, 811, 812, 813, 828, 844, 845, 848, 850, 852, 867, 868, 869, 870, 871, 872, 876, 877, 878, 879, 880, 884, 885, 886, 889, 891, 892, 893, 894, 895, 900, 901, 907, 908, 909, 911, 912, 913, 914, 915, 916, 917, 919, 923, 926, 928, 929, 930, 931, 932, 934, 936, 937, 943, 947, 951, 952, 954, 955, 957, 965, 987, 989, 993, 994, 1000, 1008, 1009, 1011, 1034, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1062, 1063, 1064, 1066, 1067, 1068, 1070, 1075, 1078, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1166, 1169, 1186, 1187, 1189, 1192, 1195, 1203, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1282, 1283, 1285, 1286, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1313, 1314, 1315, 1317, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1343, 1344, 1345, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1369, 1372, 1375, 1377, 1384, 1387, 1388, 1389, 1390, 1391, 1395, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1421, 1422, 1423, 1425, 1426, 1431, 1432, 1433, 1440, 1464, 1472, 1476, 1478, 1479, 1522, 1524, 1560, 1596, 1599, 1600, 1601, 1602, 1605, 1616, 1617, 1619, 1623, 1624, 1628, 1632, 1638, 1647, 1651, 1653, 1656, 1657, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1689, 1701, 1702, 1706, 1707, 1710, 1711, 1713, 1714, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1742, 1744, 1749, 1753, 1759, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1787, 1790, 1792, 1793, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1815, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1844, 1847, 1850, 1856, 1857, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1871, 1872, 1873, 1875, 1877, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1908, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1927, 1928, 1929, 1930, 1932, 1934, 1941, 1945, 1950, 1955, 1957, 1959], "keyword": [0, 1, 5, 20, 23, 24, 27, 44, 51, 54, 55, 61, 72, 76, 301, 309, 432, 433, 434, 435, 436, 568, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 848, 852, 867, 868, 869, 870, 871, 872, 907, 908, 909, 911, 912, 913, 914, 915, 916, 917, 919, 923, 926, 928, 930, 931, 932, 934, 936, 937, 947, 951, 952, 954, 955, 957, 965, 978, 980, 982, 1008, 1009, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1057, 1060, 1062, 1064, 1066, 1067, 1068, 1070, 1075, 1078, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1118, 1119, 1120, 1121, 1134, 1135, 1136, 1137, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1166, 1169, 1186, 1187, 1192, 1195, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1282, 1283, 1285, 1286, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1313, 1314, 1315, 1317, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1329, 1362, 1384, 1387, 1425, 1599, 1600, 1605, 1617, 1619, 1624, 1628, 1647, 1651, 1653, 1656, 1657, 1660, 1701, 1702, 1706, 1707, 1710, 1711, 1713, 1714, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1742, 1744, 1749, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1787, 1790, 1793, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1807, 1808, 1809, 1810, 1812, 1814, 1815, 1826, 1827, 1828, 1829, 1833, 1836, 1838, 1839, 1840, 1841, 1842, 1844, 1850, 1856, 1857, 1858, 1863, 1864, 1866, 1867, 1868, 1873, 1874, 1887, 1888, 1898, 1907, 1911, 1914, 1923, 1927, 1928, 1932, 1957], "closur": [0, 27, 55, 62, 63, 941, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1684, 1947], "divid": [0, 5, 21, 23, 27, 226, 570, 571, 572, 982, 1060, 1063, 1083, 1101, 1110, 1154, 1155, 1202, 1341, 1342, 1348, 1349, 1359, 1385, 1386, 1392, 1416, 1417, 1428, 1429, 1430, 1439, 1456, 1457, 1473, 1474, 1496, 1497, 1507, 1508, 1536, 1559, 1567, 1605, 1815, 1862, 1871, 1913], "need": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 38, 40, 41, 43, 44, 46, 48, 49, 51, 54, 55, 64, 65, 73, 74, 138, 242, 458, 475, 482, 486, 570, 667, 721, 722, 806, 807, 808, 811, 812, 813, 828, 845, 876, 880, 884, 885, 894, 920, 921, 929, 1002, 1011, 1018, 1053, 1055, 1065, 1086, 1088, 1108, 1121, 1192, 1285, 1315, 1361, 1368, 1421, 1422, 1423, 1425, 1431, 1468, 1470, 1472, 1499, 1500, 1501, 1592, 1605, 1617, 1619, 1623, 1625, 1653, 1660, 1684, 1730, 1735, 1749, 1808, 1836, 1851, 1853, 1869, 1870, 1872, 1873, 1880, 1881, 1885, 1887, 1888, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1921, 1923, 1924, 1925, 1927, 1929, 1930, 1934, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1952, 1954, 1956, 1957], "modifi": [0, 1, 17, 20, 21, 23, 24, 25, 27, 46, 54, 55, 248, 474, 475, 778, 825, 826, 827, 884, 886, 887, 900, 901, 941, 950, 951, 1145, 1189, 1192, 1195, 1196, 1211, 1368, 1425, 1468, 1470, 1472, 1515, 1516, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1610, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1684, 1687, 1695, 1777, 1870, 1873, 1886, 1892, 1896, 1898, 1899, 1904, 1909, 1915, 1916, 1918, 1923, 1928, 1931, 1933, 1937, 1943, 1944, 1945, 1946, 1952, 1956], "inspect": [0, 1, 23, 44, 46, 54, 903, 1192, 1203, 1892, 1898, 1903, 1915, 1919, 1930, 1946, 1948, 1950, 1957], "between": [0, 1, 2, 3, 7, 16, 17, 21, 23, 28, 29, 30, 40, 41, 42, 44, 46, 53, 54, 184, 500, 570, 571, 572, 574, 575, 594, 604, 676, 677, 678, 682, 683, 747, 759, 760, 761, 789, 844, 852, 871, 880, 882, 889, 891, 892, 893, 895, 896, 927, 939, 957, 968, 975, 977, 1024, 1028, 1042, 1043, 1048, 1065, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1116, 1145, 1152, 1189, 1192, 1203, 1227, 1228, 1250, 1255, 1322, 1341, 1342, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1364, 1365, 1366, 1370, 1372, 1377, 1386, 1392, 1401, 1402, 1403, 1404, 1405, 1406, 1416, 1418, 1419, 1420, 1425, 1428, 1429, 1430, 1434, 1453, 1456, 1457, 1458, 1473, 1474, 1476, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1523, 1548, 1549, 1550, 1564, 1580, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1633, 1634, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1688, 1689, 1695, 1697, 1706, 1714, 1718, 1719, 1724, 1725, 1729, 1754, 1808, 1809, 1810, 1811, 1815, 1835, 1836, 1856, 1857, 1870, 1872, 1873, 1874, 1880, 1885, 1888, 1892, 1893, 1895, 1896, 1897, 1901, 1902, 1904, 1906, 1908, 1909, 1911, 1914, 1916, 1918, 1919, 1923, 1925, 1927, 1929, 1932, 1936, 1941, 1949, 1954, 1956], "dure": [0, 1, 5, 13, 17, 21, 23, 25, 31, 32, 34, 40, 44, 46, 53, 54, 55, 69, 71, 72, 323, 475, 490, 491, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 780, 814, 876, 877, 886, 966, 1000, 1010, 1011, 1023, 1024, 1043, 1202, 1204, 1205, 1207, 1263, 1337, 1343, 1344, 1345, 1362, 1363, 1368, 1369, 1388, 1389, 1390, 1443, 1464, 1470, 1472, 1509, 1515, 1516, 1596, 1605, 1607, 1608, 1645, 1660, 1663, 1665, 1698, 1796, 1840, 1842, 1872, 1879, 1880, 1881, 1883, 1886, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1901, 1903, 1904, 1907, 1908, 1911, 1915, 1917, 1918, 1921, 1923, 1925, 1934, 1941, 1942, 1946, 1949, 1953, 1954, 1955, 1956, 1958], "simpl": [0, 14, 17, 21, 33, 40, 50, 52, 54, 475, 957, 1022, 1123, 1131, 1132, 1133, 1192, 1196, 1203, 1343, 1344, 1345, 1368, 1398, 1399, 1400, 1425, 1464, 1515, 1661, 1770, 1861, 1868, 1870, 1874, 1888, 1895, 1896, 1897, 1898, 1900, 1901, 1903, 1911, 1915, 1923, 1927, 1943, 1945, 1948, 1949], "clip": [0, 46, 953, 1609, 1610, 1871, 1899, 1911, 1913], "util": [0, 7, 16, 41, 44, 46, 47, 53, 54, 55, 719, 722, 725, 726, 727, 732, 733, 743, 747, 751, 777, 785, 982, 1116, 1192, 1377, 1395, 1425, 1440, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1614, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1638, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1819, 1820, 1821, 1822, 1823, 1869, 1873, 1883, 1892, 1894, 1895, 1896, 1898, 1900, 1901, 1903, 1904, 1906, 1911, 1914, 1915, 1916, 1944, 1946, 1954, 1956], "clip_grad_norm_": [0, 46, 1892], "max_norm": [0, 46, 732, 733, 1368, 1369, 1515, 1516, 1609, 1871, 1892], "own": [0, 7, 9, 23, 24, 27, 29, 32, 40, 42, 46, 54, 667, 1000, 1099, 1118, 1154, 1192, 1263, 1353, 1354, 1355, 1356, 1357, 1358, 1425, 1614, 1617, 1873, 1889, 1892, 1896, 1915, 1918, 1919, 1923, 1925, 1927, 1945, 1948], "onc": [0, 1, 7, 9, 14, 20, 21, 23, 24, 25, 27, 29, 30, 32, 33, 40, 46, 49, 51, 53, 54, 70, 884, 885, 886, 888, 890, 1065, 1192, 1196, 1263, 1362, 1425, 1605, 1615, 1617, 1649, 1693, 1697, 1713, 1760, 1764, 1853, 1870, 1873, 1881, 1883, 1885, 1892, 1893, 1895, 1896, 1898, 1901, 1903, 1904, 1914, 1915, 1927, 1932, 1941, 1943, 1946, 1949, 1953], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 29, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 51, 52, 53, 54, 76, 138, 248, 301, 303, 309, 323, 473, 475, 500, 502, 504, 533, 547, 594, 597, 604, 667, 673, 674, 679, 681, 685, 686, 722, 747, 778, 780, 781, 801, 827, 841, 845, 848, 861, 864, 876, 877, 878, 880, 881, 884, 885, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 904, 905, 906, 909, 918, 920, 925, 926, 930, 933, 934, 938, 939, 941, 946, 956, 964, 968, 969, 971, 972, 980, 981, 990, 998, 1002, 1008, 1012, 1013, 1021, 1022, 1029, 1030, 1032, 1033, 1037, 1039, 1041, 1082, 1083, 1084, 1085, 1088, 1091, 1092, 1095, 1098, 1100, 1102, 1118, 1121, 1122, 1128, 1129, 1131, 1132, 1134, 1154, 1157, 1188, 1189, 1192, 1199, 1202, 1203, 1206, 1207, 1227, 1254, 1263, 1279, 1281, 1289, 1291, 1294, 1302, 1303, 1312, 1320, 1321, 1322, 1323, 1333, 1340, 1342, 1346, 1348, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1368, 1369, 1372, 1377, 1378, 1379, 1380, 1385, 1391, 1392, 1395, 1396, 1412, 1416, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1440, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1464, 1468, 1470, 1472, 1473, 1476, 1481, 1482, 1489, 1495, 1497, 1515, 1516, 1521, 1526, 1545, 1546, 1574, 1580, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1612, 1617, 1624, 1628, 1638, 1642, 1650, 1651, 1652, 1653, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1692, 1693, 1696, 1697, 1698, 1699, 1711, 1757, 1790, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1806, 1808, 1809, 1810, 1811, 1814, 1830, 1832, 1839, 1840, 1841, 1842, 1845, 1848, 1853, 1856, 1857, 1859, 1863, 1868, 1870, 1871, 1872, 1873, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1913, 1915, 1916, 1917, 1918, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1934, 1935, 1936, 1937, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1956, 1957, 1958], "assign": [0, 1, 7, 9, 10, 20, 23, 31, 40, 41, 51, 54, 667, 825, 826, 827, 1190, 1192, 1193, 1333, 1361, 1425, 1432, 1435, 1436, 1606, 1617, 1870, 1874, 1892, 1898, 1899, 1900, 1911, 1918, 1924, 1925, 1931, 1932], "been": [0, 1, 5, 9, 11, 20, 21, 23, 24, 27, 28, 29, 31, 33, 40, 43, 46, 49, 50, 54, 72, 475, 667, 747, 884, 969, 971, 976, 1004, 1007, 1064, 1069, 1122, 1195, 1196, 1201, 1206, 1263, 1377, 1384, 1395, 1440, 1489, 1524, 1605, 1614, 1619, 1623, 1625, 1645, 1646, 1660, 1667, 1687, 1688, 1689, 1695, 1697, 1713, 1811, 1853, 1863, 1879, 1883, 1885, 1886, 1887, 1892, 1893, 1895, 1896, 1901, 1902, 1904, 1906, 1908, 1910, 1911, 1914, 1915, 1923, 1925, 1927, 1932, 1941, 1942, 1946, 1952, 1956], "accumul": [0, 1, 2, 46, 138, 278, 301, 306, 307, 309, 458, 475, 673, 880, 894, 1261, 1605, 1668, 1669, 1850, 1870, 1871, 1883, 1893, 1896, 1897, 1900, 1907, 1914, 1919, 1923, 1924, 1927, 1944, 1946, 1951, 1956], "twice": [0, 53, 604, 889, 1129, 1892, 1893, 1900, 1901, 1945], "given": [0, 1, 2, 3, 7, 9, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 38, 40, 42, 44, 46, 52, 53, 54, 138, 207, 301, 303, 305, 309, 314, 365, 386, 390, 459, 460, 461, 462, 463, 465, 500, 502, 504, 571, 572, 591, 594, 667, 680, 682, 683, 685, 686, 722, 747, 766, 772, 779, 780, 781, 782, 786, 787, 789, 807, 811, 824, 827, 841, 845, 852, 863, 876, 878, 880, 882, 884, 886, 888, 889, 890, 891, 892, 893, 896, 909, 910, 913, 921, 925, 926, 932, 933, 938, 939, 951, 953, 956, 957, 959, 960, 963, 965, 968, 969, 971, 972, 973, 977, 985, 986, 989, 993, 994, 1010, 1014, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1040, 1041, 1042, 1043, 1050, 1052, 1057, 1065, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1105, 1121, 1131, 1132, 1158, 1189, 1192, 1199, 1207, 1208, 1213, 1217, 1227, 1229, 1230, 1239, 1241, 1247, 1255, 1264, 1271, 1273, 1274, 1275, 1276, 1279, 1289, 1291, 1293, 1294, 1297, 1323, 1333, 1341, 1342, 1348, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1362, 1368, 1369, 1373, 1374, 1377, 1385, 1395, 1417, 1421, 1422, 1423, 1425, 1427, 1429, 1430, 1432, 1434, 1436, 1440, 1453, 1459, 1473, 1474, 1477, 1478, 1479, 1489, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1508, 1515, 1516, 1519, 1520, 1524, 1535, 1559, 1574, 1589, 1593, 1594, 1595, 1599, 1600, 1601, 1613, 1638, 1645, 1646, 1649, 1652, 1653, 1664, 1665, 1691, 1694, 1696, 1698, 1701, 1706, 1711, 1714, 1715, 1716, 1729, 1735, 1740, 1751, 1752, 1757, 1783, 1787, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1806, 1808, 1811, 1814, 1816, 1825, 1826, 1831, 1833, 1835, 1845, 1850, 1854, 1868, 1869, 1870, 1873, 1877, 1879, 1880, 1882, 1885, 1888, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1901, 1903, 1904, 1908, 1909, 1911, 1914, 1917, 1918, 1923, 1924, 1927, 1928, 1929, 1932, 1934, 1937, 1940, 1945, 1946, 1949, 1955, 1956, 1957], "trigger": [0, 7, 9, 23, 40, 53, 72, 73, 75, 209, 1039, 1762, 1892, 1893, 1896, 1897, 1898, 1903, 1909, 1923, 1941, 1943, 1946, 1952, 1953, 1956], "runtimeerror": [0, 1, 13, 23, 27, 51, 54, 72, 76, 570, 684, 884, 920, 1113, 1167, 1177, 1192, 1221, 1222, 1223, 1231, 1232, 1233, 1235, 1239, 1245, 1252, 1257, 1258, 1284, 1315, 1425, 1662, 1751, 1790, 1850, 1870, 1872, 1873, 1886, 1888, 1892, 1894, 1900, 1908, 1910, 1911, 1918, 1922, 1927, 1930], "spars": [0, 1, 11, 178, 179, 196, 206, 209, 311, 316, 330, 331, 422, 530, 531, 532, 533, 568, 570, 571, 572, 573, 574, 575, 601, 676, 732, 733, 895, 896, 1039, 1134, 1156, 1177, 1264, 1286, 1296, 1325, 1368, 1369, 1458, 1515, 1516, 1541, 1684, 1703, 1751, 1785, 1790, 1797, 1798, 1799, 1800, 1801, 1802, 1807, 1816, 1835, 1850, 1851, 1869, 1871, 1875, 1880, 1891, 1907, 1908, 1913, 1920, 1930, 1931, 1934, 1944, 1951], "place": [0, 3, 7, 11, 20, 21, 23, 25, 30, 31, 44, 46, 49, 50, 54, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 109, 111, 113, 115, 118, 119, 121, 129, 131, 134, 135, 137, 140, 146, 148, 150, 152, 154, 156, 165, 174, 182, 186, 189, 191, 201, 203, 209, 210, 219, 224, 226, 232, 235, 237, 239, 241, 242, 245, 248, 250, 257, 259, 261, 265, 267, 271, 273, 280, 282, 284, 292, 294, 296, 298, 300, 302, 304, 306, 344, 346, 348, 350, 352, 354, 356, 359, 361, 363, 364, 371, 373, 375, 377, 379, 383, 387, 389, 407, 410, 413, 415, 426, 428, 430, 438, 443, 453, 456, 472, 474, 475, 477, 479, 483, 486, 495, 498, 499, 501, 503, 509, 514, 516, 519, 521, 523, 536, 538, 540, 549, 551, 558, 562, 564, 580, 583, 585, 587, 589, 590, 599, 609, 745, 780, 784, 801, 825, 826, 844, 845, 884, 886, 900, 901, 921, 978, 979, 981, 982, 1002, 1065, 1116, 1121, 1122, 1130, 1192, 1236, 1254, 1315, 1337, 1347, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1382, 1383, 1384, 1411, 1425, 1442, 1443, 1444, 1445, 1452, 1467, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1528, 1531, 1540, 1571, 1573, 1588, 1592, 1596, 1601, 1602, 1605, 1609, 1610, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1647, 1684, 1740, 1742, 1746, 1747, 1748, 1795, 1831, 1869, 1870, 1872, 1873, 1880, 1887, 1892, 1896, 1898, 1903, 1914, 1915, 1916, 1923, 1924, 1929, 1931, 1933, 1944, 1945, 1946, 1949, 1953, 1955], "replac": [0, 1, 13, 20, 21, 23, 25, 39, 41, 44, 46, 48, 49, 50, 51, 52, 54, 70, 72, 73, 75, 107, 408, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 734, 801, 826, 845, 930, 1011, 1065, 1121, 1122, 1197, 1199, 1209, 1281, 1282, 1315, 1319, 1456, 1467, 1596, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1647, 1649, 1713, 1811, 1815, 1838, 1870, 1871, 1873, 1881, 1896, 1898, 1899, 1901, 1903, 1906, 1910, 1911, 1913, 1915, 1918, 1934, 1942, 1944, 1948, 1955], "were": [0, 1, 2, 3, 17, 23, 31, 40, 43, 44, 46, 51, 53, 54, 138, 309, 323, 458, 841, 876, 878, 880, 894, 1011, 1122, 1133, 1199, 1263, 1489, 1605, 1609, 1614, 1624, 1641, 1749, 1753, 1825, 1832, 1861, 1872, 1880, 1892, 1896, 1898, 1909, 1911, 1915, 1941, 1945, 1946, 1952, 1955, 1956], "reduc": [0, 2, 3, 13, 21, 23, 24, 25, 27, 46, 309, 500, 503, 504, 673, 680, 682, 683, 684, 686, 806, 807, 808, 809, 812, 814, 861, 862, 939, 979, 990, 1022, 1165, 1244, 1248, 1250, 1255, 1261, 1279, 1289, 1291, 1292, 1294, 1297, 1320, 1321, 1322, 1323, 1341, 1342, 1343, 1344, 1345, 1359, 1361, 1369, 1385, 1391, 1392, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1464, 1473, 1496, 1497, 1505, 1507, 1516, 1532, 1535, 1536, 1537, 1547, 1555, 1556, 1557, 1558, 1559, 1560, 1567, 1578, 1579, 1590, 1593, 1605, 1613, 1650, 1673, 1697, 1711, 1713, 1714, 1748, 1792, 1796, 1809, 1810, 1814, 1815, 1836, 1850, 1856, 1857, 1871, 1885, 1886, 1893, 1895, 1897, 1898, 1904, 1906, 1908, 1909, 1910, 1913, 1914, 1915, 1916, 1918, 1927, 1941, 1944, 1946, 1951, 1952, 1956, 1957], "occur": [0, 11, 20, 23, 33, 34, 40, 46, 51, 70, 72, 184, 303, 939, 1025, 1065, 1189, 1195, 1205, 1235, 1348, 1464, 1508, 1652, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1872, 1883, 1887, 1892, 1893, 1896, 1900, 1907, 1911, 1917, 1923, 1925, 1931, 1934, 1944, 1946, 1948, 1952, 1954, 1956, 1957, 1958], "increas": [0, 1, 3, 7, 21, 23, 29, 37, 46, 667, 841, 885, 923, 990, 1022, 1065, 1153, 1154, 1333, 1342, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1437, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1565, 1566, 1574, 1682, 1688, 1689, 1693, 1695, 1697, 1749, 1757, 1836, 1855, 1871, 1879, 1884, 1895, 1896, 1902, 1906, 1919, 1927, 1941, 1946, 1950], "set": [0, 1, 2, 3, 5, 8, 9, 12, 13, 19, 20, 21, 23, 24, 25, 27, 29, 31, 33, 38, 40, 41, 42, 43, 44, 46, 49, 50, 53, 54, 55, 67, 69, 76, 138, 142, 242, 318, 432, 433, 434, 435, 436, 445, 483, 486, 507, 567, 568, 667, 722, 728, 730, 747, 766, 772, 779, 780, 781, 784, 802, 803, 804, 807, 808, 809, 812, 813, 828, 841, 845, 846, 848, 849, 852, 865, 877, 879, 880, 887, 888, 889, 890, 891, 892, 893, 894, 918, 923, 934, 938, 939, 951, 966, 976, 991, 1000, 1012, 1013, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1066, 1067, 1068, 1121, 1130, 1139, 1154, 1172, 1173, 1192, 1196, 1199, 1201, 1203, 1205, 1207, 1208, 1227, 1228, 1231, 1237, 1244, 1246, 1248, 1249, 1261, 1262, 1263, 1264, 1278, 1281, 1284, 1305, 1309, 1310, 1311, 1333, 1337, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1370, 1377, 1380, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1410, 1412, 1416, 1417, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1431, 1432, 1435, 1439, 1440, 1456, 1457, 1464, 1468, 1470, 1472, 1473, 1474, 1489, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1508, 1509, 1510, 1511, 1512, 1517, 1524, 1528, 1535, 1536, 1545, 1546, 1559, 1561, 1567, 1574, 1593, 1605, 1607, 1608, 1613, 1618, 1647, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1699, 1713, 1720, 1722, 1726, 1728, 1729, 1737, 1738, 1749, 1750, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1779, 1795, 1800, 1809, 1810, 1829, 1839, 1840, 1841, 1842, 1850, 1853, 1854, 1856, 1857, 1868, 1870, 1872, 1873, 1874, 1877, 1879, 1881, 1882, 1883, 1885, 1888, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1932, 1934, 1936, 1937, 1940, 1943, 1945, 1946, 1947, 1949, 1951, 1952, 1953, 1955, 1956, 1957], "directli": [0, 1, 3, 7, 9, 13, 14, 20, 21, 23, 25, 29, 30, 31, 39, 44, 46, 50, 54, 544, 719, 734, 877, 886, 941, 1048, 1116, 1122, 1129, 1131, 1137, 1222, 1431, 1458, 1477, 1535, 1580, 1639, 1836, 1870, 1872, 1873, 1883, 1893, 1896, 1897, 1898, 1899, 1901, 1903, 1904, 1905, 1906, 1909, 1915, 1917, 1918, 1923, 1927, 1932, 1934, 1944, 1945, 1946, 1948, 1950, 1955, 1956], "fill": [0, 23, 142, 161, 246, 247, 248, 274, 305, 309, 365, 388, 432, 433, 434, 436, 441, 468, 595, 610, 910, 1053, 1066, 1067, 1068, 1119, 1120, 1222, 1233, 1235, 1369, 1468, 1516, 1562, 1656, 1657, 1722, 1723, 1724, 1725, 1726, 1727, 1815, 1850, 1866, 1867, 1871, 1877, 1887, 1888, 1891, 1896, 1898, 1909, 1913, 1927, 1934, 1945, 1949, 1951], "later": [0, 1, 2, 3, 7, 19, 21, 23, 28, 46, 53, 54, 732, 733, 743, 751, 903, 1000, 1263, 1395, 1418, 1419, 1420, 1440, 1454, 1548, 1549, 1550, 1577, 1605, 1815, 1870, 1893, 1895, 1896, 1897, 1904, 1909, 1924, 1925, 1949, 1952], "chang": [0, 1, 2, 3, 7, 11, 17, 21, 23, 25, 27, 28, 29, 31, 39, 44, 46, 47, 50, 51, 53, 54, 127, 209, 221, 242, 309, 445, 483, 486, 504, 507, 543, 604, 667, 806, 864, 895, 896, 939, 950, 951, 965, 966, 967, 976, 987, 989, 1000, 1001, 1008, 1009, 1011, 1053, 1101, 1121, 1139, 1145, 1166, 1189, 1192, 1202, 1203, 1222, 1233, 1235, 1236, 1237, 1240, 1253, 1293, 1365, 1368, 1386, 1395, 1425, 1456, 1477, 1489, 1524, 1548, 1549, 1550, 1574, 1596, 1597, 1605, 1607, 1608, 1614, 1617, 1618, 1647, 1651, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1689, 1692, 1693, 1695, 1697, 1699, 1713, 1753, 1757, 1795, 1806, 1809, 1810, 1811, 1835, 1853, 1856, 1857, 1868, 1869, 1870, 1879, 1880, 1881, 1883, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1901, 1902, 1904, 1906, 1907, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1941, 1944, 1945, 1947, 1948, 1949, 1952, 1953, 1956], "further": [0, 1, 4, 9, 13, 21, 23, 46, 53, 55, 64, 65, 1137, 1196, 1231, 1333, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1605, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1701, 1873, 1880, 1904, 1906, 1915, 1917, 1925, 1932, 1937, 1940, 1944, 1951, 1954, 1956], "floattensor": [0, 23, 309, 474, 673, 674, 675, 676, 677, 722, 895, 896, 907, 1139, 1368, 1369, 1428, 1468, 1755, 1930, 1933], "end": [0, 7, 8, 9, 20, 21, 23, 29, 33, 37, 49, 54, 349, 350, 525, 747, 771, 784, 807, 808, 852, 908, 952, 966, 1026, 1055, 1065, 1104, 1118, 1145, 1151, 1152, 1189, 1192, 1212, 1217, 1247, 1257, 1259, 1262, 1264, 1278, 1324, 1325, 1340, 1341, 1342, 1359, 1361, 1367, 1371, 1377, 1378, 1381, 1382, 1383, 1384, 1385, 1386, 1392, 1395, 1396, 1411, 1416, 1419, 1420, 1425, 1427, 1432, 1433, 1436, 1440, 1443, 1453, 1456, 1462, 1467, 1474, 1507, 1516, 1528, 1529, 1605, 1612, 1660, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1687, 1692, 1729, 1762, 1765, 1768, 1783, 1836, 1847, 1848, 1864, 1870, 1871, 1872, 1873, 1885, 1892, 1893, 1896, 1897, 1898, 1900, 1901, 1907, 1910, 1911, 1914, 1917, 1918, 1921, 1923, 1928, 1941, 1945, 1948, 1951, 1956], "reason": [0, 3, 8, 9, 20, 23, 25, 46, 51, 69, 667, 828, 1086, 1088, 1192, 1207, 1208, 1227, 1228, 1255, 1292, 1341, 1365, 1425, 1526, 1574, 1601, 1602, 1617, 1745, 1870, 1872, 1873, 1879, 1893, 1897, 1899, 1907, 1909, 1911, 1923, 1930, 1942, 1944, 1945, 1946, 1949, 1950, 1956, 1957], "do": [0, 1, 4, 7, 8, 9, 11, 13, 14, 20, 21, 23, 27, 28, 30, 31, 33, 40, 41, 42, 44, 46, 47, 48, 51, 52, 53, 54, 72, 482, 500, 502, 504, 745, 810, 813, 850, 879, 881, 886, 895, 925, 938, 939, 966, 1000, 1011, 1044, 1045, 1046, 1047, 1116, 1118, 1127, 1134, 1154, 1167, 1179, 1189, 1192, 1195, 1203, 1207, 1237, 1255, 1264, 1271, 1281, 1283, 1292, 1315, 1325, 1337, 1347, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1382, 1383, 1384, 1411, 1443, 1444, 1445, 1452, 1467, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1526, 1528, 1543, 1596, 1605, 1653, 1662, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1701, 1707, 1757, 1850, 1868, 1869, 1870, 1871, 1873, 1875, 1877, 1885, 1886, 1887, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1917, 1918, 1919, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1941, 1944, 1945, 1948, 1949, 1952, 1953, 1955, 1956, 1958], "synchron": [0, 3, 4, 16, 17, 21, 25, 27, 31, 40, 46, 53, 864, 968, 969, 971, 979, 999, 1039, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1239, 1240, 1246, 1249, 1252, 1253, 1255, 1256, 1264, 1303, 1464, 1605, 1651, 1653, 1735, 1869, 1895, 1896, 1897, 1902, 1906, 1916, 1923, 1946], "fall": [0, 2, 7, 13, 20, 782, 895, 939, 1154, 1205, 1263, 1386, 1456, 1533, 1578, 1609, 1610, 1868, 1911, 1918], "below": [0, 1, 5, 9, 13, 20, 21, 23, 29, 31, 32, 37, 40, 41, 42, 43, 54, 55, 62, 63, 667, 721, 735, 744, 782, 801, 1008, 1052, 1053, 1054, 1055, 1056, 1065, 1093, 1095, 1099, 1137, 1145, 1192, 1208, 1248, 1249, 1254, 1261, 1293, 1356, 1357, 1358, 1377, 1379, 1386, 1395, 1397, 1421, 1422, 1423, 1425, 1440, 1456, 1477, 1507, 1533, 1578, 1605, 1617, 1651, 1684, 1754, 1757, 1795, 1826, 1836, 1839, 1840, 1841, 1842, 1870, 1872, 1873, 1875, 1879, 1880, 1885, 1886, 1892, 1893, 1896, 1897, 1898, 1901, 1902, 1904, 1906, 1908, 1909, 1911, 1914, 1915, 1916, 1918, 1920, 1923, 1924, 1925, 1928, 1931, 1934, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1952, 1954, 1956], "someth": [0, 3, 7, 48, 54, 55, 57, 888, 890, 1065, 1192, 1207, 1425, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1875, 1883, 1885, 1886, 1893, 1902, 1910, 1911, 1923, 1942, 1944, 1946, 1948, 1949, 1955, 1956, 1957], "wrong": [0, 23, 54, 72, 884, 1190, 1193, 1897, 1906, 1910, 1911, 1914], "incompat": [0, 9, 13, 51, 920, 1189, 1894, 1915], "due": [0, 3, 4, 5, 7, 21, 23, 29, 39, 44, 46, 51, 54, 55, 57, 72, 473, 867, 888, 889, 894, 953, 1204, 1227, 1228, 1255, 1281, 1365, 1379, 1468, 1477, 1535, 1574, 1645, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1816, 1870, 1888, 1896, 1897, 1901, 1902, 1908, 1911, 1918, 1919, 1923, 1925, 1946, 1949, 1952, 1956, 1958], "float64": [0, 11, 228, 433, 436, 567, 867, 947, 1108, 1117, 1139, 1174, 1192, 1221, 1227, 1228, 1230, 1232, 1248, 1425, 1574, 1670, 1671, 1707, 1715, 1754, 1755, 1758, 1789, 1797, 1798, 1799, 1800, 1801, 1802, 1829, 1859, 1864, 1904, 1907, 1927, 1929, 1930, 1933, 1934, 1959], "variant": [0, 5, 21, 845, 1222, 1233, 1246, 1249, 1322, 1325, 1670, 1671, 1672, 1684, 1789, 1838, 1869, 1903, 1921, 1933, 1951, 1952, 1955], "suppli": [0, 5, 7, 13, 14, 23, 1000, 1431, 1666, 1873, 1896, 1911, 1927, 1946, 1956], "won": [0, 8, 21, 25, 40, 49, 445, 1192, 1203, 1425, 1560, 1599, 1600, 1868, 1893, 1898, 1923, 1935, 1945, 1946, 1949, 1954, 1956], "go": [0, 1, 7, 14, 20, 23, 37, 42, 50, 54, 486, 487, 547, 885, 900, 1264, 1338, 1339, 1340, 1418, 1419, 1420, 1872, 1873, 1880, 1885, 1886, 1887, 1893, 1895, 1896, 1898, 1899, 1903, 1904, 1906, 1910, 1911, 1915, 1930, 1932, 1942, 1943, 1944, 1945, 1946, 1949], "addmm": [0, 55, 94, 1807, 1871, 1886, 1907, 1913, 1927, 1951, 1955], "b": [0, 1, 3, 11, 20, 23, 25, 29, 38, 44, 54, 55, 58, 73, 75, 248, 323, 386, 604, 672, 673, 735, 744, 768, 811, 867, 884, 886, 887, 898, 900, 901, 907, 918, 919, 921, 925, 927, 929, 932, 937, 952, 958, 959, 960, 961, 962, 963, 964, 965, 1008, 1009, 1057, 1060, 1064, 1065, 1110, 1111, 1112, 1113, 1118, 1122, 1135, 1157, 1169, 1189, 1195, 1202, 1203, 1211, 1212, 1214, 1223, 1224, 1232, 1236, 1237, 1241, 1244, 1245, 1246, 1247, 1248, 1249, 1252, 1253, 1254, 1257, 1258, 1261, 1264, 1273, 1275, 1276, 1282, 1290, 1295, 1297, 1314, 1342, 1346, 1368, 1369, 1376, 1412, 1495, 1497, 1516, 1523, 1541, 1612, 1639, 1640, 1641, 1642, 1643, 1644, 1652, 1660, 1681, 1683, 1714, 1720, 1733, 1736, 1752, 1764, 1783, 1792, 1797, 1798, 1799, 1801, 1802, 1806, 1811, 1812, 1814, 1821, 1822, 1831, 1838, 1839, 1841, 1858, 1863, 1870, 1871, 1872, 1873, 1886, 1887, 1888, 1891, 1892, 1894, 1896, 1898, 1900, 1901, 1902, 1907, 1909, 1917, 1918, 1924, 1925, 1927, 1928, 1931, 1932, 1937, 1942, 1943, 1946, 1948, 1949, 1951, 1955, 1956, 1958], "c": [0, 1, 3, 8, 9, 13, 20, 23, 29, 38, 49, 54, 73, 75, 248, 323, 486, 507, 604, 672, 808, 864, 867, 886, 918, 929, 932, 953, 1002, 1008, 1042, 1057, 1060, 1065, 1111, 1112, 1113, 1122, 1123, 1127, 1132, 1135, 1145, 1192, 1202, 1214, 1221, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1237, 1238, 1241, 1243, 1247, 1248, 1250, 1252, 1254, 1255, 1314, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1361, 1364, 1365, 1366, 1370, 1372, 1373, 1374, 1380, 1388, 1389, 1390, 1393, 1394, 1396, 1397, 1407, 1408, 1409, 1413, 1418, 1419, 1420, 1421, 1422, 1423, 1428, 1429, 1430, 1432, 1437, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1459, 1464, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1489, 1497, 1507, 1508, 1520, 1524, 1559, 1565, 1566, 1574, 1612, 1640, 1642, 1643, 1644, 1651, 1652, 1701, 1717, 1733, 1771, 1792, 1806, 1811, 1831, 1848, 1852, 1853, 1869, 1870, 1871, 1872, 1873, 1877, 1886, 1887, 1895, 1896, 1897, 1899, 1901, 1903, 1910, 1915, 1924, 1925, 1927, 1928, 1931, 1932, 1938, 1943, 1944, 1945, 1946, 1948, 1949, 1951, 1955, 1956, 1957, 1958], "addmm_": [0, 1871, 1886, 1927], "d": [0, 1, 11, 20, 21, 23, 28, 29, 44, 47, 54, 301, 309, 323, 458, 500, 502, 504, 531, 570, 604, 673, 677, 852, 867, 886, 907, 908, 910, 917, 918, 919, 923, 929, 1052, 1054, 1064, 1065, 1078, 1082, 1083, 1084, 1085, 1090, 1091, 1094, 1095, 1100, 1101, 1102, 1105, 1106, 1107, 1133, 1134, 1149, 1150, 1157, 1166, 1189, 1193, 1197, 1234, 1235, 1285, 1296, 1317, 1332, 1340, 1341, 1345, 1355, 1359, 1360, 1364, 1365, 1366, 1368, 1370, 1372, 1377, 1379, 1390, 1395, 1397, 1409, 1420, 1434, 1440, 1464, 1473, 1474, 1476, 1489, 1524, 1535, 1541, 1568, 1592, 1593, 1613, 1646, 1651, 1652, 1682, 1702, 1720, 1729, 1741, 1749, 1754, 1806, 1811, 1824, 1825, 1831, 1834, 1839, 1840, 1841, 1842, 1855, 1861, 1863, 1868, 1871, 1880, 1886, 1887, 1888, 1891, 1893, 1896, 1898, 1899, 1901, 1902, 1909, 1911, 1923, 1924, 1927, 1928, 1932, 1933, 1945, 1946, 1948, 1954, 1956, 1958], "best": [0, 1, 7, 14, 17, 20, 23, 29, 41, 46, 49, 848, 849, 904, 926, 939, 1207, 1208, 1237, 1431, 1684, 1697, 1869, 1870, 1872, 1885, 1891, 1892, 1893, 1898, 1900, 1915, 1923, 1927, 1938, 1943, 1946, 1950], "stabil": [0, 1223, 1228, 1279, 1342, 1343, 1344, 1345, 1379, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1461, 1464, 1473, 1521, 1582, 1613, 1646, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1717, 1899, 1946, 1956], "respect": [0, 1, 5, 8, 23, 24, 27, 29, 38, 40, 46, 52, 53, 54, 184, 197, 474, 567, 590, 676, 677, 678, 747, 782, 806, 828, 872, 878, 880, 894, 896, 900, 901, 934, 957, 1053, 1055, 1056, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1132, 1145, 1192, 1223, 1227, 1228, 1237, 1247, 1250, 1252, 1255, 1264, 1296, 1319, 1341, 1348, 1356, 1357, 1358, 1362, 1377, 1379, 1395, 1425, 1426, 1440, 1470, 1472, 1473, 1474, 1475, 1477, 1515, 1524, 1601, 1602, 1619, 1623, 1625, 1647, 1649, 1683, 1697, 1788, 1792, 1815, 1831, 1887, 1892, 1893, 1896, 1898, 1901, 1904, 1905, 1916, 1921, 1927, 1928, 1929, 1934, 1945, 1950], "describ": [0, 5, 7, 8, 9, 20, 21, 25, 27, 28, 31, 32, 38, 40, 44, 54, 221, 500, 779, 780, 781, 802, 803, 804, 828, 846, 924, 991, 1008, 1025, 1065, 1145, 1212, 1252, 1333, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1363, 1364, 1365, 1366, 1367, 1370, 1372, 1373, 1374, 1380, 1383, 1386, 1388, 1389, 1390, 1392, 1397, 1416, 1418, 1419, 1420, 1431, 1432, 1439, 1443, 1456, 1464, 1472, 1473, 1474, 1476, 1507, 1519, 1520, 1529, 1562, 1695, 1836, 1869, 1870, 1872, 1873, 1891, 1892, 1893, 1896, 1897, 1900, 1901, 1903, 1904, 1909, 1911, 1915, 1917, 1918, 1921, 1924, 1925, 1934, 1947, 1952], "expos": [0, 1, 8, 23, 27, 46, 53, 54, 782, 1118, 1893, 1896, 1903, 1915, 1918, 1957], "namespac": [0, 54, 1039, 1664, 1870, 1874, 1877, 1898, 1904, 1911, 1916, 1921, 1938, 1957], "defin": [0, 1, 2, 3, 5, 9, 13, 14, 20, 21, 23, 24, 25, 28, 29, 31, 32, 38, 40, 41, 44, 46, 51, 54, 422, 432, 434, 436, 504, 553, 779, 784, 786, 825, 846, 847, 848, 849, 876, 877, 878, 879, 1022, 1048, 1065, 1066, 1085, 1113, 1119, 1135, 1137, 1151, 1153, 1154, 1181, 1192, 1214, 1221, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1237, 1238, 1241, 1243, 1244, 1248, 1249, 1250, 1252, 1254, 1255, 1261, 1297, 1362, 1367, 1373, 1374, 1381, 1382, 1383, 1384, 1391, 1393, 1394, 1425, 1431, 1443, 1458, 1460, 1465, 1467, 1489, 1524, 1574, 1580, 1596, 1599, 1605, 1623, 1625, 1632, 1633, 1653, 1656, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1689, 1692, 1695, 1713, 1722, 1724, 1726, 1733, 1762, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1792, 1794, 1836, 1839, 1840, 1841, 1842, 1864, 1866, 1868, 1870, 1873, 1875, 1877, 1885, 1886, 1888, 1893, 1896, 1897, 1901, 1902, 1904, 1906, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1921, 1923, 1927, 1928, 1933, 1934, 1935, 1941, 1942, 1945, 1947, 1949, 1953, 1957], "still": [0, 1, 2, 7, 8, 20, 23, 28, 29, 31, 40, 46, 53, 54, 781, 786, 885, 890, 1196, 1201, 1209, 1392, 1416, 1605, 1606, 1607, 1608, 1697, 1745, 1870, 1873, 1885, 1886, 1887, 1888, 1892, 1893, 1896, 1897, 1898, 1900, 1902, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1945, 1949, 1951, 1952, 1956, 1958], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 17, 20, 21, 24, 25, 27, 28, 29, 30, 31, 33, 38, 39, 40, 41, 42, 44, 46, 50, 51, 53, 54, 55, 62, 63, 76, 138, 277, 301, 303, 305, 307, 309, 323, 459, 473, 474, 486, 500, 502, 504, 524, 547, 591, 594, 604, 611, 671, 684, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 747, 751, 768, 777, 778, 784, 786, 806, 810, 813, 825, 841, 844, 845, 846, 848, 863, 867, 872, 879, 880, 881, 882, 888, 889, 890, 891, 892, 893, 894, 900, 901, 904, 910, 923, 926, 929, 933, 939, 941, 955, 956, 957, 965, 966, 971, 978, 979, 980, 981, 982, 993, 994, 995, 1022, 1024, 1029, 1030, 1041, 1043, 1048, 1052, 1053, 1054, 1055, 1056, 1065, 1081, 1086, 1089, 1093, 1096, 1099, 1104, 1105, 1106, 1107, 1108, 1113, 1116, 1121, 1122, 1125, 1126, 1127, 1128, 1129, 1133, 1134, 1137, 1154, 1166, 1177, 1183, 1189, 1190, 1192, 1193, 1195, 1201, 1202, 1203, 1207, 1224, 1227, 1228, 1237, 1241, 1243, 1244, 1247, 1248, 1252, 1254, 1255, 1257, 1260, 1261, 1263, 1269, 1285, 1292, 1297, 1315, 1321, 1324, 1325, 1331, 1332, 1333, 1335, 1336, 1337, 1339, 1340, 1343, 1344, 1345, 1348, 1354, 1355, 1357, 1358, 1361, 1362, 1369, 1376, 1377, 1386, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1397, 1411, 1415, 1419, 1420, 1421, 1422, 1423, 1425, 1428, 1430, 1431, 1453, 1456, 1458, 1460, 1464, 1473, 1474, 1506, 1523, 1524, 1526, 1536, 1543, 1561, 1562, 1580, 1581, 1589, 1596, 1605, 1612, 1614, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1647, 1649, 1652, 1661, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1703, 1715, 1729, 1733, 1735, 1736, 1740, 1742, 1749, 1753, 1757, 1762, 1764, 1782, 1787, 1791, 1792, 1794, 1795, 1803, 1806, 1830, 1835, 1836, 1839, 1840, 1841, 1842, 1846, 1847, 1849, 1850, 1853, 1861, 1868, 1870, 1872, 1873, 1875, 1879, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1908, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1936, 1937, 1938, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959], "unlist": 0, "downstream": [0, 3, 1883, 1946, 1947, 1949, 1956], "stabl": [0, 1, 2, 23, 29, 40, 41, 44, 717, 718, 719, 720, 732, 733, 743, 748, 749, 750, 751, 752, 863, 1065, 1227, 1228, 1232, 1237, 1245, 1249, 1252, 1255, 1257, 1264, 1342, 1787, 1869, 1871, 1891, 1894, 1908, 1923], "believ": [0, 8, 1946], "unstabl": [0, 29, 1227, 1228, 1255, 1272, 1281, 1543, 1815, 1928], "__matmul__": 0, "addbmm": [0, 88, 907, 1871, 1907, 1913], "addmv": [0, 96, 1871, 1886, 1913], "addr": [0, 23, 98, 1871, 1913, 1958], "baddbmm": [0, 140, 1871, 1907, 1913], "bmm": [0, 1850, 1871, 1886, 1888, 1907, 1908, 1913, 1927, 1951], "chain_matmul": [0, 1871, 1913], "multi_dot": [0, 929], "conv1d": [0, 695, 699, 702, 712, 728, 1356, 1364, 1401, 1850, 1871, 1913, 1918, 1920], "conv2d": [0, 696, 700, 703, 705, 713, 729, 779, 801, 1192, 1201, 1203, 1207, 1208, 1357, 1365, 1402, 1425, 1426, 1432, 1453, 1476, 1632, 1850, 1870, 1871, 1881, 1911, 1913, 1918, 1920, 1921, 1932, 1937], "conv3d": [0, 697, 701, 704, 706, 714, 730, 1358, 1366, 1403, 1850, 1871, 1913, 1918, 1920], "conv_transpose1d": [0, 1871, 1913, 1920], "conv_transpose2d": [0, 1871, 1913, 1920], "conv_transpose3d": [0, 1871, 1913, 1920], "grucel": [0, 1907, 1918, 1920, 1921], "lstmcell": [0, 1907, 1918, 1920, 1921], "matmul": [0, 2, 11, 919, 939, 1132, 1296, 1476, 1703, 1713, 1757, 1815, 1871, 1886, 1888, 1896, 1907, 1913, 1920, 1927, 1941], "mv": [0, 11, 1203, 1850, 1871, 1886, 1913, 1927], "prelu": [0, 1426, 1871, 1913, 1920], "rnncell": [0, 1918, 1920, 1921], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 82, 614, 615, 853, 1871, 1886, 1913, 1934, 1951], "asin": [0, 129, 616, 617, 855, 1871, 1886, 1913, 1927, 1951], "cosh": [0, 191, 624, 625, 671, 1871, 1886, 1913, 1951], "cosine_embedding_loss": [0, 1871, 1913], "cdist": [0, 1896, 1913], "cosine_similar": [0, 1474, 1871, 1913], "cross_entropi": [0, 1871], "cumprod": [0, 201, 1871, 1886, 1913], "cumsum": [0, 203, 1048, 1850, 1871, 1886, 1913, 1951], "dist": [0, 21, 23, 24, 27, 29, 41, 46, 930, 931, 1221, 1227, 1228, 1229, 1231, 1232, 1233, 1237, 1238, 1249, 1250, 1253, 1255, 1256, 1279, 1282, 1434, 1464, 1605, 1612, 1815, 1871, 1897, 1913, 1923, 1925], "erfinv": [0, 239, 1871, 1886, 1913, 1927, 1928], "exp": [0, 1, 29, 241, 630, 631, 757, 890, 891, 893, 1108, 1251, 1271, 1279, 1342, 1347, 1361, 1367, 1391, 1414, 1415, 1429, 1439, 1452, 1455, 1457, 1458, 1460, 1461, 1465, 1498, 1544, 1567, 1575, 1576, 1580, 1582, 1585, 1612, 1710, 1771, 1772, 1794, 1811, 1871, 1886, 1893, 1911, 1913, 1928, 1951], "expm1": [0, 245, 632, 633, 1871, 1886, 1913, 1927, 1928, 1951], "group_norm": [0, 1871, 1913, 1920], "hinge_embedding_loss": [0, 1871, 1913], "kl_div": [0, 1871, 1913], "l1_loss": [0, 1871, 1913], "layer_norm": [0, 1397, 1871, 1913, 1920], "log": [0, 13, 20, 21, 29, 31, 33, 34, 37, 38, 42, 67, 69, 364, 365, 640, 647, 667, 1075, 1267, 1269, 1271, 1272, 1279, 1307, 1333, 1341, 1342, 1361, 1379, 1391, 1414, 1415, 1429, 1432, 1439, 1457, 1458, 1461, 1521, 1526, 1536, 1543, 1544, 1559, 1567, 1580, 1582, 1605, 1660, 1869, 1871, 1879, 1883, 1886, 1893, 1896, 1898, 1911, 1913, 1917, 1928, 1932, 1935, 1936, 1937, 1943, 1948, 1949, 1950, 1951, 1953, 1954, 1956], "log_softmax": [0, 1348, 1391, 1508, 1559, 1580, 1871, 1887, 1913, 1928], "log10": [0, 359, 641, 642, 1871, 1886, 1913, 1951], "log1p": [0, 361, 643, 644, 1871, 1886, 1913, 1927, 1928, 1951], "log2": [0, 363, 645, 646, 1871, 1886, 1913, 1928, 1951], "margin_ranking_loss": [0, 1871, 1913], "mse_loss": [0, 50, 1121, 1871, 1913], "multilabel_margin_loss": [0, 1871, 1913], "multi_margin_loss": [0, 1871, 1913], "nll_loss": [0, 1871, 1913], "norm": [0, 29, 46, 48, 54, 689, 690, 691, 692, 693, 694, 927, 1059, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1223, 1227, 1236, 1237, 1244, 1249, 1261, 1368, 1369, 1416, 1434, 1469, 1470, 1471, 1472, 1473, 1515, 1516, 1560, 1564, 1609, 1613, 1622, 1623, 1628, 1631, 1632, 1646, 1649, 1672, 1734, 1871, 1875, 1892, 1893, 1901, 1904, 1907, 1913], "normal": [0, 1, 21, 27, 40, 46, 54, 70, 324, 339, 365, 441, 543, 957, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1153, 1189, 1192, 1197, 1227, 1269, 1337, 1343, 1344, 1345, 1364, 1365, 1366, 1370, 1380, 1388, 1389, 1390, 1397, 1407, 1408, 1409, 1413, 1452, 1464, 1468, 1469, 1470, 1471, 1472, 1494, 1524, 1525, 1534, 1538, 1542, 1568, 1609, 1610, 1613, 1628, 1636, 1637, 1646, 1649, 1681, 1697, 1717, 1726, 1727, 1734, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1811, 1850, 1868, 1869, 1870, 1871, 1875, 1886, 1888, 1891, 1893, 1896, 1899, 1911, 1913, 1915, 1920, 1923, 1928, 1932, 1934, 1935, 1940, 1951, 1959], "pdist": [0, 1434, 1871, 1913], "poisson_nll_loss": [0, 1871, 1913], "pow": [0, 1, 456, 483, 888, 889, 892, 1108, 1871, 1873, 1886, 1892, 1893, 1913, 1927, 1933, 1951], "prod": [0, 37, 309, 504, 1082, 1084, 1087, 1088, 1090, 1091, 1094, 1095, 1097, 1098, 1100, 1102, 1257, 1258, 1368, 1372, 1476, 1850, 1871, 1886, 1913, 1927, 1951], "reciproc": [0, 472, 650, 651, 1744, 1871, 1886, 1913, 1951], "rsqrt": [0, 498, 1871, 1886, 1913, 1951], "sinh": [0, 523, 658, 659, 869, 1871, 1886, 1913, 1927, 1951], "smooth_l1_loss": [0, 1871, 1913], "soft_margin_loss": [0, 1871, 1913], "softmax": [0, 29, 783, 1333, 1361, 1391, 1415, 1459, 1507, 1526, 1536, 1543, 1574, 1581, 1791, 1871, 1886, 1887, 1888, 1896, 1913, 1920, 1927, 1928], "softmin": [0, 1871], "softplu": [0, 29, 1424, 1554, 1871, 1913], "sum": [0, 1, 20, 23, 24, 27, 29, 31, 46, 51, 52, 54, 483, 504, 553, 733, 880, 888, 889, 890, 891, 892, 893, 894, 900, 901, 905, 957, 980, 981, 982, 1047, 1048, 1065, 1125, 1126, 1127, 1132, 1169, 1223, 1244, 1248, 1261, 1269, 1270, 1271, 1279, 1315, 1323, 1341, 1342, 1348, 1358, 1359, 1361, 1362, 1369, 1372, 1379, 1385, 1386, 1391, 1392, 1393, 1394, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1458, 1460, 1473, 1474, 1476, 1496, 1497, 1507, 1508, 1516, 1521, 1526, 1536, 1545, 1546, 1559, 1567, 1580, 1581, 1605, 1628, 1633, 1634, 1652, 1689, 1735, 1757, 1773, 1792, 1794, 1834, 1836, 1850, 1869, 1871, 1873, 1877, 1883, 1886, 1892, 1893, 1896, 1897, 1898, 1899, 1904, 1907, 1911, 1913, 1923, 1924, 1927, 1928, 1933, 1941, 1942, 1943, 1946, 1949, 1951, 1954, 1956, 1958], "renorm": [0, 479, 1368, 1369, 1515, 1516, 1871, 1913], "tan": [0, 562, 662, 663, 870, 1871, 1886, 1913, 1927, 1932, 1951], "triplet_margin_loss": [0, 1871, 1913], "take": [0, 1, 2, 3, 4, 7, 9, 13, 20, 21, 23, 25, 27, 29, 31, 39, 40, 41, 42, 44, 46, 48, 49, 51, 52, 53, 54, 55, 62, 63, 75, 747, 780, 785, 801, 807, 813, 849, 888, 889, 890, 891, 892, 893, 895, 896, 932, 965, 1002, 1053, 1055, 1056, 1081, 1083, 1086, 1089, 1093, 1094, 1096, 1099, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1224, 1246, 1249, 1333, 1342, 1369, 1373, 1374, 1377, 1395, 1419, 1420, 1421, 1422, 1423, 1425, 1433, 1440, 1468, 1478, 1479, 1519, 1520, 1537, 1561, 1574, 1605, 1650, 1681, 1685, 1710, 1838, 1851, 1861, 1868, 1870, 1871, 1873, 1880, 1881, 1885, 1886, 1887, 1888, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1904, 1908, 1909, 1910, 1911, 1913, 1915, 1917, 1918, 1923, 1924, 1925, 1927, 1930, 1931, 1932, 1936, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1954, 1955], "addcdiv": [0, 90, 1871, 1913], "addcmul": [0, 92, 1871, 1913], "atan2": [0, 134, 858, 1871, 1886, 1913, 1951], "bilinear": [0, 766, 772, 773, 1065, 1477, 1478, 1524, 1535, 1593, 1594, 1850, 1871, 1913], "cross": [0, 7, 8, 25, 29, 31, 1341, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1496, 1497, 1507, 1871, 1896, 1910, 1913, 1949], "dot": [0, 2, 13, 51, 52, 604, 889, 891, 892, 893, 1044, 1045, 1046, 1047, 1123, 1133, 1169, 1212, 1259, 1260, 1286, 1341, 1342, 1361, 1372, 1385, 1392, 1416, 1431, 1432, 1474, 1574, 1811, 1858, 1859, 1860, 1861, 1871, 1886, 1901, 1913, 1915], "grid_sampl": [0, 1489, 1850, 1871, 1913], "index_put": [0, 1850, 1871, 1913, 1951], "scatter_add": [0, 1871, 1913, 1951], "tensordot": [0, 1169, 1257, 1258, 1875, 1896, 1913], "binari": [0, 2, 13, 14, 21, 29, 31, 33, 38, 40, 54, 142, 722, 909, 1285, 1341, 1342, 1431, 1496, 1497, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1661, 1665, 1869, 1874, 1886, 1887, 1903, 1911, 1915, 1932], "add": [0, 1, 3, 7, 14, 16, 20, 23, 25, 27, 37, 40, 44, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 70, 74, 86, 278, 301, 500, 502, 673, 674, 675, 678, 734, 735, 744, 777, 780, 825, 846, 848, 849, 981, 1011, 1022, 1065, 1122, 1192, 1203, 1333, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1401, 1402, 1403, 1404, 1405, 1406, 1425, 1427, 1431, 1432, 1436, 1439, 1526, 1567, 1596, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1757, 1807, 1868, 1870, 1871, 1872, 1873, 1877, 1881, 1883, 1886, 1888, 1892, 1894, 1895, 1898, 1899, 1902, 1903, 1904, 1906, 1911, 1912, 1913, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1927, 1930, 1931, 1932, 1936, 1937, 1941, 1942, 1943, 1944, 1947, 1950, 1951, 1954, 1955, 1956, 1957, 1958], "nativ": [0, 2, 11, 21, 28, 46, 54, 991, 1122, 1202, 1609, 1610, 1757, 1870, 1873, 1885, 1896, 1909, 1914, 1915, 1923], "without": [0, 1, 3, 5, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 27, 29, 33, 40, 44, 46, 47, 52, 53, 54, 55, 56, 242, 475, 604, 936, 939, 969, 971, 1006, 1086, 1087, 1088, 1096, 1097, 1098, 1189, 1190, 1192, 1193, 1238, 1239, 1254, 1261, 1315, 1343, 1344, 1345, 1365, 1369, 1388, 1389, 1390, 1422, 1425, 1433, 1464, 1472, 1516, 1596, 1605, 1629, 1645, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1689, 1720, 1736, 1753, 1754, 1845, 1868, 1872, 1873, 1880, 1881, 1883, 1885, 1887, 1892, 1893, 1894, 1896, 1897, 1898, 1901, 1902, 1904, 1906, 1908, 1909, 1911, 1915, 1916, 1918, 1922, 1923, 1927, 1932, 1937, 1941, 1943, 1944, 1945, 1946, 1956, 1959], "intervent": [0, 8, 1923], "mixtur": [0, 29, 1361, 1507], "bceloss": [0, 1342, 1496], "aren": [0, 8, 51, 54, 69, 1122, 1886, 1893, 1924, 1957], "mean": [0, 2, 3, 5, 7, 8, 14, 17, 20, 21, 23, 25, 27, 29, 40, 42, 44, 46, 47, 49, 52, 53, 54, 242, 309, 323, 365, 441, 475, 482, 504, 745, 747, 768, 781, 783, 848, 849, 907, 920, 957, 1121, 1123, 1202, 1292, 1310, 1315, 1320, 1324, 1325, 1331, 1332, 1333, 1335, 1336, 1337, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1359, 1361, 1363, 1367, 1369, 1370, 1371, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1395, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1411, 1412, 1414, 1415, 1416, 1417, 1424, 1428, 1429, 1430, 1432, 1433, 1439, 1440, 1443, 1444, 1445, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1473, 1474, 1475, 1495, 1496, 1497, 1505, 1507, 1508, 1516, 1517, 1521, 1532, 1533, 1536, 1537, 1541, 1547, 1555, 1556, 1557, 1558, 1559, 1567, 1578, 1579, 1590, 1591, 1605, 1653, 1684, 1717, 1726, 1727, 1757, 1771, 1792, 1809, 1810, 1816, 1850, 1856, 1857, 1868, 1870, 1871, 1872, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1901, 1904, 1910, 1911, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1923, 1924, 1925, 1927, 1944, 1945, 1946, 1949, 1950, 1951, 1952, 1953], "doesn": [0, 1, 2, 7, 8, 11, 20, 23, 25, 49, 51, 53, 54, 72, 810, 813, 867, 884, 894, 969, 990, 1122, 1133, 1199, 1205, 1231, 1255, 1263, 1272, 1353, 1354, 1355, 1362, 1391, 1458, 1499, 1500, 1501, 1536, 1580, 1605, 1606, 1628, 1673, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1788, 1792, 1861, 1870, 1873, 1874, 1886, 1888, 1893, 1894, 1896, 1898, 1899, 1903, 1906, 1910, 1914, 1916, 1924, 1927, 1945, 1946, 1951, 1956], "help": [0, 1, 4, 7, 8, 11, 13, 20, 21, 23, 37, 40, 46, 51, 54, 895, 896, 904, 990, 1022, 1122, 1123, 1133, 1192, 1193, 1211, 1293, 1306, 1307, 1364, 1365, 1366, 1370, 1425, 1612, 1764, 1861, 1868, 1873, 1880, 1886, 1887, 1892, 1893, 1894, 1896, 1897, 1899, 1902, 1904, 1907, 1911, 1912, 1915, 1923, 1924, 1927, 1935, 1945, 1948, 1949, 1950, 1954, 1956], "revers": [0, 29, 52, 54, 500, 721, 780, 888, 890, 1083, 1085, 1105, 1125, 1127, 1132, 1259, 1395, 1438, 1566, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1838, 1855, 1871, 1872, 1873, 1893, 1897, 1899, 1913, 1933], "therefor": [0, 3, 5, 20, 21, 23, 29, 30, 38, 46, 49, 55, 60, 61, 74, 435, 531, 894, 908, 917, 941, 1011, 1099, 1116, 1118, 1121, 1149, 1150, 1204, 1207, 1237, 1250, 1368, 1369, 1476, 1515, 1516, 1524, 1647, 1689, 1873, 1892, 1893, 1896, 1898, 1900, 1903, 1911, 1925, 1927, 1943, 1947, 1949], "rais": [0, 1, 5, 7, 13, 23, 27, 29, 31, 33, 40, 44, 46, 51, 53, 54, 55, 76, 301, 303, 309, 684, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 920, 929, 970, 1035, 1108, 1113, 1190, 1192, 1197, 1199, 1207, 1209, 1221, 1223, 1231, 1232, 1235, 1239, 1240, 1245, 1252, 1253, 1257, 1258, 1263, 1284, 1310, 1425, 1574, 1599, 1617, 1618, 1623, 1625, 1628, 1638, 1660, 1662, 1663, 1664, 1665, 1751, 1800, 1850, 1868, 1874, 1880, 1885, 1893, 1896, 1898, 1900, 1907, 1911, 1915, 1916, 1922, 1923, 1934, 1945, 1946, 1949, 1955, 1956, 1957], "mani": [0, 3, 7, 11, 13, 20, 21, 23, 29, 40, 44, 46, 50, 51, 54, 76, 390, 667, 876, 878, 888, 890, 1065, 1204, 1348, 1684, 1783, 1832, 1839, 1840, 1841, 1842, 1870, 1872, 1886, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1903, 1904, 1907, 1911, 1914, 1918, 1925, 1927, 1930, 1932, 1933, 1935, 1942, 1944, 1945, 1946, 1948, 1949, 1950, 1952, 1955, 1956, 1958], "sigmoid": [0, 29, 54, 514, 654, 655, 747, 782, 1341, 1342, 1368, 1377, 1378, 1395, 1396, 1454, 1496, 1523, 1577, 1871, 1886, 1887, 1891, 1913, 1920, 1928, 1951], "right": [0, 2, 7, 9, 23, 25, 29, 46, 54, 807, 852, 908, 915, 917, 918, 923, 928, 1059, 1065, 1106, 1109, 1110, 1114, 1145, 1149, 1150, 1154, 1158, 1189, 1211, 1236, 1241, 1252, 1254, 1255, 1263, 1269, 1270, 1315, 1333, 1338, 1339, 1340, 1341, 1342, 1353, 1354, 1355, 1372, 1379, 1392, 1393, 1394, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1428, 1429, 1430, 1434, 1435, 1441, 1473, 1476, 1477, 1478, 1479, 1524, 1544, 1562, 1610, 1617, 1673, 1687, 1688, 1729, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1811, 1831, 1836, 1838, 1853, 1855, 1868, 1871, 1873, 1885, 1886, 1887, 1893, 1898, 1901, 1911, 1914, 1921, 1925, 1928, 1943, 1945, 1954], "entropi": [0, 29, 1341, 1361, 1429, 1496, 1497, 1507, 1928], "combin": [0, 3, 20, 21, 23, 40, 52, 53, 604, 676, 699, 700, 701, 702, 703, 704, 705, 706, 780, 841, 877, 1022, 1094, 1095, 1100, 1102, 1154, 1286, 1296, 1342, 1372, 1386, 1431, 1472, 1476, 1518, 1541, 1624, 1870, 1871, 1872, 1892, 1896, 1899, 1911, 1913, 1914, 1916, 1918, 1921, 1923, 1942, 1949], "bcewithlogitsloss": [0, 1497], "bcewithlogit": 0, "safe": [0, 23, 40, 53, 54, 73, 75, 1012, 1013, 1032, 1033, 1605, 1670, 1671, 1674, 1870, 1873, 1892, 1893, 1896, 1899, 1903, 1923, 1938, 1941, 1946, 1947, 1949, 1956], "_convolut": [0, 1913], "avg_pool3d": [0, 1871, 1913, 1920, 1951], "grid_sampler_2d": [0, 1871, 1913, 1951], "_grid_sampler_2d_cpu_fallback": [0, 1913], "grid_sampler_3d": [0, 1871, 1913], "polar": [0, 29, 1251, 1871, 1913], "quantil": [0, 1292, 1322, 1871, 1913, 1928], "nanquantil": [0, 1871, 1913], "stft": [0, 908, 917, 1149, 1150, 1189, 1211, 1871, 1913], "view_as_complex": [0, 11, 1871, 1913], "choleski": [0, 2, 29, 931, 932, 1222, 1228, 1264, 1871, 1913], "cholesky_invers": [0, 2, 1871, 1913], "cholesky_solv": [0, 2, 1871, 1913], "invers": [0, 29, 670, 671, 869, 872, 926, 931, 932, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1189, 1232, 1233, 1245, 1249, 1252, 1257, 1258, 1356, 1357, 1358, 1368, 1369, 1372, 1421, 1422, 1423, 1476, 1515, 1516, 1551, 1552, 1553, 1614, 1617, 1641, 1689, 1695, 1846, 1869, 1871, 1873, 1907, 1913, 1928], "lu_solv": [0, 2, 1239, 1871, 1913], "orgqr": [0, 1871, 1913], "ormqr": [0, 1137, 1231, 1871, 1913], "pinvers": [0, 1237, 1871, 1913], "max_pool3d": [0, 1871, 1913, 1920], "max_unpool2d": [0, 1519, 1549, 1871, 1913], "max_unpool3d": [0, 1520, 1550, 1871, 1913], "adaptive_avg_pool3d": [0, 1871, 1898, 1913, 1920], "reflection_pad1d": [0, 1871, 1913, 1951], "reflection_pad2d": [0, 1871, 1913, 1951], "replication_pad1d": [0, 1871, 1913], "replication_pad2d": [0, 1871, 1913, 1951], "replication_pad3d": [0, 1871, 1913, 1951], "ctc_loss": [0, 1348, 1871, 1913], "fft_fft": [0, 1871, 1913], "fft_ifft": [0, 1871, 1913], "fft_fft2": [0, 1871, 1913], "fft_ifft2": [0, 1871, 1913], "fft_fftn": [0, 1871, 1913], "fft_ifftn": [0, 1871, 1913], "fft_rfft": [0, 1871, 1913], "fft_irfft": [0, 1871, 1913], "fft_rfft2": [0, 1871, 1913], "fft_irfft2": [0, 1871, 1913], "fft_rfftn": [0, 1871, 1913], "fft_irfftn": [0, 1871, 1913], "fft_hfft": [0, 1871, 1913], "fft_ihfft": [0, 1871, 1913], "linalg_matrix_norm": [0, 1871, 1913], "linalg_cond": [0, 1871, 1913], "linalg_matrix_rank": [0, 1871, 1913], "linalg_solv": [0, 1871, 1913], "linalg_choleski": [0, 1871, 1913], "linalg_svdv": [0, 1871, 1913], "linalg_eigv": [0, 1871, 1913], "linalg_eigvalsh": [0, 1871, 1913], "linalg_inv": [0, 1871, 1913], "linalg_householder_product": [0, 1871, 1913], "linalg_tensorinv": [0, 1871, 1913], "linalg_tensorsolv": [0, 1871, 1913], "fake_quantize_per_tensor_affin": [0, 1871, 1913], "eig": [0, 1228, 1229, 1255, 1907], "geqrf": [0, 1231, 1701, 1871, 1913], "lstsq": [0, 1137, 1223, 1249], "_lu_with_info": [0, 1913], "qr": [0, 2, 1137, 1227, 1228, 1231, 1237, 1255, 1612, 1701, 1871, 1913], "solv": [0, 7, 11, 932, 1137, 1145, 1223, 1232, 1234, 1235, 1238, 1239, 1241, 1245, 1253, 1254, 1258, 1264, 1282, 1838, 1893, 1901, 1907, 1910, 1938, 1946], "svd": [0, 2, 11, 1227, 1228, 1237, 1249, 1256, 1272, 1617, 1703, 1816, 1871, 1907, 1913, 1927, 1951], "symeig": 0, "triangular_solv": [0, 1871, 1913], "fractional_max_pool2d": [0, 1871, 1913], "fractional_max_pool3d": [0, 1871, 1913], "adaptive_max_pool3d": [0, 1871, 1913], "multilabel_margin_loss_forward": [0, 1913], "linalg_qr": [0, 1871, 1913], "linalg_cholesky_ex": [0, 1871, 1913], "linalg_svd": [0, 1871, 1913], "linalg_eig": [0, 1871, 1913], "linalg_eigh": [0, 1871, 1913], "linalg_lstsq": [0, 1871, 1913], "linalg_inv_ex": [0, 1871, 1913], "cat": [0, 23, 29, 54, 531, 734, 735, 744, 780, 783, 948, 949, 1293, 1444, 1796, 1808, 1870, 1871, 1886, 1911, 1913, 1915, 1918, 1920, 1927, 1936, 1944, 1951], "stack": [0, 8, 17, 20, 21, 23, 29, 33, 50, 51, 54, 747, 904, 926, 937, 1026, 1027, 1064, 1131, 1133, 1157, 1293, 1348, 1377, 1395, 1396, 1440, 1469, 1471, 1642, 1852, 1861, 1863, 1869, 1871, 1888, 1896, 1897, 1900, 1913, 1915, 1917, 1920, 1927, 1943, 1945, 1946, 1949, 1956, 1958], "index_copi": [0, 1850, 1871, 1913], "implement": [1, 2, 5, 8, 15, 16, 20, 21, 23, 24, 25, 27, 29, 32, 37, 38, 41, 44, 46, 51, 54, 55, 57, 63, 68, 72, 138, 500, 502, 504, 674, 725, 726, 727, 728, 729, 730, 747, 766, 768, 772, 780, 787, 806, 807, 808, 811, 812, 813, 865, 867, 880, 889, 895, 896, 955, 1065, 1108, 1113, 1118, 1125, 1126, 1128, 1129, 1192, 1199, 1201, 1202, 1205, 1247, 1250, 1263, 1264, 1292, 1333, 1348, 1362, 1377, 1393, 1394, 1425, 1431, 1437, 1444, 1461, 1470, 1472, 1524, 1562, 1574, 1582, 1605, 1609, 1610, 1612, 1613, 1617, 1628, 1641, 1645, 1646, 1649, 1661, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1687, 1689, 1695, 1713, 1720, 1733, 1742, 1745, 1782, 1792, 1815, 1816, 1831, 1847, 1850, 1851, 1853, 1872, 1873, 1874, 1877, 1880, 1885, 1888, 1889, 1891, 1892, 1893, 1895, 1896, 1898, 1899, 1900, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1914, 1915, 1916, 1918, 1923, 1924, 1927, 1928, 1931, 1933, 1941, 1944, 1949, 1952, 1957], "arbitrari": [1, 3, 23, 27, 55, 58, 62, 242, 877, 1048, 1255, 1263, 1362, 1368, 1392, 1416, 1476, 1496, 1497, 1515, 1536, 1562, 1638, 1815, 1836, 1873, 1879, 1893, 1899, 1903, 1904, 1914, 1916, 1918, 1927, 1935, 1946, 1952, 1956, 1957], "scalar": [1, 23, 29, 44, 55, 63, 85, 138, 142, 248, 301, 433, 576, 674, 675, 725, 726, 727, 728, 729, 730, 866, 867, 880, 888, 889, 892, 894, 912, 915, 923, 953, 957, 1060, 1065, 1080, 1113, 1119, 1145, 1152, 1169, 1183, 1216, 1217, 1286, 1293, 1322, 1333, 1341, 1342, 1348, 1359, 1361, 1362, 1379, 1385, 1386, 1391, 1392, 1397, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1474, 1526, 1568, 1651, 1656, 1657, 1662, 1697, 1710, 1712, 1714, 1732, 1733, 1749, 1798, 1799, 1800, 1801, 1802, 1829, 1847, 1848, 1864, 1866, 1867, 1871, 1872, 1873, 1883, 1888, 1891, 1893, 1898, 1901, 1911, 1923, 1927, 1930, 1932, 1934, 1945, 1951, 1955], "minim": [1, 7, 8, 806, 862, 1294, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1681, 1682, 1683, 1684, 1697, 1868, 1883, 1892, 1896, 1904, 1906, 1909, 1911, 1916, 1918, 1946, 1956], "exist": [1, 7, 8, 9, 11, 13, 20, 23, 24, 25, 29, 31, 33, 38, 40, 41, 46, 50, 54, 55, 70, 71, 242, 486, 779, 841, 865, 888, 889, 890, 891, 892, 893, 894, 895, 958, 959, 960, 961, 962, 963, 964, 1006, 1192, 1196, 1207, 1227, 1232, 1238, 1239, 1264, 1322, 1425, 1426, 1435, 1790, 1808, 1853, 1868, 1870, 1877, 1880, 1885, 1886, 1888, 1889, 1893, 1894, 1896, 1898, 1899, 1902, 1903, 1904, 1905, 1907, 1909, 1911, 1915, 1916, 1917, 1918, 1923, 1925, 1927, 1931, 1933, 1941, 1942, 1945, 1947, 1951, 1954, 1958], "code": [1, 3, 4, 8, 9, 11, 13, 14, 15, 20, 21, 23, 28, 29, 31, 41, 42, 44, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 107, 667, 939, 941, 958, 959, 960, 961, 962, 963, 964, 1008, 1009, 1022, 1122, 1167, 1192, 1196, 1197, 1202, 1203, 1204, 1207, 1208, 1209, 1222, 1233, 1235, 1263, 1441, 1453, 1605, 1761, 1868, 1869, 1872, 1873, 1879, 1887, 1893, 1894, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1909, 1910, 1911, 1914, 1922, 1923, 1924, 1925, 1927, 1930, 1931, 1938, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1954, 1955, 1956, 1957, 1958], "declar": [1, 9, 13, 20, 41, 1872, 1873, 1874, 1898, 1911, 1915, 1916], "requires_grad": [1, 5, 29, 46, 52, 323, 432, 433, 434, 435, 436, 474, 475, 483, 852, 867, 884, 886, 887, 895, 896, 898, 900, 901, 908, 917, 1011, 1066, 1067, 1068, 1069, 1078, 1083, 1101, 1118, 1119, 1120, 1123, 1133, 1149, 1150, 1167, 1192, 1211, 1262, 1278, 1341, 1342, 1361, 1368, 1369, 1379, 1391, 1392, 1416, 1417, 1425, 1431, 1432, 1439, 1472, 1473, 1496, 1497, 1507, 1559, 1605, 1606, 1607, 1608, 1645, 1650, 1656, 1657, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1759, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1792, 1797, 1798, 1799, 1800, 1801, 1802, 1829, 1850, 1861, 1866, 1867, 1871, 1875, 1886, 1887, 1888, 1896, 1898, 1899, 1904, 1909, 1911, 1913, 1923, 1924, 1933, 1934, 1935, 1943, 1945, 1951, 1954], "type": [1, 2, 3, 5, 13, 14, 16, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 38, 40, 41, 42, 44, 46, 51, 53, 54, 55, 57, 60, 61, 63, 64, 65, 68, 69, 73, 75, 76, 138, 179, 184, 196, 314, 317, 321, 329, 432, 433, 434, 435, 436, 468, 546, 591, 667, 672, 673, 674, 675, 676, 677, 721, 722, 725, 726, 727, 736, 738, 739, 740, 741, 743, 751, 753, 754, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 771, 779, 780, 781, 784, 802, 803, 804, 806, 807, 808, 809, 810, 812, 814, 827, 841, 842, 843, 844, 845, 846, 847, 848, 849, 852, 860, 866, 876, 877, 878, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 923, 924, 925, 926, 927, 929, 938, 939, 940, 945, 960, 961, 962, 963, 975, 977, 984, 985, 986, 988, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1003, 1005, 1008, 1009, 1010, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1028, 1040, 1042, 1043, 1046, 1047, 1060, 1065, 1066, 1067, 1068, 1078, 1079, 1080, 1083, 1101, 1108, 1110, 1111, 1112, 1113, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1129, 1130, 1131, 1133, 1135, 1139, 1140, 1141, 1144, 1149, 1150, 1152, 1153, 1154, 1168, 1171, 1173, 1174, 1177, 1180, 1188, 1189, 1190, 1192, 1193, 1195, 1198, 1201, 1203, 1205, 1207, 1208, 1210, 1211, 1214, 1223, 1227, 1244, 1248, 1255, 1261, 1262, 1263, 1264, 1278, 1281, 1284, 1291, 1293, 1300, 1301, 1304, 1314, 1320, 1323, 1333, 1337, 1353, 1354, 1355, 1362, 1369, 1415, 1425, 1426, 1427, 1431, 1435, 1436, 1453, 1458, 1459, 1460, 1468, 1469, 1470, 1471, 1472, 1484, 1485, 1489, 1490, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1542, 1543, 1545, 1546, 1547, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1567, 1569, 1570, 1572, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1587, 1589, 1590, 1591, 1592, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1649, 1651, 1652, 1656, 1657, 1660, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1703, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1735, 1739, 1742, 1749, 1750, 1753, 1754, 1755, 1757, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1791, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1811, 1812, 1814, 1815, 1816, 1829, 1838, 1840, 1842, 1847, 1848, 1850, 1851, 1852, 1855, 1861, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1874, 1881, 1882, 1883, 1886, 1888, 1891, 1892, 1893, 1895, 1896, 1901, 1902, 1903, 1904, 1907, 1909, 1910, 1912, 1913, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1927, 1928, 1929, 1930, 1932, 1934, 1935, 1936, 1937, 1942, 1943, 1944, 1949, 1951, 1955, 1957], "doubl": [1, 3, 31, 468, 474, 604, 736, 738, 739, 740, 741, 743, 753, 754, 768, 884, 886, 891, 895, 896, 924, 931, 947, 965, 1011, 1080, 1108, 1145, 1192, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1272, 1273, 1274, 1275, 1276, 1282, 1369, 1425, 1484, 1487, 1516, 1596, 1662, 1701, 1707, 1797, 1798, 1799, 1801, 1802, 1815, 1829, 1838, 1864, 1873, 1886, 1896, 1898, 1899, 1907, 1911, 1915, 1929, 1930, 1933], "bfloat16": [1, 21, 46, 1174, 1192, 1243, 1260, 1425, 1662, 1670, 1671, 1757, 1886, 1896, 1927, 1929, 1930, 1933, 1934, 1959], "cfloat": [1, 11, 23, 299, 470, 604, 931, 965, 1162, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1282, 1701, 1731, 1815, 1838, 1860, 1930, 1933], "cdoubl": [1, 11, 931, 965, 1192, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1282, 1425, 1701, 1815, 1838, 1930, 1933], "beta": [1, 2, 11, 47, 53, 87, 88, 93, 94, 95, 96, 97, 98, 139, 140, 309, 504, 541, 673, 676, 677, 678, 907, 966, 1000, 1001, 1008, 1009, 1011, 1149, 1211, 1286, 1296, 1343, 1344, 1345, 1380, 1386, 1388, 1389, 1390, 1397, 1413, 1456, 1461, 1464, 1541, 1542, 1574, 1578, 1582, 1670, 1671, 1672, 1674, 1680, 1684, 1717, 1775, 1777, 1788, 1793, 1807, 1869, 1871, 1881, 1896, 1911, 1918, 1923, 1927, 1930, 1935, 1951], "even": [1, 8, 20, 21, 23, 28, 31, 46, 53, 54, 75, 531, 567, 802, 803, 804, 880, 957, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1096, 1097, 1098, 1101, 1132, 1177, 1204, 1221, 1223, 1227, 1228, 1229, 1230, 1244, 1248, 1250, 1251, 1255, 1256, 1261, 1286, 1292, 1362, 1464, 1499, 1500, 1501, 1562, 1605, 1612, 1650, 1652, 1695, 1742, 1753, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1815, 1859, 1870, 1873, 1874, 1883, 1888, 1892, 1893, 1896, 1898, 1900, 1902, 1904, 1906, 1907, 1908, 1909, 1914, 1915, 1916, 1925, 1930, 1941, 1944, 1945, 1946, 1948, 1949, 1958], "though": [1, 23, 54, 55, 58, 138, 781, 877, 880, 890, 1081, 1082, 1084, 1190, 1193, 1286, 1652, 1870, 1874, 1887, 1888, 1893, 1896, 1898, 1899, 1906, 1907, 1914, 1918, 1945, 1958], "signatur": [1, 20, 33, 44, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 386, 474, 475, 543, 900, 901, 967, 1192, 1425, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1617, 1638, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1811, 1896, 1898, 1899, 1911, 1915, 1916, 1923, 1927, 1948, 1949, 1957], "veri": [1, 4, 7, 8, 17, 20, 21, 23, 50, 52, 54, 941, 955, 1123, 1131, 1133, 1254, 1388, 1389, 1390, 1605, 1606, 1612, 1673, 1695, 1701, 1778, 1782, 1838, 1861, 1872, 1885, 1893, 1898, 1900, 1901, 1902, 1904, 1906, 1907, 1910, 1914, 1915, 1922, 1923, 1924, 1927, 1945, 1946, 1948, 1949, 1955, 1956], "unlik": [1, 3, 7, 29, 46, 52, 475, 480, 1062, 1101, 1104, 1108, 1167, 1227, 1228, 1247, 1250, 1255, 1259, 1289, 1292, 1294, 1397, 1607, 1608, 1732, 1754, 1858, 1872, 1873, 1885, 1888, 1896, 1906, 1908, 1930, 1935, 1944, 1946], "coverag": [1, 7, 47, 54, 1125, 1126, 1869, 1870, 1875, 1887, 1918, 1927, 1957], "plan": [1, 2, 7, 9, 23, 25, 28, 881, 1605, 1713, 1888, 1893, 1898, 1915, 1927, 1944, 1955, 1956], "consid": [1, 5, 8, 21, 23, 31, 40, 44, 46, 51, 53, 54, 681, 766, 772, 781, 888, 890, 891, 895, 932, 957, 1052, 1053, 1054, 1055, 1056, 1086, 1121, 1181, 1185, 1188, 1192, 1232, 1234, 1235, 1236, 1237, 1245, 1246, 1249, 1254, 1257, 1361, 1372, 1425, 1428, 1476, 1489, 1524, 1535, 1593, 1606, 1612, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1647, 1683, 1751, 1771, 1806, 1839, 1840, 1841, 1842, 1868, 1870, 1873, 1877, 1880, 1892, 1893, 1894, 1898, 1900, 1901, 1904, 1907, 1915, 1917, 1919, 1924, 1925, 1927, 1930, 1933, 1934, 1944, 1946, 1955, 1957, 1958], "ad": [1, 3, 9, 13, 20, 21, 23, 27, 29, 37, 44, 46, 49, 51, 52, 53, 54, 209, 210, 301, 307, 458, 502, 667, 673, 674, 675, 676, 677, 678, 722, 881, 882, 883, 888, 889, 890, 891, 895, 907, 1065, 1069, 1125, 1126, 1128, 1167, 1192, 1205, 1269, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1431, 1432, 1434, 1439, 1453, 1464, 1468, 1473, 1476, 1502, 1503, 1504, 1521, 1548, 1549, 1550, 1574, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1617, 1624, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1650, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1717, 1718, 1719, 1759, 1788, 1793, 1807, 1868, 1869, 1870, 1872, 1877, 1883, 1887, 1892, 1899, 1901, 1903, 1904, 1915, 1918, 1921, 1927, 1932, 1935, 1942, 1945, 1946, 1951, 1952, 1955, 1958], "tutori": [1, 3, 9, 14, 23, 24, 27, 54, 881, 882, 883, 886, 1853, 1869, 1870, 1877, 1880, 1889, 1898, 1903, 1904, 1906, 1909, 1911, 1918, 1945, 1948], "how": [1, 3, 5, 7, 8, 9, 14, 16, 20, 23, 25, 28, 32, 40, 41, 42, 44, 46, 47, 48, 50, 51, 54, 55, 62, 63, 68, 221, 474, 475, 772, 779, 780, 783, 828, 846, 848, 849, 881, 882, 883, 886, 900, 901, 1048, 1069, 1122, 1131, 1145, 1167, 1192, 1202, 1263, 1372, 1425, 1476, 1477, 1562, 1593, 1605, 1638, 1650, 1733, 1757, 1759, 1772, 1783, 1869, 1870, 1872, 1873, 1877, 1880, 1882, 1885, 1886, 1887, 1889, 1892, 1895, 1896, 1897, 1899, 1900, 1901, 1904, 1906, 1908, 1909, 1911, 1916, 1918, 1921, 1923, 1924, 1925, 1927, 1932, 1944, 1948, 1949, 1950, 1958], "major": [1, 6, 7, 8, 9, 993, 1815, 1869, 1873, 1914, 1944, 1946, 1948, 1950], "build": [1, 8, 9, 13, 14, 23, 29, 54, 1192, 1201, 1425, 1471, 1489, 1524, 1869, 1870, 1880, 1889, 1893, 1911, 1916, 1918, 1924, 1932, 1933, 1938, 1941, 1956], "basic": [1, 3, 7, 9, 25, 40, 54, 55, 56, 1125, 1126, 1127, 1198, 1264, 1605, 1689, 1869, 1874, 1889, 1894, 1896, 1897, 1901, 1915, 1924, 1931, 1932, 1943, 1946, 1948, 1949], "jacobian": [1, 29, 47, 48, 50, 51, 880, 882, 888, 891, 893, 894, 895, 896, 1126, 1127, 1128, 1132, 1133, 1861, 1893, 1898, 1901], "hessian": [1, 47, 50, 51, 889, 892, 1126, 1127, 1891, 1899], "etc": [1, 3, 5, 11, 20, 21, 23, 29, 31, 40, 41, 46, 846, 847, 848, 941, 1189, 1192, 1361, 1425, 1605, 1660, 1735, 1868, 1872, 1873, 1880, 1898, 1899, 1900, 1904, 1906, 1911, 1914, 1915, 1918, 1923, 1927, 1929, 1932, 1935, 1941, 1943, 1949], "user": [1, 2, 5, 7, 8, 9, 10, 11, 14, 20, 21, 23, 24, 25, 28, 29, 30, 31, 33, 37, 40, 41, 43, 44, 46, 47, 50, 51, 53, 54, 55, 72, 138, 323, 719, 725, 726, 727, 732, 733, 743, 751, 781, 784, 786, 825, 841, 848, 849, 880, 886, 894, 969, 1002, 1116, 1121, 1122, 1192, 1228, 1263, 1425, 1468, 1470, 1471, 1472, 1574, 1599, 1600, 1605, 1614, 1628, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1868, 1869, 1870, 1872, 1873, 1877, 1880, 1885, 1887, 1888, 1892, 1893, 1894, 1896, 1898, 1901, 1902, 1903, 1904, 1906, 1911, 1912, 1914, 1916, 1917, 1918, 1920, 1923, 1924, 1927, 1931, 1932, 1934, 1941, 1942, 1944, 1945, 1947, 1948, 1949, 1952, 1954, 1956, 1957], "input": [1, 2, 3, 5, 9, 11, 14, 18, 20, 21, 23, 24, 27, 28, 29, 30, 33, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 62, 63, 68, 70, 72, 73, 74, 76, 138, 248, 268, 289, 389, 470, 486, 504, 596, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 707, 715, 716, 721, 722, 725, 726, 727, 728, 729, 730, 732, 733, 743, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 778, 779, 780, 781, 783, 784, 785, 786, 787, 789, 801, 804, 806, 824, 825, 826, 827, 844, 845, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 880, 884, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 904, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 922, 923, 925, 927, 928, 930, 931, 932, 933, 934, 935, 936, 938, 939, 947, 950, 951, 952, 953, 954, 955, 956, 957, 965, 981, 1008, 1009, 1011, 1044, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1133, 1134, 1135, 1136, 1137, 1138, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1174, 1177, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1195, 1196, 1198, 1199, 1203, 1205, 1207, 1208, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1282, 1284, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1593, 1594, 1595, 1596, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1615, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629, 1631, 1632, 1633, 1634, 1638, 1639, 1640, 1642, 1647, 1650, 1651, 1652, 1654, 1655, 1657, 1660, 1661, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1688, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1721, 1723, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1746, 1747, 1748, 1751, 1752, 1754, 1757, 1765, 1766, 1767, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1806, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1824, 1825, 1826, 1827, 1828, 1830, 1832, 1833, 1834, 1835, 1838, 1839, 1841, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1865, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1880, 1881, 1887, 1888, 1889, 1891, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1907, 1908, 1909, 1911, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1927, 1928, 1930, 1931, 1934, 1936, 1937, 1941, 1943, 1944, 1945, 1946, 1951, 1954, 1955, 1956, 1957], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 138, 142, 242, 311, 323, 445, 474, 475, 500, 502, 532, 601, 604, 667, 674, 716, 728, 729, 730, 735, 744, 745, 747, 755, 756, 759, 760, 761, 772, 778, 779, 780, 781, 784, 786, 801, 807, 810, 811, 813, 824, 828, 841, 845, 846, 848, 849, 850, 866, 867, 876, 877, 878, 880, 881, 882, 883, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 900, 901, 903, 909, 926, 932, 939, 942, 945, 950, 966, 968, 978, 980, 982, 989, 990, 1000, 1008, 1010, 1014, 1016, 1018, 1022, 1023, 1048, 1065, 1066, 1069, 1070, 1083, 1085, 1086, 1087, 1088, 1101, 1104, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1131, 1132, 1133, 1136, 1137, 1145, 1148, 1153, 1154, 1167, 1183, 1189, 1190, 1192, 1193, 1195, 1196, 1198, 1202, 1203, 1205, 1207, 1208, 1213, 1216, 1223, 1231, 1234, 1238, 1239, 1244, 1247, 1250, 1251, 1255, 1261, 1263, 1280, 1281, 1283, 1293, 1302, 1303, 1322, 1324, 1325, 1326, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1362, 1363, 1367, 1368, 1369, 1370, 1373, 1374, 1377, 1382, 1383, 1384, 1386, 1392, 1394, 1395, 1398, 1399, 1400, 1411, 1415, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1452, 1453, 1456, 1461, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1477, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1519, 1520, 1535, 1548, 1549, 1550, 1568, 1574, 1593, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1617, 1638, 1639, 1645, 1650, 1652, 1656, 1660, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1692, 1693, 1695, 1699, 1701, 1710, 1714, 1722, 1726, 1736, 1742, 1745, 1757, 1759, 1760, 1762, 1787, 1790, 1797, 1798, 1799, 1800, 1801, 1802, 1806, 1809, 1810, 1811, 1815, 1829, 1833, 1836, 1838, 1846, 1849, 1851, 1853, 1856, 1857, 1861, 1866, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1958, 1959], "lambda": [1, 20, 25, 29, 49, 52, 53, 54, 55, 62, 63, 246, 474, 475, 900, 901, 927, 1123, 1128, 1132, 1133, 1227, 1228, 1229, 1230, 1263, 1381, 1462, 1474, 1564, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1683, 1689, 1691, 1694, 1789, 1861, 1874, 1893, 1898, 1899, 1914, 1915, 1923, 1934, 1957], "captur": [1, 14, 44, 54, 55, 58, 62, 63, 667, 966, 968, 1000, 1006, 1011, 1195, 1303, 1670, 1671, 1674, 1870, 1874, 1879, 1898, 1899, 1902, 1911, 1915, 1918, 1937, 1938, 1941, 1943, 1944, 1946, 1949, 1954, 1956], "f": [1, 10, 21, 23, 29, 31, 32, 37, 38, 44, 47, 48, 51, 52, 53, 54, 55, 56, 161, 246, 274, 323, 365, 882, 883, 1083, 1085, 1092, 1101, 1122, 1123, 1125, 1126, 1127, 1128, 1132, 1133, 1145, 1192, 1199, 1202, 1203, 1263, 1391, 1393, 1394, 1396, 1425, 1474, 1491, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1515, 1516, 1519, 1520, 1526, 1559, 1561, 1562, 1574, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1745, 1861, 1870, 1872, 1873, 1886, 1887, 1893, 1896, 1898, 1900, 1901, 1902, 1904, 1910, 1911, 1915, 1916, 1923, 1927, 1932, 1934, 1942, 1944, 1946, 1949, 1955, 1957], "three": [1, 2, 6, 9, 23, 27, 46, 48, 51, 54, 75, 875, 1063, 1065, 1145, 1154, 1235, 1238, 1239, 1240, 1255, 1283, 1340, 1355, 1358, 1397, 1420, 1574, 1612, 1652, 1689, 1757, 1873, 1893, 1896, 1897, 1898, 1911, 1915, 1916, 1918, 1923, 1925, 1927, 1932, 1953], "anoth": [1, 5, 7, 20, 21, 23, 25, 29, 30, 31, 42, 44, 46, 54, 473, 946, 966, 968, 969, 971, 1116, 1201, 1227, 1228, 1231, 1255, 1368, 1369, 1426, 1435, 1596, 1613, 1753, 1870, 1872, 1873, 1879, 1892, 1893, 1895, 1896, 1898, 1904, 1906, 1910, 1915, 1916, 1924, 1925, 1927, 1933, 1935, 1941, 1942, 1946, 1948, 1949, 1952, 1955, 1958], "constant": [1, 20, 44, 54, 55, 56, 60, 61, 63, 65, 731, 762, 808, 809, 942, 1048, 1105, 1106, 1107, 1189, 1192, 1196, 1207, 1239, 1264, 1350, 1351, 1352, 1369, 1372, 1379, 1434, 1456, 1473, 1476, 1521, 1524, 1562, 1613, 1665, 1681, 1686, 1689, 1836, 1871, 1873, 1892, 1898, 1904, 1908, 1911, 1914, 1927, 1945, 1948, 1949], "boolean": [1, 13, 29, 40, 54, 55, 62, 63, 388, 390, 876, 911, 913, 914, 916, 944, 968, 969, 971, 1070, 1136, 1148, 1167, 1181, 1182, 1183, 1184, 1185, 1188, 1216, 1264, 1280, 1285, 1326, 1343, 1344, 1345, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1425, 1464, 1574, 1614, 1617, 1713, 1809, 1810, 1833, 1856, 1857, 1872, 1874, 1898, 1929, 1930, 1932, 1933, 1934, 1935], "flag": [1, 2, 13, 23, 24, 30, 41, 43, 46, 49, 51, 54, 722, 860, 888, 890, 908, 917, 930, 931, 939, 996, 1116, 1121, 1123, 1124, 1126, 1127, 1128, 1132, 1133, 1149, 1150, 1167, 1173, 1180, 1263, 1283, 1431, 1535, 1536, 1605, 1614, 1617, 1647, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1757, 1759, 1764, 1790, 1800, 1838, 1850, 1861, 1869, 1870, 1873, 1885, 1893, 1896, 1898, 1907, 1908, 1911, 1915, 1918, 1932, 1933, 1946, 1947, 1955, 1956], "inform": [1, 2, 3, 4, 7, 8, 9, 16, 17, 19, 20, 21, 23, 24, 27, 31, 32, 33, 36, 40, 41, 46, 48, 54, 67, 179, 196, 243, 301, 309, 474, 475, 485, 502, 504, 605, 667, 722, 890, 895, 896, 900, 901, 910, 1069, 1100, 1102, 1122, 1167, 1189, 1192, 1208, 1221, 1228, 1237, 1353, 1354, 1355, 1356, 1357, 1358, 1386, 1395, 1421, 1422, 1423, 1425, 1431, 1440, 1452, 1468, 1470, 1472, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1516, 1535, 1574, 1593, 1594, 1595, 1605, 1638, 1650, 1665, 1680, 1712, 1739, 1757, 1759, 1764, 1790, 1850, 1870, 1873, 1879, 1880, 1888, 1889, 1893, 1895, 1896, 1897, 1898, 1903, 1904, 1907, 1911, 1915, 1917, 1918, 1930, 1932, 1933, 1934, 1937, 1940, 1944, 1945, 1946, 1949, 1950, 1954, 1956, 1958, 1959], "well": [1, 3, 5, 7, 9, 13, 21, 23, 28, 40, 46, 51, 52, 54, 604, 778, 809, 812, 848, 1008, 1126, 1127, 1192, 1196, 1202, 1207, 1227, 1228, 1229, 1231, 1237, 1250, 1255, 1301, 1343, 1344, 1345, 1361, 1395, 1425, 1464, 1545, 1546, 1605, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1713, 1870, 1873, 1880, 1886, 1888, 1892, 1893, 1896, 1898, 1899, 1901, 1904, 1906, 1908, 1911, 1915, 1918, 1921, 1923, 1925, 1927, 1931, 1932, 1935, 1942, 1945, 1947, 1952], "relat": [1, 6, 7, 9, 20, 23, 31, 44, 45, 46, 51, 55, 56, 61, 63, 67, 667, 1145, 1231, 1372, 1456, 1476, 1605, 1703, 1851, 1888, 1893, 1909, 1915, 1923, 1927, 1928, 1934, 1957], "mechan": [1, 8, 23, 34, 38, 40, 54, 866, 1069, 1167, 1192, 1425, 1574, 1650, 1759, 1829, 1869, 1885, 1888, 1897, 1898, 1903, 1904, 1921, 1923, 1924, 1941], "confus": [1, 8, 55, 1192, 1425, 1893, 1896, 1915, 1927, 1947, 1949], "receiv": [1, 7, 9, 20, 23, 27, 29, 51, 53, 1022, 1192, 1425, 1601, 1602, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1698, 1873, 1883, 1885, 1892, 1893, 1906, 1916, 1923, 1924, 1925, 1927, 1944, 1949, 1956, 1958], "initi": [1, 2, 3, 4, 8, 16, 17, 20, 21, 25, 27, 31, 33, 40, 41, 43, 46, 68, 76, 483, 486, 567, 699, 700, 701, 702, 703, 704, 707, 717, 718, 719, 720, 732, 733, 743, 747, 751, 848, 849, 866, 946, 968, 976, 997, 1002, 1003, 1006, 1007, 1032, 1066, 1067, 1068, 1139, 1168, 1190, 1192, 1204, 1205, 1263, 1264, 1281, 1343, 1344, 1345, 1346, 1348, 1356, 1357, 1358, 1362, 1368, 1369, 1377, 1378, 1380, 1388, 1389, 1390, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1425, 1433, 1440, 1442, 1464, 1474, 1515, 1596, 1605, 1607, 1608, 1612, 1614, 1617, 1645, 1660, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1699, 1753, 1754, 1755, 1797, 1798, 1799, 1800, 1801, 1802, 1829, 1869, 1871, 1872, 1873, 1883, 1888, 1891, 1893, 1896, 1897, 1898, 1903, 1910, 1911, 1914, 1915, 1916, 1922, 1923, 1924, 1941, 1949, 1954, 1955], "memori": [1, 2, 3, 5, 11, 21, 25, 27, 29, 30, 46, 50, 54, 138, 143, 158, 160, 163, 166, 167, 168, 183, 194, 197, 221, 228, 242, 255, 285, 313, 319, 325, 327, 328, 381, 432, 433, 434, 435, 436, 445, 450, 473, 486, 487, 511, 512, 567, 590, 604, 721, 750, 865, 867, 880, 886, 895, 896, 921, 936, 939, 966, 967, 970, 973, 974, 976, 990, 991, 1000, 1001, 1004, 1008, 1010, 1011, 1014, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1029, 1030, 1031, 1035, 1065, 1066, 1067, 1068, 1116, 1117, 1118, 1120, 1121, 1122, 1127, 1129, 1133, 1192, 1209, 1237, 1263, 1300, 1301, 1302, 1310, 1369, 1395, 1396, 1425, 1468, 1469, 1470, 1472, 1574, 1592, 1605, 1612, 1638, 1650, 1657, 1660, 1661, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1722, 1723, 1725, 1726, 1727, 1728, 1829, 1850, 1861, 1867, 1869, 1870, 1881, 1885, 1887, 1888, 1893, 1898, 1906, 1911, 1916, 1917, 1918, 1923, 1927, 1929, 1930, 1931, 1933, 1934, 1941, 1945, 1946, 1948, 1953, 1955], "overlap": [1, 20, 21, 23, 27, 46, 54, 865, 895, 896, 1068, 1122, 1189, 1372, 1476, 1605, 1811, 1850, 1896, 1897, 1930, 1944, 1946, 1955], "dens": [1, 27, 206, 532, 533, 570, 571, 572, 573, 574, 575, 908, 917, 1149, 1150, 1211, 1264, 1684, 1785, 1788, 1792, 1793, 1796, 1797, 1798, 1799, 1801, 1802, 1807, 1816, 1850, 1888, 1908, 1927, 1930, 1944], "stride": [1, 11, 44, 55, 60, 63, 64, 65, 126, 209, 242, 327, 432, 433, 434, 435, 436, 486, 507, 531, 568, 570, 571, 572, 574, 575, 604, 699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 714, 717, 718, 725, 726, 727, 728, 729, 730, 755, 756, 759, 760, 761, 769, 770, 852, 865, 908, 917, 1066, 1068, 1078, 1083, 1101, 1119, 1120, 1149, 1150, 1156, 1192, 1201, 1205, 1211, 1262, 1278, 1296, 1338, 1339, 1340, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1393, 1394, 1401, 1402, 1403, 1404, 1405, 1406, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1437, 1476, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1518, 1545, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1592, 1605, 1656, 1718, 1719, 1722, 1724, 1725, 1726, 1728, 1729, 1736, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1789, 1792, 1835, 1840, 1842, 1859, 1866, 1871, 1874, 1886, 1911, 1913, 1923, 1927, 1929, 1930, 1932, 1933, 1934, 1943, 1944, 1945, 1951, 1956], "rowmajor": [1, 1605], "contigu": [1, 11, 21, 25, 319, 486, 507, 604, 1371, 1428, 1564, 1605, 1730, 1736, 1815, 1871, 1887, 1888, 1913, 1920, 1927, 1929, 1931], "create_graph": [1, 138, 475, 880, 888, 889, 890, 891, 892, 893, 894, 1871, 1892], "preserv": [1, 20, 29, 44, 46, 54, 486, 766, 772, 841, 863, 866, 1106, 1107, 1122, 1192, 1196, 1202, 1425, 1426, 1435, 1477, 1535, 1593, 1666, 1745, 1749, 1787, 1829, 1870, 1881, 1886, 1888, 1891, 1896, 1899, 1908, 1911, 1923, 1927, 1930, 1941, 1945], "preexist": [1, 1944, 1945], "behavior": [1, 2, 7, 13, 19, 21, 23, 24, 25, 27, 29, 30, 33, 38, 41, 44, 46, 50, 51, 53, 54, 74, 242, 307, 458, 486, 500, 531, 604, 674, 772, 780, 813, 865, 879, 915, 921, 923, 925, 938, 1060, 1065, 1066, 1067, 1068, 1110, 1117, 1118, 1122, 1192, 1202, 1205, 1207, 1237, 1244, 1248, 1261, 1262, 1263, 1278, 1286, 1293, 1362, 1365, 1386, 1395, 1425, 1440, 1464, 1477, 1489, 1524, 1592, 1593, 1596, 1597, 1605, 1606, 1649, 1651, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1707, 1713, 1729, 1736, 1778, 1815, 1836, 1850, 1868, 1870, 1874, 1875, 1877, 1879, 1886, 1888, 1894, 1896, 1898, 1899, 1907, 1908, 1909, 1911, 1914, 1915, 1916, 1919, 1920, 1923, 1928, 1931, 1945, 1947, 1949], "let": [1, 7, 8, 20, 21, 28, 29, 41, 51, 54, 473, 483, 934, 1145, 1192, 1211, 1221, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1237, 1238, 1241, 1243, 1250, 1252, 1254, 1255, 1425, 1605, 1612, 1829, 1877, 1886, 1887, 1893, 1896, 1897, 1898, 1899, 1904, 1906, 1907, 1908, 1909, 1910, 1915, 1924, 1925, 1927, 1932, 1941, 1942, 1945, 1947, 1948, 1949, 1950, 1955, 1956], "first": [1, 4, 5, 7, 9, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 37, 40, 41, 44, 46, 52, 54, 55, 63, 66, 204, 242, 278, 576, 597, 673, 676, 678, 681, 747, 780, 781, 801, 841, 844, 846, 861, 862, 871, 876, 877, 878, 879, 894, 895, 907, 911, 912, 914, 915, 916, 919, 921, 923, 937, 965, 968, 979, 1053, 1055, 1056, 1057, 1062, 1065, 1070, 1083, 1085, 1104, 1118, 1123, 1124, 1126, 1127, 1128, 1132, 1133, 1136, 1145, 1148, 1156, 1157, 1158, 1169, 1181, 1190, 1199, 1204, 1205, 1211, 1216, 1221, 1224, 1231, 1247, 1250, 1257, 1258, 1260, 1263, 1264, 1280, 1286, 1289, 1292, 1293, 1294, 1296, 1313, 1315, 1321, 1326, 1329, 1333, 1339, 1340, 1346, 1354, 1355, 1357, 1358, 1368, 1369, 1371, 1376, 1377, 1391, 1394, 1395, 1410, 1417, 1419, 1420, 1440, 1453, 1506, 1592, 1596, 1605, 1614, 1615, 1617, 1628, 1638, 1644, 1670, 1671, 1672, 1673, 1674, 1680, 1683, 1684, 1688, 1692, 1695, 1697, 1703, 1713, 1714, 1740, 1741, 1749, 1757, 1777, 1792, 1795, 1800, 1830, 1831, 1835, 1840, 1842, 1848, 1855, 1858, 1861, 1863, 1868, 1870, 1872, 1873, 1880, 1882, 1885, 1886, 1888, 1892, 1893, 1896, 1898, 1900, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1916, 1917, 1918, 1923, 1924, 1925, 1927, 1928, 1932, 1936, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1954, 1955, 1956, 1957], "accord": [1, 9, 31, 44, 784, 848, 849, 867, 909, 921, 1063, 1155, 1252, 1285, 1315, 1333, 1369, 1596, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1689, 1695, 1714, 1778, 1803, 1830, 1862, 1873, 1883, 1887, 1888, 1891, 1904, 1908, 1910, 1915, 1925, 1934], "retain": [1, 9, 23, 680, 682, 683, 686, 861, 862, 867, 1196, 1213, 1244, 1248, 1261, 1279, 1289, 1291, 1292, 1294, 1297, 1320, 1321, 1322, 1323, 1652, 1711, 1714, 1745, 1809, 1810, 1814, 1839, 1840, 1841, 1842, 1856, 1857, 1885, 1906, 1927], "over": [1, 9, 20, 21, 23, 24, 28, 29, 31, 38, 41, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 62, 63, 66, 468, 667, 684, 725, 726, 727, 728, 729, 730, 753, 754, 759, 760, 761, 769, 770, 879, 904, 926, 977, 1022, 1024, 1028, 1042, 1043, 1044, 1045, 1046, 1047, 1065, 1121, 1125, 1127, 1131, 1133, 1145, 1153, 1192, 1207, 1224, 1244, 1248, 1260, 1261, 1263, 1271, 1291, 1293, 1323, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1369, 1372, 1373, 1374, 1380, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1397, 1413, 1416, 1417, 1418, 1419, 1420, 1425, 1428, 1429, 1430, 1432, 1439, 1453, 1456, 1457, 1459, 1464, 1473, 1476, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1508, 1519, 1520, 1536, 1542, 1545, 1546, 1548, 1549, 1550, 1559, 1560, 1567, 1574, 1600, 1609, 1649, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1718, 1719, 1734, 1794, 1796, 1809, 1810, 1811, 1814, 1831, 1846, 1856, 1857, 1861, 1873, 1883, 1885, 1886, 1887, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1904, 1906, 1907, 1914, 1923, 1924, 1927, 1935, 1941, 1943, 1944, 1945, 1946, 1949, 1956, 1958], "time": [1, 3, 4, 7, 8, 9, 13, 20, 21, 23, 24, 25, 27, 29, 30, 31, 37, 40, 41, 42, 44, 46, 51, 53, 54, 55, 64, 65, 76, 278, 301, 474, 480, 604, 667, 672, 673, 674, 675, 676, 677, 678, 681, 732, 733, 743, 747, 751, 755, 756, 786, 788, 811, 828, 864, 894, 900, 901, 905, 907, 919, 927, 929, 939, 950, 957, 968, 969, 971, 1011, 1024, 1043, 1046, 1057, 1079, 1080, 1086, 1087, 1088, 1094, 1105, 1106, 1107, 1115, 1118, 1127, 1128, 1129, 1132, 1133, 1181, 1189, 1192, 1199, 1204, 1207, 1208, 1212, 1217, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1236, 1237, 1238, 1241, 1243, 1247, 1250, 1252, 1254, 1255, 1263, 1264, 1286, 1296, 1303, 1314, 1315, 1317, 1327, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1369, 1372, 1373, 1374, 1377, 1388, 1389, 1390, 1395, 1397, 1411, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1437, 1438, 1440, 1461, 1464, 1476, 1477, 1478, 1479, 1489, 1492, 1493, 1519, 1520, 1564, 1565, 1566, 1582, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1612, 1613, 1615, 1617, 1651, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1691, 1701, 1702, 1713, 1735, 1741, 1792, 1806, 1811, 1812, 1831, 1861, 1869, 1872, 1873, 1874, 1879, 1881, 1885, 1891, 1893, 1895, 1897, 1898, 1900, 1901, 1903, 1904, 1906, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1927, 1932, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1952, 1953, 1955, 1956, 1958], "4": [1, 3, 11, 17, 18, 20, 21, 23, 25, 27, 29, 30, 31, 38, 40, 44, 51, 54, 55, 56, 57, 60, 61, 62, 63, 65, 179, 196, 230, 242, 277, 299, 301, 303, 305, 309, 389, 390, 432, 433, 458, 470, 474, 480, 483, 486, 500, 504, 510, 524, 531, 543, 545, 547, 571, 572, 594, 604, 670, 671, 672, 673, 676, 678, 679, 680, 682, 683, 684, 686, 726, 728, 729, 730, 733, 735, 744, 747, 760, 761, 811, 852, 861, 862, 863, 867, 868, 869, 870, 871, 872, 874, 875, 886, 888, 891, 892, 893, 907, 910, 913, 917, 918, 919, 923, 925, 928, 929, 932, 933, 934, 937, 947, 952, 953, 954, 955, 965, 1045, 1048, 1055, 1057, 1059, 1060, 1063, 1064, 1065, 1068, 1070, 1080, 1081, 1083, 1085, 1093, 1099, 1101, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1115, 1116, 1118, 1121, 1123, 1131, 1132, 1133, 1134, 1135, 1136, 1145, 1148, 1152, 1153, 1154, 1155, 1157, 1158, 1162, 1166, 1169, 1181, 1183, 1189, 1198, 1203, 1205, 1212, 1213, 1214, 1215, 1216, 1217, 1221, 1223, 1224, 1230, 1232, 1234, 1235, 1236, 1239, 1241, 1244, 1246, 1248, 1250, 1252, 1254, 1257, 1258, 1259, 1261, 1262, 1265, 1267, 1268, 1273, 1275, 1276, 1278, 1280, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1313, 1314, 1315, 1323, 1324, 1325, 1326, 1333, 1338, 1349, 1350, 1351, 1354, 1355, 1357, 1358, 1366, 1368, 1369, 1370, 1372, 1376, 1377, 1395, 1396, 1421, 1422, 1428, 1430, 1432, 1437, 1438, 1440, 1446, 1447, 1448, 1449, 1450, 1464, 1476, 1477, 1478, 1479, 1480, 1481, 1489, 1491, 1500, 1503, 1515, 1516, 1524, 1535, 1559, 1562, 1565, 1566, 1592, 1593, 1594, 1595, 1596, 1605, 1612, 1617, 1628, 1640, 1641, 1643, 1645, 1651, 1652, 1653, 1655, 1657, 1660, 1667, 1680, 1685, 1686, 1692, 1696, 1697, 1698, 1702, 1706, 1707, 1710, 1711, 1713, 1714, 1716, 1720, 1722, 1724, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1735, 1736, 1740, 1741, 1742, 1744, 1745, 1749, 1762, 1769, 1771, 1772, 1777, 1778, 1780, 1782, 1787, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1811, 1814, 1817, 1818, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1839, 1840, 1841, 1842, 1844, 1845, 1846, 1848, 1849, 1850, 1855, 1858, 1859, 1860, 1861, 1862, 1863, 1867, 1870, 1871, 1872, 1873, 1874, 1880, 1885, 1887, 1888, 1891, 1893, 1894, 1896, 1897, 1898, 1904, 1906, 1909, 1910, 1911, 1915, 1916, 1918, 1920, 1923, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1941, 1943, 1944, 1946, 1949, 1951, 1954, 1956], "fact": [1, 3, 8, 46, 482, 908, 917, 951, 1145, 1149, 1150, 1227, 1228, 1255, 1870, 1898, 1901, 1911, 1924, 1927, 1941, 1945, 1950], "reset": [1, 23, 747, 807, 812, 880, 966, 1014, 1016, 1029, 1030, 1031, 1192, 1377, 1425, 1441, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1703, 1720, 1816, 1883, 1911, 1922], "phase": [1, 21, 780, 1227, 1228, 1695, 1815, 1871, 1910, 1946, 1956], "recreat": [1, 1893, 1955], "valid": [1, 23, 29, 38, 40, 44, 54, 72, 76, 734, 735, 744, 778, 930, 942, 945, 1008, 1065, 1190, 1192, 1193, 1213, 1227, 1228, 1237, 1238, 1239, 1250, 1255, 1286, 1353, 1354, 1355, 1499, 1500, 1501, 1524, 1596, 1623, 1628, 1632, 1662, 1665, 1685, 1686, 1691, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1713, 1870, 1871, 1872, 1873, 1887, 1888, 1893, 1896, 1898, 1902, 1911, 1914, 1917, 1923, 1924, 1944, 1949, 1952, 1956], "altern": [1, 9, 20, 23, 54, 667, 801, 1125, 1126, 1154, 1199, 1263, 1453, 1470, 1472, 1543, 1605, 1657, 1684, 1756, 1850, 1867, 1868, 1874, 1893, 1902, 1904, 1907, 1908, 1910, 1946, 1954], "never": [1, 5, 7, 21, 23, 40, 41, 44, 209, 210, 783, 866, 927, 939, 1189, 1238, 1239, 1250, 1263, 1605, 1638, 1893, 1896, 1898, 1915, 1916, 1923, 1934, 1941, 1944], "long": [1, 7, 9, 20, 40, 44, 53, 721, 736, 738, 739, 740, 741, 743, 750, 768, 1122, 1168, 1292, 1297, 1321, 1348, 1361, 1369, 1395, 1396, 1432, 1508, 1662, 1712, 1826, 1830, 1840, 1842, 1847, 1869, 1873, 1880, 1885, 1886, 1887, 1893, 1894, 1896, 1898, 1900, 1906, 1908, 1911, 1915, 1917, 1922, 1929, 1930, 1932, 1933, 1946, 1951, 1954, 1956], "hard": [1, 7, 8, 23, 28, 41, 941, 1065, 1264, 1381, 1526, 1527, 1870, 1871, 1872, 1893, 1911, 1915, 1946, 1947], "matter": [1, 4, 23, 46, 884, 1053, 1065, 1199, 1202, 1207, 1605, 1888, 1893, 1915], "discourag": [1, 1034, 1038, 1893, 1923], "aggress": [1, 46, 1189, 1893, 1923, 1946], "buffer": [1, 4, 20, 21, 23, 44, 46, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 867, 979, 1011, 1118, 1121, 1131, 1192, 1199, 1202, 1213, 1263, 1343, 1344, 1345, 1362, 1398, 1399, 1400, 1425, 1464, 1598, 1605, 1607, 1614, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1645, 1647, 1661, 1681, 1683, 1745, 1787, 1833, 1872, 1889, 1893, 1897, 1898, 1904, 1909, 1911, 1916, 1946], "free": [1, 7, 23, 25, 29, 31, 40, 41, 46, 54, 55, 62, 63, 1017, 1035, 1195, 1207, 1264, 1881, 1891, 1893, 1896, 1898, 1900, 1906, 1910, 1911, 1927, 1944, 1958], "reus": [1, 23, 28, 54, 473, 1893, 1896, 1923, 1941, 1944, 1946, 1951, 1956, 1958], "effici": [1, 2, 3, 8, 11, 20, 29, 46, 47, 52, 138, 747, 880, 885, 894, 929, 1129, 1137, 1209, 1247, 1264, 1283, 1333, 1364, 1365, 1366, 1369, 1370, 1377, 1431, 1437, 1438, 1472, 1574, 1881, 1888, 1893, 1897, 1898, 1901, 1905, 1906, 1907, 1914, 1916, 1918, 1923, 1924, 1927, 1930, 1931, 1935], "few": [1, 7, 8, 21, 25, 31, 1065, 1122, 1369, 1605, 1868, 1873, 1893, 1896, 1898, 1900, 1902, 1907, 1910, 1911, 1914, 1916, 1918, 1921, 1927, 1931, 1933, 1935, 1944, 1946, 1948, 1949, 1950, 1954, 1956], "occas": [1, 7, 1893], "actual": [1, 8, 25, 31, 33, 44, 46, 51, 54, 777, 950, 1083, 1101, 1203, 1207, 1356, 1357, 1358, 1524, 1605, 1629, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1689, 1868, 1872, 1873, 1886, 1893, 1896, 1897, 1898, 1901, 1906, 1910, 1911, 1918, 1923, 1929, 1934, 1944, 1945, 1946, 1948, 1949], "signific": [1, 3, 25, 1697, 1757, 1893, 1896, 1927, 1948, 1952], "amount": [1, 2, 3, 4, 7, 20, 23, 25, 31, 40, 54, 896, 990, 1016, 1018, 1022, 1189, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1372, 1413, 1428, 1476, 1507, 1622, 1623, 1625, 1626, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1887, 1893, 1895, 1896, 1899, 1900, 1902, 1923, 1927, 1944, 1950, 1954, 1956, 1958], "heavi": [1, 23, 1893, 1910, 1945], "pressur": [1, 46, 1893], "might": [1, 3, 4, 9, 13, 14, 17, 23, 25, 27, 28, 29, 40, 51, 53, 54, 73, 75, 138, 473, 531, 880, 965, 1207, 1208, 1524, 1605, 1606, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1868, 1870, 1883, 1888, 1893, 1895, 1896, 1897, 1898, 1901, 1903, 1908, 1911, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1931, 1933, 1934, 1938, 1941, 1944, 1945, 1946, 1947, 1948, 1949, 1955, 1956], "keep": [1, 3, 5, 7, 20, 21, 25, 27, 31, 40, 44, 46, 55, 969, 1263, 1343, 1344, 1345, 1349, 1368, 1388, 1389, 1390, 1434, 1464, 1524, 1535, 1605, 1624, 1666, 1734, 1757, 1868, 1869, 1870, 1885, 1887, 1888, 1893, 1896, 1897, 1899, 1900, 1901, 1906, 1912, 1914, 1918, 1923, 1924, 1925, 1943, 1944, 1945, 1949, 1954, 1958], "track": [1, 31, 55, 67, 68, 69, 74, 323, 974, 1014, 1016, 1029, 1030, 1031, 1121, 1122, 1167, 1293, 1343, 1344, 1345, 1388, 1389, 1390, 1398, 1399, 1400, 1407, 1408, 1409, 1464, 1605, 1624, 1883, 1885, 1887, 1888, 1893, 1896, 1898, 1899, 1900, 1903, 1904, 1912, 1914, 1916, 1917, 1924, 1925, 1927, 1944, 1945, 1946, 1949, 1953], "save": [1, 5, 7, 11, 14, 21, 23, 25, 27, 44, 46, 483, 824, 876, 877, 886, 1129, 1191, 1192, 1197, 1199, 1207, 1209, 1263, 1425, 1605, 1660, 1661, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1691, 1694, 1698, 1869, 1870, 1871, 1882, 1887, 1898, 1899, 1904, 1906, 1908, 1911, 1913, 1914, 1915, 1917, 1923, 1927, 1932, 1936, 1941, 1946, 1948, 1958], "afterward": [1, 44, 1425, 1596, 1605, 1927], "start": [1, 3, 4, 8, 9, 20, 21, 23, 25, 31, 37, 39, 40, 41, 42, 46, 50, 53, 54, 221, 390, 420, 421, 483, 525, 685, 852, 1014, 1016, 1027, 1029, 1030, 1087, 1088, 1104, 1118, 1190, 1204, 1217, 1262, 1278, 1324, 1325, 1333, 1338, 1339, 1340, 1369, 1371, 1418, 1419, 1420, 1426, 1428, 1516, 1562, 1605, 1619, 1623, 1625, 1638, 1667, 1689, 1695, 1729, 1760, 1783, 1797, 1798, 1799, 1801, 1802, 1868, 1869, 1871, 1872, 1877, 1880, 1885, 1887, 1893, 1894, 1896, 1897, 1900, 1904, 1905, 1906, 1910, 1911, 1914, 1917, 1923, 1924, 1925, 1927, 1940, 1944, 1946, 1951, 1953], "sure": [1, 7, 9, 20, 23, 25, 30, 32, 41, 43, 49, 54, 848, 849, 880, 1116, 1196, 1207, 1208, 1264, 1605, 1650, 1691, 1833, 1873, 1886, 1893, 1897, 1900, 1901, 1910, 1911, 1917, 1918, 1923, 1924, 1925, 1927, 1932, 1946, 1948, 1956], "longer": [1, 23, 42, 50, 51, 674, 877, 895, 896, 1189, 1196, 1605, 1649, 1652, 1883, 1893, 1896, 1923, 1925, 1941, 1956], "find": [1, 7, 13, 23, 40, 51, 54, 70, 1065, 1145, 1213, 1264, 1356, 1357, 1358, 1395, 1665, 1703, 1714, 1749, 1816, 1868, 1881, 1885, 1887, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1906, 1908, 1911, 1912, 1913, 1918, 1923, 1927, 1930, 1932, 1934, 1936, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1955, 1956, 1957], "quick": [1, 7, 49, 1880, 1904, 1939, 1954], "guid": [1, 8, 9, 20, 68, 70, 71, 1203, 1649, 1869, 1896, 1899, 1915, 1918, 1949, 1954], "var": [1, 33, 38, 40, 43, 1343, 1344, 1345, 1379, 1380, 1388, 1389, 1390, 1397, 1464, 1521, 1717, 1857, 1871, 1873, 1886, 1913, 1944, 1949, 1951, 1956], "thing": [1, 3, 7, 8, 23, 51, 54, 1122, 1201, 1293, 1341, 1526, 1788, 1872, 1893, 1896, 1898, 1899, 1900, 1901, 1906, 1911, 1915, 1918, 1919, 1925, 1941, 1945, 1946, 1949, 1954, 1956], "detach": [1, 5, 210, 435, 445, 936, 1121, 1192, 1348, 1425, 1508, 1526, 1792, 1829, 1870, 1871, 1886, 1888, 1900, 1911, 1913, 1920, 1927, 1931, 1933, 1955], "register_hook": [1, 1886, 1893], "name": [1, 2, 3, 13, 21, 23, 28, 29, 31, 33, 34, 37, 38, 40, 42, 44, 46, 54, 75, 667, 684, 734, 735, 744, 779, 801, 802, 803, 804, 811, 827, 841, 845, 904, 945, 967, 994, 1121, 1131, 1190, 1192, 1193, 1199, 1202, 1207, 1208, 1222, 1227, 1228, 1234, 1235, 1237, 1238, 1239, 1240, 1250, 1251, 1253, 1255, 1256, 1263, 1425, 1475, 1598, 1603, 1604, 1605, 1612, 1613, 1614, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1646, 1647, 1649, 1660, 1662, 1664, 1665, 1745, 1755, 1851, 1853, 1855, 1868, 1869, 1870, 1871, 1873, 1874, 1877, 1879, 1882, 1883, 1885, 1891, 1893, 1896, 1897, 1898, 1901, 1903, 1904, 1911, 1913, 1915, 1916, 1917, 1923, 1924, 1929, 1932, 1934, 1935, 1936, 1937, 1942, 1943, 1946, 1949, 1950, 1953, 1955, 1956, 1957, 1958, 1959], "factori": [1, 2, 11, 29, 31, 34, 38, 51, 811, 1065, 1650, 1665, 1753, 1869, 1871, 1887, 1896, 1913, 1930, 1945], "ones": [1, 20, 23, 27, 29, 44, 46, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 138, 242, 301, 390, 432, 433, 435, 502, 781, 846, 880, 889, 891, 892, 893, 894, 895, 909, 921, 939, 1048, 1056, 1078, 1121, 1128, 1129, 1132, 1167, 1189, 1192, 1203, 1212, 1238, 1254, 1263, 1342, 1368, 1372, 1379, 1380, 1397, 1425, 1429, 1430, 1432, 1434, 1476, 1515, 1574, 1592, 1596, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1642, 1644, 1647, 1657, 1662, 1717, 1734, 1752, 1757, 1783, 1832, 1836, 1853, 1864, 1871, 1873, 1875, 1886, 1887, 1893, 1894, 1896, 1898, 1905, 1907, 1908, 1911, 1913, 1914, 1915, 1918, 1923, 1925, 1928, 1930, 1933, 1946, 1950, 1955, 1956], "autograd_tensor": 1, "base": [1, 3, 7, 9, 13, 14, 20, 23, 24, 25, 27, 28, 29, 31, 33, 38, 40, 41, 42, 44, 46, 51, 54, 73, 74, 75, 778, 783, 787, 789, 807, 808, 809, 811, 812, 848, 849, 886, 939, 957, 1026, 1027, 1063, 1065, 1108, 1145, 1155, 1194, 1205, 1217, 1255, 1266, 1268, 1270, 1278, 1362, 1425, 1428, 1429, 1430, 1434, 1468, 1470, 1472, 1541, 1574, 1605, 1609, 1610, 1612, 1619, 1623, 1625, 1667, 1668, 1669, 1670, 1671, 1672, 1681, 1682, 1683, 1684, 1710, 1720, 1745, 1757, 1759, 1815, 1816, 1830, 1840, 1842, 1862, 1869, 1871, 1873, 1895, 1896, 1897, 1898, 1904, 1916, 1917, 1918, 1923, 1924, 1927, 1928, 1931, 1932, 1934, 1936, 1937, 1943, 1944, 1946, 1948, 1949], "static": [1, 3, 8, 13, 24, 29, 31, 44, 46, 55, 60, 61, 63, 781, 802, 804, 813, 819, 844, 846, 848, 876, 877, 878, 879, 1205, 1468, 1605, 1790, 1870, 1871, 1872, 1873, 1896, 1903, 1912, 1916, 1919, 1923, 1929, 1941, 1943, 1944, 1949], "Then": [1, 23, 41, 54, 1372, 1476, 1614, 1665, 1851, 1893, 1894, 1896, 1897, 1898, 1899, 1907, 1908, 1911, 1914, 1915, 1923, 1924, 1936, 1941, 1947], "op": [1, 4, 23, 44, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 74, 75, 138, 490, 511, 591, 744, 779, 780, 781, 810, 813, 841, 848, 849, 880, 886, 894, 929, 939, 972, 987, 989, 993, 994, 1008, 1009, 1034, 1038, 1040, 1122, 1142, 1193, 1205, 1207, 1208, 1263, 1269, 1441, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1701, 1760, 1838, 1869, 1873, 1877, 1879, 1880, 1881, 1883, 1886, 1887, 1895, 1896, 1897, 1898, 1906, 1912, 1915, 1917, 1918, 1919, 1920, 1921, 1927, 1929, 1931, 1933, 1937, 1941, 1942, 1945, 1946, 1947, 1948, 1949, 1951, 1955, 1956], "ctx": [1, 38, 55, 59, 876, 877, 878, 884, 885, 886, 887, 1892, 1898, 1899, 1911], "gradcheck": [1, 896, 1789, 1869, 1898, 1927], "extend": [1, 20, 23, 25, 29, 32, 42, 54, 848, 877, 879, 886, 1427, 1436, 1789, 1851, 1869, 1877, 1888, 1893, 1903, 1905, 1906, 1911, 1913, 1915, 1921, 1927, 1957], "staticmethod": [1, 55, 877, 879, 884, 885, 886, 887, 1873, 1892, 1898, 1911, 1923], "result": [1, 3, 4, 5, 7, 8, 9, 13, 17, 20, 21, 23, 25, 29, 31, 33, 38, 41, 44, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 141, 209, 210, 242, 243, 303, 323, 386, 483, 485, 486, 543, 570, 571, 572, 574, 575, 605, 673, 674, 675, 676, 677, 680, 682, 683, 684, 686, 747, 780, 864, 866, 882, 883, 888, 889, 890, 891, 892, 893, 895, 896, 907, 910, 921, 925, 930, 936, 938, 939, 942, 953, 955, 978, 980, 982, 1008, 1009, 1022, 1044, 1045, 1046, 1047, 1048, 1060, 1065, 1083, 1086, 1092, 1101, 1108, 1110, 1113, 1117, 1118, 1121, 1122, 1123, 1126, 1127, 1132, 1133, 1137, 1153, 1154, 1156, 1169, 1183, 1192, 1195, 1196, 1203, 1207, 1208, 1210, 1212, 1213, 1217, 1231, 1233, 1235, 1236, 1244, 1248, 1250, 1252, 1253, 1254, 1261, 1271, 1272, 1279, 1289, 1291, 1292, 1293, 1294, 1296, 1297, 1320, 1323, 1362, 1364, 1365, 1366, 1370, 1372, 1377, 1391, 1395, 1425, 1431, 1440, 1468, 1469, 1470, 1471, 1472, 1476, 1506, 1524, 1535, 1589, 1592, 1593, 1605, 1612, 1614, 1647, 1650, 1651, 1652, 1653, 1663, 1665, 1695, 1701, 1703, 1710, 1711, 1714, 1720, 1733, 1739, 1754, 1782, 1793, 1795, 1796, 1800, 1807, 1809, 1810, 1811, 1814, 1815, 1816, 1825, 1829, 1830, 1835, 1836, 1838, 1839, 1841, 1853, 1856, 1857, 1861, 1870, 1871, 1872, 1873, 1880, 1881, 1886, 1887, 1888, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1906, 1907, 1908, 1911, 1912, 1914, 1916, 1917, 1919, 1920, 1923, 1924, 1927, 1930, 1932, 1933, 1934, 1937, 1938, 1942, 1943, 1945, 1949, 1950, 1953, 1954, 1955, 1956, 1957], "save_for_backward": [1, 877, 885, 887, 1892, 1893, 1898, 1899, 1911], "grad_output": [1, 55, 876, 884, 894, 896, 900, 901, 1192, 1425, 1601, 1602, 1871, 1893, 1896, 1898, 1899, 1904, 1951], "saved_tensor": [1, 885, 886, 887, 1892, 1893, 1898, 1899], "avail": [1, 2, 5, 8, 9, 13, 14, 20, 23, 31, 40, 41, 70, 71, 962, 988, 990, 991, 1002, 1005, 1012, 1013, 1032, 1033, 1035, 1065, 1198, 1255, 1256, 1281, 1468, 1477, 1535, 1574, 1593, 1703, 1757, 1811, 1816, 1850, 1853, 1868, 1869, 1870, 1872, 1873, 1877, 1880, 1885, 1893, 1896, 1898, 1902, 1904, 1905, 1906, 1908, 1909, 1910, 1914, 1915, 1917, 1918, 1919, 1923, 1937, 1938, 1948, 1956, 1957], "cost": [1, 3, 4, 8, 9, 21, 46, 929, 939, 1247, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1574, 1753, 1896, 1908, 1919, 1924, 1930, 1952, 1956], "both": [1, 2, 3, 13, 20, 21, 23, 24, 25, 28, 29, 33, 38, 39, 40, 41, 44, 46, 53, 54, 55, 62, 63, 85, 327, 716, 755, 756, 759, 760, 761, 780, 838, 879, 883, 889, 890, 891, 892, 893, 907, 944, 957, 989, 1060, 1081, 1111, 1112, 1113, 1121, 1135, 1137, 1145, 1152, 1169, 1182, 1183, 1189, 1192, 1205, 1213, 1214, 1262, 1278, 1286, 1292, 1306, 1307, 1338, 1339, 1343, 1344, 1345, 1350, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1380, 1386, 1388, 1389, 1390, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1418, 1419, 1420, 1425, 1431, 1464, 1472, 1476, 1477, 1480, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1548, 1549, 1550, 1574, 1605, 1617, 1647, 1670, 1671, 1695, 1718, 1719, 1757, 1788, 1790, 1792, 1811, 1815, 1835, 1836, 1870, 1872, 1873, 1880, 1886, 1887, 1889, 1892, 1893, 1894, 1898, 1899, 1901, 1904, 1907, 1908, 1909, 1911, 1915, 1916, 1918, 1921, 1923, 1925, 1927, 1928, 1934, 1936, 1937, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1953, 1956], "cpu": [1, 4, 5, 13, 16, 20, 23, 25, 44, 46, 55, 60, 63, 64, 65, 76, 107, 184, 277, 314, 323, 432, 433, 434, 435, 436, 445, 567, 576, 852, 867, 905, 908, 917, 955, 958, 959, 968, 978, 979, 980, 982, 1066, 1068, 1078, 1083, 1101, 1113, 1118, 1119, 1142, 1143, 1149, 1150, 1192, 1199, 1201, 1202, 1211, 1221, 1223, 1227, 1228, 1229, 1230, 1232, 1234, 1237, 1239, 1240, 1246, 1249, 1252, 1255, 1256, 1262, 1263, 1278, 1281, 1292, 1303, 1362, 1368, 1425, 1468, 1589, 1605, 1609, 1610, 1638, 1639, 1653, 1656, 1713, 1722, 1724, 1726, 1728, 1729, 1753, 1758, 1760, 1761, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1782, 1792, 1797, 1798, 1799, 1800, 1801, 1802, 1815, 1829, 1830, 1831, 1840, 1842, 1847, 1850, 1866, 1869, 1870, 1871, 1873, 1877, 1881, 1885, 1886, 1888, 1896, 1898, 1899, 1902, 1904, 1907, 1908, 1910, 1911, 1913, 1916, 1917, 1919, 1922, 1923, 1927, 1929, 1930, 1933, 1934, 1935, 1938, 1941, 1943, 1945, 1948, 1950, 1953, 1954, 1956], "There": [1, 5, 6, 7, 9, 13, 19, 23, 25, 28, 40, 44, 47, 51, 52, 54, 72, 73, 75, 667, 721, 780, 877, 939, 1122, 1362, 1395, 1440, 1574, 1605, 1645, 1650, 1868, 1870, 1872, 1873, 1879, 1880, 1887, 1893, 1896, 1898, 1899, 1900, 1903, 1906, 1910, 1911, 1915, 1918, 1919, 1923, 1925, 1933, 1935, 1941, 1944, 1945, 1946, 1949, 1955, 1956], "moment": [1, 28, 55, 61, 759, 760, 761, 953, 1670, 1671, 1672, 1674, 1680, 1684, 1881, 1885, 1888, 1917, 1923, 1949, 1953], "nvprof": [1, 4, 902, 1896], "regist": [1, 14, 21, 23, 27, 28, 29, 40, 42, 44, 46, 54, 68, 70, 71, 72, 73, 75, 474, 475, 667, 779, 780, 841, 900, 901, 939, 1011, 1192, 1263, 1425, 1426, 1427, 1435, 1436, 1453, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1612, 1613, 1614, 1615, 1617, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1851, 1853, 1877, 1883, 1885, 1897, 1898, 1903, 1904, 1909, 1911, 1915, 1923, 1945, 1948, 1952], "activ": [1, 5, 7, 9, 42, 44, 46, 52, 67, 69, 779, 781, 783, 790, 794, 828, 829, 838, 848, 849, 967, 976, 991, 1004, 1022, 1121, 1123, 1133, 1264, 1337, 1364, 1365, 1366, 1370, 1380, 1397, 1424, 1426, 1443, 1454, 1468, 1470, 1472, 1517, 1554, 1577, 1605, 1615, 1616, 1617, 1647, 1652, 1861, 1869, 1881, 1885, 1896, 1898, 1899, 1904, 1911, 1914, 1916, 1917, 1918, 1919, 1920, 1923, 1927, 1936, 1937, 1941, 1945, 1951, 1956], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 1917], "use_devic": 1, "record_shap": [1, 1917], "with_flop": [1, 1917], "profile_memori": [1, 1917], "with_stack": [1, 1917], "with_modul": [1, 1917], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 1917], "hold": [1, 23, 38, 40, 42, 43, 44, 46, 50, 53, 54, 524, 1264, 1372, 1426, 1427, 1435, 1436, 1476, 1596, 1605, 1607, 1608, 1614, 1624, 1638, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1797, 1798, 1799, 1800, 1801, 1802, 1894, 1896, 1898, 1900, 1903, 1906, 1914, 1917, 1923, 1924, 1925, 1927, 1929, 1930, 1932, 1933, 1944, 1949], "summari": [1, 3, 41, 1023, 1762, 1869, 1883, 1932, 1937, 1950, 1956, 1958], "hood": [1, 53, 1885, 1893, 1896, 1897, 1906, 1915, 1925, 1943, 1945, 1949], "just": [1, 2, 7, 13, 21, 23, 28, 29, 31, 38, 54, 576, 674, 684, 777, 810, 813, 876, 878, 904, 950, 951, 1207, 1208, 1246, 1249, 1254, 1255, 1281, 1364, 1365, 1366, 1370, 1605, 1617, 1618, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1753, 1839, 1840, 1841, 1842, 1851, 1868, 1870, 1885, 1892, 1893, 1898, 1899, 1901, 1903, 1904, 1905, 1909, 1915, 1916, 1923, 1924, 1927, 1930, 1931, 1933, 1937, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1955], "record": [1, 5, 27, 32, 33, 34, 38, 41, 44, 53, 54, 432, 433, 434, 435, 436, 483, 806, 807, 808, 809, 812, 814, 852, 908, 917, 968, 969, 971, 1066, 1067, 1068, 1078, 1083, 1101, 1118, 1119, 1120, 1149, 1150, 1192, 1207, 1211, 1262, 1278, 1303, 1306, 1307, 1362, 1425, 1656, 1657, 1660, 1665, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1797, 1798, 1799, 1800, 1801, 1802, 1829, 1866, 1867, 1870, 1872, 1888, 1892, 1893, 1896, 1898, 1911, 1917, 1923, 1932, 1933, 1934, 1935, 1936, 1937, 1941, 1944, 1946, 1956, 1958], "event": [1, 26, 29, 31, 39, 42, 53, 904, 905, 906, 969, 971, 1022, 1025, 1207, 1208, 1269, 1306, 1307, 1574, 1869, 1883, 1885, 1896, 1917, 1932, 1954, 1958], "being": [1, 3, 5, 9, 20, 23, 25, 27, 29, 31, 33, 40, 41, 42, 44, 46, 50, 51, 53, 54, 55, 63, 69, 85, 390, 747, 780, 786, 879, 888, 894, 937, 969, 977, 1024, 1028, 1042, 1043, 1078, 1111, 1112, 1122, 1131, 1132, 1181, 1192, 1196, 1281, 1290, 1295, 1341, 1342, 1359, 1361, 1368, 1369, 1373, 1374, 1379, 1385, 1392, 1416, 1417, 1425, 1428, 1429, 1430, 1431, 1432, 1439, 1456, 1457, 1473, 1489, 1496, 1497, 1507, 1519, 1520, 1524, 1536, 1559, 1567, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1631, 1632, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1713, 1714, 1809, 1810, 1811, 1856, 1857, 1870, 1873, 1880, 1883, 1886, 1887, 1888, 1892, 1893, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1911, 1915, 1918, 1921, 1923, 1924, 1927, 1934, 1936, 1941, 1944, 1945, 1946, 1949, 1954, 1956, 1957], "those": [1, 2, 4, 5, 13, 20, 21, 23, 25, 27, 29, 44, 46, 51, 53, 54, 69, 811, 895, 980, 990, 1053, 1055, 1133, 1207, 1249, 1255, 1263, 1302, 1333, 1341, 1342, 1359, 1361, 1369, 1385, 1392, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1477, 1496, 1497, 1507, 1516, 1536, 1559, 1567, 1665, 1684, 1815, 1836, 1861, 1872, 1886, 1887, 1892, 1893, 1896, 1898, 1899, 1902, 1904, 1908, 1909, 1911, 1914, 1921, 1923, 1925, 1941, 1943, 1945, 1946, 1948, 1949, 1950, 1953, 1956], "report": [1, 3, 4, 17, 23, 33, 41, 53, 54, 72, 73, 75, 1022, 1125, 1126, 1128, 1892, 1896, 1916, 1927, 1946, 1950, 1953, 1956, 1958], "runtim": [1, 3, 5, 13, 23, 54, 814, 865, 904, 1063, 1065, 1155, 1192, 1207, 1425, 1607, 1608, 1666, 1709, 1850, 1862, 1873, 1886, 1887, 1893, 1896, 1898, 1906, 1911, 1946, 1952], "note": [1, 2, 3, 5, 8, 11, 13, 14, 17, 19, 20, 21, 23, 25, 27, 29, 30, 31, 38, 40, 42, 44, 46, 50, 52, 53, 54, 55, 62, 63, 72, 73, 74, 75, 138, 209, 365, 475, 486, 487, 500, 502, 504, 722, 728, 729, 730, 778, 780, 781, 782, 786, 828, 848, 852, 871, 880, 886, 888, 889, 890, 891, 892, 893, 894, 896, 923, 929, 939, 965, 1040, 1048, 1053, 1065, 1086, 1116, 1118, 1133, 1134, 1145, 1167, 1179, 1189, 1190, 1192, 1193, 1198, 1264, 1286, 1306, 1307, 1341, 1342, 1348, 1356, 1357, 1358, 1359, 1361, 1368, 1369, 1377, 1379, 1385, 1391, 1392, 1395, 1416, 1417, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1435, 1436, 1439, 1440, 1456, 1457, 1464, 1468, 1473, 1477, 1496, 1497, 1507, 1515, 1516, 1524, 1535, 1536, 1559, 1562, 1567, 1568, 1581, 1596, 1605, 1606, 1652, 1661, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1687, 1689, 1695, 1697, 1713, 1720, 1796, 1797, 1798, 1799, 1801, 1802, 1807, 1811, 1815, 1836, 1850, 1851, 1853, 1861, 1868, 1870, 1871, 1874, 1880, 1885, 1888, 1889, 1893, 1894, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1917, 1919, 1921, 1922, 1924, 1925, 1927, 1931, 1932, 1943, 1944, 1947, 1954, 1955, 1956, 1959], "propag": [1, 25, 26, 28, 29, 31, 40, 54, 55, 63, 500, 673, 676, 677, 678, 682, 683, 684, 685, 753, 754, 755, 756, 766, 769, 770, 772, 773, 774, 825, 827, 907, 1111, 1112, 1320, 1796, 1869, 1885, 1886, 1892, 1896, 1898, 1901, 1903, 1923, 1936, 1937, 1944, 1945, 1949, 1955], "async": [1, 23, 24, 53, 590, 1605, 1874, 1896, 1903, 1929], "task": [1, 3, 7, 21, 47, 52, 1195, 1210, 1388, 1389, 1390, 1873, 1895, 1903, 1904, 1906, 1910], "cuda": [1, 3, 4, 5, 13, 15, 19, 20, 21, 23, 25, 27, 46, 76, 138, 277, 301, 309, 323, 328, 502, 504, 511, 567, 852, 864, 866, 880, 894, 908, 910, 917, 939, 966, 967, 968, 969, 971, 972, 987, 989, 1000, 1066, 1067, 1068, 1078, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1119, 1149, 1150, 1192, 1211, 1213, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1246, 1249, 1252, 1253, 1255, 1256, 1262, 1263, 1278, 1281, 1297, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1368, 1395, 1425, 1440, 1464, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1516, 1524, 1535, 1562, 1574, 1593, 1594, 1595, 1596, 1605, 1607, 1608, 1609, 1610, 1651, 1653, 1656, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1713, 1722, 1724, 1726, 1728, 1729, 1753, 1757, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1793, 1797, 1798, 1799, 1800, 1801, 1802, 1815, 1829, 1831, 1840, 1842, 1847, 1850, 1866, 1869, 1871, 1877, 1886, 1888, 1898, 1899, 1904, 1907, 1911, 1913, 1914, 1916, 1917, 1922, 1923, 1927, 1929, 1930, 1933, 1934, 1935, 1938, 1943, 1945, 1946, 1948, 1953, 1956], "cudaev": 1, "approxim": [1, 3, 21, 27, 40, 54, 1129, 1145, 1255, 1264, 1333, 1375, 1439, 1454, 1461, 1522, 1567, 1577, 1613, 1667, 1684, 1703, 1757, 1816, 1836, 1871, 1873, 1896, 1897, 1898, 1901, 1911, 1951, 1959], "4u": 1, "shape": [1, 5, 8, 11, 21, 23, 29, 44, 46, 48, 50, 52, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 85, 159, 179, 196, 206, 388, 390, 432, 434, 436, 458, 484, 485, 500, 502, 504, 531, 553, 604, 667, 672, 674, 675, 684, 722, 732, 733, 743, 745, 747, 751, 753, 754, 755, 756, 759, 760, 761, 768, 783, 865, 871, 885, 889, 891, 892, 893, 904, 909, 910, 912, 915, 920, 922, 926, 927, 939, 952, 981, 1055, 1056, 1057, 1059, 1060, 1065, 1066, 1068, 1070, 1085, 1086, 1087, 1088, 1096, 1097, 1098, 1104, 1110, 1111, 1112, 1113, 1119, 1126, 1127, 1131, 1132, 1133, 1134, 1136, 1148, 1153, 1154, 1158, 1166, 1169, 1183, 1189, 1205, 1207, 1208, 1211, 1216, 1217, 1221, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1280, 1281, 1285, 1293, 1298, 1299, 1314, 1315, 1326, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1515, 1516, 1520, 1524, 1526, 1535, 1536, 1541, 1548, 1549, 1550, 1560, 1561, 1564, 1565, 1566, 1568, 1574, 1593, 1596, 1605, 1607, 1608, 1612, 1614, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1653, 1656, 1662, 1666, 1701, 1710, 1714, 1718, 1719, 1722, 1724, 1725, 1726, 1733, 1735, 1736, 1740, 1749, 1752, 1777, 1792, 1793, 1795, 1798, 1800, 1806, 1811, 1812, 1815, 1825, 1832, 1836, 1846, 1847, 1848, 1861, 1864, 1866, 1870, 1871, 1873, 1886, 1887, 1888, 1893, 1894, 1896, 1898, 1899, 1900, 1913, 1917, 1920, 1923, 1927, 1928, 1932, 1933, 1934, 1935, 1938, 1943, 1946, 1951, 1955, 1956], "about": [1, 8, 9, 16, 20, 23, 24, 27, 31, 33, 37, 39, 41, 44, 47, 51, 54, 74, 243, 485, 605, 895, 896, 973, 974, 990, 1014, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1029, 1030, 1031, 1122, 1221, 1228, 1369, 1638, 1680, 1684, 1695, 1756, 1868, 1870, 1872, 1873, 1877, 1880, 1895, 1896, 1897, 1898, 1900, 1903, 1906, 1907, 1909, 1915, 1917, 1918, 1921, 1924, 1925, 1927, 1931, 1933, 1942, 1944, 1946, 1949, 1952, 1956], "dimens": [1, 11, 20, 23, 28, 29, 44, 46, 51, 52, 54, 55, 60, 63, 66, 72, 206, 220, 221, 242, 248, 301, 303, 305, 309, 420, 421, 459, 460, 461, 480, 500, 502, 504, 524, 530, 532, 533, 547, 570, 571, 572, 574, 575, 594, 604, 673, 679, 680, 682, 683, 684, 686, 722, 745, 766, 768, 772, 861, 862, 863, 864, 873, 874, 875, 879, 894, 918, 926, 929, 930, 931, 932, 933, 965, 980, 982, 1044, 1045, 1046, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1063, 1065, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1133, 1134, 1145, 1154, 1155, 1166, 1169, 1189, 1212, 1213, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1271, 1272, 1279, 1282, 1286, 1289, 1291, 1292, 1293, 1294, 1297, 1299, 1313, 1320, 1321, 1322, 1323, 1324, 1325, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1367, 1368, 1369, 1371, 1372, 1375, 1376, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1394, 1395, 1397, 1405, 1406, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1420, 1424, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1443, 1444, 1445, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1472, 1473, 1474, 1475, 1476, 1489, 1495, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1523, 1524, 1525, 1526, 1535, 1538, 1541, 1542, 1543, 1560, 1561, 1562, 1574, 1580, 1581, 1593, 1612, 1613, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1639, 1640, 1642, 1644, 1646, 1649, 1651, 1652, 1701, 1704, 1711, 1713, 1714, 1715, 1720, 1734, 1735, 1736, 1740, 1749, 1751, 1752, 1762, 1783, 1787, 1791, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1806, 1808, 1809, 1810, 1811, 1814, 1815, 1824, 1826, 1830, 1831, 1832, 1833, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1845, 1846, 1847, 1848, 1849, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1869, 1871, 1872, 1873, 1888, 1891, 1894, 1896, 1899, 1900, 1901, 1907, 1916, 1918, 1927, 1928, 1930, 1932, 1933, 1944, 1951], "collect": [1, 3, 7, 20, 24, 25, 27, 31, 40, 46, 53, 54, 786, 787, 811, 848, 849, 927, 1004, 1066, 1154, 1293, 1605, 1628, 1656, 1722, 1726, 1866, 1869, 1871, 1872, 1873, 1883, 1896, 1897, 1899, 1914, 1917, 1918, 1921, 1925, 1927, 1932, 1934, 1946, 1949, 1953, 1955, 1956, 1958], "group": [1, 3, 9, 20, 21, 24, 25, 27, 31, 37, 40, 41, 42, 43, 46, 49, 54, 597, 667, 699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 714, 717, 718, 725, 726, 727, 728, 729, 730, 759, 760, 761, 867, 904, 1349, 1353, 1354, 1355, 1356, 1357, 1358, 1380, 1401, 1402, 1403, 1404, 1405, 1406, 1464, 1499, 1500, 1501, 1502, 1503, 1504, 1525, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1848, 1868, 1869, 1871, 1873, 1885, 1891, 1896, 1897, 1911, 1914, 1915, 1917, 1923, 1932, 1942, 1946, 1951, 1956], "prof": [1, 37, 1917, 1946, 1954, 1956], "key_averag": [1, 1917], "group_by_input_shap": [1, 904, 1917], "skew": [1, 3, 4, 1243, 1612], "neglig": [1, 1204, 1757], "bottom": [1, 46, 1524, 1880, 1954], "But": [1, 7, 46, 53, 473, 1207, 1237, 1605, 1893, 1898, 1900, 1901, 1915, 1916, 1927, 1931, 1945, 1946, 1949, 1950, 1957], "total": [1, 3, 4, 7, 20, 21, 23, 37, 39, 40, 41, 46, 864, 905, 982, 1017, 1022, 1035, 1118, 1153, 1154, 1301, 1348, 1372, 1385, 1392, 1416, 1431, 1476, 1561, 1605, 1609, 1651, 1653, 1655, 1689, 1695, 1735, 1762, 1811, 1868, 1872, 1883, 1896, 1902, 1906, 1914, 1927], "artifici": [1, 1927], "estim": [1, 3, 20, 29, 953, 957, 1145, 1189, 1343, 1344, 1345, 1375, 1379, 1380, 1388, 1389, 1390, 1397, 1464, 1522, 1613, 1681, 1778, 1917], "flop": [1, 1917], "hardwar": [1, 8, 846, 848, 849, 1227, 1228, 1255, 1850, 1896, 1906, 1908, 1919, 1927, 1946, 1948, 1956], "matrix": [1, 2, 21, 23, 29, 179, 196, 673, 676, 677, 678, 747, 907, 909, 918, 919, 927, 929, 930, 931, 932, 939, 953, 957, 1048, 1052, 1053, 1055, 1065, 1133, 1137, 1141, 1156, 1212, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1261, 1264, 1272, 1281, 1283, 1286, 1296, 1315, 1317, 1368, 1369, 1377, 1395, 1476, 1515, 1516, 1612, 1617, 1646, 1652, 1701, 1702, 1703, 1713, 1757, 1785, 1788, 1792, 1793, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1807, 1815, 1816, 1831, 1834, 1836, 1838, 1839, 1840, 1841, 1842, 1855, 1861, 1869, 1873, 1886, 1887, 1888, 1891, 1895, 1896, 1898, 1901, 1904, 1907, 1917, 1927, 1932, 1933, 1946], "2d": [1, 25, 28, 29, 574, 575, 687, 690, 693, 722, 726, 729, 753, 755, 760, 766, 770, 772, 773, 774, 932, 953, 957, 1053, 1065, 1247, 1248, 1331, 1335, 1339, 1342, 1343, 1344, 1354, 1357, 1361, 1365, 1369, 1373, 1388, 1389, 1394, 1419, 1428, 1430, 1431, 1432, 1477, 1478, 1479, 1484, 1487, 1489, 1492, 1497, 1500, 1503, 1511, 1516, 1519, 1546, 1549, 1559, 1562, 1613, 1646, 1719, 1795, 1800, 1838, 1881, 1891, 1898, 1917, 1918, 1927], "alloc": [1, 4, 11, 17, 21, 25, 29, 31, 40, 46, 242, 319, 432, 433, 434, 435, 436, 473, 967, 969, 971, 973, 974, 976, 989, 990, 991, 1014, 1016, 1018, 1020, 1021, 1022, 1023, 1030, 1031, 1035, 1066, 1068, 1300, 1301, 1302, 1310, 1661, 1722, 1726, 1728, 1753, 1829, 1869, 1885, 1888, 1893, 1897, 1902, 1906, 1911, 1917, 1930, 1940, 1941, 1944, 1945, 1954], "dealloc": [1, 54, 1118, 1885, 1896, 1900, 1902, 1917], "line": [1, 4, 17, 23, 54, 667, 904, 1065, 1122, 1167, 1192, 1202, 1425, 1489, 1524, 1762, 1790, 1870, 1873, 1874, 1888, 1894, 1898, 1901, 1902, 1908, 1910, 1911, 1917, 1927, 1940, 1943, 1946, 1948, 1949, 1950, 1953, 1956, 1958], "hierarchi": [1, 54, 827, 1196, 1670, 1671, 1874, 1898, 1917, 1918, 1944], "callstack": [1, 23, 1917], "A": [1, 2, 3, 5, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 37, 40, 41, 42, 44, 46, 47, 52, 53, 55, 56, 57, 60, 73, 76, 547, 567, 570, 571, 572, 581, 611, 667, 679, 684, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 732, 733, 743, 748, 749, 750, 751, 752, 777, 779, 801, 845, 846, 848, 849, 906, 908, 917, 918, 920, 925, 930, 931, 938, 939, 941, 944, 945, 953, 957, 968, 969, 971, 979, 981, 982, 1050, 1065, 1070, 1078, 1079, 1080, 1092, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1136, 1145, 1148, 1149, 1150, 1154, 1182, 1183, 1184, 1185, 1188, 1190, 1192, 1195, 1199, 1202, 1204, 1207, 1208, 1212, 1216, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1264, 1272, 1280, 1281, 1282, 1283, 1287, 1326, 1342, 1346, 1348, 1361, 1368, 1369, 1378, 1379, 1387, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1415, 1424, 1425, 1431, 1453, 1458, 1460, 1468, 1473, 1474, 1489, 1495, 1507, 1515, 1526, 1536, 1543, 1554, 1574, 1580, 1581, 1596, 1605, 1606, 1607, 1608, 1612, 1614, 1617, 1639, 1640, 1643, 1660, 1661, 1662, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1678, 1680, 1681, 1682, 1683, 1684, 1688, 1689, 1691, 1694, 1695, 1697, 1703, 1713, 1715, 1716, 1717, 1718, 1719, 1730, 1736, 1742, 1745, 1778, 1787, 1790, 1791, 1794, 1806, 1810, 1811, 1815, 1816, 1833, 1838, 1839, 1840, 1841, 1842, 1846, 1847, 1848, 1849, 1850, 1857, 1861, 1864, 1868, 1870, 1871, 1872, 1873, 1877, 1880, 1881, 1886, 1887, 1891, 1892, 1895, 1896, 1898, 1899, 1900, 1906, 1907, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1937, 1941, 1942, 1943, 1945, 1946, 1948, 1949, 1951, 1954, 1955, 1956, 1957, 1958, 1959], "aten": [1, 2, 3, 13, 17, 44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 73, 1008, 1122, 1315, 1662, 1665, 1790, 1870, 1871, 1877, 1895, 1898, 1910, 1913, 1917, 1918, 1927, 1938, 1942, 1947, 1950, 1956], "torchscript": [1, 3, 8, 27, 54, 604, 1190, 1193, 1195, 1196, 1197, 1198, 1203, 1207, 1209, 1665, 1869, 1874, 1909, 1911, 1917, 1923, 1958], "eager": [1, 8, 939, 1040, 1190, 1193, 1203, 1761, 1873, 1896, 1917, 1919, 1921, 1941, 1944, 1946, 1947, 1948, 1953, 1956], "experiment": [1, 2, 21, 23, 27, 28, 46, 54, 55, 58, 62, 63, 66, 221, 888, 890, 894, 939, 945, 1039, 1122, 1222, 1233, 1235, 1236, 1240, 1253, 1605, 1660, 1684, 1869, 1870, 1872, 1886, 1887, 1896, 1897, 1908, 1910, 1911, 1915, 1916, 1917, 1944, 1945, 1956], "kineto": [1, 1917], "_experimentalconfig": [1, 1917], "librari": [1, 2, 3, 4, 8, 9, 11, 13, 14, 20, 23, 30, 38, 42, 47, 50, 51, 52, 54, 667, 955, 969, 992, 996, 1008, 1116, 1204, 1235, 1281, 1782, 1883, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1906, 1907, 1910, 1911, 1915, 1917, 1918, 1923, 1946, 1957], "100": [1, 20, 23, 27, 29, 54, 55, 62, 63, 288, 725, 726, 729, 730, 1152, 1192, 1203, 1209, 1247, 1262, 1269, 1278, 1293, 1314, 1333, 1341, 1342, 1343, 1344, 1345, 1354, 1355, 1357, 1358, 1360, 1361, 1388, 1389, 1390, 1425, 1432, 1434, 1464, 1473, 1506, 1507, 1559, 1673, 1685, 1686, 1691, 1692, 1693, 1694, 1696, 1698, 1699, 1715, 1771, 1871, 1873, 1885, 1895, 1896, 1911, 1914, 1919, 1925, 1927, 1932, 1942, 1943, 1949, 1950], "realli": [1, 7, 54, 941, 1873, 1893, 1915, 1945], "y": [1, 11, 13, 20, 29, 37, 46, 51, 52, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 604, 607, 768, 871, 873, 874, 875, 882, 883, 886, 888, 889, 890, 891, 892, 893, 921, 927, 950, 957, 1008, 1009, 1048, 1059, 1065, 1069, 1121, 1123, 1126, 1127, 1128, 1132, 1133, 1167, 1198, 1203, 1207, 1260, 1269, 1270, 1293, 1341, 1342, 1343, 1344, 1345, 1346, 1359, 1361, 1380, 1385, 1386, 1388, 1389, 1390, 1392, 1397, 1412, 1416, 1417, 1428, 1429, 1430, 1432, 1434, 1456, 1457, 1464, 1467, 1473, 1474, 1495, 1524, 1541, 1564, 1596, 1617, 1650, 1660, 1717, 1735, 1737, 1738, 1759, 1792, 1806, 1832, 1836, 1837, 1861, 1864, 1870, 1871, 1872, 1873, 1886, 1887, 1891, 1893, 1894, 1895, 1896, 1899, 1901, 1902, 1905, 1911, 1915, 1918, 1923, 1925, 1928, 1932, 1935, 1936, 1937, 1941, 1942, 1944, 1948, 1949, 1955, 1956], "column": [1, 3, 21, 28, 179, 248, 571, 574, 937, 953, 957, 1048, 1078, 1106, 1107, 1157, 1227, 1228, 1231, 1247, 1250, 1255, 1259, 1264, 1315, 1434, 1476, 1515, 1516, 1612, 1703, 1713, 1795, 1797, 1798, 1799, 1801, 1802, 1815, 1836, 1840, 1842, 1855, 1891, 1901, 1927], "remov": [1, 3, 20, 21, 23, 25, 29, 41, 43, 44, 46, 54, 474, 475, 500, 533, 544, 684, 784, 802, 803, 804, 846, 900, 901, 929, 930, 1011, 1122, 1138, 1189, 1192, 1196, 1281, 1282, 1286, 1425, 1426, 1435, 1526, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1613, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1631, 1632, 1633, 1634, 1636, 1637, 1647, 1649, 1652, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1713, 1729, 1751, 1806, 1815, 1838, 1845, 1868, 1869, 1881, 1893, 1904, 1909, 1911, 1913, 1915, 1925, 1929, 1934, 1946, 1948, 1952, 1955], "breviti": [1, 54, 1911], "print": [1, 3, 17, 20, 23, 31, 32, 37, 38, 41, 44, 46, 51, 53, 707, 715, 716, 721, 732, 733, 743, 751, 898, 900, 901, 1121, 1122, 1131, 1192, 1196, 1198, 1199, 1203, 1281, 1346, 1349, 1387, 1412, 1425, 1437, 1438, 1506, 1562, 1565, 1566, 1617, 1627, 1628, 1629, 1630, 1633, 1643, 1647, 1660, 1665, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1762, 1854, 1868, 1870, 1871, 1893, 1895, 1896, 1898, 1904, 1905, 1911, 1913, 1915, 1917, 1923, 1932, 1933, 1936, 1937, 1942, 1943, 1946, 1948, 1949, 1956], "tabl": [1, 3, 23, 54, 1368, 1515, 1871, 1873, 1898, 1914, 1915, 1917, 1918, 1923, 1927, 1934, 1945, 1947, 1950, 1953, 1956], "sort_bi": [1, 1917], "self_cpu_time_tot": [1, 1917], "avg": [1, 23, 1668], "mul": [1, 17, 44, 54, 55, 58, 61, 62, 407, 734, 735, 744, 1169, 1316, 1870, 1871, 1873, 1886, 1888, 1898, 1911, 1913, 1920, 1924, 1927, 1930, 1936, 1942, 1944, 1951, 1955], "32": [1, 2, 21, 23, 76, 733, 1118, 1189, 1201, 1281, 1339, 1364, 1365, 1366, 1370, 1371, 1373, 1374, 1394, 1413, 1419, 1430, 1468, 1469, 1470, 1471, 1472, 1489, 1519, 1520, 1526, 1574, 1887, 1888, 1904, 1908, 1911, 1921, 1927, 1930, 1932, 1933, 1943, 1949, 1950], "048m": 1, "200": [1, 27, 44, 1192, 1269, 1425, 1715, 1873, 1927, 1956], "27": [1, 604, 1259, 1688, 1710, 1855, 1911], "041m": 1, "powbackward0": 1, "9": [1, 7, 20, 21, 23, 30, 54, 55, 60, 301, 303, 305, 309, 389, 390, 458, 500, 547, 568, 570, 684, 732, 733, 841, 923, 929, 933, 937, 957, 1048, 1063, 1066, 1087, 1088, 1097, 1098, 1108, 1111, 1112, 1115, 1116, 1145, 1155, 1221, 1223, 1244, 1246, 1248, 1259, 1261, 1324, 1325, 1331, 1332, 1335, 1336, 1349, 1368, 1369, 1421, 1422, 1437, 1438, 1447, 1450, 1515, 1516, 1562, 1565, 1566, 1652, 1653, 1668, 1670, 1671, 1672, 1673, 1674, 1680, 1683, 1684, 1685, 1689, 1695, 1697, 1698, 1702, 1706, 1742, 1749, 1758, 1762, 1772, 1777, 1787, 1795, 1803, 1829, 1830, 1834, 1836, 1845, 1855, 1862, 1870, 1874, 1880, 1900, 1904, 1909, 1910, 1911, 1913, 1914, 1915, 1923, 1927, 1928, 1930, 1934, 1943], "727m": 1, "55": [1, 1379, 1911], "483m": 1, "accumulategrad": [1, 1893], "148m": 1, "graphroot": 1, "691": 1, "816u": 1, "emit": [1, 13, 32, 37, 54, 667, 1207, 1764, 1873, 1879, 1912, 1922, 1927], "nvtx": [1, 4, 1869], "program": [1, 3, 4, 8, 17, 20, 23, 32, 41, 43, 44, 46, 54, 604, 950, 951, 1014, 1016, 1122, 1757, 1870, 1872, 1874, 1884, 1893, 1896, 1900, 1903, 1905, 1906, 1909, 1910, 1932, 1938, 1941, 1943, 1944, 1945, 1946, 1948, 1952, 1954, 1956, 1958], "off": [1, 5, 7, 8, 13, 23, 31, 46, 54, 69, 908, 917, 1026, 1122, 1149, 1150, 1189, 1207, 1255, 1338, 1339, 1340, 1342, 1418, 1419, 1420, 1524, 1562, 1759, 1895, 1896, 1897, 1900, 1903, 1907, 1917, 1918, 1919, 1923, 1924, 1945, 1949, 1953], "o": [1, 21, 23, 24, 29, 41, 42, 43, 54, 1192, 1263, 1306, 1307, 1308, 1396, 1425, 1431, 1605, 1745, 1868, 1874, 1885, 1893, 1896, 1897, 1900, 1910, 1915, 1916, 1923], "trace_nam": 1, "regular": [1, 3, 4, 23, 31, 41, 46, 49, 54, 1008, 1009, 1121, 1239, 1240, 1348, 1363, 1364, 1365, 1366, 1370, 1410, 1424, 1425, 1426, 1427, 1435, 1436, 1517, 1554, 1596, 1607, 1608, 1647, 1671, 1680, 1873, 1887, 1888, 1898, 1899, 1903, 1904, 1911, 1915, 1918, 1921, 1923, 1927, 1928, 1935, 1937, 1949], "command": [1, 4, 23, 31, 38, 41, 54, 1896, 1902, 1906, 1910, 1916, 1917, 1924, 1950, 1953], "unfortun": [1, 9, 20, 1605, 1893, 1943, 1945], "wai": [1, 3, 5, 7, 8, 9, 13, 20, 21, 23, 25, 27, 28, 29, 33, 37, 46, 48, 49, 53, 54, 138, 567, 667, 783, 806, 809, 812, 848, 849, 877, 880, 889, 891, 892, 893, 894, 895, 1086, 1088, 1122, 1145, 1192, 1221, 1222, 1237, 1252, 1341, 1369, 1388, 1389, 1390, 1395, 1407, 1408, 1409, 1425, 1453, 1470, 1472, 1516, 1568, 1605, 1615, 1645, 1684, 1688, 1695, 1870, 1872, 1873, 1877, 1879, 1880, 1883, 1885, 1886, 1887, 1893, 1895, 1896, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1910, 1911, 1912, 1914, 1915, 1918, 1923, 1924, 1927, 1931, 1933, 1937, 1941, 1942, 1944, 1945, 1946, 1949, 1954, 1955, 1956, 1958], "disk": [1, 20, 1263, 1745, 1893, 1904, 1915, 1932], "annot": [1, 33, 38, 44, 54, 902, 1190, 1203, 1870, 1872, 1874, 1911, 1923, 1946, 1947, 1949], "wait": [1, 17, 23, 31, 38, 40, 53, 811, 964, 968, 969, 971, 1041, 1195, 1303, 1306, 1307, 1312, 1697, 1871, 1873, 1885, 1895, 1896, 1897, 1913, 1917, 1923, 1946, 1954, 1958], "either": [1, 8, 9, 13, 17, 20, 21, 23, 27, 28, 29, 31, 33, 38, 40, 41, 42, 44, 46, 51, 53, 54, 142, 209, 301, 309, 500, 502, 604, 667, 719, 725, 726, 727, 732, 733, 743, 751, 766, 772, 778, 845, 877, 879, 886, 895, 896, 926, 939, 979, 1065, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1118, 1122, 1145, 1167, 1169, 1185, 1192, 1207, 1247, 1262, 1263, 1278, 1293, 1331, 1332, 1335, 1336, 1339, 1340, 1341, 1342, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1369, 1379, 1385, 1392, 1394, 1416, 1417, 1419, 1420, 1425, 1428, 1429, 1430, 1431, 1432, 1439, 1440, 1442, 1456, 1457, 1472, 1473, 1475, 1477, 1478, 1479, 1496, 1497, 1507, 1535, 1536, 1559, 1567, 1593, 1600, 1605, 1630, 1652, 1660, 1670, 1671, 1673, 1680, 1695, 1710, 1712, 1754, 1757, 1811, 1815, 1864, 1868, 1870, 1872, 1873, 1875, 1879, 1887, 1891, 1893, 1894, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1906, 1908, 1911, 1914, 1915, 1916, 1918, 1924, 1925, 1927, 1928, 1931, 1934, 1943, 1944, 1947, 1959], "nvidia": [1, 13, 23, 977, 990, 1018, 1024, 1028, 1042, 1043, 1850, 1869, 1896, 1900, 1902, 1908, 1910, 1918, 1927, 1935, 1938, 1953, 1954, 1956], "visual": [1, 54, 1293, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1418, 1419, 1420, 1476, 1869, 1896, 1904, 1910, 1917, 1932, 1946, 1954, 1956], "nvvp": 1, "timelin": [1, 4, 1306, 1307, 1869, 1917], "load_nvprof": 1, "repl": [1, 1948], "append": [1, 23, 53, 54, 55, 60, 217, 242, 594, 748, 750, 752, 1011, 1055, 1057, 1286, 1378, 1396, 1427, 1436, 1442, 1453, 1605, 1871, 1872, 1873, 1893, 1895, 1896, 1906, 1910, 1911, 1913, 1927, 1932, 1949, 1955], "size": [1, 2, 3, 7, 17, 20, 21, 23, 25, 29, 31, 40, 44, 46, 49, 54, 55, 56, 61, 62, 63, 126, 196, 209, 230, 242, 243, 301, 303, 309, 327, 432, 433, 434, 436, 474, 480, 485, 486, 487, 500, 502, 504, 507, 510, 531, 532, 533, 553, 568, 570, 571, 572, 574, 575, 593, 594, 604, 605, 667, 677, 678, 680, 682, 683, 684, 686, 707, 715, 716, 722, 728, 729, 730, 732, 733, 743, 751, 753, 754, 755, 756, 766, 772, 773, 774, 783, 845, 852, 864, 865, 867, 879, 888, 889, 890, 891, 892, 893, 904, 907, 908, 910, 917, 919, 920, 921, 922, 923, 930, 931, 932, 933, 939, 957, 965, 967, 973, 979, 980, 982, 1022, 1046, 1047, 1053, 1056, 1063, 1065, 1066, 1067, 1068, 1071, 1082, 1083, 1084, 1086, 1087, 1088, 1090, 1091, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1118, 1119, 1120, 1127, 1128, 1133, 1134, 1149, 1150, 1154, 1155, 1166, 1169, 1189, 1192, 1213, 1222, 1231, 1236, 1244, 1248, 1252, 1255, 1257, 1258, 1259, 1261, 1262, 1264, 1272, 1278, 1279, 1281, 1282, 1286, 1289, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1300, 1301, 1315, 1317, 1320, 1323, 1325, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1368, 1369, 1371, 1372, 1373, 1374, 1377, 1379, 1380, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1431, 1432, 1437, 1438, 1440, 1446, 1447, 1448, 1449, 1450, 1451, 1456, 1464, 1468, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1497, 1502, 1503, 1504, 1507, 1508, 1515, 1516, 1519, 1520, 1524, 1535, 1542, 1548, 1549, 1550, 1559, 1560, 1562, 1565, 1566, 1568, 1574, 1593, 1594, 1595, 1596, 1605, 1628, 1638, 1639, 1640, 1641, 1642, 1644, 1646, 1649, 1651, 1653, 1656, 1657, 1673, 1682, 1701, 1702, 1703, 1704, 1706, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1735, 1740, 1749, 1752, 1771, 1792, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1806, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1829, 1830, 1831, 1836, 1838, 1846, 1847, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1866, 1867, 1869, 1870, 1871, 1873, 1881, 1883, 1886, 1887, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1908, 1909, 1911, 1913, 1916, 1917, 1918, 1920, 1923, 1927, 1929, 1930, 1932, 1933, 1941, 1943, 1944, 1945, 1946, 1950, 1951, 1954, 1956, 1958], "format": [1, 18, 21, 23, 25, 33, 42, 54, 69, 143, 158, 160, 163, 166, 167, 168, 183, 194, 197, 228, 255, 285, 313, 319, 381, 486, 487, 512, 567, 570, 571, 572, 573, 574, 575, 667, 722, 747, 779, 780, 936, 1011, 1065, 1066, 1067, 1120, 1189, 1192, 1205, 1234, 1348, 1369, 1377, 1395, 1425, 1440, 1472, 1605, 1639, 1641, 1657, 1660, 1661, 1665, 1723, 1725, 1727, 1745, 1788, 1792, 1797, 1798, 1799, 1800, 1801, 1802, 1811, 1867, 1868, 1870, 1873, 1874, 1879, 1896, 1898, 1904, 1909, 1911, 1912, 1913, 1917, 1918, 1923, 1924, 1927, 1930, 1932, 1934, 1954, 1956], "arg0": [1, 23], "arg1": [1, 23, 38, 39, 41, 1661, 1911], "repres": [1, 8, 11, 20, 21, 29, 30, 31, 33, 34, 40, 42, 44, 46, 54, 68, 70, 221, 747, 779, 780, 783, 876, 941, 945, 953, 957, 966, 998, 1001, 1065, 1086, 1088, 1093, 1095, 1096, 1097, 1098, 1122, 1145, 1152, 1181, 1182, 1185, 1188, 1191, 1207, 1208, 1239, 1281, 1333, 1348, 1425, 1431, 1472, 1474, 1476, 1605, 1611, 1614, 1619, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1633, 1634, 1638, 1648, 1661, 1665, 1689, 1695, 1701, 1703, 1714, 1757, 1797, 1798, 1799, 1801, 1802, 1811, 1815, 1847, 1848, 1853, 1859, 1860, 1870, 1872, 1873, 1880, 1883, 1888, 1893, 1898, 1899, 1901, 1903, 1904, 1907, 1911, 1916, 1918, 1919, 1921, 1923, 1927, 1930, 1944, 1945, 1949, 1958, 1959], "order": [1, 3, 5, 23, 24, 25, 27, 29, 41, 44, 46, 47, 52, 53, 54, 138, 179, 196, 221, 301, 303, 305, 309, 319, 390, 474, 475, 667, 779, 780, 789, 841, 863, 880, 881, 894, 900, 901, 918, 929, 969, 1011, 1022, 1053, 1056, 1057, 1065, 1083, 1085, 1086, 1092, 1104, 1105, 1106, 1107, 1123, 1133, 1145, 1192, 1211, 1222, 1228, 1230, 1237, 1244, 1247, 1248, 1255, 1256, 1259, 1261, 1264, 1293, 1299, 1313, 1315, 1333, 1342, 1348, 1362, 1425, 1426, 1435, 1452, 1453, 1489, 1497, 1524, 1548, 1549, 1550, 1574, 1596, 1605, 1614, 1624, 1638, 1639, 1640, 1641, 1652, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1695, 1701, 1704, 1714, 1749, 1752, 1777, 1787, 1815, 1833, 1840, 1842, 1847, 1850, 1855, 1861, 1868, 1869, 1870, 1871, 1873, 1874, 1877, 1885, 1886, 1887, 1888, 1891, 1894, 1896, 1897, 1898, 1899, 1901, 1904, 1907, 1909, 1911, 1914, 1915, 1916, 1918, 1920, 1923, 1924, 1925, 1927, 1928, 1930, 1934, 1937, 1941, 1942, 1944, 1946, 1950, 1954, 1956], "backend": [1, 13, 39, 43, 46, 728, 729, 730, 779, 780, 820, 842, 843, 846, 848, 849, 888, 894, 939, 945, 991, 1022, 1065, 1122, 1205, 1228, 1235, 1237, 1255, 1306, 1307, 1308, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1524, 1562, 1574, 1605, 1665, 1666, 1757, 1851, 1853, 1869, 1871, 1872, 1877, 1881, 1884, 1895, 1896, 1898, 1907, 1908, 1911, 1919, 1921, 1927, 1943, 1946, 1947, 1948, 1949, 1950, 1951, 1953], "side": [1, 13, 23, 40, 42, 44, 51, 54, 55, 58, 755, 756, 759, 760, 761, 1000, 1059, 1081, 1082, 1084, 1087, 1088, 1093, 1095, 1096, 1097, 1098, 1101, 1189, 1190, 1236, 1241, 1252, 1254, 1338, 1339, 1340, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1401, 1402, 1403, 1404, 1405, 1406, 1418, 1419, 1420, 1446, 1447, 1449, 1450, 1451, 1476, 1480, 1481, 1482, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1548, 1549, 1550, 1562, 1689, 1718, 1719, 1749, 1811, 1838, 1868, 1870, 1871, 1873, 1892, 1893, 1896, 1898, 1901, 1923, 1941, 1949], "creation": [1, 2, 20, 23, 25, 54, 732, 733, 743, 751, 811, 968, 1122, 1605, 1606, 1619, 1870, 1874, 1883, 1885, 1893, 1896, 1923, 1925, 1927, 1933, 1944, 1949], "warmup": [1, 3, 1011, 1896, 1917, 1941, 1946, 1954], "correl": [1, 29, 41, 953, 1353, 1354, 1355, 1356, 1357, 1358, 1364, 1365, 1366, 1370], "view": [1, 7, 8, 11, 17, 20, 21, 25, 27, 31, 46, 54, 55, 63, 67, 210, 242, 422, 484, 485, 486, 594, 605, 679, 684, 747, 865, 873, 874, 875, 883, 921, 933, 950, 951, 1055, 1056, 1063, 1104, 1105, 1106, 1107, 1122, 1155, 1167, 1192, 1247, 1258, 1307, 1369, 1377, 1395, 1425, 1440, 1476, 1477, 1478, 1479, 1516, 1561, 1601, 1602, 1605, 1609, 1704, 1736, 1740, 1741, 1745, 1751, 1752, 1783, 1803, 1814, 1825, 1830, 1834, 1846, 1859, 1860, 1862, 1869, 1870, 1871, 1885, 1887, 1888, 1894, 1898, 1913, 1920, 1923, 1925, 1927, 1929, 1930, 1933, 1944, 1945, 1951, 1953, 1955, 1956], "difficult": [1, 7, 9, 51, 1133, 1861, 1945, 1952, 1954, 1956], "eas": [1, 54, 1895, 1898, 1902, 1944, 1955], "sequenc": [1, 20, 25, 27, 28, 29, 46, 138, 553, 722, 747, 801, 867, 880, 894, 923, 925, 926, 929, 937, 971, 978, 979, 982, 1050, 1064, 1066, 1133, 1153, 1154, 1157, 1207, 1247, 1293, 1333, 1343, 1348, 1353, 1362, 1369, 1377, 1395, 1431, 1440, 1453, 1468, 1469, 1470, 1471, 1472, 1516, 1574, 1614, 1617, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1653, 1656, 1660, 1666, 1681, 1720, 1722, 1726, 1749, 1808, 1811, 1861, 1863, 1866, 1870, 1871, 1872, 1888, 1896, 1900, 1911, 1915, 1916, 1923, 1933, 1934, 1941, 1943, 1944, 1946, 1955, 1956], "gener": [1, 2, 3, 7, 8, 13, 20, 21, 23, 29, 33, 34, 41, 44, 46, 47, 48, 55, 57, 60, 63, 72, 141, 142, 161, 246, 274, 365, 408, 441, 468, 595, 667, 896, 909, 939, 941, 997, 1000, 1008, 1009, 1012, 1013, 1032, 1033, 1035, 1036, 1037, 1065, 1087, 1088, 1122, 1133, 1144, 1149, 1168, 1196, 1201, 1212, 1223, 1228, 1237, 1254, 1255, 1259, 1264, 1284, 1292, 1304, 1305, 1306, 1307, 1308, 1309, 1311, 1315, 1361, 1372, 1386, 1468, 1476, 1477, 1489, 1596, 1613, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1646, 1649, 1653, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1701, 1703, 1706, 1720, 1722, 1724, 1725, 1726, 1728, 1750, 1763, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1816, 1831, 1835, 1851, 1853, 1855, 1861, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1879, 1881, 1886, 1891, 1893, 1896, 1898, 1900, 1901, 1903, 1904, 1906, 1910, 1911, 1914, 1915, 1917, 1922, 1923, 1924, 1927, 1930, 1932, 1934, 1936, 1938, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1952, 1954, 1955, 1956, 1957], "seq": [1, 592, 747, 926, 938, 1293, 1377, 1395, 1431, 1440, 1468, 1470, 1472, 1641, 1845], "n": [1, 3, 23, 25, 28, 29, 31, 33, 38, 41, 54, 217, 248, 394, 452, 453, 673, 676, 677, 678, 722, 745, 747, 768, 864, 904, 907, 908, 910, 917, 919, 923, 929, 930, 931, 957, 958, 959, 960, 961, 962, 963, 964, 1046, 1047, 1057, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1105, 1125, 1128, 1133, 1145, 1149, 1150, 1154, 1189, 1192, 1203, 1207, 1208, 1211, 1212, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1264, 1272, 1281, 1286, 1288, 1293, 1296, 1317, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1385, 1386, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1397, 1407, 1408, 1409, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1428, 1429, 1430, 1431, 1432, 1434, 1440, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1456, 1458, 1459, 1460, 1464, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1489, 1495, 1507, 1508, 1516, 1520, 1524, 1559, 1562, 1564, 1574, 1605, 1612, 1623, 1632, 1651, 1701, 1702, 1703, 1708, 1713, 1714, 1720, 1726, 1728, 1741, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1792, 1793, 1809, 1810, 1811, 1815, 1816, 1830, 1831, 1836, 1840, 1842, 1855, 1856, 1857, 1858, 1861, 1871, 1873, 1877, 1886, 1887, 1891, 1893, 1896, 1898, 1900, 1901, 1906, 1915, 1917, 1918, 1919, 1927, 1928, 1932, 1933, 1934, 1949, 1951], "counter": [1, 23, 1004, 1022, 1167, 1362, 1883, 1885, 1893], "increment": [1, 23, 40, 44, 1118, 1154, 1196, 1362, 1664, 1870, 1872, 1893, 1923, 1941], "stash": [1, 5, 1896, 1898, 1916], "associ": [1, 8, 9, 23, 25, 34, 882, 939, 974, 1025, 1027, 1153, 1154, 1192, 1241, 1252, 1254, 1263, 1348, 1425, 1435, 1508, 1605, 1613, 1660, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1771, 1773, 1870, 1873, 1879, 1886, 1887, 1893, 1901, 1904, 1907, 1909, 1915, 1916, 1917, 1923, 1924, 1930, 1933, 1945, 1946, 1949, 1956, 1958], "tell": [1, 7, 54, 483, 1193, 1199, 1263, 1666, 1870, 1880, 1893, 1898, 1899, 1915, 1943, 1958], "top": [1, 3, 7, 8, 20, 25, 28, 29, 33, 46, 50, 54, 734, 904, 1341, 1342, 1361, 1385, 1392, 1416, 1432, 1474, 1477, 1524, 1619, 1623, 1625, 1778, 1833, 1852, 1874, 1880, 1885, 1898, 1914, 1943, 1953, 1954], "m": [1, 4, 8, 21, 23, 28, 29, 37, 41, 54, 673, 676, 677, 678, 707, 715, 716, 725, 726, 727, 728, 729, 730, 732, 733, 743, 745, 751, 801, 847, 848, 849, 907, 919, 923, 927, 932, 1078, 1131, 1154, 1190, 1192, 1197, 1198, 1202, 1203, 1209, 1212, 1223, 1231, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1248, 1249, 1250, 1255, 1256, 1257, 1258, 1264, 1281, 1282, 1286, 1296, 1315, 1317, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1373, 1374, 1375, 1376, 1380, 1381, 1382, 1383, 1384, 1387, 1388, 1389, 1390, 1393, 1394, 1411, 1412, 1414, 1415, 1418, 1419, 1420, 1424, 1425, 1432, 1433, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1562, 1564, 1605, 1612, 1617, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1645, 1646, 1649, 1701, 1702, 1703, 1713, 1720, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1792, 1793, 1811, 1815, 1816, 1831, 1838, 1870, 1871, 1872, 1873, 1896, 1898, 1900, 1901, 1904, 1906, 1909, 1918, 1927, 1937, 1938, 1940], "By": [1, 2, 3, 5, 13, 20, 23, 28, 32, 37, 44, 46, 54, 432, 433, 434, 435, 436, 867, 939, 957, 971, 1014, 1016, 1048, 1060, 1083, 1085, 1086, 1087, 1088, 1096, 1097, 1098, 1123, 1124, 1126, 1127, 1133, 1145, 1153, 1154, 1196, 1244, 1255, 1263, 1292, 1297, 1319, 1341, 1342, 1343, 1344, 1345, 1359, 1361, 1379, 1385, 1388, 1389, 1390, 1391, 1392, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1464, 1473, 1496, 1497, 1507, 1536, 1559, 1567, 1649, 1703, 1714, 1735, 1790, 1836, 1861, 1868, 1872, 1877, 1880, 1893, 1896, 1898, 1900, 1904, 1906, 1907, 1909, 1911, 1914, 1922, 1923, 1927, 1934, 1943, 1946, 1950, 1952, 1956], "compar": [1, 3, 5, 13, 20, 46, 54, 73, 681, 852, 863, 894, 1022, 1069, 1070, 1093, 1094, 1095, 1099, 1100, 1101, 1102, 1111, 1112, 1136, 1148, 1167, 1181, 1216, 1280, 1290, 1295, 1326, 1431, 1605, 1650, 1759, 1873, 1883, 1896, 1898, 1901, 1907, 1910, 1918, 1919, 1923, 1927, 1932, 1934, 1936, 1937, 1941, 1947, 1953], "down": [1, 7, 13, 20, 29, 31, 38, 39, 41, 54, 766, 1022, 1060, 1107, 1113, 1201, 1237, 1535, 1714, 1742, 1898, 1903, 1906, 1911, 1923, 1925, 1927, 1932, 1950, 1956], "irrelev": [1, 3, 1874], "simpli": [1, 3, 13, 20, 29, 33, 41, 44, 53, 54, 850, 1122, 1179, 1190, 1337, 1363, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1757, 1870, 1872, 1893, 1899, 1901, 1904, 1905, 1917, 1927, 1944, 1946, 1952], "hand": [1, 4, 23, 46, 51, 54, 1059, 1065, 1190, 1236, 1241, 1252, 1254, 1337, 1435, 1453, 1838, 1850, 1870, 1872, 1873, 1893, 1901, 1904, 1906, 1909, 1915, 1927, 1945, 1949], "underwai": [1, 1006, 1896], "up": [1, 6, 7, 8, 9, 13, 20, 21, 23, 27, 29, 31, 33, 37, 39, 40, 42, 43, 44, 46, 49, 54, 766, 772, 877, 939, 1008, 1009, 1011, 1048, 1065, 1094, 1095, 1100, 1102, 1107, 1122, 1183, 1196, 1201, 1204, 1205, 1250, 1333, 1348, 1372, 1431, 1470, 1472, 1476, 1477, 1489, 1515, 1524, 1535, 1593, 1605, 1684, 1720, 1742, 1847, 1848, 1868, 1870, 1872, 1877, 1880, 1883, 1885, 1886, 1887, 1893, 1894, 1895, 1896, 1900, 1901, 1902, 1904, 1907, 1911, 1915, 1917, 1918, 1923, 1924, 1934, 1941, 1943, 1945, 1949, 1952, 1954, 1956, 1958], "nonzero": [1, 46, 1189, 1273, 1275, 1276, 1281, 1864, 1871, 1913, 1944, 1945, 1951], "themselv": [1, 9, 29, 40, 46, 780, 828, 1833, 1896, 1915, 1957], "origin": [1, 5, 11, 17, 20, 21, 23, 25, 33, 44, 46, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 194, 197, 209, 473, 532, 590, 594, 604, 667, 747, 784, 825, 826, 841, 844, 845, 924, 929, 969, 1085, 1086, 1088, 1092, 1096, 1097, 1098, 1104, 1121, 1131, 1166, 1189, 1199, 1203, 1204, 1207, 1208, 1285, 1299, 1333, 1337, 1349, 1361, 1362, 1377, 1454, 1464, 1507, 1577, 1612, 1613, 1614, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1638, 1641, 1644, 1646, 1647, 1649, 1665, 1680, 1695, 1704, 1740, 1751, 1787, 1803, 1836, 1847, 1848, 1870, 1873, 1879, 1885, 1887, 1893, 1896, 1898, 1900, 1903, 1906, 1907, 1909, 1911, 1915, 1916, 1918, 1919, 1927, 1929, 1936, 1937, 1942, 1943, 1945, 1947, 1949, 1950, 1955, 1956, 1957], "did": [1, 7, 8, 23, 40, 1322, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1872, 1873, 1901, 1909, 1915, 1948, 1949, 1958], "relationship": [1, 9, 37, 54, 936, 1145, 1474, 1893, 1896, 1909, 1915, 1945, 1949], "conceptu": [1, 3, 1893, 1899, 1925], "tag": [1, 3, 7, 23, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 945, 1263, 1868, 1869, 1903, 1909, 1915, 1932], "eventu": [1, 7, 40, 46, 1868, 1916, 1944, 1945], "itt": [1, 1917], "intel": [1, 4, 1869, 1910, 1953], "r": [1, 29, 52, 138, 876, 878, 880, 894, 895, 927, 938, 953, 1065, 1123, 1125, 1128, 1133, 1134, 1137, 1145, 1203, 1221, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1237, 1238, 1241, 1243, 1250, 1252, 1254, 1255, 1264, 1368, 1369, 1378, 1437, 1438, 1456, 1515, 1516, 1565, 1566, 1612, 1682, 1713, 1861, 1870, 1871, 1872, 1893, 1895, 1898, 1901, 1910, 1927, 1930, 1932, 1949, 1956], "instrument": [1, 3, 21, 1307, 1869, 1903, 1937], "technologi": [1, 1869, 1938], "applic": [1, 2, 9, 29, 40, 475, 786, 797, 798, 799, 800, 886, 939, 990, 1127, 1302, 1361, 1362, 1470, 1472, 1507, 1605, 1850, 1869, 1880, 1888, 1893, 1895, 1896, 1897, 1898, 1902, 1903, 1904, 1908, 1911, 1914, 1918, 1923, 1924, 1925, 1927, 1933, 1946, 1958], "across": [1, 8, 13, 20, 21, 23, 25, 27, 31, 41, 46, 51, 54, 604, 722, 806, 861, 905, 982, 1021, 1022, 1065, 1079, 1133, 1202, 1207, 1293, 1342, 1362, 1372, 1413, 1431, 1433, 1464, 1476, 1494, 1497, 1526, 1542, 1589, 1605, 1624, 1628, 1652, 1745, 1861, 1869, 1870, 1883, 1886, 1888, 1893, 1897, 1900, 1903, 1904, 1906, 1907, 1908, 1914, 1916, 1919, 1923, 1924, 1929, 1932, 1937, 1941, 1944, 1946, 1949, 1956], "tool": [1, 4, 8, 9, 17, 23, 41, 54, 848, 903, 1307, 1790, 1868, 1869, 1870, 1872, 1895, 1896, 1910, 1911, 1915, 1917, 1937, 1946, 1950, 1954, 1956, 1958], "With": [1, 17, 20, 23, 29, 44, 46, 53, 726, 727, 728, 729, 730, 772, 1022, 1086, 1087, 1088, 1096, 1097, 1098, 1208, 1343, 1344, 1345, 1354, 1355, 1357, 1358, 1371, 1388, 1389, 1390, 1464, 1475, 1477, 1500, 1503, 1535, 1560, 1593, 1681, 1724, 1874, 1893, 1896, 1898, 1923, 1927, 1932, 1940, 1947, 1949, 1953, 1956], "abl": [1, 2, 7, 8, 17, 23, 25, 40, 44, 51, 1122, 1190, 1202, 1468, 1605, 1870, 1877, 1886, 1893, 1898, 1899, 1909, 1911, 1915, 1918, 1923, 1927, 1934, 1942, 1944, 1945, 1946, 1947, 1952, 1956, 1958], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 11, 14, 323, 728, 729, 730, 884, 894, 1133, 1720, 1861, 1893, 1896, 1897, 1898, 1923, 1924, 1938, 1946], "traceback": [1, 17, 33, 41, 53, 54, 1167, 1177, 1790, 1872, 1873, 1874, 1885, 1888, 1898, 1908, 1927, 1934, 1956, 1958], "fail": [1, 7, 23, 29, 31, 32, 33, 38, 39, 40, 41, 43, 53, 54, 55, 60, 63, 72, 895, 896, 969, 1022, 1193, 1199, 1202, 1221, 1250, 1255, 1263, 1264, 1281, 1662, 1873, 1875, 1885, 1893, 1896, 1898, 1906, 1907, 1910, 1911, 1915, 1923, 1942, 1943, 1944, 1946, 1947, 1949, 1956, 1958], "debug": [1, 2, 4, 5, 8, 20, 37, 67, 69, 667, 814, 815, 819, 830, 895, 896, 939, 941, 945, 966, 999, 1039, 1140, 1221, 1599, 1600, 1601, 1602, 1756, 1764, 1869, 1872, 1879, 1893, 1895, 1896, 1897, 1902, 1903, 1904, 1908, 1910, 1911, 1912, 1915, 1936, 1944, 1946, 1947, 1948, 1952, 1958], "test": [1, 3, 13, 17, 23, 38, 40, 41, 54, 55, 62, 63, 680, 686, 939, 1082, 1084, 1085, 1090, 1091, 1096, 1097, 1098, 1100, 1102, 1178, 1179, 1183, 1184, 1186, 1187, 1665, 1779, 1869, 1870, 1874, 1883, 1885, 1893, 1901, 1908, 1911, 1914, 1932, 1937, 1943, 1945, 1956, 1957], "slow": [1, 895, 1201, 1205, 1221, 1222, 1609, 1610, 1645, 1847, 1901, 1906, 1932, 1945], "import": [1, 2, 3, 5, 7, 9, 13, 16, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 34, 37, 38, 42, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 209, 667, 721, 728, 729, 730, 759, 760, 761, 779, 847, 848, 849, 898, 900, 918, 925, 957, 1116, 1118, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1167, 1189, 1190, 1193, 1195, 1197, 1198, 1199, 1201, 1202, 1203, 1207, 1208, 1209, 1243, 1244, 1247, 1248, 1261, 1293, 1391, 1425, 1605, 1615, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1640, 1641, 1642, 1643, 1644, 1645, 1652, 1660, 1661, 1683, 1684, 1707, 1870, 1872, 1873, 1874, 1883, 1885, 1888, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1906, 1907, 1908, 1909, 1911, 1918, 1921, 1923, 1924, 1925, 1927, 1930, 1932, 1933, 1934, 1937, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1954, 1955, 1956, 1957], "myfunc": [1, 1899], "inp": [1, 20, 23, 54, 881, 882, 883, 1476, 1605, 1951, 1954, 1957], "clone": [1, 14, 20, 46, 55, 242, 435, 884, 887, 898, 900, 901, 921, 1196, 1368, 1592, 1829, 1838, 1871, 1885, 1888, 1909, 1913, 1917, 1927, 1929, 1930, 1934, 1951], "run_fn": [1, 5, 844, 850], "last": [1, 5, 6, 11, 20, 21, 24, 27, 28, 29, 40, 53, 54, 303, 604, 679, 747, 864, 908, 917, 923, 933, 1008, 1048, 1053, 1057, 1082, 1084, 1087, 1088, 1090, 1091, 1094, 1095, 1097, 1098, 1100, 1102, 1104, 1149, 1150, 1154, 1167, 1169, 1177, 1189, 1213, 1247, 1250, 1255, 1292, 1297, 1333, 1346, 1361, 1369, 1371, 1377, 1395, 1397, 1412, 1432, 1435, 1439, 1440, 1453, 1469, 1470, 1476, 1495, 1516, 1525, 1538, 1561, 1562, 1605, 1606, 1651, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1740, 1749, 1757, 1787, 1790, 1797, 1798, 1799, 1801, 1802, 1803, 1811, 1815, 1831, 1833, 1836, 1859, 1860, 1872, 1873, 1883, 1886, 1888, 1893, 1896, 1898, 1901, 1908, 1911, 1915, 1916, 1927, 1933, 1934, 1942, 1950, 1956], "stdin": [1, 1167, 1790, 1888, 1898, 1908, 1927], "instal": [1, 3, 13, 14, 23, 54, 1868, 1904, 1905, 1911, 1915, 1923, 1932, 1942, 1944, 1949, 1952], "_tensor": [1, 142], "py": [1, 4, 13, 17, 23, 27, 29, 32, 39, 41, 46, 54, 74, 847, 1605, 1868, 1870, 1873, 1879, 1897, 1901, 1903, 1906, 1911, 1915, 1918, 1924, 1940, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1953, 1955, 1956, 1958], "93": [1, 604], "retain_graph": [1, 138, 880, 894, 900, 901, 1133, 1861, 1871, 1892, 1893, 1923], "90": [1, 1049, 1699, 1741], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 13, 23, 38, 40, 1868, 1896, 1917, 1950], "53": [1, 468], "44": [1, 309, 432, 1068, 1340, 1420, 1645, 1943], "set_detect_anomali": 1, "behaviour": [1, 680, 681, 686, 965, 1524, 1562, 1695, 1764, 1868, 1907], "interpos": [1, 1898], "grad_fn": [1, 138, 323, 475, 867, 880, 888, 889, 890, 891, 892, 893, 898, 900, 901, 1121, 1613, 1792, 1893, 1904, 1909], "node": [1, 23, 27, 31, 33, 39, 40, 44, 46, 54, 67, 70, 667, 806, 807, 808, 811, 812, 813, 1011, 1131, 1206, 1348, 1362, 1605, 1665, 1881, 1896, 1911, 1912, 1915, 1916, 1923, 1924, 1925, 1935, 1937, 1944, 1945, 1946, 1953, 1955, 1956], "grad_mod": [1, 1871], "least": [1, 5, 6, 8, 21, 25, 29, 39, 40, 46, 248, 390, 684, 910, 1053, 1055, 1056, 1065, 1106, 1107, 1145, 1153, 1154, 1189, 1214, 1237, 1264, 1286, 1319, 1333, 1605, 1639, 1868, 1873, 1887, 1891, 1893, 1894, 1896, 1900, 1916, 1919, 1925, 1927, 1928, 1929, 1934, 1946, 1948, 1956], "intermediari": [1, 13, 29, 886, 1893, 1901], "access": [1, 9, 17, 20, 23, 25, 44, 46, 53, 68, 475, 544, 721, 886, 975, 1192, 1195, 1207, 1254, 1333, 1425, 1596, 1607, 1608, 1613, 1617, 1639, 1649, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1869, 1870, 1871, 1873, 1874, 1877, 1881, 1884, 1885, 1887, 1888, 1893, 1896, 1900, 1901, 1903, 1904, 1923, 1927, 1930, 1931, 1933, 1941, 1944, 1945, 1946, 1948, 1952, 1959], "isinst": [1, 20, 29, 54, 898, 900, 901, 1179, 1190, 1871, 1873, 1893, 1898, 1904, 1915, 1927, 1955, 1956], "dir": [1, 1008, 1665, 1868, 1873, 1915], "__call__": [1, 1192, 1425], "__class__": [1, 55, 57], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1874], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1874], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1873], "__ne__": 1, "__new__": [1, 1872, 1874], "__reduce__": [1, 1915], "__reduce_ex__": 1, "__repr__": [1, 3, 1898], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 54, 1871, 1873], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1893], "metadata": [1, 3, 25, 33, 34, 44, 55, 62, 63, 1263, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1745, 1888, 1893, 1898, 1899, 1909, 1915, 1917, 1923, 1924, 1927, 1932, 1945, 1955], "next_funct": 1, "register_prehook": [1, 1893], "allclos": [1, 51, 52, 54, 895, 896, 1008, 1087, 1088, 1094, 1095, 1122, 1123, 1125, 1126, 1127, 1128, 1132, 1133, 1239, 1241, 1252, 1254, 1257, 1258, 1283, 1617, 1644, 1713, 1861, 1871, 1899, 1913, 1927], "pack": [1, 27, 725, 726, 727, 728, 729, 730, 732, 733, 747, 768, 1207, 1208, 1283, 1362, 1377, 1395, 1440, 1638, 1639, 1640, 1641, 1871, 1881, 1888, 1893, 1900, 1910, 1918], "unpack": [1, 55, 60, 61, 747, 883, 1207, 1239, 1283, 1362, 1641, 1643, 1650, 1666, 1873, 1874, 1893, 1898, 1900], "hook": [1, 24, 27, 28, 46, 474, 475, 735, 744, 886, 900, 901, 1011, 1192, 1362, 1425, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1646, 1649, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1869, 1889, 1897, 1898, 1903, 1915, 1918, 1943, 1945, 1946, 1947, 1949], "common": [1, 3, 8, 20, 31, 40, 51, 55, 69, 74, 672, 780, 852, 912, 915, 920, 952, 1060, 1065, 1110, 1111, 1112, 1113, 1135, 1214, 1263, 1314, 1343, 1344, 1345, 1348, 1464, 1506, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1733, 1745, 1812, 1853, 1869, 1873, 1878, 1887, 1893, 1896, 1898, 1899, 1900, 1904, 1906, 1909, 1911, 1915, 1927, 1928, 1931, 1934, 1944, 1946, 1949, 1952, 1954, 1955, 1956, 1958], "trade": [1, 5, 8, 46, 1255, 1342, 1757, 1895, 1900, 1919], "leav": [1, 8, 31, 41, 138, 880, 1197, 1209, 1615, 1618, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1806, 1870, 1872, 1873, 1893, 1896, 1915, 1919, 1949], "especi": [1, 9, 11, 20, 23, 54, 242, 921, 939, 946, 1592, 1872, 1893, 1898, 1899, 1907, 1909, 1918, 1923, 1927, 1941, 1945, 1946, 1948, 1949], "notic": [1, 23, 44, 676, 1085, 1099, 1286, 1296, 1341, 1477, 1541, 1686, 1687, 1692, 1693, 1699, 1869, 1870, 1893, 1927, 1950, 1952, 1954], "fit": [1, 9, 32, 50, 51, 486, 904, 1189, 1673, 1735, 1896, 1911, 1916, 1934, 1956], "evalu": [1, 4, 8, 9, 27, 28, 29, 44, 49, 54, 680, 686, 785, 850, 895, 1022, 1128, 1129, 1192, 1333, 1337, 1343, 1344, 1345, 1363, 1380, 1388, 1389, 1390, 1397, 1425, 1439, 1443, 1464, 1567, 1589, 1615, 1673, 1689, 1720, 1873, 1874, 1898, 1904, 1927, 1935, 1938, 1943, 1944, 1945], "saved_tensors_hook": [1, 886, 1893], "pack_hook": [1, 1893], "unpack_hook": [1, 1893], "pair": [1, 23, 25, 28, 29, 40, 42, 604, 722, 852, 927, 957, 1099, 1205, 1255, 1293, 1417, 1426, 1431, 1435, 1564, 1682, 1729, 1872, 1873, 1879, 1886, 1893, 1896, 1916, 1923, 1924, 1925, 1932, 1934, 1937, 1946], "retriev": [1, 20, 21, 23, 27, 31, 40, 54, 524, 876, 877, 1368, 1372, 1476, 1515, 1605, 1639, 1665, 1790, 1888, 1893, 1903, 1911, 1915, 1916, 1923, 1924, 1925, 1943, 1949, 1958], "everytim": 1, "store": [1, 3, 5, 13, 17, 21, 25, 31, 41, 44, 46, 54, 314, 320, 386, 673, 809, 812, 877, 919, 978, 980, 982, 1137, 1192, 1199, 1202, 1222, 1233, 1234, 1235, 1264, 1269, 1281, 1343, 1344, 1345, 1368, 1425, 1453, 1605, 1612, 1614, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1638, 1660, 1795, 1868, 1869, 1870, 1887, 1888, 1889, 1897, 1898, 1899, 1900, 1903, 1915, 1918, 1923, 1924, 1925, 1927, 1929, 1932, 1933, 1937, 1943, 1945, 1948, 1949], "content": [1, 3, 7, 25, 33, 44, 54, 886, 1199, 1202, 1222, 1233, 1235, 1240, 1253, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1806, 1835, 1868, 1873, 1882, 1885, 1893, 1906, 1923, 1931, 1932, 1933, 1952, 1956], "equal": [1, 21, 23, 29, 40, 41, 42, 44, 54, 248, 486, 532, 604, 667, 681, 682, 683, 726, 727, 728, 729, 730, 747, 755, 756, 807, 808, 809, 812, 848, 863, 908, 915, 917, 928, 929, 947, 957, 980, 982, 1035, 1054, 1070, 1109, 1123, 1124, 1136, 1149, 1150, 1152, 1153, 1154, 1177, 1181, 1216, 1237, 1250, 1254, 1257, 1258, 1281, 1282, 1293, 1310, 1326, 1330, 1331, 1332, 1334, 1335, 1336, 1341, 1342, 1348, 1354, 1355, 1357, 1358, 1362, 1369, 1372, 1373, 1374, 1377, 1379, 1395, 1430, 1431, 1439, 1440, 1476, 1492, 1493, 1497, 1500, 1503, 1515, 1516, 1519, 1520, 1526, 1605, 1639, 1642, 1701, 1714, 1771, 1772, 1777, 1803, 1811, 1830, 1846, 1851, 1864, 1871, 1874, 1880, 1886, 1887, 1888, 1893, 1894, 1901, 1907, 1913, 1914, 1916, 1928, 1932, 1934, 1955], "term": [1, 8, 9, 29, 40, 44, 54, 545, 721, 750, 779, 929, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1096, 1097, 1098, 1101, 1113, 1223, 1333, 1341, 1379, 1386, 1395, 1396, 1430, 1439, 1456, 1521, 1533, 1567, 1578, 1605, 1612, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1733, 1778, 1869, 1873, 1892, 1893, 1898, 1899, 1900, 1901, 1906, 1911, 1915, 1918, 1924, 1927, 1938, 1944], "mulbackward0": [1, 889, 892, 893], "inplac": [1, 49, 51, 54, 55, 62, 63, 742, 745, 763, 765, 767, 778, 784, 801, 825, 826, 827, 844, 845, 850, 884, 1122, 1192, 1337, 1347, 1363, 1364, 1365, 1366, 1367, 1370, 1382, 1383, 1384, 1411, 1424, 1425, 1443, 1444, 1445, 1452, 1454, 1467, 1490, 1498, 1509, 1510, 1511, 1512, 1513, 1517, 1528, 1529, 1530, 1539, 1554, 1569, 1570, 1572, 1575, 1577, 1587, 1599, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1850, 1871, 1880, 1893, 1898, 1911, 1937, 1951, 1955], "lead": [1, 5, 7, 19, 23, 30, 46, 52, 54, 884, 888, 890, 894, 896, 941, 1116, 1133, 1222, 1395, 1440, 1456, 1800, 1806, 1861, 1873, 1887, 1888, 1893, 1895, 1897, 1898, 1899, 1906, 1907, 1910, 1914, 1915, 1918, 1923, 1927, 1932, 1933, 1941, 1943, 1947], "undefin": [1, 23, 30, 33, 46, 307, 458, 604, 865, 887, 895, 896, 915, 923, 1068, 1117, 1118, 1341, 1662, 1707, 1893, 1896, 1898, 1899, 1923], "recurs": [1, 29, 46, 54, 941, 944, 1057, 1192, 1203, 1205, 1425, 1687, 1872, 1898, 1904, 1915, 1923, 1943, 1946, 1947, 1949], "inner": [1, 3, 46, 47, 52, 802, 804, 888, 1048, 1123, 1127, 1132, 1836, 1871, 1913, 1923, 1937], "save_on_cpu": 1, "pin_memori": [1, 20, 44, 55, 60, 63, 64, 65, 432, 433, 434, 435, 436, 1066, 1068, 1722, 1726, 1728, 1829, 1870, 1871, 1888, 1896, 1913, 1929, 1951], "within": [1, 5, 9, 20, 21, 23, 27, 28, 29, 40, 41, 42, 44, 46, 53, 54, 67, 68, 76, 475, 865, 895, 896, 939, 972, 1048, 1192, 1196, 1284, 1338, 1339, 1340, 1348, 1364, 1365, 1366, 1370, 1372, 1418, 1419, 1420, 1425, 1431, 1464, 1476, 1524, 1548, 1549, 1550, 1605, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629, 1631, 1632, 1633, 1634, 1635, 1718, 1719, 1749, 1771, 1849, 1853, 1870, 1872, 1873, 1883, 1888, 1891, 1895, 1896, 1898, 1902, 1903, 1904, 1907, 1911, 1914, 1915, 1918, 1921, 1922, 1923, 1924, 1932, 1944, 1946, 1948, 1955, 1956], "move": [1, 5, 7, 8, 9, 13, 23, 25, 46, 54, 511, 576, 808, 1085, 1192, 1199, 1258, 1263, 1299, 1343, 1344, 1345, 1398, 1399, 1400, 1425, 1464, 1562, 1607, 1608, 1681, 1872, 1881, 1882, 1885, 1887, 1896, 1899, 1900, 1904, 1905, 1906, 1909, 1914, 1915, 1916, 1923, 1929, 1934, 1949, 1956], "copi": [1, 7, 11, 20, 21, 23, 25, 31, 38, 44, 46, 50, 51, 54, 178, 184, 194, 197, 303, 390, 435, 445, 450, 458, 480, 486, 567, 568, 569, 570, 590, 604, 779, 801, 825, 826, 866, 867, 882, 928, 936, 939, 978, 979, 1104, 1105, 1106, 1107, 1109, 1122, 1192, 1203, 1263, 1264, 1325, 1362, 1372, 1425, 1435, 1476, 1605, 1638, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1730, 1736, 1742, 1829, 1838, 1844, 1870, 1871, 1885, 1888, 1893, 1894, 1896, 1898, 1906, 1913, 1915, 1916, 1917, 1918, 1923, 1927, 1929, 1930, 1931, 1933, 1937, 1945, 1948, 1955], "pin": [1, 197, 325, 432, 433, 434, 435, 436, 450, 567, 590, 1066, 1068, 1192, 1425, 1638, 1722, 1726, 1728, 1829, 1869, 1888, 1929], "asynchron": [1, 3, 4, 53, 184, 197, 567, 590, 991, 1192, 1195, 1210, 1425, 1869, 1874, 1895, 1897, 1923, 1929, 1932, 1954], "prod_1": 1, "prod_2": 1, "del": [1, 1874, 1885, 1898, 1900], "illustr": [1, 1873, 1892, 1898, 1927, 1941, 1943, 1949, 1950], "aliv": [1, 5, 20, 31, 40, 969, 1893, 1896, 1900, 1906, 1923, 1924, 1925], "live": [1, 27, 1008, 1011, 1192, 1425, 1870, 1896, 1900, 1923, 1925, 1941, 1945, 1958], "releas": [1, 7, 19, 23, 40, 42, 50, 54, 500, 674, 929, 930, 965, 966, 967, 973, 990, 1000, 1001, 1004, 1008, 1009, 1011, 1022, 1138, 1192, 1222, 1233, 1235, 1236, 1237, 1240, 1253, 1281, 1282, 1302, 1365, 1395, 1425, 1440, 1548, 1549, 1550, 1652, 1713, 1729, 1745, 1811, 1815, 1838, 1868, 1869, 1872, 1883, 1885, 1893, 1895, 1896, 1902, 1907, 1908, 1909, 1910, 1911, 1918, 1923, 1933, 1934, 1956], "delet": [1, 23, 54, 881, 966, 974, 1868, 1881, 1885, 1893, 1913, 1922, 1923, 1925, 1955], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 11, 14, 17, 23, 25, 27, 41, 44, 46, 47, 53, 55, 69, 667, 676, 747, 755, 756, 888, 890, 894, 1039, 1203, 1286, 1296, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1343, 1358, 1363, 1364, 1365, 1366, 1370, 1373, 1374, 1377, 1378, 1388, 1395, 1396, 1431, 1440, 1442, 1459, 1468, 1470, 1472, 1473, 1474, 1475, 1492, 1493, 1510, 1511, 1512, 1517, 1519, 1520, 1541, 1605, 1703, 1850, 1869, 1870, 1872, 1873, 1874, 1877, 1879, 1887, 1888, 1893, 1898, 1900, 1901, 1908, 1911, 1912, 1917, 1918, 1923, 1927, 1932, 1935, 1938, 1947, 1948], "messag": [1, 2, 5, 17, 23, 33, 42, 44, 51, 54, 55, 56, 71, 72, 611, 667, 1025, 1027, 1221, 1222, 1663, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1868, 1870, 1871, 1873, 1874, 1879, 1900, 1911, 1916, 1917, 1923, 1925, 1934, 1948, 1956], "get": [1, 8, 13, 20, 23, 24, 25, 28, 40, 41, 42, 43, 44, 46, 51, 53, 54, 76, 138, 323, 673, 721, 775, 776, 848, 849, 880, 883, 923, 993, 994, 995, 1012, 1052, 1122, 1125, 1126, 1127, 1139, 1167, 1207, 1259, 1368, 1369, 1393, 1394, 1421, 1422, 1423, 1435, 1452, 1605, 1606, 1613, 1639, 1646, 1664, 1734, 1749, 1853, 1868, 1869, 1870, 1873, 1883, 1885, 1886, 1893, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1909, 1913, 1915, 1918, 1923, 1925, 1927, 1931, 1932, 1933, 1941, 1943, 1944, 1945, 1949, 1950, 1956, 1957], "register_multi_grad_hook": [1, 1893], "fn": [1, 31, 32, 33, 37, 42, 44, 46, 54, 900, 901, 941, 942, 944, 1123, 1129, 1133, 1192, 1193, 1204, 1209, 1425, 1861, 1870, 1872, 1873, 1877, 1885, 1893, 1903, 1923, 1942, 1943, 1947, 1948, 1949, 1954, 1955, 1956], "multi": [1, 4, 31, 40, 747, 969, 1012, 1032, 1065, 1085, 1154, 1192, 1342, 1362, 1377, 1395, 1425, 1428, 1429, 1430, 1431, 1440, 1468, 1470, 1477, 1497, 1605, 1869, 1870, 1873, 1893, 1895, 1896, 1904, 1908, 1914, 1923, 1927, 1930, 1933, 1935], "specifi": [1, 2, 3, 5, 8, 13, 20, 21, 23, 27, 28, 29, 31, 33, 38, 39, 40, 41, 44, 46, 54, 85, 138, 183, 247, 307, 319, 458, 468, 480, 484, 486, 487, 500, 502, 504, 524, 532, 533, 547, 567, 570, 571, 572, 574, 575, 590, 667, 722, 728, 729, 730, 755, 756, 780, 781, 782, 786, 801, 810, 813, 827, 841, 845, 846, 848, 865, 867, 879, 880, 894, 910, 933, 939, 956, 957, 965, 966, 968, 969, 978, 979, 980, 982, 997, 1000, 1011, 1036, 1046, 1047, 1048, 1052, 1053, 1055, 1065, 1068, 1079, 1082, 1084, 1085, 1087, 1088, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1100, 1102, 1123, 1124, 1127, 1133, 1134, 1145, 1153, 1154, 1192, 1196, 1207, 1208, 1234, 1244, 1246, 1248, 1249, 1258, 1261, 1263, 1264, 1274, 1291, 1293, 1299, 1319, 1320, 1323, 1339, 1340, 1341, 1342, 1348, 1357, 1359, 1361, 1362, 1368, 1369, 1372, 1379, 1385, 1386, 1391, 1392, 1395, 1416, 1417, 1422, 1425, 1428, 1429, 1430, 1431, 1432, 1439, 1456, 1457, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1492, 1493, 1496, 1497, 1507, 1508, 1515, 1516, 1521, 1524, 1536, 1543, 1559, 1560, 1567, 1574, 1580, 1581, 1605, 1610, 1612, 1613, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1633, 1634, 1649, 1652, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1678, 1680, 1681, 1682, 1683, 1684, 1689, 1694, 1695, 1703, 1711, 1720, 1736, 1741, 1742, 1745, 1762, 1789, 1791, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1806, 1809, 1810, 1814, 1830, 1832, 1836, 1846, 1847, 1848, 1849, 1853, 1855, 1856, 1857, 1861, 1868, 1870, 1872, 1873, 1877, 1879, 1880, 1882, 1883, 1886, 1887, 1893, 1896, 1898, 1902, 1904, 1906, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1922, 1923, 1927, 1928, 1929, 1930, 1932, 1934, 1942, 1944, 1955], "ignor": [1, 5, 7, 23, 27, 32, 38, 44, 46, 54, 138, 486, 531, 673, 676, 677, 678, 722, 781, 782, 845, 848, 849, 861, 880, 894, 895, 896, 907, 929, 957, 960, 964, 1012, 1013, 1032, 1033, 1086, 1088, 1096, 1097, 1098, 1137, 1152, 1192, 1203, 1209, 1212, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1283, 1320, 1321, 1322, 1338, 1339, 1340, 1341, 1342, 1359, 1361, 1369, 1377, 1379, 1385, 1391, 1392, 1395, 1416, 1417, 1418, 1419, 1420, 1425, 1428, 1429, 1430, 1431, 1432, 1439, 1440, 1456, 1457, 1468, 1473, 1496, 1497, 1507, 1516, 1536, 1559, 1567, 1605, 1652, 1666, 1689, 1697, 1701, 1762, 1793, 1794, 1811, 1815, 1838, 1870, 1873, 1874, 1880, 1887, 1893, 1896, 1898, 1911, 1927, 1934, 1941, 1952, 1955], "rel": [1, 8, 9, 13, 21, 23, 29, 46, 54, 474, 475, 681, 863, 895, 896, 900, 901, 957, 1181, 1246, 1249, 1473, 1474, 1489, 1524, 1666, 1670, 1671, 1697, 1880, 1883, 1895, 1896, 1903, 1911, 1915, 1934, 1949], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 44, 54, 55, 62, 63, 784, 825, 826, 844, 845, 939, 1122, 1196, 1915, 1933, 1945, 1946], "_allowmutationonsavedcontext": 1, "purpos": [1, 21, 23, 54, 75, 458, 486, 747, 895, 1201, 1286, 1348, 1377, 1431, 1599, 1600, 1601, 1602, 1762, 1883, 1888, 1893, 1898, 1915, 1924, 1942, 1943, 1949, 1950, 1956], "clear": [1, 2, 8, 9, 42, 54, 946, 1192, 1425, 1426, 1435, 1665, 1868, 1893, 1896, 1904, 1909, 1913, 1914], "upon": [1, 2, 20, 24, 31, 33, 54, 939, 1605, 1614, 1617, 1885, 1893, 1896, 1911, 1918, 1925], "sin_": [1, 1871, 1886], "8415": [1, 1927], "sinbackward0": 1, "variou": [2, 5, 13, 20, 23, 44, 54, 1264, 1851, 1853, 1877, 1880, 1885, 1888, 1898, 1904, 1906, 1914, 1918, 1920, 1927, 1938, 1945, 1957], "get_cpu_cap": 2, "capabl": [2, 8, 13, 14, 23, 993, 1720, 1877, 1896, 1902, 1903, 1905, 1935], "string": [2, 3, 5, 12, 13, 20, 23, 31, 37, 38, 40, 44, 54, 590, 801, 841, 945, 991, 1008, 1009, 1065, 1122, 1192, 1199, 1202, 1263, 1353, 1354, 1355, 1425, 1426, 1435, 1468, 1470, 1472, 1499, 1500, 1501, 1628, 1660, 1713, 1745, 1753, 1755, 1852, 1853, 1868, 1871, 1872, 1873, 1874, 1887, 1893, 1898, 1903, 1904, 1909, 1911, 1915, 1917, 1923, 1929, 1930, 1932, 1937, 1942, 1946, 1949, 1956, 1957, 1958], "vsx": 2, "z": [2, 3, 10, 29, 46, 51, 55, 58, 62, 63, 604, 807, 864, 886, 930, 931, 947, 1065, 1069, 1293, 1378, 1524, 1617, 1650, 1651, 1660, 1707, 1737, 1738, 1870, 1871, 1872, 1887, 1893, 1895, 1896, 1901, 1902, 1911, 1915, 1921, 1923, 1925, 1941, 1944, 1955, 1956], "vector": [2, 11, 21, 29, 46, 47, 51, 242, 301, 303, 309, 676, 677, 678, 871, 880, 882, 888, 889, 890, 891, 892, 893, 894, 920, 921, 927, 938, 953, 957, 965, 1046, 1047, 1052, 1054, 1128, 1132, 1133, 1137, 1224, 1231, 1239, 1247, 1248, 1252, 1255, 1259, 1260, 1261, 1281, 1286, 1293, 1315, 1317, 1343, 1344, 1345, 1348, 1362, 1368, 1369, 1372, 1380, 1388, 1389, 1390, 1434, 1464, 1473, 1476, 1515, 1516, 1524, 1526, 1560, 1564, 1592, 1609, 1611, 1613, 1617, 1648, 1652, 1702, 1703, 1795, 1815, 1855, 1858, 1861, 1893, 1901, 1918, 1927, 1932, 1948], "NO": [2, 73, 75], "avx": [2, 1940], "avx2": [2, 1918, 1940], "avx512": [2, 1940], "is_built": [2, 1905], "built": [2, 3, 7, 8, 13, 21, 23, 28, 33, 49, 54, 940, 991, 1201, 1474, 1689, 1869, 1888, 1893, 1895, 1896, 1898, 1902, 1904, 1905, 1906, 1920, 1942, 1943, 1949, 1956, 1957], "necessarili": [2, 21, 23, 29, 31, 40, 72, 458, 895, 1228, 1250, 1261, 1292, 1361, 1432, 1896, 1898], "machin": [2, 23, 31, 40, 46, 47, 52, 1196, 1201, 1237, 1461, 1902, 1903, 1904, 1905, 1906, 1908, 1911, 1912, 1915, 1922, 1923, 1924, 1938, 1940, 1948], "driver": [2, 1137, 1237, 1255, 1256, 1301, 1871, 1896, 1907, 1923, 1954, 1956], "would": [2, 3, 5, 8, 9, 11, 13, 20, 23, 29, 31, 33, 40, 41, 44, 46, 48, 51, 54, 138, 432, 433, 434, 435, 436, 685, 747, 781, 841, 880, 884, 894, 929, 1066, 1068, 1086, 1126, 1127, 1190, 1192, 1193, 1197, 1199, 1207, 1208, 1306, 1307, 1338, 1339, 1340, 1341, 1342, 1377, 1391, 1395, 1418, 1419, 1420, 1425, 1435, 1440, 1524, 1535, 1596, 1605, 1606, 1638, 1650, 1684, 1722, 1726, 1728, 1739, 1749, 1829, 1830, 1835, 1870, 1872, 1873, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1906, 1909, 1911, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1941, 1942, 1944, 1945, 1946, 1948, 1950, 1952, 1955, 1956], "allow_tf32": [2, 1757, 1871, 1896, 1907], "tensorfloat": 2, "core": [2, 3, 7, 8, 44, 50, 68, 939, 961, 1022, 1662, 1873, 1877, 1895, 1896, 1897, 1906, 1907, 1915, 1935, 1944, 1949, 1953], "amper": [2, 1927], "newer": [2, 13, 44, 1028, 1646, 1895, 1896, 1909, 1914, 1915, 1919, 1948], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1896, 1907], "precis": [2, 3, 8, 11, 13, 21, 29, 46, 673, 676, 895, 896, 907, 919, 1011, 1108, 1141, 1237, 1255, 1261, 1286, 1296, 1338, 1339, 1340, 1342, 1353, 1354, 1355, 1356, 1357, 1358, 1378, 1396, 1412, 1418, 1419, 1420, 1477, 1535, 1574, 1605, 1742, 1757, 1762, 1869, 1873, 1883, 1889, 1893, 1904, 1915, 1918, 1919, 1921, 1928, 1930, 1932, 1933, 1953, 1959], "gemm": [2, 1895, 1911, 1946], "allow_bf16_reduced_precision_reduct": [2, 1896, 1907], "cufft_plan_cach": [2, 1896], "cufft": 2, "queri": [2, 23, 40, 54, 722, 968, 969, 971, 977, 1024, 1028, 1042, 1043, 1192, 1303, 1425, 1431, 1574, 1616, 1871, 1896, 1915, 1944, 1945, 1949], "specif": [2, 3, 7, 8, 9, 13, 23, 25, 27, 29, 31, 38, 40, 42, 44, 46, 51, 54, 55, 67, 69, 74, 76, 500, 841, 848, 904, 971, 1056, 1085, 1154, 1189, 1196, 1201, 1205, 1207, 1208, 1292, 1372, 1397, 1574, 1599, 1600, 1619, 1661, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1680, 1681, 1682, 1683, 1684, 1752, 1757, 1792, 1851, 1868, 1870, 1872, 1873, 1875, 1877, 1879, 1883, 1887, 1889, 1893, 1896, 1898, 1902, 1906, 1908, 1911, 1914, 1915, 1917, 1918, 1919, 1921, 1923, 1925, 1932, 1933, 1940, 1944, 1945, 1946, 1948, 1949, 1953, 1955, 1956], "via": [2, 7, 13, 14, 20, 23, 25, 29, 38, 44, 46, 50, 54, 504, 604, 895, 896, 926, 966, 1002, 1022, 1069, 1125, 1264, 1343, 1344, 1345, 1362, 1380, 1388, 1389, 1390, 1397, 1464, 1612, 1646, 1649, 1695, 1870, 1872, 1873, 1883, 1885, 1888, 1891, 1893, 1896, 1898, 1899, 1900, 1902, 1904, 1906, 1907, 1911, 1915, 1918, 1923, 1924, 1927, 1930, 1931, 1942, 1944, 1945, 1946, 1949, 1952, 1957], "readonli": 2, "show": [2, 4, 7, 12, 17, 20, 21, 23, 25, 30, 44, 46, 54, 68, 888, 894, 939, 1116, 1192, 1293, 1425, 1596, 1665, 1868, 1869, 1873, 1886, 1895, 1896, 1897, 1901, 1902, 1904, 1911, 1914, 1915, 1923, 1925, 1948, 1950, 1953, 1954, 1956, 1958], "max_siz": [2, 39, 41, 1896], "capac": [2, 1035, 1896, 1906], "preferred_linalg_librari": [2, 1228], "subject": [2, 3, 11, 17, 23, 27, 28, 46, 53, 54, 221, 852, 1574, 1605, 1873, 1886, 1887, 1893, 1898, 1911, 1912, 1916, 1917, 1918, 1919, 1923, 1927, 1930, 1935, 1936, 1937, 1944, 1953], "algebra": [2, 9, 1065, 1228, 1249, 1869, 1878], "cusolv": [2, 1255, 1256, 1815], "magma": [2, 931, 1237, 1281, 1713, 1815, 1910, 1927], "decid": [2, 4, 7, 23, 40, 50, 1628, 1880, 1911, 1927, 1945, 1946, 1950], "heurist": [2, 13, 20, 40, 41, 54, 1065, 1950], "overrid": [2, 13, 21, 23, 24, 29, 33, 41, 46, 51, 54, 779, 780, 841, 877, 879, 1008, 1341, 1342, 1359, 1361, 1385, 1392, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1496, 1497, 1507, 1536, 1559, 1567, 1619, 1684, 1745, 1762, 1869, 1873, 1877, 1909, 1914, 1915, 1918, 1923, 1927, 1932, 1937, 1955], "wherev": [2, 9, 1886, 1949], "pick": [2, 23, 39, 41, 500, 939, 1893, 1923, 1943, 1944, 1950], "prefer": [2, 9, 20, 25, 31, 46, 849, 865, 890, 1190, 1232, 1245, 1249, 1257, 1264, 1432, 1574, 1749, 1811, 1829, 1870, 1893, 1896, 1915, 1927], "environ": [2, 3, 7, 13, 14, 17, 19, 21, 29, 31, 33, 38, 43, 54, 67, 69, 667, 1201, 1207, 1395, 1440, 1850, 1868, 1870, 1879, 1893, 1895, 1897, 1902, 1907, 1908, 1910, 1916, 1923, 1940, 1942, 1946, 1956], "variabl": [2, 3, 5, 13, 17, 19, 21, 29, 31, 33, 38, 43, 46, 51, 54, 55, 58, 62, 63, 67, 69, 435, 667, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 715, 716, 717, 718, 719, 721, 725, 726, 727, 728, 729, 730, 732, 733, 743, 747, 751, 786, 884, 953, 957, 1034, 1066, 1133, 1205, 1207, 1264, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1368, 1369, 1377, 1378, 1395, 1396, 1397, 1410, 1412, 1425, 1428, 1433, 1440, 1442, 1605, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1656, 1666, 1668, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1722, 1724, 1726, 1850, 1861, 1866, 1868, 1869, 1879, 1880, 1887, 1888, 1893, 1895, 1897, 1900, 1901, 1907, 1908, 1910, 1911, 1914, 1918, 1923, 1929, 1932, 1943, 1944, 1946, 1948, 1956], "torch_linalg_prefer_cusolv": 2, "global": [2, 3, 5, 8, 20, 23, 25, 27, 28, 29, 31, 41, 46, 51, 53, 54, 55, 58, 62, 63, 841, 848, 852, 860, 908, 917, 966, 1000, 1017, 1024, 1066, 1068, 1078, 1083, 1101, 1119, 1122, 1149, 1150, 1173, 1180, 1192, 1195, 1207, 1211, 1262, 1278, 1425, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1624, 1628, 1656, 1722, 1724, 1726, 1729, 1753, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1866, 1870, 1873, 1874, 1889, 1892, 1898, 1903, 1904, 1906, 1908, 1909, 1918, 1923, 1924, 1925, 1927, 1930, 1932, 1943, 1945, 1946, 1947, 1955, 1956], "overridden": [2, 13, 54, 876, 877, 878, 1008, 1425, 1790, 1873, 1893, 1898, 1907, 1916, 1956, 1957], "achiev": [2, 20, 21, 23, 29, 41, 46, 1065, 1129, 1192, 1342, 1348, 1425, 1431, 1432, 1497, 1526, 1605, 1884, 1896, 1903, 1906, 1915, 1923, 1925, 1956], "better": [2, 3, 7, 8, 9, 13, 20, 23, 31, 50, 939, 1034, 1121, 1125, 1126, 1167, 1179, 1207, 1361, 1458, 1580, 1605, 1695, 1720, 1873, 1892, 1893, 1895, 1896, 1901, 1910, 1911, 1914, 1917, 1918, 1919, 1927, 1932, 1937, 1942, 1943, 1949, 1953], "select": [2, 5, 14, 18, 20, 23, 29, 31, 301, 303, 305, 309, 747, 929, 959, 960, 963, 972, 973, 977, 984, 985, 986, 987, 989, 1010, 1014, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1034, 1035, 1038, 1040, 1042, 1043, 1085, 1264, 1293, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1377, 1395, 1440, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1574, 1633, 1634, 1752, 1826, 1853, 1864, 1870, 1871, 1873, 1885, 1886, 1887, 1888, 1893, 1895, 1896, 1901, 1908, 1913, 1918, 1927, 1931, 1934, 1943, 1949, 1951, 1953, 1958], "incorrect": [2, 4, 5, 46, 54, 72, 73, 75, 242, 500, 543, 886, 895, 921, 1207, 1250, 1263, 1431, 1468, 1469, 1470, 1471, 1472, 1592, 1652, 1800, 1811, 1870, 1873, 1896, 1907, 1911], "linalg": [2, 394, 929, 930, 931, 932, 965, 1051, 1137, 1170, 1272, 1281, 1282, 1283, 1287, 1288, 1612, 1613, 1617, 1652, 1700, 1705, 1707, 1713, 1784, 1815, 1816, 1838, 1858, 1869], "inv": [2, 29, 931, 1170, 1223, 1227, 1233, 1249, 1253, 1257], "inv_ex": 2, "cholesky_ex": [2, 1221], "lu_factor": [2, 1240, 1241, 1281, 1282, 1283], "lu": [2, 10, 1233, 1239, 1240, 1241, 1282, 1283, 1871], "eigh": [2, 1221, 1227, 1230, 1249, 1255, 1907], "eighval": 2, "svdval": [2, 1223, 1237, 1246, 1255, 1815, 1907], "_linalgbackend": 2, "sdpbackend": 2, "enum": [2, 23, 55, 783, 1898, 1911, 1918, 1923, 1949], "scale": [2, 7, 20, 29, 31, 39, 41, 85, 460, 462, 604, 672, 676, 677, 678, 725, 726, 727, 728, 729, 730, 731, 736, 737, 738, 739, 740, 741, 742, 743, 746, 757, 759, 760, 761, 762, 764, 767, 768, 782, 786, 789, 806, 807, 808, 809, 812, 907, 1079, 1080, 1083, 1101, 1132, 1133, 1278, 1337, 1363, 1368, 1369, 1370, 1386, 1397, 1452, 1477, 1478, 1479, 1515, 1516, 1517, 1533, 1535, 1574, 1575, 1580, 1668, 1689, 1715, 1716, 1717, 1718, 1719, 1793, 1794, 1812, 1861, 1869, 1871, 1887, 1891, 1896, 1900, 1904, 1918, 1919, 1921, 1928, 1946], "product": [2, 14, 23, 29, 40, 138, 673, 676, 677, 678, 747, 880, 882, 889, 891, 892, 893, 894, 907, 919, 925, 929, 953, 965, 977, 1024, 1028, 1042, 1043, 1046, 1062, 1065, 1128, 1132, 1133, 1169, 1212, 1224, 1231, 1257, 1258, 1260, 1286, 1293, 1296, 1317, 1377, 1378, 1395, 1396, 1523, 1574, 1612, 1701, 1702, 1711, 1757, 1831, 1846, 1858, 1861, 1869, 1870, 1886, 1893, 1901, 1903, 1907, 1915, 1927, 1958], "attent": [2, 7, 722, 1342, 1431, 1468, 1470, 1472, 1497, 1574, 1869, 1910, 1931], "stai": [2, 7, 27, 127, 1362, 1896, 1906, 1918, 1923, 1927], "align": [2, 9, 21, 69, 747, 766, 772, 807, 813, 939, 1065, 1145, 1247, 1340, 1348, 1361, 1377, 1391, 1395, 1419, 1420, 1440, 1477, 1507, 1508, 1535, 1536, 1593, 1612, 1652, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1687, 1836, 1869, 1886, 1893, 1901, 1911, 1921, 1928], "src": [2, 3, 23, 54, 184, 216, 301, 309, 458, 499, 500, 501, 502, 503, 504, 506, 525, 1056, 1122, 1315, 1468, 1471, 1472, 1662, 1746, 1747, 1748, 1752, 1783, 1825, 1850, 1871, 1915, 1951], "transform": [2, 3, 20, 25, 28, 44, 46, 51, 67, 68, 69, 768, 784, 825, 826, 844, 845, 930, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1121, 1122, 1123, 1127, 1132, 1189, 1201, 1346, 1380, 1388, 1389, 1390, 1397, 1412, 1453, 1469, 1470, 1471, 1472, 1489, 1495, 1524, 1541, 1560, 1596, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1778, 1811, 1869, 1899, 1916, 1918, 1927, 1932, 1937, 1938, 1948, 1949], "sdp_utils_cpp": 2, "h": [2, 4, 10, 13, 29, 474, 475, 728, 729, 730, 747, 1221, 1228, 1231, 1241, 1255, 1331, 1332, 1339, 1340, 1342, 1344, 1345, 1349, 1354, 1355, 1357, 1365, 1366, 1368, 1370, 1377, 1378, 1389, 1390, 1395, 1396, 1397, 1408, 1409, 1419, 1420, 1437, 1438, 1440, 1442, 1459, 1475, 1478, 1479, 1489, 1497, 1524, 1559, 1565, 1566, 1612, 1613, 1646, 1662, 1815, 1871, 1886, 1887, 1893, 1896, 1897, 1898, 1900, 1901, 1911, 1931, 1932, 1933, 1944, 1953], "flash_sdp_en": 2, "flash": 2, "enable_mem_efficient_sdp": [2, 1574], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1574], "math_sdp_en": 2, "math": [2, 20, 54, 1075, 1241, 1243, 1536, 1574, 1703, 1720, 1816, 1869, 1870, 1872, 1873, 1907, 1927, 1928, 1934, 1956], "enable_math_sdp": [2, 1574], "sdp_kernel": [2, 1574], "enable_flash": 2, "enable_math": [2, 1574], "enable_mem_effici": 2, "temporarili": [2, 31, 1753, 1893, 1911, 1917, 1950], "previou": [2, 17, 23, 40, 46, 54, 543, 747, 939, 1000, 1110, 1145, 1202, 1262, 1278, 1377, 1395, 1440, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1665, 1720, 1811, 1881, 1893, 1896, 1898, 1904, 1910, 1918, 1925, 1946], "restor": [2, 5, 27, 54, 76, 946, 1110, 1262, 1278, 1649, 1740, 1762, 1904, 1909, 1943], "is_avail": [2, 16, 23, 1853, 1869, 1896, 1902, 1905, 1909, 1917], "determinist": [2, 3, 5, 19, 23, 29, 54, 72, 76, 500, 860, 1140, 1173, 1195, 1207, 1208, 1289, 1292, 1294, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1395, 1440, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1574, 1750, 1756, 1850, 1871, 1893, 1908, 1914, 1922], "algorithm": [2, 3, 7, 11, 18, 21, 24, 27, 29, 31, 46, 76, 747, 766, 772, 929, 1189, 1232, 1239, 1245, 1249, 1255, 1264, 1281, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1375, 1377, 1395, 1440, 1476, 1477, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1524, 1535, 1574, 1593, 1605, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1684, 1703, 1742, 1757, 1815, 1816, 1850, 1869, 1893, 1896, 1907, 1923, 1927], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 486, 860, 1066, 1067, 1068, 1173, 1756, 1908], "benchmark": [2, 1869, 1871, 1896, 1902, 1941, 1946, 1953], "fastest": [2, 864, 1605, 1651, 1670, 1671, 1901, 1908, 1914], "benchmark_limit": 2, "maximum": [2, 29, 40, 41, 44, 486, 682, 684, 758, 782, 807, 808, 809, 812, 813, 861, 979, 1014, 1016, 1022, 1029, 1030, 1044, 1045, 1066, 1067, 1068, 1111, 1127, 1152, 1153, 1154, 1264, 1289, 1310, 1384, 1515, 1516, 1610, 1687, 1695, 1720, 1734, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1850, 1852, 1871, 1879, 1891, 1892, 1896, 1906, 1913, 1921, 1934, 1944, 1951, 1958], "try": [2, 3, 4, 7, 8, 23, 25, 28, 32, 33, 37, 40, 44, 46, 50, 51, 70, 71, 939, 1035, 1118, 1127, 1133, 1197, 1198, 1207, 1228, 1310, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1468, 1469, 1471, 1477, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1574, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1861, 1868, 1870, 1873, 1874, 1893, 1896, 1898, 1900, 1901, 1906, 1911, 1914, 1915, 1918, 1919, 1923, 1927, 1942, 1944, 1945, 1946, 1948, 1956, 1958], "dispatch": [2, 23, 46, 54, 72, 73, 75, 1197, 1306, 1307, 1664, 1851, 1853, 1873, 1877, 1896, 1898, 1911, 1946, 1947, 1957], "v8": 2, "verbos": [2, 13, 23, 54, 667, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1868, 1879, 1887, 1911, 1932, 1956], "On": [2, 13, 19, 20, 23, 24, 29, 41, 46, 51, 54, 673, 676, 907, 919, 1239, 1286, 1296, 1353, 1354, 1355, 1356, 1357, 1358, 1378, 1393, 1394, 1395, 1396, 1412, 1435, 1440, 1453, 1605, 1670, 1671, 1680, 1683, 1869, 1870, 1880, 1893, 1895, 1896, 1898, 1907, 1915, 1923, 1924, 1925, 1927, 1941, 1944, 1945], "demand": [2, 20, 1002, 1872, 1903, 1906, 1923], "onemkl": 2, "easier": [2, 7, 20, 54, 1870, 1872, 1888, 1893, 1894, 1898, 1899, 1927, 1946, 1956], "dump": [2, 54, 966, 1897, 1910, 1946, 1949, 1956], "durat": [2, 23, 37, 40, 1306, 1307, 1883, 1911, 1917, 1946, 1956], "kernel": [2, 3, 4, 11, 13, 17, 23, 44, 46, 53, 726, 727, 728, 729, 730, 759, 760, 761, 939, 964, 969, 971, 972, 1008, 1009, 1041, 1043, 1312, 1338, 1339, 1340, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1373, 1374, 1393, 1394, 1401, 1402, 1403, 1404, 1405, 1406, 1418, 1419, 1420, 1421, 1422, 1423, 1476, 1499, 1500, 1501, 1502, 1503, 1504, 1519, 1520, 1574, 1615, 1851, 1853, 1870, 1877, 1881, 1888, 1896, 1898, 1899, 1905, 1907, 1911, 1914, 1917, 1919, 1927, 1941, 1943, 1945, 1946, 1947, 1948, 1954, 1956], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 20, 23, 54, 667, 845, 955, 957, 1022, 1228, 1237, 1255, 1333, 1372, 1476, 1518, 1605, 1695, 1782, 1795, 1869, 1885, 1887, 1888, 1895, 1896, 1900, 1904, 1907, 1909, 1911, 1915, 1916, 1919, 1923, 1927, 1930, 1933, 1941, 1946, 1954, 1956, 1958], "moreov": [2, 46, 69, 500, 1605, 1683], "investig": [2, 7, 23, 51, 1954], "singl": [2, 3, 5, 13, 21, 23, 25, 27, 28, 29, 31, 33, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 55, 62, 63, 242, 667, 682, 683, 753, 754, 755, 756, 759, 760, 761, 801, 881, 888, 889, 890, 891, 892, 893, 894, 908, 917, 921, 939, 953, 957, 1008, 1011, 1121, 1123, 1124, 1127, 1129, 1133, 1149, 1150, 1154, 1177, 1191, 1192, 1207, 1208, 1211, 1269, 1293, 1306, 1307, 1331, 1332, 1335, 1336, 1339, 1340, 1342, 1353, 1354, 1355, 1357, 1358, 1361, 1362, 1373, 1374, 1380, 1393, 1394, 1397, 1419, 1420, 1425, 1433, 1437, 1438, 1453, 1464, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1519, 1520, 1521, 1548, 1549, 1550, 1592, 1598, 1600, 1603, 1604, 1605, 1609, 1610, 1611, 1647, 1648, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1684, 1689, 1710, 1736, 1757, 1803, 1809, 1810, 1847, 1848, 1850, 1856, 1857, 1861, 1869, 1870, 1872, 1873, 1880, 1881, 1885, 1887, 1888, 1893, 1895, 1896, 1898, 1899, 1901, 1904, 1906, 1907, 1908, 1909, 1911, 1914, 1915, 1916, 1917, 1918, 1924, 1925, 1927, 1930, 1933, 1934, 1937, 1940, 1941, 1943, 1944, 1945, 1946, 1948, 1949, 1955, 1956], "enough": [2, 8, 21, 54, 1203, 1315, 1474, 1797, 1798, 1799, 1800, 1801, 1802, 1850, 1872, 1885, 1888, 1896, 1898, 1901, 1914, 1915, 1930, 1946, 1957], "scope": [2, 7, 42, 54, 69, 1118, 1464, 1628, 1870, 1872, 1873, 1896, 1900, 1911, 1915, 1925, 1945, 1955], "second": [2, 5, 13, 17, 23, 27, 31, 33, 40, 42, 44, 52, 54, 673, 676, 678, 681, 747, 781, 861, 862, 863, 871, 879, 895, 896, 907, 911, 912, 914, 915, 916, 919, 965, 977, 1024, 1028, 1042, 1043, 1053, 1055, 1056, 1062, 1070, 1111, 1112, 1123, 1126, 1127, 1128, 1132, 1133, 1135, 1136, 1145, 1148, 1156, 1157, 1158, 1169, 1181, 1214, 1216, 1224, 1260, 1263, 1269, 1270, 1280, 1286, 1290, 1292, 1293, 1295, 1296, 1321, 1326, 1329, 1333, 1339, 1340, 1346, 1354, 1355, 1357, 1358, 1368, 1369, 1376, 1377, 1391, 1394, 1395, 1413, 1417, 1419, 1420, 1440, 1453, 1506, 1508, 1542, 1596, 1628, 1664, 1670, 1671, 1674, 1680, 1684, 1695, 1741, 1792, 1800, 1835, 1840, 1842, 1855, 1858, 1861, 1872, 1873, 1893, 1896, 1898, 1899, 1900, 1901, 1904, 1908, 1911, 1917, 1923, 1928, 1932, 1941, 1949], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 14, 17, 20, 23, 31, 32, 33, 37, 46, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 75, 486, 667, 734, 881, 882, 883, 891, 1122, 1137, 1362, 1605, 1869, 1870, 1873, 1874, 1879, 1883, 1885, 1888, 1891, 1893, 1895, 1898, 1901, 1912, 1915, 1917, 1918, 1919, 1923, 1927, 1932, 1936, 1937, 1938, 1943, 1944, 1946, 1947, 1949, 1951, 1954, 1955, 1956, 1957], "verbose_off": 2, "dnn": [2, 1895], "onednn": [2, 842, 843, 846, 1194, 1200, 1913, 1918], "former": [2, 46, 1395, 1425, 1893], "dnnl_verbos": 2, "verbose_on_cr": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 15, 16, 21, 29, 44, 50, 53, 1524, 1605, 1868, 1869, 1884, 1898, 1904, 1914, 1921, 1923, 1932, 1935, 1942], "els": [2, 7, 20, 23, 25, 29, 31, 32, 40, 44, 54, 55, 590, 747, 910, 1203, 1209, 1391, 1464, 1561, 1574, 1605, 1660, 1670, 1671, 1674, 1680, 1681, 1682, 1683, 1737, 1738, 1771, 1777, 1853, 1870, 1872, 1874, 1875, 1880, 1885, 1888, 1896, 1898, 1899, 1904, 1905, 1911, 1914, 1915, 1929, 1941, 1942, 1943, 1944, 1955], "einsum": [2, 1871, 1913], "readthedoc": [2, 1065], "io": [2, 7, 20, 25, 44, 1065, 1199, 1202, 1263, 1395, 1396, 1472, 1574, 1661, 1745, 1910, 1918], "en": [2, 21, 1065, 1902, 1932, 1959], "path_find": [2, 1065], "html": [2, 3, 4, 7, 14, 41, 44, 667, 717, 718, 719, 720, 732, 733, 743, 748, 749, 750, 751, 752, 939, 1065, 1474, 1850, 1853, 1894, 1902, 1904, 1908, 1915, 1932], "calcul": [2, 20, 23, 37, 747, 755, 756, 786, 789, 806, 807, 811, 927, 957, 1053, 1057, 1065, 1069, 1183, 1189, 1247, 1269, 1270, 1272, 1338, 1339, 1340, 1343, 1344, 1345, 1348, 1356, 1357, 1358, 1372, 1377, 1379, 1380, 1388, 1389, 1390, 1397, 1464, 1473, 1476, 1477, 1491, 1492, 1493, 1521, 1524, 1535, 1564, 1613, 1624, 1646, 1650, 1652, 1689, 1735, 1759, 1809, 1810, 1840, 1842, 1856, 1857, 1893, 1894, 1897, 1901, 1907, 1910, 1918, 1927, 1937], "path": [2, 3, 4, 8, 13, 23, 25, 38, 40, 42, 43, 44, 46, 54, 721, 902, 903, 966, 967, 1065, 1192, 1425, 1441, 1472, 1660, 1665, 1868, 1869, 1871, 1872, 1893, 1896, 1898, 1902, 1909, 1915, 1917, 1927, 1936, 1941, 1948, 1949, 1950], "contract": [2, 1065, 1831, 1869, 1887, 1915, 1942, 1949], "left": [2, 20, 54, 447, 486, 801, 807, 852, 908, 912, 915, 917, 918, 923, 928, 1065, 1085, 1092, 1106, 1109, 1110, 1114, 1145, 1149, 1150, 1154, 1189, 1190, 1197, 1211, 1232, 1241, 1245, 1249, 1252, 1253, 1254, 1255, 1257, 1269, 1270, 1315, 1333, 1338, 1339, 1340, 1341, 1342, 1353, 1354, 1355, 1372, 1379, 1392, 1393, 1394, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1428, 1429, 1430, 1434, 1435, 1473, 1476, 1477, 1478, 1479, 1524, 1544, 1562, 1610, 1687, 1688, 1701, 1729, 1742, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1811, 1831, 1836, 1855, 1870, 1871, 1873, 1893, 1898, 1904, 1921, 1928, 1954, 1958], "strategi": [2, 3, 7, 20, 21, 23, 27, 33, 46, 888, 890, 1065, 1125, 1205, 1333, 1605, 1695, 1872, 1899, 1901, 1919, 1946], "auto": [2, 23, 47, 70, 71, 1065, 1341, 1342, 1873, 1911, 1932, 1945], "greedi": [2, 27, 1065], "doc": [2, 3, 4, 9, 14, 40, 41, 44, 70, 74, 667, 717, 718, 719, 720, 732, 733, 743, 748, 749, 750, 751, 752, 827, 939, 1133, 1210, 1469, 1470, 1471, 1472, 1850, 1861, 1874, 1885, 1894, 1897, 1898, 1904, 1908, 1911, 1915, 1923, 1927, 1932, 1947, 1952], "timer": [3, 26, 1869], "stmt": [3, 1895], "setup": [3, 13, 21, 40, 41, 46, 807, 808, 809, 812, 1133, 1605, 1861, 1895, 1896, 1905, 1923, 1924, 1942, 1943], "global_setup": 3, "perf_count": 3, "label": [3, 6, 7, 20, 27, 1065, 1333, 1342, 1348, 1359, 1361, 1385, 1417, 1428, 1429, 1508, 1639, 1688, 1897, 1906, 1908, 1932], "sub_label": 3, "descript": [3, 7, 12, 13, 20, 33, 40, 54, 721, 1163, 1164, 1165, 1237, 1264, 1489, 1713, 1757, 1872, 1873, 1896, 1898, 1901, 1903, 1904, 1911, 1938, 1947, 1959], "env": [3, 23, 29, 33, 38, 40, 41, 43, 54, 1022, 1660, 1661, 1897, 1907, 1911, 1923, 1946, 1956], "num_thread": [3, 1906], "languag": [3, 13, 33, 1203, 1333, 1468, 1523, 1900], "measur": [3, 29, 37, 968, 1014, 1016, 1223, 1303, 1341, 1342, 1359, 1385, 1392, 1416, 1417, 1473, 1474, 1496, 1497, 1555, 1697, 1869, 1896, 1903, 1904, 1914, 1927], "statement": [3, 29, 51, 54, 55, 60, 62, 63, 1193, 1207, 1874, 1893, 1898, 1906, 1909, 1911, 1915, 1921, 1923, 1942, 1949], "full": [3, 7, 8, 14, 20, 21, 23, 27, 29, 40, 43, 44, 46, 47, 51, 54, 55, 60, 63, 64, 65, 500, 887, 908, 917, 939, 1093, 1094, 1095, 1099, 1100, 1102, 1120, 1132, 1133, 1149, 1150, 1196, 1229, 1230, 1237, 1238, 1239, 1250, 1255, 1256, 1264, 1281, 1342, 1348, 1379, 1439, 1468, 1499, 1500, 1501, 1508, 1521, 1567, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1762, 1815, 1816, 1861, 1868, 1870, 1871, 1872, 1873, 1875, 1887, 1892, 1896, 1897, 1898, 1901, 1904, 1907, 1908, 1913, 1915, 1918, 1921, 1924, 1931, 1934, 1943, 1946, 1949, 1950, 1951, 1956], "org": [3, 4, 7, 9, 10, 14, 21, 28, 29, 41, 44, 667, 717, 718, 719, 720, 732, 733, 743, 748, 749, 750, 751, 752, 939, 1264, 1395, 1443, 1444, 1471, 1474, 1649, 1703, 1757, 1778, 1853, 1868, 1874, 1893, 1894, 1904, 1908, 1910, 1911, 1915, 1932, 1958, 1959], "timeit": [3, 1895], "sever": [3, 14, 20, 23, 28, 29, 46, 54, 725, 726, 727, 728, 729, 730, 753, 754, 759, 760, 761, 769, 770, 939, 1011, 1069, 1167, 1192, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1353, 1354, 1355, 1356, 1357, 1358, 1373, 1374, 1393, 1394, 1413, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1478, 1479, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1499, 1500, 1501, 1502, 1503, 1504, 1519, 1520, 1542, 1545, 1546, 1548, 1549, 1550, 1605, 1614, 1615, 1617, 1618, 1650, 1662, 1718, 1719, 1759, 1846, 1870, 1892, 1893, 1895, 1896, 1903, 1904, 1906, 1911, 1914, 1918, 1923, 1943], "kei": [3, 20, 25, 31, 38, 40, 41, 46, 54, 590, 667, 722, 841, 846, 904, 1031, 1121, 1131, 1192, 1207, 1208, 1263, 1425, 1426, 1431, 1435, 1468, 1469, 1470, 1471, 1472, 1574, 1631, 1647, 1851, 1853, 1869, 1871, 1872, 1873, 1877, 1896, 1898, 1903, 1904, 1909, 1911, 1912, 1913, 1914, 1917, 1918, 1921, 1923, 1924, 1929, 1932, 1934, 1936, 1938, 1947, 1949, 1953, 1954, 1955], "awar": [3, 7, 72, 473, 699, 700, 701, 702, 703, 704, 705, 706, 707, 717, 718, 719, 720, 825, 826, 842, 849, 850, 1472, 1574, 1605, 1819, 1820, 1821, 1822, 1823, 1887, 1893, 1896, 1915, 1921, 1924, 1927, 1953], "element": [3, 20, 23, 29, 44, 51, 52, 54, 55, 61, 62, 63, 85, 107, 138, 142, 184, 204, 230, 242, 246, 274, 301, 303, 305, 307, 309, 340, 386, 388, 390, 422, 441, 458, 460, 461, 484, 486, 500, 502, 504, 507, 532, 533, 545, 547, 596, 597, 604, 668, 670, 671, 674, 675, 680, 681, 685, 686, 722, 745, 747, 757, 758, 759, 760, 761, 767, 771, 780, 861, 863, 864, 865, 868, 869, 870, 871, 872, 880, 888, 889, 891, 892, 893, 895, 896, 909, 918, 921, 928, 934, 938, 951, 953, 954, 955, 1008, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1054, 1055, 1056, 1060, 1062, 1065, 1068, 1070, 1071, 1075, 1095, 1099, 1100, 1102, 1104, 1109, 1111, 1112, 1114, 1118, 1123, 1124, 1126, 1127, 1128, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1148, 1151, 1152, 1153, 1154, 1169, 1177, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1211, 1213, 1214, 1216, 1233, 1235, 1239, 1250, 1254, 1265, 1266, 1268, 1271, 1273, 1274, 1275, 1276, 1280, 1281, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1313, 1315, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1337, 1338, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1372, 1377, 1378, 1381, 1382, 1383, 1384, 1385, 1386, 1391, 1392, 1395, 1397, 1401, 1402, 1403, 1404, 1405, 1406, 1411, 1414, 1416, 1417, 1418, 1419, 1420, 1424, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1473, 1474, 1476, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1509, 1513, 1516, 1517, 1522, 1523, 1527, 1528, 1529, 1530, 1533, 1536, 1537, 1539, 1544, 1548, 1549, 1550, 1554, 1555, 1559, 1560, 1562, 1565, 1566, 1567, 1568, 1569, 1570, 1574, 1575, 1576, 1577, 1578, 1580, 1582, 1584, 1585, 1586, 1587, 1592, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1631, 1632, 1638, 1639, 1641, 1642, 1651, 1652, 1653, 1655, 1666, 1706, 1707, 1710, 1711, 1718, 1719, 1721, 1732, 1735, 1736, 1740, 1742, 1744, 1762, 1765, 1767, 1779, 1780, 1782, 1783, 1787, 1794, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1809, 1810, 1814, 1825, 1827, 1828, 1832, 1833, 1834, 1836, 1838, 1839, 1840, 1841, 1842, 1844, 1846, 1847, 1848, 1850, 1856, 1857, 1858, 1861, 1864, 1871, 1873, 1880, 1888, 1891, 1894, 1895, 1898, 1901, 1907, 1909, 1911, 1914, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1945, 1948, 1957], "lazili": [3, 16, 25, 968, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1596, 1870, 1898, 1954], "threadpool": 3, "comparison": [3, 21, 23, 54, 1192, 1207, 1208, 1425, 1666, 1874, 1898, 1934, 1937, 1943], "appl": [3, 1884], "focu": [3, 1697, 1949], "replic": [3, 20, 28, 46, 74, 1145, 1202, 1353, 1354, 1355, 1362, 1372, 1401, 1402, 1403, 1449, 1450, 1451, 1476, 1562, 1589, 1916], "particularli": [3, 20, 21, 42, 1361, 1362, 1432, 1870, 1896, 1944, 1954], "variat": [3, 29, 1873, 1898, 1914, 1919, 1956], "confound": 3, "quantifi": [3, 1474], "nois": [3, 1871, 1908, 1956], "median": [3, 29, 161, 1321, 1850, 1871, 1886, 1913], "robust": [3, 1264, 1885, 1904], "deviat": [3, 29, 46, 365, 1337, 1343, 1344, 1345, 1380, 1388, 1389, 1390, 1397, 1464, 1653, 1772, 1777, 1809, 1810, 1891], "merg": [3, 6, 7, 9, 20, 23, 25, 41, 1426, 1431, 1435], "repeat": [3, 29, 51, 481, 957, 1065, 1255, 1281, 1421, 1422, 1423, 1496, 1497, 1703, 1735, 1795, 1815, 1816, 1832, 1871, 1873, 1896, 1913, 1917, 1920, 1927, 1951], "autorang": 3, "exact": [3, 13, 20, 31, 42, 44, 73, 327, 728, 729, 730, 782, 861, 862, 863, 895, 896, 939, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1292, 1357, 1395, 1472, 1535, 1574, 1605, 1698, 1788, 1891, 1897, 1906, 1927, 1945, 1946, 1953, 1956, 1957], "discuss": [3, 5, 8, 9, 10, 29, 54, 1386, 1535, 1880, 1893, 1898, 1904, 1908, 1923, 1925, 1927, 1943], "docstr": [3, 13, 44, 54, 848, 849, 1192, 1425, 1868, 1896], "adapt": [3, 753, 754, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1363, 1483, 1484, 1485, 1486, 1487, 1488, 1660, 1668, 1669, 1680, 1682, 1689, 1896, 1944], "field": [3, 7, 23, 27, 31, 33, 37, 38, 54, 475, 813, 880, 1190, 1192, 1333, 1341, 1342, 1359, 1361, 1385, 1391, 1392, 1416, 1417, 1425, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1489, 1496, 1497, 1507, 1524, 1536, 1559, 1567, 1638, 1678, 1684, 1883, 1893, 1897, 1906, 1911, 1923, 1924, 1932, 1949, 1955, 1956], "displai": [3, 17, 1010, 1023, 1535, 1593, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1868, 1874, 1879, 1882, 1911, 1932, 1934, 1946, 1956], "instruct": [3, 4, 11, 13, 42, 44, 53, 1757, 1870, 1873, 1896, 1907, 1911, 1918, 1934, 1940, 1945, 1949, 1956], "count": [3, 20, 29, 37, 54, 910, 956, 1004, 1118, 1153, 1154, 1190, 1229, 1230, 1638, 1847, 1848, 1871, 1883, 1896, 1913, 1917, 1923, 1925, 1927, 1949], "wall": [3, 1950], "callgrind": 3, "analog": [3, 54, 681, 1048, 1086, 1088, 1167, 1241, 1395, 1683, 1815, 1832, 1888, 1904, 1944, 1949], "constructor": [3, 13, 20, 21, 27, 44, 46, 54, 55, 63, 811, 848, 849, 1333, 1430, 1435, 1436, 1453, 1478, 1479, 1605, 1645, 1790, 1869, 1870, 1873, 1874, 1896, 1897, 1904, 1923, 1927, 1929, 1930, 1933, 1959], "snippet": [3, 41, 1868, 1904, 1909, 1948, 1949], "loop": [3, 21, 42, 47, 51, 52, 54, 55, 60, 849, 850, 894, 1011, 1014, 1016, 1127, 1133, 1207, 1605, 1615, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1861, 1870, 1871, 1873, 1883, 1895, 1896, 1900, 1901, 1904, 1907, 1911, 1914, 1917, 1918, 1932, 1941, 1945, 1949, 1955], "callabl": [3, 5, 20, 21, 23, 27, 29, 31, 33, 38, 40, 42, 44, 46, 53, 54, 107, 386, 828, 939, 941, 1008, 1009, 1011, 1122, 1123, 1124, 1129, 1132, 1133, 1192, 1195, 1203, 1207, 1263, 1264, 1425, 1468, 1470, 1472, 1474, 1599, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1684, 1691, 1694, 1861, 1868, 1870, 1872, 1873, 1874, 1883, 1896, 1898, 1904, 1909, 1911, 1915, 1916, 1917, 1923, 1934, 1936, 1937, 1942, 1943, 1947, 1949, 1955, 1957], "present": [3, 9, 20, 23, 40, 46, 1190, 1281, 1333, 1395, 1435, 1638, 1662, 1811, 1868, 1882, 1885, 1886, 1887, 1892, 1893, 1896, 1898, 1901, 1904, 1909, 1911, 1915, 1924, 1927, 1930, 1947, 1952, 1958], "default_tim": 3, "summar": [3, 4, 41, 1762, 1873, 1888, 1927, 1949, 1956], "relu": [3, 21, 51, 52, 54, 687, 688, 692, 693, 694, 695, 696, 697, 698, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 714, 715, 716, 752, 779, 780, 801, 841, 847, 1008, 1123, 1133, 1203, 1425, 1440, 1442, 1453, 1461, 1468, 1470, 1472, 1571, 1572, 1596, 1665, 1861, 1870, 1871, 1881, 1887, 1888, 1891, 1893, 1904, 1909, 1911, 1913, 1918, 1920, 1921, 1942, 1948, 1951, 1954, 1955, 1956], "readabl": [3, 12, 20, 38, 54, 1010, 1023, 1829, 1911, 1914, 1956, 1957], "supplement": 3, "disambigu": [3, 38, 54, 1269, 1956], "ident": [3, 13, 20, 23, 29, 54, 775, 801, 895, 896, 1053, 1229, 1230, 1231, 1232, 1245, 1257, 1260, 1264, 1281, 1320, 1321, 1337, 1363, 1564, 1612, 1614, 1858, 1864, 1874, 1891, 1907, 1908, 1915, 1920, 1927, 1945, 1956], "easi": [3, 20, 25, 40, 1870, 1893, 1900, 1903, 1904, 1906, 1915, 1918, 1923, 1924, 1927, 1942, 1943, 1948, 1949, 1954], "differenti": [3, 29, 47, 52, 138, 340, 576, 789, 876, 878, 880, 882, 883, 885, 888, 889, 890, 891, 892, 893, 894, 895, 896, 936, 1011, 1126, 1127, 1128, 1132, 1206, 1238, 1239, 1250, 1281, 1347, 1348, 1368, 1526, 1560, 1605, 1617, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1850, 1869, 1880, 1898, 1900, 1901, 1911, 1914, 1923, 1933], "distinguish": [3, 1918, 1927], "princip": [3, 1238, 1703], "signal": [3, 11, 25, 31, 40, 42, 725, 726, 727, 753, 754, 769, 770, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1189, 1254, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1353, 1354, 1355, 1373, 1374, 1393, 1394, 1413, 1418, 1419, 1420, 1478, 1479, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1499, 1502, 1519, 1520, 1542, 1545, 1546, 1548, 1549, 1550, 1811, 1869, 1885, 1906, 1917, 1923], "form": [3, 7, 9, 11, 20, 23, 29, 39, 40, 41, 46, 51, 54, 747, 766, 772, 930, 1053, 1093, 1095, 1192, 1231, 1234, 1239, 1250, 1255, 1331, 1332, 1335, 1336, 1348, 1373, 1374, 1377, 1395, 1425, 1440, 1476, 1477, 1508, 1519, 1520, 1523, 1535, 1562, 1593, 1617, 1664, 1683, 1701, 1831, 1868, 1870, 1874, 1888, 1893, 1898, 1904, 1911, 1915, 1918, 1927, 1932, 1943, 1948, 1955], "treat": [3, 29, 39, 44, 49, 54, 55, 60, 61, 309, 458, 780, 895, 896, 1008, 1121, 1192, 1244, 1247, 1249, 1261, 1263, 1273, 1274, 1275, 1276, 1293, 1323, 1369, 1379, 1397, 1429, 1430, 1431, 1432, 1435, 1453, 1458, 1516, 1605, 1647, 1651, 1689, 1742, 1757, 1811, 1825, 1832, 1872, 1873, 1886, 1893, 1911, 1923, 1927, 1930, 1937, 1947, 1952, 1955], "distinct": [3, 68, 1121, 1227, 1228, 1272, 1873, 1898, 1909, 1911, 1923, 1924], "workload": [3, 8, 20, 23, 46, 1011, 1896, 1903, 1907, 1923, 1940, 1954], "good": [3, 7, 8, 13, 54, 939, 1125, 1433, 1778, 1868, 1877, 1885, 1898, 1903, 1904, 1906, 1911, 1915, 1916, 1918, 1945, 1949, 1953], "intrins": [3, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 779, 780, 1919, 1920], "contrast": [3, 29, 31, 747, 1377, 1683, 1891, 1893, 1899, 1927, 1951], "blocked_autorang": 3, "callback": [3, 21, 40, 42, 53, 54, 1605, 1883, 1898, 1903, 1917, 1923], "min_run_tim": 3, "minimum": [3, 13, 21, 31, 40, 41, 44, 683, 684, 758, 782, 807, 808, 809, 812, 813, 862, 910, 1045, 1112, 1152, 1153, 1154, 1294, 1348, 1384, 1474, 1687, 1688, 1695, 1778, 1797, 1798, 1799, 1800, 1801, 1802, 1871, 1891, 1893, 1901, 1913, 1921, 1930, 1951], "At": [3, 5, 6, 7, 14, 20, 1099, 1343, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1393, 1394, 1851, 1881, 1888, 1895, 1901, 1918, 1923, 1928, 1943, 1949, 1956], "high": [3, 4, 7, 8, 9, 10, 14, 21, 23, 29, 31, 37, 39, 41, 54, 107, 1348, 1471, 1724, 1725, 1757, 1871, 1883, 1885, 1898, 1901, 1902, 1904, 1905, 1906, 1914, 1918, 1919, 1923, 1927, 1932, 1933, 1934, 1937, 1940, 1941, 1949, 1951, 1956], "pseudo": [3, 76], "total_tim": 3, "block_siz": 3, "choic": [3, 8, 9, 23, 1207, 1255, 1426, 1435, 1720, 1895, 1911, 1921, 1927, 1944, 1956], "block": [3, 7, 8, 20, 23, 27, 40, 42, 46, 53, 54, 570, 571, 572, 918, 968, 1022, 1212, 1264, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1401, 1402, 1403, 1404, 1405, 1406, 1428, 1476, 1518, 1592, 1605, 1797, 1798, 1799, 1870, 1872, 1873, 1883, 1885, 1889, 1893, 1896, 1897, 1901, 1911, 1918, 1923, 1927, 1938, 1954, 1958], "qualiti": [3, 7, 21], "balanc": [3, 939], "compet": [3, 1906], "statist": [3, 21, 23, 29, 786, 787, 807, 808, 809, 811, 812, 977, 1014, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1042, 1043, 1269, 1343, 1344, 1345, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1464, 1883, 1893, 1900, 1914, 1916, 1918, 1921, 1946, 1956], "amort": 3, "invoc": [3, 5, 54, 828, 939, 1195, 1207, 1870, 1873, 1896, 1898, 1903, 1911, 1923, 1925, 1941, 1949, 1954], "less": [3, 6, 7, 13, 20, 21, 23, 29, 31, 42, 44, 46, 352, 667, 888, 890, 895, 896, 957, 1018, 1035, 1065, 1109, 1113, 1118, 1121, 1216, 1228, 1264, 1280, 1281, 1333, 1386, 1439, 1456, 1462, 1641, 1733, 1840, 1842, 1868, 1871, 1873, 1888, 1896, 1898, 1906, 1907, 1913, 1916, 1918, 1946], "bias": [3, 21, 721, 747, 781, 1343, 1344, 1345, 1377, 1378, 1380, 1388, 1389, 1390, 1395, 1396, 1397, 1440, 1442, 1464], "trivial": [3, 31, 33, 722, 929, 1612, 1800, 1911, 1925, 1945], "low": [3, 7, 17, 21, 29, 46, 486, 891, 1137, 1348, 1703, 1720, 1724, 1725, 1742, 1816, 1871, 1883, 1885, 1896, 1906, 1917, 1934, 1950, 1951, 1957], "digit": [3, 923, 1762, 1868, 1882, 1903, 1907], "microsecond": [3, 1896], "bia": [3, 9, 23, 55, 699, 700, 701, 702, 703, 704, 705, 706, 707, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 725, 726, 727, 728, 729, 730, 736, 738, 739, 740, 741, 743, 747, 748, 751, 752, 759, 760, 761, 768, 779, 1131, 1192, 1201, 1333, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1377, 1378, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1425, 1431, 1440, 1441, 1442, 1468, 1470, 1472, 1494, 1495, 1499, 1500, 1501, 1502, 1503, 1504, 1525, 1534, 1538, 1541, 1596, 1605, 1612, 1613, 1627, 1629, 1631, 1646, 1649, 1717, 1871, 1881, 1898, 1904, 1909, 1918, 1920, 1927, 1932, 1951], "period": [3, 9, 27, 40, 908, 917, 977, 1010, 1023, 1024, 1028, 1042, 1043, 1085, 1149, 1150, 1211, 1699, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1871, 1883, 1906], "until": [3, 5, 7, 20, 21, 23, 27, 31, 40, 46, 53, 54, 473, 968, 969, 971, 1002, 1118, 1212, 1264, 1303, 1306, 1307, 1524, 1596, 1605, 1663, 1686, 1692, 1832, 1885, 1891, 1896, 1900, 1909, 1911, 1917, 1923, 1925, 1946], "overal": [3, 9, 20, 23, 40, 895, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1471, 1893, 1895, 1896, 1906, 1919, 1950], "main": [3, 7, 20, 21, 23, 24, 29, 31, 32, 33, 38, 40, 41, 42, 43, 54, 248, 483, 939, 1052, 1053, 1054, 1055, 1056, 1254, 1526, 1795, 1839, 1840, 1841, 1842, 1868, 1870, 1883, 1885, 1887, 1888, 1892, 1893, 1896, 1897, 1898, 1899, 1904, 1906, 1910, 1911, 1923, 1924, 1932, 1933, 1938, 1942, 1946, 1949, 1955], "repetit": [3, 1735, 1832], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1869], "tupl": [3, 5, 13, 20, 25, 31, 37, 38, 40, 44, 46, 54, 221, 307, 432, 434, 436, 484, 507, 524, 547, 570, 571, 572, 682, 683, 684, 722, 753, 754, 755, 756, 759, 760, 761, 766, 772, 773, 774, 780, 804, 805, 841, 848, 849, 865, 866, 873, 874, 875, 876, 877, 879, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 922, 941, 945, 956, 978, 979, 982, 993, 1011, 1017, 1044, 1045, 1063, 1066, 1068, 1082, 1084, 1085, 1087, 1088, 1090, 1091, 1092, 1094, 1095, 1097, 1098, 1100, 1102, 1105, 1115, 1119, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1137, 1153, 1155, 1192, 1198, 1203, 1207, 1208, 1213, 1222, 1227, 1228, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1244, 1248, 1250, 1251, 1253, 1255, 1258, 1261, 1279, 1281, 1283, 1289, 1291, 1293, 1294, 1297, 1299, 1320, 1323, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1372, 1373, 1374, 1393, 1394, 1401, 1402, 1403, 1404, 1405, 1406, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1431, 1435, 1446, 1447, 1448, 1449, 1450, 1451, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1484, 1485, 1487, 1488, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1519, 1520, 1535, 1548, 1549, 1550, 1560, 1562, 1593, 1594, 1595, 1600, 1601, 1602, 1605, 1617, 1628, 1641, 1647, 1651, 1652, 1656, 1660, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1703, 1704, 1713, 1722, 1724, 1726, 1736, 1740, 1741, 1787, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1806, 1809, 1810, 1814, 1815, 1816, 1829, 1830, 1831, 1832, 1833, 1838, 1845, 1846, 1847, 1848, 1856, 1857, 1861, 1862, 1864, 1866, 1870, 1871, 1874, 1885, 1888, 1893, 1896, 1898, 1899, 1904, 1909, 1911, 1914, 1915, 1918, 1923, 1927, 1932, 1934, 1937, 1949, 1955, 1957], "modulo": [3, 29, 1113, 1733], "determin": [3, 5, 8, 11, 13, 16, 17, 19, 20, 21, 23, 29, 31, 38, 40, 51, 54, 73, 74, 75, 810, 813, 888, 890, 895, 896, 908, 917, 924, 929, 1012, 1067, 1086, 1096, 1120, 1121, 1149, 1150, 1153, 1154, 1205, 1225, 1237, 1248, 1251, 1272, 1286, 1369, 1373, 1374, 1395, 1431, 1434, 1440, 1516, 1519, 1520, 1535, 1568, 1593, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1647, 1657, 1695, 1723, 1725, 1727, 1754, 1797, 1798, 1799, 1800, 1801, 1802, 1811, 1867, 1873, 1874, 1887, 1896, 1897, 1898, 1904, 1911, 1915, 1918, 1923, 1925, 1927, 1929, 1930, 1932, 1934, 1944, 1945, 1946, 1955, 1956], "itself": [3, 5, 7, 8, 23, 24, 46, 52, 54, 475, 680, 686, 866, 957, 1126, 1127, 1192, 1203, 1207, 1425, 1458, 1580, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1789, 1870, 1885, 1904, 1906, 1908, 1911, 1915, 1923, 1927, 1931, 1942, 1945, 1949, 1956], "jitter": 3, "interpret": [3, 20, 23, 27, 29, 31, 40, 42, 766, 772, 867, 894, 1021, 1086, 1087, 1088, 1093, 1095, 1096, 1097, 1098, 1118, 1142, 1154, 1192, 1197, 1203, 1207, 1244, 1264, 1365, 1524, 1535, 1536, 1593, 1754, 1760, 1868, 1872, 1873, 1885, 1895, 1896, 1911, 1927, 1929, 1931, 1943, 1949], "ideal": [3, 39, 41, 46, 1207, 1684, 1887, 1946], "analysi": [3, 21, 29, 54, 1211, 1703, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1874, 1904, 1912, 1937, 1942, 1943, 1945, 1950], "valgrind": 3, "degrad": [3, 13, 46, 1895, 1897, 1898, 1927], "amelior": 3, "suffici": [3, 13, 21, 29, 32, 40, 46, 1670, 1671, 1868, 1927, 1930, 1946], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 54, 766, 772, 923, 1145, 1350, 1351, 1352, 1446, 1447, 1448, 1449, 1450, 1451, 1477, 1480, 1481, 1482, 1535, 1593, 1689, 1695, 1749, 1871, 1897, 1915, 1916, 1923, 1946], "caller": [3, 31, 40, 54, 841, 1192, 1425, 1472, 1601, 1602, 1800, 1893, 1896, 1923, 1925], "structur": [3, 5, 9, 20, 21, 23, 30, 31, 33, 41, 44, 46, 54, 55, 56, 60, 63, 879, 1116, 1128, 1133, 1207, 1425, 1624, 1628, 1666, 1703, 1816, 1861, 1869, 1872, 1874, 1880, 1883, 1888, 1896, 1897, 1898, 1899, 1906, 1909, 1910, 1911, 1912, 1914, 1915, 1923, 1932, 1933, 1934, 1935, 1937, 1944, 1947, 1952, 1958], "restrict": [3, 8, 20, 29, 46, 51, 52, 1263, 1286, 1361, 1872, 1873, 1874, 1887, 1888, 1893, 1896, 1901, 1916, 1918, 1944], "builtin": [3, 23, 54, 55, 63, 1204, 1263, 1729, 1870, 1872, 1874, 1923, 1925, 1946, 1956], "surpris": [3, 8, 46, 1868, 1901, 1907, 1945], "serial": [3, 14, 20, 23, 25, 27, 40, 1192, 1201, 1202, 1263, 1425, 1596, 1660, 1661, 1745, 1868, 1869, 1871, 1882, 1887, 1893, 1896, 1903, 1904, 1906, 1915, 1918, 1923, 1924], "subsequ": [3, 7, 13, 14, 23, 44, 46, 54, 939, 969, 1192, 1203, 1207, 1353, 1354, 1355, 1356, 1357, 1358, 1425, 1453, 1601, 1602, 1896, 1908, 1911, 1923, 1927, 1941, 1946, 1949], "deseri": [3, 25, 1263, 1596, 1868, 1882, 1909, 1923], "globalsbridg": 3, "care": [3, 7, 13, 23, 29, 53, 54, 941, 1086, 1088, 1425, 1885, 1895, 1896, 1897, 1898, 1900, 1904, 1906, 1909, 1911, 1923, 1927, 1941, 1945, 1946, 1947], "reli": [3, 9, 13, 20, 21, 31, 33, 46, 54, 138, 880, 895, 941, 1065, 1362, 1684, 1893, 1895, 1897, 1898, 1908, 1909, 1927, 1931, 1945, 1946, 1947, 1950], "pickl": [3, 20, 21, 23, 1192, 1263, 1425, 1745, 1868, 1882, 1885, 1909, 1915, 1923, 1958], "transfer": [3, 20, 23, 46, 1881, 1885, 1896, 1902, 1904, 1915, 1923], "properli": [3, 7, 20, 21, 25, 27, 31, 40, 53, 1086, 1087, 1088, 1096, 1097, 1098, 1293, 1426, 1427, 1435, 1436, 1605, 1851, 1868, 1880, 1898, 1901, 1904, 1906, 1909, 1923, 1924, 1930], "profil": [3, 4, 37, 54, 939, 1205, 1599, 1600, 1601, 1602, 1762, 1869, 1913, 1923, 1938, 1946], "drive": [3, 9, 23, 1893, 1949], "facil": [3, 1263, 1885], "analyz": [3, 4, 17, 54, 1897, 1898, 1907, 1956], "manipul": [3, 46, 53, 1196, 1869, 1892, 1900, 1904, 1916, 1921, 1955], "1000000": [3, 1667], "mirror": [3, 127], "semant": [3, 9, 16, 23, 40, 41, 46, 54, 138, 781, 861, 862, 863, 880, 894, 921, 971, 1022, 1122, 1133, 1196, 1202, 1261, 1342, 1497, 1568, 1684, 1848, 1861, 1869, 1872, 1873, 1877, 1880, 1888, 1899, 1904, 1911, 1923, 1927], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 21, 1870], "consum": [3, 20, 25, 30, 42, 53, 422, 1065, 1885, 1896, 1906, 1911, 1912, 1932, 1949], "extrapol": 3, "sinc": [3, 7, 20, 21, 23, 28, 29, 33, 42, 46, 54, 303, 475, 521, 734, 772, 780, 795, 796, 929, 941, 1014, 1016, 1018, 1065, 1105, 1106, 1107, 1121, 1189, 1192, 1197, 1202, 1205, 1281, 1341, 1368, 1421, 1422, 1423, 1425, 1477, 1489, 1524, 1526, 1593, 1596, 1599, 1628, 1647, 1652, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1695, 1811, 1870, 1871, 1872, 1873, 1879, 1881, 1883, 1888, 1892, 1893, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1909, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1922, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1933, 1934, 1941, 1946, 1949, 1952, 1955, 1956], "properti": [3, 20, 23, 24, 25, 29, 32, 37, 40, 44, 46, 54, 779, 867, 899, 905, 995, 1081, 1082, 1084, 1086, 1087, 1088, 1096, 1097, 1098, 1192, 1337, 1425, 1458, 1580, 1596, 1606, 1607, 1608, 1638, 1660, 1664, 1869, 1873, 1877, 1883, 1893, 1896, 1898, 1901, 1914, 1917, 1923, 1927, 1929, 1930, 1933, 1935, 1943, 1944, 1945, 1957, 1959], "significant_figur": 3, "figur": [3, 7, 8, 25, 54, 1895, 1897, 1898, 1911, 1916, 1925, 1932, 1937, 1946], "intend": [3, 40, 54, 877, 886, 973, 1211, 1489, 1599, 1600, 1601, 1602, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1873, 1888, 1891, 1893, 1904, 1915], "interquartil": 3, "mitig": [3, 55], "tail": [3, 20, 38], "645": 3, "conjunct": [3, 20, 23, 27, 46, 811, 1489, 1524, 1605, 1921, 1923], "trim_sigfig": 3, "human": [3, 12, 38, 1010, 1023, 1891, 1911, 1957], "raw": [3, 54, 1118, 1250, 1896, 1915], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 14, 20, 23, 25, 28, 29, 31, 38, 46, 53, 54, 483, 667, 747, 895, 1082, 1084, 1087, 1088, 1090, 1091, 1094, 1095, 1097, 1098, 1100, 1102, 1207, 1281, 1343, 1344, 1345, 1362, 1365, 1377, 1388, 1389, 1390, 1407, 1408, 1409, 1410, 1435, 1464, 1470, 1472, 1605, 1806, 1873, 1877, 1881, 1885, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1907, 1911, 1914, 1916, 1918, 1919, 1923, 1925, 1942, 1944, 1945, 1949, 1953, 1955], "functioncount": [3, 1869], "stat": [3, 49, 813, 823, 824, 1022, 1029, 1030, 1031, 1464, 1605, 1883, 1896, 1936, 1946, 1956], "as_standard": 3, "strip": [3, 1526, 1605, 1870, 1913, 1927], "prefix": [3, 23, 25, 40, 46, 735, 744, 1192, 1425, 1605, 1868, 1879, 1893, 1911, 1915, 1936], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 14, 17, 23, 28, 29, 54, 667, 895, 1085, 1086, 1088, 1096, 1097, 1098, 1231, 1468, 1469, 1470, 1471, 1472, 1596, 1703, 1811, 1859, 1860, 1874, 1879, 1893, 1897, 1898, 1903, 1904, 1916, 1927, 1942, 1947, 1949, 1956], "locat": [3, 9, 13, 23, 29, 37, 75, 138, 142, 242, 500, 667, 921, 923, 980, 1044, 1045, 1213, 1263, 1289, 1294, 1297, 1315, 1362, 1372, 1459, 1476, 1489, 1524, 1589, 1592, 1605, 1617, 1714, 1749, 1771, 1793, 1796, 1850, 1868, 1870, 1882, 1896, 1909, 1911, 1915, 1917, 1923, 1925, 1927, 1932, 1936, 1941, 1945], "resembl": [3, 14], "23234231": 3, "first_build_dir": 3, "foo": [3, 13, 23, 37, 38, 44, 53, 54, 55, 62, 63, 811, 841, 846, 939, 1121, 1122, 1131, 1190, 1195, 1199, 1202, 1203, 1206, 1207, 1647, 1851, 1853, 1868, 1870, 1872, 1873, 1877, 1898, 1904, 1911, 1915, 1934, 1941], "9823794": 3, "bar": [3, 7, 37, 44, 54, 55, 62, 63, 841, 846, 957, 1121, 1195, 1202, 1809, 1810, 1856, 1857, 1868, 1870, 1872, 1882, 1904, 1911, 1915, 1934, 1949], "53453": 3, "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1189], "site": [3, 7], "denois": 3, "explan": [3, 9, 33, 849, 1192, 1425, 1869, 1897, 1898, 1904, 1946, 1953, 1956], "delta": [3, 29, 747, 1377, 1386, 1395, 1456, 1533, 1668, 1809, 1810, 1836, 1856, 1857, 1871, 1891], "inclus": [3, 29, 44, 76, 500, 1152, 1154, 1262, 1278, 1284, 1724, 1725, 1808, 1922, 1934], "diff": [3, 7, 1870, 1871, 1913], "One": [3, 8, 13, 23, 25, 28, 46, 49, 51, 54, 570, 918, 1122, 1133, 1183, 1477, 1561, 1612, 1615, 1684, 1689, 1697, 1724, 1725, 1846, 1861, 1870, 1872, 1873, 1887, 1888, 1894, 1895, 1896, 1898, 1903, 1916, 1925, 1932, 1942, 1943, 1944, 1945, 1954], "unit": [3, 11, 13, 29, 31, 41, 46, 54, 747, 748, 1083, 1101, 1337, 1347, 1367, 1370, 1375, 1376, 1377, 1378, 1443, 1444, 1454, 1489, 1513, 1517, 1522, 1523, 1569, 1577, 1621, 1622, 1626, 1629, 1631, 1634, 1838, 1884, 1893, 1895, 1901, 1915, 1940, 1941], "next": [3, 20, 23, 29, 40, 46, 54, 547, 747, 1196, 1329, 1378, 1396, 1442, 1605, 1640, 1885, 1892, 1893, 1895, 1896, 1898, 1899, 1904, 1906, 1916, 1917, 1923, 1924, 1927, 1930, 1932, 1943, 1944, 1946, 1949], "logic": [3, 5, 13, 20, 43, 46, 54, 911, 913, 914, 916, 1082, 1084, 1087, 1088, 1090, 1091, 1094, 1095, 1097, 1098, 1100, 1102, 1122, 1196, 1273, 1274, 1275, 1276, 1286, 1431, 1605, 1712, 1739, 1823, 1873, 1874, 1896, 1897, 1898, 1899, 1901, 1918, 1949], "question": [3, 10, 20, 54, 1649, 1869, 1893, 1938, 1945], "why": [3, 7, 20, 51, 54, 1065, 1196, 1574, 1869, 1880, 1899, 1945, 1954, 1958], "involv": [3, 5, 7, 9, 11, 20, 23, 44, 46, 49, 51, 54, 68, 1605, 1757, 1873, 1886, 1888, 1893, 1896, 1897, 1900, 1904, 1911, 1923, 1924, 1925, 1927, 1944, 1945], "look": [3, 4, 7, 8, 9, 14, 23, 29, 39, 40, 48, 51, 54, 55, 64, 65, 849, 888, 890, 1192, 1286, 1333, 1425, 1515, 1630, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1797, 1798, 1799, 1801, 1802, 1870, 1872, 1886, 1892, 1893, 1896, 1899, 1903, 1904, 1906, 1910, 1911, 1915, 1918, 1923, 1924, 1937, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1950, 1953, 1955, 1956, 1958], "autom": [3, 8, 54, 1870, 1918, 1946, 1956], "easili": [3, 7, 8, 11, 21, 23, 1122, 1432, 1524, 1562, 1684, 1742, 1851, 1898, 1899, 1901, 1904, 1909, 1914, 1922, 1923, 1925, 1932, 1955, 1956], "exclus": [3, 20, 23, 29, 31, 40, 44, 54, 722, 1154, 1605, 1724, 1725, 1728, 1893, 1934], "basi": [3, 9, 10, 29, 1264, 1689, 1896, 1903, 1918, 1923], "thought": [3, 37, 54, 1083, 1085, 1101], "path_and_function_nam": 3, "children": [3, 33, 46, 54, 778, 1192, 1425, 1885, 1904, 1915, 1925], "identifi": [3, 7, 9, 23, 31, 34, 37, 40, 41, 42, 54, 804, 1154, 1263, 1464, 1874, 1885, 1894, 1903, 1904, 1915, 1923, 1924, 1925, 1932, 1944, 1949, 1954], "hot": [3, 29, 1526, 1561, 1901, 1949], "spot": 3, "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 301, 551, 852, 1118, 1526, 1797, 1798, 1799, 1801, 1802, 1812, 1871, 1888, 1913, 1927], "index": [3, 14, 20, 21, 25, 29, 38, 44, 54, 179, 196, 269, 300, 301, 302, 303, 304, 305, 307, 309, 310, 458, 459, 499, 500, 501, 502, 503, 504, 505, 506, 682, 683, 804, 841, 864, 879, 923, 984, 987, 1044, 1045, 1085, 1125, 1126, 1127, 1131, 1133, 1134, 1163, 1164, 1165, 1166, 1190, 1208, 1213, 1221, 1239, 1257, 1271, 1279, 1281, 1285, 1289, 1292, 1293, 1294, 1297, 1315, 1321, 1324, 1325, 1333, 1348, 1361, 1368, 1369, 1426, 1427, 1432, 1435, 1436, 1474, 1476, 1515, 1516, 1561, 1623, 1625, 1632, 1633, 1638, 1651, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1698, 1699, 1714, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1783, 1794, 1795, 1797, 1798, 1799, 1801, 1802, 1811, 1825, 1846, 1849, 1850, 1853, 1861, 1869, 1870, 1871, 1873, 1880, 1885, 1886, 1887, 1888, 1893, 1896, 1897, 1899, 1902, 1908, 1913, 1925, 1927, 1930, 1931, 1932, 1933, 1934, 1945, 1951, 1956], "cpython": [3, 54, 1938, 1943], "known": [3, 7, 9, 19, 23, 27, 34, 47, 50, 52, 55, 64, 65, 1128, 1129, 1207, 1208, 1263, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1395, 1440, 1454, 1456, 1476, 1535, 1577, 1596, 1770, 1771, 1829, 1850, 1869, 1871, 1875, 1883, 1885, 1888, 1891, 1893, 1895, 1908, 1911, 1914, 1923, 1925, 1928, 1938, 1944, 1947, 1956], "quit": [3, 7, 54, 1873, 1898, 1900, 1915, 1923, 1954], "noisi": 3, "higher": [3, 7, 8, 21, 23, 44, 46, 47, 52, 55, 60, 63, 138, 880, 881, 894, 971, 1011, 1022, 1057, 1123, 1129, 1133, 1152, 1169, 1322, 1361, 1417, 1432, 1574, 1714, 1816, 1861, 1869, 1896, 1898, 1899, 1901, 1903, 1909, 1918, 1919, 1923, 1930, 1944], "filter": [3, 531, 759, 760, 761, 1189, 1211, 1353, 1354, 1355, 1356, 1357, 1358, 1499, 1500, 1501, 1502, 1503, 1504, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1811, 1873, 1915, 1956], "rather": [3, 8, 9, 13, 23, 31, 33, 42, 44, 46, 54, 55, 63, 766, 772, 904, 929, 1190, 1193, 1263, 1325, 1489, 1524, 1535, 1593, 1613, 1757, 1762, 1870, 1873, 1887, 1888, 1894, 1896, 1898, 1899, 1911, 1915, 1918, 1923, 1927, 1932, 1941, 1942, 1945, 1947, 1948, 1949], "unicod": [3, 1874], "dictionari": [3, 13, 20, 21, 29, 50, 54, 667, 779, 780, 781, 784, 802, 803, 804, 825, 826, 827, 841, 845, 851, 939, 1022, 1121, 1131, 1192, 1193, 1199, 1203, 1207, 1208, 1263, 1264, 1368, 1369, 1425, 1426, 1435, 1515, 1628, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1872, 1874, 1898, 1904, 1911, 1914, 1923, 1932, 1936, 1952, 1957, 1958], "lookup": [3, 25, 29, 1368, 1515, 1870, 1874, 1895, 1924, 1949, 1950], "map": [3, 13, 23, 29, 31, 37, 38, 40, 41, 44, 46, 51, 52, 54, 55, 63, 68, 671, 722, 779, 780, 784, 786, 801, 802, 804, 826, 827, 841, 842, 843, 844, 845, 851, 872, 920, 1122, 1133, 1145, 1154, 1199, 1202, 1263, 1264, 1356, 1357, 1358, 1364, 1365, 1366, 1370, 1372, 1421, 1422, 1423, 1426, 1435, 1510, 1511, 1512, 1517, 1612, 1628, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1714, 1716, 1847, 1848, 1861, 1874, 1887, 1889, 1893, 1897, 1898, 1899, 1905, 1910, 1915, 1918, 1921, 1923, 1924, 1925, 1929, 1934, 1945, 1949, 1955, 1957], "agnost": [3, 15, 40, 958, 959, 960, 961, 962, 963, 964, 1524, 1887], "reliabl": 3, "warrant": 3, "except": [3, 5, 7, 9, 13, 23, 24, 28, 29, 31, 32, 33, 37, 41, 46, 53, 54, 570, 574, 575, 604, 671, 680, 682, 683, 686, 747, 872, 895, 896, 926, 933, 937, 970, 980, 982, 1010, 1023, 1057, 1063, 1065, 1111, 1112, 1131, 1133, 1155, 1192, 1199, 1207, 1209, 1213, 1247, 1263, 1279, 1289, 1291, 1292, 1294, 1297, 1320, 1323, 1325, 1377, 1395, 1425, 1440, 1477, 1561, 1599, 1605, 1613, 1638, 1645, 1646, 1650, 1652, 1663, 1711, 1735, 1751, 1788, 1800, 1807, 1809, 1810, 1814, 1836, 1856, 1857, 1861, 1862, 1869, 1870, 1872, 1873, 1874, 1875, 1880, 1885, 1888, 1896, 1898, 1904, 1907, 1910, 1915, 1916, 1923, 1925, 1927, 1929, 1930, 1934, 1942, 1945, 1954, 1955, 1958], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 311, 316, 531, 601, 979, 1796, 1800, 1846, 1871, 1897, 1913, 1927, 1946, 1949], "finit": [4, 29, 895, 896, 1181, 1182, 1227, 1228, 1238, 1239, 1255, 1281, 1315, 1319, 1341, 1815, 1898, 1901, 1934], "natur": [4, 7, 8, 11, 23, 29, 46, 55, 57, 72, 895, 896, 1220, 1225, 1251, 1265, 1267, 1272, 1333, 1472, 1574, 1901, 1927, 1928], "against": [4, 5, 13, 23, 31, 40, 781, 852, 895, 896, 1093, 1094, 1095, 1099, 1100, 1102, 1134, 1183, 1192, 1207, 1208, 1425, 1431, 1665, 1868, 1873, 1915, 1937, 1953], "cprofil": 4, "mode": [4, 8, 20, 21, 23, 25, 29, 40, 42, 51, 52, 54, 67, 209, 210, 475, 733, 734, 759, 760, 761, 766, 772, 773, 774, 802, 804, 810, 813, 846, 847, 876, 878, 881, 882, 883, 888, 889, 890, 891, 895, 939, 966, 999, 1039, 1040, 1069, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1122, 1125, 1126, 1127, 1128, 1131, 1132, 1140, 1167, 1175, 1176, 1190, 1192, 1193, 1196, 1207, 1209, 1250, 1263, 1293, 1306, 1307, 1343, 1344, 1345, 1353, 1354, 1355, 1369, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1425, 1441, 1464, 1477, 1478, 1499, 1500, 1501, 1516, 1524, 1535, 1562, 1593, 1594, 1595, 1606, 1613, 1617, 1650, 1689, 1697, 1713, 1756, 1758, 1759, 1850, 1869, 1871, 1881, 1886, 1891, 1896, 1897, 1899, 1900, 1904, 1913, 1917, 1919, 1920, 1921, 1923, 1935, 1943, 1944, 1945, 1946, 1947, 1948, 1951, 1956, 1957], "correct": [4, 6, 7, 21, 23, 24, 25, 29, 40, 44, 193, 194, 197, 209, 542, 567, 590, 591, 602, 884, 896, 957, 1086, 1088, 1096, 1097, 1098, 1166, 1190, 1193, 1207, 1208, 1227, 1362, 1379, 1391, 1596, 1605, 1638, 1761, 1809, 1810, 1856, 1857, 1870, 1871, 1872, 1886, 1887, 1896, 1898, 1901, 1929, 1951, 1955], "launch": [4, 13, 20, 26, 31, 32, 33, 38, 39, 40, 43, 53, 969, 1605, 1869, 1893, 1895, 1896, 1897, 1898, 1923, 1941, 1948], "spent": [4, 23, 905, 1695, 1895, 1904, 1946, 1954, 1956], "appear": [4, 21, 23, 29, 44, 54, 841, 1011, 1065, 1106, 1107, 1133, 1263, 1297, 1299, 1601, 1606, 1735, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1861, 1870, 1873, 1886, 1887, 1898, 1899, 1904, 1911, 1915, 1946], "extrem": [4, 1605, 1893, 1911, 1945, 1949], "expens": [4, 20, 29, 46, 1612, 1896, 1901, 1903, 1917, 1923, 1933, 1944, 1946, 1950, 1953, 1956], "bound": [4, 14, 21, 23, 44, 46, 468, 782, 923, 934, 1079, 1080, 1192, 1338, 1339, 1340, 1418, 1419, 1420, 1425, 1443, 1524, 1697, 1728, 1749, 1873, 1874, 1891, 1893, 1915, 1918, 1928, 1944, 1945, 1956], "greater": [4, 23, 40, 55, 56, 280, 604, 667, 915, 928, 929, 934, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1136, 1148, 1246, 1310, 1341, 1473, 1524, 1535, 1561, 1574, 1593, 1613, 1646, 1850, 1871, 1893, 1896, 1908, 1913, 1927, 1928], "spend": [4, 7, 1264, 1950], "sens": [4, 29, 40, 54, 1628, 1847, 1848, 1873, 1893], "respons": [4, 7, 9, 23, 25, 27, 29, 31, 37, 42, 46, 53, 969, 1413, 1542, 1605, 1800, 1893, 1896, 1898, 1899, 1904, 1923, 1945], "Of": [4, 1651, 1868, 1897, 1898], "cours": [4, 54, 1868, 1897, 1898, 1923, 1949], "realiti": 4, "complic": [4, 21, 54, 780, 1757, 1877, 1887, 1894, 1915, 1923, 1925, 1945], "depend": [4, 5, 13, 20, 23, 27, 29, 31, 40, 41, 42, 44, 46, 54, 303, 772, 865, 977, 1024, 1028, 1042, 1043, 1086, 1088, 1096, 1097, 1098, 1123, 1127, 1132, 1203, 1207, 1227, 1228, 1255, 1281, 1286, 1341, 1342, 1359, 1361, 1369, 1372, 1385, 1391, 1392, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1476, 1477, 1489, 1496, 1497, 1507, 1516, 1524, 1536, 1559, 1567, 1574, 1593, 1596, 1605, 1617, 1618, 1624, 1660, 1689, 1701, 1703, 1720, 1736, 1797, 1798, 1799, 1801, 1802, 1815, 1838, 1864, 1868, 1870, 1872, 1873, 1880, 1885, 1893, 1895, 1896, 1898, 1899, 1901, 1904, 1906, 1911, 1917, 1918, 1923, 1927, 1933, 1934, 1938, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1952, 1955, 1958], "could": [4, 5, 7, 8, 20, 23, 29, 31, 40, 46, 51, 53, 54, 570, 571, 572, 574, 575, 941, 1004, 1086, 1088, 1096, 1097, 1098, 1189, 1222, 1263, 1281, 1306, 1307, 1688, 1792, 1847, 1872, 1873, 1880, 1885, 1893, 1896, 1897, 1910, 1911, 1915, 1918, 1919, 1923, 1924, 1925, 1927, 1931, 1932, 1942, 1946, 1947, 1952, 1956], "account": [4, 38, 54, 1605, 1891, 1895, 1927, 1941], "heavili": [4, 1673, 1895, 1898, 1915], "similarli": [4, 7, 44, 53, 54, 747, 777, 781, 845, 930, 1085, 1192, 1247, 1425, 1472, 1601, 1602, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1839, 1840, 1841, 1842, 1872, 1893, 1898, 1900, 1901, 1907, 1927, 1941, 1945, 1948], "platform": [4, 8, 9, 13, 23, 32, 33, 37, 1238, 1239, 1250, 1713, 1815, 1881, 1902, 1907, 1908, 1918], "startup": 4, "slower": [4, 13, 23, 863, 889, 1105, 1106, 1107, 1221, 1228, 1543, 1612, 1898, 1908, 1914, 1928, 1945], "rerun": [5, 23, 1896], "segment": [5, 1022, 1118, 1456, 1896, 1915, 1946, 1952, 1958], "persist": [5, 18, 25, 46, 747, 802, 803, 804, 1192, 1377, 1395, 1425, 1440, 1904, 1909, 1910, 1941, 1945, 1950], "rng": [5, 20, 997, 1036, 1750, 1896, 1908, 1922], "advanc": [5, 14, 20, 21, 31, 1468, 1470, 1472, 1651, 1661, 1853, 1877, 1880, 1887, 1896, 1898, 1902, 1906, 1931, 1932, 1946], "juggl": 5, "dropout": [5, 54, 721, 722, 747, 1192, 1337, 1364, 1365, 1366, 1370, 1377, 1395, 1425, 1431, 1440, 1441, 1468, 1470, 1472, 1490, 1510, 1511, 1512, 1517, 1574, 1869, 1871, 1881, 1887, 1888, 1893, 1896, 1913, 1920], "moder": 5, "hit": [5, 8, 13, 1605, 1868, 1896, 1941, 1946, 1950, 1956], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1869], "omit": [5, 13, 23, 41, 1099, 1100, 1102, 1379, 1439, 1910, 1911, 1923, 1934, 1947], "exclud": [5, 9, 21, 40, 54, 945, 1154, 1369, 1516, 1564, 1665, 1757, 1839, 1840, 1841, 1842, 1893, 1902, 1915, 1924, 1943, 1946], "_infer_device_typ": 5, "remain": [5, 8, 29, 40, 54, 1299, 1368, 1369, 1515, 1516, 1596, 1605, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1714, 1736, 1883, 1885, 1892, 1900, 1904, 1943], "consequ": [5, 51, 1255, 1395, 1815, 1873, 1893, 1896, 1906, 1908], "random": [5, 29, 31, 40, 41, 47, 54, 72, 76, 142, 747, 879, 909, 997, 998, 1003, 1012, 1013, 1032, 1033, 1036, 1037, 1126, 1133, 1144, 1168, 1264, 1284, 1304, 1305, 1309, 1311, 1337, 1348, 1370, 1377, 1395, 1443, 1517, 1567, 1572, 1596, 1613, 1619, 1625, 1626, 1633, 1634, 1653, 1703, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1750, 1763, 1816, 1853, 1861, 1868, 1869, 1871, 1879, 1891, 1899, 1901, 1907, 1911, 1913, 1932, 1946, 1956], "gradient": [5, 11, 20, 21, 23, 27, 28, 29, 46, 47, 50, 138, 209, 210, 278, 323, 474, 475, 482, 500, 682, 683, 867, 876, 878, 880, 882, 883, 884, 885, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 900, 901, 910, 936, 1069, 1121, 1122, 1123, 1124, 1128, 1133, 1134, 1167, 1192, 1227, 1228, 1231, 1238, 1239, 1255, 1264, 1281, 1283, 1289, 1292, 1294, 1341, 1348, 1356, 1357, 1358, 1361, 1362, 1368, 1369, 1379, 1393, 1394, 1425, 1432, 1456, 1507, 1508, 1515, 1516, 1526, 1535, 1543, 1545, 1546, 1559, 1593, 1594, 1595, 1601, 1602, 1605, 1606, 1609, 1610, 1612, 1617, 1650, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1701, 1759, 1796, 1815, 1861, 1869, 1870, 1871, 1880, 1887, 1888, 1891, 1896, 1897, 1898, 1900, 1901, 1904, 1907, 1913, 1914, 1923, 1924, 1927, 1946, 1954], "among": [5, 20, 21, 23, 27, 29, 40, 978, 979, 982, 1154, 1362, 1653, 1873, 1906, 1945], "detect": [5, 13, 16, 17, 20, 23, 24, 31, 33, 46, 888, 889, 890, 891, 892, 893, 939, 1122, 1196, 1468, 1469, 1471, 1605, 1850, 1869, 1885, 1888, 1896, 1901, 1907, 1911, 1915, 1923, 1944, 1946, 1956], "priorit": [5, 1125, 1126, 1128, 1670, 1671, 1927], "defaultdevicetyp": 5, "anticip": [5, 1958], "belong": [5, 23, 25, 27, 29, 37, 54, 923, 971, 1685, 1868, 1896, 1914, 1949, 1955, 1957], "use_reentr": 5, "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 54, 1363, 1619, 1836, 1889, 1904, 1914, 1916, 1918, 1940, 1949, 1956], "recomput": [5, 886, 1477, 1535, 1649, 1914, 1944], "refer": [5, 13, 20, 21, 23, 24, 25, 27, 29, 32, 35, 36, 40, 41, 46, 47, 53, 67, 68, 69, 72, 74, 242, 721, 722, 743, 751, 779, 780, 781, 806, 807, 808, 811, 812, 813, 846, 860, 865, 880, 921, 1004, 1009, 1068, 1118, 1140, 1141, 1173, 1180, 1192, 1195, 1203, 1210, 1223, 1228, 1244, 1248, 1261, 1264, 1348, 1379, 1425, 1474, 1489, 1497, 1506, 1524, 1535, 1592, 1605, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1703, 1720, 1756, 1757, 1778, 1816, 1850, 1868, 1869, 1871, 1885, 1886, 1888, 1889, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1908, 1911, 1914, 1919, 1920, 1923, 1924, 1927, 1930, 1931, 1932, 1935, 1938, 1942, 1948, 1949, 1952, 1956], "potenti": [5, 8, 23, 40, 42, 46, 72, 179, 196, 1201, 1237, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1574, 1605, 1850, 1872, 1880, 1885, 1893, 1896, 1898, 1915, 1927, 1931, 1944, 1946, 1949], "silent": [5, 1012, 1013, 1032, 1033, 1166, 1207, 1425, 1609, 1610, 1800, 1896, 1907, 1911], "consider": [5, 7, 69, 871, 1189, 1369, 1605, 1873, 1895], "limit": [5, 8, 9, 20, 46, 47, 52, 69, 1035, 1122, 1205, 1310, 1348, 1368, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1574, 1605, 1628, 1762, 1869, 1873, 1877, 1885, 1887, 1888, 1893, 1896, 1897, 1904, 1907, 1908, 1909, 1915, 1918, 1921, 1923, 1924, 1927, 1934, 1944, 1945, 1946, 1949, 1953, 1956], "reentrant": [5, 1605], "stop": [5, 29, 31, 40, 41, 42, 852, 1004, 1190, 1264, 1348, 1638, 1697, 1729, 1870, 1873, 1923, 1947], "soon": [5, 40, 46, 780, 1893, 1918, 1923, 1925, 1949], "intermedi": [5, 13, 30, 44, 51, 54, 69, 920, 1116, 1122, 1129, 1281, 1369, 1468, 1470, 1472, 1516, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1870, 1873, 1896, 1898, 1899, 1900, 1907, 1937, 1944, 1945], "set_checkpoint_early_stop": 5, "entireti": 5, "graph": [5, 8, 23, 25, 29, 44, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 127, 138, 209, 210, 667, 734, 779, 780, 802, 803, 804, 810, 813, 880, 886, 894, 939, 941, 966, 1001, 1006, 1011, 1122, 1192, 1195, 1196, 1201, 1203, 1207, 1605, 1660, 1661, 1665, 1670, 1671, 1674, 1869, 1873, 1879, 1881, 1889, 1892, 1897, 1898, 1901, 1904, 1905, 1911, 1912, 1915, 1919, 1920, 1921, 1923, 1924, 1925, 1927, 1932, 1937, 1938, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1953], "no_grad": [5, 475, 848, 1069, 1123, 1127, 1132, 1167, 1192, 1368, 1425, 1431, 1472, 1606, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1891, 1893, 1904, 1935], "condit": [5, 18, 20, 44, 51, 54, 55, 62, 63, 604, 607, 611, 681, 747, 889, 895, 896, 1189, 1207, 1221, 1223, 1228, 1231, 1237, 1238, 1239, 1250, 1255, 1377, 1395, 1440, 1472, 1640, 1645, 1838, 1864, 1870, 1871, 1872, 1874, 1888, 1893, 1898, 1907, 1916, 1932, 1943, 1944, 1945, 1951], "unmet": 5, "particip": [5, 9, 20, 23, 24, 27, 40, 41, 1605, 1924, 1944], "wherea": [5, 1247, 1306, 1307, 1320, 1684, 1815, 1873, 1893, 1934, 1945], "know": [5, 7, 8, 13, 24, 30, 44, 54, 473, 884, 889, 1116, 1122, 1202, 1605, 1870, 1873, 1880, 1892, 1893, 1896, 1898, 1901, 1911, 1915, 1923, 1924, 1925, 1927, 1941, 1943, 1944, 1945, 1946, 1949], "lstm": [5, 750, 1396, 1871, 1896, 1911, 1913, 1918, 1920, 1921, 1932], "hidden": [5, 747, 1131, 1377, 1378, 1395, 1396, 1440, 1442, 1606, 1896, 1932], "correctli": [5, 20, 23, 40, 44, 46, 473, 1122, 1192, 1207, 1425, 1543, 1870, 1872, 1873, 1883, 1887, 1892, 1893, 1897, 1898, 1899, 1906, 1908, 1918, 1923], "entrant": 5, "futur": [5, 8, 9, 21, 23, 25, 31, 40, 41, 44, 51, 54, 278, 309, 500, 504, 544, 667, 674, 780, 802, 803, 804, 813, 848, 886, 929, 930, 939, 950, 951, 965, 966, 968, 969, 971, 1000, 1001, 1008, 1009, 1011, 1138, 1192, 1195, 1201, 1202, 1205, 1210, 1222, 1233, 1235, 1236, 1237, 1240, 1253, 1281, 1282, 1293, 1303, 1365, 1425, 1526, 1548, 1549, 1550, 1597, 1605, 1609, 1646, 1647, 1652, 1673, 1713, 1729, 1811, 1815, 1838, 1869, 1870, 1871, 1872, 1873, 1874, 1879, 1880, 1881, 1883, 1887, 1888, 1895, 1896, 1898, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1927, 1929, 1933, 1934, 1935, 1937, 1944, 1946, 1951, 1958], "turn": [5, 13, 20, 51, 54, 69, 667, 860, 939, 1180, 1207, 1469, 1471, 1797, 1798, 1799, 1800, 1801, 1802, 1880, 1893, 1896, 1907, 1908, 1911, 1917, 1918, 1924, 1927, 1945, 1948, 1949, 1954], "open": [5, 8, 9, 13, 20, 29, 40, 44, 47, 676, 902, 923, 1115, 1199, 1263, 1286, 1296, 1541, 1870, 1880, 1885, 1888, 1902, 1910, 1911, 1915, 1918, 1923, 1927, 1928, 1946, 1954, 1958], "ran": [5, 17, 46, 1946, 1952, 1956], "sequenti": [5, 20, 27, 46, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 780, 1133, 1192, 1201, 1371, 1425, 1464, 1475, 1614, 1628, 1698, 1861, 1870, 1885, 1888, 1896, 1904, 1911, 1914, 1916, 1918, 1937, 1946, 1954, 1956], "func": [5, 23, 28, 49, 51, 54, 55, 57, 849, 879, 881, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 1167, 1195, 1207, 1208, 1647, 1853, 1861, 1869, 1873, 1892, 1923, 1925, 1957], "compris": [5, 41, 44], "chunk": [5, 20, 23, 25, 46, 926, 982, 1127, 1362, 1605, 1803, 1870, 1871, 1886, 1913, 1914, 1916, 1923, 1927, 1931], "input_var": [5, 1362], "person": [6, 7, 9], "land": [6, 9, 10, 1953], "six": [6, 68, 1355], "commit": [6, 7, 9, 13, 47, 1868, 1869, 1907, 1908, 1953], "repositori": [6, 9, 50, 54, 1868, 1906], "submit": [6, 9, 968, 969, 971, 1303, 1896, 1908, 1953], "month": [6, 9], "qualifi": [6, 23, 28, 37, 54, 667, 1192, 1425, 1664, 1879, 1915], "pr": [6, 7, 1703, 1816, 1937], "interest": [6, 7, 9, 69, 1893, 1899, 1901, 1904, 1943, 1945, 1950, 1954], "merge_rul": 6, "vote": [6, 9], "decis": [6, 25, 31, 40, 42, 44, 54, 1207, 1880, 1892, 1944], "criteria": [6, 9, 1264], "approv": [6, 9], "Not": [6, 41, 68, 1323, 1472, 1870, 1872, 1873, 1874, 1896, 1898, 1913, 1918, 1923, 1949], "busi": [6, 9, 1950], "dai": [6, 7, 1945, 1953], "contributor": [6, 7, 8, 9], "seen": [6, 17, 29, 54, 209, 926, 939, 1293, 1356, 1357, 1358, 1456, 1548, 1549, 1550, 1697, 1870, 1880, 1893, 1896, 1911, 1927, 1949], "thumb": [6, 23], "acceler": [7, 21, 1343, 1344, 1345, 1464, 1667, 1902, 1938, 1941, 1946], "deep": [7, 9, 54, 1343, 1344, 1345, 1367, 1464, 1683, 1869, 1891, 1896, 1904, 1918, 1940, 1944, 1956], "neural": [7, 8, 14, 54, 1337, 1348, 1363, 1370, 1379, 1391, 1424, 1425, 1432, 1437, 1438, 1452, 1454, 1468, 1470, 1472, 1554, 1577, 1615, 1681, 1689, 1695, 1870, 1872, 1873, 1891, 1896, 1898, 1907, 1911, 1918, 1944], "tape": [7, 1941], "system": [7, 8, 13, 14, 16, 20, 41, 51, 54, 932, 946, 1145, 1199, 1223, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1252, 1253, 1254, 1258, 1263, 1282, 1310, 1468, 1470, 1472, 1605, 1615, 1617, 1758, 1838, 1874, 1879, 1883, 1893, 1895, 1896, 1903, 1904, 1906, 1910, 1915, 1923, 1944, 1954], "organ": [7, 1897, 1903, 1915, 1946, 1949], "govern": [7, 8, 1869, 1918], "technic": [7, 9, 40, 46, 54, 1192, 1425, 1601, 1602, 1893, 1900, 1906, 1915, 1944], "md": [7, 54, 779, 1915], "healthi": [7, 31, 40], "team": [7, 23, 47, 72, 73, 75, 1909, 1916], "commun": [7, 8, 9, 24, 25, 27, 31, 40, 42, 46, 667, 1605, 1893, 1897, 1923, 1924, 1946], "project": [7, 25, 1293, 1395, 1431, 1617, 1703, 1868, 1902, 1955], "ve": [7, 49, 50, 51, 54, 1196, 1853, 1880, 1885, 1893, 1899, 1924, 1932, 1945, 1946, 1949], "come": [7, 8, 9, 20, 28, 29, 30, 37, 40, 47, 51, 939, 1065, 1116, 1122, 1192, 1263, 1364, 1365, 1366, 1370, 1391, 1662, 1877, 1881, 1897, 1899, 1903, 1915, 1923, 1925, 1927, 1949, 1952], "peopl": [7, 1893, 1918, 1948], "scratch": [7, 1893, 1956], "itch": 7, "acquaint": 7, "tip": [7, 1896, 1946], "tracker": [7, 1264], "confirm": [7, 1868, 1870, 1898, 1911, 1923, 1925, 1952], "tend": [7, 890, 1850], "bootcamp": 7, "1hr": 7, "although": [7, 8, 29, 51, 54, 1356, 1357, 1358, 1425, 1433, 1605, 1869, 1873, 1892, 1898, 1907, 1916, 1918, 1954, 1955], "join": [7, 21, 23, 27, 40, 41, 53, 54, 1605, 1868, 1869, 1874, 1885, 1893, 1897, 1906, 1913, 1933], "u": [7, 8, 47, 52, 54, 55, 747, 888, 930, 931, 932, 1228, 1230, 1234, 1238, 1239, 1255, 1281, 1283, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1377, 1378, 1395, 1396, 1410, 1412, 1440, 1442, 1443, 1464, 1475, 1617, 1703, 1815, 1816, 1870, 1871, 1880, 1887, 1891, 1893, 1896, 1897, 1898, 1899, 1904, 1915, 1917, 1927, 1931, 1932, 1944, 1946, 1949, 1950, 1951, 1956], "dev": [7, 10, 32, 37, 1943, 1956], "happi": 7, "research": [7, 8, 9, 1605, 1868, 1893, 1901, 1909], "partner": [7, 1938], "speed": [7, 8, 13, 27, 46, 977, 1065, 1121, 1183, 1196, 1201, 1255, 1333, 1431, 1757, 1815, 1893, 1895, 1896, 1897, 1898, 1900, 1902, 1907, 1918, 1923, 1949], "reach": [7, 8, 9, 20, 21, 23, 24, 31, 40, 44, 47, 1264, 1605, 1686, 1689, 1692, 1693, 1893, 1898, 1906, 1916, 1918, 1919, 1923, 1943], "design": [7, 9, 20, 29, 37, 40, 47, 50, 51, 52, 895, 896, 1192, 1211, 1425, 1660, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1826, 1868, 1869, 1883, 1896, 1898, 1902, 1904, 1915, 1943, 1944, 1946, 1948, 1951, 1956], "comment": [7, 54, 1649, 1753, 1873, 1874, 1898, 1930, 1932, 1950], "crack": 7, "usual": [7, 13, 20, 21, 25, 40, 41, 46, 54, 73, 468, 818, 819, 820, 821, 828, 880, 888, 890, 894, 1133, 1364, 1365, 1366, 1370, 1385, 1388, 1389, 1390, 1391, 1596, 1605, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1861, 1870, 1873, 1888, 1892, 1893, 1895, 1896, 1898, 1900, 1903, 1914, 1919, 1921, 1923, 1932, 1940, 1945, 1950, 1957], "idea": [7, 47, 1065, 1333, 1605, 1896, 1903, 1911, 1924, 1946], "rfc": [7, 1893, 1918, 1924], "big": [7, 1670, 1671, 1674, 1680, 1681, 1797, 1798, 1799, 1800, 1801, 1802, 1896, 1914, 1918, 1945, 1950], "post": [7, 8, 24, 25, 27, 46, 475, 843, 844, 848, 1192, 1425, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1869, 1877, 1893, 1897, 1898, 1900, 1910, 1927, 1943, 1945, 1956], "standard": [7, 13, 17, 21, 29, 33, 34, 38, 51, 54, 340, 365, 576, 1085, 1337, 1343, 1344, 1345, 1380, 1388, 1389, 1390, 1391, 1397, 1464, 1470, 1472, 1653, 1703, 1726, 1772, 1777, 1809, 1810, 1872, 1874, 1888, 1891, 1895, 1896, 1906, 1907, 1911, 1915, 1928], "lot": [7, 13, 20, 1885, 1893, 1896, 1901, 1906, 1915, 1916, 1922, 1924, 1932, 1944, 1945, 1949, 1950, 1958], "boil": 7, "mostli": [7, 29, 1190, 1605, 1896, 1927, 1957], "evid": 7, "peer": [7, 23, 27, 40, 46, 975, 1605, 1896, 1923], "paper": [7, 9, 21, 29, 747, 1333, 1337, 1343, 1344, 1345, 1347, 1356, 1357, 1358, 1363, 1364, 1365, 1366, 1367, 1370, 1373, 1374, 1377, 1380, 1383, 1388, 1389, 1390, 1397, 1431, 1437, 1438, 1443, 1452, 1456, 1464, 1468, 1470, 1472, 1473, 1474, 1519, 1520, 1529, 1670, 1671, 1680, 1682, 1689, 1695, 1901, 1916], "framework": [7, 8, 9, 29, 37, 47, 53, 747, 973, 1301, 1377, 1605, 1612, 1683, 1762, 1869, 1905, 1916, 1918, 1924, 1925], "bit": [7, 54, 76, 318, 445, 748, 750, 752, 806, 807, 808, 809, 812, 814, 845, 912, 915, 950, 951, 1118, 1172, 1737, 1738, 1750, 1757, 1779, 1896, 1904, 1907, 1910, 1918, 1921, 1922, 1927, 1930, 1933, 1949, 1950, 1959], "accept": [7, 9, 20, 23, 25, 28, 44, 46, 47, 48, 50, 52, 138, 500, 789, 876, 877, 878, 879, 880, 885, 894, 929, 1008, 1011, 1117, 1133, 1154, 1192, 1196, 1361, 1425, 1432, 1453, 1472, 1624, 1638, 1639, 1645, 1666, 1754, 1792, 1806, 1861, 1873, 1887, 1896, 1898, 1899, 1911, 1914, 1923, 1930, 1932, 1956], "overwhelm": [7, 1923, 1956], "newli": [7, 46, 54, 1079, 1080, 1368, 1369, 1715, 1716, 1877, 1949], "publish": [7, 9, 32, 37, 40, 1264, 1869], "ground": [7, 9, 1361, 1507, 1932], "break": [7, 29, 44, 49, 54, 667, 880, 939, 941, 1192, 1237, 1425, 1742, 1762, 1869, 1874, 1879, 1897, 1914, 1927, 1935, 1941, 1943, 1944, 1947, 1949, 1950, 1952], "becom": [7, 8, 9, 20, 23, 29, 54, 278, 747, 863, 1145, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1377, 1395, 1410, 1430, 1440, 1453, 1507, 1524, 1596, 1687, 1787, 1836, 1880, 1881, 1893, 1897, 1898, 1911, 1915, 1917, 1923, 1949, 1956, 1958], "refactor": [7, 54, 1910, 1918], "coordin": [7, 23, 25, 29, 31, 570, 573, 871, 1145, 1154, 1293, 1707, 1800, 1840, 1842, 1893, 1927, 1932, 1946, 1956], "pace": 7, "branch": [7, 44, 54, 55, 58, 60, 62, 63, 1868, 1872, 1873, 1896, 1943, 1944, 1953], "fast": [7, 8, 20, 23, 895, 1367, 1388, 1389, 1390, 1456, 1472, 1574, 1695, 1701, 1720, 1742, 1757, 1869, 1895, 1896, 1898, 1902, 1914, 1923, 1927, 1930, 1931, 1938, 1945, 1948, 1950, 1958], "definit": [7, 8, 20, 23, 24, 29, 36, 54, 73, 930, 931, 932, 957, 1008, 1113, 1212, 1221, 1222, 1264, 1391, 1536, 1581, 1652, 1733, 1836, 1868, 1870, 1872, 1874, 1892, 1893, 1898, 1901, 1915, 1918, 1932, 1934, 1949], "fundament": [7, 51, 1872, 1904, 1923, 1927, 1945], "cut": [7, 1946], "guidanc": [7, 9, 14, 48, 1916, 1944], "stage": [7, 17, 21, 27, 37, 46, 53, 1869, 1880, 1888, 1916, 1925, 1956], "piec": [7, 1879, 1888, 1924, 1949, 1958], "advic": 7, "readi": [7, 13, 53, 848, 849, 908, 917, 1149, 1150, 1605, 1870, 1897, 1923, 1924, 1941], "draft": 7, "convert": [7, 20, 23, 28, 29, 30, 46, 50, 54, 68, 69, 70, 138, 567, 571, 572, 573, 574, 575, 722, 775, 776, 777, 779, 780, 781, 802, 803, 804, 825, 826, 841, 844, 845, 846, 866, 867, 925, 938, 1049, 1085, 1116, 1192, 1261, 1425, 1435, 1436, 1464, 1471, 1596, 1607, 1608, 1611, 1648, 1660, 1662, 1665, 1684, 1715, 1716, 1721, 1797, 1798, 1799, 1800, 1801, 1802, 1870, 1871, 1872, 1873, 1888, 1898, 1902, 1911, 1918, 1921, 1927, 1932, 1934, 1937, 1938, 1943, 1949, 1955, 1956], "press": [7, 54], "button": [7, 1953], "prepend": [7, 13, 20, 23, 27, 54, 217, 1057, 1192, 1286, 1425, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1832, 1871, 1894], "titl": [7, 1913, 1917], "wip": 7, "progress": [7, 23, 27, 31, 41, 43, 44, 67, 968, 1303, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1855, 1868, 1882], "ci": [7, 1869, 1953], "folk": 7, "who": [7, 8, 9, 11, 40, 55, 69, 1915, 1949], "regularli": 7, "queue": [7, 31, 42, 1885, 1932], "everyth": [7, 20, 29, 50, 55, 1870, 1885, 1915, 1944, 1946, 1949, 1950, 1956], "happen": [7, 9, 23, 25, 27, 29, 31, 33, 40, 44, 46, 51, 54, 594, 778, 801, 1122, 1464, 1605, 1612, 1686, 1692, 1693, 1699, 1815, 1869, 1883, 1885, 1893, 1896, 1897, 1898, 1899, 1900, 1905, 1906, 1910, 1911, 1918, 1923, 1931, 1941, 1949], "subsystem": [7, 11, 47, 52, 941, 1869, 1898], "patch": [7, 48, 1372, 1476, 1851, 1947], "feel": [7, 1888, 1911, 1927], "ll": [7, 51, 54, 747, 807, 808, 848, 849, 930, 1011, 1221, 1377, 1378, 1395, 1396, 1880, 1893, 1896, 1898, 1899, 1906, 1911, 1918, 1924, 1942, 1945, 1950, 1954], "round": [7, 20, 23, 55, 57, 63, 495, 652, 653, 786, 789, 807, 852, 953, 955, 1022, 1060, 1086, 1087, 1088, 1092, 1096, 1097, 1098, 1113, 1237, 1250, 1477, 1535, 1713, 1714, 1733, 1782, 1871, 1873, 1886, 1896, 1913, 1918, 1921, 1927, 1928, 1951, 1958], "trip": [7, 54, 1086, 1087, 1088, 1092, 1096, 1097, 1098], "noth": [7, 13, 31, 54, 667, 1002, 1617, 1670, 1671, 1698, 1870, 1872, 1925], "accompani": [7, 71], "solut": [7, 8, 51, 1236, 1237, 1241, 1249, 1252, 1254, 1258, 1341, 1605, 1838, 1870, 1871, 1891, 1892, 1900, 1906], "think": [7, 9, 54, 55, 1684, 1870, 1872, 1893, 1914, 1915, 1925, 1945, 1947], "confid": [7, 1932, 1947], "ahead": [7, 44, 1869, 1918, 1938, 1944, 1946], "search": [7, 11, 21, 806, 923, 1383, 1529, 1605, 1665, 1720, 1749, 1870, 1886, 1887, 1911, 1915, 1927, 1942, 1945, 1953, 1958], "repo": [7, 55, 1689, 1868, 1898, 1910], "unabl": [7, 51, 70, 1911, 1914], "similar": [7, 9, 20, 23, 29, 37, 46, 51, 53, 54, 480, 502, 699, 700, 701, 702, 703, 704, 707, 717, 718, 719, 720, 732, 733, 743, 751, 789, 864, 879, 920, 925, 938, 939, 1111, 1112, 1192, 1359, 1360, 1372, 1385, 1388, 1389, 1390, 1425, 1473, 1506, 1638, 1652, 1653, 1684, 1707, 1735, 1742, 1792, 1826, 1832, 1848, 1872, 1873, 1885, 1886, 1888, 1893, 1895, 1896, 1898, 1899, 1901, 1907, 1911, 1915, 1916, 1918, 1923, 1924, 1927, 1928, 1933, 1944, 1945, 1946, 1948, 1949, 1952, 1956, 1959], "reproduc": [7, 20, 51, 301, 309, 502, 504, 910, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1421, 1422, 1423, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1516, 1524, 1535, 1562, 1574, 1593, 1594, 1595, 1596, 1850, 1868, 1869, 1914, 1915, 1956], "problemat": [7, 20, 54, 1870, 1907, 1919], "insight": [7, 17, 67, 1958], "individu": [7, 9, 13, 20, 21, 23, 25, 27, 46, 54, 71, 230, 667, 779, 825, 826, 930, 1031, 1083, 1101, 1192, 1348, 1425, 1464, 1605, 1660, 1873, 1886, 1892, 1893, 1896, 1898, 1903, 1907, 1908, 1911, 1921, 1923, 1934, 1941, 1948, 1953, 1958], "intent": [7, 38, 40, 46, 51, 1754, 1880, 1915, 1952], "lock": [7, 20, 23, 27, 29, 1893, 1896, 1906, 1915, 1924, 1958], "strike": 7, "convers": [7, 445, 567, 570, 780, 924, 1177, 1638, 1869, 1874, 1898, 1902, 1911, 1918, 1919, 1927, 1945, 1955], "medium": [7, 46, 1757], "prioriti": [7, 9, 10, 23, 667, 841, 971, 1872, 1909], "entranc": [7, 1896], "great": [7, 1893, 1901, 1941, 1944], "deal": [7, 8, 20, 31, 42, 68, 1831, 1885, 1900, 1923, 1944, 1945, 1949, 1950], "welcom": [7, 1888, 1914, 1927], "aim": [7, 69, 1899, 1927, 1938], "rare": [7, 1892, 1911, 1944, 1947, 1957], "typo": 7, "send": [7, 20, 23, 31, 42, 1004, 1596, 1605, 1885, 1897, 1906, 1910, 1913, 1917, 1923, 1924, 1925, 1935, 1937, 1945, 1948], "forum": [7, 9, 1900, 1906], "share": [7, 10, 13, 20, 24, 27, 29, 30, 40, 41, 46, 51, 209, 299, 328, 445, 470, 507, 511, 604, 846, 866, 867, 884, 895, 896, 939, 966, 968, 1000, 1004, 1116, 1117, 1118, 1162, 1239, 1324, 1325, 1362, 1605, 1615, 1653, 1731, 1745, 1806, 1829, 1835, 1849, 1871, 1892, 1893, 1895, 1906, 1909, 1910, 1911, 1923, 1927, 1929, 1931, 1936, 1941], "resolv": [7, 8, 9, 25, 29, 46, 54, 70, 71, 1192, 1356, 1357, 1358, 1372, 1422, 1425, 1872, 1873, 1874, 1910, 1915, 1929, 1944, 1957], "challeng": [7, 23, 1924, 1946], "feedback": [7, 17, 21, 46, 47, 1605, 1869, 1927], "direct": [7, 9, 11, 23, 44, 747, 779, 1106, 1107, 1192, 1377, 1395, 1425, 1440, 1649, 1682, 1703, 1720, 1741, 1893, 1896, 1898, 1904, 1923, 1949, 1955], "yourself": [7, 49, 966, 1851, 1898, 1904, 1906, 1946, 1957], "problem": [7, 20, 23, 40, 51, 55, 1065, 1207, 1237, 1249, 1264, 1361, 1432, 1489, 1753, 1885, 1893, 1896, 1900, 1901, 1906, 1910, 1916, 1918, 1919, 1925, 1930, 1938, 1944, 1946, 1956], "area": [7, 9, 1535, 1904, 1918, 1928], "appreci": 7, "strive": 7, "respond": [7, 23], "quickli": [7, 8, 21, 40, 1948], "ey": [7, 29, 179, 196, 931, 1133, 1212, 1221, 1232, 1243, 1246, 1249, 1250, 1257, 1258, 1612, 1713, 1793, 1861, 1871, 1875, 1898, 1913], "everyon": [7, 31, 40], "touch": [7, 38, 54], "versu": [7, 1429], "write": [7, 8, 9, 15, 17, 20, 23, 25, 31, 33, 37, 38, 39, 40, 44, 46, 51, 52, 68, 70, 71, 242, 500, 684, 921, 941, 1117, 1133, 1169, 1202, 1222, 1233, 1234, 1235, 1239, 1240, 1253, 1592, 1661, 1745, 1838, 1850, 1861, 1869, 1872, 1883, 1887, 1896, 1899, 1900, 1901, 1914, 1915, 1927, 1932, 1938, 1944, 1946, 1948, 1950, 1956], "blog": [7, 8, 1877, 1897, 1898, 1918, 1927], "around": [7, 9, 11, 23, 29, 50, 51, 53, 54, 138, 611, 880, 894, 963, 966, 968, 969, 971, 1040, 1111, 1112, 1122, 1192, 1303, 1605, 1742, 1870, 1885, 1893, 1896, 1911, 1923, 1941, 1949], "internet": 7, "grow": [7, 8, 54, 1896, 1927], "market": [7, 9], "benefit": [7, 8, 23, 54, 834, 1697, 1885, 1896, 1918, 1927, 1956], "opinion": [7, 8, 1927], "isn": [7, 20, 54, 445, 1189, 1893, 1896, 1898, 1923, 1934, 1945], "categor": [7, 33, 1526, 1869, 1874, 1919, 1923, 1955], "aspect": [7, 23, 54, 1898, 1904], "seem": [7, 1911], "unusu": [7, 1945], "claim": [7, 1695, 1901], "wast": [7, 1896], "someon": [7, 9, 1190, 1887], "too": [7, 9, 13, 21, 25, 40, 51, 54, 1022, 1121, 1237, 1255, 1321, 1348, 1361, 1425, 1508, 1606, 1647, 1873, 1895, 1900, 1901, 1906, 1907, 1908, 1910, 1911, 1915, 1916, 1925, 1927, 1944, 1945, 1956, 1958], "advisori": 7, "fashion": [7, 20, 23, 42, 502, 1269, 1628, 1870], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 1956], "wrote": [7, 8], "implicitli": [7, 23, 33, 54, 1048, 1137, 1145, 1207, 1208, 1263, 1338, 1339, 1340, 1418, 1419, 1420, 1754, 1836, 1870, 1872, 1873, 1893, 1898, 1902], "lifetim": [7, 1923, 1945], "immedi": [7, 8, 9, 40, 41, 46, 53, 1192, 1195, 1425, 1873, 1904, 1909, 1914, 1923, 1925, 1944, 1945], "sai": [7, 44, 54, 483, 1125, 1126, 1127, 1192, 1425, 1870, 1892, 1893, 1900, 1915, 1924, 1925, 1927, 1941, 1944, 1949, 1950, 1955], "bugfix": 7, "Or": [7, 31, 54, 867, 934, 1902, 1905, 1911, 1927, 1949], "motiv": [7, 8, 54, 722, 1904, 1924, 1956], "ye": [7, 1911, 1914, 1927], "knuth": 7, "bewar": 7, "mere": 7, "proven": [7, 1363, 1605], "ok": [7, 33, 38, 50, 939, 1197, 1925], "sometim": [7, 54, 891, 1022, 1207, 1372, 1476, 1502, 1503, 1504, 1617, 1869, 1873, 1885, 1893, 1896, 1899, 1900, 1904, 1906, 1915, 1930, 1933, 1944, 1945, 1950, 1957], "obvious": [7, 1945], "broken": [7, 20, 1022, 1911, 1915], "contrari": [7, 1895], "accident": 7, "put": [7, 9, 20, 23, 31, 50, 53, 54, 307, 1085, 1263, 1380, 1689, 1868, 1871, 1885, 1896, 1906, 1913, 1915, 1924, 1925, 1945, 1946, 1947], "difficulti": [7, 1891], "nonlinearli": 7, "sign": [7, 29, 329, 516, 871, 952, 1053, 1101, 1113, 1118, 1225, 1250, 1251, 1272, 1417, 1682, 1733, 1765, 1779, 1871, 1886, 1913, 1921, 1927, 1930, 1933, 1934, 1951], "split": [7, 20, 23, 54, 604, 759, 760, 761, 846, 848, 849, 926, 933, 1022, 1063, 1155, 1362, 1376, 1377, 1395, 1431, 1440, 1499, 1500, 1501, 1502, 1503, 1504, 1523, 1830, 1862, 1870, 1871, 1886, 1896, 1913, 1915, 1916, 1918, 1923, 1927, 1931, 1954, 1958], "shippabl": 7, "complet": [7, 13, 20, 23, 25, 31, 32, 38, 40, 42, 51, 53, 473, 667, 848, 941, 964, 968, 969, 971, 1041, 1121, 1122, 1195, 1203, 1205, 1210, 1222, 1250, 1303, 1306, 1307, 1312, 1489, 1605, 1614, 1647, 1713, 1757, 1869, 1872, 1873, 1874, 1879, 1885, 1892, 1893, 1896, 1899, 1902, 1908, 1915, 1916, 1923, 1924, 1940, 1947, 1949, 1953, 1954], "subtl": [7, 1388, 1389, 1390, 1898, 1945, 1946, 1956], "nuanc": [7, 1949], "extra": [7, 13, 20, 21, 23, 27, 29, 44, 46, 54, 1065, 1122, 1133, 1192, 1199, 1202, 1237, 1263, 1425, 1432, 1612, 1811, 1861, 1872, 1887, 1893, 1895, 1897, 1898, 1900, 1903, 1915, 1917, 1927, 1934, 1935, 1945, 1949, 1950], "understand": [7, 8, 9, 23, 25, 31, 32, 55, 68, 69, 1122, 1249, 1869, 1877, 1891, 1893, 1896, 1902, 1909, 1917, 1932, 1938, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1956], "hack": 7, "answer": [7, 10, 54, 811, 1342, 1630, 1945, 1946], "regress": [7, 1341, 1908, 1941, 1952], "scrutini": 7, "undertak": 7, "rest": [7, 20, 21, 41, 46, 54, 780, 801, 1118, 1257, 1258, 1830, 1887, 1904, 1908, 1915, 1916, 1918, 1923, 1927, 1943, 1947, 1949, 1950, 1954], "chanc": [7, 25, 29, 1898, 1945, 1950], "unrel": [7, 946, 1131, 1892, 1898, 1915], "aid": [7, 54, 1893, 1956], "troubleshoot": [7, 23, 1938, 1946], "mayb": [7, 1129, 1853, 1945], "bracnh": 7, "rebas": 7, "latest": [7, 23, 27, 29, 1624, 1664, 1868, 1898, 1902, 1911], "statu": [7, 9, 31, 1281, 1869, 1874, 1885, 1918], "hud": 7, "risk": [7, 8, 46, 1614, 1617], "anyth": [7, 30, 33, 46, 53, 810, 813, 1203, 1684, 1870, 1877, 1888, 1904, 1915, 1944], "configur": [7, 12, 20, 21, 23, 31, 32, 37, 40, 41, 42, 46, 775, 776, 779, 780, 784, 801, 802, 803, 804, 810, 813, 825, 826, 827, 830, 832, 835, 845, 846, 847, 848, 849, 939, 1022, 1605, 1638, 1758, 1850, 1869, 1879, 1883, 1896, 1897, 1898, 1908, 1910, 1915, 1921, 1923, 1932, 1934, 1944, 1946, 1953, 1954, 1956], "riski": 7, "had": [7, 54, 1207, 1596, 1832, 1893, 1899, 1944, 1952], "beforehand": [7, 53, 1946], "hei": 7, "my": [7, 20, 1362, 1903, 1911, 1918], "member": [7, 9, 20, 23, 31, 40, 41, 54, 1192, 1379, 1425, 1521, 1870, 1872, 1873, 1883, 1900, 1917, 1923, 1934, 1935], "sphinx": 7, "folder": [7, 9, 13, 20, 54, 1660, 1665, 1868, 1932, 1948, 1956], "tree": [7, 33, 50, 939, 1425, 1468, 1665, 1911, 1915, 1917, 1925, 1938], "master": [7, 23, 43, 779, 1122, 1468, 1868, 1923], "doxygen": 7, "special": [7, 11, 28, 33, 42, 44, 51, 54, 55, 60, 62, 63, 728, 729, 730, 810, 813, 895, 939, 1058, 1072, 1073, 1074, 1076, 1077, 1086, 1088, 1159, 1160, 1161, 1205, 1263, 1277, 1318, 1362, 1472, 1606, 1607, 1608, 1651, 1684, 1708, 1766, 1777, 1781, 1865, 1869, 1874, 1879, 1887, 1896, 1898, 1901, 1903, 1911, 1915, 1918, 1931, 1932, 1943, 1944, 1945, 1949, 1952], "server": [7, 20, 23, 41, 1196, 1896, 1915, 1918, 1923, 1940], "cppdoc": [7, 14], "cpp": [7, 13, 23, 1315, 1897, 1944], "accomplish": [7, 25, 1904, 1946], "holist": 7, "concept": [7, 51, 54, 1877, 1898, 1899, 1904, 1930, 1947], "galleri": 7, "restructur": [7, 1915], "text": [7, 20, 29, 141, 142, 161, 595, 604, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 685, 732, 733, 743, 745, 747, 751, 755, 756, 757, 759, 760, 761, 767, 771, 807, 808, 852, 868, 869, 870, 871, 872, 907, 908, 909, 912, 915, 917, 919, 928, 934, 951, 952, 954, 955, 957, 1060, 1079, 1080, 1109, 1110, 1114, 1115, 1136, 1148, 1149, 1150, 1151, 1158, 1181, 1189, 1212, 1215, 1216, 1217, 1220, 1221, 1228, 1231, 1237, 1241, 1246, 1249, 1255, 1262, 1271, 1278, 1279, 1280, 1281, 1314, 1315, 1326, 1327, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1430, 1431, 1432, 1433, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1491, 1492, 1493, 1495, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1510, 1511, 1512, 1517, 1520, 1522, 1523, 1524, 1528, 1529, 1539, 1544, 1548, 1549, 1550, 1554, 1559, 1562, 1567, 1568, 1570, 1574, 1575, 1576, 1577, 1580, 1581, 1582, 1584, 1585, 1586, 1610, 1612, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1689, 1706, 1707, 1710, 1713, 1726, 1729, 1732, 1744, 1765, 1767, 1768, 1780, 1782, 1793, 1794, 1804, 1811, 1812, 1815, 1827, 1828, 1864, 1888, 1891, 1901, 1911, 1915, 1921, 1928, 1932, 1934, 1948], "rst": 7, "rebuild": [7, 21], "entir": [7, 13, 20, 23, 31, 41, 54, 684, 895, 896, 1122, 1145, 1364, 1365, 1366, 1370, 1388, 1389, 1390, 1397, 1510, 1511, 1512, 1517, 1605, 1623, 1625, 1649, 1873, 1888, 1893, 1896, 1898, 1899, 1900, 1903, 1904, 1911, 1915, 1918, 1923, 1925, 1927, 1942, 1943, 1944, 1945, 1946, 1949, 1956, 1958], "circleci": 7, "shard": [7, 20, 25, 27, 28, 46, 1605, 1946], "worker": [7, 13, 20, 21, 23, 24, 27, 31, 32, 33, 34, 40, 42, 43, 46, 1605, 1873, 1908, 1916, 1917, 1923, 1924, 1925], "40": [7, 1145, 1264, 1346, 1388, 1612, 1613, 1636, 1637, 1646, 1649, 1826, 1943], "minut": [7, 10, 23, 1932], "netlifi": 7, "noplot": 7, "render": [7, 23, 1932, 1958], "notebook": 7, "rebuilt": [7, 21, 27], "deploi": [7, 31, 40, 1869, 1903, 1909, 1915, 1940], "action": [7, 23, 29, 31, 34, 54, 966, 1000, 1896, 1915, 1917, 1925, 1958], "document": [8, 9, 10, 16, 20, 23, 46, 47, 54, 667, 717, 718, 719, 720, 732, 733, 743, 748, 749, 750, 751, 752, 860, 861, 862, 863, 924, 968, 969, 971, 1022, 1065, 1137, 1140, 1141, 1173, 1180, 1192, 1306, 1307, 1322, 1333, 1368, 1369, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1425, 1614, 1623, 1632, 1652, 1712, 1739, 1756, 1850, 1868, 1870, 1872, 1873, 1884, 1885, 1886, 1887, 1889, 1892, 1898, 1900, 1904, 1908, 1909, 1911, 1914, 1915, 1918, 1919, 1920, 1923, 1927, 1931, 1935, 1938, 1942, 1947, 1949, 1952, 1955], "develop": [8, 9, 10, 13, 21, 23, 44, 54, 1872, 1873, 1880, 1884, 1893, 1898, 1903, 1904, 1908, 1915, 1918, 1919, 1923, 1927, 1948, 1951, 1956], "meant": [8, 24, 40, 42, 46, 1638, 1892, 1923], "rule": [8, 9, 13, 23, 29, 54, 55, 62, 63, 73, 74, 75, 138, 847, 879, 880, 923, 924, 1048, 1241, 1252, 1343, 1344, 1345, 1388, 1389, 1390, 1464, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1749, 1836, 1869, 1870, 1872, 1886, 1888, 1893, 1894, 1898, 1901, 1930, 1934, 1945], "concern": [8, 20, 46, 1885, 1896, 1911, 1954], "disagr": 8, "contribut": [8, 9, 25, 904, 1153, 1154, 1361, 1368, 1369, 1432, 1507, 1515, 1516, 1559, 1605, 1869, 1888, 1898, 1899, 1916], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": 8, "obsess": 8, "soumith": [8, 10], "goe": [8, 54, 1118, 1337, 1670, 1671, 1900, 1947, 1949], "depth": [8, 9, 69, 766, 772, 1026, 1027, 1205, 1340, 1355, 1358, 1420, 1477, 1535, 1593, 1880, 1897, 1904, 1917, 1943, 1958], "primari": [8, 9, 23, 54, 69, 1201, 1874, 1880, 1927, 1945], "goal": [8, 37, 50, 54, 1293, 1880, 1893, 1897, 1901, 1912, 1925, 1948], "secondari": 8, "abil": [8, 1745, 1880, 1903, 1911, 1915], "flexibl": [8, 21, 46, 50, 1248, 1605, 1880, 1896, 1898, 1904, 1949], "abstract": [8, 15, 20, 21, 24, 25, 29, 31, 40, 42, 897, 898, 899, 900, 901, 1619, 1873, 1897, 1918, 1923, 1941, 1949], "critic": [8, 40, 667, 1613, 1646, 1883, 1895, 1896, 1946, 1947, 1949], "concret": [8, 29, 43, 50, 54, 772, 787, 811, 828, 939, 1477, 1562, 1593, 1870, 1873, 1896, 1898, 1906, 1944, 1945, 1949], "manner": [8, 31, 500, 888, 890, 1887, 1889, 1894], "jump": [8, 547, 1930], "regim": 8, "ei": 8, "tradeoff": [8, 21, 1918, 1924, 1946, 1952], "temptat": 8, "impos": [8, 42, 52, 1753, 1885, 1892, 1930], "strict": [8, 888, 889, 890, 891, 892, 893, 1121, 1128, 1192, 1207, 1208, 1425, 1647, 1915, 1932, 1934], "upfront": [8, 1944], "simplifi": [8, 21, 53, 1199, 1415, 1613, 1684, 1880, 1893, 1901, 1904, 1914, 1924, 1944], "worth": [8, 9, 20, 21, 43, 1122, 1868, 1931, 1949, 1950], "friction": 8, "compel": 8, "narrow": [8, 1261, 1325, 1684, 1772, 1871, 1873, 1886, 1913, 1920, 1931, 1956], "subproblem": 8, "fragment": [8, 990, 1022, 1877, 1896, 1956], "ecosystem": [8, 1903, 1905], "incomprehens": 8, "seamlessli": [8, 1888], "softwar": [8, 1227, 1228, 1255, 1850, 1896, 1902, 1938], "experi": [8, 9, 11, 21, 52, 1133, 1454, 1577, 1605, 1861, 1880, 1898, 1932, 1943], "rich": [8, 1873], "denomin": [8, 674, 1343, 1344, 1345, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1464, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1717], "subset": [8, 20, 23, 27, 41, 44, 1203, 1684, 1870, 1872, 1873, 1898, 1911, 1921, 1951], "borrow": 8, "zen": 8, "implicit": [8, 74, 755, 756, 759, 760, 761, 1137, 1145, 1338, 1339, 1340, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1418, 1419, 1420, 1476, 1491, 1492, 1493, 1499, 1500, 1501, 1548, 1549, 1550, 1701, 1871, 1873, 1874, 1911, 1915, 1931, 1951], "concis": [8, 33, 1923], "interchang": [8, 29, 1681, 1835, 1872, 1902, 1912, 1938, 1947], "everydai": 8, "english": 8, "movement": [8, 1931], "worri": [8, 1923], "placement": [8, 28, 31, 846, 1596, 1918, 1923, 1946], "favor": [8, 23, 772, 773, 774, 930, 941, 1034, 1038, 1192, 1246, 1249, 1281, 1282, 1384, 1425, 1478, 1479, 1593, 1594, 1595, 1597, 1713, 1815, 1838, 1949], "practition": 8, "debugg": [8, 1197, 1901, 1946, 1956], "plug": 8, "ir": [8, 44, 54, 67, 69, 747, 1195, 1196, 1377, 1378, 1665, 1870, 1873, 1911, 1938, 1944, 1945, 1946, 1956], "classic": [8, 1893], "sort": [8, 27, 31, 54, 577, 596, 863, 864, 885, 1065, 1152, 1313, 1333, 1639, 1640, 1651, 1714, 1749, 1833, 1847, 1871, 1873, 1898, 1900, 1913, 1927, 1944, 1949, 1951], "distribut": [8, 11, 20, 21, 24, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 46, 53, 161, 246, 274, 365, 441, 468, 595, 667, 682, 683, 806, 909, 1039, 1315, 1333, 1337, 1361, 1362, 1363, 1364, 1365, 1366, 1370, 1375, 1379, 1391, 1439, 1443, 1464, 1507, 1509, 1510, 1511, 1512, 1517, 1521, 1522, 1526, 1536, 1567, 1605, 1653, 1706, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1869, 1873, 1887, 1888, 1891, 1892, 1896, 1916, 1917, 1919, 1925, 1928, 1932, 1935], "tldr": 8, "resourc": [8, 13, 20, 31, 36, 40, 54, 1873, 1885, 1906, 1927, 1946, 1953], "characterist": [8, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1816, 1899, 1904], "uniformli": [8, 29, 1724, 1725, 1934], "leak": [8, 880, 886, 1873, 1885, 1893], "smart": [8, 1898, 1915, 1923], "anywai": [8, 1893], "obviou": [8, 1900, 1925, 1945], "extens": [8, 13, 17, 23, 25, 28, 29, 1263, 1264, 1660, 1745, 1765, 1869, 1880, 1888, 1892, 1909, 1915, 1927, 1945, 1946, 1956], "unavoid": 8, "latenc": [8, 37, 1895, 1896, 1946, 1953], "caveat": [8, 46, 1596, 1645, 1880, 1885, 1896, 1904, 1909, 1942, 1952, 1956], "valuabl": 8, "certainli": [8, 1880], "heterogen": [8, 1872], "cluster": [8, 23, 25, 39, 40, 41, 46, 1333, 1932], "focus": [8, 1872, 1873, 1898, 1956], "beaten": 8, "space": [8, 9, 20, 29, 759, 760, 761, 1048, 1083, 1085, 1087, 1088, 1094, 1101, 1145, 1154, 1207, 1208, 1262, 1278, 1333, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1391, 1401, 1402, 1403, 1404, 1405, 1406, 1419, 1420, 1476, 1499, 1500, 1501, 1502, 1503, 1504, 1536, 1836, 1871, 1889, 1893, 1901, 1904, 1909, 1958], "innov": 8, "ultim": [8, 9, 13, 33, 42, 1897, 1938], "evidenc": 8, "began": 8, "bind": [8, 13, 23, 54, 1002, 1873, 1874, 1898, 1915], "monolith": 8, "deepli": 8, "integr": [8, 20, 28, 34, 50, 142, 909, 911, 912, 913, 914, 915, 916, 957, 1048, 1153, 1192, 1215, 1259, 1260, 1324, 1425, 1720, 1732, 1836, 1888, 1898, 1903, 1904, 1911, 1914, 1916, 1918, 1928, 1930, 1934, 1942], "numpi": [8, 20, 51, 435, 480, 680, 681, 686, 864, 866, 867, 884, 923, 1060, 1062, 1063, 1065, 1083, 1104, 1105, 1106, 1107, 1111, 1112, 1117, 1133, 1155, 1222, 1223, 1233, 1244, 1246, 1247, 1248, 1249, 1250, 1255, 1256, 1259, 1261, 1293, 1298, 1707, 1732, 1735, 1742, 1754, 1762, 1797, 1798, 1799, 1800, 1801, 1802, 1815, 1817, 1818, 1826, 1829, 1830, 1832, 1858, 1861, 1862, 1880, 1894, 1898, 1899, 1907, 1908, 1910, 1915, 1930, 1931, 1932, 1933, 1934, 1959], "scipi": [8, 927, 1238, 1239, 1564, 1707, 1915, 1926, 1928, 1932], "scikit": [8, 1535], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 1910], "year": [8, 1927], "rewrot": 8, "frontend": [8, 14, 50, 54, 1946], "familiar": [8, 14, 54, 966, 1000, 1021, 1870, 1893, 1899, 1915, 1918, 1924, 1925, 1946, 1955], "perhap": [8, 1899, 1949], "importantli": [8, 1949], "huge": [8, 1816, 1883], "scientif": [8, 1762], "pareto": [8, 1869], "close": [8, 14, 23, 40, 54, 55, 58, 62, 1004, 1181, 1227, 1228, 1254, 1255, 1281, 1342, 1456, 1474, 1497, 1680, 1749, 1815, 1838, 1883, 1893, 1898, 1907, 1911, 1915, 1918, 1923, 1932, 1934], "curv": [8, 1932], "torchdynamo": [8, 55, 65, 667, 939, 941, 1659, 1869, 1879, 1938, 1942, 1944, 1946, 1948, 1949], "frame": [8, 54, 939, 1189, 1811, 1852, 1900, 1932, 1938, 1943, 1944, 1946, 1947, 1956, 1958], "torch_funct": [8, 1898], "torch_dispatch": 8, "torch": [8, 9, 11, 14, 17, 18, 21, 24, 27, 31, 32, 33, 34, 37, 38, 40, 42, 43, 46, 49, 55, 56, 57, 58, 59, 60, 61, 69, 70, 72, 74, 76, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 881, 958, 959, 966, 967, 968, 969, 971, 972, 987, 989, 1000, 1069, 1167, 1190, 1191, 1192, 1206, 1303, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1596, 1605, 1606, 1607, 1608, 1614, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1638, 1650, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1720, 1759, 1790, 1869, 1870, 1871, 1872, 1886, 1887, 1892, 1893, 1894, 1895, 1897, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1910, 1916, 1918, 1919, 1920, 1923, 1924, 1925, 1931, 1941, 1942, 1943, 1944, 1945, 1948, 1949, 1952, 1955, 1956, 1958], "fx": [8, 44, 70, 667, 734, 802, 803, 804, 805, 847, 1122, 1869, 1912, 1919, 1920, 1942, 1943, 1944, 1945, 1946, 1949, 1955, 1956], "tracer": [8, 1207, 1911, 1932, 1937, 1949], "functorch": [8, 47, 52, 55, 58, 62, 63, 66, 1942], "anchor": [8, 54, 1473, 1474, 1590, 1591, 1871, 1955], "hackabl": 8, "todai": [8, 47, 52, 939, 1918, 1944], "evolv": [8, 1664, 1897], "ai": [8, 1911, 1928], "adopt": [9, 23, 707, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 732, 733, 743, 748, 749, 750, 751, 752], "hierarch": [9, 1932], "pull": [9, 10, 14, 54, 138, 880, 1911, 1915, 1945], "request": [9, 10, 11, 23, 25, 42, 676, 848, 866, 867, 1022, 1264, 1286, 1296, 1541, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1868, 1888, 1892, 1893, 1895, 1896, 1911, 1915, 1923, 1924, 1925, 1927, 1928, 1944, 1958], "overseen": 9, "catch": [9, 33, 1870, 1893, 1899, 1901, 1947], "maker": 9, "strong": 9, "toward": [9, 55, 1060, 1153, 1154, 1264, 1329, 1605, 1692, 1733, 1741, 1742, 1916], "philosophi": [9, 50, 1869], "beyond": [9, 21, 1310, 1361, 1670, 1671, 1680, 1740, 1900, 1904], "encourag": [9, 31, 1888, 1918, 1927, 1934], "propos": [9, 1667, 1687, 1688, 1880, 1901, 1914, 1924], "review": [9, 10, 21, 1915, 1948, 1949], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 54], "codebas": [9, 1898], "strictli": [9, 20, 138, 179, 196, 880, 923, 1154, 1192, 1196, 1425, 1893, 1928], "compani": 9, "bui": 9, "addition": [9, 20, 21, 23, 29, 46, 138, 500, 604, 880, 1122, 1126, 1127, 1196, 1255, 1333, 1388, 1389, 1390, 1792, 1900, 1935, 1958], "membership": [9, 31, 39, 40, 1874], "That": [9, 31, 38, 41, 48, 54, 1189, 1262, 1278, 1850, 1881, 1898, 1899, 1900, 1909, 1915, 1923, 1946], "seat": 9, "reserv": [9, 37, 1022, 1874, 1896, 1904, 1958], "emploi": [9, 1683, 1904, 1915, 1916], "directori": [9, 13, 23, 25, 38, 69, 1665, 1868, 1882, 1903, 1915, 1917, 1932, 1946, 1956], "procedur": [9, 29, 846, 1207, 1208, 1264, 1790, 1923, 1956], "disput": 9, "made": [9, 25, 27, 28, 41, 44, 54, 69, 886, 896, 1192, 1425, 1470, 1472, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1730, 1872, 1880, 1893, 1910, 1915, 1932, 1934, 1941, 1944, 1949, 1956, 1957], "public": [9, 10, 1122, 1898, 1957], "relev": [9, 24, 31, 40, 53, 667, 1255, 1397, 1874, 1892, 1893, 1915, 1918, 1947, 1948, 1949], "resolut": [9, 1437, 1438, 1489, 1524, 1565, 1566, 1836, 1874, 1915, 1959], "conclus": 9, "publicli": [9, 1957], "vision": [9, 1201, 1361, 1507, 1868, 1869, 1948], "roadmap": [9, 10], "parti": [9, 40, 1868, 1869, 1870, 1896, 1899, 1904, 1915], "triag": [9, 10], "meet": [9, 10, 39, 1221, 1896, 1946], "Their": [9, 1057, 1898, 1945], "articul": 9, "cohes": 9, "negoti": [9, 1923], "contenti": 9, "broad": [9, 1904], "stakehold": 9, "power": [9, 39, 1028, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1108, 1215, 1245, 1259, 1393, 1394, 1545, 1546, 1613, 1646, 1667, 1696, 1710, 1734, 1855, 1874, 1896, 1927], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 29, 46, 1293, 1873, 1875, 1892, 1893, 1914, 1918, 1930, 1938, 1940, 1944], "merit": 9, "demonstr": [9, 41, 54, 55, 62, 63, 1348, 1870, 1904, 1909, 1916, 1923, 1943, 1946, 1948, 1954], "expertis": 9, "continu": [9, 20, 23, 29, 43, 46, 54, 390, 595, 806, 889, 1145, 1227, 1228, 1255, 1347, 1348, 1605, 1664, 1874, 1880, 1893, 1909, 1917, 1935, 1942, 1943, 1946, 1949], "light": [9, 1932], "mainten": [9, 40, 41], "emeritu": [9, 10], "inact": [9, 1022, 1896, 1958], "contact": 9, "item": [9, 20, 25, 44, 55, 64, 65, 570, 571, 572, 576, 779, 780, 781, 801, 802, 803, 804, 1192, 1361, 1425, 1426, 1435, 1617, 1762, 1868, 1870, 1871, 1872, 1873, 1886, 1896, 1911, 1913, 1915, 1923, 1932, 1933, 1941, 1944, 1945, 1949, 1951], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 20, 29, 44, 54, 76, 390, 458, 532, 722, 844, 848, 850, 895, 908, 910, 917, 930, 931, 932, 1081, 1082, 1083, 1084, 1085, 1093, 1095, 1099, 1101, 1118, 1128, 1129, 1132, 1149, 1150, 1184, 1187, 1192, 1195, 1221, 1222, 1233, 1235, 1246, 1249, 1250, 1264, 1284, 1299, 1319, 1324, 1325, 1342, 1353, 1354, 1355, 1360, 1361, 1362, 1369, 1379, 1386, 1425, 1431, 1461, 1468, 1473, 1474, 1489, 1497, 1516, 1521, 1524, 1590, 1591, 1599, 1600, 1601, 1661, 1740, 1742, 1793, 1795, 1839, 1840, 1841, 1842, 1849, 1868, 1871, 1886, 1887, 1898, 1899, 1901, 1911, 1913, 1916, 1922, 1927, 1928, 1934, 1957, 1959], "neg": [9, 11, 13, 20, 23, 29, 42, 54, 76, 428, 430, 445, 648, 649, 685, 742, 767, 910, 915, 952, 955, 971, 987, 993, 994, 1022, 1034, 1081, 1082, 1083, 1084, 1085, 1086, 1100, 1101, 1102, 1108, 1118, 1182, 1184, 1186, 1245, 1272, 1284, 1306, 1307, 1315, 1319, 1324, 1325, 1333, 1342, 1370, 1379, 1411, 1418, 1419, 1420, 1428, 1432, 1434, 1439, 1456, 1473, 1474, 1517, 1521, 1524, 1526, 1535, 1539, 1548, 1549, 1550, 1559, 1567, 1590, 1591, 1593, 1706, 1707, 1738, 1742, 1777, 1779, 1782, 1794, 1831, 1839, 1840, 1841, 1842, 1849, 1870, 1871, 1886, 1888, 1891, 1893, 1898, 1899, 1911, 1913, 1922, 1927, 1928, 1944, 1951], "interact": [9, 14, 20, 28, 54, 849, 969, 1002, 1167, 1874, 1897, 1898, 1915, 1932, 1941, 1946, 1950, 1958], "final": [9, 23, 25, 27, 29, 31, 40, 46, 50, 51, 673, 676, 677, 747, 907, 925, 938, 1065, 1104, 1122, 1145, 1263, 1281, 1286, 1377, 1379, 1395, 1440, 1453, 1596, 1793, 1836, 1870, 1872, 1873, 1874, 1886, 1898, 1901, 1904, 1907, 1909, 1911, 1915, 1924, 1925, 1941, 1943, 1944, 1956], "declin": 9, "conflict": [9, 21, 41, 44, 1915], "lack": [9, 11, 1227, 1228, 1255], "unfit": 9, "conduct": [9, 1605, 1703, 1816, 1923], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 904, 1871, 1915], "letter": [9, 1065], "befit": 9, "candidaci": 9, "behind": [9, 1869, 1909, 1924, 1943, 1945], "75": [9, 1153, 1413, 1524, 1542, 1667, 1714, 1871, 1928], "choos": [9, 14, 44, 54, 879, 904, 991, 1237, 1250, 1255, 1341, 1891, 1892, 1895, 1915, 1919, 1932], "unforeseen": 9, "circumst": [9, 40, 939, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1574, 1896], "perman": [9, 54, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1893, 1925], "unavail": [9, 1872], "rank": [9, 20, 21, 23, 24, 25, 27, 28, 29, 31, 38, 40, 41, 43, 44, 46, 55, 63, 1237, 1238, 1239, 1246, 1281, 1417, 1464, 1605, 1617, 1703, 1816, 1871, 1897, 1906, 1911, 1916, 1923, 1924, 1944, 1956], "elect": 9, "invit": [9, 1868], "convinc": 9, "approach": [9, 21, 23, 54, 75, 927, 1133, 1757, 1790, 1861, 1870, 1885, 1888, 1896, 1898, 1901, 1918, 1923, 1946], "interview": 9, "talk": [9, 42, 1898, 1903], "gather": [9, 23, 40, 46, 500, 1826, 1850, 1871, 1898, 1900, 1903, 1913, 1915, 1951], "read": [9, 17, 20, 23, 25, 30, 31, 33, 40, 41, 44, 46, 50, 54, 435, 1024, 1048, 1116, 1117, 1118, 1199, 1263, 1697, 1869, 1886, 1887, 1893, 1894, 1896, 1897, 1899, 1903, 1907, 1915, 1918, 1923, 1941, 1943, 1946, 1948, 1949], "attend": [9, 722, 1431, 1468], "confer": [9, 1379], "pipelin": [9, 54, 1869, 1923, 1946], "world": [9, 23, 27, 31, 38, 40, 41, 46, 1464, 1605, 1893, 1915, 1918, 1943, 1944], "cover": [9, 47, 54, 55, 1039, 1065, 1418, 1548, 1549, 1550, 1873, 1875, 1887, 1893, 1898, 1901, 1903, 1904, 1923, 1943, 1949, 1950], "push": [9, 32, 1027, 1133, 1257, 1861, 1917, 1949], "codeown": 9, "notifi": [9, 24, 41, 1925], "expert": 9, "strongli": [9, 23, 31, 41, 1364, 1365, 1366, 1370, 1811, 1868], "failur": [9, 23, 29, 31, 32, 33, 37, 38, 39, 40, 43, 667, 895, 896, 939, 1122, 1207, 1208, 1310, 1663, 1873, 1879, 1885, 1916, 1923, 1925, 1934, 1946, 1949, 1956], "revert": [9, 29, 46, 1461, 1582, 1925], "substanti": [9, 21, 1896, 1941], "syntact": [9, 33, 54], "establish": [9, 23, 40, 1893], "seri": [9, 54, 1348, 1388, 1908, 1911, 1941, 1952, 1957], "lf": 9, "llc": 9, "guidelin": [9, 1628, 1906, 1915, 1918, 1919], "trademark": 9, "www": [9, 1348, 1474, 1932], "lfproject": 9, "acknowledg": [9, 23, 1869, 1925, 1927], "copyright": [9, 1956], "holder": 9, "independ": [9, 20, 23, 40, 46, 53, 141, 142, 766, 772, 888, 889, 890, 891, 892, 893, 971, 1145, 1154, 1250, 1363, 1364, 1365, 1366, 1370, 1510, 1511, 1512, 1517, 1535, 1593, 1649, 1713, 1869, 1870, 1892, 1893, 1896, 1909, 1915], "authorship": 9, "claus": [9, 1900], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 21, 29, 418, 466, 745, 1137, 1212, 1228, 1231, 1250, 1292, 1322, 1391, 1431, 1612, 1701, 1703, 1713, 1714, 1816, 1870, 1871, 1898, 1901, 1908, 1911, 1927, 1928, 1945], "partli": [9, 1873], "domain": [9, 29, 33, 671, 813, 872, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1093, 1095, 1096, 1097, 1098, 1145, 1888, 1911, 1918], "absolut": [9, 11, 13, 54, 80, 668, 681, 895, 896, 1113, 1181, 1220, 1225, 1246, 1249, 1251, 1272, 1386, 1392, 1456, 1533, 1537, 1578, 1622, 1623, 1625, 1626, 1628, 1631, 1632, 1633, 1634, 1652, 1666, 1707, 1733, 1765, 1871, 1904, 1911, 1913, 1928, 1933, 1934], "health": 9, "success": [9, 25, 29, 31, 37, 54, 1222, 1233, 1235, 1281, 1624, 1797, 1798, 1799, 1801, 1802, 1896, 1904, 1911, 1927, 1956], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 1911], "clearli": [9, 1880, 1915], "sponsorship": 9, "foundat": [9, 1912], "ptf": 9, "minor": [9, 993, 1222, 1238, 1927], "committ": 9, "prior": [9, 21, 23, 25, 31, 67, 69, 887, 1264, 1470, 1472, 1574, 1628, 1894, 1896, 1898, 1914, 1918, 1941, 1946], "facebook": 9, "infrastructur": [9, 32, 1915, 1944], "employe": 9, "expand": [9, 29, 243, 480, 865, 887, 895, 896, 922, 1244, 1245, 1293, 1431, 1475, 1568, 1846, 1868, 1871, 1879, 1886, 1887, 1894, 1896, 1899, 1911, 1913, 1915, 1916, 1931, 1951], "deliv": [9, 1917], "offici": [9, 23, 75, 1333, 1918], "showcas": [9, 1421, 1896, 1906], "whenev": [9, 867, 1612, 1613, 1883, 1885, 1921, 1924, 1925, 1945, 1949, 1957], "fix": [10, 17, 20, 23, 28, 29, 31, 40, 48, 51, 54, 70, 71, 250, 782, 788, 1122, 1205, 1237, 1368, 1369, 1443, 1515, 1516, 1535, 1605, 1664, 1870, 1871, 1883, 1891, 1892, 1896, 1897, 1900, 1906, 1910, 1911, 1913, 1914, 1941, 1954, 1956], "plu": [10, 13, 25, 888, 1118, 1238, 1927], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1264], "ezyang": [10, 1898, 1931], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1703, 1816], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": [10, 1898], "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 24, 27, 29, 46, 1671, 1672, 1674, 1680, 1684, 1914], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 1956], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 1943], "ansel": [10, 1943], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 1322, 1714, 1896], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 29], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1264], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1145], "robi": 10, "robieta": 10, "xu": [10, 46], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 23, 46, 54, 1800, 1872, 1887, 1911, 1941, 1952], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1853], "sebastian": 10, "messmer": 10, "smessmer": 10, "bowen": 10, "bao": [10, 1953], "bowenbao": 10, "aaron": 10, "bockov": 10, "abock": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1333], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 780], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 1917, 1946, 1956], "johnson": 10, "peterjc123": [10, 1910], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 29], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "hirsch": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "express": [11, 25, 44, 47, 51, 52, 54, 55, 62, 63, 307, 1190, 1193, 1649, 1811, 1874, 1881, 1888, 1893, 1898, 1944, 1946, 1956, 1957], "bj": 11, "j": [11, 23, 29, 301, 303, 309, 500, 502, 504, 679, 882, 888, 890, 947, 1065, 1081, 1082, 1089, 1095, 1099, 1100, 1134, 1189, 1192, 1227, 1228, 1239, 1255, 1264, 1271, 1279, 1281, 1286, 1364, 1365, 1366, 1370, 1425, 1428, 1510, 1511, 1512, 1517, 1707, 1714, 1794, 1811, 1815, 1858, 1872, 1891, 1893, 1898, 1901, 1909, 1932], "imaginari": [11, 299, 895, 947, 953, 1086, 1088, 1096, 1097, 1098, 1162, 1182, 1184, 1185, 1188, 1811, 1859, 1860, 1874, 1893, 1901, 1934], "satisfi": [11, 18, 21, 29, 604, 681, 747, 781, 889, 895, 896, 923, 1081, 1082, 1084, 1086, 1088, 1096, 1097, 1098, 1113, 1205, 1231, 1257, 1258, 1333, 1348, 1372, 1377, 1395, 1440, 1628, 1645, 1733, 1749, 1790, 1811, 1873, 1893, 1896, 1901, 1914, 1916, 1927, 1930, 1943], "equat": [11, 932, 1065, 1137, 1149, 1235, 1236, 1237, 1238, 1239, 1241, 1252, 1254, 1341, 1775, 1838, 1871, 1893, 1901, 1914, 1928], "frequent": [11, 25, 1333, 1869, 1896, 1906, 1907, 1909, 1927, 1938, 1948], "mathemat": [11, 54, 888, 889, 890, 891, 892, 893, 1113, 1145, 1341, 1343, 1344, 1345, 1388, 1389, 1390, 1391, 1464, 1543, 1581, 1605, 1652, 1733, 1792, 1793, 1873, 1893, 1907, 1928, 1935], "topic": [11, 1903, 1904, 1943], "tradition": 11, "torchaudio": [11, 1869], "mimick": 11, "assembli": 11, "lapack": [11, 931, 1137, 1222, 1233, 1234, 1235, 1237, 1240, 1253, 1713, 1815], "cubla": [11, 983, 1850, 1908, 1941], "spectral": [11, 1211, 1227, 1255, 1613, 1636, 1646, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1907], "fft": [11, 1869, 1896], "4621": 11, "0303j": 11, "2438": [11, 1237, 1515], "5874j": 11, "7706": 11, "1421j": 11, "2110": 11, "1918j": 11, "complex128": [11, 163, 947, 1108, 1117, 1171, 1192, 1221, 1222, 1227, 1228, 1229, 1230, 1231, 1232, 1353, 1354, 1355, 1425, 1499, 1500, 1501, 1662, 1707, 1754, 1929, 1930, 1933, 1934], "complex64": [11, 166, 947, 1082, 1084, 1085, 1090, 1091, 1117, 1171, 1223, 1246, 1249, 1353, 1354, 1355, 1499, 1500, 1501, 1662, 1707, 1754, 1929, 1930, 1933, 1934], "apart": [11, 1873, 1893], "linspac": [11, 910, 934, 1086, 1096, 1293, 1871, 1875, 1913], "logspac": [11, 1871, 1875, 1913], "arang": [11, 20, 23, 30, 500, 594, 678, 679, 680, 684, 686, 873, 874, 875, 921, 933, 937, 1048, 1063, 1081, 1085, 1093, 1099, 1101, 1105, 1106, 1107, 1108, 1115, 1116, 1155, 1212, 1213, 1217, 1220, 1244, 1247, 1248, 1261, 1325, 1446, 1447, 1448, 1449, 1450, 1477, 1478, 1479, 1561, 1652, 1653, 1702, 1710, 1714, 1729, 1736, 1741, 1762, 1795, 1803, 1814, 1830, 1831, 1833, 1834, 1836, 1862, 1871, 1880, 1888, 1909, 1913, 1928, 1932, 1933, 1941, 1948, 1951], "switch": [11, 20, 49, 53, 54, 67, 1234, 1235, 1236, 1365, 1524, 1562, 1609, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1745, 1850, 1885, 1893, 1896, 1904, 1906, 1914, 1947], "view_as_r": [11, 1811, 1871, 1913, 1931], "6125": 11, "1681": 11, "3773": 11, "3487": 11, "0861": 11, "7981": 11, "1681j": 11, "3487j": 11, "7981j": 11, "mul_": [11, 1871, 1886, 1888, 1927], "2250": [11, 1248, 1652], "7546": [11, 932], "1722": 11, "x1": [11, 44, 927, 1239, 1360, 1417, 1473, 1474, 1506, 1563, 1871, 1951], "3j": [11, 23, 685, 950, 951, 1737, 1738, 1754], "4j": [11, 23, 1765], "0000": [11, 29, 500, 852, 888, 890, 910, 930, 934, 953, 1046, 1052, 1053, 1054, 1079, 1080, 1083, 1085, 1086, 1092, 1093, 1096, 1101, 1113, 1114, 1115, 1145, 1151, 1154, 1158, 1217, 1220, 1221, 1222, 1234, 1235, 1238, 1243, 1244, 1248, 1250, 1262, 1278, 1320, 1368, 1369, 1477, 1478, 1480, 1481, 1515, 1516, 1652, 1707, 1713, 1718, 1719, 1720, 1729, 1733, 1734, 1758, 1765, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1793, 1838, 1839, 1841, 1864, 1880, 1888, 1896, 1927, 1928, 1933], "6569": [11, 1158], "5708": [11, 1049], "7854": 11, "complex_tensor": 11, "pt": [11, 21, 46, 1197, 1199, 1202, 1209, 1263, 1745, 1870, 1904, 1909, 1915, 1948], "conjug": [11, 318, 445, 679, 895, 932, 950, 951, 1172, 1221, 1222, 1228, 1231, 1234, 1241, 1255, 1260, 1264, 1612, 1701, 1737, 1811, 1815, 1858, 1901, 1914, 1933], "wirting": [11, 895, 1901], "deriv": [11, 23, 46, 138, 725, 726, 727, 728, 729, 730, 768, 787, 811, 880, 894, 895, 896, 1128, 1132, 1145, 1189, 1249, 1281, 1472, 1596, 1869, 1872, 1898, 1899, 1901, 1923, 1927, 1928], "steepest": [11, 1893], "descent": [11, 29, 1667, 1683, 1687, 1688, 1893, 1904], "box": [11, 23, 28, 41, 54, 1133, 1861, 1887, 1893, 1897, 1942, 1944, 1947, 1948], "fulli": [11, 13, 20, 23, 27, 28, 44, 50, 54, 667, 1028, 1192, 1421, 1422, 1423, 1425, 1873, 1879, 1898, 1915, 1918, 1944, 1949, 1951], "quantiz": [11, 54, 207, 314, 326, 459, 460, 461, 462, 463, 465, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 904, 1050, 1079, 1080, 1715, 1716, 1717, 1718, 1719, 1850, 1869, 1913, 1930, 1933, 1934, 1936, 1937], "parallel_info": [12, 1869, 1895], "cppextens": [13, 1869], "setuptool": 13, "bare": 13, "buildextens": [13, 1869], "ext_modul": 13, "extra_compile_arg": [13, 1910], "cmdclass": 13, "build_ext": 13, "cudaextens": [13, 1869], "cuda_extens": 13, "extension_kernel": 13, "cu": 13, "cxx": 13, "nvcc": [13, 996, 1956], "o2": 13, "compil": [13, 14, 46, 47, 54, 667, 967, 992, 996, 1008, 1009, 1122, 1190, 1192, 1193, 1196, 1197, 1203, 1204, 1205, 1207, 1208, 1209, 1425, 1869, 1870, 1872, 1873, 1874, 1875, 1879, 1892, 1895, 1897, 1903, 1910, 1911, 1923, 1935, 1940, 1941, 1942, 1943, 1944, 1945, 1948, 1950, 1951, 1952, 1953], "arch": 13, "card": [13, 1910], "visibl": [13, 23, 25, 37, 990, 1035, 1426, 1427, 1435, 1436, 1944, 1947], "ptx": 13, "road": 13, "recompil": [13, 54, 667, 939, 1205, 1879, 1902, 1943, 1944, 1949, 1952], "cc": [13, 23, 1896], "newest": [13, 50], "torch_cuda_arch_list": 13, "6": [13, 17, 20, 21, 23, 29, 38, 54, 55, 56, 60, 61, 62, 63, 64, 65, 301, 303, 305, 309, 389, 390, 458, 474, 486, 500, 504, 547, 594, 672, 673, 678, 684, 728, 729, 730, 732, 733, 745, 748, 750, 752, 888, 889, 891, 892, 893, 910, 918, 923, 929, 932, 933, 937, 957, 977, 1024, 1028, 1042, 1043, 1044, 1048, 1049, 1060, 1063, 1064, 1081, 1089, 1094, 1095, 1099, 1100, 1102, 1104, 1105, 1108, 1115, 1145, 1155, 1157, 1158, 1181, 1202, 1213, 1217, 1228, 1244, 1248, 1249, 1250, 1257, 1258, 1262, 1264, 1293, 1297, 1323, 1324, 1325, 1338, 1349, 1352, 1357, 1360, 1368, 1369, 1378, 1379, 1380, 1382, 1383, 1421, 1422, 1426, 1434, 1442, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1468, 1469, 1471, 1473, 1476, 1482, 1491, 1521, 1528, 1529, 1561, 1563, 1570, 1596, 1640, 1641, 1643, 1645, 1651, 1652, 1653, 1668, 1682, 1702, 1703, 1706, 1713, 1714, 1720, 1721, 1724, 1730, 1740, 1741, 1745, 1749, 1762, 1783, 1787, 1792, 1795, 1797, 1798, 1803, 1814, 1816, 1817, 1818, 1825, 1830, 1831, 1832, 1833, 1834, 1836, 1839, 1841, 1845, 1850, 1862, 1863, 1870, 1873, 1874, 1880, 1888, 1891, 1893, 1898, 1899, 1904, 1909, 1911, 1923, 1924, 1927, 1928, 1930, 1933, 1934, 1943, 1946, 1951, 1953, 1956, 1957], "build_my_extens": 13, "7": [13, 20, 21, 23, 29, 54, 55, 60, 221, 248, 301, 303, 305, 309, 389, 390, 458, 500, 547, 594, 604, 672, 684, 732, 733, 891, 893, 915, 918, 923, 929, 933, 937, 1048, 1060, 1062, 1063, 1066, 1081, 1104, 1105, 1108, 1111, 1115, 1145, 1155, 1169, 1213, 1217, 1227, 1232, 1234, 1235, 1238, 1239, 1243, 1244, 1248, 1255, 1323, 1324, 1325, 1331, 1332, 1335, 1336, 1338, 1349, 1368, 1413, 1421, 1422, 1446, 1447, 1448, 1449, 1450, 1473, 1476, 1491, 1562, 1630, 1635, 1645, 1652, 1673, 1720, 1724, 1730, 1740, 1741, 1742, 1749, 1762, 1765, 1767, 1778, 1779, 1787, 1795, 1797, 1798, 1803, 1815, 1817, 1818, 1825, 1830, 1831, 1834, 1836, 1845, 1858, 1862, 1870, 1874, 1880, 1887, 1888, 1894, 1896, 1898, 1907, 1909, 1911, 1913, 1918, 1927, 1930, 1931, 1932, 1933, 1934, 1948, 1953], "older": [13, 1896, 1909, 1915], "modestli": [13, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684], "imag": [13, 20, 728, 729, 730, 848, 849, 947, 1331, 1335, 1336, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1372, 1373, 1374, 1389, 1397, 1432, 1437, 1438, 1459, 1476, 1478, 1479, 1489, 1500, 1501, 1503, 1504, 1518, 1519, 1524, 1535, 1592, 1593, 1738, 1869, 1871, 1888, 1901, 1913, 1916, 1931, 1932, 1944, 1946, 1947, 1951], "11": [13, 23, 309, 500, 667, 929, 933, 1011, 1063, 1155, 1212, 1248, 1262, 1278, 1333, 1349, 1374, 1422, 1520, 1652, 1653, 1665, 1787, 1830, 1862, 1870, 1874, 1880, 1887, 1896, 1909, 1910, 1911, 1913, 1927, 1928, 1943, 1956], "pars": [13, 23, 43, 902, 1873, 1915, 1923], "window": [13, 20, 23, 54, 339, 543, 908, 917, 1149, 1150, 1189, 1211, 1338, 1339, 1340, 1373, 1374, 1393, 1394, 1418, 1419, 1420, 1421, 1422, 1423, 1491, 1519, 1520, 1548, 1549, 1550, 1718, 1719, 1811, 1869, 1871, 1883, 1896, 1944], "workaround": [13, 20, 28, 54, 1196, 1868, 1908, 1911, 1918, 1946], "pure": [13, 14, 51, 1195, 1870, 1898], "sigmoidalphablendforwardcuda": 13, "69460": 13, "facebookresearch": 13, "pytorch3d": 13, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 13, "relocat": 13, "link": [13, 14, 29, 54, 70, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1418, 1419, 1420, 1476, 1526, 1887, 1903, 1904, 1927], "symbol": [13, 19, 44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 611, 804, 941, 1206, 1260, 1395, 1440, 1664, 1838, 1858, 1869, 1873, 1912, 1944, 1945, 1946], "rdc": 13, "dc": 13, "anymor": [13, 23, 46, 209], "dlto": 13, "dlink": 13, "protent": 13, "perf": [13, 667, 1918, 1949, 1950], "lib": [13, 1910], "nvshmem": 13, "ninja": [13, 1910], "dlink_librari": 13, "dlink_lib": 13, "std": [13, 31, 38, 76, 365, 441, 1079, 1080, 1111, 1112, 1113, 1653, 1707, 1733, 1772, 1777, 1810, 1848, 1871, 1886, 1891, 1896, 1903, 1910, 1913, 1951], "17": [13, 23, 672, 1189, 1244, 1422, 1787, 1870, 1911, 1913, 1927, 1946, 1956], "mix": [13, 21, 29, 44, 46, 1011, 1605, 1869, 1893, 1895, 1918, 1927, 1943, 1944], "use_ninja": 13, "greatli": [13, 54, 1896, 1944], "fallback": [13, 23, 40, 49, 75, 1205, 1255, 1892, 1896, 1909, 1941, 1946, 1956], "distutil": 13, "max_job": 13, "extra_cflag": 13, "extra_cuda_cflag": 13, "extra_ldflag": 13, "extra_include_path": 13, "build_directori": 13, "with_cuda": [13, 1910], "is_python_modul": 13, "is_standalon": 13, "keep_intermedi": 13, "torch_extens": 13, "temporari": [13, 54, 810, 813, 1606, 1893, 1900, 1948], "torch_extensions_dir": 13, "subfold": [13, 1956], "o3": 13, "cuh": 13, "Such": [13, 20, 21, 53, 1855, 1927], "lib64": 13, "cudart": [13, 1910], "fine": [13, 23, 25, 27, 30, 845, 848, 1116, 1207, 1574, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1868, 1885, 1893, 1896, 1898, 1911, 1915, 1916, 1918, 1927, 1938, 1948, 1956], "cuda_hom": 13, "safest": 13, "pybind11": [13, 14, 1872], "union": [13, 20, 25, 28, 31, 34, 38, 41, 44, 46, 54, 1203, 1263, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1373, 1374, 1393, 1394, 1418, 1419, 1420, 1425, 1468, 1470, 1472, 1475, 1617, 1660, 1662, 1664, 1745, 1853, 1871, 1872, 1873, 1909, 1911, 1915, 1929, 1934, 1937], "linker": 13, "workspac": [13, 939], "header": [13, 38, 1910, 1934], "automat": [13, 21, 23, 40, 41, 44, 54, 74, 138, 576, 876, 878, 939, 1002, 1011, 1154, 1201, 1207, 1293, 1471, 1574, 1606, 1732, 1762, 1851, 1868, 1869, 1872, 1873, 1881, 1882, 1886, 1887, 1893, 1894, 1896, 1898, 1904, 1906, 1911, 1915, 1916, 1918, 1919, 1923, 1932, 1933, 1945, 1946, 1948, 1956], "construct": [13, 14, 20, 23, 25, 27, 28, 29, 40, 44, 46, 48, 50, 51, 54, 55, 60, 61, 64, 65, 138, 435, 779, 780, 811, 865, 866, 880, 894, 947, 1052, 1068, 1133, 1154, 1192, 1203, 1207, 1208, 1215, 1222, 1262, 1263, 1278, 1293, 1368, 1369, 1425, 1515, 1596, 1605, 1607, 1608, 1638, 1645, 1660, 1703, 1707, 1754, 1790, 1797, 1798, 1799, 1800, 1801, 1802, 1816, 1829, 1832, 1861, 1869, 1870, 1883, 1896, 1897, 1904, 1906, 1909, 1915, 1918, 1923, 1925, 1930, 1932, 1933, 1934, 1949], "plain": [13, 1342, 1426, 1435, 1612, 1799, 1898, 1927, 1945], "standalon": [13, 39, 40, 41, 804, 1203, 1207, 1870, 1950], "torch_lib_path": 13, "load_inlin": [13, 1869], "cpp_sourc": 13, "cuda_sourc": 13, "with_pytorch_error_handl": 13, "use_pch": 13, "behav": [13, 14, 23, 53, 54, 301, 309, 480, 502, 504, 828, 1132, 1207, 1421, 1422, 1423, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1872, 1873, 1880, 1893, 1899, 1904, 1908, 1915, 1923, 1927], "exactli": [13, 21, 23, 29, 42, 895, 896, 933, 978, 982, 1065, 1111, 1112, 1189, 1192, 1233, 1369, 1372, 1373, 1374, 1425, 1453, 1456, 1516, 1526, 1605, 1652, 1666, 1757, 1880, 1886, 1893, 1896, 1897, 1898, 1901, 1902, 1911, 1915, 1916, 1941, 1949], "filenam": [13, 20, 44, 54, 1191, 1199, 1202, 1868, 1871, 1882, 1893, 1915, 1929, 1932, 1948, 1958], "typic": [13, 20, 21, 23, 29, 30, 31, 33, 40, 41, 42, 46, 54, 71, 957, 966, 1108, 1116, 1192, 1212, 1215, 1263, 1359, 1385, 1425, 1596, 1605, 1670, 1671, 1757, 1797, 1798, 1799, 1801, 1802, 1868, 1869, 1870, 1873, 1879, 1893, 1895, 1896, 1907, 1908, 1909, 1911, 1914, 1916, 1918, 1923, 1931, 1940, 1942, 1944, 1945, 1954, 1956, 1958, 1959], "inlin": [13, 44, 53, 55, 57, 61, 64, 65, 1008, 1192, 1196, 1207, 1895, 1946], "concaten": [13, 20, 23, 28, 890, 926, 937, 980, 1064, 1157, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1369, 1395, 1508, 1516, 1609, 1617, 1808, 1863, 1871, 1874, 1911, 1913, 1927], "furthermor": [13, 38, 50, 1227, 1228, 1255, 1281, 1363, 1886, 1887, 1893, 1908, 1921, 1923], "cuda_runtim": 13, "se": 13, "warn": [13, 17, 21, 23, 27, 72, 73, 75, 667, 888, 894, 929, 977, 1024, 1028, 1039, 1042, 1043, 1133, 1173, 1207, 1249, 1293, 1431, 1468, 1469, 1470, 1471, 1472, 1614, 1617, 1756, 1764, 1850, 1861, 1868, 1879, 1883, 1894, 1898, 1913, 1915, 1922, 1949, 1956], "macro": [13, 1902], "pybind": 13, "_safe_foo": 13, "redirect": [13, 31, 38, 1935], "obscur": 13, "sin_add": 13, "sin": [13, 51, 52, 55, 59, 60, 62, 63, 64, 65, 519, 656, 657, 868, 939, 1008, 1123, 1125, 1126, 1127, 1129, 1132, 1150, 1243, 1293, 1707, 1770, 1776, 1871, 1886, 1893, 1913, 1927, 1928, 1932, 1942, 1946, 1948, 1951, 1954], "inline_extens": 13, "include_path": [13, 1869], "get_compiler_abi_compatibility_and_vers": [13, 1869], "abi": [13, 14], "alongsid": [13, 1192, 1425, 1898, 1949], "shell": 13, "torchvers": 13, "verify_ninja_avail": [13, 1869], "is_ninja_avail": [13, 1869], "export": [14, 17, 23, 30, 43, 55, 60, 63, 69, 667, 903, 968, 1195, 1197, 1203, 1209, 1639, 1640, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1869, 1870, 1872, 1873, 1898, 1912, 1913, 1917, 1918, 1923, 1944, 1954, 1955], "embed": [14, 54, 722, 733, 882, 1056, 1333, 1359, 1369, 1385, 1397, 1431, 1474, 1516, 1574, 1684, 1752, 1871, 1895, 1913, 1918, 1920, 1923, 1927, 1932, 1951], "modif": [14, 46, 54, 69, 209, 767, 884, 1117, 1118, 1192, 1425, 1605, 1893, 1898, 1904, 1915, 1918, 1946], "submodul": [14, 44, 46, 54, 68, 778, 784, 801, 825, 826, 827, 845, 848, 849, 1131, 1192, 1196, 1202, 1203, 1362, 1425, 1426, 1427, 1453, 1603, 1870, 1872, 1873, 1881, 1904, 1909, 1915, 1918, 1923, 1937, 1942, 1955], "preprocess": [14, 67, 483, 1192], "augment": [14, 1874, 1934], "walk": [14, 54, 1877, 1898, 1915, 1924, 1925, 1931, 1956], "interfac": [14, 21, 25, 30, 32, 37, 40, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 732, 733, 743, 748, 749, 750, 751, 752, 781, 1118, 1596, 1756, 1811, 1850, 1873, 1883, 1884, 1898, 1903, 1914, 1921, 1927, 1932, 1951], "opencv": [14, 1524, 1535], "struct": [14, 1132, 1133, 1861, 1881, 1903], "explain": [14, 23, 1684, 1757, 1868, 1873, 1892, 1896, 1899, 1906, 1927, 1946, 1956], "reshap": [14, 23, 29, 485, 486, 500, 531, 604, 679, 937, 1048, 1063, 1064, 1104, 1155, 1212, 1244, 1248, 1257, 1258, 1261, 1325, 1372, 1446, 1447, 1448, 1449, 1450, 1476, 1613, 1646, 1652, 1795, 1796, 1803, 1830, 1831, 1836, 1862, 1863, 1871, 1880, 1887, 1888, 1911, 1913, 1920, 1931, 1932, 1951], "classat_1_1_tensor": 14, "tensor_index": 14, "crucial": [14, 1877, 1948, 1949, 1950], "cpp_autograd": 14, "workflow": [14, 1868, 1898, 1918, 1919, 1935, 1938, 1944, 1945, 1950, 1952, 1953], "undesir": [14, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1574, 1898], "overview": [14, 23, 37, 1605, 1869, 1880, 1885, 1893, 1901, 1904, 1916, 1918, 1923, 1938, 1939, 1943], "cpp_frontend": 14, "library_root": 14, "libtorch": 14, "linux": [14, 23, 1868], "gcc": 14, "pre": [14, 23, 27, 46, 54, 894, 901, 1192, 1425, 1600, 1602, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1661, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1686, 1692, 1868, 1870, 1873, 1881, 1893, 1895, 1904, 1911, 1916, 1933, 1945, 1952, 1956], "cxx11": 14, "facilit": [15, 24, 29, 51, 958, 959, 960, 961, 962, 963, 964, 969, 1053, 1754, 1868, 1870, 1873, 1908], "prototyp": [17, 23, 44, 667, 888, 890, 894, 895, 896, 1201, 1472, 1869, 1879, 1880, 1883, 1887, 1888, 1904, 1909, 1921, 1923, 1927, 1930, 1935, 1936, 1937], "earli": [17, 21, 31, 53, 1364, 1365, 1366, 1370, 1869, 1918, 1919, 1936, 1937, 1945, 1949], "introduc": [17, 29, 51, 747, 1264, 1377, 1395, 1440, 1535, 1740, 1868, 1873, 1894, 1897, 1905, 1911, 1915, 1916, 1917, 1923, 1927, 1933, 1938, 1946, 1952, 1956], "race": [17, 23, 1893], "enable_cuda_sanit": 17, "torch_cuda_sanit": 17, "concurr": [17, 23, 27, 1895, 1896, 1906, 1923, 1924], "uniniti": [17, 432, 486, 1066, 1067, 1596, 1607, 1608, 1645, 1888, 1913], "overwrit": [17, 20, 23, 54, 1426, 1435, 1873, 1893, 1941], "commandlin": 17, "example_error": 17, "csan": 17, "pointer": [17, 127, 983, 1441, 1896, 1897, 1903, 1923, 1925, 1945], "139719969079296": 17, "94646435460352": 17, "_sanit": 17, "364": 17, "_handle_kernel_launch": 17, "stack_trac": [17, 54], "stacksummari": 17, "extract": [17, 44, 54, 823, 1368, 1372, 1476, 1515, 1592, 1917, 1923, 1937, 1940, 1942, 1943, 1946, 1947], "10000": [17, 21, 681, 1695, 1742, 1900, 1904, 1927, 1932, 1948], "420": 17, "_handle_memory_alloc": 17, "incorrectli": [17, 46, 969, 1110, 1947], "id": [17, 20, 23, 27, 31, 39, 40, 41, 46, 54, 761, 811, 966, 1001, 1464, 1550, 1589, 1605, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1873, 1903, 1911, 1913, 1915, 1922, 1923, 1924, 1929, 1949, 1953, 1956], "faulti": [17, 23], "schema": [17, 23, 25, 73, 1870, 1871, 1873, 1877, 1911, 1951, 1955], "current_stream": [17, 968, 1869, 1896], "wait_stream": [17, 23, 969, 971, 1896], "default_stream": [17, 23, 1869], "begin": [17, 20, 21, 23, 24, 32, 40, 46, 54, 483, 667, 747, 771, 807, 808, 852, 908, 952, 966, 1014, 1016, 1085, 1145, 1151, 1212, 1247, 1259, 1340, 1341, 1342, 1359, 1361, 1367, 1377, 1378, 1381, 1382, 1383, 1384, 1385, 1386, 1392, 1395, 1396, 1411, 1416, 1419, 1420, 1432, 1433, 1440, 1443, 1456, 1462, 1467, 1474, 1507, 1528, 1529, 1605, 1612, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1687, 1689, 1695, 1762, 1765, 1768, 1811, 1836, 1847, 1864, 1873, 1892, 1893, 1896, 1898, 1901, 1903, 1908, 1911, 1914, 1921, 1928, 1946, 1956], "suspect": [17, 1684, 1896, 1956], "cudnn": [18, 19, 747, 1201, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1377, 1395, 1440, 1441, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1574, 1757, 1869, 1871, 1896, 1907, 1908, 1950], "float16": [18, 21, 25, 46, 285, 673, 676, 747, 810, 813, 821, 837, 838, 845, 907, 919, 1117, 1174, 1192, 1286, 1296, 1353, 1354, 1355, 1356, 1357, 1358, 1377, 1378, 1395, 1396, 1412, 1425, 1440, 1535, 1574, 1670, 1671, 1742, 1853, 1892, 1904, 1918, 1920, 1927, 1929, 1930, 1933, 1934, 1959], "v100": [18, 747, 1377, 1395, 1440, 1896], "packedsequ": [18, 747, 1377, 1395, 1440, 1639, 1640, 1641, 1643], "rnn": [19, 721, 747, 748, 749, 750, 752, 845, 1377, 1378, 1395, 1396, 1442, 1606, 1615, 1638, 1875, 1900, 1904, 1920, 1932], "enforc": [19, 21, 53, 782, 877, 1192, 1395, 1425, 1440, 1873, 1904, 1931], "cuda_launch_block": [19, 1395, 1440, 1896], "colon": [19, 1395, 1440, 1923], "cublas_workspace_config": [19, 1395, 1440, 1850, 1896, 1908], "16": [19, 23, 44, 309, 604, 725, 726, 727, 728, 729, 730, 759, 1063, 1081, 1108, 1145, 1155, 1192, 1203, 1215, 1221, 1227, 1228, 1232, 1248, 1325, 1337, 1339, 1340, 1348, 1349, 1352, 1353, 1354, 1355, 1357, 1358, 1363, 1364, 1365, 1366, 1370, 1373, 1374, 1393, 1394, 1395, 1413, 1418, 1419, 1420, 1422, 1423, 1425, 1432, 1440, 1451, 1468, 1482, 1499, 1501, 1502, 1504, 1508, 1519, 1520, 1655, 1710, 1757, 1787, 1850, 1858, 1862, 1870, 1874, 1891, 1896, 1904, 1907, 1909, 1911, 1913, 1916, 1923, 1927, 1928, 1930, 1932, 1933, 1943, 1946, 1956], "4096": [19, 1395, 1440, 1850, 1896, 1911], "heart": [20, 1949], "dataload": [20, 483, 1605, 1688, 1689, 1695, 1896, 1900, 1906, 1910, 1914, 1932], "batch_siz": [20, 29, 50, 52, 879, 1123, 1131, 1133, 1431, 1638, 1640, 1641, 1643, 1861, 1871, 1899, 1900, 1908, 1911, 1932], "shuffl": [20, 1869, 1932], "batch_sampl": 20, "num_work": [20, 31, 1908, 1910], "drop_last": 20, "timeout": [20, 23, 40, 1885, 1923], "worker_init_fn": [20, 1900, 1908], "prefetch_factor": 20, "persistent_work": 20, "__getitem__": [20, 1850], "__len__": [20, 54, 1871], "protocol": [20, 25, 30, 40, 42, 867, 1116, 1118, 1661, 1745, 1898, 1910, 1911, 1923, 1957], "possibli": [20, 40, 46, 1192, 1207, 1234, 1239, 1425, 1605, 1870, 1877, 1908, 1915, 1945, 1958], "sampl": [20, 25, 29, 47, 52, 54, 76, 141, 142, 365, 441, 468, 595, 766, 909, 957, 977, 1011, 1024, 1028, 1042, 1043, 1083, 1101, 1123, 1133, 1145, 1189, 1208, 1281, 1315, 1337, 1341, 1342, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1379, 1385, 1388, 1389, 1390, 1391, 1392, 1410, 1412, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1443, 1456, 1457, 1464, 1473, 1489, 1496, 1497, 1507, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1521, 1524, 1526, 1534, 1535, 1536, 1559, 1567, 1605, 1613, 1653, 1688, 1703, 1706, 1720, 1722, 1724, 1726, 1728, 1793, 1809, 1810, 1811, 1856, 1857, 1861, 1869, 1883, 1891, 1892, 1896, 1903, 1904, 1915, 1918, 1919, 1932, 1956], "idx": [20, 54, 885, 1192, 1333, 1368, 1425, 1613, 1871, 1887], "th": [20, 142, 301, 303, 309, 747, 888, 890, 909, 929, 1052, 1057, 1166, 1189, 1213, 1231, 1239, 1245, 1281, 1315, 1364, 1365, 1366, 1370, 1377, 1385, 1395, 1440, 1510, 1511, 1512, 1517, 1714, 1811, 1898, 1910, 1928, 1930, 1958], "iterabledataset": [20, 1903], "__iter__": [20, 1874], "suitabl": [20, 29, 923, 1211, 1684, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1907, 1917, 1919, 1932, 1947], "improb": 20, "fetch": [20, 53, 54, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1662, 1923], "stream": [20, 23, 31, 38, 46, 53, 138, 473, 880, 894, 959, 960, 964, 966, 967, 968, 969, 972, 973, 974, 982, 985, 986, 1000, 1006, 1038, 1041, 1303, 1306, 1307, 1312, 1661, 1735, 1869, 1871, 1873, 1923, 1946, 1958], "databas": 20, "remot": [20, 23, 27, 31, 1605, 1916, 1923, 1924], "real": [20, 29, 54, 72, 673, 674, 675, 676, 677, 679, 685, 895, 907, 932, 947, 953, 1011, 1081, 1082, 1084, 1086, 1087, 1088, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1182, 1184, 1185, 1188, 1189, 1212, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1241, 1244, 1246, 1248, 1249, 1250, 1251, 1255, 1256, 1260, 1261, 1262, 1272, 1278, 1392, 1434, 1437, 1438, 1474, 1612, 1660, 1811, 1815, 1858, 1859, 1860, 1868, 1869, 1871, 1873, 1893, 1896, 1913, 1915, 1918, 1923, 1925, 1931, 1933, 1934, 1942, 1944, 1945, 1948, 1949, 1951, 1957], "replica": [20, 21, 23, 27, 38, 1362, 1605, 1897], "duplic": [20, 303, 307, 458, 531, 908, 917, 938, 1149, 1150, 1192, 1425, 1847, 1848, 1911, 1927], "yield": [20, 21, 44, 46, 54, 1053, 1055, 1192, 1238, 1239, 1425, 1864, 1873, 1874, 1880, 1916, 1918, 1928], "stochast": [20, 29, 1373, 1374, 1519, 1520, 1667, 1669, 1670, 1672, 1683, 1687, 1688, 1904, 1914], "decent": 20, "randomli": [20, 732, 733, 743, 751, 896, 1337, 1363, 1364, 1365, 1366, 1370, 1443, 1509, 1510, 1511, 1512, 1517, 1625, 1888, 1903, 1904], "permut": [20, 55, 63, 1065, 1238, 1239, 1258, 1281, 1283, 1728, 1869, 1871, 1887, 1913, 1920, 1931, 1933, 1951], "mini": [20, 766, 772, 1343, 1344, 1345, 1368, 1369, 1380, 1385, 1388, 1389, 1390, 1397, 1417, 1428, 1430, 1464, 1473, 1515, 1516, 1535, 1593, 1916], "neither": [20, 23, 782, 883, 886, 1048, 1108, 1431, 1472, 1652, 1836, 1898, 1907, 1923], "nor": [20, 23, 31, 46, 782, 886, 1227, 1228, 1255, 1431, 1472, 1605, 1652, 1712, 1815, 1898, 1911, 1945], "notion": [20, 895, 1343, 1344, 1345, 1388, 1389, 1390, 1464, 1949], "collat": 20, "minibatch": [20, 755, 756, 759, 760, 761, 1281, 1333, 1341, 1342, 1359, 1361, 1385, 1391, 1392, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1477, 1491, 1492, 1493, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1536, 1548, 1549, 1550, 1559, 1567, 1916], "loader": [20, 1914], "essenti": [20, 23, 28, 31, 54, 1281, 1887, 1896, 1910, 1927, 1941], "dummi": [20, 27, 1661, 1877, 1893, 1898, 1911, 1956, 1957], "infinit": [20, 1184, 1264, 1341, 1348, 1508, 1707, 1898, 1907, 1923, 1945], "drop": [20, 50, 52, 54, 1011, 1197, 1250, 1255, 1337, 1647, 1757, 1811, 1870, 1887, 1906, 1949, 1958], "roughli": [20, 1391, 1897, 1943, 1954, 1955], "dataset_it": 20, "pad": [20, 21, 699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 714, 717, 718, 722, 725, 726, 727, 728, 729, 730, 755, 756, 759, 760, 761, 766, 769, 770, 772, 939, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1189, 1338, 1339, 1340, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1368, 1369, 1372, 1401, 1402, 1403, 1404, 1405, 1406, 1418, 1419, 1420, 1421, 1422, 1423, 1428, 1431, 1446, 1447, 1448, 1449, 1450, 1451, 1471, 1472, 1476, 1480, 1481, 1482, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1515, 1516, 1518, 1524, 1535, 1548, 1549, 1550, 1551, 1552, 1553, 1592, 1593, 1639, 1641, 1642, 1644, 1718, 1719, 1811, 1869, 1871, 1888, 1900, 1911, 1913, 1918, 1932, 1944, 1951], "length": [20, 21, 23, 25, 29, 248, 301, 303, 309, 339, 420, 421, 570, 571, 572, 722, 747, 801, 880, 894, 938, 982, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1118, 1133, 1166, 1189, 1207, 1211, 1324, 1325, 1343, 1348, 1353, 1362, 1369, 1372, 1377, 1393, 1395, 1431, 1440, 1468, 1476, 1499, 1500, 1501, 1508, 1516, 1535, 1574, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1720, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1795, 1797, 1798, 1799, 1801, 1802, 1811, 1836, 1861, 1871, 1873, 1880, 1887, 1888, 1894, 1900, 1927, 1934, 1944, 1946, 1951, 1956], "certain": [20, 21, 23, 37, 38, 51, 53, 54, 72, 673, 676, 722, 907, 919, 990, 1053, 1167, 1189, 1192, 1199, 1263, 1286, 1296, 1353, 1354, 1355, 1356, 1357, 1358, 1378, 1396, 1412, 1425, 1431, 1476, 1525, 1536, 1538, 1651, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1873, 1880, 1887, 1893, 1894, 1896, 1898, 1903, 1904, 1907, 1911, 1916, 1917, 1923, 1924, 1927, 1945, 1946, 1949, 1950, 1956], "cheaper": [20, 53], "bulk": [20, 1945], "arrai": [20, 31, 435, 747, 807, 808, 866, 867, 910, 928, 953, 957, 1065, 1109, 1117, 1118, 1126, 1127, 1263, 1293, 1372, 1377, 1378, 1395, 1396, 1518, 1735, 1742, 1762, 1797, 1798, 1799, 1801, 1802, 1829, 1836, 1844, 1855, 1870, 1874, 1896, 1904, 1927, 1929, 1933, 1934], "untouch": 20, "slightli": [20, 23, 29, 46, 1652, 1703, 1816, 1868, 1896, 1898, 1901, 1907, 1915], "default_col": 20, "consist": [20, 23, 25, 28, 29, 40, 41, 54, 895, 930, 931, 1192, 1221, 1227, 1228, 1230, 1232, 1233, 1234, 1235, 1259, 1261, 1425, 1472, 1614, 1617, 1666, 1713, 1815, 1870, 1873, 1880, 1887, 1888, 1899, 1904, 1906, 1908, 1911, 1914, 1917, 1927, 1942, 1943, 1950, 1956], "channel": [20, 49, 459, 460, 461, 766, 772, 795, 809, 812, 820, 832, 840, 1079, 1343, 1344, 1345, 1349, 1353, 1354, 1355, 1356, 1357, 1358, 1363, 1364, 1365, 1366, 1370, 1372, 1380, 1388, 1389, 1390, 1397, 1401, 1402, 1403, 1404, 1405, 1406, 1413, 1433, 1459, 1464, 1476, 1477, 1478, 1479, 1494, 1510, 1511, 1512, 1517, 1534, 1535, 1542, 1568, 1593, 1623, 1624, 1625, 1632, 1633, 1649, 1715, 1887, 1889, 1891, 1893, 1918, 1919, 1921, 1932], "class_index": 20, "namedtupl": [20, 44, 54, 883, 1044, 1045, 1137, 1192, 1203, 1213, 1233, 1283, 1289, 1292, 1294, 1297, 1321, 1333, 1425, 1703, 1713, 1787, 1815, 1833, 1838, 1870, 1872, 1873, 1918], "situat": [20, 29, 42, 54, 73, 75, 939, 953, 1617, 1885, 1898, 1899, 1906, 1907, 1915, 1918, 1925, 1944, 1945, 1946, 1957], "gil": [20, 23, 27, 1893, 1896, 1923], "integ": [20, 23, 29, 40, 44, 76, 277, 432, 434, 436, 486, 532, 547, 553, 672, 673, 674, 675, 676, 677, 753, 754, 772, 774, 852, 879, 907, 908, 917, 928, 952, 969, 971, 987, 993, 994, 1022, 1060, 1063, 1065, 1066, 1067, 1068, 1108, 1109, 1110, 1111, 1112, 1113, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1135, 1149, 1150, 1153, 1154, 1155, 1202, 1205, 1214, 1215, 1222, 1233, 1235, 1245, 1264, 1314, 1333, 1348, 1353, 1354, 1355, 1397, 1483, 1484, 1485, 1486, 1487, 1488, 1595, 1638, 1653, 1656, 1691, 1694, 1698, 1703, 1715, 1716, 1722, 1724, 1725, 1726, 1728, 1733, 1742, 1754, 1803, 1812, 1816, 1830, 1831, 1844, 1850, 1862, 1866, 1872, 1873, 1874, 1886, 1899, 1901, 1916, 1919, 1921, 1927, 1928, 1930, 1933, 1934, 1944, 1959], "descriptor": [20, 23, 1473, 1474, 1874, 1911], "parent": [20, 33, 38, 42, 46, 667, 775, 776, 804, 1425, 1885, 1910, 1915, 1925, 1932], "simplest": [20, 25, 31, 54, 845, 1338, 1339, 1340, 1353, 1354, 1355, 1418, 1419, 1420, 1615, 1897, 1898, 1904, 1918, 1925, 1927, 1946, 1949], "refcount": [20, 1885, 1906], "panda": 20, "pyarrow": 20, "13246": 20, "enumer": [20, 29, 44, 54, 1192, 1425, 1427, 1436, 1688, 1871, 1872, 1892, 1896, 1910, 1932, 1955], "get_worker_info": [20, 1923], "seed": [20, 76, 1003, 1012, 1013, 1033, 1168, 1284, 1305, 1703, 1720, 1816, 1853, 1869, 1871, 1900, 1906, 1908, 1922], "naiv": [20, 1916, 1941, 1944, 1946], "shut": [20, 1923], "garbag": [20, 1925], "subtleti": [20, 55, 1362, 1898, 1900], "multiprocess": [20, 21, 23, 24, 26, 31, 33, 41, 42, 1362, 1605, 1869, 1887, 1897, 1924], "unix": [20, 38, 967, 1885], "fork": [20, 38, 1210, 1605, 1873, 1895, 1896, 1900, 1903, 1906, 1910, 1922, 1923, 1925], "child": [20, 31, 33, 46, 778, 1192, 1425, 1624, 1885, 1904, 1910, 1925], "address": [20, 23, 40, 43, 51, 204, 895, 896, 974, 1880, 1885, 1896, 1923, 1924, 1941, 1958], "maco": [20, 23, 1885, 1905], "spawn": [20, 21, 24, 31, 32, 38, 42, 1195, 1605, 1869, 1892, 1897, 1906, 1910, 1924], "__name__": [20, 21, 23, 32, 33, 41, 1897, 1898, 1906, 1910, 1915, 1924], "__main__": [20, 21, 23, 32, 33, 41, 1894, 1897, 1906, 1910, 1924], "bytecod": [20, 667, 1879, 1915, 1942, 1943, 1946, 1949, 1956], "base_se": 20, "worker_id": [20, 42, 1908], "therebi": [20, 29, 1914, 1918], "mandatorili": 20, "faq": [20, 1362, 1641, 1869], "initial_se": [20, 76, 1869, 1908, 1922], "host": [20, 23, 31, 33, 39, 40, 41, 42, 184, 197, 567, 590, 864, 1192, 1425, 1605, 1617, 1651, 1896, 1916, 1923, 1924, 1929, 1941, 1945, 1958], "recogn": [20, 69, 1873, 1923, 1927, 1945], "simplecustombatch": 20, "transposed_data": 20, "zip": [20, 25, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1868, 1871, 1872, 1882, 1896, 1903, 1927], "tgt": [20, 1468, 1469, 1470], "collate_wrapp": 20, "float32": [20, 21, 44, 46, 55, 60, 63, 64, 65, 255, 567, 604, 806, 807, 808, 809, 812, 813, 867, 947, 1079, 1080, 1117, 1139, 1141, 1174, 1329, 1342, 1468, 1477, 1478, 1479, 1491, 1670, 1671, 1707, 1712, 1720, 1724, 1739, 1754, 1755, 1757, 1800, 1859, 1888, 1892, 1896, 1907, 1911, 1920, 1927, 1928, 1929, 1930, 1933, 1934, 1956, 1959], "tensordataset": 20, "batch_ndx": 20, "is_pin": [20, 1638, 1871, 1886, 1913, 1929], "multiprocessing_context": 20, "pin_memory_devic": 20, "reshuffl": 20, "draw": [20, 142, 909, 1028, 1315, 1720, 1932, 1954], "mutual": [20, 23, 31, 722, 1934], "subprocess": [20, 23, 38, 40, 42, 1900, 1906], "incomplet": [20, 888, 1875, 1928], "divis": [20, 570, 604, 674, 759, 760, 761, 933, 1060, 1110, 1113, 1202, 1235, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1380, 1392, 1416, 1434, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1560, 1733, 1803, 1830, 1873, 1892, 1896], "smaller": [20, 54, 486, 532, 957, 1395, 1605, 1697, 1712, 1757, 1803, 1896, 1909, 1915, 1942, 1958, 1959], "basecontext": 20, "randomsampl": 20, "prefetch": [20, 46], "unpickl": [20, 23, 1263, 1915], "practic": [20, 23, 29, 46, 1869, 1870, 1880, 1885, 1887, 1893, 1898, 1901, 1904, 1909, 1915, 1923, 1938, 1945, 1946], "len": [20, 23, 25, 54, 55, 60, 206, 532, 682, 683, 1084, 1088, 1091, 1095, 1098, 1102, 1132, 1196, 1258, 1279, 1291, 1320, 1323, 1362, 1562, 1623, 1625, 1641, 1688, 1695, 1800, 1803, 1809, 1810, 1814, 1855, 1856, 1857, 1870, 1871, 1873, 1898, 1913, 1927, 1932, 1955], "proper": [20, 31, 53, 54, 1056, 1752, 1872, 1893, 1896, 1898, 1906, 1910], "guess": 20, "trust": [20, 23, 1263, 1868, 1915], "inaccur": [20, 21, 1535], "kwd": 20, "__getitems__": 20, "speedup": [20, 21, 1431, 1472, 1938, 1941, 1949, 1953], "myiterabledataset": 20, "assert": [20, 21, 29, 44, 48, 50, 51, 52, 54, 55, 61, 63, 611, 898, 900, 901, 1123, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1190, 1195, 1196, 1201, 1574, 1662, 1861, 1872, 1874, 1898, 1899, 1904, 1909, 1915, 1918, 1934, 1944, 1955, 1956], "worker_info": 20, "iter_start": 20, "iter_end": 20, "per_work": 20, "ceil": [20, 165, 620, 621, 755, 756, 1338, 1339, 1340, 1393, 1394, 1418, 1419, 1420, 1491, 1492, 1493, 1548, 1549, 1550, 1718, 1719, 1742, 1871, 1886, 1896, 1913, 1927, 1951], "min": [20, 23, 33, 40, 44, 54, 55, 64, 65, 104, 173, 174, 175, 176, 288, 682, 683, 684, 745, 757, 758, 767, 789, 806, 807, 808, 809, 812, 862, 934, 935, 1008, 1045, 1079, 1080, 1152, 1223, 1237, 1238, 1244, 1248, 1250, 1255, 1261, 1281, 1315, 1347, 1384, 1411, 1413, 1433, 1445, 1452, 1498, 1535, 1539, 1568, 1570, 1575, 1593, 1682, 1687, 1688, 1697, 1701, 1703, 1713, 1815, 1839, 1840, 1841, 1842, 1871, 1883, 1886, 1911, 1913, 1918, 1921, 1923, 1946, 1951, 1959], "mult": 20, "12": [20, 21, 23, 46, 309, 504, 604, 673, 728, 729, 730, 732, 733, 929, 933, 1063, 1081, 1155, 1196, 1211, 1228, 1250, 1333, 1349, 1357, 1372, 1373, 1374, 1422, 1437, 1438, 1459, 1468, 1476, 1519, 1520, 1560, 1565, 1566, 1613, 1646, 1702, 1713, 1762, 1777, 1787, 1830, 1846, 1862, 1868, 1870, 1871, 1874, 1880, 1896, 1905, 1909, 1911, 1913, 1927, 1934, 1943, 1953, 1954], "overall_start": 20, "overall_end": 20, "stackdataset": 20, "assembl": 20, "imagedataset": 20, "textdataset": 20, "tuple_stack": 20, "dict_stack": 20, "concatdataset": 20, "chaindataset": 20, "chain": [20, 21, 29, 53, 54, 138, 880, 929, 1247, 1369, 1453, 1685, 1698, 1873, 1893, 1896, 1898, 1901, 1904, 1914, 1955], "fly": [20, 1008, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1893], "whole": [20, 23, 25, 1133, 1192, 1425, 1453, 1464, 1605, 1861, 1893, 1897, 1906, 1907, 1915, 1945, 1947, 1949, 1952, 1953], "_util": [20, 1954], "collate_fn_map": 20, "registri": [20, 1664, 1869, 1909, 1911, 1912], "default_collate_fn_map": 20, "insert": [20, 23, 29, 46, 53, 54, 734, 779, 780, 848, 849, 1426, 1427, 1435, 1605, 1749, 1752, 1762, 1783, 1808, 1849, 1870, 1881, 1896, 1912, 1913, 1918, 1955], "collate_tensor_fn": 20, "custom_col": 20, "collate_map": 20, "outer": [20, 678, 888, 1065, 1123, 1127, 1132, 1138, 1871, 1873, 1913], "unchang": [20, 486, 500, 502, 722, 801, 1104, 1192, 1425, 1468, 1734, 1806, 1892, 1907, 1918], "byte": [20, 23, 29, 40, 230, 422, 545, 867, 973, 1014, 1016, 1018, 1020, 1118, 1191, 1263, 1300, 1301, 1662, 1673, 1745, 1872, 1873, 1874, 1886, 1909, 1915, 1927, 1929, 1958], "k": [20, 23, 25, 29, 41, 54, 274, 342, 493, 500, 502, 504, 577, 604, 747, 932, 1052, 1065, 1121, 1134, 1154, 1213, 1221, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1236, 1237, 1238, 1241, 1243, 1250, 1252, 1254, 1255, 1264, 1282, 1286, 1338, 1340, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1373, 1374, 1377, 1378, 1395, 1396, 1410, 1412, 1413, 1418, 1420, 1431, 1432, 1440, 1442, 1507, 1519, 1520, 1542, 1559, 1612, 1701, 1703, 1713, 1741, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1801, 1802, 1811, 1833, 1838, 1871, 1872, 1891, 1896, 1898, 1910, 1927, 1928, 1930, 1949, 1950, 1951, 1956], "v_i": [20, 1231], "v_1": 20, "v_2": 20, "v1_i": 20, "v2_i": 20, "v1_1": 20, "v1_2": 20, "v2_1": 20, "v2_2": 20, "elem": [20, 1871], "customtyp": 20, "collate_customtype_fn": 20, "custotyp": 20, "default_convert": 20, "np": [20, 927, 1060, 1065, 1105, 1106, 1107, 1564, 1707, 1899, 1908, 1911, 1932, 1933, 1934], "fraction": [20, 29, 1035, 1108, 1114, 1310, 1356, 1357, 1358, 1373, 1374, 1431, 1472, 1519, 1520, 1622, 1623, 1625, 1626, 1628, 1631, 1632, 1633, 1634, 1714, 1891, 1946], "workerinfo": [20, 1923], "random_split": 20, "floor": [20, 55, 57, 63, 259, 634, 635, 755, 756, 1060, 1110, 1202, 1338, 1339, 1340, 1393, 1394, 1418, 1419, 1420, 1491, 1492, 1493, 1548, 1549, 1550, 1718, 1719, 1733, 1742, 1811, 1871, 1873, 1886, 1906, 1909, 1913, 1927, 1951], "frac": [20, 29, 267, 365, 636, 637, 674, 747, 759, 760, 761, 852, 908, 917, 953, 957, 1060, 1110, 1145, 1149, 1150, 1211, 1223, 1227, 1228, 1231, 1243, 1255, 1262, 1278, 1333, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1349, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1363, 1372, 1377, 1378, 1379, 1380, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1410, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1428, 1429, 1430, 1432, 1440, 1442, 1443, 1455, 1457, 1458, 1460, 1461, 1463, 1464, 1465, 1476, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1544, 1560, 1562, 1564, 1574, 1576, 1580, 1582, 1584, 1585, 1668, 1669, 1672, 1674, 1680, 1687, 1688, 1717, 1729, 1732, 1744, 1765, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1794, 1809, 1810, 1811, 1815, 1836, 1856, 1857, 1871, 1886, 1891, 1893, 1901, 1913, 1927, 1928], "remaind": [20, 477, 1113, 1145, 1871, 1913, 1943, 1951], "robin": [20, 23], "generator1": 20, "manual_se": [20, 51, 76, 1869, 1871, 1886, 1904, 1906, 1908, 1911, 1913, 1922], "42": [20, 811, 917, 1314, 1769, 1896, 1904, 1943], "generator2": 20, "30": [20, 23, 29, 31, 40, 432, 604, 707, 715, 716, 743, 751, 1145, 1214, 1346, 1348, 1352, 1412, 1476, 1482, 1499, 1508, 1596, 1691, 1693, 1699, 1716, 1826, 1898, 1911, 1914, 1923, 1943], "data_sourc": 20, "accedingsequencelengthsampl": 20, "argsort": [20, 1826, 1871, 1899, 1913], "tolist": [20, 340, 1873, 1913, 1929], "accedingsequencelengthbatchsampl": 20, "sequentialsampl": 20, "num_sampl": [20, 408, 1315, 1871], "drawn": [20, 161, 246, 274, 1315, 1653, 1720, 1724, 1725, 1891, 1934, 1935], "subsetrandomsampl": 20, "weightedrandomsampl": 20, "probabl": [20, 46, 142, 747, 909, 1153, 1269, 1315, 1333, 1337, 1341, 1348, 1361, 1363, 1364, 1365, 1366, 1370, 1377, 1379, 1395, 1431, 1432, 1440, 1496, 1507, 1508, 1509, 1510, 1511, 1512, 1517, 1526, 1536, 1559, 1574, 1713, 1885, 1898, 1910, 1911, 1928, 1932, 1945, 1946, 1947, 1952], "row": [20, 21, 28, 29, 196, 301, 303, 309, 572, 575, 680, 686, 864, 888, 890, 927, 953, 957, 1048, 1078, 1106, 1107, 1127, 1133, 1154, 1213, 1239, 1247, 1250, 1255, 1279, 1281, 1289, 1291, 1292, 1294, 1297, 1315, 1321, 1322, 1323, 1515, 1516, 1564, 1612, 1651, 1711, 1714, 1734, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1814, 1833, 1836, 1840, 1842, 1855, 1861, 1863, 1871, 1901, 1927, 1932], "05": [20, 27, 54, 101, 332, 681, 699, 700, 701, 702, 703, 704, 710, 711, 723, 724, 736, 738, 739, 740, 741, 895, 896, 931, 1079, 1181, 1207, 1208, 1278, 1343, 1344, 1345, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1464, 1468, 1470, 1472, 1494, 1525, 1534, 1538, 1605, 1686, 1692, 1693, 1699, 1771, 1772, 1777, 1870, 1871, 1914, 1924, 1934], "batchsampl": 20, "distributedsampl": [20, 1605], "num_replica": 20, "world_siz": [20, 21, 23, 24, 27, 31, 40, 41, 43, 46, 1605, 1897, 1916, 1923, 1924], "evenli": [20, 570, 571, 572, 682, 683, 1063, 1155, 1262, 1278, 1862], "set_epoch": 20, "is_distribut": [20, 1871, 1913], "start_epoch": 20, "n_epoch": 20, "vanilla": [21, 1880], "allreduc": [21, 23, 1605, 1896, 1897, 1913], "besid": [21, 23, 1660, 1896, 1897, 1932, 1942], "register_comm_hook": [21, 27, 46, 1605], "mainli": [21, 29, 814, 1348, 1508, 1936], "bucket": [21, 27, 28, 1333, 1605, 1871, 1897, 1913, 1946, 1956], "gradbucket": [21, 1605], "flatten": [21, 46, 54, 55, 61, 861, 862, 1054, 1154, 1248, 1261, 1476, 1652, 1660, 1666, 1714, 1730, 1735, 1740, 1846, 1847, 1848, 1871, 1886, 1887, 1891, 1911, 1913, 1920, 1931, 1944], "decompos": [21, 54, 1115, 1122, 1236, 1893, 1898, 1911, 1951], "get_per_parameter_tensor": 21, "wise": [21, 23, 29, 674, 675, 685, 745, 757, 758, 767, 771, 871, 951, 1065, 1070, 1111, 1112, 1135, 1136, 1148, 1157, 1214, 1216, 1273, 1274, 1275, 1276, 1280, 1290, 1293, 1295, 1326, 1347, 1358, 1365, 1367, 1381, 1382, 1383, 1384, 1386, 1411, 1414, 1424, 1433, 1443, 1444, 1445, 1452, 1454, 1455, 1456, 1461, 1463, 1465, 1466, 1498, 1513, 1522, 1523, 1527, 1528, 1529, 1530, 1533, 1537, 1539, 1544, 1554, 1555, 1568, 1569, 1570, 1575, 1576, 1577, 1578, 1582, 1584, 1585, 1586, 1795, 1863, 1895, 1898, 1927, 1928, 1931, 1953], "_distributed_c10d": [21, 23], "1d": [21, 28, 29, 46, 689, 692, 725, 728, 759, 769, 938, 953, 957, 1048, 1062, 1153, 1154, 1169, 1189, 1247, 1248, 1293, 1322, 1330, 1334, 1338, 1348, 1353, 1356, 1361, 1364, 1365, 1369, 1393, 1417, 1418, 1430, 1432, 1477, 1483, 1486, 1489, 1491, 1499, 1502, 1510, 1516, 1545, 1548, 1714, 1715, 1718, 1811, 1836, 1858], "is_last": 21, "set_buff": 21, "stateless": [21, 51, 1889, 1904], "ddp_comm_hook": [21, 27], "default_hook": 21, "allreduce_hook": 21, "process_group": [21, 24, 25, 27, 46, 1464, 1605], "aggreg": [21, 23, 25, 33, 46, 1369, 1516, 1605, 1628, 1883, 1916, 1946, 1956], "henc": [21, 27, 31, 39, 40, 43, 46, 53, 909, 1118, 1421, 1422, 1423, 1477, 1800, 1888, 1893, 1896, 1897, 1923, 1925, 1941], "unaffect": [21, 486, 487, 1379], "ddp_model": [21, 23, 1605, 1897], "fp16_compress_hook": 21, "compress": [21, 46, 196, 574, 575, 1087, 1088, 1097, 1098, 1605, 1797, 1798, 1799, 1801, 1802, 1835, 1869, 1953], "decompress": [21, 1868, 1882], "bf16_compress_hook": 21, "nccl": [21, 24, 25, 41, 46, 1605, 1902], "brain": [21, 1930, 1933], "wrapper": [21, 23, 28, 29, 46, 53, 54, 55, 611, 744, 777, 811, 963, 966, 968, 969, 971, 1038, 1040, 1111, 1112, 1131, 1192, 1303, 1362, 1870, 1872, 1873, 1883, 1885, 1896, 1897, 1911, 1916, 1941], "fp16_compress_wrapp": 21, "powersgdst": 21, "matrix_approximation_rank": 21, "start_powersgd_it": 21, "powersgd_hook": 21, "bf16_compress_wrapp": 21, "wikipedia": [21, 1561, 1893, 1901, 1959], "wiki": [21, 1959], "bfloat16_float": 21, "point_format": 21, "vogel": 21, "et": [21, 29, 46, 1348, 1437, 1438, 1473, 1474, 1683, 1778, 1816, 1891], "al": [21, 29, 46, 1348, 1437, 1438, 1473, 1474, 1683, 1778, 1816, 1891], "neurip": [21, 29], "2019": [21, 29, 1022], "bandwidth": [21, 23, 39, 41, 1918, 1923, 1948, 1950], "hyperparamet": [21, 46, 54, 1932], "1000": [21, 1080, 1085, 1111, 1112, 1333, 1368, 1474, 1715, 1742, 1762, 1829, 1893, 1909, 1911, 1932], "min_compression_r": 21, "use_error_feedback": 21, "warm_start": 21, "orthogonalization_epsilon": 21, "random_se": 21, "compression_stats_logging_frequ": 21, "batch_tensors_with_same_shap": 21, "tune": [21, 23, 27, 1022, 1228, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1893, 1896, 1905, 1918, 1956], "stronger": [21, 44, 55], "threshold": [21, 54, 1246, 1249, 1386, 1456, 1461, 1582, 1588, 1697, 1762, 1871, 1892, 1896, 1913, 1932], "exponenti": [21, 246, 1075, 1243, 1269, 1270, 1271, 1279, 1347, 1367, 1513, 1869, 1873, 1913, 1914, 1928, 1935], "grid": [21, 1085, 1293, 1489, 1524, 1871, 1896, 1932, 1951], "satisfactori": 21, "nlp": [21, 1388, 1389, 1390, 1397, 1946], "appendix": [21, 1869], "defer": [21, 46, 1896, 1916], "hybrid": [21, 46, 206, 530, 570, 571, 572, 574, 575, 1156], "scheme": [21, 40, 465, 789, 806, 807, 808, 809, 812, 814, 1904], "sensit": [21, 1386, 1456, 1911, 1915, 1924, 1945], "suboptim": [21, 1948], "trajectori": 21, "irrecover": 21, "impact": [21, 23, 69, 1022, 1757, 1881, 1883, 1893, 1918, 1931, 1946, 1952, 1956], "warm": [21, 27, 1011, 1687, 1688, 1896, 1917, 1941, 1946, 1954], "num_row": 21, "num_col": 21, "1e": [21, 54, 101, 332, 681, 699, 700, 701, 702, 703, 704, 710, 711, 723, 724, 736, 738, 739, 740, 741, 742, 895, 896, 930, 931, 1181, 1207, 1208, 1258, 1343, 1344, 1345, 1360, 1379, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1411, 1434, 1439, 1464, 1468, 1470, 1472, 1473, 1494, 1506, 1521, 1525, 1526, 1534, 1538, 1560, 1563, 1567, 1590, 1613, 1646, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1684, 1697, 1705, 1758, 1870, 1871, 1898, 1904, 1911, 1914, 1928, 1934], "orthogon": [21, 1228, 1231, 1250, 1255, 1264, 1701, 1713, 1891, 1893, 1904, 1927], "div": [21, 224, 1061, 1110, 1113, 1333, 1437, 1438, 1733, 1843, 1871, 1877, 1886, 1913, 1927, 1930, 1951, 1955], "batch": [21, 23, 29, 41, 43, 46, 47, 48, 51, 52, 54, 55, 62, 63, 570, 571, 572, 574, 575, 673, 689, 690, 691, 692, 693, 694, 722, 747, 766, 772, 894, 895, 896, 907, 919, 920, 927, 930, 931, 932, 939, 965, 1053, 1055, 1065, 1126, 1127, 1133, 1189, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1259, 1260, 1261, 1264, 1272, 1281, 1282, 1286, 1341, 1342, 1343, 1344, 1345, 1348, 1353, 1354, 1359, 1361, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1377, 1378, 1379, 1380, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1395, 1396, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1416, 1417, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1442, 1456, 1457, 1464, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1476, 1489, 1494, 1496, 1497, 1507, 1508, 1510, 1511, 1512, 1515, 1516, 1517, 1518, 1521, 1534, 1535, 1536, 1559, 1567, 1574, 1592, 1593, 1596, 1605, 1612, 1638, 1639, 1641, 1642, 1644, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1688, 1689, 1695, 1701, 1703, 1713, 1717, 1797, 1798, 1799, 1801, 1802, 1806, 1811, 1815, 1816, 1835, 1838, 1839, 1841, 1858, 1861, 1869, 1886, 1887, 1888, 1892, 1896, 1899, 1900, 1904, 1906, 1916, 1918, 1923, 1927, 1932, 1933, 1944, 1945, 1946, 1950, 1954, 1956], "epsilon": [21, 54, 806, 807, 808, 809, 812, 852, 1246, 1249, 1343, 1344, 1345, 1360, 1380, 1388, 1389, 1390, 1397, 1434, 1464, 1506, 1560, 1613, 1646, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1717, 1871, 1928], "bucket_cap_mb": [21, 1605, 1897], "footprint": [21, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1911, 1927, 1953], "bottleneck": [21, 1869, 1904, 1948], "memor": 21, "compens": 21, "apex": 21, "uncompress": [21, 1927], "p": [21, 25, 29, 46, 54, 142, 222, 274, 412, 413, 440, 475, 478, 479, 595, 673, 676, 907, 909, 919, 927, 1059, 1212, 1223, 1229, 1230, 1238, 1239, 1281, 1283, 1286, 1296, 1318, 1337, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1391, 1393, 1394, 1430, 1434, 1436, 1473, 1474, 1490, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1545, 1546, 1556, 1560, 1563, 1564, 1590, 1609, 1615, 1617, 1623, 1632, 1652, 1683, 1734, 1792, 1871, 1872, 1892, 1893, 1896, 1900, 1901, 1906, 1917, 1927, 1928, 1950, 1951], "pq": 21, "mq": [21, 1918, 1937], "tp": [21, 28], "awai": [21, 54, 942, 1524, 1869, 1887, 1893, 1899, 1944], "config": [21, 46, 54, 779, 780, 781, 782, 846, 848, 939, 1897, 1910, 1921, 1943, 1944, 1946, 1948, 1949, 1950, 1952, 1956], "comm": [21, 23, 1897], "handler": [21, 23, 33, 34, 1624, 1883, 1903, 1915, 1957], "batched_powersgd_hook": 21, "destroi": [21, 40, 1362, 1893, 1923], "squar": [21, 29, 538, 726, 727, 728, 729, 766, 772, 781, 957, 1052, 1054, 1189, 1223, 1225, 1227, 1228, 1229, 1232, 1233, 1237, 1239, 1241, 1243, 1245, 1249, 1251, 1252, 1254, 1255, 1259, 1272, 1281, 1331, 1335, 1339, 1340, 1354, 1355, 1357, 1358, 1373, 1374, 1386, 1394, 1416, 1419, 1420, 1423, 1456, 1468, 1491, 1500, 1503, 1519, 1520, 1524, 1533, 1535, 1555, 1578, 1593, 1612, 1668, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1744, 1804, 1838, 1855, 1871, 1913, 1927], "truncat": [21, 1110, 1757, 1844, 1888, 1891, 1900, 1907], "impli": [21, 40, 46, 1885, 1893, 1911, 1916, 1921, 1923, 1945], "debugging_hook": 21, "noop_hook": 21, "noop": [21, 1605], "headroom": 21, "desynchron": [21, 23], "trainer": [21, 31, 33, 38, 41, 42, 1605, 1923], "restart": [21, 31, 39, 41, 43, 1687, 1688, 1885, 1932, 1943], "__setstate__": 21, "__getstate__": 21, "reload": [21, 27, 46, 1868], "sy": [21, 32, 41, 43, 1868, 1896, 1915], "tempfil": 21, "mp": [21, 23, 24, 42, 1303, 1605, 1869, 1897, 1898, 1906, 1918, 1924, 1929, 1930, 1937], "simplemodel": 21, "24": [21, 23, 29, 912, 1250, 1413, 1489, 1645, 1713, 1757, 1831, 1870, 1891, 1895, 1928, 1943], "fc2": [21, 1596, 1916], "master_addr": [21, 23, 31, 41, 43, 1897, 1916, 1923, 1924], "localhost": [21, 23, 40, 41, 1897, 1916, 1923, 1924], "master_port": [21, 23, 31, 41, 43, 1897, 1916, 1923, 1924], "12355": 21, "init_process_group": [21, 23, 24, 27, 31, 41, 43, 1605, 1896, 1897, 1923], "cleanup": 21, "destroy_process_group": 21, "run_demo": 21, "demo_fn": 21, "nproc": [21, 23, 38, 39, 41, 1885, 1897, 1924], "demo_seri": 21, "gettempdir": 21, "device_id": [21, 23, 24, 27, 41, 46, 1263, 1362, 1464, 1589, 1605, 1897], "powersgd_st": 21, "lr": [21, 24, 27, 46, 475, 1596, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1896, 1897, 1904, 1906, 1914, 1924, 1932], "001": [21, 895, 896, 1201, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1696, 1897, 1911], "comm_hook": 21, "comm_hook_st": 21, "barrier": [21, 31, 40, 1913], "map_loc": [21, 1196, 1199, 1263, 1605, 1868, 1882, 1915], "new_ddp_model": 21, "n_gpu": 21, "device_count": [21, 23, 1853, 1869], "got": [21, 23, 878, 1853, 1898, 1934], "thank": [21, 29, 1898, 1916], "author": [21, 40, 41, 46, 1133, 1680, 1720, 1861, 1892, 1943, 1946, 1948, 1952, 1953, 1956], "thij": 21, "par": 21, "home": [22, 1896], "brief": [23, 1605, 1885, 1923], "introduct": [23, 29, 1000, 1605, 1869, 1870, 1874, 1886, 1894, 1904, 1911, 1923, 1927, 1932], "mpi": [23, 1605], "gloo": [23, 41, 1605, 1897, 1902, 1923], "recv": [23, 1605, 1913, 1924], "broadcast": [23, 27, 29, 46, 51, 85, 184, 386, 388, 389, 390, 500, 502, 504, 553, 672, 673, 674, 675, 676, 677, 678, 684, 722, 871, 907, 912, 915, 919, 920, 921, 922, 952, 979, 1008, 1059, 1060, 1065, 1070, 1110, 1111, 1112, 1113, 1134, 1136, 1148, 1158, 1216, 1217, 1224, 1237, 1241, 1246, 1247, 1249, 1252, 1260, 1280, 1285, 1286, 1296, 1314, 1317, 1326, 1329, 1342, 1360, 1379, 1431, 1497, 1506, 1568, 1605, 1666, 1702, 1710, 1733, 1735, 1812, 1831, 1836, 1864, 1869, 1873, 1886, 1887, 1888, 1897, 1911, 1913, 1928, 1946, 1951], "all_reduc": [23, 42, 1605], "all_gath": 23, "scatter": [23, 27, 46, 500, 502, 504, 1362, 1850, 1871, 1900, 1913, 1923, 1951], "reduce_scatt": [23, 1913], "all_to_al": 23, "v1": [23, 46, 1260, 1702, 1868, 1897, 1923], "init_method": [23, 1605, 1923], "adher": [23, 1873, 1927], "some_fil": 23, "machine_nam": 23, "share_folder_nam": 23, "tcpstore": [23, 40], "past": [23, 54, 977, 1024, 1028, 1042, 1043, 1605, 1900, 1948, 1950, 1953], "ask": [23, 50, 51, 1868, 1869, 1899, 1901, 1938, 1958], "infiniband": [23, 1605, 1923], "interconnect": 23, "gpudirect": 23, "ethernet": 23, "ip": [23, 40], "ib": 23, "upcom": [23, 1892], "nccl_socket_ifnam": 23, "eth0": 23, "gloo_socket_ifnam": 23, "comma": [23, 1065, 1873, 1879], "eth1": 23, "eth2": 23, "eth3": 23, "imper": 23, "nccl_debug": 23, "info": [23, 31, 34, 38, 667, 879, 968, 969, 971, 1222, 1233, 1235, 1236, 1240, 1253, 1281, 1306, 1307, 1662, 1869, 1871, 1879, 1897, 1898, 1899, 1911, 1915, 1943, 1944, 1945, 1956], "nccl_debug_subsi": 23, "coll": 23, "hang": [23, 24, 27, 1605, 1897], "topologi": [23, 25, 28, 31], "effort": [23, 44, 1923, 1950], "socket": [23, 1885, 1923], "nccl_socket_nthread": 23, "nccl_nsocks_perthread": 23, "cloud": [23, 1927, 1932], "aw": [23, 32, 957], "gcp": [23, 1953], "primit": [23, 27, 40, 44, 1263, 1870, 1872, 1874, 1895, 1905, 1911, 1923, 1951], "kind": [23, 34, 44, 54, 667, 1211, 1606, 1665, 1712, 1777, 1868, 1877, 1898, 1906, 1911, 1915, 1918, 1928, 1930, 1949], "connect": [23, 31, 40, 1353, 1354, 1355, 1356, 1357, 1358, 1401, 1402, 1403, 1404, 1405, 1406, 1453, 1885, 1923, 1954], "advantag": [23, 40, 41, 1342, 1386, 1897, 1900, 1923, 1927, 1941], "redund": [23, 46, 1081, 1082, 1084, 1086, 1100, 1102, 1811], "averag": [23, 27, 722, 753, 754, 755, 756, 808, 809, 904, 906, 957, 1028, 1042, 1192, 1330, 1331, 1332, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1359, 1361, 1369, 1379, 1385, 1391, 1392, 1393, 1394, 1398, 1399, 1400, 1416, 1417, 1425, 1428, 1429, 1430, 1431, 1432, 1439, 1456, 1457, 1464, 1473, 1483, 1484, 1485, 1491, 1492, 1493, 1496, 1497, 1507, 1521, 1536, 1545, 1546, 1559, 1567, 1605, 1667, 1668, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1836, 1869, 1897, 1917], "elimin": [23, 54, 597, 1847, 1848, 1908, 1948, 1955], "thrash": 23, "recurr": [23, 747, 748, 1207, 1348, 1362, 1377, 1378, 1395, 1440, 1615, 1641, 1681, 1869, 1896], "use_distribut": 23, "datetim": [23, 1883], "timedelta": [23, 40, 1883], "1800": 23, "group_nam": [23, 37], "pg_option": 23, "url": [23, 40, 903, 1868, 1882, 1923], "discov": [23, 1923], "encod": [23, 31, 37, 40, 46, 54, 1239, 1263, 1306, 1307, 1341, 1342, 1468, 1469, 1470, 1471, 1472, 1605, 1757, 1797, 1798, 1799, 1801, 1802, 1870, 1873, 1874, 1898, 1909, 1915, 1924, 1927], "ucc": 23, "lowercas": 23, "deadlock": [23, 1605], "job": [23, 31, 33, 34, 36, 37, 39, 40, 41, 42, 1605, 1689, 1695, 1896, 1903, 1917, 1932, 1958], "exchang": [23, 40, 969, 1053, 1896, 1911], "nccl_blocking_wait": 23, "nccl_async_error_handl": [23, 1896], "throw": [23, 24, 28, 53, 54, 178, 311, 316, 532, 601, 1177, 1192, 1232, 1281, 1425, 1605, 1607, 1608, 1641, 1652, 1709, 1850, 1888, 1893, 1908, 1923, 1933, 1946, 1956], "abort": [23, 1896], "crash": [23, 33, 40, 1228, 1885, 1893, 1923, 1925, 1932], "caught": [23, 1605, 1885], "littl": [23, 1898, 1925, 1949], "watch": [23, 1943], "dog": 23, "deprec": [23, 31, 40, 41, 46, 50, 394, 500, 544, 590, 772, 773, 774, 780, 813, 894, 895, 929, 930, 1015, 1019, 1138, 1192, 1246, 1249, 1281, 1282, 1341, 1342, 1359, 1361, 1384, 1385, 1391, 1392, 1416, 1417, 1425, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1478, 1479, 1496, 1497, 1507, 1536, 1559, 1567, 1593, 1594, 1595, 1597, 1605, 1646, 1647, 1649, 1652, 1713, 1729, 1811, 1815, 1838, 1869, 1870, 1875, 1885, 1894, 1917, 1921, 1929, 1933, 1934, 1946], "processgroupopt": 23, "processgroupnccl": [23, 1897], "is_high_priority_stream": 23, "backend_nam": [23, 1853], "custom_backend": 23, "is_initi": [23, 1869], "is_mpi_avail": 23, "is_nccl_avail": 23, "is_gloo_avail": 23, "is_torchelastic_launch": 23, "elast": [23, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 1869], "aka": [23, 55, 62, 63, 904, 1386, 1893, 1930, 1944], "torchelast": [23, 26, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43], "torchelastic_run_id": [23, 41], "proxi": [23, 25, 1918, 1923, 1949], "rendezv": [23, 26, 31, 37, 39, 43, 1897, 1923], "null": [23, 32, 34, 37, 55, 59], "discoveri": [23, 40, 1896, 1915], "reachabl": 23, "multicast": 23, "20": [23, 27, 29, 309, 672, 707, 715, 716, 721, 725, 726, 727, 728, 729, 730, 733, 743, 747, 748, 749, 750, 751, 752, 759, 1145, 1190, 1193, 1203, 1214, 1248, 1314, 1337, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1348, 1352, 1353, 1354, 1355, 1357, 1358, 1363, 1364, 1365, 1366, 1370, 1373, 1374, 1377, 1378, 1380, 1387, 1388, 1389, 1390, 1393, 1394, 1395, 1396, 1397, 1412, 1418, 1419, 1420, 1422, 1423, 1425, 1440, 1442, 1453, 1461, 1464, 1467, 1468, 1469, 1470, 1482, 1499, 1501, 1502, 1504, 1508, 1519, 1520, 1526, 1582, 1612, 1613, 1637, 1646, 1649, 1658, 1673, 1688, 1716, 1826, 1870, 1871, 1888, 1897, 1898, 1907, 1914, 1923, 1927, 1943, 1945, 1949], "23456": 23, "clean": [23, 31, 54, 946, 1004, 1868, 1885, 1915], "fcntl": 23, "nf": 23, "init": [23, 31, 33, 46, 1192, 1425, 1433, 1452, 1645, 1869, 1875, 1893, 1898, 1903, 1904, 1944], "brand": [23, 1898], "succe": [23, 28, 40, 44, 51, 1896, 1898, 1910, 1956, 1958], "unexpect": [23, 30, 54, 965, 1116, 1118, 1121, 1192, 1425, 1647, 1666, 1806, 1870, 1893, 1898, 1907, 1945, 1946, 1949], "unsuccess": 23, "mnt": 23, "sharedfil": 23, "port": [23, 31, 39, 40, 41, 1902], "backend_str": 23, "uppercas": 23, "classmethod": [23, 40, 55, 57, 719, 725, 726, 727, 732, 733, 743, 751, 779, 780, 781, 802, 803, 804, 811, 841, 968, 1368, 1369, 1464, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1662, 1873, 1874, 1898, 1918, 1923, 1929, 1957], "register_backend": [23, 1923, 1942], "extended_api": 23, "instanti": [23, 27, 39, 40, 41, 46, 54, 828, 1369, 1516, 1614, 1638, 1645, 1868, 1870, 1872, 1873, 1896, 1898, 1904, 1911, 1929], "3rd": [23, 29, 40, 604, 1697, 1894], "processgroup": [23, 25, 27, 46, 1605], "four": [23, 1237, 1354, 1898, 1901, 1923, 1925], "c10d": [23, 31, 39, 41, 43, 1605, 1897, 1913], "distributedbackendopt": 23, "get_backend": [23, 40], "get_rank": [23, 46, 1464], "uniqu": [23, 31, 37, 40, 41, 42, 500, 504, 1183, 1227, 1228, 1232, 1238, 1239, 1241, 1250, 1252, 1254, 1255, 1292, 1299, 1792, 1815, 1848, 1868, 1870, 1879, 1882, 1898, 1915, 1917, 1923, 1924, 1925, 1927, 1932, 1941, 1958], "get_world_s": 23, "filestor": [23, 40], "hashstor": 23, "client": [23, 27, 40, 1022, 1915, 1946], "host_nam": 23, "hostnam": [23, 31, 40, 1917], "listen": 23, "is_mast": 23, "300": [23, 31, 1269, 1342, 1642, 1644, 1914], "wait_for_work": 23, "multi_ten": 23, "underli": [23, 25, 27, 29, 31, 44, 46, 51, 54, 85, 299, 314, 365, 388, 390, 460, 461, 462, 463, 470, 486, 507, 511, 544, 545, 546, 600, 735, 744, 865, 968, 1162, 1166, 1192, 1263, 1324, 1567, 1731, 1835, 1849, 1870, 1873, 1888, 1896, 1900, 1902, 1916, 1923, 1929, 1931, 1938, 1945, 1949], "tcpserver": 23, "master_listen_fd": 23, "server_stor": 23, "127": [23, 781, 1887, 1918, 1932], "1234": [23, 40, 1169], "client_stor": 23, "first_kei": 23, "first_valu": 23, "hashmap": 23, "file_nam": [23, 1868, 1882, 1915], "store1": 23, "store2": 23, "prefixstor": 23, "old": [23, 30, 54, 841, 1116, 1365, 1649, 1657, 1697, 1745, 1867, 1869, 1870, 1893, 1896, 1898, 1910, 1918, 1932, 1945, 1949], "whose": [23, 29, 44, 46, 54, 531, 846, 882, 929, 952, 1053, 1065, 1070, 1118, 1136, 1145, 1148, 1154, 1192, 1208, 1216, 1262, 1278, 1280, 1326, 1425, 1605, 1653, 1707, 1765, 1832, 1873, 1893, 1898, 1901, 1915, 1927, 1932, 1934, 1944, 1956], "quantiti": [23, 47, 52, 1227, 1228, 1255, 1391, 1622, 1623, 1625, 1626, 1628, 1631, 1632, 1633, 1634, 1697, 1899, 1901], "compare_set": 23, "arg2": 23, "expected_valu": 23, "desired_valu": 23, "second_valu": 23, "overload": [23, 54, 604, 1664, 1872, 1873, 1877, 1912], "bad_kei": 23, "num_kei": 23, "written": [23, 33, 51, 903, 1024, 1362, 1661, 1683, 1870, 1872, 1880, 1881, 1893, 1897, 1898, 1899, 1904, 1909, 1911, 1915, 1917, 1929, 1932, 1938, 1944, 1948, 1950, 1955, 1956], "destruct": [23, 1883, 1923, 1925], "delete_kei": 23, "successfulli": [23, 31, 37, 1198, 1758, 1885, 1904, 1909, 1923, 1956], "set_timeout": 23, "grain": [23, 845, 848, 1574, 1893, 1911, 1927, 1938, 1948, 1956], "plai": 23, "new_group": [23, 46, 1464], "opaqu": [23, 30, 966, 1000, 1001, 1116, 1952], "pattern": [23, 25, 779, 780, 781, 783, 841, 848, 1008, 1362, 1641, 1793, 1870, 1873, 1893, 1896, 1898, 1900, 1902, 1909, 1919, 1920, 1927, 1941, 1944, 1945, 1955, 1958], "use_local_synchron": 23, "enqueu": [23, 53, 969, 971, 972, 1896, 1924], "significantli": [23, 46, 889, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1757, 1927, 1942], "taken": [23, 29, 53, 54, 55, 60, 852, 1086, 1088, 1111, 1112, 1348, 1361, 1369, 1432, 1508, 1516, 1762, 1795, 1891, 1893, 1895, 1896, 1898, 1900, 1903, 1909, 1911, 1915, 1917, 1956, 1958], "get_group_rank": 23, "global_rank": [23, 31], "translat": [23, 1145, 1893, 1925, 1949], "get_global_rank": 23, "group_rank": [23, 31, 41], "get_process_group_rank": 23, "dst": [23, 1868, 1915], "destin": [23, 25, 34, 37, 46, 197, 403, 404, 590, 980, 981, 1134, 1192, 1298, 1299, 1425, 1660, 1661, 1871, 1923, 1924, 1929], "unspecifi": [23, 468, 807, 808, 809, 812, 895, 896, 1458, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1794, 1800, 1880, 1927, 1932], "sender": [23, 1925], "isend": 23, "irecv": 23, "is_complet": 23, "finish": [23, 25, 31, 37, 38, 40, 42, 53, 1122, 1896, 1897, 1910, 1917, 1923, 1925, 1958], "batch_isend_irecv": 23, "p2p_op_list": 23, "p2pop": 23, "op_list": 23, "send_tensor": 23, "recv_tensor": 23, "send_op": 23, "recv_op": 23, "req": 23, "pg": [23, 1605], "set_devic": [23, 25, 46, 1605, 1753, 1869, 1923, 1930], "p2p": [23, 40], "async_op": 23, "onto": [23, 46, 54, 55, 57, 1027, 1199, 1202, 1263, 1617, 1851, 1868, 1885, 1896, 1899, 1900, 1904, 1917, 1949, 1955, 1958], "get_futur": [23, 1605], "regard": [23, 1356, 1357, 1358, 1368, 1369, 1515, 1516, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1870, 1925, 1927, 1950], "add_": [23, 44, 49, 51, 209, 475, 1122, 1871, 1886, 1894, 1927], "101": [23, 1333], "overwrot": 23, "sent": [23, 25, 1004, 1873, 1885, 1906, 1923, 1924, 1925], "broadcast_object_list": 23, "object_list": 23, "picklabl": [23, 1192, 1425, 1915], "current_devic": [23, 25, 46, 977, 985, 986, 993, 994, 1010, 1014, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1041, 1042, 1043, 1853, 1869, 1930], "insecur": [23, 1263], "malici": [23, 1263, 1915], "ineffici": [23, 46, 1896, 1918], "redoptyp": 23, "bitwis": [23, 911, 913, 914, 916, 1874, 1907, 1919, 1935], "reduceop": 23, "int64": [23, 72, 179, 196, 301, 309, 381, 852, 910, 923, 1066, 1079, 1080, 1117, 1507, 1638, 1724, 1728, 1729, 1749, 1797, 1798, 1799, 1801, 1802, 1896, 1927, 1929, 1930, 1933, 1959], "1j": [23, 685, 950, 951, 1188, 1737, 1738, 1858, 1893, 1901, 1909], "2j": [23, 685, 950, 951, 1737, 1738, 1765, 1858, 1893], "tensor_list": [23, 1888], "all_gather_into_tensor": 23, "output_tensor": 23, "input_tensor": [23, 1948], "accommod": [23, 1421, 1422, 1423], "ii": [23, 953, 1065, 1395, 1396], "tensor_in": 23, "tensor_out": 23, "tensor_out2": 23, "all_gather_object": 23, "obj": [23, 54, 867, 989, 1178, 1179, 1198, 1203, 1745, 1854, 1871, 1909, 1910, 1915], "pickabl": 23, "popul": [23, 29, 38, 46, 53, 54, 323, 482, 490, 491, 1292, 1321, 1896, 1898, 1945, 1955], "responsibl": 23, "gather_object": 23, "gather_list": 23, "object_gather_list": 23, "scatter_list": 23, "tensor_s": 23, "t_one": 23, "t_five": 23, "scatter_object_list": 23, "scatter_object_output_list": 23, "scatter_object_input_list": 23, "output_list": 23, "input_list": 23, "reduce_scatter_tensor": 23, "Its": [23, 54, 957, 980, 1192, 1239, 1257, 1258, 1283, 1425, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1858, 1873, 1897], "all_to_all_singl": 23, "output_split_s": 23, "input_split_s": 23, "dim": [23, 28, 29, 44, 51, 52, 54, 55, 62, 63, 100, 102, 103, 104, 106, 122, 123, 124, 172, 192, 195, 198, 199, 200, 201, 202, 203, 217, 221, 248, 252, 269, 300, 301, 302, 303, 304, 305, 309, 310, 342, 368, 380, 395, 397, 398, 399, 402, 416, 417, 418, 419, 423, 424, 440, 449, 457, 466, 478, 479, 481, 492, 493, 499, 500, 501, 502, 503, 504, 505, 506, 524, 525, 528, 529, 531, 534, 539, 540, 542, 547, 552, 560, 565, 566, 570, 571, 572, 574, 575, 577, 592, 593, 596, 597, 598, 599, 602, 604, 680, 682, 683, 684, 686, 861, 862, 863, 890, 891, 893, 926, 933, 948, 956, 965, 980, 982, 1044, 1045, 1046, 1047, 1048, 1057, 1063, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1105, 1123, 1133, 1134, 1145, 1155, 1163, 1164, 1165, 1166, 1169, 1213, 1223, 1224, 1244, 1248, 1258, 1260, 1261, 1271, 1279, 1289, 1291, 1292, 1294, 1297, 1299, 1313, 1320, 1321, 1322, 1323, 1324, 1325, 1333, 1360, 1361, 1362, 1365, 1369, 1371, 1376, 1391, 1396, 1415, 1431, 1432, 1433, 1458, 1460, 1472, 1474, 1475, 1506, 1507, 1523, 1526, 1535, 1543, 1548, 1549, 1550, 1559, 1560, 1562, 1564, 1568, 1574, 1580, 1581, 1589, 1605, 1613, 1619, 1623, 1625, 1632, 1633, 1646, 1649, 1652, 1704, 1711, 1714, 1734, 1735, 1740, 1741, 1746, 1747, 1748, 1751, 1752, 1783, 1786, 1787, 1791, 1794, 1796, 1803, 1806, 1808, 1809, 1810, 1811, 1814, 1826, 1830, 1831, 1832, 1833, 1836, 1837, 1845, 1846, 1847, 1848, 1849, 1856, 1857, 1861, 1862, 1869, 1870, 1871, 1887, 1888, 1899, 1900, 1909, 1911, 1913, 1927, 1928, 1930, 1936, 1944, 1951], "13": [23, 862, 933, 1063, 1066, 1110, 1145, 1155, 1196, 1281, 1349, 1373, 1374, 1422, 1459, 1519, 1520, 1787, 1830, 1862, 1870, 1874, 1913, 1927, 1943, 1950, 1956], "14": [23, 55, 62, 63, 309, 504, 932, 1008, 1009, 1048, 1063, 1155, 1244, 1250, 1319, 1349, 1422, 1713, 1720, 1787, 1830, 1831, 1836, 1862, 1870, 1874, 1913, 1927, 1931, 1932, 1943], "15": [23, 54, 604, 1063, 1135, 1145, 1155, 1214, 1228, 1349, 1422, 1423, 1642, 1644, 1705, 1778, 1787, 1834, 1862, 1870, 1871, 1874, 1911, 1927], "uneven": [23, 24, 27, 1605], "18": [23, 309, 432, 672, 1066, 1145, 1189, 1264, 1422, 1664, 1870, 1911, 1913, 1927, 1943], "21": [23, 29, 672, 929, 1048, 1250, 1713, 1836, 1870, 1927], "22": [23, 29, 309, 604, 1264, 1596, 1642, 1644, 1870, 1908, 1927, 1943], "23": [23, 500, 1264, 1773, 1870, 1927, 1956], "31": [23, 915, 1340, 1420, 1596, 1773, 1911], "33": [23, 725, 726, 727, 728, 729, 730, 759, 1192, 1353, 1354, 1355, 1357, 1358, 1423, 1425, 1499, 1501, 1502, 1504, 1870, 1911], "34": [23, 1943, 1949, 1956], "35": [23, 1250, 1344, 1345, 1389, 1390, 1464, 1713], "36": [23, 309, 1108, 1145, 1943, 1949], "input_split": 23, "output_split": 23, "5j": 23, "6j": 23, "7j": 23, "8j": 23, "9j": 23, "10j": 23, "11j": 23, "12j": 23, "13j": 23, "14j": 23, "15j": 23, "16j": 23, "output_tensor_list": 23, "input_tensor_list": 23, "monitored_barri": [23, 1913], "wait_all_rank": 23, "band": 23, "bor": 23, "bxor": 23, "premul_sum": 23, "suppos": [23, 54, 1189, 1698, 1880, 1927, 1945, 1946, 1947], "_make_nccl_premul_sum": 23, "all_reduce_multigpu": 23, "__members__": 23, "reduce_op": 23, "mention": [23, 1868, 1872, 1873, 1887, 1893, 1896, 1904, 1911, 1927, 1931, 1938, 1949, 1950, 1956], "revisit": 23, "broadcast_multigpu": 23, "reduce_multigpu": 23, "all_gather_multigpu": 23, "reduce_scatter_multigpu": 23, "distributed_test": 23, "dev_idx": 23, "src_tensor": 23, "resid": [23, 46, 53, 184, 277, 325, 1263, 1605, 1896, 1916, 1923], "dst_tensor": 23, "cpp_extens": [23, 1869, 1898], "cpp_c10d_extens": 23, "torchrun": [23, 26, 32, 39, 43], "benefici": [23, 1904], "nproc_per_nod": [23, 32], "num_gpus_you_hav": 23, "your_training_script": [23, 39, 41], "arg3": 23, "192": [23, 604, 1911], "168": 23, "nnode": [23, 39, 41], "offer": [23, 46, 49, 1605, 1850, 1896, 1902, 1915, 1923, 1927, 1942, 1946, 1951], "local_process_rank": 23, "local_rank": [23, 31, 33, 38, 41, 43, 1464], "argpars": [23, 41, 1896], "parser": [23, 41, 1896], "argumentpars": [23, 41, 1896], "add_argu": [23, 41, 1896], "parse_arg": [23, 32, 41, 43, 1896, 1911], "output_devic": [23, 27, 41, 1362, 1464, 1589, 1605], "adjust": [23, 25, 27, 29, 46, 1869, 1895, 1919, 1958], "launcher": [23, 41], "filesystem": [23, 25, 967, 1868, 1915], "12042": 23, "imagenet": [23, 1891], "inconsist": [23, 46, 852, 1729, 1898], "suit": [23, 1870, 1872, 1873, 1911, 1919, 1923, 1953], "group_gloo": 23, "29501": 23, "monitoredbarri": 23, "transport": [23, 1923], "598": 23, "2401": 23, "db00": 23, "eef0": 23, "1100": 23, "3560": 23, "1c05": 23, "25d": 23, "8594": 23, "torch_cpp_log_level": 23, "twolinlayernet": 23, "ddp": [23, 24, 25, 27, 28, 46, 1464, 1605, 1869, 1896, 1897, 1923, 1946], "i0607": 23, "739390": 23, "515217": 23, "logger": [23, 1936, 1937], "173": 23, "broadcast_buff": [23, 1605], "bucket_cap_byt": 23, "26214400": 23, "find_unused_paramet": [23, 1605, 1897], "gradient_as_bucket_view": [23, 1605], "is_multi_device_modul": 23, "num_parameter_tensor": 23, "total_parameter_size_byt": 23, "440": 23, "bucket_s": 23, "cuda_visible_devic": [23, 1034, 1605, 1896], "module_nam": [23, 54, 804, 841, 1915], "nccl_ib_timeout": 23, "nccl_nthread": 23, "58": [23, 1950], "085681": 23, "544067": 23, "344": 23, "unused_parameter_s": 23, "40838608": 23, "5983335": 23, "4326421": 23, "comp": [23, 29], "4207652": 23, "085693": 23, "544066": 23, "42850427": 23, "3885553": 23, "2357981": 23, "2234674": 23, "enhanc": [23, 46, 1605, 1944], "unus": [23, 27, 54, 894, 1004, 1018, 1197, 1203, 1387, 1605, 1666, 1870, 1872, 1873, 1896, 1897, 1902, 1915], "constraint": [23, 28, 44, 46, 55, 64, 65, 781, 782, 889, 1000, 1011, 1127, 1605, 1613, 1638, 1684, 1869, 1873, 1888, 1899, 1901, 1904, 1927, 1941, 1944], "went": [23, 54], "wasn": [23, 1263, 1870], "va": 23, "lue": 23, "indirectli": 23, "outstand": [23, 1923], "stuck": [23, 31, 42], "uninform": 23, "root": [23, 25, 33, 40, 41, 44, 46, 54, 780, 1130, 1229, 1230, 1681, 1744, 1804, 1881, 1893, 1915, 1923, 1924, 1927, 1946], "nontrivi": [23, 1896, 1944], "reveal": [23, 1897], "default_pg": 23, "opt": [23, 27, 1203, 1685, 1686, 1692, 1696, 1698, 1870, 1901, 1944], "longtensor": [23, 122, 123, 124, 303, 305, 307, 439, 458, 500, 502, 504, 861, 862, 1134, 1166, 1213, 1315, 1368, 1369, 1428, 1515, 1516, 1561, 1651, 1749, 1787, 1800, 1825, 1833, 1864, 1930, 1933], "set_debug_level": 23, "set_debug_level_from_env": 23, "get_debug_level": 23, "torch_show_cpp_stacktrac": 23, "disterror": 23, "distbackenderror": 23, "thrown": [23, 28, 53, 604, 865, 867, 1022, 1063, 1155, 1192, 1222, 1231, 1233, 1235, 1238, 1239, 1250, 1425, 1609, 1663, 1862, 1915, 1949], "distnetworkerror": 23, "ex": [23, 32, 1605, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1883, 1955], "diststoreerror": 23, "outlin": [24, 1916, 1924, 1946], "joinabl": [24, 27, 1605, 1869], "joinhook": [24, 1869], "throw_on_early_termin": [24, 1605], "shadow": [24, 27, 1605, 1936, 1937], "notify_join_context": 24, "zeroredundancyoptim": [24, 27, 1605, 1869], "01": [24, 27, 42, 475, 742, 767, 808, 809, 1066, 1108, 1411, 1539, 1540, 1596, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1715, 1769, 1771, 1772, 1777, 1778, 1871, 1891, 1903, 1911, 1914, 1951], "yet": [24, 31, 46, 51, 53, 54, 68, 70, 71, 968, 1039, 1195, 1197, 1209, 1297, 1605, 1619, 1623, 1625, 1670, 1671, 1869, 1872, 1873, 1879, 1887, 1888, 1896, 1911, 1913, 1918, 1923, 1925, 1927, 1928, 1930, 1941, 1945, 1946, 1949, 1952, 1956], "vacuou": 24, "inherit": [24, 1630, 1870, 1872, 1888, 1898, 1904, 1906], "join_hook": [24, 27, 1605], "join_devic": 24, "join_process_group": 24, "repeatedli": [24, 1896, 1927], "main_hook": 24, "post_hook": 24, "is_last_join": 24, "dcp": 25, "reshard": [25, 28, 46], "storag": [25, 46, 209, 299, 327, 330, 331, 422, 445, 470, 486, 507, 511, 545, 546, 571, 572, 574, 575, 865, 882, 884, 989, 1056, 1162, 1166, 1178, 1192, 1199, 1263, 1285, 1324, 1325, 1362, 1425, 1731, 1745, 1752, 1783, 1788, 1792, 1806, 1829, 1835, 1851, 1868, 1869, 1871, 1882, 1885, 1893, 1896, 1906, 1909, 1915, 1923, 1927, 1930, 1931, 1933, 1941, 1945], "entrypoint": [25, 28, 31, 33, 38, 41, 1885], "storage_read": 25, "coordinator_rank": 25, "no_dist": 25, "planner": 25, "spmd": 25, "style": [25, 28, 30, 54, 864, 1060, 1116, 1651, 1680, 1870, 1872, 1873, 1911, 1915, 1932, 1947], "fullfil": 25, "shardedtensor": [25, 46], "po": [25, 1911], "storageread": [25, 1869], "rank0": [25, 46], "my_model": [25, 1605, 1870, 1911, 1941, 1946, 1956], "mymodul": [25, 44, 46, 54, 1196, 1197, 1198, 1202, 1203, 1209, 1426, 1427, 1435, 1436, 1870, 1872, 1873, 1900, 1909, 1923], "adagrad": [25, 1368, 1880, 1914, 1923], "model_state_dict": [25, 1660, 1911], "fs_storage_read": 25, "filesystemread": [25, 1869], "save_state_dict": [25, 1869], "storage_writ": 25, "fsdp": [25, 28, 46, 1869, 1946], "shardingstrategi": [25, 46, 1869], "hybrid_shard": [25, 46], "shard_group": 25, "storagewrit": [25, 1869], "fs_storage_writ": 25, "filesystemwrit": [25, 1869], "act": [25, 29, 31, 38, 51, 845, 1342, 1426, 1427, 1436, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629, 1631, 1632, 1633, 1634, 1635, 1850, 1896, 1904, 1908, 1914, 1949], "told": [25, 1872], "role": [25, 31, 32, 40, 41, 1949], "read_metadata": 25, "set_up_storage_read": 25, "prepare_local_plan": 25, "prepare_global_plan": 25, "read_data": 25, "central": [25, 55, 1145, 1901, 1903], "loadplan": [25, 1869], "storage_data": 25, "loadplann": [25, 1869], "load_byt": 25, "bytesio": [25, 44, 1199, 1202, 1263, 1745, 1911, 1918], "resolve_tensor": 25, "storagelay": 25, "schedul": [25, 31, 33, 39, 53, 667, 1681, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1879, 1897, 1903, 1917, 1946], "is_coordin": 25, "set_up_storage_writ": 25, "write_data": 25, "mark": [25, 40, 53, 54, 55, 60, 63, 813, 884, 885, 942, 1306, 1307, 1605, 1665, 1870, 1872, 1893, 1897, 1898, 1904, 1909, 1915, 1917, 1924, 1933, 1938, 1946, 1947], "recover": 25, "writeresult": 25, "saveplan": [25, 1869], "saveplann": [25, 1869], "resolve_data": 25, "assumpt": [25, 37, 41, 44, 895, 942, 1348, 1379, 1893, 1897, 1901, 1923, 1924, 1927, 1944, 1946, 1952, 1956], "writeitem": [25, 1869], "tensor_data": 25, "set_up_plann": 25, "create_local_plan": 25, "create_global_plan": 25, "commit_tensor": 25, "defaultloadplann": [25, 1869], "rewrit": [25, 44, 51, 55, 57, 62, 63, 70, 71, 1881, 1893, 1901, 1911, 1943], "requit": 25, "intrincaci": 25, "renameplann": 25, "original_state_dict": 25, "foo_": [25, 1122], "v": [25, 37, 44, 50, 54, 474, 475, 531, 882, 889, 891, 892, 893, 923, 1121, 1131, 1133, 1189, 1205, 1227, 1231, 1255, 1259, 1264, 1431, 1473, 1474, 1515, 1560, 1644, 1649, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1703, 1736, 1796, 1800, 1815, 1816, 1861, 1869, 1870, 1871, 1872, 1873, 1883, 1893, 1901, 1910, 1915, 1927, 1932, 1940], "read_item": 25, "dest_index": 25, "fqn": [25, 28, 44, 1937], "metamodelmateri": 25, "defaultsaveplann": [25, 1869], "empty_lik": [25, 1850, 1871, 1875, 1886, 1888, 1913, 1927], "global_plan": 25, "finish_plan": 25, "central_plan": 25, "alia": [25, 29, 34, 79, 80, 99, 175, 176, 341, 394, 423, 424, 431, 510, 528, 669, 853, 854, 855, 856, 857, 858, 859, 876, 935, 948, 949, 1051, 1058, 1061, 1072, 1073, 1074, 1076, 1077, 1103, 1138, 1146, 1147, 1159, 1160, 1161, 1170, 1190, 1192, 1218, 1219, 1226, 1242, 1246, 1249, 1277, 1287, 1288, 1298, 1316, 1318, 1328, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1425, 1535, 1608, 1638, 1654, 1700, 1705, 1708, 1743, 1766, 1781, 1784, 1786, 1813, 1817, 1818, 1837, 1843, 1865, 1873, 1898, 1913, 1928, 1929, 1933, 1945, 1951], "readitem": [25, 1869], "planner_data": 25, "loaditemtyp": 25, "metadataindex": 25, "dest_offset": 25, "storage_index": 25, "storage_offset": [25, 126, 507, 604, 865, 1871, 1913, 1951], "tandem": 25, "fp16planner": 25, "write_item": 25, "writeitemtyp": 25, "byte_io": 25, "itertool": [25, 29, 925, 938], "islic": 25, "dataclass": [25, 44, 1949, 1955], "ddploadbalancingplann": 25, "all_plan": 25, "saveextradataplann": 25, "merged_data": 25, "new_plan": 25, "idempot": [25, 1923, 1925], "hi": [25, 1395, 1396, 1870, 1872, 1901], "peak": [25, 27, 46, 1014, 1016, 1022, 1029, 1030, 1031, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1689, 1695, 1916, 1953], "late": [25, 40], "tensorwritedata": 25, "nonetyp": [25, 44, 1871, 1873], "single_file_per_rank": 25, "sync_fil": 25, "thread_count": 25, "per_thread_copy_ahead": 25, "10000000": 25, "simplif": [25, 1944], "atom": [25, 40, 54, 1874], "distributedtensor": [25, 28], "flatten_state_dict": 25, "flatten_sharded_tensor": 25, "dedup_replicated_tensor": 25, "lookup_object": 25, "transform_object": 25, "lookup_tensor": 25, "transform_tensor": 25, "fault": [26, 31, 39, 40, 1118], "toler": [26, 31, 39, 40, 54, 681, 895, 896, 1181, 1207, 1208, 1246, 1249, 1264, 1666, 1673, 1870, 1934], "quickstart": 26, "agent": [26, 32, 33, 34, 37, 39, 41, 42, 1923], "expir": 26, "metric": [26, 1014, 1016, 1022, 1697, 1883, 1904, 1917, 1932, 1946, 1953], "kubernet": 26, "distributedoptim": [27, 1605, 1869, 1923, 1924], "rref": [27, 1605, 1869, 1873, 1916, 1924], "optimizer_class": 27, "params_rref": 27, "get_gradi": [27, 1913, 1923, 1924], "multithread": [27, 1896], "dist_autograd": [27, 1605, 1923, 1924], "rpc": [27, 53, 1605, 1869, 1873, 1916, 1924, 1925], "context_id": [27, 1605, 1923, 1924], "rref1": [27, 1923, 1924], "worker1": [27, 53, 1605, 1923, 1924], "rref2": [27, 1923, 1924], "to_her": [27, 1605, 1913, 1923, 1924, 1925], "dist_optim": [27, 1605, 1924], "postlocalsgdoptim": [27, 1869], "afer": 27, "modelaverag": 27, "localsgd": 27, "model_averag": 27, "post_localsgd_hook": 27, "postlocalsgdst": 27, "subgroup": 27, "start_localsgd_it": 27, "warmup_step": 27, "local_optim": 27, "periodicmodelaverag": 27, "intra": [27, 46, 1895, 1897, 1916], "unnecessari": [27, 1645, 1873, 1893, 1896, 1898, 1909, 1915, 1931], "parameters_as_bucket_view": 27, "overlap_with_ddp": 27, "consumpt": [27, 50, 1650, 1927, 1932, 1938], "partit": [27, 28, 1333, 1836, 1911, 1913, 1916, 1924, 1925, 1946, 1955], "registr": [27, 28, 53, 70, 1008, 1598, 1603, 1604, 1605, 1614, 1617, 1664, 1877, 1915, 1942], "offset": [27, 31, 213, 214, 215, 216, 327, 507, 545, 733, 865, 1053, 1054, 1055, 1056, 1118, 1226, 1369, 1516, 1605, 1715, 1716, 1795, 1840, 1842, 1871, 1873, 1943, 1949, 1951], "intact": [27, 1923], "ddp_zero_hook": 27, "disjointli": 27, "trail": [27, 1640, 1642, 1888, 1891, 1894, 1898], "wari": 27, "static_graph": [27, 1605, 1897], "third": [27, 29, 1064, 1065, 1281, 1333, 1340, 1355, 1358, 1420, 1695, 1869, 1870, 1896, 1899, 1904, 1915, 1917], "add_param_group": [27, 1617, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "param_group": [27, 46, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1680, 1681, 1682, 1683, 1684, 1691, 1694], "frozen": [27, 46, 1196, 1201, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1874, 1910], "trainabl": [27, 1011, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1898], "consolidate_state_dict": 27, "consolid": [27, 46, 1916], "pertain": 27, "preced": [27, 31, 46, 667, 1600, 1695, 1835, 1874, 1895, 1914, 1918], "dtensor": [28, 46], "rowwis": 28, "colwis": 28, "pairwis": [28, 29, 1385, 1434, 1473], "parallelize_modul": [28, 1869], "device_mesh": 28, "parallelize_plan": 28, "tp_mesh_dim": 28, "sub_modul": 28, "parallelstyl": 28, "devicemesh": 28, "mesh": [28, 1932], "prepar": [28, 46, 54, 784, 826, 828, 844, 846, 848, 849, 850, 1131, 1201, 1874, 1911, 1936, 1937], "pairwiseparallel": [28, 1869], "finer": [28, 1946], "granular": [28, 46, 68, 1205, 1892, 1954], "rowwiseparallel": [28, 1869], "_prepare_input": 28, "make_input_shard_1d_last_dim": [28, 1869], "_prepare_output": 28, "make_output_tensor": [28, 1869], "colwiseparallel": [28, 1869], "make_input_replicate_1d": [28, 1869], "make_sharded_output_tensor": 28, "megatron": 28, "lm": 28, "arxiv": [28, 29, 1395, 1443, 1444, 1471, 1649, 1703, 1757, 1816, 1893], "ab": [28, 29, 78, 79, 612, 613, 669, 927, 1065, 1223, 1244, 1245, 1247, 1248, 1261, 1264, 1395, 1444, 1471, 1474, 1476, 1564, 1649, 1652, 1697, 1703, 1707, 1757, 1869, 1871, 1873, 1886, 1887, 1888, 1896, 1904, 1913, 1927, 1933, 1941, 1942, 1943, 1946, 1949, 1951, 1956], "1909": [28, 865], "08053": 28, "multiheadattent": [28, 1468, 1470, 1472, 1918], "mlp": [28, 1596, 1918], "sequenceparallel": [28, 1869], "pdf": [28, 1348, 1443, 1778, 1893], "2205": 28, "05198": 28, "expectedli": 28, "make_input_reshard_repl": [28, 1869], "make_input_shard_1d": [28, 1869], "make_output_replicate_1d": [28, 1869], "make_output_reshard_tensor": [28, 1869], "make_output_shard_1d": [28, 1869], "head": [28, 722, 1333, 1431, 1468, 1470, 1472], "compos": [28, 29, 50, 54, 725, 726, 727, 728, 729, 730, 753, 754, 759, 760, 761, 769, 770, 930, 932, 1123, 1125, 1126, 1127, 1133, 1192, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1353, 1354, 1355, 1356, 1357, 1358, 1373, 1374, 1393, 1394, 1413, 1418, 1419, 1420, 1425, 1473, 1478, 1479, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1499, 1500, 1501, 1502, 1503, 1504, 1519, 1520, 1542, 1545, 1546, 1548, 1549, 1550, 1718, 1719, 1861, 1869, 1870, 1873, 1886, 1898, 1899, 1904, 1911, 1915, 1932, 1949, 1951, 1952], "fullyshardeddataparallel": [28, 1869], "enable_2d_with_fsdp": [28, 1869], "pre_dp_module_transform": [28, 1869], "dp": 28, "preforward": 28, "parameteriz": 29, "tensorflow": [29, 1681, 1893, 1932], "backpropag": [29, 896, 1682, 1713, 1900, 1938], "surrog": 29, "likelihood": [29, 1333, 1379, 1432, 1439, 1521, 1559, 1567], "ratio": [29, 31, 604, 1373, 1374, 1519, 1520, 1871, 1927, 1953], "reinforc": [29, 1454, 1577], "polici": [29, 31, 33, 46, 1689, 1695], "reparameter": [29, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1636, 1637, 1649], "trick": [29, 891, 1342, 1526, 1893, 1901, 1903], "autoencod": 29, "whilst": [29, 1896], "densiti": [29, 289, 1153, 1154, 1778, 1871, 1928], "log_prob": [29, 1333, 1348, 1508, 1871], "theta": [29, 1489, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1871], "alpha": [29, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 139, 140, 300, 301, 475, 541, 548, 549, 550, 551, 672, 673, 676, 677, 678, 731, 757, 762, 907, 1008, 1009, 1149, 1163, 1337, 1347, 1367, 1413, 1452, 1490, 1498, 1513, 1514, 1524, 1542, 1575, 1667, 1681, 1774, 1775, 1788, 1793, 1807, 1812, 1813, 1871, 1893, 1898, 1911, 1914, 1946, 1951], "partial": [29, 31, 40, 46, 49, 54, 828, 1011, 1055, 1132, 1145, 1238, 1239, 1240, 1282, 1421, 1422, 1423, 1551, 1552, 1553, 1605, 1624, 1663, 1789, 1795, 1873, 1874, 1887, 1893, 1898, 1901, 1911, 1925, 1934, 1952], "pi": [29, 161, 365, 685, 917, 1149, 1150, 1243, 1375, 1439, 1522, 1567, 1687, 1688, 1707, 1769, 1770, 1773, 1774, 1775, 1776, 1811, 1872, 1873, 1915, 1928], "reward": 29, "ascent": 29, "prob": [29, 1871], "policy_network": 29, "next_stat": 29, "rsampl": 29, "parameter": [29, 365, 441, 1198, 1889, 1927], "has_rsampl": 29, "batch_shap": 29, "event_shap": 29, "validate_arg": 29, "arg_constraint": 29, "cdf": 29, "cumul": [29, 1044, 1045, 1046, 1047, 1048, 1271, 1343, 1344, 1345, 1375, 1398, 1399, 1400, 1464, 1522], "mass": 29, "enumerate_support": 29, "discret": [29, 45, 468, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1100, 1102, 1526, 1778, 1932, 1935], "cardin": [29, 1293], "univari": 29, "singleton": [29, 242, 1397, 1849, 1894], "cartesian": [29, 925, 1293, 1707], "_instanc": 29, "icdf": 29, "perplex": 29, "sample_shap": 29, "sample_n": 29, "set_default_validate_arg": 29, "mimic": [29, 1695], "stddev": 29, "varianc": [29, 957, 1343, 1344, 1345, 1370, 1379, 1388, 1389, 1390, 1398, 1399, 1400, 1407, 1408, 1409, 1464, 1517, 1521, 1680, 1681, 1717, 1726, 1727, 1856, 1857, 1891, 1904], "exp_famili": 29, "famili": 29, "p_": [29, 929, 1283, 1683], "langl": 29, "rangl": 29, "denot": [29, 54, 957, 1212, 1231, 1237, 1250, 1260, 1353, 1354, 1391, 1614, 1617, 1683, 1797, 1798, 1799, 1801, 1802, 1858, 1901, 1921, 1924, 1927], "carrier": 29, "analyt": [29, 895, 896, 1515, 1927], "bregman": 29, "courtesi": 29, "frank": 29, "nielsen": 29, "richard": 29, "nock": 29, "logit": [29, 379, 1342, 1361, 1497, 1507, 1526, 1871, 1913, 1928], "70": [29, 1250, 1713, 1888], "odd": [29, 1086, 1087, 1088, 1096, 1097, 1098, 1499, 1500, 1501], "lower_bound": 29, "upper_bound": 29, "has_enumerate_support": 29, "param_shap": 29, "concentration1": 29, "concentration0": 29, "concentr": 29, "1046": 29, "1st": [29, 1894], "2nd": [29, 604, 1433, 1459, 1562, 1894], "greaterthan": 29, "total_count": 29, "71": 29, "trial": 29, "integergreaterthan": 29, "ldot": [29, 1223, 1231, 1262, 1278, 1293, 1397, 1418, 1419, 1420, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "dimension": [29, 500, 502, 867, 873, 874, 875, 918, 925, 937, 1053, 1055, 1056, 1065, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1099, 1100, 1102, 1104, 1106, 1107, 1118, 1145, 1154, 1155, 1156, 1224, 1229, 1230, 1231, 1232, 1257, 1262, 1278, 1286, 1293, 1333, 1350, 1351, 1352, 1361, 1362, 1368, 1369, 1397, 1415, 1432, 1446, 1447, 1448, 1449, 1450, 1451, 1458, 1460, 1464, 1480, 1481, 1482, 1507, 1559, 1562, 1594, 1595, 1612, 1651, 1720, 1797, 1798, 1799, 1800, 1801, 1802, 1811, 1826, 1829, 1830, 1836, 1873, 1888, 1891, 1894, 1901, 1907, 1927, 1929, 1930, 1933, 1935, 1944], "unnorm": [29, 1361, 1497, 1507, 1526], "likewis": [29, 1835], "25": [29, 483, 573, 574, 575, 927, 1153, 1259, 1264, 1371, 1428, 1430, 1433, 1596, 1605, 1642, 1644, 1673, 1695, 1714, 1855, 1870, 1927, 1928], "independentconstraint": 29, "simplex": 29, "loc": [29, 1263], "lorentz": 29, "3214": 29, "width": [29, 766, 772, 845, 1152, 1153, 1154, 1339, 1340, 1354, 1355, 1357, 1358, 1394, 1419, 1420, 1432, 1459, 1477, 1535, 1593, 1887, 1927], "df": 29, "chi": 29, "continuous_bernoulli": 29, "lim": [29, 1189], "499": 29, "501": 29, "2538": [29, 1223], "pervas": 29, "loaiza": 29, "ganem": 29, "cunningham": 29, "jp": 29, "1907": 29, "06845": 29, "8954": 29, "greaterthaneq": 29, "df1": 29, "df2": 29, "fisher": 29, "snedecor": 29, "2453": 29, "degre": [29, 957, 1042, 1049, 1192, 1229, 1230, 1425, 1434, 1473, 1605, 1721, 1741, 1809, 1810, 1856, 1857, 1871, 1901, 1913, 1927], "freedom": [29, 957, 1809, 1810, 1856, 1857, 1901], "0124": 29, "half_cauchi": 29, "half_norm": 29, "base_distribut": 29, "reinterpreted_batch_ndim": 29, "reinterpret": [29, 486, 1945], "diagon": [29, 51, 212, 248, 582, 583, 584, 585, 918, 953, 957, 1052, 1053, 1054, 1056, 1065, 1078, 1126, 1127, 1137, 1221, 1233, 1235, 1238, 1250, 1254, 1564, 1574, 1795, 1834, 1838, 1839, 1840, 1841, 1842, 1871, 1898, 1913, 1931], "multivari": [29, 1928], "multivariate_norm": 29, "mvn": 29, "scale_tril": 29, "diag": [29, 52, 1125, 1126, 1127, 1227, 1228, 1255, 1703, 1795, 1815, 1816, 1871, 1913], "diagn": 29, "1729": [29, 1904], "lkj_choleski": 29, "lkj": 29, "matric": [29, 248, 673, 676, 907, 919, 920, 929, 930, 931, 932, 1053, 1137, 1212, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1264, 1272, 1281, 1283, 1296, 1376, 1434, 1489, 1523, 1612, 1617, 1701, 1703, 1713, 1762, 1788, 1792, 1793, 1815, 1816, 1838, 1839, 1841, 1871, 1886, 1901, 1907, 1927, 1933], "eta": [29, 1667, 1669, 1682], "proport": [29, 1393, 1394, 1431, 1472], "det": [29, 1229, 1230, 1251, 1272, 1871, 1913], "l": [29, 722, 747, 908, 917, 923, 930, 931, 1065, 1149, 1150, 1192, 1211, 1221, 1222, 1227, 1228, 1229, 1230, 1234, 1238, 1239, 1281, 1283, 1338, 1341, 1342, 1343, 1353, 1361, 1364, 1365, 1372, 1377, 1385, 1386, 1388, 1391, 1392, 1395, 1407, 1416, 1418, 1425, 1427, 1431, 1432, 1440, 1456, 1473, 1474, 1476, 1574, 1623, 1632, 1640, 1642, 1673, 1749, 1811, 1871, 1873, 1893, 1932, 1956], "lkjcorr": 29, "onion": 29, "3x3": [29, 1048, 1836], "3516": 29, "9361": 29, "1899": [29, 1294], "4748": 29, "8593": 29, "vine": 29, "2009": [29, 1703, 1816], "lewandowski": 29, "dorota": 29, "kurowicka": 29, "harri": [29, 1778], "joe": 29, "journal": [29, 1720], "1016": 29, "jmva": 29, "04": [29, 1108, 1269, 1771, 1778], "008": 29, "corrcholeski": 29, "log_norm": [29, 1913], "lowrank_multivariate_norm": 29, "cov_factor": 29, "cov_diag": 29, "covari": [29, 920, 953, 957, 1343, 1344, 1345, 1464, 1703], "covariance_matrix": 29, "2102": 29, "5429": [29, 1838], "woodburi": 29, "lemma": 29, "formula": [29, 76, 755, 756, 876, 878, 908, 917, 1149, 1150, 1217, 1283, 1284, 1439, 1492, 1493, 1581, 1683, 1716, 1898, 1901, 1917, 1922, 1927, 1944], "capacit": 29, "precision_matrix": 29, "mixture_same_famili": 29, "mixture_distribut": 29, "component_distribut": 29, "rightmost": [29, 920, 1153, 1154, 1873], "gaussian": [29, 1375, 1379, 1454, 1521, 1522, 1577, 1777, 1928], "gmm": 29, "bivari": 29, "categori": [29, 33, 72, 1315, 1873, 1875, 1911, 1914, 1917, 1919, 1930, 1950, 1952], "innermost": [29, 54, 221, 1145, 1154, 1749], "1338": 29, "mathbf": [29, 1212, 1613, 1646, 1649, 1682], "sigma": [29, 161, 365, 747, 1342, 1376, 1377, 1378, 1395, 1396, 1454, 1455, 1523, 1577, 1613, 1646, 1772, 1809, 1810, 1856, 1857, 1871], "triangular": [29, 930, 931, 932, 1221, 1222, 1228, 1230, 1238, 1239, 1246, 1249, 1250, 1252, 1254, 1564, 1689, 1713, 1838, 1839, 1840, 1841, 1842], "decomposit": [29, 54, 69, 930, 1137, 1221, 1222, 1227, 1228, 1229, 1230, 1231, 1233, 1238, 1239, 1240, 1241, 1246, 1250, 1251, 1255, 1256, 1281, 1283, 1612, 1701, 1703, 1707, 1713, 1815, 1816, 1869, 1907, 1944, 1945, 1955], "positivedefinit": 29, "lowercholeski": 29, "negative_binomi": 29, "halfopeninterv": 29, "mu": [29, 365, 1681, 1683], "one_hot_categor": 29, "onehot": 29, "5623": 29, "nonneg": [29, 1474, 1703, 1816, 1928], "pmf": 29, "mathrm": [29, 909, 1229, 1230, 1231, 1232, 1243, 1343, 1344, 1345, 1380, 1388, 1389, 1390, 1397, 1434, 1439, 1464, 1612, 1670, 1671, 1672, 1682, 1717, 1893, 1928], "relaxed_bernoulli": 29, "temperatur": [29, 1526, 1869], "parametr": [29, 1121, 1614, 1621, 1646, 1647, 1649, 1889, 1898], "relax": [29, 966, 1000, 1207, 1208, 1617, 1918, 1946], "reparametriz": 29, "99": [29, 1203, 1681, 1870], "2951": [29, 1291], "3442": 29, "8918": 29, "9021": 29, "maddison": 29, "2017": [29, 1468, 1470, 1472, 1796, 1910], "reparametr": [29, 1526, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1629, 1649], "jang": 29, "relaxed_categor": 29, "1294": [29, 930], "2324": [29, 1192, 1425], "3859": 29, "2523": 29, "student": 29, "transformed_distribut": 29, "composit": [29, 51, 1125, 1239, 1612, 1870, 1873, 1899, 1904, 1911], "basedistribut": 29, "dx": [29, 1048, 1341, 1836, 1871, 1898, 1899, 1928], "dy": 29, "logist": [29, 1454, 1457, 1577, 1928], "sigmoidtransform": 29, "affinetransform": 29, "invert": [29, 54, 932, 1183, 1223, 1232, 1233, 1239, 1245, 1252, 1254, 1257, 1258, 1272, 1421, 1422, 1423, 1838, 1871, 1907, 1923], "3418": 29, "upper": [29, 44, 169, 170, 171, 581, 782, 918, 923, 930, 931, 932, 934, 1079, 1080, 1152, 1153, 1221, 1222, 1228, 1230, 1238, 1239, 1250, 1254, 1443, 1564, 1572, 1573, 1689, 1695, 1713, 1728, 1749, 1838, 1841, 1842, 1871, 1891, 1913, 1928, 1934], "von_mis": 29, "circular": [29, 1353, 1354, 1355, 1401, 1402, 1403, 1562], "von": 29, "mise": 29, "unconstrain": [29, 1617], "angl": [29, 742, 871, 1049, 1272, 1411, 1707, 1721, 1765, 1869, 1871, 1913, 1927], "9777": 29, "radian": [29, 685, 871, 1049, 1721, 1871, 1913], "nichola": 29, "simul": [29, 475, 786, 788, 1918, 1921, 1944], "1979": 29, "152": [29, 604], "157": 29, "4784": [29, 1296], "symmetr": [29, 789, 807, 908, 917, 930, 931, 932, 1086, 1087, 1088, 1093, 1095, 1099, 1100, 1102, 1149, 1150, 1211, 1221, 1222, 1227, 1228, 1230, 1234, 1235, 1236, 1243, 1246, 1249, 1255, 1264, 1612, 1617, 1695, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1918, 1921], "x_ij": 29, "wu": [29, 1264], "chu": 29, "2018": [29, 1264, 1711], "sawyer": 29, "2007": 29, "anderson": 29, "w": [29, 52, 138, 747, 876, 878, 880, 886, 894, 908, 917, 957, 1123, 1134, 1149, 1150, 1189, 1231, 1331, 1332, 1339, 1340, 1342, 1344, 1345, 1349, 1354, 1355, 1361, 1365, 1366, 1368, 1369, 1370, 1377, 1389, 1390, 1397, 1408, 1409, 1419, 1420, 1430, 1431, 1432, 1437, 1438, 1459, 1475, 1476, 1478, 1479, 1489, 1497, 1515, 1516, 1524, 1559, 1565, 1566, 1613, 1646, 1649, 1871, 1886, 1887, 1891, 1893, 1898, 1901, 1914, 1915, 1932, 1954], "2003": 29, "ed": [29, 51, 1364, 1365, 1893, 1915, 1954, 1957], "odel": 29, "feiveson": 29, "1966": 29, "samplecovari": 29, "jasa": 29, "61": 29, "313": 29, "199": 29, "203": [29, 604], "ku": 29, "bloomfield": 29, "2010": [29, 1891], "ox": 29, "max_try_correct": 29, "bartlett": [29, 908], "singular": [29, 1223, 1237, 1238, 1244, 1246, 1248, 1249, 1255, 1256, 1264, 1272, 1281, 1613, 1617, 1703, 1815, 1816, 1907], "accordingli": [29, 54, 1201, 1395, 1617, 1888, 1923, 1952], "kl_diverg": 29, "kullback": [29, 1391, 1536], "leibler": [29, 1391, 1536], "notimplementederror": [29, 1915, 1949], "register_kl": 29, "type_p": 29, "type_q": 29, "kl_normal_norm": 29, "ambigu": [29, 54, 1177, 1356, 1357, 1358, 1372, 1421, 1422, 1423, 1477, 1873], "runtimewarn": 29, "basep": 29, "derivedq": 29, "kl_version1": 29, "derivedp": 29, "baseq": 29, "kl_version2": 29, "tie": 29, "abstransform": 29, "cache_s": [29, 1949], "event_dim": 29, "pointwis": [29, 939, 1126, 1127, 1269, 1270, 1391, 1886, 1894, 1945, 1948, 1950], "affin": [29, 46, 459, 460, 461, 462, 463, 736, 738, 739, 740, 789, 1343, 1344, 1345, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1464, 1489, 1896, 1904], "cattransform": 29, "tseq": 29, "functor": [29, 1008, 1009], "submatrix": 29, "x0": [29, 1948], "t0": [29, 44, 1145, 1667, 1872], "exptransform": 29, "identity_transform": 29, "composetransform": 29, "corrcholeskytransform": 29, "uncontrain": 29, "euclidean": [29, 927, 1560], "x_i": [29, 51, 934, 1044, 1045, 1046, 1047, 1260, 1267, 1415, 1434, 1458, 1460, 1473, 1544, 1580, 1710, 1794, 1809, 1810, 1836, 1856, 1857, 1858, 1928], "stickbreakingtransform": 29, "r_i": 29, "tanh": [29, 564, 747, 752, 782, 872, 1375, 1377, 1378, 1395, 1396, 1424, 1440, 1442, 1466, 1522, 1554, 1586, 1871, 1886, 1887, 1891, 1913, 1920, 1927, 1951], "unsign": [29, 1921, 1930, 1933, 1934], "z_i": 29, "s_i": 29, "y_i": [29, 934, 1044, 1045, 1046, 1047, 1260, 1267, 1473, 1836, 1858, 1901], "sqrt": [29, 54, 365, 536, 660, 661, 747, 953, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1158, 1211, 1293, 1343, 1344, 1345, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1375, 1377, 1378, 1380, 1388, 1389, 1390, 1393, 1394, 1395, 1396, 1397, 1410, 1412, 1440, 1442, 1464, 1522, 1574, 1617, 1668, 1669, 1670, 1671, 1674, 1680, 1681, 1717, 1744, 1777, 1809, 1810, 1871, 1886, 1891, 1892, 1893, 1913, 1927, 1928, 1934, 1951], "cumulativedistributiontransform": 29, "copula": 29, "base_dist": 29, "independenttransform": 29, "base_transform": 29, "log_abs_det_jacobian": 29, "lowercholeskytransform": 29, "positivedefinitetransform": 29, "powertransform": 29, "expon": [29, 256, 257, 268, 455, 456, 1108, 1115, 1215, 1245, 1333, 1413, 1560, 1710, 1720, 1757, 1871, 1930, 1933, 1951], "reshapetransform": 29, "in_shap": 29, "out_shap": 29, "softplustransform": 29, "tanhtransform": 29, "softmaxtransform": 29, "biject": 29, "hmc": 29, "stacktransform": 29, "stick": 29, "aris": [29, 54, 1893, 1944], "primarili": [29, 53, 802, 803, 804, 810, 1325, 1883, 1918], "memoiz": [29, 1945], "_call": 29, "_invers": 29, "codomain": [29, 1893], "iff": [29, 1431], "weaker": [29, 1896], "pseudoinvers": [29, 1232, 1249, 1257], "monoton": [29, 1424, 1554, 1749], "forward_shap": 29, "inverse_shap": 29, "corr_choleski": 29, "greater_than": 29, "greater_than_eq": 29, "integer_interv": 29, "less_than": 29, "lower_choleski": 29, "lower_triangular": 29, "nonnegative_integ": 29, "one_hot": [29, 1871, 1913], "positive_integ": 29, "positive_semidefinit": 29, "positive_definit": 29, "real_vector": 29, "unit_interv": 29, "is_discret": 29, "constrain": [29, 1461, 1873, 1904], "_cat": 29, "dependent_properti": 29, "_dependentproperti": 29, "_greaterthan": 29, "_greaterthaneq": 29, "_independentconstraint": 29, "_integerinterv": 29, "_interv": 29, "half_open_interv": 29, "_halfopeninterv": 29, "_lessthan": 29, "_multinomi": 29, "_stack": [29, 1913], "constraintregistri": 29, "biject_to": 29, "transform_to": 29, "overparameter": 29, "rotat": [29, 1741, 1815], "hamiltonian": 29, "mont": 29, "carlo": 29, "invari": [29, 44, 1638, 1790, 1797, 1798, 1799, 1800, 1801, 1802, 1925, 1927, 1941, 1955], "potential_energi": 29, "cheap": [29, 1333], "svi": 29, "fewer": [29, 51, 680, 682, 683, 686, 933, 1212, 1213, 1279, 1289, 1291, 1292, 1294, 1297, 1320, 1323, 1379, 1506, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1711, 1796, 1809, 1810, 1814, 1832, 1856, 1857, 1879, 1894, 1909, 1934, 1958], "my_constraint": 29, "my_transform": 29, "myconstraintclass": 29, "my_factori": 29, "mytransform": 29, "param1": [29, 1904], "param2": [29, 1904], "constraint_registri": 29, "my_registri": 29, "construct_transform": 29, "myconstraint": 29, "from_dlpack": [30, 867, 1869], "ext_tensor": [30, 1116], "extern": [30, 969, 1116, 1207, 1853, 1883, 1895, 1896, 1907, 1911, 1938], "immut": [30, 1116, 1873], "__dlpack__": [30, 1116], "capsul": [30, 867, 1116], "ndarrai": [30, 445, 866, 1116, 1117, 1797, 1798, 1799, 1800, 1801, 1802, 1829, 1911, 1932, 1934], "pycapsul": [30, 1116], "to_dlpack": [30, 1116, 1869], "t2": [30, 674, 675, 867, 1116, 1145, 1605, 1923, 1924, 1946, 1956], "dltensor": [30, 1116], "t3": [30, 1116, 1924], "legaci": [30, 41, 1526, 1917, 1930], "idiomat": 30, "inde": [30, 1870, 1880, 1915, 1925, 1949, 1952], "plane": [31, 40, 725, 726, 727, 728, 729, 730, 753, 754, 755, 756, 759, 760, 761, 769, 770, 1053, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1353, 1354, 1355, 1356, 1357, 1358, 1373, 1374, 1393, 1394, 1397, 1413, 1418, 1419, 1420, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1519, 1520, 1542, 1545, 1546, 1548, 1549, 1550, 1649, 1718, 1719, 1741], "monitor": [31, 41, 42, 74, 968, 1303, 1697, 1869, 1896, 1902], "unhealthi": 31, "tear": 31, "react": [31, 1952], "decentr": 31, "diagram": [31, 40, 1192, 1425, 1918, 1925, 1943, 1946, 1956], "elasticag": 31, "deploy": [31, 40, 1869, 1947], "quad": [31, 1341, 1342, 1361, 1392, 1416, 1432, 1474], "group_result": 31, "is_fail": [31, 32], "exit_cod": 31, "return_valu": [31, 32, 38, 1943], "get_worker_group": 31, "workergroup": [31, 41], "mutabl": [31, 1207, 1870, 1915, 1932], "implementor": 31, "defens": 31, "retri": [31, 33, 42, 1022, 1923, 1925], "max_restart": [31, 32, 41], "runresult": 31, "workerspec": [31, 32, 41, 42], "local_world_s": [31, 32, 41], "rdzv_handler": [31, 32, 40], "monitor_interv": [31, 32], "local_addr": [31, 40], "tee": [31, 38], "blueprint": 31, "spec": [31, 32, 42, 55, 780, 781, 806, 807, 808, 811, 812, 813, 1920], "homogen": [31, 41], "rendezvoushandl": [31, 32, 40, 41], "rdzv": [31, 39, 41], "chose": [31, 1892, 1944], "consol": [31, 34, 37, 38, 41, 1932], "get_entrypoint_nam": 31, "__qualname__": 31, "workerst": 31, "unknown": [31, 1607, 1608, 1925], "unrecover": 31, "interrupt": [31, 1885, 1954], "succeed": [31, 40, 1281, 1946], "termin": [31, 40, 42, 54, 1673, 1885, 1923, 1948], "uncaught": [31, 33], "unhandl": 31, "recov": [31, 882, 1086, 1251, 1283, 1605, 1638, 1811, 1892, 1896, 1900, 1901, 1919], "is_run": 31, "role_rank": [31, 41], "role_world_s": [31, 41], "pid": [31, 33, 41, 42, 1464, 1900, 1917], "local_elastic_ag": 31, "localelasticag": [31, 32, 42], "start_method": [31, 32, 38, 42, 1885], "exit_barrier_timeout": 31, "log_dir": [31, 38, 1883, 1932], "inter": [31, 33, 46, 1142, 1760, 1895, 1897, 1916, 1923], "safeti": [31, 54, 941, 942, 1870, 1873, 1887, 1947], "advis": [31, 531, 604, 852, 1906], "pipe": [31, 42, 1869, 1923], "torchelastic_enable_file_tim": 31, "torchelastic_timer_fil": 31, "shared_queu": 31, "get_context": [31, 42, 1906], "nproc_per_process": 31, "foobar": [31, 33, 37, 38], "other_param": [31, 42], "usr": [31, 38, 40, 1896], "bin": [31, 38, 40, 288, 289, 806, 910, 1152, 1153, 1154, 1871, 1873, 1913, 1932, 1953], "simpleelasticag": 31, "scaffold": 31, "_assign_worker_rank": 31, "group_world_s": 31, "_exit_barri": 31, "guard": [31, 44, 55, 60, 63, 667, 939, 1879, 1906, 1913, 1915, 1935, 1938, 1946, 1952, 1956, 1957], "_initialize_work": 31, "worker_group": 31, "fresh": [31, 1056, 1752, 1783, 1868], "start_work": 31, "_stop_work": 31, "optimist": 31, "deleg": 31, "_monitor_work": 31, "_rendezv": 31, "_restart_work": 31, "_shutdown": 31, "death_sig": 31, "sigterm": 31, "_start_work": 31, "gracefulli": [31, 41, 51, 1222, 1899], "meaning": [31, 33, 34, 1022, 1896, 1950], "canon": [31, 33, 1870, 1942, 1945], "meaningless": 31, "intention": [31, 1062, 1858, 1902, 1923], "ship": [32, 1122, 1895, 1923], "programmat": [32, 54, 1904], "my_launch": 32, "argv": [32, 43], "trainer_entrypoint_fn": 32, "fn_arg": 32, "run_result": 32, "tricki": [32, 47, 52, 1893, 1904, 1925, 1941], "myrendezvoushandl": 32, "elastic_ag": 32, "servic": [32, 1897, 1944], "metrichandl": [32, 37], "mymetrichandl": 32, "metric_data": [32, 37], "metricdata": 32, "sink": [32, 37, 1883], "eventhandl": 32, "cloudwatch": 32, "nulleventhandl": 32, "myeventhandl": 32, "sub": [33, 46, 53, 55, 58, 62, 63, 549, 801, 848, 849, 1203, 1207, 1208, 1289, 1292, 1294, 1437, 1438, 1468, 1469, 1471, 1734, 1813, 1830, 1868, 1870, 1871, 1886, 1888, 1893, 1906, 1911, 1913, 1927, 1930, 1951, 1955], "invalid": [33, 38, 942, 1192, 1315, 1425, 1892, 1893, 1911, 1915, 1916, 1945, 1949], "infra": [33, 1955], "start_process": [33, 38, 1885], "torchelastic_error_fil": 33, "smallest": [33, 928, 1213, 1223, 1244, 1248, 1264, 1712, 1833, 1934, 1956, 1959], "timestamp": [33, 34, 37, 41, 1883, 1917, 1932, 1956], "error_handl": 33, "sugar": [33, 1872], "get_error_handl": 33, "childfailederror": 33, "get_first_failur": 33, "dump_error_fil": 33, "error_fil": [33, 38], "exitcod": [33, 41], "nanni": 33, "accur": [33, 968, 1145, 1267, 1303, 1367, 1720, 1836, 1896, 1924, 1938, 1945], "diagnost": [33, 67, 68, 69, 70, 71, 74, 667, 1658, 1660, 1869, 1870], "torchelastic_ag": 33, "trainer_0": 33, "trainer_1": 33, "json": [33, 38, 42, 1903, 1917, 1950, 1954], "trainer_n": 33, "errorhandl": 33, "record_except": 33, "processfailur": 33, "test_ev": 34, "eventsourc": 34, "get_logging_handl": 34, "millisecond": [34, 37, 968, 1303, 1883], "eventmetadatavalu": 34, "readm": [35, 36, 779, 1888], "telemetri": 37, "timeseri": 37, "metric_group": 37, "metric_nam": 37, "sensibl": 37, "my_modul": [37, 46, 54, 1870, 1915], "nullmetricshandl": 37, "consolemetricshandl": 37, "my_method": 37, "put_metr": 37, "calculate_lat": 37, "succinctli": 37, "baz": [37, 54, 841, 1915, 1934], "leaf_modul": 37, "classnam": [37, 1873], "threw": [37, 1958], "my_app": 37, "consolemetrichandl": 37, "toi": [37, 1956], "stdout": [37, 38, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1911], "stdoutmetrichandl": 37, "1574213883": 37, "4182858": 37, "my_metr": 37, "1574213940": 37, "5237644": 37, "nullmetrichandl": 37, "class_nam": [37, 54], "def_nam": 37, "leaf": [37, 138, 210, 323, 435, 475, 490, 491, 778, 825, 827, 866, 880, 1131, 1665, 1829, 1888, 1892, 1893, 1911, 1937, 1945], "metric_valu": 37, "metric_group_nam": 37, "popen": 38, "stderr": [38, 1868, 1882], "err": 38, "echo": 38, "hello": [38, 51, 1872, 1911, 1915], "pcontext": 38, "multiprocesscontext": 38, "subprocesscontext": 38, "keyset": 38, "bitmask": 38, "mask": [38, 387, 388, 389, 390, 391, 531, 722, 895, 896, 1285, 1337, 1348, 1370, 1431, 1468, 1469, 1470, 1471, 1472, 1517, 1574, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1684, 1869, 1871, 1886, 1887, 1927], "miss": [38, 676, 1121, 1192, 1286, 1296, 1359, 1388, 1389, 1390, 1425, 1541, 1647, 1898, 1910, 1911, 1927, 1947, 1949], "bar0": 38, "bar1": 38, "file1": 38, "file2": 38, "caution": [38, 1947], "short": [38, 54, 721, 750, 1065, 1189, 1348, 1395, 1396, 1508, 1662, 1762, 1811, 1872, 1886, 1893, 1894, 1904, 1923, 1929, 1930, 1933], "ing": 38, "cmd": [38, 41], "forkserv": [38, 1605, 1885, 1906], "tee_stdout": 38, "tee_stderr": 38, "processcontext": [38, 1885], "superset": [38, 41], "runprocsresult": 38, "num_nod": [39, 41], "trainers_per_nod": 39, "num_allowed_failur": 39, "job_id": [39, 40, 41], "endpoint": [39, 40, 41], "host_node_addr": [39, 41], "min_siz": [39, 41], "num_allowed_failures_or_membership_chang": 39, "node1": [39, 41], "29400": [39, 41], "sidecar": [39, 40], "agre": [40, 1250, 1925], "resum": [40, 1689, 1695, 1697, 1923, 1925, 1932], "retryabl": 40, "announc": 40, "previous": [40, 44, 46, 47, 50, 51, 52, 54, 209, 685, 779, 780, 1133, 1199, 1809, 1810, 1856, 1857, 1861, 1870, 1894, 1896, 1904, 1915, 1916, 1922, 1923, 1928, 1949, 1952, 1958], "lose": [40, 43, 46, 179, 196, 1887], "train_loop": [40, 849], "arriv": [40, 41, 1923, 1925], "dynamicrendezvoushandl": 40, "rendezvousbackend": 40, "c10drendezvousbackend": 40, "etcdrendezvousbackend": 40, "supersed": 40, "etcdrendezvoushandl": 40, "my_run_id": 40, "from_backend": 40, "run_id": [40, 41], "min_nod": 40, "max_nod": 40, "rendezvousparamet": 40, "admit": [40, 41, 1896], "get_as_bool": 40, "get_as_int": 40, "rendezvoushandlerregistri": 40, "create_handl": 40, "creator": [40, 1893, 1923, 1925], "get_run_id": 40, "is_clos": 40, "set_clos": 40, "next_rendezv": 40, "rendezvousclosederror": 40, "rendezvousconnectionerror": 40, "rendezvousstateerror": 40, "rendezvoustimeouterror": 40, "num_nodes_wait": 40, "shutdown": [40, 1923, 1924], "rendezvouserror": 40, "dynamic_rendezv": 40, "join_timeout": 40, "600": 40, "last_call_timeout": 40, "close_timeout": 40, "rendezvoustimeout": 40, "get_stat": [40, 76], "fenc": 40, "token": [40, 966, 1000, 1001, 1868, 1874, 1948], "set_stat": [40, 76], "condition": [40, 1759], "last_cal": 40, "heartbeat": 40, "keep_al": 40, "c10d_rendezvous_backend": 40, "create_backend": 40, "store_typ": 40, "tcp": [40, 41, 1923], "read_timeout": 40, "60": [40, 42, 1379, 1699, 1826, 1831, 1883, 1923], "is_host": 40, "cname": 40, "fqdn": [40, 41], "etcd_rendezvous_backend": 40, "ssl_cert": 40, "ssl": 40, "certif": 40, "ssl_cert_kei": 40, "privat": [40, 1896, 1898, 1915, 1941], "ca_cert": 40, "rool": 40, "key_prefix": 40, "ttl": 40, "hour": 40, "etcd_rendezv": 40, "rdzv_impl": 40, "etcdrendezv": 40, "etcd_address": 40, "min_work": 40, "max_work": 40, "noqa": 40, "w605": 40, "2379": [40, 1289], "etcd_prefix": 40, "etcdstor": 40, "etcd_stor": 40, "etcd_client": 40, "etcd_store_prefix": 40, "c10": [40, 1903, 1944], "piggyback": 40, "num": [40, 732, 733, 747, 1315, 1377, 1380, 1395, 1431, 1440, 1468, 1906], "lookuperror": 40, "override_timeout": 40, "etcdserv": 40, "cumbersom": [40, 1873], "highli": [40, 1333, 1605, 1868, 1905, 1911, 1927, 1934], "etcd_serv": 40, "data_dir": 40, "v3": [40, 41], "substitut": [40, 54, 69, 1204, 1893, 1930], "torchelastic_etcd_binary_path": 40, "get_client": 40, "etcd_binary_path": 40, "entry_point": [41, 1942], "migrat": [41, 47, 1293, 1649, 1921], "train_script": 41, "aforment": 41, "suffic": [41, 54], "compliant": [41, 43], "num_train": 41, "wors": [41, 1850], "port_k": 41, "etcd": 41, "v2": [41, 1260, 1702, 1868], "revis": 41, "physic": [41, 221, 1083, 1101, 1874, 1895, 1906, 1927, 1946], "localworkergroup": 41, "rdzv_id": 41, "rdzv_backend": [41, 43], "rdzv_endpoint": [41, 43], "max_nnod": 41, "torchelastic_restart_count": 41, "far": [41, 1201, 1524, 1944], "torchelastic_max_restart": 41, "python_exec": 41, "gang": 41, "departur": 41, "surviv": 41, "kill": [41, 42, 1885, 1900], "frequenc": [41, 910, 957, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1189, 1333, 1368, 1369, 1515, 1516, 1689, 1811, 1955], "ness": [41, 1945], "load_checkpoint": [41, 43], "checkpoint_path": [41, 43], "dataset": [41, 43, 55, 785, 1333, 1342, 1391, 1869, 1900, 1903, 1906, 1910, 1914, 1918, 1919, 1932], "train_step": 41, "should_checkpoint": 41, "save_checkpoint": [41, 43], "acquir": [42, 54, 1904, 1925, 1927], "deadlin": 42, "message_queu": 42, "localtimerserv": 42, "max_interv": 42, "trainer_func": 42, "localtimercli": 42, "expiri": 42, "timer_cli": 42, "countdown": 42, "timefram": [42, 1923], "elig": [42, 1925], "reap": 42, "timerserv": 42, "mp_queue": 42, "daemon": [42, 1885], "filetimerserv": 42, "file_path": 42, "log_ev": [42, 1883], "filetimercli": 42, "fifo": 42, "watchdog": 42, "filetimerrequest": 42, "sigkil": 42, "named_pip": 42, "mkfifo": 42, "timercli": 42, "timerrequest": 42, "scope_id": 42, "expiration_tim": 42, "acquisit": 42, "whatev": [42, 54, 435, 1605, 1753, 1838, 1873, 1899, 1945, 1946], "request_queu": 42, "entiti": [42, 54], "clear_tim": 42, "get_expired_tim": 42, "register_tim": 42, "timer_request": 42, "use_env": 43, "expositori": 43, "worst": [43, 1898], "total_num_epoch": 43, "visit": [43, 1911, 1949, 1950], "shot": 44, "aot": [44, 667, 941, 1879, 1938, 1946, 1947, 1956], "exportedprogram": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 1869], "_export": [44, 55, 57, 62, 63, 64, 65], "register_dataclass_as_pytree_nod": 44, "ordereddict": [44, 1192, 1425, 1426, 1435, 1453, 1596, 1628, 1871, 1904, 1909, 1934, 1949], "ie": 44, "example_input": [44, 804, 805, 848, 849, 1203, 1207, 1918, 1937, 1942, 1943, 1945, 1949], "ep": [44, 699, 700, 701, 702, 703, 704, 710, 711, 723, 724, 736, 738, 739, 740, 741, 782, 806, 807, 808, 809, 812, 813, 895, 896, 1201, 1277, 1329, 1343, 1344, 1345, 1360, 1379, 1380, 1388, 1389, 1390, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1434, 1439, 1464, 1468, 1470, 1472, 1473, 1494, 1506, 1521, 1525, 1526, 1534, 1538, 1560, 1563, 1567, 1590, 1613, 1646, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1697, 1717, 1871, 1898, 1901, 1928, 1951, 1959], "arg0_1": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "placehold": [44, 54, 68, 821, 1387, 1896, 1942, 1943, 1955], "arg1_1": [44, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66], "call_funct": [44, 54, 68, 70, 71, 1942, 1943, 1946, 1949, 1955, 1956], "dynamic_dim": [44, 55, 57, 62, 63, 1869], "higher_ord": [44, 55, 58, 62, 63], "cond": [44, 51, 55, 58, 63, 1907], "spcializ": 44, "domin": [44, 1918], "hint": [44, 55, 64, 65, 667, 966, 1000, 1193, 1431, 1468, 1469, 1470, 1471, 1472, 1870, 1872, 1873, 1896, 1898, 1923, 1944, 1949], "sound": [44, 54, 941, 942, 1453, 1877, 1932, 1947], "constrain_as_s": [44, 55, 64, 65, 1869], "constraint_as_valu": 44, "fatal": [44, 1885, 1906], "specify_constraint": 44, "convent": [44, 46, 54, 323, 928, 1065, 1083, 1085, 1109, 1131, 1343, 1344, 1345, 1388, 1389, 1390, 1464, 1742, 1745, 1844, 1868, 1882, 1888, 1893, 1901, 1904, 1909], "graphmodul": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 846, 847, 848, 849, 1937, 1942, 1943, 1945, 1949, 1955, 1956], "get_attr": [44, 54, 68], "lift": [44, 52, 1133, 1861, 1887, 1913, 1945], "curat": 44, "unbound": 44, "t1": [44, 674, 675, 867, 1145, 1605, 1872, 1923, 1924], "soundli": 44, "wihout": 44, "_dynamo": [44, 55, 65, 939, 1897, 1938, 1941, 1942, 1943, 1944, 1949, 1952, 1954, 1956], "exc": 44, "unsupport": [44, 51, 55, 57, 63, 69, 70, 72, 75, 1870, 1874, 1887, 1912, 1923, 1927, 1949, 1952], "max_1": [44, 54], "_local_scalar_dens": [44, 55, 64, 65, 1913, 1951], "ge": [44, 55, 64, 65, 273, 1147, 1285, 1377, 1382, 1383, 1395, 1528, 1529, 1871, 1886, 1913, 1951], "scalar_tensor": [44, 55, 64, 65, 1871, 1913, 1951], "_assert_async": [44, 55, 64, 65, 1913], "msg": [44, 55, 64, 65, 1025, 1027, 1917, 1934], "le": [44, 55, 64, 65, 348, 1219, 1382, 1383, 1528, 1529, 1871, 1886, 1913, 1934, 1951], "scalar_tensor_1": [44, 55, 64, 65], "_assert_async_1": [44, 55, 64, 65], "sym_constrain_range_for_s": [44, 55, 64, 65, 1871, 1913], "layout": [44, 54, 55, 60, 63, 64, 65, 138, 179, 196, 221, 330, 331, 422, 432, 433, 434, 435, 436, 445, 531, 568, 569, 570, 571, 572, 574, 575, 604, 676, 852, 880, 882, 908, 917, 981, 1066, 1067, 1068, 1078, 1083, 1101, 1119, 1120, 1149, 1150, 1211, 1262, 1278, 1286, 1296, 1325, 1541, 1656, 1657, 1684, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1792, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1835, 1840, 1842, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1875, 1888, 1896, 1913, 1915, 1927, 1932, 1933, 1934, 1951], "illeg": [44, 46, 1896, 1944], "constrain_as_valu": [44, 55, 64, 65, 1869], "aforement": [44, 1896, 1906], "1024": [44, 1895, 1896], "usererror": 44, "f0": 44, "unhint": 44, "sym_constrain_rang": [44, 55, 64, 65, 1871, 1913], "extra_fil": [44, 1199, 1202], "opset_vers": [44, 1664, 1911, 1913], "usabl": [44, 53, 1873, 1911, 1943], "pathlib": 44, "opset": [44, 1664, 1911, 1913, 1942, 1951], "exported_program": 44, "pt2": [44, 1944, 1945], "txt": [44, 1199, 1202, 1915, 1956], "expected_opset_vers": 44, "rb": [44, 1199, 1263], "seek": [44, 1199, 1263, 1915, 1918], "polymorph": [44, 1872], "graph_signatur": 44, "call_spec": 44, "range_constraint": 44, "equality_constraint": 44, "module_call_graph": 44, "exportbackwardsignatur": [44, 1869], "gradients_to_paramet": 44, "gradients_to_user_input": 44, "loss_output": 44, "exportgraphsignatur": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 1869], "user_input": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "user_output": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "inputs_to_paramet": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "inputs_to_buff": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "buffers_to_mut": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "backward_signatur": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "assertion_dep_token": [44, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "gurante": 44, "getattr": [44, 54, 1871, 1898, 1909, 1923, 1949], "parameters_buff": 44, "flattened_user_input": 44, "mutated_input": 44, "flattened_user_output": 44, "custommodul": [44, 825, 1918], "my_paramet": [44, 1872], "register_buff": [44, 1192, 1425, 1598, 1870, 1872, 1898, 1904], "my_buffer1": 44, "my_buffer2": 44, "x2": [44, 55, 61, 927, 1239, 1417, 1473, 1474, 1506, 1563, 1871, 1951], "arg2_1": [44, 55, 58, 60, 61, 62, 63], "arg3_1": [44, 55, 61], "arg4_1": [44, 55, 61], "add_tensor": 44, "mul_tensor": 44, "mul_tensor_1": 44, "add_tensor_1": 44, "add_tensor_2": 44, "l__self___my_paramet": 44, "l__self___my_buffer1": 44, "l__self___my_buffer2": 44, "mangl": 44, "l__self___my_my_buffer1": 44, "argumentkind": [44, 1869], "argumentspec": [44, 1869], "modulecallsignatur": [44, 1869], "in_spec": 44, "_pytre": [44, 55], "treespec": 44, "out_spec": 44, "modulecallentri": [44, 1869], "exportdb": [44, 1869, 1935], "sharding_strategi": 46, "cpu_offload": 46, "auto_wrap_polici": 46, "backward_prefetch": 46, "backwardprefetch": [46, 1869], "backward_pr": [46, 1192, 1425], "mixed_precis": [46, 1605], "ignored_modul": 46, "param_init_fn": 46, "sync_module_st": 46, "forward_prefetch": 46, "limit_all_gath": 46, "use_orig_param": 46, "ignored_st": 46, "inspir": [46, 1673, 1898, 1948], "deepspe": 46, "shorten": 46, "sharded_modul": 46, "0001": [46, 54, 1046, 1236, 1413, 1542, 1667, 1697, 1871, 1914], "stale": 46, "dev_id": 46, "no_sync": [46, 1605], "offload": 46, "ping": 46, "77724": 46, "isol": [46, 54, 1596, 1885, 1916, 1956], "decod": [46, 1263, 1468, 1469, 1470, 1605, 1915], "summon_full_param": 46, "shard_grad_op": 46, "unshard": 46, "full_shard": 46, "with_grad": 46, "reacquir": 46, "gap": [46, 852, 1729, 1869, 1918, 1954], "delai": [46, 1605, 1925, 1946], "nccl_cross_nic": 46, "cpuoffload": [46, 1869], "modulewrappolici": 46, "proceed": [46, 968, 1303, 1379, 1924, 1925], "nonwrapped_numel": 46, "travers": [46, 823, 1605, 1897, 1898, 1924, 1936, 1937, 1949], "subtre": 46, "size_based_auto_wrap_polici": 46, "exce": [46, 1269, 1896, 1906], "100m": 46, "numel": [46, 422, 431, 937, 957, 1096, 1177, 1871, 1886, 1893, 1913, 1927], "custom_auto_wrap_polici": 46, "min_num_param": 46, "1e8": 46, "my_auto_wrap_polici": 46, "functool": [46, 49, 55, 828, 1789, 1898, 1934], "1e5": 46, "mixedprecis": [46, 1869], "meta": [46, 50, 54, 324, 1877, 1911, 1923, 1932, 1934, 1944, 1945, 1947, 1948, 1955], "is_meta": [46, 1913], "reset_paramet": 46, "torchdistx": 46, "deferred_init": 46, "materialize_modul": 46, "my_init_fn": 46, "fsdp_model": 46, "fullstatedictconfig": [46, 1869], "named_paramet": [46, 48, 50, 1121, 1192, 1196, 1425, 1904, 1909], "flatparamet": 46, "unifi": [46, 1869, 1887], "norm_typ": [46, 732, 733, 1368, 1369, 1393, 1394, 1515, 1516, 1545, 1546, 1609, 1871], "infin": [46, 955, 1182, 1184, 1186, 1187, 1319, 1341, 1418, 1419, 1420, 1548, 1549, 1550, 1609, 1672, 1782, 1794, 1927, 1928], "no_shard": 46, "largest": [46, 577, 910, 1109, 1223, 1244, 1246, 1248, 1249, 1264, 1561, 1613, 1833, 1871, 1872, 1873, 1951, 1955, 1959], "promot": [46, 69, 672, 912, 915, 924, 1008, 1060, 1108, 1110, 1111, 1112, 1113, 1314, 1364, 1365, 1366, 1370, 1506, 1712, 1732, 1733, 1739, 1754, 1812, 1873, 1912, 1930, 1934, 1945, 1951], "fp32": [46, 768, 781, 804, 1050, 1605, 1896, 1907, 1918, 1919, 1921, 1948], "flatten_sharded_optim_state_dict": 46, "sharded_optim_state_dict": 46, "shard_full_optim_state_dict": 46, "unflatten": [46, 1871, 1886, 1887, 1913, 1931], "fsdp_modul": 46, "root_onli": 46, "full_optim_state_dict": 46, "optim_input": 46, "rank0_onli": 46, "alias": [46, 882, 1122, 1133, 1535, 1861, 1872, 1873, 1877, 1898, 1945], "get_state_dict_typ": 46, "state_dict_typ": 46, "statedictset": [46, 1869], "optim_state_dict": 46, "assertionerror": [46, 54, 72, 721, 1665, 1934, 1956], "differen": 46, "named_buff": [46, 1192, 1425, 1904, 1909], "intercept": [46, 54, 1898, 1947], "occurr": [46, 390, 1190, 1292, 1638, 1847, 1848, 1944], "oom": [46, 1900, 1958], "statedicttyp": 46, "fulloptimstatedictconfig": [46, 1869], "set_state_dict_typ": 46, "full_state_dict": 46, "save_a_checkpoint": 46, "load_a_checkpoint": 46, "optim_state_dict_to_load": 46, "is_named_optim": 46, "load_directli": 46, "original_osd": 46, "namedoptim": 46, "keyedoptim": 46, "torchrec": [46, 1869], "gossipgrad": [46, 1605], "latter": [46, 674, 778, 1192, 1395, 1425, 1432, 1899, 1904, 1906, 1908], "rekey_optim_state_dict": 46, "optim_state_key_typ": 46, "loadabl": [46, 1868], "wrapped_model": 46, "wrapped_optim": 46, "full_osd": 46, "nonwrapped_model": 46, "nonwrapped_optim": 46, "rekeyed_osd": 46, "optimstatekeytyp": 46, "param_id": 46, "osd": 46, "param_nam": 46, "sharded_osd": 46, "scatter_full_optim_state_dict": 46, "new_model": 46, "new_optim": 46, "remap": [46, 76, 1196, 1199, 1263, 1284, 1868, 1882, 1922], "state_dict_config": 46, "optim_state_dict_config": 46, "descend": [46, 54, 124, 529, 863, 1192, 1255, 1256, 1425, 1787, 1815, 1871, 1951], "transpar": [46, 1897, 1916, 1923, 1925], "sharded_state_dict": 46, "shardedstatedictconfig": [46, 1869], "offload_to_cpu": 46, "optimstatedictconfig": [46, 1869], "param_state_dict": 46, "statedictconfig": [46, 1869], "writeback": 46, "summon": 46, "portion": [46, 1114, 1362, 1456, 1564, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1919, 1947, 1956], "discard": [46, 1189, 1249, 1615, 1868, 1872, 1883], "redundantli": [46, 1892], "materi": [46, 887, 950, 1607, 1608, 1684, 1737, 1738, 1898], "throughput": [46, 1870, 1895], "backward_post": 46, "altogeth": [46, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684], "contend": 46, "volum": [46, 1154], "_hybrid_shard_zero2": 46, "freed": [46, 138, 880, 894, 974, 1022, 1885, 1896, 1902, 1923, 1941, 1958], "param_dtyp": 46, "reduce_dtyp": 46, "buffer_dtyp": 46, "keep_low_precision_grad": 46, "cast_forward_input": 46, "cast_root_forward_input": 46, "_module_classes_to_ignor": 46, "batchnorm": [46, 687, 688, 1130, 1192, 1201, 1425, 1464, 1605, 1881, 1893, 1904, 1914, 1916, 1918, 1920, 1921], "_batchnorm": 46, "kept": [46, 50, 54, 684, 766, 772, 1343, 1344, 1345, 1388, 1389, 1390, 1464, 1535, 1593, 1873, 1885, 1921, 1927], "permit": [46, 1927], "thereaft": 46, "local_state_dict": 46, "upcast": 46, "recast": 46, "offload_param": 46, "use_dtensor": 46, "cfg": 46, "finetun": [46, 1192, 1425], "model_fn": 46, "my_checkpoint": 46, "localstatedictconfig": [46, 1869], "shardedoptimstatedictconfig": [46, 1869], "localoptimstatedictconfig": [46, 1869], "jax": [47, 50, 51, 52, 1893, 1899, 1946], "love": 47, "hear": 47, "vmap": [47, 49, 50, 54, 888, 890, 894, 895, 896, 1123, 1126, 1127, 1129, 1131, 1946], "arbitrarili": [47, 52, 500, 1195, 1489, 1873, 1893, 1898, 1899], "stock": [47, 52], "ensembl": [47, 50, 52, 1131], "maml": [47, 52], "vjp": [47, 50, 51, 876, 877, 1127, 1133, 1861, 1898, 1899], "whirlwind": 47, "tour": 47, "ux": [47, 52, 1949], "jacrev": [48, 50, 51, 890, 1125, 1126, 1899], "functional_cal": [48, 50, 1131, 1946], "running_mean": [49, 1130, 1192, 1343, 1344, 1345, 1388, 1389, 1390, 1398, 1399, 1400, 1407, 1408, 1409, 1425, 1464, 1494, 1534, 1871, 1904, 1909, 1951], "running_var": [49, 1130, 1192, 1343, 1344, 1345, 1388, 1389, 1390, 1398, 1399, 1400, 1407, 1408, 1409, 1425, 1464, 1494, 1534, 1871, 1909, 1951], "groupnorm": [49, 1525], "anywher": [49, 1892], "batchnorm2d": [49, 700, 703, 705, 710, 801, 1201, 1362, 1399, 1494, 1881, 1893, 1904, 1918, 1920], "track_running_stat": [49, 738, 739, 740, 1130, 1343, 1344, 1345, 1388, 1389, 1390, 1398, 1399, 1400, 1407, 1408, 1409, 1464, 1909], "64": [49, 50, 52, 939, 1126, 1127, 1131, 1330, 1331, 1332, 1334, 1335, 1336, 1342, 1453, 1574, 1750, 1852, 1888, 1910, 1911, 1918, 1922, 1927, 1930, 1932, 1933, 1948], "resnet": [49, 1868, 1870, 1872, 1904, 1915, 1932, 1936], "regnet": 49, "norm_lay": 49, "resnet18": [49, 54, 1868, 1870, 1872, 1882, 1915, 1954], "num_group": [49, 736, 1380, 1525, 1871], "attach": [49, 53, 54, 127, 699, 700, 701, 702, 703, 704, 705, 706, 707, 717, 718, 719, 720, 780, 825, 827, 851, 1596, 1868, 1870, 1872, 1886, 1893, 1898, 1918, 1924, 1936, 1944], "fragil": 49, "replace_all_batch_norm_modules_": 49, "upstream": [50, 1910], "reflect": [50, 445, 507, 543, 1117, 1118, 1121, 1189, 1353, 1354, 1355, 1401, 1402, 1403, 1446, 1447, 1448, 1524, 1562, 1647, 1698, 1811, 1870, 1871, 1900, 1931, 1941], "coupl": [50, 69, 1870, 1903, 1924, 1941, 1955], "jvp": [50, 51, 877, 881, 882, 883, 887, 1129, 1898], "jacfwd": [50, 51, 890, 1125, 1899], "carefulli": [50, 53, 1899, 1915, 1945, 1947], "make_functional_with_buff": 50, "hurri": 50, "gist": [50, 780, 1901, 1949, 1950], "emul": [50, 786, 1874, 1898], "fmodel": 50, "compute_loss": [50, 52, 1121, 1123], "predict": [50, 1333, 1342, 1379, 1507, 1914, 1932], "And": [50, 784, 811, 1044, 1045, 1121, 1192, 1213, 1289, 1294, 1348, 1425, 1851, 1853, 1893, 1898, 1899, 1910, 1911, 1918, 1937, 1942, 1947, 1948, 1949], "argnum": [50, 1123, 1124, 1125, 1126, 1127], "stack_module_st": 50, "num_model": [50, 1131], "in_featur": [50, 707, 715, 716, 719, 720, 743, 751, 1131, 1192, 1333, 1410, 1412, 1425, 1596, 1612, 1613, 1645, 1646, 1649, 1904], "out_featur": [50, 707, 715, 716, 719, 720, 743, 751, 1131, 1192, 1346, 1410, 1412, 1425, 1596, 1612, 1613, 1645, 1646, 1649, 1904], "base_model": 50, "deepcopi": [50, 1918, 1937], "clearer": [50, 1248, 1684, 1898, 1912], "call_single_model": 50, "aotautograd": [50, 667, 1879, 1897, 1945, 1946, 1947, 1956], "stori": [50, 1901], "grad_x": [51, 1899], "has_aux": [51, 1123, 1124, 1126, 1127, 1128, 1132], "mental": [51, 1122], "absenc": 51, "unbind": [51, 1133, 1861, 1869, 1871, 1886, 1913, 1931], "presenc": [51, 54, 1201, 1320, 1906, 1915, 1927, 1952], "pop": [51, 1026, 1426, 1435, 1913, 1916, 1917, 1949], "lst": 51, "in_dim": [51, 52, 879, 1123, 1133, 1861, 1899], "batchedtensor": 51, "batched_tensor_input": 51, "new_": [51, 1896, 1933], "new_zero": [51, 1871, 1913], "new_empti": [51, 1871, 1913], "diag_emb": [51, 1055, 1227, 1228, 1255, 1815, 1871, 1913], "vec": [51, 95, 96, 411, 677, 1317, 1648, 1871, 1927, 1951], "copy_": [51, 209, 1122, 1477, 1870, 1871, 1886, 1896, 1929], "arithmet": [51, 912, 915, 929, 1247, 1739, 1874, 1883, 1886, 1887, 1907, 1918, 1930], "extra_arg": 51, "theoret": 51, "custom_dot": 51, "lax": 51, "while_loop": 51, "is_nonzero": [51, 1871, 1913, 1927], "rag": 51, "unclear": [51, 604], "add_nois": 51, "prng": 51, "cos_x": [52, 1123], "co": [52, 55, 59, 60, 62, 63, 64, 65, 189, 622, 623, 670, 917, 939, 1008, 1123, 1126, 1127, 1132, 1149, 1150, 1243, 1359, 1360, 1363, 1687, 1688, 1695, 1707, 1769, 1770, 1773, 1774, 1775, 1776, 1778, 1797, 1798, 1799, 1801, 1802, 1871, 1886, 1913, 1914, 1927, 1932, 1934, 1942, 1948, 1951], "neg_sin_x": [52, 1123], "hide": [52, 1133, 1861, 1899], "simpler": [52, 1133, 1861, 1870, 1893, 1898, 1901, 1904], "feature_s": [52, 1123, 1133, 1861], "feature_vec": [52, 1123, 1133, 1861], "mseloss": [52, 1123, 1386, 1456, 1555, 1896, 1897], "grad_weight_per_exampl": [52, 1123], "cotang": [52, 1132], "vjp_fn": [52, 1132], "out_tang": 52, "hessian0": 52, "hessian1": 52, "hess": [52, 1125], "encapsul": [53, 54, 1663, 1923, 1941], "rpc_async": [53, 1873, 1913, 1923, 1925], "add_done_callback": 53, "fut": [53, 1195, 1605, 1895, 1923], "set_result": [53, 1605, 1923], "haven": [53, 1904], "set_except": 53, "baseexcept": 53, "valueerror": [53, 55, 72, 1190, 1617, 1618, 1638, 1641, 1660, 1664, 1898, 1916, 1934, 1955], "slow_set_futur": 53, "sleep": 53, "cb1": 53, "cb2": 53, "dedic": [53, 1896], "pool": [53, 753, 754, 755, 756, 769, 770, 966, 1000, 1001, 1011, 1022, 1300, 1301, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1373, 1374, 1393, 1394, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1519, 1520, 1545, 1546, 1548, 1549, 1550, 1718, 1719, 1869, 1895, 1896, 1898, 1904, 1906, 1920, 1923, 1941], "didn": [53, 1898, 1910, 1914], "cb_fut": 53, "chain_cb_fut": 53, "cb": [53, 1923], "held": [53, 966, 990, 1018, 1302, 1892, 1948], "collect_al": [53, 1869], "fut0": 53, "fut1": [53, 1923], "fut_list": 53, "wait_al": [53, 1869], "toolkit": 54, "clamp": [54, 174, 175, 786, 789, 935, 1198, 1341, 1379, 1524, 1535, 1593, 1871, 1881, 1886, 1911, 1913, 1918, 1920, 1921, 1928, 1934, 1951], "symbolic_trac": 54, "num_us": 54, "call_modul": [54, 68, 1955], "call_method": [54, 68, 1942, 1943, 1949], "feed": [54, 1870, 1900, 1904, 1936, 1945], "fake": [54, 72, 699, 700, 701, 702, 703, 704, 705, 706, 707, 717, 718, 719, 780, 786, 787, 797, 799, 825, 848, 849, 1079, 1080, 1660, 1911, 1915, 1918, 1921, 1938], "theses": 54, "callsit": 54, "constitut": 54, "tracer_class": 54, "gm": [54, 1942, 1943, 1945, 1949, 1955, 1956], "treatment": 54, "topk": [54, 1871, 1886, 1913, 1951], "print_tabular": [54, 1942, 1943, 1949], "opcod": [54, 1915, 1942, 1943, 1949], "linear_weight": 54, "add_1": [54, 55, 58, 60, 62, 63, 1122], "linear_1": 54, "relu_1": 54, "sum_1": [54, 1942, 1943], "topk_1": 54, "pose": [54, 1924], "explor": [54, 67, 1868, 1893, 1904, 1915, 1958], "edit": [54, 1915, 1931], "lint": 54, "inserting_aft": [54, 1955], "new_nod": 54, "replace_all_uses_with": [54, 1955], "tediou": 54, "unwieldi": 54, "conv": [54, 689, 690, 691, 692, 693, 694, 695, 696, 697, 779, 780, 783, 801, 841, 847, 1192, 1201, 1207, 1208, 1353, 1354, 1355, 1356, 1357, 1358, 1425, 1426, 1432, 1881, 1891, 1896, 1907, 1911, 1918, 1919, 1920, 1921, 1950, 1952], "fusion": [54, 779, 801, 847, 848, 939, 1194, 1200, 1205, 1206, 1207, 1208, 1881, 1904, 1918, 1946, 1948, 1955, 1956], "machineri": [54, 1898], "imagin": [54, 1923, 1947], "requisit": 54, "relu_decomposit": 54, "decomposition_rul": 54, "constitu": [54, 1888], "new_graph": 54, "graphappendingtrac": 54, "proxy_arg": 54, "output_proxi": 54, "node_copi": 54, "ari": [54, 1911], "unari": [54, 1126, 1127, 1468, 1470, 1472, 1874, 1886], "organiz": 54, "shapeprop": 54, "mod": [54, 708, 709, 719, 725, 726, 727, 732, 733, 743, 751, 797, 798, 799, 800, 823, 824, 851, 1121, 1195, 1196, 1201, 1208, 1647, 1854, 1872, 1873, 1915, 1936, 1942, 1956], "named_modul": [54, 1192, 1425, 1904], "args_it": 54, "load_arg": 54, "map_arg": 54, "fetch_attr": 54, "target_atom": 54, "attr_itr": 54, "hasattr": [54, 1851, 1871, 1898, 1918, 1949], "referenc": [54, 969, 1192, 1425, 1838, 1872, 1893, 1911, 1923, 1949], "nonexist": [54, 1872, 1873], "elif": [54, 1198, 1391, 1660, 1872, 1873, 1902, 1949, 1955], "self_obj": 54, "encompass": 54, "prove": [54, 1885], "disprov": 54, "led": [54, 1958], "auxiliari": [54, 1123, 1124, 1126, 1127, 1128, 1132, 1868, 1903], "nondeterminist": [54, 301, 303, 309, 486, 502, 504, 910, 1066, 1067, 1068, 1213, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1421, 1422, 1423, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1516, 1524, 1535, 1562, 1574, 1593, 1594, 1595, 1756, 1850, 1942], "unord": [54, 1426, 1435], "nondetermin": [54, 896, 1908], "dedupl": [54, 1911], "straightforward": [54, 1880, 1888, 1904, 1914, 1927, 1942, 1949], "torchvis": [54, 1868, 1869, 1870, 1872, 1911, 1915, 1918, 1932, 1936, 1954], "transformed_resnet18": 54, "input_imag": 54, "224": [54, 848, 849, 1870, 1872, 1911, 1954], "margin": [54, 1359, 1385, 1417, 1428, 1430, 1473, 1474, 1505, 1532, 1547, 1556, 1590, 1591, 1871, 1932], "commut": 54, "toolbox": 54, "tradit": [54, 1472], "luckili": 54, "my_pass": 54, "my_module_transform": 54, "input_valu": 54, "prompt": [54, 1868, 1910], "set_trac": [54, 1197, 1203, 1209, 1870], "examin": [54, 1904, 1911, 1917, 1958], "undergon": 54, "subclassm": 54, "untrac": 54, "pre_trac": 54, "post_trac": 54, "sake": 54, "tabular": [54, 667, 1879], "transform_graph": 54, "session": 54, "luck": 54, "input_nod": 54, "stepwis": 54, "breakpoint": [54, 1873, 1955], "excel": [54, 1947], "onlin": [54, 1669], "realpython": 54, "pycharm": 54, "vscode": 54, "graphic": [54, 1884, 1910, 1954], "parlanc": 54, "func_to_trac": 54, "dyn": 54, "155": 54, "__bool__": [54, 1871, 1873], "to_bool": 54, "85": [54, 1428, 1695, 1950, 1954], "traceerror": [54, 1918], "architectur": [54, 992, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1361, 1468, 1507, 1758, 1896, 1907, 1918, 1927, 1940], "hyper": [54, 1456, 1872, 1932], "do_activ": 54, "512": [54, 1468, 1469, 1470, 1471, 1472, 1896, 1940], "without_activ": 54, "with_activ": 54, "traced_without_activ": 54, "traced_with_activ": 54, "concrete_arg": 54, "truli": [54, 1911], "__torch_function__": [54, 1957], "161": 54, "len_1": 54, "sqrt_1": 54, "truediv": [54, 1942, 1943], "mycustomtrac": 54, "traced_graph": 54, "runnabl": [54, 1892, 1911, 1932, 1956], "myspecialsubmodul": 54, "submod": 54, "neg_1": 54, "is_leaf_modul": [54, 1937], "sparse_coo_tensor": [54, 531, 568, 1796, 1871, 1875, 1913, 1927], "traceabl": [54, 611, 804, 1870, 1918, 1944], "ones_lik": [54, 1126, 1127, 1132, 1871, 1888, 1896, 1899, 1904, 1913], "zeros_lik": [54, 885, 887, 1871, 1875, 1888, 1896, 1913, 1927], "viabl": [54, 1896], "torch_randn": 54, "gotcha": 54, "bake": [54, 55, 63, 1196, 1201, 1670, 1671, 1914], "dropoutrepro": 54, "assert_clos": [54, 1082, 1084, 1085, 1090, 1091, 1096, 1097, 1098, 1100, 1102, 1869, 1870, 1934], "greatest": [54, 1135, 1319, 1911, 1934], "6207983493804932": 54, "dropoutrepro2": 54, "pytre": [54, 55, 1899], "overspeci": [54, 939], "ph": 54, "shouldn": [54, 966, 1915, 1927, 1931], "fn_or_nam": 54, "callfunct": 54, "my_custom_funct": 54, "fn_to_be_trac": 54, "reassign": [54, 1896], "regener": 54, "unset": [54, 1907], "add_submodul": 54, "subpath": 54, "get_submodul": [54, 1192, 1425], "delete_all_unused_submodul": 54, "delete_submodul": 54, "print_read": 54, "print_output": 54, "date": [54, 1915], "pythoncod": 54, "fxmodul": 54, "pathlik": [54, 1263, 1745, 1915], "owning_modul": 54, "tracer_cl": 54, "tracer_extra": 54, "the_funct": 54, "type_expr": 54, "create_nod": 54, "method_nam": 54, "0th": [54, 1133, 1861], "inserting_befor": 54, "influenc": [54, 1659, 1911, 1927], "eliminate_dead_cod": 54, "dead": [54, 1955], "topolog": [54, 1911], "attr_1": 54, "is_impur": 54, "bad": [54, 55, 1885, 1911, 1915, 1918, 1945, 1954], "erase_nod": 54, "to_eras": 54, "eras": [54, 55, 60, 61, 1944], "qualified_nam": 54, "graph_copi": 54, "val_map": 54, "return_output_nod": 54, "slice": [54, 55, 63, 65, 594, 682, 683, 1343, 1344, 1345, 1458, 1460, 1464, 1580, 1581, 1734, 1751, 1752, 1783, 1794, 1845, 1870, 1874, 1888, 1896, 1911, 1913, 1927, 1928, 1931, 1933, 1951], "memory_format": [54, 143, 158, 160, 163, 166, 167, 168, 177, 183, 194, 197, 221, 228, 255, 285, 313, 319, 381, 486, 487, 512, 567, 936, 1066, 1067, 1120, 1192, 1425, 1605, 1657, 1723, 1725, 1727, 1867, 1869, 1871, 1934, 1951], "opoverload": [54, 1877], "companion": 54, "__exit__": [54, 1873, 1874, 1915], "arg_transform": 54, "value_remap": 54, "_node_list": 54, "doubli": 54, "on_generate_cod": 54, "make_transform": 54, "transformcodefunc": 54, "insert_pdb": 54, "bodi": [54, 55, 63, 66, 1203, 1870, 1872, 1873, 1874, 1956], "current_tran": 54, "stuff": [54, 1945], "default_valu": 54, "_not_": 54, "tabul": 54, "process_input": 54, "process_output": 54, "python_cod": 54, "root_modul": [54, 780, 1920], "set_codegen": 54, "codegen": [54, 1898, 1946, 1950, 1956], "return_typ": [54, 684, 1044, 1045, 1154, 1213, 1251, 1289, 1292, 1294, 1297, 1321, 1787, 1833, 1838], "printout": [54, 1010, 1023, 1943], "all_input_nod": 54, "format_nod": 54, "placeholder_nam": 54, "maybe_return_typenam": 54, "autogener": [54, 1899], "impur": 54, "normalized_argu": 54, "arg_typ": 54, "kwarg_typ": 54, "normalize_to_only_use_kwarg": 54, "vararg": 54, "argskwargspair": 54, "bx": 54, "ax": [54, 1223, 1237, 1241, 1252, 1253, 1254, 1282, 1293, 1433, 1443, 1838, 1911], "prev": [54, 1682], "replace_with": 54, "delete_user_cb": 54, "propagate_meta": 54, "replace_input_with": 54, "old_input": 54, "new_input": 54, "create_proxi": 54, "record_stack_trac": 54, "dynamo": [54, 67, 667, 1879, 1942, 1944, 1945, 1946, 1947, 1949, 1950, 1952, 1953, 1954, 1956], "outputgraph": [54, 1949], "update_arg": 54, "update_kwarg": 54, "autowrap_modul": 54, "autowrap_funct": 54, "create_arg": 54, "create_args_for_root": 54, "root_fn": 54, "is_modul": 54, "introspect": [54, 941, 1946], "disallow": [54, 1915, 1923, 1930, 1946, 1947], "proxy_factory_fn": 54, "attr": [54, 55, 57, 138, 880, 1293, 1742], "attr_val": 54, "parameter_proxy_cach": 54, "module_qualified_nam": [54, 1937], "path_of_modul": 54, "some_hyperparamet": 54, "indexed_item": 54, "proxied_valu": 54, "garbage_collect_valu": 54, "run_nod": 54, "swap": [54, 604, 775, 776, 777, 780, 784, 851, 1281, 1473, 1474, 1590, 1591, 1835, 1871, 1874, 1896, 1918, 1927, 1929, 1936], "vice": [54, 445, 590, 1117, 1118, 1417, 1893, 1921, 1929, 1944], "versa": [54, 445, 590, 1117, 1118, 1417, 1893, 1921, 1929, 1944], "negsigmswapinterpret": 54, "call_self": 54, "args_tail": 54, "boxed_run": 54, "args_list": 54, "promptli": [54, 1264], "fetch_args_kwargs_from_env": 54, "map_nodes_to_valu": 54, "initial_env": 54, "enable_io_process": 54, "negsigmswapxform": 54, "nodes_map": [54, 1955], "subgraph_rewrit": [54, 1955], "w1": 54, "w2": 54, "m1": [54, 1859, 1860], "m2": [54, 1645, 1859, 1860, 1918], "traced_modul": [54, 1909, 1955], "despit": [54, 1207, 1208, 1901], "stack_1": 54, "stack_2": 54, "sum_2": 54, "max_2": 54, "add_2": [54, 55, 58, 60], "exhaust": [55, 1605], "wih": 55, "escap": [55, 64, 1946], "hatch": [55, 64, 1946], "assumeconstantresult": [55, 65], "burn": [55, 65, 1941], "tracabl": [55, 65], "get_item": [55, 65], "f32": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "i64": [55, 60, 61, 64, 65], "slice_1": [55, 63, 65], "myautogradfunct": 55, "autogradfunct": 55, "allow_in_graph": [55, 1946], "cl": [55, 57, 127, 1898, 1918, 1923, 1957], "mul_1": [55, 61, 1942], "l__self___linear": 55, "control_flow": [55, 58, 62, 63, 66], "mysubmodul": [55, 62, 63], "condbranchclassmethod": [55, 62, 63], "true_fn": [55, 58, 62, 63], "false_fn": [55, 58, 62, 63], "pred": [55, 58, 62, 63, 1391, 1605, 1905, 1914, 1923, 1951], "subm": [55, 62, 63], "submodule_0": [55, 58, 62, 63, 66], "submodule_1": [55, 58, 62, 63], "inner_true_fn": [55, 62, 63], "inner_false_fn": [55, 62, 63], "my_tensor_var": [55, 62, 63], "my_primitive_var": [55, 62, 63], "nonloc": [55, 58, 62, 63, 1874], "_tensor_constant0": [55, 62, 63], "lift_fresh_copi": [55, 62, 63, 1913], "sub_1": [55, 62, 63], "condclosedovervari": [55, 58, 62], "val": [55, 58, 62, 1008, 1198, 1871, 1873, 1891, 1945, 1949], "b8": [55, 58, 62], "dynamic_constraint": [55, 57, 62, 63], "operand": [55, 62, 63, 915, 1065, 1873, 1874, 1898, 1927, 1930], "s0": [55, 62, 63, 1944, 1956], "sym_siz": [55, 62, 63, 64, 65, 1913, 1951], "sym": [55, 62, 63, 64, 65, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778], "gt": [55, 62, 63, 284, 1146, 1871, 1886, 1901, 1913, 1951], "rangeconstraint": [55, 62, 63, 64, 65], "min_val": [55, 62, 63, 64, 65, 765, 1384, 1530, 1531, 1871, 1951], "max_val": [55, 62, 63, 64, 65, 765, 1384, 1530, 1531, 1871, 1951], "9223372036854775806": [55, 62, 63], "predic": [55, 60, 62, 63], "i4": [55, 64, 65], "ge_1": [55, 64, 65], "scalar_tensor_2": [55, 64, 65], "_assert_async_2": [55, 64, 65], "le_1": [55, 64, 65], "scalar_tensor_3": [55, 64, 65], "_assert_async_3": [55, 64, 65], "i0": [55, 64, 65, 294, 1211, 1777, 1871, 1913, 1928], "i1": [55, 64, 65, 1928], "i2": [55, 64, 65], "i3": [55, 64, 65], "test_decor": 55, "dynamicshapeifguard": [55, 60, 63], "map_impl": [55, 63, 66], "getitem": [55, 63, 66, 1955], "slice_2": [55, 63], "9223372036854775807": [55, 63, 1190, 1638, 1883, 1958], "new_x_shap": [55, 63], "pos0": [55, 61], "tuple0": [55, 61], "myarg": [55, 61], "mykw0": [55, 61], "mykwarg": [55, 61], "input0": [55, 61], "input1": [55, 61, 747, 1346, 1359, 1360, 1417, 1434, 1495, 1505, 1506, 1547, 1871, 1892, 1911], "arg5_1": [55, 61], "arg6_1": [55, 61], "arg7_1": [55, 61], "mul_2": [55, 61], "mul_3": [55, 61], "mul_4": [55, 61], "mul_5": [55, 61], "mul_6": [55, 61], "monkei": [55, 56, 61, 63, 1851], "cow": [55, 56, 61, 63], "pig": [55, 56, 61, 63], "contextlib": [55, 59], "nullcontext": [55, 59], "tree_flatten": 55, "anim": 55, "moo": 55, "specializedattribut": 55, "staticforloop": [55, 60], "unrol": [55, 60, 1872, 1873, 1911, 1946], "ret": [55, 60, 1898, 1923], "add_3": [55, 60], "add_4": [55, 60], "add_5": [55, 60], "add_6": [55, 60], "add_7": [55, 60], "add_8": [55, 60], "add_9": [55, 60], "staticif": [55, 60], "setattr": [55, 57, 1873], "not_supported_yet": [55, 57, 63], "overli": [55, 57], "type_reflection_method_rewrit": [55, 57], "undergo": 67, "gain": [67, 1684, 1891, 1938, 1948, 1950], "fxe0010": [67, 1912], "diagnosticopt": [67, 69], "verbosity_level": [67, 69, 1658], "torch_log": [67, 69, 667, 939, 1879, 1944, 1956], "onnx_diagnost": [67, 69, 667], "fxe0008": [67, 1912], "onnxscript": [68, 1664, 1911], "torchlib": [68, 72], "fxonnxinterpret": 68, "onnx": [69, 70, 72, 73, 74, 667, 1639, 1640, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1869, 1887, 1918], "streamlin": 69, "endors": 69, "comprehens": [69, 1778, 1873, 1874, 1887, 1896, 1902, 1918], "noteworthi": 69, "_intern": [69, 74, 1929], "todo": [70, 71, 813, 846, 848, 849, 1898, 1937, 1941, 1945, 1952], "dynamo_export": [70, 1660, 1661, 1911], "disregard": [72, 73, 75], "indexerror": [72, 1623, 1625], "typeerror": [72, 1628, 1898, 1916, 1934, 1957], "opschema": [72, 1912], "onnxfunct": [73, 75, 1664], "perfect": 73, "nearest": [73, 766, 772, 774, 1322, 1477, 1479, 1524, 1535, 1593, 1595, 1714, 1742, 1896], "highest": [73, 667, 1333, 1724, 1725, 1757, 1919, 1934], "stringent": 73, "op_level_debug": [73, 75, 1659], "elementwise_dtyp": 74, "_ref": 74, "type_promot": 74, "absent": [75, 1897], "signifi": 75, "g_cpu": 76, "g_cuda": 76, "bytetensor": [76, 997, 998, 1036, 1037, 1144, 1304, 1311, 1763, 1853, 1922, 1930, 1933], "2147483647": 76, "0x8000_0000_0000_0000": [76, 1284, 1922], "0xffff_ffff_ffff_ffff": [76, 1284, 1922], "random_devic": 76, "1516516984916": 76, "new_stat": [76, 1036, 1037, 1311, 1763, 1853, 1922], "void": [76, 967, 1009, 1896, 1903], "g_cpu_oth": 76, "abs_": [80, 1871, 1886, 1933], "acosh": [84, 110, 854, 1871, 1886, 1913, 1951], "batch1": [87, 88, 139, 140, 673, 907, 1871], "batch2": [87, 88, 139, 140, 157, 673, 907, 1871], "tensor1": [89, 90, 91, 92, 674, 675, 1286, 1739, 1871], "tensor2": [89, 90, 91, 92, 302, 392, 674, 675, 1286, 1739, 1871], "mat1": [93, 94, 541, 676, 1156, 1212, 1296, 1788, 1792, 1793, 1807, 1871, 1951], "mat2": [93, 94, 401, 541, 676, 919, 1156, 1212, 1296, 1788, 1792, 1793, 1807, 1871, 1951], "mat": [95, 96, 527, 677, 1317, 1720, 1785, 1788, 1807, 1871, 1932], "vec1": [97, 98, 678, 1871], "vec2": [97, 98, 276, 448, 678, 1138, 1702, 1871], "keepdim": [100, 102, 103, 104, 106, 122, 123, 342, 380, 395, 397, 398, 399, 402, 416, 417, 418, 419, 440, 457, 466, 542, 552, 602, 680, 682, 683, 684, 686, 861, 862, 1213, 1244, 1248, 1261, 1279, 1289, 1291, 1292, 1294, 1297, 1320, 1321, 1322, 1323, 1434, 1563, 1652, 1711, 1714, 1809, 1810, 1814, 1856, 1857, 1871, 1886, 1928, 1951], "rtol": [101, 332, 681, 895, 896, 1181, 1246, 1249, 1666, 1870, 1871, 1934], "atol": [101, 332, 681, 895, 896, 1181, 1246, 1249, 1258, 1666, 1870, 1871, 1898, 1934], "08": [101, 332, 681, 917, 1181, 1238, 1360, 1439, 1567, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1697, 1769, 1871], "equal_nan": [101, 332, 681, 1181, 1871, 1934], "arcco": [109, 1871, 1913, 1934], "acosh_": [111, 1871, 1886], "arccosh": [111, 1871, 1913], "arcsin": [113, 868, 1871, 1913, 1927], "arcsinh": [115, 1871, 1913], "atan2_": [118, 1871, 1886], "arctan2": [118, 1871, 1913], "arctan": [119, 1871, 1913], "arctanh": [121, 1871, 1913], "asinh": [131, 856, 1871, 1886, 1913, 1927, 1951], "atan": [135, 618, 619, 857, 1871, 1886, 1913, 1927, 1951], "atanh": [137, 859, 1871, 1886, 1913, 1927, 1951], "wrt": [138, 895, 896], "60521": [138, 880], "issuecom": [138, 880], "867061780": [138, 880], "nearli": [138, 880, 894, 1703, 1906, 1923, 1956], "texttt": [141, 142, 681, 1181, 1333, 1934], "bernoulli": [142, 747, 1337, 1363, 1364, 1365, 1366, 1370, 1377, 1395, 1509, 1510, 1511, 1512, 1517, 1869, 1871, 1886, 1913, 1935], "preserve_format": [143, 158, 160, 163, 166, 167, 168, 177, 194, 197, 228, 255, 285, 313, 381, 512, 567, 936, 1067, 1120, 1657, 1723, 1725, 1727, 1867, 1930], "minlength": [144, 910, 1871], "bitwise_and": [146, 1871, 1913, 1951], "bitwise_left_shift": [148, 1871, 1913], "bitwise_not": [150, 1871, 1886, 1913, 1951], "bitwise_or": [152, 1871, 1913, 1951], "bitwise_right_shift": [154, 1871, 1913], "bitwise_xor": [156, 1871, 1913, 1951], "uint8": [160, 230, 604, 680, 686, 1117, 1712, 1715, 1716, 1739, 1918, 1929, 1930, 1932, 1933, 1959], "cauchi": [161, 1869, 1893, 1901, 1913, 1935], "dfrac": [161, 365, 595, 1360, 1506, 1613, 1646, 1649], "complex32": [167, 1353, 1354, 1355, 1499, 1500, 1501, 1662, 1933, 1934], "int8": [168, 435, 716, 911, 912, 913, 914, 915, 916, 1117, 1273, 1274, 1275, 1276, 1918, 1921, 1927, 1929, 1930, 1933, 1959], "input2": [171, 446, 447, 504, 747, 932, 1346, 1359, 1360, 1417, 1434, 1495, 1505, 1506, 1547, 1871, 1892, 1911], "clamp_": [176, 1871, 1886], "uncoalesc": [178, 316, 1800], "coo": [178, 311, 316, 330, 601, 1156, 1788, 1792, 1797, 1798, 1799, 1800, 1801, 1802, 1869, 1880, 1930, 1934], "inttensor": [179, 196, 1166, 1281, 1282, 1368, 1930, 1933], "csr": [179, 196, 331, 570, 575, 1369, 1788, 1792, 1793, 1799, 1802, 1880, 1934], "sparse_csr": [179, 196, 570, 575, 1792, 1793, 1795, 1799, 1802, 1927], "nnz": [179, 531, 570, 571, 572, 574, 575, 895, 1325, 1790, 1792, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1927], "int32": [179, 196, 301, 309, 313, 434, 604, 923, 1067, 1079, 1080, 1115, 1117, 1118, 1222, 1233, 1234, 1235, 1253, 1281, 1348, 1712, 1749, 1918, 1927, 1929, 1930, 1933, 1959], "mkl": [179, 196, 1869, 1895, 1910, 1913, 1927], "routin": [179, 196, 863, 931, 1264, 1787, 1815, 1927], "downcast": [179, 196], "to_sparse_csr": [179, 196, 571, 572, 1789, 1792, 1793, 1871, 1913, 1927], "conj_phys": [182, 950, 1871, 1913, 1927, 1951], "contiguous_format": [183, 319, 486, 487, 1066, 1605, 1930], "non_block": [184, 197, 567, 590, 1192, 1425, 1638, 1871, 1896, 1929, 1951], "copysign": [186, 1871, 1913], "fweight": [193, 957, 1871], "aweight": [193, 957, 1871], "sparse_dim": [206, 532, 533, 1788, 1792, 1796, 1800, 1871, 1913, 1927], "resize_": [209, 487, 1122, 1213, 1850, 1870, 1871, 1872, 1886, 1920, 1929], "resize_as_": [209, 1871, 1886, 1927], "set_": [209, 486, 1871], "transpose_": [209, 1871, 1927], "zero_": [209, 1237, 1515, 1871, 1886, 1887, 1904, 1927], "dim1": [213, 215, 216, 556, 579, 580, 1053, 1055, 1056, 1226, 1818, 1835, 1871], "dim2": [213, 215, 216, 1053, 1055, 1056, 1226, 1871], "digamma": [219, 1871, 1886, 1913, 1928, 1951], "laid": 221, "outermost": [221, 1145], "channels_last": [221, 1192, 1425, 1605, 1930], "rounding_mod": [223, 224, 225, 226, 1060, 1061, 1110, 1113, 1733, 1843, 1871], "split_size_or_sect": [229, 290, 606, 1803], "eq": [232, 1871, 1886, 1913, 1951], "erf": [235, 626, 627, 1871, 1886, 1913, 1927, 1928, 1951], "erfc": [237, 628, 629, 1871, 1886, 1913, 1928, 1951], "front": [242, 939, 1264, 1428, 1887, 1899], "lambd": [246, 286, 1381, 1462, 1527, 1583, 1667, 1871], "fill_valu": [248, 433, 1119, 1120, 1348, 1871, 1896, 1951], "tall": [248, 1250, 1255, 1898], "start_dim": [251, 1104, 1371, 1871], "end_dim": [251, 1104, 1371, 1871], "float_pow": [257, 1871, 1913], "floor_divid": [261, 1060, 1871, 1913, 1927], "divisor": [264, 265, 476, 477, 755, 756, 1060, 1110, 1113, 1135, 1339, 1340, 1372, 1476, 1492, 1493, 1733, 1843], "fmod": [265, 1733, 1871, 1913, 1951], "mantissa": [268, 468, 1115, 1215, 1757, 1871, 1896, 1907], "gcd": [271, 1871, 1913, 1951], "geometr": [274, 766, 772, 1524, 1535, 1593, 1855, 1869, 1913, 1935, 1953], "ordin": [277, 1797, 1798, 1799, 1801, 1802, 1930], "greater_equ": [282, 1871, 1913], "hypot": [292, 1871, 1913, 1951], "igamma": [296, 1871, 1913, 1951], "igammac": [298, 1871, 1913, 1951], "3100": [299, 470, 1162, 1731], "3553j": [299, 470, 1162, 1731], "5445": [299, 470, 1162, 1731], "7896j": [299, 470, 1162, 1731], "6492": [299, 470, 1162, 1731], "0633j": [299, 470, 1162, 1731], "0638": [299, 470, 1162, 1731], "8119j": [299, 470, 1162, 1731], "3553": [299, 1162], "7896": [299, 1162], "0633": [299, 1162, 1238, 1888], "8119": [299, 1162], "index_add_": [300, 885, 1163, 1164, 1871, 1908], "index_copy_": [302, 1871], "index_fill_": [304, 1871, 1886], "index_put_": [306, 1871], "include_self": [309, 503, 504, 1165, 1748, 1871, 1951], "identit": 309, "amax": [309, 504, 683, 684, 1792, 1871, 1913, 1951], "amin": [309, 504, 682, 684, 1792, 1871, 1913, 1951], "fill_": [309, 1192, 1217, 1425, 1734, 1871, 1886, 1904, 1929], "72": [309, 604, 1145], "uint8_t": [314, 1662], "retain_grad": [323, 1871, 1893, 1913], "requires_grad_": [323, 435, 1192, 1348, 1425, 1508, 1789, 1792, 1829, 1871, 1886, 1893, 1933, 1956], "n_fft": [339, 543, 1189, 1811, 1871], "hop_length": [339, 543, 1189, 1811, 1871], "win_length": [339, 543, 1189, 1811, 1871], "center": [339, 543, 766, 772, 1085, 1189, 1489, 1524, 1535, 1593, 1681, 1703, 1771, 1811, 1871, 1893, 1913, 1932], "onesid": [339, 543, 1189, 1811, 1871, 1951], "return_complex": [339, 543, 1189, 1811, 1871], "element_s": [341, 422, 1871, 1886, 1913, 1929], "lcm": [344, 1871, 1913], "ldexp": [346, 1115, 1871, 1913], "lerp": [350, 1871, 1913], "lt": [351, 383, 1218, 1870, 1871, 1886, 1913, 1942, 1943, 1951], "less_equ": [354, 1871, 1913], "lgamma": [356, 638, 639, 1871, 1913, 1951], "ln": [365, 1220, 1928], "logical_and": [371, 1871, 1913, 1951], "logical_not": [373, 1574, 1871, 1886, 1888, 1913, 1951], "logical_or": [375, 1871, 1913, 1951], "logical_xor": [377, 1871, 1913, 1951], "pivot": [384, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1281, 1282, 1283, 1713, 1871], "get_info": [384, 1281], "lu_data": [385, 1282, 1283, 1871], "lu_pivot": [385, 1282, 1283, 1871], "masked_fill_": [387, 1574, 1871, 1886, 1887], "booltensor": [388, 390, 722, 1285, 1468, 1864, 1930, 1933], "masked_scatter_": [389, 1871], "mvlgamma": [413, 1871, 1913], "posinf": [414, 415, 1319, 1871], "neginf": [414, 415, 1319, 1871], "nan_to_num": [415, 1871, 1913], "interpol": [418, 466, 772, 773, 774, 806, 1217, 1322, 1477, 1478, 1479, 1489, 1524, 1593, 1594, 1595, 1714, 1850, 1871, 1920], "ne": [426, 1613, 1646, 1654, 1871, 1886, 1913, 1951], "8182e": 432, "5765e": 432, "41": [432, 1068, 1250, 1596, 1645, 1713], "0545e": 432, "0949e": 432, "4842e": [432, 1068], "0000e": [432, 1068, 1108, 1269, 1278, 1319, 1645, 1769, 1771, 1772, 1777, 1778], "00": [432, 1068, 1108, 1269, 1278, 1319, 1645, 1665, 1769, 1771, 1772, 1777, 1778, 1870, 1911], "141592": [433, 1119], "1416": [433, 1049, 1119, 1829], "from_numpi": [435, 866, 867, 1829], "array_lik": [435, 866, 1797, 1798, 1799, 1800, 1801, 1802, 1829, 1888], "nextaft": [438, 1871, 1913, 1951], "fro": [440, 1223, 1244, 1248, 1261, 1623, 1632, 1652, 1871], "not_equ": [443, 1871, 1913], "resolve_conj": [445, 950, 1871, 1913], "resolve_neg": [445, 1871, 1913], "shorthand": [445, 1211], "input3": [447, 1871], "transpos": [447, 580, 581, 604, 679, 728, 729, 730, 932, 1065, 1132, 1221, 1222, 1228, 1231, 1234, 1241, 1252, 1255, 1356, 1357, 1358, 1476, 1502, 1503, 1504, 1574, 1612, 1641, 1701, 1815, 1817, 1818, 1824, 1838, 1871, 1886, 1888, 1893, 1907, 1911, 1913, 1920, 1927, 1931, 1933, 1951], "polygamma": [453, 1871, 1913, 1928], "q_per_channel_axi": [460, 461, 1871, 1913], "zero_point": [461, 463, 725, 726, 727, 728, 729, 730, 731, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 757, 759, 760, 761, 762, 764, 767, 768, 786, 789, 806, 807, 808, 809, 812, 839, 1079, 1080, 1715, 1716, 1717, 1718, 1719, 1871, 1918, 1919], "qtensor": [465, 1871], "uniform": [468, 595, 909, 1361, 1443, 1507, 1722, 1723, 1771, 1869, 1891, 1913, 1935, 1951], "queu": [473, 972, 1896], "life": [473, 969], "cycl": [473, 880, 969, 1689, 1695, 1893, 1917], "unexpectedli": [473, 1933], "enable_grad": [475, 1875, 1935], "0100": [475, 862, 1245, 1715], "0200": 475, "0300": [475, 1909], "maxnorm": [478, 479, 1734, 1871], "tile": [480, 1871, 1896, 1913, 1927, 1946], "repeat_interleav": [480, 1850, 1871, 1913, 1920], "output_s": [481, 728, 729, 730, 753, 754, 1330, 1331, 1332, 1334, 1335, 1336, 1357, 1372, 1373, 1374, 1421, 1422, 1423, 1476, 1483, 1484, 1485, 1486, 1487, 1488, 1518, 1519, 1520, 1551, 1552, 1553, 1735, 1871, 1888, 1951], "is_leaf": [482, 1871, 1886, 1888, 1913], "saved_weight": 483, "loaded_weight": 483, "5503": 483, "4926": [483, 1904], "1158": 483, "8303": 483, "1007": 483, "9853": 483, "2316": 483, "6606": 483, "resiz": [486, 487, 511, 532, 533, 1117, 1118, 1122, 1477, 1524, 1535, 1871, 1886, 1913, 1929, 1951], "shift": [492, 912, 915, 1085, 1092, 1337, 1343, 1344, 1345, 1370, 1464, 1517, 1740, 1871, 1874, 1951], "decim": [494, 495, 1742, 1871, 1907, 1959], "scatter_": [499, 502, 1746, 1871], "scatter_add_": [500, 501, 1747, 1850, 1871], "scatter_reduce_": [500, 503, 1748, 1871], "axi": [500, 502, 504, 809, 812, 949, 1064, 1079, 1105, 1134, 1157, 1715, 1735, 1740, 1741, 1863, 1871, 1899, 1911, 1916, 1918, 1951, 1955], "4600": 500, "2300": 500, "scatter_reduc": [504, 1850, 1871, 1913, 1951], "sgn": [509, 1114, 1767, 1871, 1886, 1888, 1913, 1927], "int16": [512, 1117, 1274, 1927, 1929, 1930, 1933, 1959], "dense_dim": [530, 532, 533, 570, 571, 572, 574, 575, 1800, 1871, 1913, 1927], "nse": [531, 1927], "randint": [531, 910, 957, 1108, 1297, 1348, 1474, 1507, 1508, 1796, 1871, 1875, 1887, 1913, 1932, 1935], "6550": 531, "2397": 531, "1611": 531, "0779": [531, 1228, 1710, 1864], "2326": 531, "0558": 531, "4711": 531, "9678": 531, "5138": 531, "0411": 531, "9417": 531, "5158": 531, "0793": 531, "0036": [531, 1289], "2569": 531, "1055": 531, "sparse_coo": [531, 570, 1325, 1792, 1795, 1796, 1800, 1927, 1930], "split_siz": [534, 1803, 1871, 1951], "squeez": [540, 680, 682, 683, 684, 686, 1213, 1279, 1289, 1291, 1292, 1294, 1297, 1320, 1323, 1506, 1711, 1796, 1809, 1810, 1814, 1856, 1857, 1871, 1886, 1911, 1913, 1920, 1931, 1951], "pad_mod": [543, 1811, 1871], "typedstorag": [544, 1869, 1909, 1929], "untypedstorag": [544, 600, 1869, 1909, 1929], "untyped_storag": 544, "compute_uv": [554, 1255, 1256, 1815, 1871], "axis0": [555, 1817, 1871], "axis1": [555, 1817, 1871], "dim0": [556, 579, 580, 1818, 1835, 1871], "indices_or_sect": [565, 1063, 1155, 1830, 1862], "5044": 567, "0005": [567, 1693, 1699], "3310": 567, "0584": [567, 1815], "cuda0": [567, 1896, 1902, 1933], "masked_grad": [568, 1871], "sparse_mask": [568, 1871, 1913], "mkldnn": [569, 1201, 1869, 1913], "sparsedim": 570, "blocksiz": [570, 571, 572, 1797, 1798, 1799, 1871, 1927], "sparse_csc": [570, 574, 1795, 1799, 1801, 1927], "sparse_bsr": [570, 572, 1798, 1799, 1927], "sparse_bsc": [570, 571, 1797, 1799, 1927], "bsr": [570, 572, 1798, 1799, 1934], "bsc": [570, 571, 1797, 1799, 1934], "csc": [570, 574, 1799, 1801, 1934], "minu": [570, 571, 572, 574, 575, 1928], "crow_indic": [570, 572, 575, 1790, 1792, 1793, 1795, 1798, 1799, 1802, 1871, 1913, 1927, 1934], "col_indic": [570, 572, 575, 1792, 1793, 1795, 1798, 1799, 1802, 1871, 1913, 1927, 1934], "sparsecsr": [570, 1835, 1927], "row_indic": [571, 574, 1797, 1801, 1871, 1913, 1927, 1934], "ccol_indic": [571, 574, 1797, 1801, 1871, 1913, 1927, 1934], "_nnz": [573, 574, 575, 1913], "012766935862600803": 576, "5415473580360413": 576, "08909505605697632": 576, "7729271650314331": 576, "unitriangular": [581, 1254, 1838, 1871], "tril": [583, 1574, 1871, 1913], "triu": [585, 1617, 1838, 1871, 1911, 1913], "trunc": [589, 664, 665, 674, 1060, 1103, 1110, 1113, 1742, 1871, 1886, 1913, 1927, 1951], "sizedim": 594, "return_invers": [596, 597, 1847, 1848, 1871], "return_count": [596, 597, 1847, 1848, 1871], "unsqueez": [599, 1085, 1212, 1252, 1368, 1444, 1617, 1832, 1871, 1898, 1913, 1920, 1927, 1931, 1932, 1951], "subspac": [604, 1255, 1431, 1703, 1815, 1816], "span": [604, 1026, 1027, 1361, 1815, 1917, 1923], "foral": 604, "proportion": [604, 772, 1477, 1593], "met": [604, 1231, 1238, 1239, 1250, 1264, 1472, 1800], "9482": [604, 1169], "0310": 604, "4999": 604, "5316": 604, "1520": 604, "7472": 604, "5617": 604, "8649": 604, "4724": [604, 1904], "0334": 604, "2976": 604, "8499": 604, "2109": 604, "9913": 604, "9607": 604, "6123": 604, "1064483442": 604, "1124191867": 604, "1069546515": 604, "1089989247": 604, "1105482831": 604, "1061112040": 604, "1057999968": 604, "1084397505": 604, "1071760287": 604, "1123489973": 604, "1097310419": 604, "1084649136": 604, "1101533110": 604, "1073668768": 604, "1082790149": 604, "1088634448": 604, "1000000000": 604, "0047": 604, "0310j": 604, "5316j": 604, "7472j": 604, "8649j": 604, "0334j": 604, "8499j": 604, "9913j": 604, "6123j": 604, "202": 604, "154": [604, 1910], "59": [604, 1840, 1842], "182": 604, "243": [604, 1189, 1815], "253": 604, "188": 604, "185": [604, 1956], "252": [604, 1910], "191": 604, "63": [604, 1910, 1918], "240": 604, "227": 604, "165": 604, "190": 604, "128": [604, 707, 715, 716, 743, 751, 781, 806, 807, 1346, 1360, 1387, 1412, 1434, 1473, 1474, 1506, 1574, 1887, 1888, 1918, 1920, 1921, 1923, 1927, 1930, 1933, 1954], "146": 604, "106": 604, "205": 604, "112": [604, 1956], "206": 604, "189": 604, "95": [604, 1691, 1694, 1695], "147": 604, "89": [604, 1721, 1950], "43": 604, "246": [604, 1956], "87": 604, "235": 604, "226": 604, "254": [604, 1910], "111": [604, 1665, 1911], "117": 604, "177": 604, "28": [604, 733, 1048, 1836, 1911, 1943, 1950], "xlogi": [609, 1871, 1913, 1928], "inductor": [667, 939, 1879, 1913, 1938, 1941, 1942, 1943, 1944, 1946, 1948, 1950, 1953, 1954, 1956, 1958], "aot_graph": [667, 1879], "aot_joint_graph": [667, 1879], "ddp_graph": [667, 1879], "graph_cod": [667, 1879], "graph_break": [667, 1879, 1941, 1946, 1947, 1954], "graph_siz": 667, "trace_sourc": 667, "trace_cal": 667, "output_cod": [667, 1879, 1943, 1948, 1956], "perf_hint": [667, 939], "toggl": [667, 1896], "artifact": [667, 1879, 1903, 1915, 1954, 1956], "supress": 667, "silenc": 667, "lowest": [667, 929, 1319, 1622, 1623, 1631, 1632, 1724, 1725, 1898, 1934], "notset": 667, "torchinductor": [667, 1879, 1938, 1943, 1944, 1946, 1948], "joint": [667, 1879], "ddpoptim": [667, 1879], "unregist": [667, 1879, 1883, 1911], "cosin": [670, 671, 954, 955, 1359, 1360, 1506, 1687, 1688, 1695, 1773, 1914, 1946], "3348": 670, "5889": 670, "2005": [670, 1857, 1956], "1584": 670, "2294": [670, 1291], "2004": 670, "3690": 670, "7298": [670, 1732], "hyperbol": [671, 869, 872, 955, 1465, 1782, 1828], "uniform_": [671, 872, 909, 1869, 1871, 1886, 1891, 1898, 1928, 1935], "3192": 671, "9915": 671, "9674": 671, "7151": 671, "7791": 671, "3120": [671, 952], "2979": 671, "1341": 671, "_i": [672, 673, 674, 675, 676, 907, 909, 912, 915, 919, 934, 1060, 1110, 1215, 1217, 1314, 1473, 1706, 1710, 1729, 1765, 1812, 1864, 1928], "0202": 672, "0985": 672, "3506": [672, 1281], "6056": 672, "19": [672, 733, 932, 1422, 1870, 1911, 1927, 1950], "3944": 672, "9732": 672, "3497": 672, "6245": [672, 1223], "4022": [672, 1047, 1815], "3743": 672, "7724": 672, "5811": 672, "8017": 672, "7695": 672, "3930": 672, "3672": [672, 965, 1224], "1450": [672, 1796], "6971": 672, "0736": [672, 1904], "0994": 672, "3216": 672, "7845": 672, "1610": 672, "1868": 672, "4090": 672, "9902": [672, 965, 1224], "3667": [672, 952], "3925": 672, "6147": 672, "sum_": [673, 1189, 1243, 1260, 1338, 1339, 1340, 1353, 1354, 1355, 1361, 1393, 1394, 1413, 1428, 1432, 1434, 1809, 1810, 1811, 1831, 1836, 1856, 1857, 1858, 1928], "mathbin": [673, 676, 677, 907, 919, 1793], "doubletensor": [673, 674, 675, 676, 677, 907, 1755, 1930, 1933], "tensorfloat32": [673, 676, 907, 919, 1286, 1296, 1353, 1354, 1355, 1356, 1357, 1358, 1412, 1499, 1500, 1501, 1502, 1503, 1504, 1541, 1757, 1896, 1907], "rocm": [673, 676, 907, 919, 1286, 1296, 1353, 1354, 1355, 1356, 1357, 1358, 1378, 1396, 1412, 1869], "6311": 673, "0503": 673, "9768": [673, 1904], "0362": 673, "1653": 673, "8185": 673, "4255": [673, 1314], "6760": 673, "9453": 673, "5743": 673, "8202": 673, "3691": 673, "0943": 673, "1109": [673, 1379, 1778], "4730": [673, 1831], "histor": [674, 1022, 1365, 1895, 1904, 1909], "2312": [674, 1796], "6496": 674, "1312": 674, "0428": 674, "4292": 674, "1030": 674, "5369": 674, "9829": 674, "0430": 674, "8635": 675, "6391": 675, "6174": 675, "7617": 675, "5879": 675, "7388": 675, "8353": 675, "6249": 675, "6511": 675, "8716": 676, "4671": 676, "3746": 676, "7573": 676, "9555": 676, "8681": 676, "3768": 677, "5565": 677, "otim": [678, 1212, 1376, 1523], "conj": [679, 951, 1081, 1082, 1084, 1086, 1093, 1095, 1099, 1100, 1102, 1221, 1222, 1228, 1230, 1249, 1737, 1738, 1871, 1898, 1901, 1913, 1933, 1951], "mh": [679, 930, 1228, 1815, 1871, 1913, 1931, 1933], "lvert": [681, 1181, 1473, 1560, 1934], "rvert": [681, 1181, 1934], "leq": [681, 908, 909, 952, 1083, 1085, 1181, 1212, 1216, 1231, 1237, 1348, 1367, 1428, 1430, 1432, 1508, 1559, 1562, 1768, 1811, 1891, 1928], "elementwis": [681, 952, 981, 1008, 1009, 1108, 1110, 1329, 1388, 1389, 1390, 1462, 1583, 1855, 1873, 1888, 1901, 1928], "07": [681, 806, 807, 808, 809, 812, 930, 931, 1068, 1229, 1232, 1237, 1249, 1250, 1256, 1279, 1282, 1612, 1666, 1673, 1772, 1777, 1815, 1911], "09": [681, 1673, 1685, 1898, 1934], "8177": 682, "4878": 682, "2491": 682, "9130": 682, "7158": 682, "1775": 682, "0992": 682, "4817": 682, "0053": 682, "0164": 682, "3738": 682, "0507": [682, 1911], "9700": 682, "1106": 682, "0318": 682, "0816": [682, 1281], "6451": 683, "4866": 683, "2987": 683, "3312": 683, "5744": 683, "2980": [683, 1888], "8397": 683, "2713": 683, "9128": 683, "9214": 683, "7268": 683, "2995": 683, "9023": [683, 1222], "4853": 683, "9075": 683, "6165": 683, "180": [685, 1049, 1721], "14159": [685, 1829], "135": 685, "45": [685, 1344, 1345, 1389, 1390, 1464, 1645, 1911], "ao": [687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 1918, 1919, 1920], "batch_norm": [687, 688, 1201, 1871, 1913], "fuse": [687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 714, 715, 716, 779, 780, 789, 791, 792, 793, 801, 834, 846, 847, 939, 1205, 1206, 1574, 1670, 1671, 1757, 1881, 1886, 1911, 1914, 1918, 1919, 1920, 1921, 1946, 1948, 1955], "3d": [688, 691, 694, 722, 727, 730, 754, 756, 761, 766, 1293, 1332, 1336, 1340, 1343, 1345, 1355, 1358, 1365, 1366, 1372, 1374, 1388, 1390, 1420, 1431, 1477, 1485, 1488, 1489, 1493, 1501, 1504, 1512, 1518, 1520, 1535, 1550, 1562, 1593, 1888, 1907, 1918, 1927, 1932], "bn": [689, 690, 691, 692, 693, 694, 801, 847, 1065, 1201, 1909, 1914, 1918, 1919], "qat": [699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 717, 718, 719, 720, 779, 780, 833, 1918, 1919, 1920], "in_channel": [699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 714, 717, 718, 725, 726, 727, 728, 729, 730, 1201, 1353, 1354, 1355, 1356, 1357, 1358, 1401, 1402, 1403, 1404, 1405, 1406], "out_channel": [699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 714, 717, 718, 725, 726, 727, 728, 729, 730, 1201, 1353, 1354, 1355, 1356, 1357, 1358, 1401, 1402, 1403, 1404, 1405, 1406], "kernel_s": [699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 714, 717, 718, 725, 726, 727, 728, 729, 730, 755, 756, 769, 770, 1192, 1201, 1338, 1339, 1340, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1373, 1374, 1393, 1394, 1401, 1402, 1403, 1404, 1405, 1406, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1476, 1491, 1492, 1493, 1502, 1503, 1504, 1518, 1519, 1520, 1545, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1592, 1718, 1719, 1871, 1932, 1951], "dilat": [699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 714, 717, 718, 725, 726, 727, 728, 729, 730, 759, 760, 761, 769, 770, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1401, 1402, 1403, 1404, 1405, 1406, 1418, 1419, 1420, 1476, 1499, 1500, 1501, 1502, 1503, 1504, 1518, 1548, 1549, 1550, 1592, 1718, 1719, 1871, 1911, 1951], "padding_mod": [699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 714, 717, 718, 725, 726, 727, 728, 729, 730, 759, 760, 761, 1353, 1354, 1355, 1356, 1357, 1358, 1401, 1402, 1403, 1404, 1405, 1406, 1524, 1871, 1951], "momentum": [699, 700, 701, 702, 703, 704, 710, 711, 723, 724, 738, 739, 740, 1343, 1344, 1345, 1388, 1389, 1390, 1398, 1399, 1400, 1407, 1408, 1409, 1464, 1494, 1534, 1674, 1681, 1683, 1689, 1695, 1697, 1871, 1904, 1906, 1914, 1951], "freeze_bn": [699, 700, 701, 702, 703, 704], "qconfig": [699, 700, 701, 702, 703, 704, 705, 706, 707, 717, 718, 719, 720, 775, 776, 778, 781, 782, 783, 784, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 848, 849, 1937], "batchnorm1d": [699, 702, 1398, 1464, 1494, 1909, 1920], "fakequant": [699, 700, 701, 702, 703, 704, 705, 706, 707, 717, 718, 719, 720, 789, 849], "weight_fake_qu": [699, 700, 701, 702, 703, 704, 705, 706, 717, 718], "quant": [699, 700, 701, 702, 703, 704, 705, 706, 707, 717, 718, 719, 777, 779, 780, 825, 848, 849, 1079, 1080, 1918, 1919], "batchnorm3d": [701, 704, 706, 711, 1400, 1464, 1494, 1920], "num_featur": [710, 711, 723, 724, 738, 739, 740, 1192, 1343, 1344, 1345, 1388, 1389, 1390, 1398, 1399, 1400, 1407, 1408, 1409, 1425, 1464, 1526, 1904], "qint8": [715, 716, 743, 748, 751, 752, 759, 760, 761, 768, 779, 781, 786, 807, 828, 845, 846, 848, 849, 1662, 1715, 1716, 1918, 1920, 1921, 1929, 1933, 1934], "highlight": [717, 718, 1873], "from_float": [719, 725, 726, 727, 732, 733, 743, 751, 784, 804, 810, 813, 825, 1918], "qparams_dict": [719, 725, 726, 727, 751], "hidden_s": [721, 747, 748, 752, 1377, 1378, 1395, 1396, 1440, 1441, 1442, 1871], "num_lay": [721, 747, 1377, 1395, 1440, 1441, 1469, 1471, 1871, 1904], "batch_first": [721, 722, 747, 1377, 1395, 1431, 1440, 1441, 1468, 1470, 1472, 1639, 1641, 1642, 1644, 1871, 1900], "bidirect": [721, 747, 1377, 1395, 1440, 1441, 1871], "_lstmlayer": 721, "nnqa": 721, "h0": [721, 747, 749, 1377, 1395, 1440], "c0": [721, 749, 1395, 1956], "hn": [721, 747, 749, 1377, 1378, 1395, 1440], "cn": [721, 749, 1192, 1395], "weight_ih": [721, 1378, 1396, 1442], "weight_hh": [721, 1378, 1396, 1442], "embed_dim": [722, 1431], "num_head": [722, 1431, 1871], "add_bias_kv": [722, 1431], "add_zero_attn": [722, 1431, 1871], "kdim": [722, 1431], "vdim": [722, 1431], "dequant": [722, 775, 777, 779, 780, 786, 788, 848, 1871, 1913, 1919, 1921, 1934, 1936], "mha": [722, 1431], "conver": 722, "key_padding_mask": [722, 1431, 1871], "need_weight": [722, 1431, 1871], "attn_mask": [722, 1431, 1574, 1871], "average_attn_weight": [722, 1431, 1871], "is_caus": [722, 1431, 1471, 1472, 1574, 1871], "attn_output_weight": [722, 1431], "unmask": [722, 1468], "causal": [722, 1431, 1468, 1469, 1470, 1471, 1472, 1574], "attn_weight": [722, 1431, 1574], "attn_output": [722, 1431], "quint8": [725, 726, 727, 728, 729, 730, 732, 733, 743, 759, 760, 761, 768, 779, 781, 786, 806, 807, 808, 809, 812, 814, 846, 848, 1662, 1715, 1716, 1717, 1718, 1719, 1918, 1920, 1921, 1929, 1933, 1934], "learnabl": [725, 726, 727, 728, 729, 730, 732, 733, 743, 747, 751, 1343, 1344, 1345, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1368, 1369, 1377, 1378, 1380, 1388, 1389, 1390, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1433, 1440, 1442, 1464, 1516, 1568, 1904], "q_input": [725, 726, 727, 728, 729, 730, 759, 760, 761], "quantize_per_tensor": [725, 726, 727, 728, 729, 730, 743, 744, 745, 759, 760, 761, 1717, 1718, 1719, 1871, 1913, 1918], "unequ": [726, 727, 728, 729, 730, 1354, 1355, 1357, 1358], "50": [726, 728, 729, 730, 759, 811, 1247, 1297, 1339, 1340, 1348, 1353, 1354, 1355, 1357, 1358, 1373, 1374, 1393, 1394, 1418, 1419, 1420, 1475, 1501, 1502, 1504, 1508, 1519, 1520, 1682, 1826, 1888, 1896], "56": [727, 1927, 1950], "output_pad": [728, 729, 730, 1356, 1357, 1358, 1404, 1405, 1406, 1502, 1503, 1504, 1871, 1951], "qnnpack": [728, 729, 743, 751, 842, 843, 846, 848, 849, 1918, 1920], "convtranspose2d": [728, 1405, 1503, 1850, 1920], "nnq": [728, 729, 730, 775, 776, 777, 851, 1918], "downsampl": [728, 729, 730, 1357, 1477, 1489, 1524, 1535], "upsampl": [728, 729, 730, 766, 773, 774, 806, 1357, 1478, 1479, 1489, 1524, 1535, 1594, 1595], "fbgemm": [729, 730, 743, 751, 820, 842, 843, 846, 848, 849, 1918, 1919, 1946, 1947], "cubic": [730, 1374, 1520, 1524], "num_embed": [732, 733, 1368, 1369, 1516], "embedding_dim": [732, 733, 1368, 1369, 1397, 1515, 1516], "padding_idx": [732, 1368, 1369, 1515, 1516, 1871, 1951], "scale_grad_by_freq": [732, 733, 1368, 1369, 1515, 1516, 1871, 1951], "_weight": [732, 733, 1368, 1369, 1674, 1680, 1955], "overwritten": [732, 733, 743, 751, 784, 828, 848, 1893, 1898, 1934, 1941], "_embed": [732, 733], "_dim": [732, 733, 1368], "include_last_offset": [733, 1369, 1516, 1871, 1951], "embedding_bag": [733, 1871, 1913], "floatfunct": [734, 1918], "activation_post_process": [734, 786, 1918], "add_relu": [734, 735, 744, 1881, 1913, 1936], "add_scalar": [734, 735, 744, 1913, 1932, 1936], "mul_scalar": [734, 735, 744, 1913, 1936], "collector": 735, "f_add": 735, "num_channel": [736, 1380, 1887], "normalized_shap": [741, 1397, 1538, 1871, 1888, 1951], "elementwise_affin": [741, 1397], "negative_slop": [742, 767, 1411, 1539, 1540, 1871, 1891, 1951], "slope": [742, 767, 1411, 1456, 1891], "bias_": [743, 751], "_featur": [743, 751, 768, 1333, 1346, 1410, 1412, 1495, 1541], "from_refer": [743, 751], "ref_qlinear": [743, 751], "output_scal": [743, 746, 1717, 1871], "output_zero_point": [743, 746, 1717, 1871], "q_add": 744, "qint32": [744, 745, 1662, 1715, 1716, 1918, 1921, 1929, 1933, 1934], "x_0": [745, 1836], "gate": [747, 748, 1376, 1377, 1378, 1395, 1454, 1523, 1577], "r_t": [747, 1377, 1680], "w_": [747, 1331, 1332, 1335, 1336, 1339, 1340, 1342, 1350, 1351, 1352, 1354, 1355, 1357, 1358, 1361, 1373, 1374, 1377, 1378, 1394, 1395, 1396, 1419, 1420, 1422, 1423, 1432, 1437, 1438, 1440, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1477, 1478, 1479, 1480, 1481, 1482, 1520, 1524], "x_t": [747, 881, 883, 1343, 1344, 1345, 1377, 1388, 1389, 1390, 1395, 1440, 1464, 1668], "b_": [747, 1377, 1378, 1395, 1396, 1413, 1440, 1442, 1831, 1927], "hr": [747, 1377, 1378, 1395, 1901], "h_": [747, 1331, 1332, 1335, 1336, 1339, 1340, 1346, 1351, 1352, 1354, 1355, 1357, 1358, 1373, 1374, 1377, 1378, 1394, 1395, 1412, 1419, 1420, 1421, 1422, 1423, 1437, 1438, 1440, 1442, 1447, 1448, 1450, 1451, 1477, 1478, 1479, 1481, 1482, 1495, 1520, 1524], "z_t": [747, 1377], "iz": [747, 1377, 1378], "hz": [747, 977, 1377, 1378, 1932], "n_t": [747, 1377], "h_t": [747, 1377, 1395, 1440], "hadamard": [747, 1377, 1378, 1395, 1396], "multilay": [747, 1377, 1395], "_t": [747, 1377, 1395, 1681, 1683, 1898, 1914], "b_ih": [747, 1377, 1378, 1395, 1396, 1440, 1442, 1871], "b_hh": [747, 1377, 1378, 1395, 1396, 1440, 1442, 1871], "h_0": [747, 1377, 1395, 1396, 1440], "seq_len": [747, 1377, 1395, 1431, 1440], "pack_padded_sequ": [747, 1377, 1395, 1440, 1638, 1640, 1641, 1900], "num_direct": [747, 1377, 1395, 1440], "h_n": [747, 1377, 1395, 1440], "_size": [747, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1353, 1354, 1355, 1356, 1357, 1358, 1372, 1373, 1374, 1377, 1378, 1393, 1394, 1395, 1396, 1418, 1419, 1420, 1421, 1422, 1423, 1440, 1442, 1476, 1520], "_layer": [747, 1377, 1395, 1440], "_direct": 747, "output1": [747, 1333, 1892, 1911], "output2": [747, 1333], "weight_ih_l": [747, 1377, 1395, 1440], "w_ir": [747, 1377], "w_iz": [747, 1377], "w_in": [747, 1377], "weight_hh_l": [747, 1377, 1395, 1440], "w_hr": [747, 1377], "w_hz": [747, 1377], "w_hn": [747, 1377], "bias_ih_l": [747, 1377, 1395, 1440], "b_ir": [747, 1377], "b_iz": [747, 1377], "b_in": [747, 1377], "bias_hh_l": [747, 1377, 1395, 1440], "b_hr": [747, 1377], "b_hz": [747, 1377], "b_hn": [747, 1377], "mathcal": [747, 1346, 1353, 1354, 1355, 1356, 1357, 1358, 1368, 1369, 1377, 1378, 1395, 1396, 1410, 1412, 1440, 1442, 1443, 1464, 1726, 1891, 1901], "subtli": [747, 1377, 1683], "gru": [748, 1378, 1871, 1896, 1913, 1918, 1920], "cell": [748, 750, 752, 1377, 1378, 1395, 1396, 1440, 1442], "hx": [748, 750, 752, 1378, 1396, 1442, 1871], "cx": [750, 1396, 1871], "nonlinear": [752, 1341, 1359, 1385, 1440, 1442, 1452, 1869, 1891, 1927], "elman": [752, 1440, 1442], "adaptiveavgpool2d": [753, 1484, 1850, 1920], "adaptiveavgpool3d": [754, 1485, 1850, 1920], "ceil_mod": [755, 756, 769, 770, 1338, 1339, 1340, 1393, 1394, 1418, 1419, 1420, 1491, 1492, 1493, 1545, 1546, 1548, 1549, 1550, 1718, 1719, 1871, 1951], "count_include_pad": [755, 756, 1338, 1339, 1340, 1491, 1492, 1493, 1871, 1951], "divisor_overrid": [755, 756, 1339, 1340, 1492, 1493, 1871, 1951], "kh": [755, 756, 760, 761, 1339, 1340, 1373, 1374, 1419, 1420, 1492, 1493, 1500, 1501, 1503, 1504, 1519, 1520, 1549, 1550], "kw": [755, 756, 760, 761, 1339, 1340, 1373, 1374, 1419, 1420, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1519, 1520, 1548, 1549, 1550], "sh": [755, 756, 760, 761, 1492, 1493, 1500, 1501, 1503, 1504, 1549, 1550, 1956], "sw": [755, 756, 759, 760, 761, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1548, 1549, 1550], "avgpool2d": [755, 1492, 1920], "_channel": [755, 756, 759, 760, 761, 1353, 1354, 1355, 1356, 1357, 1358, 1380, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1548, 1549, 1550, 1923], "ih": [755, 756, 760, 761, 1440, 1442, 1492, 1493, 1500, 1501, 1503, 1504, 1549, 1550], "iw": [755, 756, 759, 760, 761, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504, 1548, 1549, 1550], "padh": [755, 756, 760, 761, 1492, 1493, 1500, 1501, 1503, 1504], "padw": [755, 756, 759, 760, 761, 1491, 1492, 1493, 1499, 1500, 1501, 1502, 1503, 1504], "kd": [756, 761, 1340, 1420], "sd": [756, 761], "padd": [756, 761], "formul": [757, 1347, 1367, 1381, 1415, 1461, 1462, 1543, 1560, 1574, 1901, 1927], "min_": [758, 1227, 1228, 1237, 1255, 1815], "max_": [758, 1418, 1419, 1420, 1613, 1646], "convolv": [759, 760, 761, 1353, 1354, 1355, 1356, 1357, 1358, 1401, 1402, 1403, 1404, 1405, 1406, 1499, 1500, 1501, 1502, 1503, 1504], "dw": [759, 760, 761, 1499, 1500, 1501, 1502, 1503, 1504], "qf": [759, 760, 761], "dtype_input": [759, 760, 761], "dtype_filt": [759, 760, 761], "q_filter": [759, 760, 761], "dh": [760, 761, 1500, 1501, 1503, 1504], "dd": 761, "scale_factor": [766, 772, 773, 774, 1477, 1478, 1479, 1535, 1574, 1593, 1594, 1595, 1871, 1951], "align_corn": [766, 772, 773, 1477, 1478, 1489, 1524, 1535, 1593, 1594, 1871, 1951], "height": [766, 772, 1339, 1340, 1354, 1355, 1357, 1358, 1394, 1419, 1420, 1432, 1459, 1477, 1535, 1593, 1887], "spatial": [766, 772, 773, 774, 927, 1085, 1344, 1372, 1397, 1437, 1438, 1459, 1476, 1477, 1478, 1479, 1489, 1524, 1535, 1564, 1565, 1566, 1593, 1594, 1595], "pixel": [766, 772, 774, 1354, 1361, 1364, 1365, 1366, 1370, 1432, 1437, 1438, 1477, 1489, 1524, 1535, 1593, 1595], "corner": [766, 772, 918, 1477, 1489, 1524, 1535, 1593], "edg": [766, 772, 1145, 1153, 1154, 1535, 1593, 1878, 1899, 1924, 1952], "leakyrelu": [767, 1426, 1539, 1904, 1920], "_slope": [767, 1411, 1539, 1891], "xa": [768, 1241, 1252, 1253, 1254, 1412, 1541], "return_indic": [769, 770, 1334, 1335, 1336, 1373, 1374, 1418, 1419, 1420, 1421, 1422, 1423, 1486, 1487, 1488, 1519, 1520, 1548, 1549, 1550, 1871], "maxpool1d": [769, 1421, 1548, 1551, 1920], "maxpool2d": [770, 1422, 1426, 1549, 1552, 1911, 1920], "linearli": [772, 1129, 1250, 1477, 1593, 1692, 1713, 1900, 1914, 1921], "neighbour": [774, 1413, 1535, 1595], "stub": [775, 776, 1915], "calibr": [775, 776, 784, 825, 826, 844, 846, 848, 1892, 1918, 1919, 1921, 1937], "quantstub": [777, 1918], "dequantstub": [777, 1918], "quantwrapp": 778, "backend_config": [779, 780, 781, 782, 783, 804, 805, 846, 847, 848, 849, 1937], "acycl": [779, 1893], "backendpatternconfig": [779, 848], "blob": [779, 1122, 1901, 1903, 1911, 1932, 1955], "dtypeconfig": [779, 780, 782, 848], "observationtyp": [779, 780, 848, 1920], "weighted_int8_dtype_config": [779, 848], "input_dtyp": [779, 781, 848, 1920], "output_dtyp": [779, 781, 848, 1920, 1951], "weight_dtyp": [779, 781, 848, 1920], "bias_dtyp": [779, 781, 1920], "fuse_conv2d_relu": 779, "is_qat": [779, 780], "convrelu2d": [779, 1920], "linear_config": 779, "set_observation_typ": [779, 780, 848], "output_use_different_observer_as_input": [779, 780, 783, 848, 1920], "add_dtype_config": [779, 780, 848], "set_root_modul": [779, 780], "set_qat_modul": [779, 780], "set_reference_quantized_modul": [779, 780], "conv_relu_config": 779, "set_fused_modul": [779, 780], "set_fuser_method": [779, 780], "fused_conv_relu_config": 779, "my_backend": [779, 1942], "set_backend_pattern_config": [779, 848], "from_dict": [779, 780, 781, 802, 803, 804, 841], "backend_config_dict": [779, 1918], "set_nam": 779, "to_dict": [779, 780, 781, 802, 803, 804, 841], "backendconfig": [780, 805, 846, 848, 1921], "dtype_config": [780, 1920], "backend_pattern_config_dict": 780, "observation_typ": [780, 1920], "qat_modul": [780, 1920], "reference_quantized_modul": 780, "fused_modul": [780, 1920], "fuser_method": [780, 801, 1920], "pattern_complex_format": 780, "set_dtype_config": 780, "fuser": [780, 1205, 1870], "fuse_linear_relu": 780, "linearrelu": [780, 1920], "8bea7180a8ba3c279f2c9b050f2a69a6": 780, "understood": [780, 926], "output_share_observer_with_input": [780, 783, 1920], "renam": [780, 1851, 1853, 1871, 1886, 1887, 1913, 1950], "quantdequantstub": 780, "set_pattern": 780, "is_dynam": [781, 813, 1920], "quant1": 781, "dequant1": 781, "fp32_linear": 781, "quant2": 781, "dequant2": 781, "bracket": [781, 1924], "dtype_config1": 781, "dtype_config2": 781, "dtypewithconstraint": [781, 1920], "quant_min_lower_bound": [781, 782, 1920], "quant_max_upper_bound": [781, 782, 1920], "255": [781, 789, 1079, 1080, 1118, 1524, 1535, 1593, 1918, 1920, 1932], "input_dtype_with_constraint": 781, "scale_min_lower_bound": [781, 782, 1920], "scale_max_upper_bound": [781, 782, 1920], "dtype_config_dict": 781, "bias_typ": [781, 848], "scale_exact_match": [782, 1920], "zero_point_exact_match": [782, 1920], "quant_min": [782, 786, 789, 806, 807, 808, 809, 812, 813, 1079, 1080, 1871, 1918], "quant_max": [782, 786, 789, 806, 807, 808, 809, 812, 813, 1079, 1080, 1871, 1918], "fixedqparamsobserv": 782, "fixedqparamsfakequant": 782, "input_output_not_observ": [783, 1920], "maxpool": [783, 1373, 1374, 1519, 1520, 1911], "remove_qconfig": 784, "is_refer": 784, "convert_custom_config_dict": [784, 802, 1918], "from_observ": [784, 802, 1918], "observed_to_quantized_custom_module_class": [784, 802, 1918], "observedcustommodul": [784, 802, 804, 825, 1918], "quantizedcustommodul": [784, 802], "calib_data": 785, "fake_quant": [786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 849, 1079, 1080, 1937], "movingaverageminmaxobserv": [786, 789, 809], "observer_kwarg": [786, 789], "x_out": [786, 789], "fake_quant_en": 786, "observer_en": 786, "calculate_qparam": [787, 806, 807, 811], "qscheme": [789, 806, 807, 808, 809, 812, 813, 814, 1871, 1913, 1918, 1921, 1934], "fake_qu": [790, 794, 795, 796, 1918], "default_fake_qu": 791, "default_per_channel_weight_fake_qu": 792, "default_weight_fake_qu": 793, "histogram": [794, 806, 818, 1152, 1154, 1871, 1913, 1932], "memoryless": [795, 796], "averaging_const": [795, 796, 808, 809, 1871], "modules_to_fus": 801, "fuser_func": 801, "fuse_known_modul": 801, "fuse_custom_config_dict": [801, 803], "convmodul": 801, "bnmodul": 801, "convbnmodul": 801, "additional_fuser_method_map": 801, "fuse_conv_bn": [801, 1920], "conv1": [801, 1203, 1425, 1453, 1870, 1918, 1932], "bn1": 801, "relu1": [801, 1453, 1596], "fused_m": 801, "custom_config": [802, 803, 804, 805], "convert_fx": [802, 1918, 1937], "convert_custom_config": [802, 846, 1918], "set_observed_to_quantized_map": 802, "set_preserved_attribut": [802, 803, 804], "attr1": [802, 803, 804, 1911], "attr2": [802, 803, 804, 1911], "floatcustommodul": [802, 804], "weight_onli": [802, 846, 1918], "preserved_attribut": [802, 803, 804], "observed_class": [802, 804], "quantized_class": 802, "quant_typ": [802, 804], "quanttyp": [802, 804], "fuse_fx": [803, 1918], "fuse_custom_config": [803, 847], "convertcustomconfig": [803, 846], "prepare_fx": [804, 827, 846, 849, 1918, 1937], "prepare_qat_fx": [804, 846, 1918], "prepare_custom_config": [804, 805, 848, 849, 1918], "set_standalone_module_nam": 804, "module1": [804, 841, 1896], "qconfig_map": [804, 805, 841, 842, 843, 846, 848, 849, 1918], "child_prepare_custom_config": 804, "set_standalone_module_class": 804, "mystandalonemodul": 804, "set_float_to_observed_map": 804, "set_non_traceable_module_nam": 804, "module2": [804, 841, 1896], "module3": [804, 1896], "set_non_traceable_module_class": 804, "nontraceablemodule1": 804, "nontraceablemodule2": 804, "set_input_quantized_index": 804, "set_output_quantized_index": 804, "prepare_custom_config_dict": [804, 825, 827, 1918], "standalone_module_nam": 804, "standalone_module_class": 804, "module_class": 804, "float_to_observed_custom_module_class": [804, 825, 1918], "non_traceable_module_nam": 804, "non_traceable_module_class": 804, "input_quantized_idx": 804, "output_quantized_idx": 804, "float_class": 804, "qconfigmap": [805, 842, 843, 846, 848, 1918, 1921], "preparecustomconfig": [805, 848], "2048": [806, 1468, 1470, 1472, 1896], "upsample_r": 806, "per_tensor_affin": [806, 807, 808, 1716, 1717, 1718, 1719, 1918, 1921], "reduce_rang": [806, 807, 808, 809, 812, 814, 1871, 1918, 1919], "factory_kwarg": [806, 807, 812], "1920928955078125e": [806, 807, 808, 809, 812], "vari": [806, 1456, 1638, 1771, 1883, 1906, 1907, 1914, 1918, 1919, 1927, 1944, 1945, 1946, 1956, 1958], "finfo": [806, 807, 808, 809, 812, 1246, 1249, 1329, 1869, 1934], "minmaxobserv": [806, 808, 812, 828, 848, 849, 1921], "x_": [807, 808, 957, 1075, 1265, 1266, 1268, 1271, 1279, 1342, 1361, 1415, 1432, 1458, 1460, 1580, 1792, 1794, 1836, 1893, 1921, 1928], "q_": [807, 1921], "x_orig": 807, "reset_min_max_v": [807, 812], "ch_axi": [809, 812, 1871], "per_channel_affin": [809, 812, 1715, 1918, 1921], "custom_op_nam": [810, 813], "with_arg": [811, 828, 848, 849], "_callable_arg": 811, "_with_arg": 811, "foo_build": 811, "foo_instance1": 811, "foo_instance2": 811, "with_callable_arg": 811, "_with_callable_arg": 811, "cur_tim": 811, "get_time_func": 811, "dan": 811, "creation_tim": 811, "compute_dtyp": 813, "ptq": [818, 1918, 1919, 1921], "obs_dict": 824, "get_observer_state_dict": 824, "allow_list": [825, 1936], "observer_non_leaf_module_list": 825, "preemptiv": [825, 826, 1605], "propagate_qconfig_": 827, "qconfig_dict": [827, 841], "my_qconfig": 828, "default_observ": 828, "default_qat_config": 834, "set_glob": [841, 846, 848, 1918], "set_object_typ": [841, 846, 848], "set_module_name_regex": 841, "regex": 841, "set_module_nam": [841, 846, 848], "set_module_name_object_type_ord": 841, "global_qconfig": 841, "qconfig1": 841, "qconfig2": 841, "qconfig3": 841, "object_typ": 841, "module_name_regex": 841, "module_name_object_type_ord": 841, "conv0": 841, "x86": [842, 843, 1758, 1918, 1920], "run_arg": [844, 850], "counterpart": [844, 851, 1261, 1605, 1873, 1881, 1935, 1936, 1944], "qconfig_spec": 845, "quantize_fx": [846, 847, 848, 849, 1918, 1937], "graph_modul": [846, 1955], "_remove_qconfig": 846, "qconfig_from_prepar": 846, "prepared_model": [846, 848, 849], "xnnpack": [846, 1881, 1918], "get_default_backend_config": [846, 848, 849], "quantized_model": 846, "fusion_pattern": 847, "fusecustomconfig": 847, "_equalization_config": 848, "get_default_qconfig_map": [848, 1918], "float_model": [848, 849, 1936], "data_load": [848, 849, 1689, 1695, 1906], "get_default_qconfig": [848, 849, 1918], "linear_pattern_config": 848, "suer": 848, "sample_inference_data": 848, "get_default_qat_qconfig_map": [849, 1918], "load_weight": 849, "train_data": 849, "get_default_qat_qconfig": [849, 1918], "custom_module_class_map": 851, "lceil": [852, 928], "rceil": [852, 928], "adjac": [852, 918, 1364, 1365, 1366, 1370, 1729, 1927], "set_default_tensor_typ": [852, 908, 917, 1066, 1068, 1078, 1083, 1101, 1119, 1139, 1149, 1150, 1211, 1262, 1278, 1656, 1722, 1724, 1726, 1728, 1729, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1797, 1798, 1799, 1800, 1801, 1802, 1840, 1842, 1866], "get_default_dtyp": [852, 1262, 1278, 1662, 1729, 1929, 1930, 1959], "5000": [852, 867, 873, 874, 875, 910, 934, 1083, 1085, 1086, 1093, 1096, 1101, 1111, 1113, 1114, 1115, 1145, 1151, 1154, 1217, 1243, 1262, 1320, 1322, 1350, 1351, 1369, 1477, 1714, 1718, 1719, 1720, 1729, 1733, 1928, 1933], "maxim": [861, 1289, 1421, 1422, 1423, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1681, 1682, 1683, 1684, 1927, 1946, 1956], "3398": 861, "2663": [861, 1896], "2686": 861, "2450": 861, "7401": 861, "8805": 861, "3402": 861, "1936": 861, "4907": [861, 1279], "3948": [861, 952], "0691": 861, "3132": 861, "6092": 861, "5419": 861, "2993": [861, 1814], "3195": 861, "1139": 862, "2254": 862, "1381": [862, 1814], "3687": 862, "1975": [862, 1888], "0102": 862, "4732": 862, "9240": 862, "1207": [862, 1314], "7506": 862, "0213": 862, "7809": 862, "2960": 862, "9384": 862, "1438": 862, "ascend": [863, 1085, 1228, 1230, 1259, 1313, 1749, 1787, 1847], "0785": 863, "5267": 863, "8521": 863, "4065": 863, "1598": 863, "0788": 863, "0745": 863, "2700": 863, "2208": 863, "0722": 863, "7064": 863, "2564": 863, "0669": 863, "2318": 863, "8229": 863, "9280": 863, "lexicograph": [864, 1651, 1873, 1927], "9039": 865, "6291": 865, "0795": [865, 1714, 1904], "1586": 865, "1939": 865, "4900": 865, "7503": 865, "9355": 865, "histori": [866, 867, 1131, 1673, 1829, 1869, 1880, 1888, 1898, 1900, 1924], "dlpack": [867, 1116, 1869], "frombuff": 867, "data_ptr": [867, 1886, 1929, 1931], "addbackward0": [867, 1904, 1909], "__array_interface__": 867, "5962": 868, "4985": 868, "4396": 868, "4525": [868, 1888], "6387": 868, "4552": 868, "sine": [869, 1770, 1780, 1782], "1606": 869, "4267": 869, "0899": 869, "0250": 869, "1599": 869, "1534": 869, "9435": 869, "8990": [869, 1060], "arctang": [870, 871], "2341": 870, "2539": 870, "6256": 870, "6448": 870, "2299": 870, "2487": 870, "5591": [870, 892], "5727": 870, "quadrant": 871, "9041": [871, 927], "0196": [871, 927], "3108": [871, 927], "4423": [871, 927], "9833": 871, "0811": 871, "9743": 871, "4151": 871, "tangent": [872, 882, 883, 1128, 1129, 1465, 1827, 1828], "9385": 872, "2968": 872, "8591": 872, "1871": 872, "7253": 872, "3060": 872, "2899": 872, "1893": 872, "needs_input_grad": [876, 1898], "setup_context": [877, 1899], "save_for_forward": [877, 1899], "grad_input": [878, 885, 887, 900, 1192, 1425, 1601, 1898, 1904], "underneath": 879, "generate_vmap_rul": [879, 1899], "out_dim": [879, 1133, 1861, 1871, 1887, 1899], "grad_tensor": [880, 894, 1871, 1896], "grad_vari": 880, "forward_ad": 881, "dual": [881, 882, 883, 1650, 1899], "make_du": [881, 883], "your_fn": 881, "unpack_du": [881, 882], "grad_aft": 881, "dual_level": [882, 883], "primal": [883, 1124, 1128, 1129, 1132], "x_npy": 884, "once_differenti": [884, 885, 886, 887, 1898], "g1": [885, 887, 1896, 1925], "g2": [885, 887, 1896, 1925], "oppos": [886, 1899], "weren": 886, "grad_out": [886, 1871, 1901, 1951], "gx": 886, "gy": 886, "gz": 886, "simplefunc": 887, "induc": [887, 1524, 1562, 1891, 1944], "outer_jacobian_strategi": 888, "disconnect": [888, 889, 890, 891, 892, 893], "said": [888, 889, 890, 891, 892, 893, 1880, 1907], "cliff": [888, 890, 894], "_debug_only_display_vmap_fallback_warn": [888, 894], "pow_reduc": [888, 889, 892], "2265": 888, "8221": 888, "9456": [888, 909], "2550": 888, "viewbackward": [888, 890], "pow_adder_reduc": [888, 889, 892], "func_output": [889, 891, 892, 893], "1448": 889, "0239": 889, "6456": 889, "4988": 889, "4310": 889, "sumbackward0": [889, 892], "3030": 889, "vhp": 889, "batched_grad": 890, "exp_reduc": [890, 891, 893], "4917": 890, "4352": 890, "4369": 890, "3799": 890, "exp_add": 890, "8052": 890, "3963": 890, "3090": 891, "6742": 891, "9114": 891, "2106": 891, "sumbackward1": [891, 893], "squeezebackward1": 891, "adder": [891, 893], "2399": 891, "5005": 891, "0689": 892, "2431": 892, "0989": 892, "4456": 892, "8053": [892, 1744], "7817": 893, "2458": 893, "7830": 893, "7782": 893, "4458": 893, "3962": 893, "3042": [893, 1249], "6354": 893, "1288": [893, 1773], "0652": 893, "5483": 893, "5035": 893, "2046": [893, 952], "1292": 893, "1432": 893, "3059": 893, "3225": 893, "6652": 893, "7753": 893, "0152": 893, "4225": 893, "3340": 893, "only_input": 894, "allow_unus": [894, 1871], "is_grads_batch": 894, "materialize_grad": 894, "require_grad": [894, 1873, 1893], "06": [895, 896, 1232, 1237, 1238, 1249, 1250, 1255, 1379, 1434, 1473, 1476, 1521, 1590, 1668, 1682, 1815, 1871, 1934], "raise_except": [895, 896], "check_sparse_nnz": 895, "nondet_tol": [895, 896], "check_undefined_grad": [895, 896], "check_grad_dtyp": [895, 896], "check_batched_grad": [895, 896], "check_batched_forward_grad": 895, "check_forward_ad": 895, "check_backward_ad": 895, "fast_mod": [895, 896, 1901], "differenc": [895, 1898], "perturb": [895, 896, 1901], "sparsetensor": [895, 1800], "gradgradcheck": [895, 1898], "gen_non_contig_grad_output": 896, "check_fwd_over_rev": 896, "check_rev_over_rev": 896, "noncontigu": [896, 1008, 1934], "inaccuraci": 896, "clonebackward0": 898, "gi": [900, 901, 1904], "removablehandl": [900, 901, 1192, 1425, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1915], "eventlist": [903, 904], "chrome": [903, 1917, 1950, 1954], "group_by_stack_n": [904, 1917], "roof": 904, "functioneventavg": [904, 906], "window_length": [908, 917, 1149, 1150, 1211, 1871], "2n": [908, 1768, 1927], "trim": [908, 917, 1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1149, 1150, 1189], "_length": [908, 917, 1149, 1150, 1189, 1348, 1811], "sim": [909, 1439, 1567, 1706, 1726], "pseudorandom": [909, 1315, 1653, 1703, 1706, 1722, 1724, 1726, 1728, 1816], "1737": 909, "0950": [909, 1793], "3609": 909, "7148": 909, "0289": [909, 1839], "2676": 909, "8937": 909, "7202": 909, "2500": [910, 1083, 1085, 1086, 1096, 1101, 1262, 1477, 1720], "7500": [910, 1086, 1096, 1115, 1145, 1247, 1262, 1477, 1720, 1776], "AND": [911, 1273, 1873, 1893], "OR": [914, 1275, 1873], "xor": [916, 1276, 1873], "blackman": [917, 1778], "arrang": 918, "broadcast_tensor": [920, 1871, 1913], "out_int32": [923, 1749, 1871], "opposit": [923, 1086, 1088, 1815, 1835], "formal": [923, 1749, 1880, 1887], "eg": [923, 1742, 1749, 1955], "tensor_a": [925, 938], "tensor_b": 925, "6580": 926, "0969": 926, "4614": 926, "1034": [926, 1065], "5790": 926, "1497": 926, "compute_mod": [927, 1951], "use_mm_for_euclid_dist_if_necessari": 927, "distanc": [927, 1189, 1227, 1228, 1255, 1385, 1434, 1473, 1474, 1564, 1689, 1811, 1815, 1869], "infti": [927, 1189, 1243, 1341, 1393, 1394, 1456, 1564, 1680, 1928], "use_mm_for_euclid_dist": 927, "donot_use_mm_for_euclid_dist": 927, "minkowski": [927, 1564], "ham": [927, 1149, 1564, 1774], "closest": [927, 1564], "xn": [927, 1564], "4821": [927, 930], "059": 927, "0590": 927, "1763": [927, 1732], "4713": [927, 1732], "6986": [927, 1732], "3702": [927, 1732], "1193": [927, 1281], "0959": 927, "7138": 927, "8322": 927, "2830": [927, 1841], "3791": 927, "6341": 928, "4208": 928, "0900": 928, "5826": 928, "clr": [929, 1689], "3375": 929, "9790": 929, "1119": 929, "6577": 929, "5609": [929, 1515], "5095": 929, "2614": 929, "4038": 929, "3378": [929, 1841], "4982": 929, "2457": [929, 1294], "2561": 929, "4684": 929, "7163": 929, "9647": 929, "8917": [929, 1272], "3213": [929, 1268], "2284": [929, 1045], "8615": 929, "2816": 929, "tu": 930, "mt": [930, 931, 1221, 1228, 1230, 1234, 1235, 1236, 1241, 1250, 1713, 1815, 1871, 1880, 1913, 1931, 1933], "4112": 930, "7486": 930, "4551": 930, "3544": 930, "6724": 930, "5528": 930, "0592": [930, 1904], "9371": 930, "5487": 930, "7023": 930, "03": [930, 931, 1269, 1771, 1772, 1777], "3842e": [930, 1237], "dpotri": 931, "spotri": 931, "uu": 931, "9935": 931, "6353": 931, "5806": 931, "8769": 931, "7183": [931, 1243, 1904], "6618": 931, "9314": 931, "2251": [931, 965, 1224, 1266], "0889": 931, "4439": 931, "2122": 931, "1412": 931, "5894e": 931, "semidefinit": 932, "7747": 932, "9549": 932, "3086": 932, "4114": 932, "8733": 932, "6355": 932, "9891": 932, "1974": 932, "4706": 932, "4115": 932, "6225": 932, "1625": 932, "6097": 932, "8398": 932, "2387": [932, 953], "3771": [932, 1238], "4173": 932, "1626": [932, 965, 1224], "tensor_split": [933, 1063, 1155, 1862, 1871, 1913, 1931], "min_valu": [934, 1384], "max_valu": [934, 1384, 1871], "_valu": [934, 1333, 1610, 1800, 1898, 1913, 1927], "7120": 934, "1734": [934, 1166], "0478": [934, 1864], "0922": 934, "3333": [934, 1145, 1154, 1477, 1478, 1829], "horizont": [937, 1155, 1157, 1914, 1916, 1946], "hstack": [937, 1871, 1913, 1927], "with_replac": [938, 1871], "combinations_with_replac": 938, "fullgraph": [939, 1946, 1956], "cache_size_limit": [939, 1946, 1949, 1956], "subgraph": [939, 1665, 1893, 1897, 1911, 1915, 1937, 1943, 1945, 1956], "list_backend": [939, 1938, 1942, 1948], "autotun": [939, 1950], "cudagraph": [939, 1000, 1896, 1938, 1946, 1948, 1950, 1953], "realloc": [939, 1166], "leverag": [939, 1923, 1938, 1940, 1948], "triton": [939, 1899, 1938, 1941, 1943, 1946, 1948, 1956], "_inductor": [939, 1946, 1956], "list_mode_opt": 939, "notabl": [939, 1873], "epilogue_fus": 939, "templat": [939, 1008, 1009, 1914], "max_autotun": 939, "fallback_random": [939, 1946, 1956], "shape_pad": 939, "graph_diagram": 939, "pictur": 939, "list_opt": 939, "_glibcxx_use_cxx11_abi": 940, "bypass": [941, 1065, 1877, 1888, 1896, 1898, 1947], "exclude_tag": 945, "flip": [950, 1106, 1107, 1259, 1871, 1913, 1914, 1951], "lazi": [950, 1204, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1596, 1869, 1944], "writeabl": [950, 951], "is_conj": [950, 1737, 1871, 1913], "geq": [952, 1136, 1223, 1231, 1361, 1411, 1432, 1433, 1443, 1507, 1559, 1612, 1891, 1928], "signbit": [952, 1871, 1913, 1927, 1951], "2557": 952, "0026": 952, "5387": 952, "4740": 952, "9244": 952, "7079": 952, "2778": 952, "0249": [952, 1267], "5719": 952, "0059": 952, "2600": 952, "4475": 952, "9567": [952, 1227, 1814], "5757": 952, "1751": 952, "0742": 952, "2998": 952, "1054": 952, "2373": 952, "3190": [952, 1896], "1128": [952, 1249, 1395], "pearson": 953, "coeffici": [953, 1149, 1668, 1670, 1671, 1672, 1674, 1680, 1684, 1773, 1774, 1775, 1838], "r_": [953, 1831], "ij": [953, 1065, 1271, 1279, 1293, 1428, 1792], "c_": [953, 1353, 1354, 1355, 1356, 1357, 1358, 1395, 1437, 1438], "jj": 953, "hermitian": [953, 1081, 1082, 1084, 1086, 1087, 1088, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1221, 1222, 1227, 1228, 1230, 1234, 1235, 1236, 1246, 1249, 1255, 1871], "cov": [953, 1871, 1913], "2678": [953, 1368], "0908": 953, "3766": 953, "2780": 953, "5812": 953, "1535": [953, 1368], "2350": 953, "3582": 953, "4309": 954, "2706": 954, "8562": 954, "9796": [954, 1237], "1395": 954, "2957": 954, "6553": 954, "5574": 954, "1632": 955, "1835": 955, "6979": 955, "7325": [955, 1055], "0133": 955, "7860": 955, "2536": 955, "2805": 955, "sleef": [955, 1782], "unbias": [957, 1343, 1344, 1345, 1380, 1388, 1389, 1390, 1397, 1464, 1809, 1810, 1856, 1857, 1871, 1951], "_w": 957, "y_": [957, 1075, 1265, 1266, 1268, 1342, 1361, 1391, 1792, 1836, 1893, 1928], "w_i": [957, 1231], "mu_x": 957, "mu_i": [957, 1674], "whichev": [957, 1133, 1524, 1714, 1861, 1896], "w_ix_": 957, "bessel": [957, 1211, 1777, 1809, 1810, 1856, 1857, 1928], "corrcoef": [957, 1871, 1913], "6667": [957, 1154, 1477, 1478, 1734, 1768, 1909], "fw": 957, "4282": 957, "0255": [957, 1052], "4144": [957, 1896], "4169": 957, "streamcontext": [963, 1040, 1869], "abstractcontextmanag": 963, "3956": [965, 1224], "1455": [965, 1224, 1910], "6895": [965, 1224], "5849": [965, 1224], "3599": [965, 1224], "7180": [965, 1224], "0521": [965, 1224], "1339": [965, 1224], "0225": [965, 1224, 1237], "0257": [965, 1224], "4725": [965, 1224], "1479": [965, 1224], "7005": [965, 1224], "9757": [965, 1224], "3904": [965, 1224], "3726": [965, 1224], "1836": [965, 1224], "9688": [965, 1224], "7153": [965, 1224, 1928], "2159": [965, 1224], "0844": [965, 1224], "5281": [965, 1224], "6120": [965, 1224], "4490": [965, 1224], "5687": [965, 1224], "9792": [965, 1046, 1224], "8304": [965, 1224], "3037": [965, 1224, 1904], "5650": [965, 1224], "2329": [965, 1224], "9883": [965, 1224], "0551": [965, 1224], "capture_begin": [966, 1896], "capture_error_mod": [966, 1000], "make_graphed_cal": [966, 1896], "graph_pool_handl": [966, 1000], "other_graph_inst": [966, 1000], "cudastreamcapturemod": [966, 1000], "thread_loc": [966, 1000], "cudamalloc": [966, 1000, 1022, 1896, 1958], "unsaf": [966, 1000, 1263, 1614, 1617, 1871, 1896, 1915], "capture_end": [966, 1896], "replai": [966, 1000, 1660, 1896, 1941, 1956], "debug_dump": 966, "debug_path": 966, "enable_debug_mod": 966, "path_to_so_fil": 967, "alloc_fn_nam": 967, "free_fn_nam": 967, "ctype": 967, "change_current_alloc": [967, 1896], "ssize_t": [967, 1896], "cudastream_t": [967, 969, 1896], "ptr": [967, 1896], "size_t": 967, "oss": 967, "enable_tim": [968, 1303, 1896], "interprocess": 968, "marker": [968, 1303], "elapsed_tim": [968, 1303, 1896], "end_ev": [968, 1303, 1896], "elaps": [968, 1303, 1883], "from_ipc_handl": 968, "reconstruct": [968, 1281, 1341, 1342, 1901, 1909, 1915], "ipc": [968, 1004], "ipc_handl": 968, "cudaeventsynchron": 968, "cudastreamwaitev": [968, 969, 971], "stream_ptr": 969, "record_ev": [969, 971], "cudastreamsynchron": [969, 971], "wait_ev": [969, 971], "interoper": 973, "caching_allocator_delet": 973, "mem_ptr": 974, "caching_allocator_alloc": 974, "peer_devic": 975, "_cudaalloc": 976, "clock": 977, "sm": 977, "hertz": 977, "smi": [977, 990, 1018, 1024, 1028, 1042, 1043, 1896, 1900, 1902], "buffer_s": 979, "10485760": 979, "chunk_siz": [982, 1127, 1133, 1861], "cublashandle_t": 983, "unoccupi": [990, 1302], "pytorch_cuda_alloc_conf": [991, 1896], "cudamallocasync": [991, 1022, 1896], "_cudadeviceproperti": 995, "gencod": 996, "eagerli": [997, 1003, 1896, 1944], "cuda_graph": 1000, "ordinari": [1002, 1605, 1853, 1892], "code_str": [1008, 1009], "temp": 1008, "typenam": [1008, 1009], "my_kernel": [1008, 1009], "jitted_fn": [1008, 1009], "create_jit_fn": [1008, 1009], "util_fn": 1008, "gelu": [1008, 1454, 1468, 1470, 1472, 1577, 1871, 1888, 1913, 1951], "my_gelu": 1008, "my_lib": [1008, 1877, 1910], "impl": [1008, 1877], "num_output": 1009, "sample_arg": 1011, "num_warmup_it": 1011, "allow_unused_input": 1011, "datadistributedparallel": 1011, "amp": [1011, 1853, 1869, 1892, 1950, 1953, 1956], "autocast": [1011, 1431, 1869, 1896, 1898, 1956], "insuffici": [1012, 1944, 1956], "manual_seed_al": [1012, 1853], "occupi": [1014, 1018, 1029, 1300, 1413, 1542, 1896, 1902, 1959], "reset_peak_memory_stat": [1014, 1016, 1029, 1030], "max_memory_reserv": [1015, 1896, 1902], "cudamemgetinfo": 1017, "memory_reserv": [1019, 1896, 1902], "snapshot": [1021, 1869, 1873, 1896, 1902], "large_pool": 1022, "small_pool": 1022, "allocated_byt": 1022, "reserved_byt": 1022, "active_byt": 1022, "inactive_split": 1022, "inactive_split_byt": 1022, "octob": 1022, "1mb": [1022, 1958], "num_alloc_retri": 1022, "num_oom": 1022, "assist": [1022, 1897], "max_split_s": 1022, "oversize_alloc": 1022, "oversize_seg": 1022, "requested_byt": 1022, "abbrevi": 1023, "percent": [1024, 1043, 1950], "instantan": [1025, 1917], "ascii": [1025, 1027, 1263, 1873, 1917], "sensor": [1028, 1042], "mw": 1028, "milliwatt": 1028, "fermi": 1028, "max_memory_alloc": [1029, 1896, 1902], "max_memory_cach": 1030, "memory_stat": [1031, 1896, 1902], "seed_al": 1032, "environment": [1034, 1950], "total_memori": [1035, 1310], "debug_mod": [1039, 1756], "centigrad": 1042, "x_1": [1044, 1045, 1046, 1047, 1259, 1346, 1359, 1360, 1495, 1506, 1836], "x_2": [1044, 1045, 1046, 1047, 1259, 1346, 1359, 1360, 1495, 1506], "x_3": [1044, 1045, 1046, 1047, 1259], "3449": 1044, "5447": 1044, "0685": 1044, "5104": [1044, 1896], "1706": 1044, "2259": 1044, "4696": 1044, "3284": 1044, "9946": 1044, "8209": [1044, 1047], "6628": 1045, "0975": 1045, "2680": [1045, 1895], "3298": [1045, 1052], "4220": 1045, "3885": 1045, "1762": 1045, "9165": 1045, "6684": [1045, 1169], "6001": 1046, "2069": 1046, "1919": 1046, "6727": [1046, 1059], "0062": 1046, "4126": 1046, "2129": 1046, "4206": 1046, "1968": [1046, 1928], "1241": 1046, "0238": 1046, "0233": [1046, 1721], "0157": 1046, "0158": [1046, 1815], "0065": 1046, "0014": [1046, 1928], "0006": 1046, "8286": 1047, "4890": 1047, "5155": 1047, "8443": 1047, "1865": 1047, "1752": [1047, 1055], "0595": 1047, "1850": 1047, "1571": [1047, 1904, 1909], "4243": 1047, "3175": 1047, "8020": [1047, 1711], "0423": 1047, "2289": 1047, "0537": 1047, "0058": 1047, "9780": 1047, "trapezoid": [1048, 1837, 1871, 1913], "360": 1049, "2832": 1049, "diagflat": [1052, 1871, 1913], "5950": 1052, "0872": 1052, "4264": 1052, "1064": [1052, 1904], "8795": 1052, "2429": 1052, "1374": 1052, "1029": 1052, "6482": 1052, "6300": 1052, "5410": 1053, "2934": 1053, "1788": [1053, 1928], "5684": 1053, "0845": [1053, 1782, 1904], "3986": 1053, "2956": [1054, 1224], "9068": 1054, "1695": 1054, "2094": [1054, 1896], "3018": 1054, "1516": 1054, "9342": 1054, "0854": 1055, "1431": 1055, "8536": 1055, "0905": 1055, "0360": [1055, 1314], "6927": 1055, "3735": 1055, "4945": 1055, "2631": [1055, 1313, 1896], "3755": 1055, "5977": 1055, "8172": 1055, "1065": [1055, 1904], "0401": 1055, "2235": [1055, 1814], "7938": 1055, "3081": 1055, "6166": 1055, "2335": 1055, "0500": 1055, "7336": 1055, "3836": 1055, "1015": 1055, "emb": [1056, 1752, 1783], "5393": 1059, "8675": 1059, "5916": 1059, "6321": 1059, "0967": 1059, "0511": 1059, "6295": 1059, "8360": 1059, "6973": 1059, "6537": 1059, "dividend": [1060, 1110, 1113, 1733, 1843], "true_divid": [1060, 1871, 1913], "3810": [1060, 1153], "2774": 1060, "2972": 1060, "3719": 1060, "4637": 1060, "7620": 1060, "5548": 1060, "5944": 1060, "7438": 1060, "9274": 1060, "3711": 1060, "9353": 1060, "4605": 1060, "2917": 1060, "1815": [1060, 1272], "0111": [1060, 1771], "9805": 1060, "5923": 1060, "1062": 1060, "4581": [1060, 1231], "7759": 1060, "2344": 1060, "1830": 1060, "0313": 1060, "1908": 1060, "4757": 1060, "8032": 1060, "2930": 1060, "8113": 1060, "2308": 1060, "4620": [1060, 1864], "6051": 1060, "5676": 1060, "2639": 1060, "2260": 1060, "4509": [1060, 1245], "2086": 1060, "1322": 1060, "9764": 1060, "9564": 1060, "3484": 1060, "2278": 1060, "1068": [1060, 1166], "4678": 1060, "3938": [1060, 1824], "depthwis": [1063, 1064, 1353, 1354, 1355], "atleast_3d": [1064, 1871, 1913], "notat": [1065, 1391, 1762, 1874, 1904, 1933], "einstein": 1065, "summat": [1065, 1189, 1271, 1279, 1927], "subscript": [1065, 1874, 1906], "jk": [1065, 1950], "ik": [1065, 1264, 1792], "za": 1065, "alphabet": [1065, 1508, 1923], "arrow": [1065, 1925], "ki": 1065, "ellipsi": [1065, 1873, 1874, 1887], "fourth": 1065, "whitespac": [1065, 1874], "opt_einsum": [1065, 1869], "_the_": 1065, "disclaim": 1065, "sublist": [1065, 1956], "52": 1065, "op1": [1065, 1873], "sublist1": 1065, "op2": [1065, 1873], "sublist2": 1065, "subslist_out": 1065, "2104": 1065, "7952": 1065, "2433": 1065, "4545": 1065, "1156": 1065, "2897": [1065, 1904], "3918": 1065, "4963": 1065, "3744": 1065, "9381": 1065, "2685": 1065, "6070": 1065, "7208": 1065, "8058": 1065, "4419": 1065, "0936": 1065, "1713": 1065, "4291": 1065, "5802": 1065, "7350": [1065, 1928], "5704": 1065, "4290": 1065, "9323": 1065, "4480": 1065, "bij": 1065, "bjk": 1065, "bik": 1065, "0564": 1065, "5904": 1065, "2023": 1065, "1271": 1065, "6706": [1065, 1714], "8097": 1065, "8025": 1065, "1183": 1065, "2239": [1065, 1251], "3107": 1065, "5756": 1065, "2354": 1065, "4558": 1065, "3460": 1065, "5087": 1065, "8530": [1065, 1350, 1480], "8153": 1065, "8787": 1065, "3839": [1065, 1860], "2112": [1065, 1839], "3728": 1065, "1131": [1065, 1711], "0921": 1065, "8305": 1065, "ji": 1065, "anm": 1065, "bm": 1065, "ba": 1065, "3430": [1065, 1272], "2405": 1065, "4494": 1065, "3311": 1065, "5201": 1065, "0356": 1065, "4064e": 1066, "8000e": 1066, "3493e": 1066, "5751e": 1066, "1428e": 1066, "5955e": 1066, "9683e": 1068, "1239e": 1068, "0705e": 1068, "orig_func": [1069, 1650], "set_grad_en": [1069, 1871, 1913, 1935], "doubler": [1069, 1167, 1650], "tripler": [1069, 1650], "elsewher": [1070, 1078, 1136, 1148, 1182, 1184, 1185, 1188, 1216, 1280, 1326, 1793, 1868], "_max": [1079, 1080, 1918], "_min": [1079, 1080, 1918], "nearbi": [1079, 1080], "_int": [1079, 1080], "_point": [1079, 1080], "2525": 1079, "0466": 1079, "3491": [1079, 1245], "2168": [1079, 1831], "5906": [1079, 1928], "6258": 1079, "6444": 1079, "0542": 1079, "0475": [1079, 1928], "0486": 1079, "3405": 1079, "6134": [1079, 1294], "6323": 1079, "0552": 1080, "9730": 1080, "3973": 1080, "0780": 1080, "4000": [1080, 1083, 1092, 1101, 1477, 1717, 1768], "fourier": [1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1189, 1778, 1811, 1869], "rfft": [1081, 1086, 1096, 1100, 1101, 1102], "compact": [1081, 1082, 1084, 1234, 1236, 1239, 1898, 1911, 1918], "chalf": [1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1096, 1097, 1098, 1871, 1913, 1933], "sm53": [1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102], "ortho": [1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1264], "orthonorm": [1081, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1255, 1612, 1815], "ifft": [1081, 1085, 1086, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098], "fftn": [1082, 1085, 1091, 1094, 1102], "rfft2": [1082, 1097], "ifft2": [1082, 1094], "two_fft": [1082, 1084, 1094, 1100, 1102], "check_strid": [1082, 1084, 1085, 1090, 1091, 1096, 1097, 1098, 1100, 1102, 1934], "nyquist": [1083, 1085, 1093, 1095, 1099, 1100, 1101, 1102], "i_1": [1084, 1102, 1212], "i_n": [1084, 1102, 1133, 1212, 1831, 1861], "rfftn": [1084, 1088, 1094, 1098, 1100], "ifftn": [1084, 1090, 1095], "reorder": [1085, 1247], "rearrang": [1085, 1092, 1349, 1437, 1438, 1565, 1566, 1887], "fftfreq": [1085, 1092, 1101], "9000": [1085, 1829], "8000": [1085, 1320, 1477, 1714, 1768], "uncent": 1085, "ifftshift": 1085, "x_center": 1085, "x_uncent": 1085, "fft_uncent": 1085, "fft_center": 1085, "x_centered_2": 1085, "ihfft": [1086, 1094, 1095], "irfft": [1086, 1098, 1099], "symmetri": [1086, 1088, 1811], "transformed_dim_s": [1086, 1096], "0000j": [1086, 1093, 1096, 1221, 1222, 1227, 1228, 1230, 1707, 1765], "1250": [1086, 1313], "1720j": 1086, "0406j": 1086, "2809": 1086, "6250": [1086, 1096, 1115, 1477], "9691": 1086, "hfftn": [1087, 1095], "last_dim_s": [1087, 1088, 1097, 1098, 1951], "ihfft2": 1087, "roundtrip": [1087, 1088, 1096, 1097, 1098], "ihfftn": [1088, 1094], "irfftn": [1088, 1097, 1102], "fft2": [1090, 1100], "two_ifft": [1090, 1091, 1095], "fftshift": 1092, "hfft": 1093, "6882j": 1093, "1625j": 1093, "hfft2": 1094, "8602j": 1096, "2031j": 1096, "1562": 1096, "3511": 1096, "7812": 1096, "2114": 1096, "irfft2": 1100, "wider": [1108, 1870, 1873, 1914, 1927], "49": [1108, 1247, 1895], "2500e": 1108, "1000e": 1108, "7656e": 1108, "lfloor": [1109, 1114, 1333, 1338, 1339, 1340, 1353, 1354, 1355, 1372, 1393, 1394, 1418, 1419, 1420, 1476, 1477, 1478, 1479, 1493, 1562, 1729, 1811], "rfloor": [1109, 1114, 1333, 1338, 1339, 1340, 1353, 1354, 1355, 1372, 1393, 1394, 1418, 1419, 1420, 1476, 1477, 1478, 1479, 1493, 1562, 1729, 1811], "8166": 1109, "5308": 1109, "2530": 1109, "2091": 1109, "7000": [1111, 1369, 1767], "3000": [1112, 1368, 1767, 1896], "entrywis": [1113, 1733], "modulu": [1113, 1251, 1733], "operatornam": [1114, 1227, 1228, 1229, 1230, 1247, 1255, 1341, 1342, 1348, 1385, 1386, 1392, 1416, 1456, 1474, 1767], "8750": [1115, 1477], "char": [1118, 1662, 1886, 1929], "parameter_and_buffer_dict": 1121, "tie_weight": [1121, 1647], "submodule_nam": [1121, 1647], "parameter_nam": [1121, 1647], "ti": [1121, 1647, 1742, 1945], "ty": [1121, 1647], "foo_ti": [1121, 1647], "new_a": [1121, 1647], "mutlipl": 1121, "grad_weight": [1121, 1898], "detached_param": 1121, "parameters_and_buffer_dict": 1121, "reparamater": [1121, 1647], "paramat": 1121, "intermediate_upd": 1122, "mutations_and_view": 1122, "intermeid": 1122, "proxy_tensor": [1122, 1945, 1956], "make_fx": [1122, 1944, 1956], "inpt": 1122, "out1": [1122, 1871], "out2": [1122, 1871], "f_trace": 1122, "f_no_mutations_trac": 1122, "f_no_mutations_and_views_trac": 1122, "a_1": [1122, 1212], "view_1": 1122, "view_copi": [1122, 1871, 1913, 1935], "view_copy_1": 1122, "as_strid": [1122, 1871, 1913, 1931, 1951], "writ": 1122, "native_funct": [1122, 1898, 1951], "yaml": [1122, 1898, 1951], "aux": [1123, 1124, 1126, 1127, 1128, 1132], "my_loss_func": 1123, "y_pred": [1123, 1896], "loss_per_sampl": 1123, "y_true": 1123, "autodiff": [1126, 1127, 1128, 1250], "jacobian_f": [1126, 1127], "f_x": [1126, 1127], "jacboian": [1126, 1127], "expectedx": [1126, 1127], "expectedi": [1126, 1127], "_preallocate_and_copi": 1127, "stand": [1128, 1132, 1872, 1915, 1925], "jvp_out": 1128, "jvp_fn": 1129, "requr": 1129, "optimiz": [1131, 1870], "l1": [1131, 1385, 1386, 1456, 1533, 1578, 1622, 1631, 1904, 1909], "l2": [1131, 1386, 1416, 1456, 1667, 1668, 1669, 1670, 1672, 1674, 1680, 1681, 1683, 1892], "vjpfunc": 1132, "unsuccessfulli": [1133, 1861], "rummag": [1133, 1861], "batched_dot": [1133, 1861], "imposs": [1133, 1861, 1892], "jacobian_row": [1133, 1861], "get_vjp": [1133, 1861], "n1": [1133, 1735, 1861], "n0": [1133, 1861], "batched_pow": [1133, 1861], "autobatch": [1133, 1861], "sparse_grad": [1134, 1871, 1951], "tau": [1137, 1231, 1526, 1669, 1683, 1700, 1701, 1771, 1871], "elementari": [1137, 1893, 1901], "reflector": [1137, 1612, 1701], "household": [1137, 1231, 1612, 1701], "householder_product": [1137, 1612, 1700], "gel": [1137, 1237], "set_default_dtyp": 1139, "set_deterministic_debug_mod": [1140, 1850], "set_float32_matmul_precis": 1141, "edge_ord": [1145, 1871], "mathbb": [1145, 1221, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1237, 1238, 1241, 1243, 1250, 1252, 1254, 1255, 1361, 1432, 1612], "rightarrow": 1145, "closer": [1145, 1474, 1714, 1898, 1904, 1948, 1949, 1950], "interior": 1145, "theorem": 1145, "h_l": 1145, "h_r": 1145, "neighbor": [1145, 1189, 1477, 1479, 1811], "xi_1": 1145, "xi_2": 1145, "approx": [1145, 1816, 1901], "80": [1145, 1247, 1693, 1762, 1896, 1914], "halv": 1145, "coord": 1145, "54": [1149, 1387, 1774], "46": [1149, 1773], "hann_window": [1149, 1811, 1871, 1875, 1913], "hann": [1150, 1774], "hist": [1153, 1154, 1871], "bin_edg": [1153, 1154, 1871], "9524": 1153, "leftmost": [1154, 1888], "leg": 1158, "triangl": [1158, 1932], "hypotenus": 1158, "4031": 1158, "gammainc": [1160, 1928], "gammaincc": [1161, 1928], "index_reduce_": [1165, 1871], "1427": 1166, "0231": 1166, "5414": 1166, "0009": 1166, "4664": [1166, 1831], "2647": 1166, "1228": 1166, "6571": 1166, "7230": 1166, "6004": 1166, "inferencemod": [1167, 1893], "bump": 1167, "_version": [1167, 1913], "multidimension": [1169, 1261, 1388], "8173": 1169, "0874": 1169, "1784": 1169, "3279": 1169, "7894": 1169, "4682": 1169, "7159": 1169, "1506": 1169, "4034": 1169, "3657": 1169, "0387": 1169, "9892": 1169, "1774": 1169, "3261": 1169, "3917": 1169, "4537": [1169, 1596], "7493": 1169, "1724": 1169, "2291": 1169, "5749": 1169, "2267": 1169, "7920": 1169, "3607": 1169, "3701": 1169, "3666": 1169, "5850": [1169, 1222], "7242": 1169, "9837": 1169, "1560": 1169, "2907": 1169, "6785": 1169, "5671": [1169, 1223], "5452": 1169, "6912": 1169, "5509": 1169, "1782": 1169, "9843": 1169, "7366": 1169, "5672": [1169, 1653], "5115": 1169, "4864": 1169, "2476": 1169, "4337": 1169, "6347": 1169, "1748": 1169, "3567": [1169, 1222], "6558": 1169, "2469": [1169, 1904], "5787": [1169, 1272], "typecheck": [1179, 1913], "mypi": [1179, 1872, 1873], "warn_alwai": 1180, "set_warn_alwai": 1180, "nonfinit": 1181, "test_el": [1183, 1871], "assume_uniqu": [1183, 1871], "0j": [1188, 1858], "nola": 1189, "envelop": 1189, "hop": [1189, 1811], "shorter": [1189, 1911, 1923], "griffin": 1189, "ieee": [1189, 1379, 1778, 1907], "tran": 1189, "assp": 1189, "vol": [1189, 1379, 1778], "pp": [1189, 1379, 1778], "236": 1189, "apr": 1189, "1984": 1189, "slide": [1189, 1338, 1339, 1340, 1372, 1418, 1419, 1420, 1476, 1518, 1548, 1549, 1550, 1592, 1718, 1719, 1811], "fft_size": 1189, "scriptmodul": [1190, 1191, 1196, 1199, 1201, 1202, 1203, 1207, 1208, 1666, 1870, 1872, 1881, 1911], "implic": [1190, 1207, 1898, 1923, 1927], "attributemodul": 1190, "names_ag": 1190, "get_debug_st": 1191, "graphexecutorst": 1191, "_extra_fil": [1191, 1192, 1199, 1202, 1903], "save_to_buff": 1191, "add_modul": [1192, 1425], "init_weight": [1192, 1425, 1904], "buf": [1192, 1425], "20l": [1192, 1425], "1l": [1192, 1425], "5l": [1192, 1425], "pretti": [1192, 1665, 1762, 1870, 1942, 1945, 1949], "syntax": [1192, 1870, 1873, 1915, 1947], "code_with_const": 1192, "constmap": 1192, "extra_repr": [1192, 1425, 1898], "get_buff": [1192, 1425], "attributeerror": [1192, 1425, 1898, 1918], "get_extra_st": [1192, 1425], "set_extra_st": [1192, 1425], "get_paramet": [1192, 1425], "net_b": [1192, 1425], "net_c": [1192, 1425], "transit": [1192, 1293, 1425, 1811, 1869, 1870, 1938, 1949], "inlined_graph": 1192, "ipu": [1192, 1425, 1909], "missing_kei": [1192, 1425], "unexpected_kei": [1192, 1425], "remove_dupl": [1192, 1425], "named_children": [1192, 1425, 1904], "conv4": [1192, 1425], "conv5": [1192, 1425], "memo": [1192, 1425, 1945], "register_backward_hook": [1192, 1425, 1601], "register_full_backward_hook": [1192, 1425, 1904], "register_forward_hook": [1192, 1425, 1599, 1904], "with_kwarg": [1192, 1425], "always_cal": [1192, 1425, 1599], "fire": [1192, 1425, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1897, 1903, 1952], "register_module_forward_hook": [1192, 1425, 1904], "register_forward_pre_hook": [1192, 1362, 1425, 1600, 1904], "forward_pr": [1192, 1425], "register_module_forward_pre_hook": [1192, 1425, 1904], "register_module_full_backward_hook": [1192, 1425, 1597, 1893, 1904], "register_full_backward_pre_hook": [1192, 1425, 1904], "register_module_full_backward_pre_hook": [1192, 1425, 1904], "register_load_state_dict_post_hook": [1192, 1425, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "incompatible_kei": [1192, 1425], "register_modul": [1192, 1425, 1603], "register_paramet": [1192, 1425, 1604, 1898, 1904], "register_state_dict_pre_hook": [1192, 1425, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "keep_var": [1192, 1425], "gan": [1192, 1425, 1613, 1646], "witch": 1192, "share_memori": [1192, 1425, 1906], "share_memory_": [1192, 1425, 1885, 1929], "shallow": [1192, 1362, 1425, 1473, 1474, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "4d": [1192, 1344, 1372, 1389, 1425, 1477, 1518, 1535, 1562, 1593, 1717], "1913": [1192, 1425], "3420": [1192, 1425], "5113": [1192, 1425, 1831], "2325": [1192, 1224, 1425], "gpu1": [1192, 1425], "1914": [1192, 1425], "5112": [1192, 1425, 1896], "3741": [1192, 1425], "2382": [1192, 1314, 1425], "5593": [1192, 1425], "4443": [1192, 1425], "6122": [1192, 1425], "1150": [1192, 1425], "to_empti": [1192, 1425], "dst_type": [1192, 1425], "set_to_non": [1192, 1425, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1896], "the_typ": 1193, "the_valu": 1193, "script_bar": 1195, "addmod": 1195, "preserved_attr": 1196, "optimize_numer": 1196, "optimize_for_infer": [1196, 1942], "run_frozen_optim": 1196, "scripted_modul": [1196, 1203, 1909], "frozen_modul": 1196, "modified_tensor": 1196, "mymodule2": 1196, "dump_alias_db": 1196, "pdb": [1197, 1203, 1209, 1870, 1872], "training_method": 1197, "target_typ": 1198, "refin": [1198, 1887], "testcod": [1198, 1872], "key1": 1198, "val1": 1198, "key2": 1198, "val2": 1198, "_restore_shap": 1199, "scriptfunct": [1199, 1203, 1204, 1207, 1911], "readlin": [1199, 1263, 1915], "retrac": 1199, "other_method": 1201, "lesser": [1201, 1893, 1895], "extent": [1201, 1895, 1927], "frozen_mod": 1201, "offlin": 1202, "_frames_up": 1203, "_rcb": 1203, "scriptdict": 1203, "scriptlist": 1203, "test_sum": 1203, "scripted_fn": [1203, 1870], "conv2": [1203, 1425, 1453, 1870, 1918], "some_entry_point": 1203, "python_only_fn": 1203, "testnnmodul": 1203, "pdt_model": 1203, "scripted_model": [1203, 1915], "un": [1205, 1348, 1918], "unfus": 1205, "nb": 1205, "check_trac": [1207, 1208], "check_input": [1207, 1208, 1870], "check_toler": [1207, 1208], "_force_outplac": [1207, 1208], "_module_class": [1207, 1208], "_compilation_unit": [1207, 1208], "compilationunit": [1207, 1208], "example_kwarg_input": 1207, "_store_input": [1207, 1208], "trace_modul": [1207, 1870, 1873], "untrack": 1207, "checker": [1207, 1208, 1873, 1911], "diverg": [1207, 1208, 1391, 1536, 1869, 1873], "traced_foo": [1207, 1870], "example_weight": [1207, 1208], "example_forward_input": [1207, 1208], "example_inputs_is_kwarg": 1208, "method2": 1208, "example_method2_input": 1208, "weighted_kernel_sum": 1208, "use_memory_effici": 1209, "memory_effici": 1209, "scriptabl": 1209, "kaiser": [1211, 1468, 1470, 1472], "i_0": [1211, 1212, 1777, 1831, 1928], "zeroth": [1211, 1777, 1928], "out_i": 1211, "kroneck": 1212, "a_0": 1212, "a_n": 1212, "b_0": 1212, "b_1": 1212, "b_n": 1212, "k_0": [1212, 1831], "k_1": 1212, "k_n": 1212, "j_0": 1212, "j_1": 1212, "j_n": 1212, "k_t": 1212, "i_t": [1212, 1395, 1682], "b_t": 1212, "j_t": 1212, "bmatrix": 1212, "a_": [1212, 1283, 1413, 1831], "cdot": [1212, 1237, 1249, 1341, 1342, 1360, 1361, 1383, 1391, 1428, 1429, 1430, 1431, 1432, 1468, 1506, 1529, 1707, 1811, 1928, 1934], "vdot": [1212, 1259, 1260, 1871, 1913], "ddot": [1212, 1259], "kth": 1213, "full_lik": [1217, 1871, 1875, 1913], "logarithm": [1220, 1225, 1251, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1278, 1348, 1508, 1543, 1791, 1928], "gamma": [1220, 1343, 1344, 1345, 1380, 1388, 1389, 1390, 1397, 1464, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1683, 1685, 1689, 1690, 1693, 1698, 1699, 1717, 1869, 1871, 1911, 1913, 1914, 1928], "5724": [1220, 1928], "1208": [1220, 1928], "mathrlap": [1221, 1227, 1228, 1229, 1230, 1238, 1241, 1250, 1252, 1254, 1255, 1612], "qquad": [1221, 1223, 1227, 1228, 1229, 1230, 1231, 1238, 1241, 1250, 1252, 1254, 1255, 1612], "eigenvalu": [1221, 1227, 1228, 1229, 1230, 1243, 1246, 1249, 1254, 1255, 1264, 1703, 1871], "resp": [1221, 1228, 1230, 1254, 1255, 1272], "5266": 1221, "9586": 1221, "0626j": 1221, "4160": 1221, "5895": 1221, "2322": 1221, "2976j": 1221, "4928": [1221, 1831], "4692e": 1221, "8747e": 1221, "check_error": [1222, 1233, 1235, 1240, 1253, 1871], "opportun": [1222, 1870, 1924, 1945, 1946], "performantli": 1222, "3792": 1222, "9831j": 1222, "8757": 1222, "5425": 1222, "6374j": 1222, "kappa": 1223, "_p": [1223, 1434], "frobeniu": [1223, 1237, 1244, 1248, 1652], "nuc": [1223, 1244, 1248, 1261, 1623, 1632, 1652], "nuclear": [1223, 1244, 1248, 1652], "sigma_1": [1223, 1237, 1246, 1249], "sigma_n": 1223, "kappa_2": 1223, "kappa_": 1223, "4142": [1223, 1248, 1652, 1707], "1623": [1223, 1244], "2426": [1223, 1248, 1652], "7071": [1223, 1770], "5917": 1223, "9941": 1224, "5132": 1224, "5681": 1224, "4653": 1224, "4507": 1224, "4119": 1224, "6163": 1224, "1073": 1224, "3957": 1224, "9666": [1224, 1515], "0840": 1224, "3357": 1224, "2139": 1224, "slogdet": [1225, 1272, 1871, 1913], "0934": 1225, "1990": [1225, 1272], "4099": [1225, 1272], "7386": [1225, 1272], "diagonaliz": [1227, 1229], "eigenvector": [1227, 1228, 1264, 1871], "neq": [1227, 1228, 1231, 1255, 1326, 1428, 1430, 1668, 1669, 1670, 1672, 1674, 1680, 1681, 1683, 1687, 1815], "phi": [1227, 1228, 1255, 1375, 1522, 1815], "shall": [1227, 1228, 1255, 1614, 1618], "lambda_i": [1227, 1228, 1243], "lambda_j": [1227, 1228], "eigval": [1227, 1871], "9828": [1227, 1839, 1904], "3889j": 1227, "4617": 1227, "3010j": 1227, "1662": 1227, "7435j": 1227, "6139": 1227, "0562j": 1227, "1226": [1227, 1229], "5738j": [1227, 1229], "7537": [1227, 1229], "1286j": [1227, 1229], "9218": 1227, "1882": 1227, "2220j": 1227, "0270": 1227, "3867j": 1227, "7119e": 1227, "2841e": 1227, "uplo": [1228, 1230, 1871], "unitari": [1228, 1231, 1250, 1255, 1612, 1701], "ill": [1228, 1489, 1907], "eigvalsh": [1228, 1246], "9228": [1228, 1230], "2029": [1228, 1230], "0862j": [1228, 1230], "3464": [1228, 1230], "3277": [1228, 1230], "9415": [1228, 1230], "0846": 1228, "9964": 1228, "9170": 1228, "3898j": 1228, "0331j": 1228, "1062e": 1228, "5423e": 1228, "polynomi": [1229, 1230, 1696], "_n": [1229, 1230, 1232, 1612, 1898], "4576e": [1229, 1256], "5797": 1230, "4629": 1230, "1605": 1230, "3780": 1230, "1113": [1230, 1904], "7381": 1230, "h_1h_2": 1231, "h_k": 1231, "h_i": [1231, 1459], "_m": [1231, 1612], "tau_i": 1231, "8034": 1231, "4184j": 1231, "2588": 1231, "0174j": 1231, "6853": 1231, "7953j": 1231, "0790": 1231, "5620j": 1231, "6989j": 1231, "5360": 1231, "1193j": 1231, "3877": 1231, "6691j": 1231, "3512": 1231, "3024j": 1231, "4766": 1231, "5783j": 1231, "0361": [1231, 1904], "6587j": 1231, "6396": [1231, 1904], "1612j": 1231, "3693": 1231, "4481j": 1231, "aa": 1232, "pinv": [1232, 1237, 1705], "moor": [1232, 1249], "penros": [1232, 1249], "ainv": [1232, 1233, 1253, 1257], "1921e": 1232, "9073e": [1232, 1476], "5107e": 1232, "ldl": [1234, 1236], "indefinit": 1234, "ld": [1234, 1235, 1236, 1871], "sytrf": [1234, 1235], "ldl_solv": 1234, "ldl_factor_ex": [1234, 1236], "2079": [1234, 1235, 1928], "2414": [1234, 1235], "9428": [1234, 1235], "4554": [1234, 1235], "3264": [1234, 1235], "3823": [1234, 1235], "5884": [1234, 1235], "9595": [1234, 1235, 1770], "2695": [1234, 1235], "8513": [1234, 1235], "1633": [1234, 1235], "ldl_factor": 1235, "rcond": [1237, 1249, 1705, 1871], "_f": 1237, "gelsi": 1237, "gelsd": 1237, "gelss": 1237, "mind": [1237, 1255, 1368, 1893, 1899, 1901, 1949, 1954], "tridiagon": 1237, "sigma_i": [1237, 1255, 1815], "residu": [1237, 1264, 1871, 1904], "singular_valu": [1237, 1871], "lh": 1237, "rh": [1237, 1282], "0838": [1237, 1904], "2275": [1237, 1313], "3844": 1237, "5499": 1237, "1175": 1237, "9102": 1237, "0870": 1237, "6772": 1237, "7758": 1237, "5109": 1237, "4382": 1237, "3769": 1237, "1818": 1237, "3450": 1237, "0806": [1237, 1904], "3967": 1237, "3994": 1237, "1521": 1237, "1473": 1237, "9194": 1237, "0458": 1237, "6705": [1237, 1296], "1802": 1237, "4086": 1237, "5152e": 1237, "almost": [1238, 1239, 1910, 1945], "5007": 1238, "9755": 1238, "0489": 1238, "9644": [1238, 1291], "9605e": 1238, "0376e": 1238, "lu_factor_ex": [1239, 1281], "lu_unpack": [1239, 1281, 1871, 1913], "b1": 1239, "b2": [1239, 1896, 1902], "a_factor": 1239, "getrf": [1240, 1253], "adjoint": [1241, 1871, 1913, 1931, 1933], "_exp": 1243, "3891": 1243, "8660": 1243, "ord": [1244, 1248, 1261, 1652, 1871, 1873, 1913], "la": [1244, 1248, 1261, 1904], "2829": 1244, "2627": 1244, "0756": 1245, "4980": 1245, "6617": 1245, "4994": 1245, "9980": 1245, "2731": 1245, "8001": 1245, "2640": 1245, "4571": 1245, "5511": 1245, "0163": [1245, 1291], "5292": 1245, "4899": 1245, "0822": 1245, "2773": [1245, 1888], "varepsilon": [1246, 1249, 1473], "tol": [1246, 1264, 1871], "fewest": 1247, "nd": [1247, 1907], "bc": [1247, 1914], "75000": 1247, "26": [1247, 1688, 1943, 1956], "148": 1247, "vector_norm": [1248, 1652], "matrix_norm": [1248, 1261, 1613, 1652], "7460": [1248, 1652], "3485": 1248, "8570e": 1248, "8480": 1248, "2361": [1248, 1652, 1653], "7417": [1248, 1652], "computation": [1249, 1901], "5495": [1249, 1313], "0979": 1249, "4092": 1249, "4132": [1249, 1776], "1143": 1249, "3662": 1249, "6374": 1249, "9294": 1249, "3269": [1249, 1904], "5745": [1249, 1809, 1810, 1856, 1857], "0382": [1249, 1314], "5922": 1249, "6759": 1249, "0600": 1249, "1933": 1249, "2090": 1249, "0903": 1249, "0817": 1249, "4752": [1249, 1814], "7124": 1249, "1631": 1249, "2272": 1249, "1356": 1249, "3933": 1249, "5023": 1249, "0308": 1249, "1725": 1249, "5216": 1249, "apinv": 1249, "5633e": 1249, "0830e": 1249, "wide": [1250, 1255, 1612, 1772, 1895, 1898, 1904, 1914], "51": [1250, 1423, 1713], "167": [1250, 1713], "68": [1250, 1713, 1870, 1872], "8571": [1250, 1713], "3943": [1250, 1713], "3314": [1250, 1713], "4286": [1250, 1713], "9029": [1250, 1713], "0343": [1250, 1713], "2857": [1250, 1713], "1714": [1250, 1713, 1904], "9429": [1250, 1713], "175": [1250, 1713], "q2": 1250, "r2": [1250, 1464], "6099e": 1250, "2158e": 1250, "logabsdet": [1251, 1871], "0032": 1251, "1219": [1251, 1732], "6690": 1251, "1161": 1251, "4053": 1251, "6218": [1251, 1828], "9273": 1251, "0082": 1251, "7576": 1251, "logdet": [1251, 1871, 1913], "linalg_slogdet": [1251, 1871, 1913], "2776": 1251, "solve_triangular": [1252, 1838], "expand_a": [1252, 1871, 1898, 1913, 1931], "rectangular": [1254, 1255, 1283, 1891], "triu_": [1254, 1871], "tril_": [1254, 1871], "full_matric": [1255, 1256, 1617, 1815, 1871, 1951], "vh": [1255, 1617, 1815, 1871, 1951], "gesvdj": [1255, 1256, 1815], "jacobi": 1255, "gesvda": [1255, 1256], "gesvd": [1255, 1256, 1815], "u_k": 1255, "v_k": 1255, "sigma_j": [1255, 1815], "eigendecomposit": 1255, "0486e": 1255, "0957e": 1255, "5139": 1256, "1087": 1256, "1066": 1256, "ind": [1257, 1258, 1871, 1899], "tensorsolv": 1257, "ndim": [1257, 1258, 1886, 1888, 1927, 1933, 1943], "atensorinv": 1257, "movedim": [1258, 1298, 1871, 1899, 1913, 1931], "tensorinv": 1258, "vandermond": [1259, 1855], "pmatrix": 1259, "x_n": [1259, 1341, 1342, 1385, 1386, 1392, 1416, 1456, 1836, 1893], "125": [1259, 1443, 1855, 1871], "overlin": [1260, 1858], "3223": 1260, "2815": 1260, "1944": [1260, 1904], "4345": 1261, "pickle_modul": [1263, 1745], "weights_onli": [1263, 1868, 1882], "mmap": [1263, 1885], "pickle_load_arg": 1263, "register_packag": [1263, 1909], "binaryio": [1263, 1745, 1915], "mmape": 1263, "untrust": [1263, 1868, 1882, 1915], "tamper": [1263, 1915], "ram": [1263, 1896], "surg": 1263, "utf": [1263, 1911, 1915], "unicodedecodeerror": 1263, "codec": 1263, "0x": 1263, "latin1": 1263, "byte_arrai": 1263, "niter": [1264, 1703, 1816], "ortho_iparam": 1264, "ortho_fparam": 1264, "ortho_bparam": 1264, "knyazev": 1264, "knyazev2001": 1264, "stathopoulosetal2002": 1264, "converg": [1264, 1456, 1612, 1670, 1671, 1695, 1892, 1904, 1907], "precondition": 1264, "eigenpair": 1264, "criterion": [1264, 1341, 1342, 1359, 1361, 1386, 1392, 1416, 1417, 1428, 1429, 1430, 1456, 1457, 1473, 1474, 1507, 1688, 1720, 1900], "fep": 1264, "eigenproblem": 1264, "iparam": 1264, "fparam": 1264, "bparam": 1264, "ivar": 1264, "fvar": 1264, "bvar": 1264, "tvar": 1264, "istep": 1264, "converged_count": 1264, "rerr": 1264, "force_stop": 1264, "2001": 1264, "precondit": 1264, "eigensolv": 1264, "siam": 1264, "sci": 1264, "517": 1264, "541": 1264, "epub": 1264, "doi": [1264, 1379, 1778], "1137": 1264, "s1064827500366124": 1264, "andrea": 1264, "stathopoulo": 1264, "kesheng": 1264, "2002": [1264, 1778], "2165": 1264, "2182": 1264, "s1064827500370883": 1264, "duerschetal2018": 1264, "jed": 1264, "duersch": 1264, "meiyu": 1264, "shao": 1264, "chao": 1264, "ming": 1264, "gu": 1264, "c655": 1264, "c676": 1264, "17m1129830": 1264, "log_": [1265, 1266, 1267, 1268, 1871, 1886], "7767": 1265, "3234": 1265, "2156": 1265, "2411": 1265, "5739": 1265, "5637": 1265, "4640": 1265, "1952": 1265, "4226": 1265, "5204": [1265, 1722], "5224": 1266, "9354": 1266, "7257": 1266, "1301": 1266, "2820": 1266, "0290": 1266, "1392": 1266, "8857": 1266, "6476": 1266, "0090": [1267, 1327, 1709, 1928], "9923": 1267, "5372": 1267, "2492": 1267, "8653": 1267, "7055": 1267, "7705": 1267, "2225": 1267, "8419": 1268, "8003": [1268, 1908], "9971": 1268, "5287": 1268, "0490": 1268, "2483": 1268, "0042": 1268, "9196": 1268, "3504": [1268, 1831], "logsumexp": [1269, 1871, 1886, 1913, 1928], "3069": 1269, "6867": 1269, "8731": 1269, "30000": 1269, "1269e": 1269, "log_2": 1270, "logaddexp": [1270, 1871, 1913], "limits_": 1271, "42296738": 1271, "04462666": 1271, "86278635": 1271, "94622083": 1271, "05277811": 1271, "39202815": 1271, "83525007": 1271, "84492621": 1271, "06084887": 1271, "06844475": 1271, "2611": [1272, 1828], "9254": 1272, "6213": [1272, 1904], "6843": 1272, "3242": 1272, "9665": 1272, "4539": 1272, "0887": [1272, 1928], "1336": 1272, "4025": 1272, "7089": [1272, 1368], "9032": 1272, "3031": 1272, "2589": 1278, "1135": 1278, "5481": [1278, 1291, 1904], "9566": 1278, "sum_j": [1279, 1415, 1458, 1460, 1580, 1794, 1928], "0593": [1279, 1904], "5696": 1279, "6859e": 1279, "compute_pivot": 1281, "transposit": [1281, 1835, 1927], "perm": 1281, "a_lu": 1281, "5558": 1281, "1684": 1281, "1551": 1281, "1940": 1281, "6189": 1281, "5497": 1281, "4526": 1281, "2526": 1281, "3285": 1281, "7988": 1281, "7175": 1281, "9701": 1281, "2634": 1281, "9255": 1281, "3459": 1281, "00000e": 1282, "8312": 1282, "unpack_data": [1283, 1871], "unpack_pivot": [1283, 1871], "l_": [1283, 1330, 1334, 1338, 1342, 1353, 1354, 1355, 1356, 1393, 1418], "u_": [1283, 1668, 1672], "3552": [1285, 1516], "3825": 1285, "8297": 1285, "3477": 1285, "2035": [1285, 1809, 1810, 1856, 1857], "2252": [1285, 1928], "5002": 1285, "6248": [1285, 1294], "1307": 1285, "0608": [1285, 1787], "1244": 1285, "0139": 1285, "6763": 1289, "7445": 1289, "2369": 1289, "argmax": [1289, 1333, 1418, 1548, 1549, 1550, 1826, 1871, 1913, 1951], "max_indic": 1289, "2360": 1289, "2942": 1289, "1222": [1289, 1904], "8475": 1289, "1949": 1289, "1127": 1289, "6702": 1289, "5717": 1289, "9207": 1289, "1297": 1289, "8768": 1289, "6172": 1289, "6060": 1289, "2432": 1289, "3288": 1291, "3367": 1291, "nanmean": [1291, 1871, 1913], "3841": 1291, "6320": 1291, "4254": 1291, "7384": 1291, "0131": 1291, "6549": [1291, 1770], "4279": 1291, "3350": 1291, "7694": 1291, "5600": [1291, 1477], "0842": 1291, "9580": 1291, "3623": 1291, "2343": [1291, 1888], "5085": 1291, "4599": 1291, "1807": 1291, "5219": 1292, "5212": 1292, "2202": 1292, "2505": 1292, "3982": 1292, "9948": 1292, "3518": 1292, "3131": 1292, "3180": [1292, 1927], "6993": 1292, "0436": 1292, "0438": 1292, "2270": 1292, "2751": 1292, "7303": 1292, "2192": 1292, "3321": 1292, "2488": 1292, "0778": 1292, "9510": 1292, "7048": 1292, "4742": [1292, 1844, 1928], "7125": [1292, 1796], "plot": [1293, 1895, 1917, 1932, 1958], "t_0": [1293, 1688], "t_": [1293, 1374, 1520, 1687, 1688, 1871, 1927, 1945], "s_0": 1293, "s_": [1293, 1331, 1332, 1371, 1475], "g_0": 1293, "g_": [1293, 1672, 1682, 1683], "g_i": 1293, "t_i": 1293, "0d": [1293, 1417], "xy": 1293, "50276": 1293, "cartesian_prod": [1293, 1871, 1913], "grid_x": 1293, "grid_i": 1293, "dstack": [1293, 1871, 1913, 1927], "matplotlib": [1293, 1932], "pyplot": [1293, 1932], "plt": 1293, "plot_surfac": 1293, "6750": 1294, "0857": [1294, 1841], "7197": [1294, 1864], "argmin": [1294, 1871, 1913, 1951], "min_indic": [1294, 1871], "1334": 1294, "2803": 1294, "4644": [1294, 1809, 1810, 1856, 1857], "2635": [1294, 1904], "3651": 1294, "0384": 1294, "0128": 1294, "7015": 1294, "1153": 1294, "9849": 1294, "1458": [1294, 1928], "5788": 1294, "deduc": [1296, 1927], "4851": 1296, "5037": 1296, "3633": 1296, "0760": 1296, "3362": [1298, 1299], "8437": [1298, 1299], "9627": [1298, 1299], "1727": [1298, 1299], "5173": [1298, 1299], "1398": [1298, 1299], "mpsalloc": [1300, 1301], "metal": [1301, 1310, 1881, 1884, 1905], "mpsgraph": 1301, "wait_until_complet": [1306, 1307], "signpost": [1306, 1307, 1308], "xcode": 1307, "recommendedmaxworkingsets": 1310, "unlimit": [1310, 1896], "1321": 1313, "4370": [1313, 1927], "1289": 1313, "0527": 1313, "3077": [1313, 1805], "0881": 1313, "1259": 1313, "0284": 1313, "2015": [1314, 1891, 1904], "6087": 1314, "1494": 1314, "5491": 1314, "260": 1314, "8663": 1314, "3137": 1314, "0700": 1314, "8378": 1314, "5146": 1314, "1216": 1314, "5244": 1314, "5767": 1314, "1363": 1314, "5877": 1314, "5083": 1314, "1614": 1314, "1645": 1314, "7021": 1314, "0085": 1314, "0367": 1314, "1567": 1314, "4312": 1314, "1019": 1314, "4394": 1314, "8753": 1314, "_sampl": 1315, "thtensorrandom": 1315, "320": [1315, 1451], "0404": 1317, "6361": 1317, "multigammaln": [1318, 1928], "4028e": 1319, "38": [1319, 1943], "1400e": 1319, "isnan": [1320, 1871, 1913, 1927, 1951], "midpoint": [1322, 1714], "weakli": [1324, 1325, 1928], "to_spars": [1325, 1792, 1871, 1908, 1913, 1927], "2262": [1327, 1709], "0682": [1327, 1709], "2866": [1327, 1709], "3940": [1327, 1709], "5x7": [1331, 1335], "7x7": [1331, 1335], "10x7": [1331, 1335], "cube": [1332, 1336, 1720], "d_": [1332, 1336, 1340, 1352, 1355, 1358, 1420, 1423, 1448, 1451, 1477, 1482, 1524, 1839, 1840, 1841, 1842], "5x7x9": [1332, 1336], "7x7x7": [1332, 1336], "7x9x8": [1332, 1336], "n_class": 1333, "cutoff": [1333, 1891], "div_valu": 1333, "head_bia": 1333, "edouard": 1333, "grave": [1333, 1348], "armand": 1333, "joulin": 1333, "moustapha": 1333, "ciss\u00e9": 1333, "grangier": 1333, "herv\u00e9": 1333, "j\u00e9gou": 1333, "imbalanc": 1333, "zipf": 1333, "law": 1333, "102": [1333, 1950], "1001": 1333, "1002": 1333, "_class": 1333, "maxunpool1d": [1334, 1418, 1551, 1850], "maxunpool2d": [1335, 1373, 1419, 1552, 1850], "maxunpool3d": [1336, 1374, 1420, 1553, 1850], "selu": [1337, 1370, 1517, 1871, 1891, 1911, 1913], "n_i": [1338, 1339, 1340, 1353, 1354, 1355, 1418, 1419, 1420, 1473, 1474], "c_j": [1338, 1339, 1340, 1418, 1419, 1420], "size_averag": [1341, 1342, 1359, 1361, 1385, 1391, 1392, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1496, 1497, 1505, 1507, 1532, 1536, 1537, 1547, 1555, 1556, 1557, 1558, 1559, 1567, 1578, 1579, 1590, 1871], "unreduc": [1341, 1342, 1361, 1386, 1392, 1416, 1432, 1456, 1474], "ell": [1341, 1342, 1361, 1385, 1386, 1392, 1416, 1432, 1456, 1474], "l_1": [1341, 1342, 1361, 1385, 1386, 1392, 1416, 1432, 1456, 1474], "l_n": [1341, 1342, 1361, 1385, 1386, 1392, 1416, 1432, 1456, 1474], "w_n": [1341, 1342, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778], "y_n": [1341, 1342, 1361, 1385, 1386, 1392, 1416, 1432, 1456, 1836, 1893], "lim_": [1341, 1893], "secondli": 1341, "straight": [1341, 1526], "rescal": [1341, 1342, 1361, 1429, 1430, 1432, 1458, 1460, 1496, 1497, 1507, 1559, 1617, 1646], "nbatch": [1341, 1342], "meantim": [1341, 1342, 1359, 1361, 1385, 1392, 1416, 1417, 1428, 1429, 1430, 1432, 1439, 1456, 1457, 1473, 1496, 1497, 1507, 1536, 1559, 1567, 1956], "pos_weight": [1342, 1497, 1871], "recal": [1342, 1898, 1932, 1949], "classif": [1342, 1348, 1361, 1428, 1430, 1432, 1457, 1508, 1869, 1891, 1919], "ell_c": 1342, "l_c": 1342, "p_c": 1342, "pai": [1342, 1497, 1910, 1931], "spacial": [1342, 1497], "random_": [1342, 1361, 1432, 1497, 1871, 1886, 1935], "hat": [1343, 1344, 1345, 1388, 1389, 1390, 1464], "terminologi": [1343, 1344, 1345, 1464], "tempor": [1343, 1345, 1348, 1464, 1477, 1508, 1535, 1593], "5d": [1345, 1390, 1477, 1524, 1535, 1562, 1593], "volumetr": [1345, 1464, 1477, 1524, 1535, 1593, 1594, 1595], "spatio": [1345, 1464], "in1_featur": 1346, "in2_featur": 1346, "in1": [1346, 1495], "in2": [1346, 1495], "blank": [1348, 1508, 1871, 1874], "zero_infin": [1348, 1508, 1871], "connectionist": [1348, 1508], "unseg": 1348, "longest": [1348, 1639, 1641, 1642, 1900], "input_length": [1348, 1508, 1871, 1900], "target_length": [1348, 1508, 1871], "s_n": 1348, "target_n": 1348, "unbatch": [1348, 1361, 1372, 1377, 1388, 1395, 1431, 1440, 1468, 1518], "s_min": 1348, "toronto": 1348, "edu": [1348, 1720], "icml_2006": 1348, "256": [1348, 1710, 1896, 1911], "background": [1348, 1356, 1524, 1562, 1906, 1923], "channel_shuffl": [1349, 1871, 1913], "_left": [1350, 1351, 1352, 1446, 1447, 1448, 1449, 1450, 1451, 1480, 1481, 1482, 1562], "_right": [1350, 1351, 1352, 1446, 1447, 1448, 1449, 1450, 1451, 1480, 1481, 1482, 1562], "0491": [1350, 1480], "7152": [1350, 1480], "0749": [1350, 1480], "3287": [1350, 1480], "8966": [1350, 1480], "1466": [1350, 1480], "2771": [1350, 1480], "6616": [1350, 1480], "4523": [1350, 1480], "1255": [1350, 1480], "6372": [1350, 1480, 1815], "1182": [1350, 1480], "8652": [1350, 1480], "_top": [1351, 1352, 1447, 1448, 1450, 1451, 1481, 1482, 1562], "_bottom": [1351, 1352, 1447, 1448, 1450, 1451, 1481, 1482, 1562], "6585": 1351, "4320": [1351, 1824], "8701": 1351, "4649": 1351, "_front": [1352, 1448, 1451, 1482, 1562], "_back": [1352, 1448, 1451, 1482, 1562], "_j": [1353, 1354], "star": [1353, 1354, 1355, 1873], "\u00e0": [1353, 1354, 1355, 1356, 1357, 1358, 1372, 1476], "trou": [1353, 1354, 1355, 1356, 1357, 1358, 1372, 1476], "harder": [1353, 1354, 1355, 1356, 1357, 1358, 1372, 1419, 1420, 1476], "nice": [1353, 1354, 1355, 1356, 1357, 1358, 1372, 1418, 1419, 1420, 1476, 1887, 1893, 1896, 1915], "prod_": [1354, 1355, 1357, 1358, 1371, 1475, 1674], "out_j": 1355, "deconvolut": [1356, 1357, 1358, 1502, 1503, 1504], "_pad": [1356, 1357, 1358], "dissimilar": [1359, 1385], "semi": [1359, 1385, 1869, 1891], "supervis": [1359, 1385], "vert": [1360, 1434, 1506], "_2": [1360, 1506, 1613, 1646], "ast_1": [1360, 1376], "ast_2": [1360, 1376], "ignore_index": [1361, 1432, 1507, 1559, 1871], "label_smooth": [1361, 1507, 1871], "unbalanc": [1361, 1432], "d_1": [1361, 1432, 1507, 1559], "d_2": [1361, 1432, 1507, 1559], "d_k": [1361, 1432, 1507, 1559], "_index": [1361, 1432], "logsoftmax": [1361, 1432, 1458, 1543], "nllloss": [1361, 1458, 1559, 1580, 1850], "blend": 1361, "smooth": [1361, 1386, 1456, 1461, 1507, 1681], "w_c": 1361, "truth": [1361, 1507, 1880, 1932], "rethink": [1361, 1507], "incept": [1361, 1507], "spectral_norm": [1362, 1636], "neuron": 1363, "detector": 1363, "dropout1d": [1365, 1871], "_freez": 1368, "sparseadam": [1368, 1914], "0251": 1368, "6902": [1368, 1711], "7172": 1368, "6431": 1368, "0748": 1368, "6969": 1368, "4970": 1368, "3448": 1368, "9685": 1368, "3677": 1368, "7265": 1368, "1685": 1368, "4362": 1368, "4004": [1368, 1796], "9400": 1368, "9124": 1368, "3616": 1368, "1151": 1368, "0309": 1368, "9315": 1368, "1655": [1368, 1896], "9897": 1368, "0635": 1368, "7895": 1368, "0364": 1368, "6778": 1368, "5803": 1368, "from_pretrain": [1368, 1369, 1948], "bag": [1369, 1516], "per_sample_weight": [1369, 1516, 1871, 1951], "embedding_sum": 1369, "8861": 1369, "4350": 1369, "0523": 1369, "1306": 1369, "5798": 1369, "0044": 1369, "7082": [1369, 1516], "2145": [1369, 1516], "6251": [1369, 1516], "6500": 1369, "satur": [1370, 1517], "alphadropout": [1370, 1490], "160": [1371, 1914], "unfold": [1372, 1871, 1913, 1931], "prod_d": [1372, 1476], "neighborhood": [1372, 1476], "col2im": [1372, 1871, 1913, 1951], "fold_param": [1372, 1476], "input_on": [1372, 1476], "output_ratio": [1373, 1374, 1519, 1520, 1871], "_random_sampl": [1373, 1374, 1519, 1520, 1871], "ben": [1373, 1374, 1519, 1520], "graham": [1373, 1374, 1519, 1520], "oh": [1373, 1374, 1519, 1520], "ow": [1373, 1374, 1519, 1520], "_ratio": [1373, 1374, 1520], "13x12": [1373, 1519], "kt": [1374, 1493, 1501, 1504, 1520, 1550], "ot": [1374, 1520], "13x12x11": [1374, 1520], "044715": [1375, 1522], "pack_sequ": [1377, 1395, 1440, 1641, 1643], "bias_ih": [1378, 1396, 1442], "bias_hh": [1378, 1396, 1442], "const": [1379, 1903], "homoscedast": [1379, 1521], "heteroscedast": [1379, 1521], "nix": 1379, "weigend": 1379, "1994": 1379, "icnn": 1379, "94": 1379, "orlando": 1379, "fl": 1379, "usa": [1379, 1932], "374138": 1379, "instancenorm": [1380, 1920], "layernorm": [1380, 1388, 1389, 1390, 1468, 1470, 1472, 1538, 1888, 1920, 1956], "shrinkag": [1381, 1462, 1527, 1583], "mobilenetv3": [1383, 1529], "_val": 1384, "l1loss": [1386, 1456, 1537], "outlier": [1386, 1456, 1918, 1919], "huber": [1386, 1456], "smoothl1loss": [1386, 1578], "insensit": 1387, "unused_argument1": 1387, "unused_argument2": 1387, "ingredi": [1388, 1389, 1390], "styliz": [1388, 1389, 1390], "rgb": [1389, 1390, 1932], "color": [1390, 1872, 1873, 1932, 1947], "log_target": [1391, 1536, 1871], "kl": [1391, 1536, 1869], "summaris": 1391, "loss_pointwis": 1391, "batchmean": [1391, 1536], "kl_loss": 1391, "mae": 1392, "f_t": [1395, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "hf": [1395, 1396], "g_t": [1395, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "ig": [1395, 1396], "hg": [1395, 1396], "o_t": 1395, "ho": [1395, 1396], "c_t": 1395, "odot": 1395, "forget": [1395, 1872, 1873], "proj_siz": [1395, 1441], "1402": 1395, "c_0": [1395, 1396], "proj": 1395, "c_n": 1395, "w_ii": 1395, "w_if": 1395, "w_ig": 1395, "w_io": 1395, "w_hi": 1395, "w_hf": 1395, "w_hg": 1395, "w_ho": 1395, "b_ii": 1395, "b_if": 1395, "b_ig": 1395, "b_io": 1395, "b_hi": 1395, "b_hf": 1395, "b_hg": 1395, "b_ho": 1395, "weight_hr_l": 1395, "_revers": 1395, "h_1": 1396, "c_1": 1396, "time_step": 1396, "_shape": 1397, "sentence_length": 1397, "lazymodulemixin": [1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410], "cls_to_becom": [1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1608], "convtranspose1d": [1404, 1502, 1850, 1920], "convtranspose3d": [1406, 1504, 1850, 1920], "instancenorm1d": [1407, 1534, 1920], "instancenorm2d": [1408, 1534, 1920], "instancenorm3d": [1409, 1534, 1920], "uninitializedparamet": [1410, 1596, 1869], "lrn": 1413, "signal_2d": 1413, "signal_4d": 1413, "output_2d": 1413, "output_4d": 1413, "x_j": [1415, 1458, 1460, 1580, 1794, 1901, 1928], "80827": [1421, 1422, 1423], "unpool": [1421, 1422, 1423], "maxpool3d": [1423, 1550, 1553, 1850, 1920], "unpooled_output": 1423, "t_destin": 1425, "lrelu": [1426, 1904], "hing": [1428, 1430], "sum_i": [1429, 1430, 1457], "nelement": [1429, 1457], "jointli": 1431, "multihead": [1431, 1470], "concat": [1431, 1871, 1913], "head_1": 1431, "head_h": 1431, "head_i": 1431, "qw_i": 1431, "kw_i": 1431, "vw_i": 1431, "scaled_dot_product_attent": [1431, 1871, 1913], "fastpath": [1431, 1945], "inference_mod": [1431, 1472], "nestedtensor": [1431, 1472, 1888], "multihead_attn": 1431, "e_q": 1431, "e_k": 1431, "e_v": 1431, "_head": [1431, 1468], "merge_mask": 1431, "mask_typ": 1431, "merged_mask": 1431, "nll": 1432, "crossentropyloss": [1432, 1507], "num_paramet": 1433, "nchannel": 1433, "decai": [1433, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1686, 1690, 1692, 1693, 1696, 1697, 1699, 1771, 1914], "legitim": [1433, 1524, 1899], "vert_p": 1434, "fromkei": 1435, "popitem": [1435, 1913], "setdefault": [1435, 1913], "upscale_factor": [1437, 1565, 1871, 1951], "upscal": 1437, "video": [1437, 1438, 1887, 1932, 1943], "shi": [1437, 1438], "2016": [1437, 1438, 1474], "_factor": [1437, 1438, 1477, 1478, 1479], "pixel_shuffl": [1437, 1871, 1913, 1920, 1951], "downscale_factor": [1438, 1566, 1871], "pixelshuffl": [1438, 1565, 1566, 1920], "downscal": 1438, "pixel_unshuffl": [1438, 1871, 1913, 1920], "log_input": [1439, 1567, 1871], "poisson": [1439, 1567, 1771, 1869, 1871, 1913], "stirl": [1439, 1567], "hh": [1440, 1442], "flatten_paramet": 1441, "3333333333333333": [1443, 1686, 1692, 1871], "leaki": [1443, 1572, 1891], "rectifi": [1443, 1444, 1569, 1891], "liner": 1443, "empir": 1443, "1505": 1443, "00853": 1443, "crelu": 1444, "1603": 1444, "05201": 1444, "480": 1451, "6732632423543772848170429916717": [1452, 1575], "0507009873554804934193349852946": [1452, 1575], "kaiming_norm": 1452, "kaiming_normal_": [1452, 1869, 1875, 1891], "initialis": 1452, "calculate_gain": [1452, 1869, 1875, 1891], "modulelist": [1453, 1904], "cascad": 1453, "relu2": [1453, 1596], "swish": [1454, 1577], "coin": [1454, 1577], "explod": 1456, "cnn": [1456, 1918], "ross": 1456, "girshick": 1456, "quadrat": [1456, 1900], "huberloss": [1456, 1533], "lie": [1458, 1460, 1580, 1794, 1928, 1932, 1945], "w_j": 1459, "soft": [1462, 1526, 1583], "softshrinkag": 1462, "convert_sync_batchnorm": 1464, "r1": 1464, "sync_bn_network": 1464, "ddp_sync_bn_network": 1464, "sync_bn_modul": 1464, "d_model": [1468, 1469, 1470, 1471, 1472], "nhead": [1468, 1469, 1470, 1471, 1472], "num_encoder_lay": 1468, "num_decoder_lay": 1468, "dim_feedforward": [1468, 1470, 1472], "custom_encod": 1468, "custom_decod": 1468, "layer_norm_ep": [1468, 1470, 1472], "norm_first": [1468, 1470, 1472], "ashish": [1468, 1470, 1472], "vaswani": [1468, 1470, 1472], "noam": [1468, 1470, 1472], "shazeer": [1468, 1470, 1472], "niki": [1468, 1470, 1472], "parmar": [1468, 1470, 1472], "jakob": [1468, 1470, 1472], "uszkoreit": [1468, 1470, 1472], "llion": [1468, 1470, 1472], "jone": [1468, 1470, 1472], "aidan": [1468, 1470, 1472], "gomez": [1468, 1470, 1472], "lukasz": [1468, 1470, 1472], "illia": [1468, 1470, 1472], "polosukhin": [1468, 1470, 1472], "6000": [1468, 1470, 1472, 1477, 1717, 1765, 1768], "6010": [1468, 1470, 1472], "feedforward": [1468, 1470, 1472, 1891], "transformer_model": 1468, "word_language_model": 1468, "src_mask": [1468, 1472], "tgt_mask": [1468, 1469, 1470], "memory_mask": [1468, 1469, 1470], "src_key_padding_mask": [1468, 1471, 1472], "tgt_key_padding_mask": [1468, 1469, 1470], "memory_key_padding_mask": [1468, 1469, 1470], "src_is_caus": 1468, "tgt_is_caus": [1468, 1469, 1470], "memory_is_caus": [1468, 1469, 1470], "_mask": [1468, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635], "_key_padding_mask": 1468, "generate_square_subsequent_mask": 1468, "sz": 1468, "decoder_lay": [1469, 1470], "transformerdecoderlay": 1469, "transformer_decod": 1469, "attn": [1470, 1472], "encoder_lay": [1471, 1472], "enable_nested_tensor": 1471, "mask_check": 1471, "bert": [1471, 1948], "1810": 1471, "04805": 1471, "transformerencoderlay": 1471, "transformer_encod": 1471, "flashattent": [1472, 1574], "triplet": [1473, 1474], "x3": 1473, "balnta": [1473, 1474], "riba": [1473, 1474], "a_i": [1473, 1474, 1773], "p_i": [1473, 1474], "rm": [1473, 1474], "bf": [1473, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "rvert_p": [1473, 1560], "tripletmarginwithdistanceloss": [1473, 1591], "triplet_loss": [1473, 1474], "distance_funct": [1474, 1591], "l_i": 1474, "tripletmarginloss": [1474, 1590], "l_p": [1474, 1560], "pairwisedist": [1474, 1563], "penal": [1474, 1904], "distant": 1474, "anchor_id": 1474, "positive_id": 1474, "negative_id": 1474, "l_infin": 1474, "bmva": 1474, "bmvc": 1474, "paper119": 1474, "unflattened_s": 1475, "namedtensor": 1475, "namedshap": 1475, "u_1": 1475, "u_n": 1475, "u_i": 1475, "im2col": [1476, 1871, 1913], "fold": [1476, 1816, 1871, 1881, 1911, 1921, 1927], "2x3": 1476, "3x4": 1476, "inp_unf": 1476, "out_unf": 1476, "recompute_scale_factor": [1477, 1535], "bicub": [1477, 1524, 1535, 1593, 1850], "trilinear": [1477, 1524, 1535, 1593, 1850], "input_3x3": 1477, "4375": 1477, "8125": 1477, "9375": 1477, "2400": [1477, 1831], "1200": [1477, 1742, 1896], "8800": 1477, "4400": [1477, 1831], "7200": 1477, "0400": 1477, "2800": [1477, 1765], "3600": 1477, "5200": 1477, "6400": 1477, "1678": 1481, "4418": 1481, "9466": [1481, 1928], "9604": 1481, "4219": 1481, "5241": 1481, "9162": 1481, "5436": [1481, 1831], "6446": 1481, "adaptiveavgpool1d": [1483, 1920], "tripl": [1485, 1488], "adaptivemaxpool1d": 1486, "adaptivemaxpool2d": [1487, 1850], "adaptivemaxpool3d": 1488, "avgpool1d": [1491, 1920], "st": [1493, 1501, 1504, 1550, 1956], "avgpool3d": [1493, 1850, 1920], "iT": [1493, 1501, 1504], "padt": [1493, 1501, 1504], "score": [1497, 1574, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632, 1869], "dt": [1501, 1504, 1928, 1956], "out_padw": [1502, 1503, 1504], "out_padh": [1503, 1504], "out_padt": 1504, "cosineembeddingloss": 1505, "ctcloss": [1508, 1850], "charact": [1508, 1762, 1870, 1873, 1887, 1923], "elu": [1514, 1871, 1911, 1913, 1920], "embedding_matrix": [1515, 1516], "8490": 1515, "9625": 1515, "6753": 1515, "7761": 1515, "6108": 1515, "6246": 1515, "9751": 1515, "3618": 1515, "4161": [1515, 1927], "2419": 1515, "7383": 1515, "0237": 1515, "7794": 1515, "0528": 1515, "3385": 1515, "8612": 1515, "1867": 1515, "5384": 1515, "8720": 1515, "6262": 1515, "7471": 1515, "embeddingbag": [1516, 1850, 1918, 1920, 1933], "3397": 1516, "5545": 1516, "5893": 1516, "4386": 1516, "5882": 1516, "featurealphadropout": 1517, "gaussiannllloss": 1521, "border": 1524, "affine_grid": [1524, 1871], "extrema": 1524, "pil": [1524, 1535], "overshoot": [1524, 1535, 1593], "gumbel": [1526, 1869], "y_hard": 1526, "y_soft": 1526, "hardtanh": [1531, 1871, 1881, 1913, 1920, 1951], "hingeembeddingloss": 1532, "use_input_stat": [1534, 1871], "antialia": 1535, "anti": 1535, "pillow": [1535, 1932], "buggi": 1535, "inter_nearest": 1535, "104157": 1535, "kldivloss": 1536, "batchsiz": [1536, 1797, 1798, 1799, 1801, 1802, 1927], "leaky_relu": [1540, 1871, 1891, 1913, 1920, 1951], "localresponsenorm": 1542, "_stacklevel": [1543, 1580, 1581, 1871], "lppool1d": 1545, "lppool2d": 1546, "marginrankingloss": 1547, "max_unpool1d": [1548, 1871], "multimarginloss": 1556, "multilabelmarginloss": 1557, "multilabelsoftmarginloss": 1558, "n_0": 1560, "n_": 1560, "n_k": 1560, "everywher": [1561, 1811, 1914], "circularpad2d": 1562, "constantpad2d": 1562, "reflectionpad2d": [1562, 1850], "replicationpad2d": [1562, 1850], "t4d": 1562, "p1d": 1562, "p2d": 1562, "p3d": 1562, "pixelunshuffl": [1566, 1920], "poissonnllloss": 1567, "rrelu": [1573, 1871, 1913], "dropout_p": [1574, 1871], "attn_bia": 1574, "temp_mask": 1574, "ev": 1574, "legend": 1574, "softmarginloss": 1579, "module_kwarg": 1589, "upsample_trilinear": 1594, "fo": 1594, "spatia": 1595, "mixin": [1596, 1869], "dry": 1596, "lazymlp": 1596, "lazylinear": 1596, "lazy_mlp": 1596, "8832e": 1596, "5636e": 1596, "1598e": 1596, "5637e": 1596, "8788e": 1596, "0042e": 1596, "0019": 1596, "lazymodul": 1596, "full_mlp": 1596, "3837": [1596, 1711], "0907": 1596, "6708": 1596, "5223": 1596, "9028": 1596, "2851": 1596, "6813": 1596, "5766": 1596, "8678": 1596, "1320": 1596, "2938": 1596, "0679": [1596, 1841], "2793": [1596, 1653], "1088": 1596, "1795": 1596, "2301": 1596, "2807": 1596, "2479": 1596, "1091": 1596, "has_uninitialized_param": 1596, "initialize_paramet": 1596, "register_backward_pre_hook": 1602, "check_reduct": 1605, "delay_all_reduce_named_param": 1605, "param_to_hook_all_reduc": 1605, "optimizer_param": 1605, "loss_func": [1605, 1923], "consume_prefix_in_state_dict_if_pres": 1605, "nccl2": 1605, "dictat": [1605, 1873], "megabyt": 1605, "mb": [1605, 1896], "detach_": [1605, 1871, 1886, 1920, 1927], "ddp_logging_data": 1605, "can_set_static_graph": 1605, "model_ddp": 1605, "_get_ddp_logging_data": 1605, "divide_by_initial_world_s": 1605, "syncbatchnorm": 1605, "deplet": 1605, "pariti": 1605, "discrep": [1605, 1720, 1901], "another_input": 1605, "predivid": 1605, "encode_and_decod": 1605, "encoded_tensor": 1605, "decoded_tensor": 1605, "error_if_nonfinit": 1609, "foreach": [1609, 1610, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1914], "clip_valu": 1610, "orthogonal_map": 1612, "use_trivi": 1612, "qq": 1612, "matrix_exp": [1612, 1871, 1913], "caylei": 1612, "thin": [1612, 1713], "manifold": 1612, "register_parametr": [1612, 1613, 1614, 1615, 1646, 1889], "orth_linear": 1612, "parametrizedlinear": [1612, 1613], "moduledict": [1612, 1613, 1872, 1904], "parametrizationlist": [1612, 1613, 1617], "_orthogon": 1612, "9332e": 1612, "n_power_iter": [1613, 1646], "sn": [1613, 1646], "discrimin": [1613, 1646], "adversari": [1613, 1646], "lipschitz": 1613, "reimplement": [1613, 1646], "_spectralnorm": 1613, "convtranspos": [1613, 1646], "snm": 1613, "0081": 1613, "amaxbackward0": 1613, "original0": [1614, 1617, 1649], "original1": [1614, 1617, 1649], "tensor_nam": [1614, 1616, 1617, 1618], "right_invers": [1614, 1617], "out_rnn": 1615, "rnn_cell": 1615, "simplic": [1617, 1923, 1924], "inbuilt": 1617, "unparametr": 1617, "rankon": 1617, "surject": 1617, "s0_sqrt": 1617, "linear_rank_on": 1617, "matrix_rank": 1617, "leave_parametr": 1618, "unparametris": 1618, "prune": [1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1927], "skeleton": 1619, "compute_mask": [1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626], "importance_scor": [1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1631, 1632], "apply_mask": [1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626], "pruned_tensor": [1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626], "default_mask": [1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626], "_orig": [1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1635], "undon": [1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635], "unprun": [1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634], "basepruningmethod": [1624, 1630], "add_pruning_method": 1624, "pruning_typ": [1624, 1628], "unstructur": [1624, 1628], "ravel": [1624, 1871, 1913], "nonmask": 1624, "bias_mask": [1627, 1629], "pruning_method": 1628, "parameters_to_prun": 1628, "l1unstructur": 1628, "parameters_to_vector": 1628, "forward_pre_hook": [1630, 1904], "random_unstructur": [1630, 1635], "odict_kei": 1631, "weight_orig": 1631, "weight_mask": [1631, 1634], "columns_prun": 1633, "t_modul": [1636, 1637, 1646, 1649], "weight_norm": 1637, "sorted_indic": [1638, 1640, 1641, 1643], "unsorted_indic": [1638, 1640, 1641, 1643], "abc": [1638, 1873], "axbc": 1638, "throughout": [1638, 1901, 1904, 1918], "conform": [1638, 1904], "is_cuda": [1638, 1886, 1913, 1929], "enforce_sort": [1639, 1640, 1641], "unsort": [1639, 1640, 1749], "shortest": 1639, "uncondition": [1639, 1868, 1898, 1957], "pad_sequ": [1640, 1644, 1871, 1913], "padding_valu": [1641, 1642, 1871], "total_length": [1641, 1900], "seq_unpack": 1641, "lens_unpack": 1641, "packed_sequ": 1643, "unpacked_sequ": 1643, "padded_sequ": 1644, "unpad": 1644, "unstack": 1644, "as_tensor": [1644, 1829, 1871, 1888, 1898, 1913, 1932, 1933, 1934], "unpadded_sequ": 1644, "module_cl": [1645, 1923], "5846e": 1645, "29": [1645, 1778, 1911], "8307e": 1645, "5250e": 1645, "1210e": 1645, "4677e": 1645, "5915e": 1645, "4013e": 1645, "weight_u": 1646, "parameters_and_buff": 1647, "decoupl": [1649, 1671, 1674, 1680], "weight_g": [1649, 1871], "weight_v": 1649, "1602": 1649, "07868": 1649, "modern": [1649, 1907, 1940], "bother": 1649, "102999": 1649, "remove_parametr": 1649, "as_tupl": [1651, 1864], "complexfloat": [1652, 1662], "0425": 1653, "7969": 1653, "2925": 1653, "7229": 1653, "2134": 1653, "0505": 1653, "1408": 1653, "0563": 1653, "0566": 1653, "0732": [1653, 1831], "0687": 1653, "1177": 1653, "2303": 1653, "1552": 1653, "6148": 1653, "6535": 1653, "8318": 1653, "3987": 1653, "9544": [1653, 1721], "6048": 1653, "7909": 1653, "120": [1655, 1932], "warnings_as_error": 1658, "dynamic_shap": [1659, 1911, 1953], "fake_context": [1659, 1660, 1911], "onnx_registri": 1659, "diagnostic_opt": 1659, "model_proto": [1660, 1661], "input_adapt": 1660, "output_adapt": 1660, "diagnostic_context": 1660, "export_except": 1660, "adapt_torch_inputs_to_onnx": 1660, "model_arg": [1660, 1911], "model_kwarg": [1660, 1911], "xdoctest": [1660, 1661, 1911], "torch_doctest_onnx": [1660, 1661, 1911], "func_with_nested_input_structur": 1660, "x_dict": 1660, "y_tupl": 1660, "y1": [1660, 1792, 1941], "y2": [1660, 1792, 1941], "y3": 1660, "export_output": [1660, 1661, 1663, 1911], "adapt_torch_outputs_to_onnx": 1660, "model_output": 1660, "func_returning_tupl": 1660, "pt_output": 1660, "diagnosticcontext": 1660, "onnxfakecontext": [1660, 1911], "modelproto": [1660, 1661], "bufferediobas": [1660, 1661], "_initi": 1660, "suffix": [1660, 1932, 1933], "model_initi": 1660, "enable_fake_mod": [1660, 1911], "exportoutputseri": 1660, "protobuf": [1660, 1661, 1911], "save_diagnost": 1660, "sarif": [1660, 1912], "exportoutput": [1661, 1663, 1911], "mymodel": [1661, 1873, 1892, 1906, 1911], "protobufexportoutputseri": 1661, "serializetostr": 1661, "exported_model": 1661, "from_valu": 1662, "onnx_typ": 1662, "tensorprotodatatyp": 1662, "torch_c_value_with_type_float": 1662, "from_dtyp": 1662, "jit_type_bas": 1662, "safer": [1662, 1880], "onnxexportererror": [1662, 1911], "symbolicvalueerror": 1662, "onnx_compat": 1662, "scalar_nam": 1662, "liter": [1662, 1871, 1874, 1887, 1915, 1955, 1958], "complexhalf": 1662, "complexdoubl": 1662, "torch_nam": 1662, "int8_t": 1662, "int64_t": 1662, "int16_t": 1662, "get_op_funct": 1664, "op_nam": [1664, 1877], "is_registered_op": 1664, "register_op": 1664, "is_complex": [1664, 1871, 1913, 1927, 1930], "tracedonnxfunct": 1664, "sctip": 1664, "verif": [1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1911], "input_arg": [1665, 1911], "params_dict": 1665, "export_opt": [1665, 1911], "_excluded_node_kind": 1665, "frozenset": [1665, 1873], "scalarimplicit": [1665, 1913], "prim": [1665, 1870, 1911, 1913], "listconstruct": [1665, 1870], "all_mismatch_leaf_graph_info": 1665, "essential_node_count": 1665, "essential_node_kind": 1665, "export_repro": 1665, "repro_dir": 1665, "repro": [1665, 1946, 1956], "test_": 1665, "test_data_set_0": 1665, "input_0": [1665, 1911], "pb": [1665, 1911], "input_1": [1665, 1911], "output_0": 1665, "output_1": 1665, "find_mismatch": [1665, 1911], "exhibit": [1665, 1911, 1944, 1956], "verificationopt": [1665, 1911], "find_partit": 1665, "has_mismatch": 1665, "pretty_print_mismatch": 1665, "pretty_print_tre": 1665, "graph_info": [1665, 1911], "__2": [1665, 1911], "__1": [1665, 1911], "__3": [1665, 1911], "110": [1665, 1911], "verify_export": 1665, "onnx_graph": 1665, "onnx_out": 1665, "pt_out": 1665, "ignore_non": 1666, "check_shap": 1666, "check_dtyp": [1666, 1934], "onnxbackend": 1666, "onnx_runtime_cpu": 1666, "remained_onnx_input_idx": 1666, "acceptable_error_percentag": 1666, "percentag": [1666, 1695, 1771], "weight_decai": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1904], "1e6": 1667, "sizeof": [1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1929, 1949], "tensorlist": [1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "prohibit": [1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1896, 1909], "impair": [1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "removeablehandl": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "register_load_state_dict_pre_hook": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "register_state_dict_post_hook": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "register_step_post_hook": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "register_step_pre_hook": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "new_arg": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "new_kwarg": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "momentum_buff": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684], "reevalu": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1684, 1914], "rho": 1668, "110mm": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "4pt": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "textbf": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "theta_0": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "v_0": [1668, 1670, 1671, 1674, 1680, 1681], "leftarrow": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "u_0": [1668, 1672], "hspace": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "5mm": [1668, 1669, 1670, 1671, 1672, 1674, 1681, 1682, 1683], "nabla_": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "theta_": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "10mm": [1668, 1669, 1670, 1671, 1672, 1674, 1681, 1682, 1683], "v_t": [1668, 1670, 1671, 1674, 1680, 1681], "v_": [1668, 1670, 1671, 1674, 1680, 1681, 1683], "2_t": [1668, 1669, 1670, 1671, 1674, 1680, 1681], "21mm": 1668, "u_t": [1668, 1672], "theta_t": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "lr_decai": 1669, "initial_accumulator_valu": 1669, "12mm": [1669, 1680], "_sum_0": 1669, "tild": [1669, 1681], "_sum_t": 1669, "_sum_": 1669, "subgradi": 1669, "999": [1670, 1671, 1672, 1674, 1680, 1684, 1909, 1914], "amsgrad": [1670, 1671], "beta_1": [1670, 1671, 1672, 1674, 1680], "beta_2": [1670, 1671, 1672, 1674, 1680], "13mm": [1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "textit": [1670, 1671, 1674, 1680, 1683], "m_0": [1670, 1671, 1672, 1674, 1680], "widehat": [1670, 1671, 1674, 1680], "m_t": [1670, 1671, 1672, 1674, 1680], "m_": [1670, 1671, 1672, 1674, 1680, 1927], "ungraph": [1670, 1671, 1674], "002": [1672, 1674], "t_1": 1672, "2e": [1672, 1674], "max_it": 1673, "max_ev": 1673, "tolerance_grad": 1673, "tolerance_chang": 1673, "history_s": 1673, "line_search_fn": 1673, "bfg": 1673, "minfunc": 1673, "intens": [1673, 1907], "param_byt": 1673, "strong_wolf": 1673, "momentum_decai": 1674, "004": 1674, "decoupled_weight_decai": [1674, 1680], "gamma_t": 1674, "psi": [1674, 1928], "_decai": [1674, 1680], "15mm": [1674, 1682, 1683], "mu_t": 1674, "96": 1674, "mu_": 1674, "11mm": 1674, "incorpor": [1674, 1918], "nesterov": [1674, 1683], "4e": 1674, "adamw": [1674, 1680, 1914], "nadamw": 1674, "weightdecai": 1680, "18mm": 1680, "rho_": 1680, "6mm": 1680, "rho_t": 1680, "t_2": 1680, "l_t": 1680, "radamw": 1680, "_0": [1681, 1899, 1915, 1958], "av": 1681, "8mm": 1681, "3mm": 1681, "lectur": 1681, "hinton": 1681, "step_siz": [1682, 1699], "resili": [1682, 1907], "eta_": [1682, 1687, 1688], "etaplu": 1682, "etaminu": 1682, "gamma_": [1682, 1928], "0_": 1682, "eta_0": 1682, "i_": [1682, 1831], "eta_t": [1682, 1687, 1688], "dampen": 1683, "sutskev": 1683, "veloc": 1683, "conflat": 1684, "is_spars": [1684, 1886, 1913, 1927, 1929], "maskedtensor": [1684, 1927], "outweigh": [1684, 1956], "rig": 1684, "insist": 1684, "lr_schedul": [1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1914], "chainabl": [1685, 1695], "081": 1685, "729": [1685, 1698], "6561": [1685, 1859], "59049": 1685, "scheduler1": [1685, 1698, 1914], "constantlr": [1685, 1698], "total_it": [1685, 1686, 1692, 1696, 1698], "scheduler2": [1685, 1698, 1914], "exponentiallr": [1685, 1698, 1914], "get_last_lr": [1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699], "print_lr": [1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699], "is_verbos": [1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699], "__dict__": [1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699], "last_epoch": [1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699], "mileston": [1686, 1692, 1693, 1698, 1914], "simultan": [1686, 1687, 1692, 1693, 1699, 1893, 1923], "025": [1686, 1692], "t_max": [1687, 1914], "eta_min": [1687, 1688], "anneal": [1687, 1688, 1695, 1914], "cur": [1687, 1688], "sgdr": [1687, 1688], "2k": 1687, "sole": 1687, "t_mult": 1688, "interleav": 1688, "base_lr": [1689, 1695], "max_lr": [1689, 1695], "step_size_up": 1689, "step_size_down": 1689, "scale_fn": 1689, "scale_mod": 1689, "cycle_momentum": [1689, 1695], "base_momentum": [1689, 1695], "max_momentum": [1689, 1695], "cyclic": 1689, "forth": [1689, 1855, 1868, 1917, 1941], "amplitud": [1689, 1695], "triangular2": 1689, "exp_rang": 1689, "bckenstler": 1689, "train_batch": [1689, 1695], "get_lr": 1689, "lr_lambda": [1691, 1694], "lambda1": 1691, "lambda2": 1691, "start_factor": 1692, "end_factor": 1692, "03125": 1692, "0375": 1692, "04375": 1692, "005": [1693, 1699], "lmbda": 1694, "total_step": 1695, "steps_per_epoch": 1695, "pct_start": 1695, "anneal_strategi": [1695, 1914], "div_factor": 1695, "final_div_factor": 1695, "three_phas": 1695, "1cycl": 1695, "fastai": 1695, "unpublish": 1695, "initial_lr": 1695, "min_lr": [1695, 1697], "1e4": 1695, "annihil": 1695, "00075": 1696, "00050": 1696, "00025": 1696, "patienc": 1697, "threshold_mod": 1697, "cooldown": 1697, "stagnat": 1697, "new_lr": 1697, "hasn": [1697, 1883, 1915], "optimum": 1697, "dynamic_threshold": 1697, "val_loss": 1697, "81": 1698, "mn": 1701, "pca": [1703, 1927], "overestim": [1703, 1816], "nathan": [1703, 1816], "halko": [1703, 1816], "gunnar": [1703, 1816], "martinsson": [1703, 1816], "tropp": [1703, 1816], "probabilist": [1703, 1816], "0909": [1703, 1816], "4061": [1703, 1816], "na": [1703, 1816], "cmath": [1707, 1871], "4142j": 1707, "4331": 1710, "2475": [1710, 1814], "6834": 1710, "2791": 1710, "1875": 1710, "5561": 1710, "4670": 1710, "5428": 1711, "5854": 1711, "5261": [1711, 1815], "1857": 1711, "2498": 1711, "1646": [1711, 1896], "0705": 1711, "0629": 1711, "2962": 1711, "0821": [1711, 1771], "1831": 1711, "type1": [1712, 1871], "type2": [1712, 1871], "2117": 1714, "9765": 1714, "1707": 1714, "4884": 1714, "5661": 1714, "5795": 1714, "5280": 1714, "9206": 1714, "quantization_schem": [1715, 1716, 1717, 1718, 1719], "int_repr": [1715, 1716, 1871, 1913], "nchw": [1717, 1932], "qx": [1717, 1718, 1719], "00001": 1717, "max_pool1d": [1718, 1871, 1913, 1920], "max_pool2d": [1719, 1871, 1913, 1920], "quasirandom": 1720, "scrambl": 1720, "sobol": 1720, "quasi": 1720, "21201": 1720, "web": 1720, "unsw": 1720, "au": [1720, 1915], "fkuo": 1720, "art": 1720, "owen": 1720, "niederreit": 1720, "xing": 1720, "466": 1720, "489": 1720, "decemb": 1720, "1998": 1720, "zh": 1720, "vychisl": 1720, "phy": 1720, "784": 1720, "802": 1720, "1967": 1720, "soboleng": 1720, "draw_base2": 1720, "base2": 1720, "fast_forward": 1720, "142": 1721, "283": 1721, "570": 1721, "359": 1721, "9894": 1721, "2503": 1722, "3525": 1722, "5673": 1722, "8237": 1722, "5781": 1722, "6879": 1722, "3816": 1722, "7249": 1722, "0998": 1722, "1436": 1726, "9966": 1726, "3426": 1726, "6366": 1726, "5954": 1726, "8929": 1726, "0923": 1726, "1719": 1726, "4709": 1726, "1996": 1726, "4595": 1732, "4314": 1732, "flat": [1735, 1778, 1871, 1888, 1911, 1927], "n2": 1735, "n3": 1735, "negat": [1738, 1823, 1873], "is_neg": [1738, 1871, 1913], "equidist": 1742, "inexact": 1742, "1234567": 1742, "1230": 1742, "vstack": [1743, 1871, 1913, 1927], "0370": 1744, "2970": 1744, "5420": 1744, "9105": 1744, "8351": 1744, "pickle_protocol": [1745, 1915], "default_protocol": 1745, "_use_new_zipfile_seri": 1745, "zipfil": [1745, 1915], "sorted_sequ": [1749, 1871], "sorter": [1749, 1871], "sorted_sequence_1d": 1749, "select_copi": [1751, 1871, 1913], "slight": [1753, 1927, 1930], "92701": [1753, 1930], "complaint": 1754, "henry2019": 1757, "briefli": 1757, "realiz": 1757, "perfectli": [1757, 1896, 1916], "nine": 1757, "fma": 1757, "10x": 1757, "1904": 1757, "06376": 1757, "denorm": [1758, 1907], "sse3": 1758, "323": 1758, "88131e": 1758, "324": 1758, "is_train": [1759, 1935], "interop": 1760, "intraop": 1761, "edgeitem": 1762, "linewidth": 1762, "sci_mod": 1762, "shamelessli": 1762, "repr": [1762, 1873], "sane": 1762, "_tensor_str": 1762, "_formatt": 1762, "12345": 1762, "1235": 1762, "excess": [1764, 1946], "24j": 1765, "8000j": 1765, "9600j": 1765, "4472": [1765, 1904], "8944j": 1765, "expit": [1766, 1928], "2222": [1768, 1829], "4444": 1768, "8889": 1768, "4901e": 1769, "4000e": 1769, "0077e": 1769, "4923e": 1769, "waveform": [1770, 1771, 1772], "1564": 1770, "4540": 1770, "8910": 1770, "9877": 1770, "1423": [1770, 1793], "4154": 1770, "8413": [1770, 1928], "0302": 1771, "2231": 1771, "6065": 1771, "5400e": 1771, "3546e": 1771, "4788e": 1771, "8316e": 1771, "02": [1771, 1772, 1777], "3534e": 1771, "0065e": [1772, 1777], "1875e": [1772, 1777], "3937e": [1772, 1777], "2465e": [1772, 1777], "8250e": [1772, 1777], "9858e": [1772, 1777], "1365e": [1772, 1777], "8659e": [1772, 1777], "4658e": [1772, 1777], "3941e": [1772, 1777], "5400": 1773, "3376": 1773, "4200": 1773, "9136": 1773, "wit": [1773, 1870], "0955": [1773, 1774, 1776], "3455": [1773, 1774, 1776], "6545": [1773, 1774, 1776], "9045": [1773, 1774, 1776], "0800": [1774, 1775], "1876": [1774, 1775], "4601": [1774, 1775], "7700": [1774, 1775], "9723": [1774, 1775], "1679": 1775, "3979": 1775, "6821": 1775, "9121": 1775, "1170": 1776, "9698": 1776, "36358": 1778, "z_n": [1778, 1893], "48917": 1778, "2z_n": 1778, "13659": 1778, "3z_n": 1778, "01064": 1778, "4z_n": 1778, "\u03c0": 1778, "sidelob": 1778, "transact": 1778, "acoust": 1778, "speech": 1778, "84": 1778, "91": 1778, "feb": 1778, "1981": 1778, "tassp": 1778, "1163506": 1778, "heinzel": 1778, "spectrum": [1778, 1907], "dft": 1778, "februari": 1778, "holomet": 1778, "fnal": 1778, "gov": 1778, "gh_fft": 1778, "nutal": 1778, "general_ham": 1778, "6280e": 1778, "2698e": 1778, "1052e": 1778, "9826e": 1778, "5461": [1780, 1904], "1347": 1780, "7266": 1780, "2746": 1780, "5194": 1780, "1343": 1780, "4032": 1780, "2711": 1780, "5380": 1782, "8632": 1782, "1265": 1782, "9399": 1782, "5644": 1782, "9744": 1782, "1268": 1782, "2162": 1787, "6719": 1787, "3332": 1787, "5793": [1787, 1904], "0061": 1787, "6058": 1787, "9497": 1787, "5071": 1787, "3343": 1787, "9553": 1787, "0960": 1787, "derivati": [1788, 1792], "to_sparse_coo": 1789, "sparsr": 1790, "run_my_model": 1790, "prev_checks_en": 1790, "check_invari": [1790, 1797, 1798, 1799, 1800, 1801, 1802, 1927], "sparse_csr_tensor": [1790, 1871, 1913, 1927], "z_": [1792, 1893, 1928], "bigoplus_": 1792, "kj": 1792, "bigoplu": 1792, "sparseaddmmbackward0": 1792, "sparsemmreduceimplbackward0": 1792, "sparsiti": [1793, 1869, 1880, 1891], "spy": 1793, "2847": 1793, "7805": 1793, "1900": [1793, 1908], "to_dens": [1793, 1795, 1871, 1913, 1927], "3903": 1793, "x_k": 1794, "6438": 1796, "6467": 1796, "3411": 1796, "0918": 1796, "5348": 1796, "0634": 1796, "0494": 1796, "0646": 1796, "1844": 1796, "1276": 1796, "1874": 1796, "6334": 1796, "9682": 1796, "5340": 1796, "7483": 1796, "4512": 1796, "4073": 1796, "8901": 1796, "3183": 1796, "7539": 1796, "6596": 1796, "ncolblock": [1797, 1927], "array_list": [1797, 1798, 1799, 1801, 1802], "nrow": [1797, 1798, 1799, 1801, 1802, 1927], "ncol": [1797, 1798, 1799, 1801, 1802, 1927], "denses": [1797, 1798, 1799, 1801, 1802, 1927], "check_sparse_tensor_invari": [1797, 1798, 1799, 1800, 1801, 1802, 1927], "nrowblock": [1798, 1927], "compressed_indic": [1799, 1871, 1927], "plain_indic": [1799, 1871, 1927], "compressed_dim_s": [1799, 1927], "is_coalesc": [1800, 1871, 1913, 1927], "rdinat": 1800, "prerequisit": [1800, 1897], "coalescion": 1800, "_indic": [1800, 1913, 1927], "0755": [1804, 1805], "0226": [1804, 1805], "0831": [1804, 1805], "4806": [1804, 1805], "0112": 1804, "2883": 1804, "6933": 1804, "0457": 1805, "0069": 1805, "2310": 1805, "2959": [1809, 1810, 1856, 1857], "8101": [1809, 1810, 1856, 1857], "5027": [1809, 1810, 1856, 1857], "3270": [1809, 1810, 1856, 1857], "5905": [1809, 1810, 1856, 1857], "6538": [1809, 1810, 1856, 1857, 1904], "3330": [1809, 1810, 1856, 1857], "5596": [1809, 1810, 1856, 1857], "6548": [1809, 1810, 1856, 1857], "1264": [1809, 1810, 1856, 1857], "5080": [1809, 1810, 1815, 1856, 1857, 1904], "6420": [1809, 1810, 1856, 1857], "1992": [1809, 1810, 1856, 1857], "0311": [1809, 1928], "7477": 1809, "2204": 1809, "9087": 1809, "2620": 1810, "0028": [1810, 1835], "0957": 1810, "6038": 1810, "0645": [1810, 1857], "4485": [1810, 1857], "8707": [1810, 1857], "0665": [1810, 1857], "librosa": 1811, "omega": 1811, "win": [1811, 1893], "_fft": [1811, 1871], "dimnsion": 1811, "1133": 1814, "2958": 1814, "5475": 1814, "0569": 1814, "0737": 1814, "3429": 1814, "9138": 1814, "9337": 1814, "6864": [1814, 1839], "1132": 1814, "7892": 1814, "1003": 1814, "5688": 1814, "3637": 1814, "9906": 1814, "5197": 1814, "4598": 1814, "3708": 1814, "6217": 1814, "435": 1814, "1335": 1814, "3135": 1814, "gesdd": 1815, "conquer": 1815, "gesvdjbatch": 1815, "fortran": 1815, "\u00b9": 1815, "2364": 1815, "7752": 1815, "7201": 1815, "7394": 1815, "0504": 1815, "3371": 1815, "5296": 1815, "3550": 1815, "5569": 1815, "2445": 1815, "1414": 1815, "4027": 1815, "0287": 1815, "5434": 1815, "1946": 1815, "8833": 1815, "3679": 1815, "4296": 1815, "2890": 1815, "6604": 1815, "2717": 1815, "2618": 1815, "4234": 1815, "2481": 1815, "4733": 1815, "3289": [1815, 1909], "0315": 1815, "7806": 1815, "0199": 1815, "8766": 1815, "4809": 1815, "4054": 1815, "7600": 1815, "8611": 1815, "2594": 1815, "4373": 1815, "6531e": 1815, "a_big": 1815, "6503e": 1815, "swapax": [1818, 1871, 1913, 1931], "symint": [1819, 1820, 1821, 1822, 1823, 1935, 1945, 1951], "symfloat": [1819, 1820, 1935, 1944], "symbool": [1823, 1935, 1944], "1995": 1824, "4608": 1824, "7702": 1824, "4875": 1824, "9158": 1824, "5872": 1824, "6929": 1824, "6932": 1824, "take_along_axi": [1826, 1899], "max_idx": 1826, "sorted_idx": 1826, "2027": 1827, "7687": 1827, "4412": 1827, "3856": 1827, "5930": 1827, "9859": 1827, "4722": 1827, "3366": 1827, "8986": 1828, "7279": 1828, "1745": 1828, "7156": 1828, "8257": 1828, "2553": 1828, "11111": 1829, "222222": 1829, "3333333": 1829, "1111": 1829, "array_split": 1830, "i_d": 1831, "k_": 1831, "4532": 1831, "4874": 1831, "5018": 1831, "4796": [1831, 1908], "5162": 1831, "5306": 1831, "2922": 1831, "7556": 1831, "2741": 1831, "3161": 1831, "0704": 1831, "0187": 1831, "4079": 1831, "3126": 1831, "8744": 1831, "8223": 1831, "9445": 1831, "4117": 1831, "7780": 1831, "7193": 1831, "4867": 1831, "3204": 1831, "5513": 1831, "4737": [1831, 1860], "2850": 1831, "2573": 1831, "5997": 1831, "sparsebsr": 1835, "sparsecsc": 1835, "sparsebsc": 1835, "9893": 1835, "5809": 1835, "1669": 1835, "7299": 1835, "4942": [1835, 1904], "y_0": 1836, "y_1": 1836, "x_diff": 1836, "y_diff": 1836, "riemann": [1836, 1893, 1901, 1928], "badli": 1838, "cloned_coeffici": 1838, "1527": 1838, "0753": 1838, "7986": 1838, "0210": 1838, "3513": 1838, "5492": 1838, "7403": 1838, "0243": 1838, "7841": 1838, "9046": 1838, "5405": 1838, "9320": 1838, "9270": 1838, "2826": 1838, "lbrace": [1839, 1840, 1841, 1842], "rbrace": [1839, 1840, 1841, 1842], "0813": 1839, "8619": 1839, "7105": 1839, "0935": 1839, "1380": 1839, "3409": [1839, 1908], "2219": 1839, "5653": 1839, "2521": 1839, "2345": 1839, "2544": 1839, "3461": 1839, "4785": 1839, "4477": 1839, "6049": 1839, "6368": 1839, "8775": 1839, "7145": 1839, "1502": 1839, "2716": 1839, "1243": 1839, "5413": 1839, "3615": 1839, "0614": 1839, "7344": 1839, "3164": 1839, "7648": 1839, "4024": 1839, "0978": 1839, "col": [1840, 1842, 1871], "2309": 1841, "5207": 1841, "0049": 1841, "2072": 1841, "0680": 1841, "6602": 1841, "3480": 1841, "5211": 1841, "4573": 1841, "5876": 1841, "0794": [1841, 1928], "8373": 1841, "6654": 1841, "2604": 1841, "5235": 1841, "2447": 1841, "9556": 1841, "2919": 1841, "1768": 1841, "4333": 1841, "3146": [1841, 1904], "6576": 1841, "0432": 1841, "9348": [1841, 1928], "4410": 1841, "9888": 1841, "3337": 1841, "6556": 1841, "4798": 1841, "5466": 1844, "8008": 1844, "9079": 1844, "unique_consecut": [1847, 1871, 1913], "inverse_indic": [1847, 1848], "warn_onli": 1850, "alon": [1850, 1872, 1915], "put_": [1850, 1871], "index_add": [1850, 1871, 1913], "index_select": [1850, 1871, 1913, 1927, 1951], "empty_strid": [1850, 1871, 1875, 1913, 1944, 1951], "empty_permut": [1850, 1871, 1913, 1951], "fractionalmaxpool2d": 1850, "fractionalmaxpool3d": 1850, "reflectionpad1d": 1850, "reflectionpad3d": 1850, "replicationpad1d": 1850, "replicationpad3d": 1850, "histc": [1850, 1871, 1913], "bincount": [1850, 1871, 1913], "kthvalu": [1850, 1871, 1886, 1913], "cublasapi_reproduc": [1850, 1908], "avg_pool3d_backward_cuda": 1850, "for_tensor": 1851, "for_modul": 1851, "for_storag": 1851, "unsupported_dtyp": 1851, "privateuse1": [1851, 1853, 1922], "rename_privateuse1_backend": [1851, 1869], "is_foo": 1851, "frames_to_skip": 1852, "maximum_number_of_fram": 1852, "_register_device_modul": 1853, "backendmodul": 1853, "get_amp_supported_dtyp": 1853, "is_autocast_en": [1853, 1871, 1913], "get_autocast_dtyp": 1853, "set_autocast_dtyp": 1853, "set_autocast_en": 1853, "_is_in_bad_fork": 1853, "bad_fork": 1853, "get_rng_stat": [1853, 1869, 1922], "set_rng_stat": [1853, 1869, 1922], "extend_dispatch": 1853, "pytorch_open_registration_exampl": 1853, "nicer": 1854, "alexandr": 1855, "theophil": 1855, "0631": 1856, "5590": 1856, "4893": 1856, "8258": 1856, "5926": 1857, "0056": 1857, "3646": 1857, "vecdot": 1858, "mi": [1859, 1860], "6116": 1859, "5772": [1859, 1928], "4606": 1859, "9120": 1859, "0786": 1859, "7497": 1859, "6623": 1859, "5772j": 1859, "9120j": 1859, "7497j": 1859, "6623j": 1859, "3839j": 1860, "2098": 1860, "6699j": 1860, "3470": 1860, "9451j": 1860, "5174": 1860, "3136j": 1860, "6699": 1860, "9451": 1860, "3136": 1860, "vertic": [1862, 1863, 1914, 1916, 1932, 1946], "atleast_2d": [1863, 1871, 1913], "3139": 1864, "3898": 1864, "1657": 1864, "0383": 1864, "8785": 1864, "1089": 1864, "hubconf": 1868, "entrypoint_nam": 1868, "_resnet18": 1868, "smoother": [1868, 1880], "underscor": [1868, 1887, 1923, 1933], "load_state_dict_from_url": [1868, 1882], "2gb": 1868, "relative_path_to_checkpoint": 1868, "pth": [1868, 1882, 1909], "dirnam": 1868, "__file__": [1868, 1910, 1915, 1948], "5c106cde": [1868, 1882], "force_reload": 1868, "skip_valid": 1868, "trust_repo": 1868, "repo_own": 1868, "repo_nam": 1868, "ref": [1868, 1927, 1944, 1949, 1956], "torchhub": 1868, "owner": [1868, 1898, 1913, 1923, 1924], "github_token": 1868, "repo_or_dir": 1868, "mute": 1868, "resnet50": [1868, 1932, 1948], "resnet50_weight": 1868, "imagenet1k_v1": 1868, "download_url_to_fil": 1868, "hash_prefix": 1868, "temporary_fil": 1868, "sha256": [1868, 1882], "s3": [1868, 1882, 1910], "amazonaw": [1868, 1882, 1910], "model_dir": [1868, 1882], "check_hash": [1868, 1882], "hub_dir": [1868, 1882], "get_dir": [1868, 1882], "ext": [1868, 1882], "eight": [1868, 1882], "hash": [1868, 1871, 1873, 1882, 1913], "succinct": 1868, "set_dir": 1868, "path_to_hub_dir": 1868, "torch_hom": 1868, "xdg_cache_hom": [1868, 1896], "reiniti": 1868, "path_importer_cach": 1868, "subpackag": [1868, 1915], "offend": [1868, 1947], "classifi": [1869, 1873, 1911, 1914, 1918, 1932], "pypi": 1869, "conda": [1869, 1910], "hip": 1869, "javadoc": 1869, "uninitializedbuff": 1869, "anomali": 1869, "fallthrough_kernel": [1869, 1877], "can_device_access_p": 1869, "current_blas_handl": 1869, "device_of": 1869, "get_arch_list": 1869, "get_device_cap": 1869, "get_device_nam": 1869, "get_device_properti": 1869, "get_gencode_flag": 1869, "get_sync_debug_mod": 1869, "ipc_collect": 1869, "memory_usag": 1869, "set_stream": 1869, "set_sync_debug_mod": 1869, "power_draw": 1869, "clock_rat": 1869, "outofmemoryerror": 1869, "jiter": 1869, "sanit": 1869, "_record_memory_histori": [1869, 1958], "_snapshot": [1869, 1958], "_dump_snapshot": [1869, 1958], "empty_cach": [1869, 1896, 1902, 1958], "set_per_process_memory_fract": 1869, "current_allocated_memori": 1869, "driver_allocated_memori": 1869, "openmp": [1869, 1895, 1910, 1943], "xeon": [1869, 1895, 1953], "pathwis": 1869, "exponentialfamili": 1869, "binomi": [1869, 1871, 1913], "chi2": 1869, "continuousbernoulli": 1869, "dirichlet": 1869, "fishersnedecor": 1869, "halfcauchi": 1869, "halfnorm": 1869, "kumaraswami": 1869, "lkjcholeski": 1869, "laplac": 1869, "lognorm": 1869, "lowrankmultivariatenorm": 1869, "mixturesamefamili": 1869, "multinomi": [1869, 1871, 1913], "multivariatenorm": 1869, "negativebinomi": 1869, "onehotcategor": 1869, "relaxedbernoulli": 1869, "logitrelaxedbernoulli": 1869, "relaxedonehotcategor": 1869, "studentt": 1869, "transformeddistribut": 1869, "vonmis": 1869, "weibul": 1869, "wishart": 1869, "hub": [1869, 1882, 1948], "solver": [1869, 1907], "misc": 1869, "normal_": [1869, 1871, 1886, 1891, 1896, 1935], "constant_": [1869, 1891], "ones_": [1869, 1891], "zeros_": [1869, 1891], "eye_": [1869, 1875, 1891], "dirac_": [1869, 1875, 1891], "xavier_uniform_": [1869, 1891], "xavier_normal_": [1869, 1891, 1904], "kaiming_uniform_": [1869, 1891], "trunc_normal_": [1869, 1891], "orthogonal_": [1869, 1875, 1891, 1904], "sparse_": [1869, 1891], "alexnet": 1869, "pitfal": [1869, 1946], "preview": 1869, "swa": 1869, "ema": 1869, "powersgd": 1869, "remotemodul": 1869, "fork_rng": [1869, 1922], "doublestorag": [1869, 1929], "floatstorag": [1869, 1929], "halfstorag": [1869, 1929], "longstorag": [1869, 1929], "intstorag": [1869, 1929], "shortstorag": [1869, 1929], "charstorag": [1869, 1929], "bytestorag": [1869, 1929], "boolstorag": [1869, 1929], "bfloat16storag": [1869, 1929], "complexdoublestorag": [1869, 1929], "complexfloatstorag": [1869, 1929], "quint8storag": [1869, 1929], "qint8storag": [1869, 1929], "qint32storag": [1869, 1929], "quint4x2storag": [1869, 1929], "quint2x4storag": [1869, 1929], "make_tensor": [1869, 1934], "assert_allclos": [1869, 1934], "generate_methods_for_privateuse1_backend": 1869, "get_cpp_backtrac": 1869, "set_modul": 1869, "sampler": 1869, "mobile_optim": 1869, "optimize_for_mobil": [1869, 1881], "model_zoo": 1869, "load_url": [1869, 1882], "tensorboard": [1869, 1883, 1917], "summarywrit": [1869, 1883, 1932], "iinfo": 1869, "__config__": [1869, 1895], "_log": [1869, 1873, 1956], "set_log": [1869, 1879, 1956], "torchdata": 1869, "torchserv": 1869, "torchtext": 1869, "xla": [1869, 1944], "disadvantag": 1870, "gentl": 1870, "beam": 1870, "traced_bar": 1870, "myscriptmodul": 1870, "103": [1870, 1872], "939": [1870, 1872], "116": [1870, 1872], "779": [1870, 1872], "123": [1870, 1872], "my_script_modul": [1870, 1872], "ins": 1870, "pytorch_jit": 1870, "traced_fn": 1870, "disable_jit_exampl": 1870, "printer": 1870, "rv": 1870, "rv0": 1870, "rv1": 1870, "ssa": 1870, "block0": 1870, "block1": 1870, "loop_in_traced_fn": 1870, "input_tupl": 1870, "fill_row_zero": 1870, "tracerwarn": 1870, "disjoint": 1870, "nr": 1870, "09115803241729736": 1870, "6782537698745728": 1870, "cpu_model": 1870, "gpu_model": 1870, "sample_input_cpu": 1870, "sample_input_gpu": 1870, "traced_cpu": 1870, "traced_gpu": 1870, "use_gpu": 1870, "__constants__": [1870, 1872], "my_module_inst": 1870, "redeclar": 1870, "nn_module_inst": 1870, "my_scripted_model": 1870, "pep": [1870, 1872, 1911, 1943], "526": [1870, 1872, 1911], "script_method": 1870, "implicitly_compiled_method": 1870, "another_forward": 1870, "unused_method": 1870, "some_fn": 1870, "ever": [1870, 1929, 1958], "some_fn2": 1870, "some_fn3": 1870, "some_fn4": 1870, "my_dict": [1870, 1872], "my_int": [1870, 1872], "my_const": 1870, "make_dict": 1870, "nnc": 1870, "nvfuser": 1870, "__and__": 1871, "__iand__": 1871, "__ilshift__": 1871, "__ior__": 1871, "__irshift__": 1871, "__ixor__": 1871, "__lshift__": 1871, "__or__": 1871, "__rshift__": 1871, "__xor__": 1871, "absolute_": 1871, "acos_": [1871, 1886], "addbmm_": 1871, "addcdiv_": 1871, "addcmul_": 1871, "addmv_": [1871, 1886], "addr_": 1871, "align_a": [1871, 1886, 1887, 1913], "align_to": [1871, 1886, 1887, 1913], "ellipsis_idx": 1871, "aminmax": [1871, 1913], "arccos_": 1871, "arccosh_": 1871, "arcsin_": [1871, 1927], "arcsinh_": 1871, "arctan2_": 1871, "arctan_": 1871, "arctanh_": 1871, "argwher": [1871, 1913], "as_strided_": 1871, "as_strided_scatt": [1871, 1913, 1951], "asin_": [1871, 1886, 1927], "asinh_": [1871, 1886], "atan_": [1871, 1886], "atanh_": [1871, 1886], "baddbmm_": 1871, "bernoulli_": [1871, 1886, 1935], "bitwise_and_": 1871, "bitwise_left_shift_": 1871, "bitwise_not_": [1871, 1886], "bitwise_or_": 1871, "bitwise_right_shift_": 1871, "bitwise_xor_": 1871, "broadcast_to": [1871, 1913], "cauchy_": [1871, 1886, 1935], "ceil_": [1871, 1886], "clamp_max": [1871, 1913], "clamp_max_": 1871, "clamp_min": [1871, 1913], "clamp_min_": 1871, "clip_": 1871, "conj_physical_": 1871, "copysign_": 1871, "cos_": [1871, 1886, 1893], "cosh_": [1871, 1886], "count_nonzero": [1871, 1913], "cummax": [1871, 1913], "cummin": [1871, 1913], "cumprod_": 1871, "cumsum_": 1871, "deg2rad": [1871, 1886, 1913, 1927], "deg2rad_": [1871, 1886, 1927], "outdim": 1871, "diagonal_scatt": [1871, 1913], "digamma_": [1871, 1886], "div_": [1871, 1886, 1927], "divide_": 1871, "dsplit": [1871, 1913], "eq_": 1871, "erf_": [1871, 1886], "erfc_": [1871, 1886], "erfinv_": [1871, 1886], "exp2": [1871, 1913, 1928, 1932, 1951], "exp2_": 1871, "exp_": [1871, 1886], "expm1_": [1871, 1886], "exponential_": [1871, 1886, 1935], "fill_diagonal_": 1871, "fix_": 1871, "fliplr": [1871, 1913], "flipud": [1871, 1913], "float_power_": 1871, "floor_": [1871, 1886], "floor_divide_": [1871, 1927], "fmax": [1871, 1913, 1951], "fmin": [1871, 1913, 1951], "fmod_": 1871, "frac_": [1871, 1886], "frexp": [1871, 1913], "gcd_": 1871, "ge_": 1871, "geometric_": [1871, 1935], "ger": [1871, 1913], "get_devic": [1871, 1886, 1913, 1927, 1929, 1930], "greater_": 1871, "greater_equal_": 1871, "gt_": 1871, "hardshrink": [1871, 1913], "heavisid": [1871, 1913], "heaviside_": 1871, "hsplit": [1871, 1913, 1931], "hypot_": 1871, "i0_": 1871, "igamma_": 1871, "igammac_": 1871, "index_fil": [1871, 1886, 1913], "index_reduc": [1871, 1913], "is_contigu": [1871, 1886, 1913, 1931], "is_floating_point": [1871, 1886, 1913, 1927, 1930], "is_infer": [1871, 1913], "is_same_s": [1871, 1913, 1927], "is_set_to": [1871, 1913], "is_sign": [1871, 1886, 1913, 1927], "isclos": [1871, 1913], "isfinit": [1871, 1907, 1913, 1951], "isinf": [1871, 1913, 1927, 1951], "isneginf": [1871, 1913, 1927], "isposinf": [1871, 1913, 1927], "isreal": [1871, 1913], "istft": [1871, 1913], "kron": [1871, 1913], "lcm_": 1871, "ldexp_": 1871, "le_": 1871, "lerp_": 1871, "less_": 1871, "less_equal_": 1871, "lgamma_": 1871, "log10_": [1871, 1886], "log1p_": [1871, 1886, 1927], "log2_": [1871, 1886], "log_normal_": [1871, 1886, 1935], "logaddexp2": [1871, 1913], "logcumsumexp": [1871, 1913], "logical_and_": 1871, "logical_not_": [1871, 1886], "logical_or_": 1871, "logical_xor_": 1871, "logit_": 1871, "lt_": 1871, "masked_fil": [1871, 1886, 1888, 1913, 1927], "masked_scatt": [1871, 1913], "masked_select": [1871, 1886, 1913], "matrix_pow": [1871, 1913], "moveaxi": [1871, 1913], "msort": [1871, 1913], "multiply_": 1871, "mvlgamma_": 1871, "nan_to_num_": 1871, "nanmedian": [1871, 1886, 1913], "nansum": [1871, 1913], "narrow_copi": [1871, 1913, 1927], "ne_": 1871, "neg_": [1871, 1886, 1927], "negative_": [1871, 1927], "new_empty_strid": [1871, 1913], "new_ful": [1871, 1896, 1913], "new_on": [1871, 1913], "nextafter_": 1871, "nonzero_stat": [1871, 1913], "not_equal_": 1871, "output_nr": [1871, 1913], "polygamma_": 1871, "pow_": [1871, 1886], "q_per_channel_scal": [1871, 1913], "q_per_channel_zero_point": [1871, 1913], "q_scale": [1871, 1913], "q_zero_point": [1871, 1913], "rad2deg": [1871, 1886, 1913, 1927], "rad2deg_": [1871, 1886, 1927], "reciprocal_": [1871, 1886], "record_stream": [1871, 1896, 1913], "refine_nam": [1871, 1886, 1887, 1913], "relu_": [1871, 1920], "remainder_": 1871, "rename_": [1871, 1886, 1887], "renorm_": 1871, "reshape_a": [1871, 1888, 1913, 1931], "resize_a": [1871, 1913], "the_templ": 1871, "resize_as_sparse_": 1871, "retains_grad": [1871, 1913], "roll": [1871, 1913, 1951], "rot90": [1871, 1913], "round_": [1871, 1886], "rsqrt_": [1871, 1886], "select_scatt": [1871, 1913, 1951], "sgn_": [1871, 1886], "sigmoid_": [1871, 1886, 1920], "sign_": [1871, 1886], "sinc_": 1871, "sinh_": [1871, 1886], "slice_scatt": [1871, 1913, 1951], "smm": [1871, 1913, 1927], "sparse_resize_": 1871, "sparse_resize_and_clear_": 1871, "split_with_s": [1871, 1913, 1931, 1951], "sqrt_": [1871, 1886], "square_": 1871, "squeeze_": [1871, 1920], "sspaddmm": [1871, 1913, 1927], "sub_": [1871, 1886, 1927], "subtract_": 1871, "sum_to_s": [1871, 1913], "swapaxes_": 1871, "swapdim": [1871, 1913, 1931], "swapdims_": 1871, "take_along_dim": [1871, 1913], "tan_": [1871, 1886], "tanh_": [1871, 1886, 1920], "tensor_indices_or_sect": 1871, "to_mkldnn": [1871, 1913], "to_padded_tensor": [1871, 1888, 1913], "to_sparse_bsc": [1871, 1913], "to_sparse_bsr": [1871, 1913, 1927], "to_sparse_csc": [1871, 1913, 1927], "true_divide_": 1871, "trunc_": [1871, 1886], "type_a": [1871, 1886, 1913], "out0": [1871, 1909], "unsafe_chunk": [1871, 1913], "unsafe_split": [1871, 1913], "unsafe_split_with_s": [1871, 1913], "unsqueeze_": [1871, 1920], "view_a": [1871, 1913, 1931], "vsplit": [1871, 1913, 1931], "xlogy_": 1871, "adaptive_avg_pool2d": [1871, 1898, 1913, 1920], "adaptive_max_pool1d_with_indic": [1871, 1898], "adaptive_max_pool2d_with_indic": 1871, "adaptive_max_pool3d_with_indic": 1871, "alpha_dropout": [1871, 1913], "assert_int_or_pair": 1871, "arg_nam": 1871, "binary_cross_entropi": [1871, 1913], "binary_cross_entropy_with_logit": [1871, 1913], "celu": [1871, 1913], "dropout2d": 1871, "dropout3d": 1871, "feature_alpha_dropout": [1871, 1913], "fractional_max_pool2d_with_indic": 1871, "fractional_max_pool3d_with_indic": 1871, "gaussian_nll_loss": 1871, "glu": [1871, 1913], "gumbel_softmax": 1871, "hardsigmoid": [1871, 1913, 1920], "hardswish": [1871, 1913, 1920], "huber_loss": [1871, 1913], "instance_norm": [1871, 1913, 1920], "local_response_norm": 1871, "lp_pool1d": 1871, "lp_pool2d": 1871, "max_pool1d_with_indic": [1871, 1913], "max_pool2d_with_indic": [1871, 1913, 1951], "max_pool3d_with_indic": [1871, 1913, 1951], "mish": [1871, 1913], "multi_head_attention_forward": 1871, "embed_dim_to_check": 1871, "in_proj_weight": 1871, "in_proj_bia": 1871, "bias_k": 1871, "bias_v": 1871, "out_proj_weight": 1871, "out_proj_bia": 1871, "use_separate_proj_weight": 1871, "q_proj_weight": 1871, "k_proj_weight": 1871, "v_proj_weight": 1871, "static_k": 1871, "static_v": 1871, "multilabel_soft_margin_loss": 1871, "relu6": [1871, 1913, 1920], "silu": [1871, 1888, 1913], "softsign": 1871, "tanhshrink": 1871, "adaptive_avg_pool1d": [1871, 1898, 1913, 1920, 1951], "adaptive_max_pool1d": [1871, 1898, 1913], "affine_grid_gener": [1871, 1913], "alias_copi": [1871, 1913], "align_tensor": [1871, 1913], "alpha_dropout_": 1871, "as_strided_copi": [1871, 1913], "atleast_1d": [1871, 1913], "avg_pool1d": [1871, 1913, 1920, 1951], "bartlett_window": [1871, 1875, 1913], "cudnn_en": 1871, "batch_norm_backward_elemt": 1871, "invstd": 1871, "sum_di": 1871, "sum_dy_xmu": 1871, "batch_norm_backward_reduc": 1871, "input_g": 1871, "bias_g": 1871, "out3": 1871, "batch_norm_elemt": [1871, 1913], "batch_norm_gather_stat": [1871, 1913], "batch_norm_gather_stats_with_count": [1871, 1913], "batch_norm_stat": [1871, 1913], "batch_norm_update_stat": [1871, 1913], "blackman_window": [1871, 1875, 1913], "block_diag": [1871, 1913], "can_cast": [1871, 1913], "ccol_indices_copi": [1871, 1913], "celu_": 1871, "choose_qparams_optim": [1871, 1913], "n_bin": 1871, "bit_width": 1871, "col_indices_copi": [1871, 1913], "column_stack": [1871, 1913], "constant_pad_nd": [1871, 1913, 1951], "conv_tbc": [1871, 1913], "crow_indices_copi": [1871, 1913], "cudnn_affine_grid_gener": [1871, 1913], "cudnn_batch_norm": [1871, 1913], "exponential_average_factor": 1871, "cudnn_convolut": [1871, 1913], "cudnn_convolution_add_relu": [1871, 1913], "cudnn_convolution_relu": [1871, 1913], "cudnn_convolution_transpos": [1871, 1913], "cudnn_grid_sampl": [1871, 1913], "cudnn_is_accept": [1871, 1913], "cumulative_trapezoid": [1871, 1913], "detach_copi": [1871, 1913, 1955], "diagonal_copi": [1871, 1913], "dropout_": [1871, 1881], "embedding_renorm_": 1871, "physical_layout": [1871, 1951], "empty_quant": [1871, 1913], "anyenumtyp": 1871, "expand_copi": [1871, 1913], "fake_quantize_per_channel_affin": [1871, 1913], "fbgemm_linear_fp16_weight": [1871, 1913], "packed_weight": 1871, "fbgemm_linear_fp16_weight_fp32_activ": [1871, 1913], "fbgemm_linear_int8_weight": [1871, 1913], "col_offset": 1871, "weight_scal": 1871, "weight_zero_point": 1871, "fbgemm_linear_int8_weight_fp32_activ": [1871, 1913], "fbgemm_linear_quantize_weight": [1871, 1913], "fbgemm_pack_gemm_matrix_fp16": [1871, 1913], "fbgemm_pack_quantized_matrix": [1871, 1913], "feature_alpha_dropout_": 1871, "feature_dropout": [1871, 1913], "feature_dropout_": 1871, "frobenius_norm": [1871, 1913], "from_fil": [1871, 1913, 1929], "fused_moving_avg_obs_fake_qu": [1871, 1913], "observer_on": 1871, "fake_quant_on": 1871, "running_min": 1871, "running_max": 1871, "per_row_fake_qu": 1871, "symmetric_qu": 1871, "interpolation_mod": [1871, 1951], "has_bias": 1871, "gru_cel": [1871, 1913], "w_ih": 1871, "w_hh": 1871, "hamming_window": [1871, 1875, 1913], "histogramdd": [1871, 1913], "hspmm": [1871, 1913, 1927], "indices_copi": [1871, 1913], "is_autocast_cpu_en": [1871, 1913], "is_grad_en": [1871, 1913], "is_vulkan_avail": [1871, 1913], "isin": [1871, 1913], "kaiser_window": [1871, 1913], "lstm_cell": [1871, 1913], "meshgrid": [1871, 1913], "miopen_batch_norm": [1871, 1913], "miopen_convolut": [1871, 1913], "miopen_convolution_add_relu": [1871, 1913], "miopen_convolution_relu": [1871, 1913], "miopen_convolution_transpos": [1871, 1913], "miopen_depthwise_convolut": [1871, 1913], "miopen_rnn": [1871, 1913], "weight_stride0": 1871, "dropout_st": 1871, "out4": 1871, "mkldnn_adaptive_avg_pool2d": [1871, 1913], "mkldnn_convolut": [1871, 1913], "mkldnn_linear_backward_weight": 1871, "bias_defin": 1871, "mkldnn_max_pool2d": [1871, 1913], "mkldnn_max_pool3d": [1871, 1913], "mkldnn_rnn_layer": [1871, 1913], "weight0": 1871, "weight1": 1871, "weight2": 1871, "weight3": 1871, "hx_": 1871, "cx_": 1871, "native_batch_norm": [1871, 1913], "save_mean": 1871, "save_invstd": 1871, "native_channel_shuffl": [1871, 1913], "native_dropout": [1871, 1913, 1951], "native_group_norm": [1871, 1913, 1951], "hxw": [1871, 1951], "native_layer_norm": [1871, 1913, 1951], "native_norm": [1871, 1913, 1927], "norm_except_dim": [1871, 1913], "nuclear_norm": [1871, 1913], "pairwise_dist": [1871, 1913], "permute_copi": [1871, 1913], "promote_typ": [1871, 1913, 1934], "quantize_per_channel": [1871, 1913, 1918], "quantize_per_tensor_dynam": [1871, 1913, 1918], "quantized_batch_norm": [1871, 1913], "quantized_gru_cel": [1871, 1913], "packed_ih": 1871, "packed_hh": 1871, "col_offsets_ih": 1871, "col_offsets_hh": 1871, "scale_ih": 1871, "scale_hh": 1871, "zero_point_ih": 1871, "zero_point_hh": 1871, "quantized_lstm_cel": [1871, 1913], "quantized_max_pool1d": [1871, 1913], "quantized_max_pool2d": [1871, 1913], "quantized_max_pool3d": [1871, 1913], "quantized_rnn_relu_cel": [1871, 1913], "quantized_rnn_tanh_cel": [1871, 1913], "rand_lik": [1871, 1875, 1896, 1913, 1935, 1941], "randint_lik": [1871, 1875, 1913, 1935], "randn_lik": [1871, 1875, 1888, 1913, 1935], "randperm": [1871, 1875, 1913, 1935, 1951], "result_typ": [1871, 1913], "scalar1": 1871, "scalar2": 1871, "rnn_relu": [1871, 1913], "rnn_relu_cel": [1871, 1913], "rnn_tanh": [1871, 1913], "rnn_tanh_cel": [1871, 1913], "row_indices_copi": [1871, 1913], "row_stack": [1871, 1913], "rrelu_": 1871, "rsub": [1871, 1913], "searchsort": [1871, 1913], "segment_reduc": [1871, 1913], "selu_": 1871, "slice_copi": [1871, 1913], "sparse_bsc_tensor": [1871, 1913, 1927], "sparse_bsr_tensor": [1871, 1913, 1927], "sparse_compressed_tensor": [1871, 1913, 1927], "sparse_csc_tensor": [1871, 1913, 1927], "split_copi": [1871, 1913], "split_with_sizes_copi": [1871, 1913], "squeeze_copi": [1871, 1913], "std_mean": [1871, 1886, 1913], "t_copi": [1871, 1913], "threshold_": 1871, "transpose_copi": [1871, 1913], "trapz": [1871, 1913], "tril_indic": [1871, 1875, 1913], "triu_indic": [1871, 1875, 1913], "unbind_copi": [1871, 1913], "unfold_copi": [1871, 1913], "unsqueeze_copi": [1871, 1913], "values_copi": [1871, 1913], "vander": [1871, 1875, 1913], "var_mean": [1871, 1886, 1913], "view_as_complex_copi": [1871, 1913], "view_as_real_copi": [1871, 1913], "_nn": 1871, "adaptive_max_pool2d": [1871, 1913], "avg_pool2d": [1871, 1913, 1920, 1951], "conv_depthwise3d": [1871, 1913], "cross_entropy_loss": [1871, 1913], "input_scal": 1871, "elu_": 1871, "flatten_dense_tensor": [1871, 1913], "random_sampl": 1871, "gelu_": 1871, "hardsigmoid_": [1871, 1920], "hardswish_": 1871, "hardtanh_": [1871, 1920], "leaky_relu_": 1871, "log_sigmoid": [1871, 1913], "mish_": 1871, "mkldnn_linear": [1871, 1913], "mkldnn_reorder_conv2d_weight": [1871, 1913], "mkldnn_reorder_conv3d_weight": [1871, 1913], "nll_loss2d": [1871, 1913], "nll_loss_nd": [1871, 1913], "reflection_pad3d": [1871, 1913, 1951], "relu6_": 1871, "rrelu_with_nois": [1871, 1913], "rrelu_with_noise_": 1871, "silu_": 1871, "slow_conv3d": [1871, 1913], "slow_conv_dilated2d": [1871, 1913], "slow_conv_dilated3d": [1871, 1913], "slow_conv_transpose2d": [1871, 1913], "slow_conv_transpose3d": [1871, 1913], "softshrink": [1871, 1913], "thnn_conv2d": [1871, 1913], "unflatten_dense_tensor": [1871, 1913], "upsample_bicubic2d": [1871, 1913], "scales_h": 1871, "scales_w": 1871, "upsample_bilinear2d": [1871, 1913, 1951], "upsample_linear1d": [1871, 1913], "upsample_nearest1d": [1871, 1913], "upsample_nearest2d": [1871, 1913, 1951], "upsample_nearest3d": [1871, 1913], "scales_d": 1871, "upsample_trilinear3d": [1871, 1913], "fft_fftfreq": [1871, 1913], "fft_fftshift": [1871, 1913], "fft_hfft2": [1871, 1913], "fft_hfftn": [1871, 1913], "fft_ifftshift": [1871, 1913], "fft_ihfft2": [1871, 1913], "fft_ihfftn": [1871, 1913], "fft_rfftfreq": [1871, 1913], "_linalg": 1871, "linalg_cross": [1871, 1913], "linalg_det": [1871, 1913], "linalg_diagon": [1871, 1913], "eigvec": 1871, "linalg_ldl_factor": [1871, 1913], "linalg_ldl_factor_ex": [1871, 1913], "linalg_ldl_solv": [1871, 1913], "linalg_lu": [1871, 1913], "linalg_lu_factor": [1871, 1913], "linalg_lu_factor_ex": [1871, 1913], "linalg_lu_solv": [1871, 1913], "linalg_matmul": [1871, 1913], "linalg_matrix_exp": [1871, 1913], "linalg_matrix_pow": [1871, 1913], "linalg_multi_dot": [1871, 1913], "linalg_norm": [1871, 1913], "linalg_pinv": [1871, 1913], "linalg_solve_ex": [1871, 1913], "linalg_solve_triangular": [1871, 1913], "linalg_vand": [1871, 1913], "linalg_vecdot": [1871, 1913], "linalg_vector_norm": [1871, 1913], "_nest": 1871, "nested_to_padded_tensor": [1871, 1913], "_spars": 1871, "sparse_sampled_addmm": [1871, 1913], "_special": 1871, "special_airy_ai": [1871, 1913], "special_bessel_j0": [1871, 1913], "special_bessel_j1": [1871, 1913], "special_bessel_y0": [1871, 1913], "special_bessel_y1": [1871, 1913], "special_chebyshev_polynomial_t": [1871, 1913], "special_chebyshev_polynomial_u": [1871, 1913], "special_chebyshev_polynomial_v": [1871, 1913], "special_chebyshev_polynomial_w": [1871, 1913], "special_digamma": [1871, 1913], "special_entr": [1871, 1913], "special_erf": [1871, 1913], "special_erfc": [1871, 1913], "special_erfcx": [1871, 1913], "special_erfinv": [1871, 1913], "special_exp2": [1871, 1913], "special_expit": [1871, 1913], "special_expm1": [1871, 1913], "special_gammainc": [1871, 1913], "special_gammaincc": [1871, 1913], "special_gammaln": [1871, 1913], "special_hermite_polynomial_h": [1871, 1913], "special_i0": [1871, 1913], "special_i1": [1871, 1913], "special_laguerre_polynomial_l": [1871, 1913], "special_legendre_polynomial_p": [1871, 1913], "special_log1p": [1871, 1913], "special_log_ndtr": [1871, 1913], "special_log_softmax": [1871, 1913], "special_logit": [1871, 1913], "special_logsumexp": [1871, 1913], "special_modified_bessel_i0": [1871, 1913], "special_modified_bessel_i1": [1871, 1913], "special_modified_bessel_k0": [1871, 1913], "special_modified_bessel_k1": [1871, 1913], "special_multigammaln": [1871, 1913], "special_ndtr": [1871, 1913], "special_ndtri": [1871, 1913], "special_polygamma": [1871, 1913], "special_psi": [1871, 1913], "special_round": [1871, 1913], "special_scaled_modified_bessel_k0": [1871, 1913], "special_scaled_modified_bessel_k1": [1871, 1913], "special_shifted_chebyshev_polynomial_t": [1871, 1913], "special_shifted_chebyshev_polynomial_u": [1871, 1913], "special_shifted_chebyshev_polynomial_v": [1871, 1913], "special_shifted_chebyshev_polynomial_w": [1871, 1913], "special_sinc": [1871, 1913], "special_softmax": [1871, 1913], "special_spherical_bessel_j0": [1871, 1913], "special_xlog1pi": [1871, 1913], "special_xlogi": [1871, 1913], "special_zeta": [1871, 1913], "tval": 1871, "is_accept": 1871, "rect": 1871, "magic": [1871, 1874, 1935, 1945], "__complex__": 1871, "__float__": 1871, "__int__": 1871, "hex": [1871, 1873, 1913], "__hex__": 1871, "oct": [1871, 1913], "__oct__": 1871, "divmod": [1871, 1873, 1913], "chr": [1871, 1873, 1913], "int_float": 1871, "float_int": 1871, "fab": [1871, 1913], "int_int": 1871, "float_float": 1871, "complex_complex": 1871, "int_complex": 1871, "complex_int": 1871, "float_complex": 1871, "complex_float": [1871, 1929], "scalar_scalar": 1871, "int_to_int": 1871, "modf": [1871, 1913], "mathremaind": [1871, 1913], "programm": [1872, 1873], "tn": 1872, "subtyp": 1872, "an_error": 1872, "noreturn": [1872, 1873], "classvar": [1872, 1873], "anystr": [1872, 1873], "nomin": 1872, "newtyp": [1872, 1873], "tup": [1872, 1873], "emptydatastructur": 1872, "my_list": 1872, "aug_add_x": 1872, "inc": [1872, 1873], "assign_x": [1872, 1873], "sum_pair": 1872, "red": [1872, 1873], "green": [1872, 1873, 1947], "enum_fn": [1872, 1873], "my_variable_nam": 1872, "top_level_method": 1872, "other_help": 1872, "ten": [1872, 1932], "my_submodul": 1872, "tuple_or_list": 1872, "a_tupl": 1872, "de": [1872, 1915, 1918], "is_script": [1872, 1873, 1913], "unsupported_linear_op": 1872, "is_trac": [1872, 1873], "univers": 1872, "typing_extens": 1872, "a_dict": 1872, "some_dict": 1872, "delimit": [1873, 1874], "tstype": 1873, "tsmoduletyp": 1873, "tsalltyp": 1873, "tsmetatyp": 1873, "tsprimitivetyp": 1873, "tsstructuraltyp": 1873, "tsnominaltyp": 1873, "myclass": [1873, 1915], "printabl": [1873, 1915], "sortabl": 1873, "nevertheless": [1873, 1925], "inc_first_el": 1873, "cpufloattyp": 1873, "tstupl": 1873, "tsnamedtupl": 1873, "tslist": 1873, "tsdict": 1873, "tsoption": 1873, "tsunion": 1873, "tsfutur": 1873, "tsrref": 1873, "tsawait": 1873, "await": [1873, 1874, 1923], "keytyp": 1873, "tensortyp": [1873, 1955], "_await": 1873, "mytupl": 1873, "scripted_inc": 1873, "_annotatednamedtupl": 1873, "_namedtupleannot": 1873, "_unannotatednamedtupl": 1873, "mistak": [1873, 1900, 1945], "nameerror": 1873, "remedi": 1873, "tsbuiltinclass": 1873, "tscustomclass": 1873, "tsenum": 1873, "tstensor": 1873, "subtensor": [1873, 1898, 1957], "subwithtorchfunct": 1873, "script_g": 1873, "tsclassdef": 1873, "methoddefinit": 1873, "__torch__": [1873, 1911], "class2": 1873, "tsenumdef": 1873, "tsenumtyp": 1873, "memberidentifi": 1873, "intenum": 1873, "intflag": 1873, "basecolor": 1873, "compli": [1873, 1915], "classbodydefinit": 1873, "moduleobj": 1873, "testmodul": 1873, "dosometh": 1873, "strateg": 1873, "congruent": 1873, "python3": 1873, "unannot": 1873, "python3annot": 1873, "paramannot": 1873, "returnannot": 1873, "funcormethodbodi": 1873, "mypyannot": 1873, "localvarannot": 1873, "setval": 1873, "moduletyp": [1873, 1915], "classidentifi": 1873, "instanceattridentifi": 1873, "offset_": 1873, "tsstructualtyp": 1873, "grammar": 1873, "chapter": [1873, 1901], "floattyp": 1873, "inttyp": 1873, "stringtyp": 1873, "devicetyp": 1873, "bullet": 1873, "tupletyp": 1873, "listtyp": 1873, "enclosur": 1873, "parenth_form": 1873, "list_displai": 1873, "dict_displai": 1873, "legal": 1873, "stringliter": 1873, "floatnumb": 1873, "expression_list": 1873, "list_comprehens": 1873, "comp_for": 1873, "target_list": 1873, "or_expr": 1873, "key_datum_list": 1873, "dict_comprehens": 1873, "key_datum": 1873, "ongo": [1873, 1911, 1921, 1923], "enclos": 1873, "datum": [1873, 1937], "attributeref": 1873, "slice_list": 1873, "slice_item": 1873, "proper_slic": 1873, "argument_list": 1873, "desugar": [1873, 1945], "u_expr": 1873, "tightli": [1873, 1904], "m_expr": 1873, "a_expr": 1873, "shift_expr": 1873, "and_expr": 1873, "xor_expr": 1873, "comp_oper": 1873, "__contains__": 1873, "or_test": 1873, "and_test": 1873, "not_test": 1873, "conditional_express": 1873, "starred_item": 1873, "expression_stmt": 1873, "starred_express": 1873, "assignment_express": 1873, "assignment_stmt": 1873, "augmented_assignment_stmt": 1873, "augtarget": 1873, "augop": 1873, "annotated_assignment_stmt": 1873, "raise_stmt": 1873, "assert_stmt": 1873, "return_stmt": 1873, "del_stmt": 1873, "pass_stmt": 1873, "print_stmt": 1873, "break_stmt": 1873, "continue_stmt": 1873, "if_stmt": 1873, "while_stmt": 1873, "for_stmt": 1873, "with_stmt": 1873, "with_item": 1873, "__enter__": 1873, "suppress": [1873, 1922], "tuple_stmt": 1873, "getattr_stmt": 1873, "hasattr_stmt": 1873, "zip_stmt": 1873, "iterable1": 1873, "iterable2": 1873, "enumerate_stmt": 1873, "add_stat_valu": 1873, "sugaredvalu": 1873, "unrecogn": 1873, "honor": 1873, "__abs__": 1873, "bytearrai": 1873, "delattr": 1873, "exec": 1873, "__index__": 1873, "isint": 1873, "issubclass": [1873, 1898], "ndigit": 1873, "__import__": [1873, 1915], "notimpl": [1873, 1874, 1898, 1945], "rpc_sync": [1873, 1913, 1923, 1924, 1925], "synonym": 1873, "_fork": [1873, 1895], "_wait": [1873, 1895], "lexic": 1874, "indent": 1874, "coroutin": 1874, "__del__": [1874, 1893], "__bytes__": 1874, "__slots__": 1874, "metaclass": 1874, "mro": 1874, "__r": 1874, "__": [1874, 1955], "bytesliter": 1874, "imagnumb": 1874, "parenthes": 1874, "ifs": 1874, "customiz": [1874, 1936, 1943], "compound": 1874, "exc_typ": 1874, "exc_valu": 1874, "adaptivelogsoftmaxwithloss": 1875, "overload_nam": [1877, 1898], "handi": [1877, 1893, 1896], "spotti": 1877, "googl": 1877, "colab": [1877, 1915, 1945], "dispatch_kei": [1877, 1943], "keynam": 1877, "alias_analysi": 1877, "conserv": [1877, 1880, 1896, 1945], "fallthrough": 1877, "div_cpu": 1877, "off_by_default": 1879, "_registr": 1879, "spammi": [1879, 1943], "born": 1880, "citizen": 1880, "afterthought": 1880, "unlock": 1880, "intuit": [1880, 1948], "alik": 1880, "grai": 1880, "systemat": 1880, "onboard": 1880, "maskedarrai": 1880, "masked_tensor": 1880, "mobil": [1881, 1918, 1946], "blocklist": [1881, 1915], "mobileoptimizertyp": 1881, "conv_bn_fus": 1881, "correspondingli": 1881, "prepack": [1881, 1913], "insert_fold_prepack_op": 1881, "arm": [1881, 1918], "remove_dropout": 1881, "hoist": 1881, "hoist_conv_packed_param": 1881, "fuse_add_relu": 1881, "vulkan": 1881, "vulkan_automatic_gpu_transf": 1881, "freeze_modul": 1881, "script_modul": 1881, "optimization_blocklist": 1881, "preserved_method": 1881, "_mobileoptimizertyp": 1881, "recursivescriptmodul": [1881, 1909], "download": [1882, 1910, 1932, 1948], "infrequ": 1883, "window_s": 1883, "max_sampl": 1883, "cap": 1883, "_monitor": 1883, "data_value_t": 1883, "eventhandlerhandl": 1883, "register_event_handl": 1883, "unregister_event_handl": 1883, "tensorboardeventhandl": 1883, "writer": [1883, 1904, 1932], "shader": [1884, 1905], "processor": 1884, "metalperformanceshad": 1884, "shared_memori": 1885, "abruptli": 1885, "get_all_sharing_strategi": 1885, "get_sharing_strategi": 1885, "set_sharing_strategi": 1885, "new_strategi": 1885, "di": [1885, 1941, 1943, 1949], "abnorm": [1885, 1906], "forev": [1885, 1897], "asap": 1885, "queue_2": 1885, "x_clone": 1885, "segfault": [1885, 1907, 1945], "shm_open": 1885, "prone": [1885, 1906, 1945], "destructor": [1885, 1925], "seriou": [1885, 1896, 1945], "torch_shm_manag": 1885, "unnot": 1885, "spawncontext": 1885, "has_nam": 1886, "is_shar": [1886, 1929], "is_sparse_csr": [1886, 1913, 1929], "is_tensor": [1886, 1927], "items": [1886, 1913], "unifies_names_from_input_tensor": 1886, "nbyte": [1886, 1913, 1929], "ndimens": 1886, "register_post_accumulate_grad_hook": [1886, 1893], "position": [1886, 1887], "unnam": [1886, 1887], "misalign": 1886, "inher": 1886, "collaps": [1886, 1913, 1951], "disappear": 1886, "img": [1887, 1932], "renamed_img": 1887, "coexist": 1887, "wildcard": [1887, 1915, 1955], "somewher": [1887, 1903, 1949], "scale_channel": 1887, "more_img": 1887, "named_tensor": 1887, "named_img": 1887, "flat_img": 1887, "named_flat_img": 1887, "unflattened_named_img": 1887, "grad_loss": 1887, "8107": 1887, "6357": 1887, "0783": 1887, "untest": 1887, "rename_map": 1887, "greedili": 1887, "unment": 1887, "49152": 1887, "datastructur": 1888, "seamless": 1888, "nested_tensor": 1888, "nt": 1888, "vein": 1888, "as_nested_tensor": 1888, "irregular": 1888, "indistinguish": 1888, "2286": 1888, "4842": 1888, "7827": 1888, "6745": [1888, 1928], "0658": 1888, "1247": 1888, "4078": 1888, "8083": 1888, "2871": 1888, "5559": 1888, "9885": 1888, "4074": 1888, "4855": 1888, "0733": 1888, "8285": 1888, "6858": 1888, "7030": 1888, "3481": 1888, "0236": 1888, "fake_grad": 1888, "6862": 1888, "1282": 1888, "1031": 1888, "0464": 1888, "3276": 1888, "9967": 1888, "0054": 1888, "8972": 1888, "9174": 1888, "4995": 1888, "8546": 1888, "7194": 1888, "2918": 1888, "1846": 1888, "8793": 1888, "5183": 1888, "6447": 1888, "8009": 1888, "8468": 1888, "9832": 1888, "5272": 1888, "pt_infer": 1888, "pt_larg": 1888, "pt_small": 1888, "bitwidth": [1889, 1904, 1918, 1927], "asymmetr": [1889, 1918, 1921], "sacrific": [1891, 1896], "dirac": 1891, "glorot": 1891, "bengio": 1891, "fan": 1891, "_in": 1891, "_out": [1891, 1901, 1951], "fan_in": 1891, "delv": 1891, "surpass": 1891, "he": 1891, "_mode": 1891, "fan_out": 1891, "redrawn": 1891, "sax": 1891, "2013": 1891, "marten": 1891, "walkthrough": 1892, "clip_grad_value_": 1892, "optimizer2": 1892, "batch_per_it": 1892, "iters_to_accumul": 1892, "num_proc": 1892, "grad_param": 1892, "grad_norm": 1892, "scaled_grad_param": 1892, "inv_scal": 1892, "proce": [1892, 1896, 1923, 1956], "optimizer0": 1892, "optimizer1": 1892, "output0": 1892, "model0": 1892, "model1": 1892, "loss0": 1892, "loss1": 1892, "hundr": [1892, 1903, 1956], "imped": 1892, "poor": [1892, 1893], "dp_model": 1892, "alter": [1892, 1898, 1952], "imported_funct": 1892, "mymm": 1892, "myfloat32func": 1892, "fwd_output": 1892, "cleaner": 1893, "mapsto": 1893, "educ": 1893, "_save": 1893, "_saved_self": 1893, "convex": 1893, "concav": 1893, "togglabl": 1893, "drawback": 1893, "0011": 1893, "dirti": 1893, "hogwild": 1893, "train_fn": 1893, "graphtask": 1893, "copyslic": 1893, "mutex": 1893, "gotten": 1893, "curiou": 1893, "\u2102": 1893, "yj": 1893, "holomorph": 1893, "fulfil": [1893, 1899, 1915, 1949], "theori": 1893, "homomorph": 1893, "mathematician": 1893, "im": 1893, "studi": [1893, 1917], "beauti": 1893, "somewhat": [1893, 1896, 1927], "counterintuit": 1893, "0906": 1893, "4835": 1893, "audio": [1893, 1932], "\u211d": 1893, "_output": 1893, "vj": 1893, "selfdeletingtempfil": 1893, "tmp_dir": 1893, "uuid": 1893, "uuid4": 1893, "temp_fil": 1893, "forbidden": 1893, "savedtensor": 1893, "_raw_saved_": 1893, "_raw_saved_self": 1893, "save_on_disk_threshold": 1893, "tensor_or_sctf": 1893, "_saved_oth": 1893, "4th": 1894, "backcompat": 1894, "broadcast_warn": 1894, "userwarn": 1894, "compute_z": 1895, "w_z": 1895, "w_y": 1895, "tbb": 1895, "aten_thread": 1895, "omp": 1895, "mkl_thread": 1895, "bla": 1895, "mkldnn_cpu_runtim": 1895, "use_mkldnn": 1895, "use_tbb": 1895, "use_openmp": 1895, "ON": [1895, 1902, 1903], "set_num_interop_thread": 1895, "get_num_interop_thread": 1895, "set_num_thread": [1895, 1906], "get_num_thread": 1895, "omp_num_thread": 1895, "mkl_num_thread": 1895, "e5": 1895, "oversubscript": 1895, "irrespect": 1896, "spread": 1896, "cuda2": [1896, 1902], "a_ful": 1896, "10240": 1896, "b_full": 1896, "ab_ful": 1896, "7277": 1896, "ab_tf32": 1896, "016": 1896, "ga100": 1896, "1747": 1896, "relative_error": 1896, "0022": 1896, "ab_fp32": 1896, "0031": 1896, "000039": 1896, "7x": 1896, "globalcontext": 1896, "setallowtf32cubla": 1896, "setallowtf32cudnn": 1896, "bench_gemm_transform": 1896, "allow_fp16_reduc": 1896, "4048": 1896, "1634": 1896, "1639": 1896, "4056": 1896, "1670": 1896, "1661": 1896, "4080": 1896, "1664": 1896, "1658": 1896, "1651": 1896, "4104": 1896, "1677": 1896, "1674": 1896, "4128": 1896, "1796": [1896, 1904], "2519": 1896, "5096": 1896, "2144": 1896, "2149": 1896, "2766": 1896, "5120": 1896, "2142": 1896, "9728": 1896, "3875": 1896, "5779": 1896, "16384": [1896, 1948], "6182": 1896, "9656": 1896, "setallowfp16reductioncubla": 1896, "instabl": 1896, "setallowbf16reductioncubla": 1896, "invis": [1896, 1946, 1956], "start_ev": 1896, "elapsed_time_m": 1896, "exploit": 1896, "paragraph": [1896, 1901], "initial_grad": 1896, "memory_alloc": [1896, 1902], "memory_snapshot": [1896, 1902], "memcheck": 1896, "pytorch_no_cuda_memory_cach": [1896, 1902], "option2": 1896, "value2": 1896, "max_split_size_mb": 1896, "borderlin": 1896, "memory_summari": 1896, "resort": [1896, 1901, 1915], "roundup_power2_divis": 1896, "cudacachingalloc": 1896, "1280": 1896, "1536": 1896, "1792": 1896, "256mb": 1896, "512mb": 1896, "1gb": [1896, 1954], "knob": [1896, 1944], "garbage_collection_threshold": 1896, "reclaim": [1896, 1941], "release_cached_block": 1896, "unfavor": 1896, "expandable_seg": 1896, "2mb": 1896, "sliver": 1896, "cuda_runtime_api": 1896, "iostream": 1896, "fpic": 1896, "my_malloc": 1896, "cout": 1896, "endl": [1896, 1903], "my_fre": 1896, "cudafre": [1896, 1958], "cudapluggablealloc": 1896, "new_alloc": 1896, "_cuda_clearcublasworkspac": 1896, "kib": 1896, "lru": 1896, "geometri": 1896, "1023": 1896, "zeta": [1896, 1913, 1928, 1951], "varieti": [1896, 1924], "use_pytorch_kernel_cach": 1896, "pytorch_kernel_cache_path": 1896, "store_tru": 1896, "disable_cuda": 1896, "assess": 1896, "cudagetdevicecount": 1896, "cuinit": 1896, "pytorch_nvml_based_cuda_check": 1896, "nvml": 1896, "nvmldevicegetcount_v2": 1896, "poison": 1896, "train_load": [1896, 1906], "x_cpu": 1896, "x_gpu": 1896, "x_cpu_long": 1896, "y_cpu": 1896, "y_gpu": 1896, "y_cpu_long": 1896, "new_tensor": 1896, "overus": 1896, "principl": [1896, 1946], "cudagraphlaunch": 1896, "elid": 1896, "versatil": 1896, "static_input": 1896, "static_output": 1896, "realist": 1896, "sophist": [1896, 1914], "violat": [1896, 1899], "virtual": 1896, "d_in": 1896, "d_out": 1896, "640": 1896, "static_target": 1896, "static_y_pr": 1896, "static_loss": 1896, "real_input": [1896, 1945], "real_target": 1896, "refil": 1896, "dag": 1896, "rejoin": 1896, "cuda_work": 1896, "nsight": 1896, "reorgan": 1896, "graphabl": 1896, "needlessli": [1896, 1944], "econom": 1896, "static_out_1": 1896, "g1_workload": 1896, "static_in_1": 1896, "static_out_2": 1896, "g2_workload": 1896, "static_in_2": 1896, "real_data_1": 1896, "real_data_2": 1896, "occasion": [1896, 1927, 1945], "29500": [1897, 1916, 1923, 1924], "dive": [1897, 1901, 1915, 1949, 1950], "grad0": 1897, "grad1": 1897, "bucket1": 1897, "bucket0": 1897, "hurt": 1897, "kick": [1897, 1923, 1924, 1953], "earliest": 1897, "unreadi": 1897, "perspect": [1897, 1907, 1924, 1949], "hpp": 1897, "processgroupgloo": 1897, "processgroupmpi": 1897, "_sync_param": 1897, "autograd_hook": 1897, "prepare_for_backward": 1897, "_after_": 1897, "log_level": [1897, 1943, 1956], "optimize_ddp": 1897, "mark_dirti": 1898, "mark_non_differenti": [1898, 1899], "set_materialize_grad": 1898, "linearfunct": 1898, "grad_bia": 1898, "mulconst": 1898, "mycub": [1898, 1899], "grad_dx": [1898, 1899], "my_cub": [1898, 1899], "input_featur": 1898, "output_featur": 1898, "duck": [1898, 1915], "__array_function__": 1898, "nep": 1898, "0018": 1898, "scalartensor": 1898, "handled_funct": 1898, "mandat": 1898, "update_wrapp": 1898, "ensure_tensor": 1898, "metadatatensor": 1898, "__add__": 1898, "subtensor2": 1898, "othersubtensor": 1898, "loggingtensor": 1898, "permiss": 1898, "_metadata": 1898, "ndata": 1898, "ministri": 1898, "silli": 1898, "superclass": 1898, "troublesom": 1898, "face": [1898, 1915, 1932, 1945], "_get_overridable_funct": 1898, "overriden": 1898, "get_overridable_funct": [1898, 1957], "func_dict": 1898, "nn_func": 1898, "labori": 1898, "_get_testing_overrid": 1898, "get_testing_overrid": [1898, 1957], "override_dict": 1898, "dummy_add": 1898, "get_ignored_funct": [1898, 1957], "__torch_dispatch__": [1898, 1927, 1945], "2020": 1898, "outdat": 1898, "redispatch": [1898, 1945], "dispatchkei": 1898, "zerotensor": 1898, "compositeimplicitautograd": 1898, "func_nam": [1898, 1923], "exot": 1898, "zoo": 1898, "subclass_zoo": [1898, 1945], "intro": 1898, "custom_vjp": 1899, "custom_jvp": 1899, "to_numpi": 1899, "numpysort": 1899, "ind_inv": 1899, "_1": [1899, 1915], "numpytak": 1899, "numpy_sort": 1899, "saniti": 1899, "ggx": 1899, "vmappabl": 1899, "x_bdim": 1899, "ind_bdim": 1899, "ind_inv_bdim": 1899, "expanded_x": 1899, "expanded_ind": 1899, "expanded_ind_inv": 1899, "new_dim": 1899, "logical_dim": 1899, "maybe_expand_bdim_at_front": 1899, "pseudocod": 1899, "rapidli": [1900, 1906], "fortun": [1900, 1956], "abridg": 1900, "total_loss": 1900, "extrud": 1900, "phenomenon": 1900, "plenti": 1900, "bptt": 1900, "repackag": 1900, "nm": 1900, "blow": 1900, "rememb": [1900, 1906, 1949], "elf": 1900, "grep": [1900, 1940], "run_model": 1900, "recoveri": 1900, "data_parallel": 1900, "pad_packed_sequ": 1900, "padded_input": 1900, "packed_input": 1900, "packed_output": 1900, "my_lstm": 1900, "dp_m": 1900, "padding_input": 1900, "ur": 1901, "ui": [1901, 1932, 1950, 1953], "rewritten": 1901, "j_f": 1901, "calculu": 1901, "cw": 1901, "bigger": 1901, "articl": 1901, "58eb23378f2a376565a66ac32c93a316c45b6131": 1901, "l99": 1901, "l105": 1901, "ds_dx": 1901, "compute_gradi": 1901, "ds_dy": 1901, "conj_w_d": 1901, "w_d": 1901, "d_idx": 1901, "albeit": 1901, "wonder": 1901, "amd": [1902, 1938], "dialect": 1902, "portabl": 1902, "rocmdoc": 1902, "programming_guid": 1902, "hip_api_guid": 1902, "cuda_vers": 1902, "cudaruntimegetvers": 1902, "cudadrivergetvers": 1902, "hip_vers": 1902, "hipruntimegetvers": 1902, "hipdrivergetvers": 1902, "11000": 1902, "use_rocm": 1902, "rocm_vers": 1902, "40300": 1902, "cmake": [1902, 1910], "drocm_force_enable_gpu_assert": 1902, "addglobalcallback": 1903, "recordfunct": 1903, "ivalu": 1903, "threadlocaldebuginfo": 1903, "debuginfoguard": 1903, "recordfunctioncallback": 1903, "onfunctionent": 1903, "onfunctionexit": 1903, "needsinput": 1903, "samplingprob": 1903, "enablerecordfunct": 1903, "cerr": 1903, "broader": [1903, 1935], "inject": 1903, "setapiusagehandl": 1903, "setapiusagelogg": 1903, "event_nam": 1903, "c10_log_api_usage_onc": 1903, "my_api": 1903, "_log_api_usage_onc": 1903, "archiv": 1903, "bundl": 1903, "akin": 1903, "jpeg": 1903, "camera": [1903, 1932], "setexportmoduleextrafileshook": 1903, "extrafilesmap": 1903, "producer_info": 1903, "getenv": 1903, "getsourc": 1903, "precompil": 1903, "pyc": 1903, "loos": 1903, "elabor": 1904, "tpu": 1904, "mylinear": 1904, "sample_input": 1904, "0413": 1904, "2057": 1904, "0597": 1904, "8247": 1904, "1045": 1904, "4299": 1904, "5457": 1904, "4793": 1904, "3634": 1904, "8525": 1904, "6749": 1904, "l0": [1904, 1909], "deeper": [1904, 1915, 1949], "bignet": 1904, "big_net": 1904, "dynamicnet": 1904, "dynamic_net": 1904, "2051": 1904, "7601": 1904, "1963": 1904, "4354": 1904, "6598": 1904, "4446": 1904, "4628": 1904, "8774": 1904, "6848": 1904, "5458": 1904, "4647": 1904, "5310": 1904, "0609": 1904, "0940": 1904, "1266": 1904, "0623": 1904, "3508": 1904, "0550": 1904, "5317": 1904, "5562": 1904, "4028": 1904, "6942": 1904, "0140": 1904, "0329": 1904, "1160": 1904, "0434": 1904, "3889": 1904, "1613": 1904, "6340": 1904, "3887": 1904, "9979": 1904, "0767": 1904, "3526": 1904, "8756": 1904, "5847": 1904, "6016": 1904, "1608": 1904, "0829": 1904, "6338": 1904, "9239": 1904, "6943": 1904, "5034": 1904, "0268": 1904, "4489": 1904, "9403": 1904, "2509": 1904, "5052": 1904, "3088": 1904, "4951": 1904, "3381": 1904, "5166": 1904, "boilerpl": [1904, 1915], "beginn": 1904, "examples_nn": 1904, "polynomial_modul": 1904, "teach": 1904, "0013": [1904, 1928], "0030": 1904, "0008": 1904, "modalmodul": 1904, "6614": 1904, "2669": 1904, "0617": 1904, "4519": 1904, "two_layer_net_optim": 1904, "blitz": 1904, "neural_networks_tutori": 1904, "autograd_tutori": 1904, "new_net": 1904, "runningmean": 1904, "1041": 1904, "0647": 1904, "1515": 1904, "m_load": 1904, "unserialized_th": 1904, "statefulmodul": 1904, "param3": 1904, "param_list": 1904, "parameterlist": 1904, "param_dict": 1904, "parameterdict": 1904, "buffer1": 1904, "buffer2": 1904, "buffer3": 1904, "0322": 1904, "9066": 1904, "1409": 1904, "4852": 1904, "6949": 1904, "2911": 1904, "1044": 1904, "4202": 1904, "1953": 1904, "5299": 1904, "8747": 1904, "6289": 1904, "4898": 1904, "6434": 1904, "5187": 1904, "0346": 1904, "4077": 1904, "4324": 1904, "7022": 1904, "3915": 1904, "6176": 1904, "6062": 1904, "5992": 1904, "4452": 1904, "2843": 1904, "3710": 1904, "3947": 1904, "saving_loading_model": 1904, "what_is_state_dict": 1904, "skip_init": 1904, "skip_param_init": 1904, "forward_hook": [1904, 1952], "backward_hook": [1904, 1952], "new_grad_input": 1904, "5059": 1904, "8158": 1904, "2390": 1904, "0043": 1904, "addmmbackward": 1904, "forward_pre_hook_handl": 1904, "5752": 1904, "7421": 1904, "forward_hook_handl": 1904, "0980": 1904, "4666": 1904, "0256": 1904, "4497": 1904, "5046": 1904, "combat": 1904, "mps_devic": 1905, "yourfavoritenet": 1905, "a3c": 1906, "set_start_method": 1906, "simplequeu": 1906, "cope": 1906, "eleg": 1906, "num_process": 1906, "inappropri": 1906, "vcpu": 1906, "htop": 1906, "exceed": 1906, "competit": 1906, "oversubscrib": 1906, "fairli": [1906, 1916, 1944, 1948], "mnist_hogwild": 1906, "dataloader_kwarg": 1906, "train_epoch": 1906, "30x": 1906, "boost": [1906, 1940], "754": 1907, "1e20": 1907, "4142e": 1907, "struggl": 1907, "benign": 1907, "v_dot2": 1907, "mfma": 1907, "fp64": 1907, "rocbla": 1907, "miopen": 1907, "rocblas_internal_fp16_alt_impl": 1907, "miopen_debug_convolution_attrib_fp16_alt_impl": 1907, "_convbackend": 1907, "slownd": 1907, "slownd_transpos": 1907, "slownd_dil": 1907, "slownd_dilated_transpos": 1907, "convbackend": 1907, "miopendepthwis": 1907, "miopentranspos": 1907, "svd_lowrank": [1908, 1927], "22modul": 1908, "20determin": 1908, "index_add_cuda_": 1908, "1509": 1908, "8027": 1908, "0333": 1908, "1444": 1908, "rese": 1908, "seed_work": 1908, "worker_se": 1908, "train_dataset": 1908, "tensor_dict": 1909, "loaded_numb": 1909, "loaded_even": 1909, "scene": [1909, 1932, 1943], "loaded_smal": 1909, "num_batches_track": 1909, "bn_state_dict": 1909, "new_bn": 1909, "out0_relu": 1909, "1400": 1909, "4563": 1909, "0271": 1909, "4406": 1909, "2827": 1909, "4588": 1909, "2031": 1909, "1316": 1909, "6533": 1909, "3413": 1909, "1112": 1909, "m_state_dict": 1909, "new_m": 1909, "original_nam": 1909, "controlflowmodul": 1909, "controlflowmodule_trac": 1909, "3793": 1909, "controlflowmodule_script": 1909, "tagger": 1909, "ipu_tag": 1909, "ipu_deseri": 1909, "startswith": [1909, 1913], "get_default_load_endian": 1909, "byteord": 1909, "loadendian": 1909, "default_load_endian": 1909, "set_default_load_endian": 1909, "endian": 1909, "rem": 1910, "7z": 1910, "curl": 1910, "ossci": 1910, "mkl_2020": 1910, "aoa": 1910, "omkl": 1910, "cuda_prefix": 1910, "cuda102": 1910, "magma_2": 1910, "4_": 1910, "omagma": 1910, "cmake_include_path": 1910, "cd": [1910, 1915, 1917, 1956], "magma_hom": 1910, "studio": 1910, "pip": [1910, 1911, 1932], "cmake_gener": 1910, "ffi": 1910, "create_extens": 1910, "_ext": 1910, "define_macro": 1910, "relative_to": 1910, "c99": 1910, "x86_x64": 1910, "packagesnotfounderror": 1910, "anaconda": 1910, "noarch": 1910, "continuum": 1910, "pkg": 1910, "pro": [1910, 1932], "msys2": 1910, "importerror": [1910, 1915], "dll": 1910, "vc2017": 1910, "redistribut": 1910, "vc": 1910, "vs2017_runtim": 1910, "mkl_fft": 1910, "intel_openmp": 1910, "vs2017": 1910, "openbla": 1910, "forg": 1910, "emerg": [1910, 1944], "bootstrap": 1910, "forgotten": 1910, "idiom": 1910, "freeze_support": 1910, "forkingpickl": 1910, "brokenpipeerror": 1910, "errno": 1910, "couldn": [1910, 1911], "torch_14808_1591070686": 1910, "thalloc": 1910, "tdr": 1910, "thcudacheck": 1910, "csrc": [1910, 1944], "storageshar": 1910, "dummy_input": 1911, "input_nam": 1911, "actual_input_1": 1911, "learned_": 1911, "output_nam": 1911, "learned_0": 1911, "learned_1": 1911, "learned_2": 1911, "learned_3": 1911, "learned_14": 1911, "learned_15": 1911, "kernel_shap": 1911, "9216": 1911, "transb": 1911, "check_model": 1911, "printable_graph": 1911, "onnxruntim": 1911, "ort": 1911, "ort_sess": 1911, "inferencesess": 1911, "astyp": 1911, "seq_length": 1911, "real_seq_length": 1911, "experienc": 1911, "new_data": 1911, "hope": [1911, 1950], "symbolic_opset": 1911, "symbolic_opset9": 1911, "_variablefunct": 1911, "pyi": 1911, "checkout": 1911, "___torch_mangle_0": 1911, "alpha_f": 1911, "myrelu": 1911, "value_t": 1911, "pythonop": [1911, 1913], "mylogexp": 1911, "operator_export_typ": 1911, "onnx_fallthrough": 1911, "onnx_aten_fallback": 1911, "onnx_opset": 1911, "opset15": 1911, "custom_opset": 1911, "67326": 1911, "alphax": 1911, "castlik": 1911, "gammax": 1911, "settyp": 1911, "custom_selu": 1911, "jit_util": 1911, "graphcontext": 1911, "onnxscript_op": 1911, "register_custom_op_symbol": 1911, "symbolic_nam": 1911, "symbolic_fn": 1911, "Be": [1911, 1953], "symbolic_help": 1911, "symbolic_foo_forward": 1911, "custom_domain": 1911, "attr1_f": 1911, "attr2_i": 1911, "custom_op": [1911, 1945], "foo_forward": 1911, "foomodel": 1911, "example_input1": 1911, "caffe2": [1911, 1932], "torch_script_graph": 1911, "unconvertible_op": 1911, "dynamic_ax": 1911, "export_param": 1911, "trainingmod": 1911, "operatorexporttyp": 1911, "do_constant_fold": 1911, "keep_initializers_as_input": 1911, "export_modules_as_funct": 1911, "autograd_inlin": 1911, "OF": 1911, "WITH": 1911, "input_i": 1911, "input_z": 1911, "fileno": 1911, "untrain": 1911, "doc_str": 1911, "onnx_aten": 1911, "build_caffe2": 1911, "summodul": 1911, "dim_valu": 1911, "my_custom_axis_nam": 1911, "dim_param": 1911, "sum_dynamic_axes_1": 1911, "deduplicate_initi": 1911, "predefin": 1911, "74765": 1911, "checkererror": 1911, "unsupportedoperatorerror": 1911, "export_to_pretty_str": 1911, "export_typ": 1911, "google_print": 1911, "add_node_nam": 1911, "nodeproto": 1911, "debugstr": 1911, "contrib": 1911, "test_aten_embedding_2": 1911, "test_oper": 1911, "unregister_custom_op_symbol": 1911, "select_model_mode_for_export": 1911, "is_in_onnx_export": 1911, "middl": 1911, "enable_log": 1911, "disable_log": 1911, "graphinfo": 1911, "incorrect_relu_symbolic_funct": 1911, "2328854203224182": 1911, "699536174352349": 1911, "rapid": 1911, "exportopt": 1911, "my_nn_modul": 1911, "my_nn_module_attribut": 1911, "faketensormod": [1911, 1944, 1945], "faketensor": [1911, 1945], "_subclass": [1911, 1944, 1945], "fake_tensor": [1911, 1944, 1945], "l870": 1911, "my_model_without_initi": 1911, "my_model_with_initi": 1911, "is_onnxrt_backend_support": 1911, "onnxrt": [1911, 1938], "underdevelop": 1912, "parsabl": 1912, "fxe0007": 1912, "fxe0011": 1912, "fxe0012": 1912, "fxe0013": 1912, "fxe0014": 1912, "fxe0015": 1912, "fxe0016": 1912, "constantchunk": 1913, "__and_": 1913, "__contains_": 1913, "__derive_index": 1913, "__getitem_": 1913, "__interpol": 1913, "__is_": 1913, "__isnot_": 1913, "__lshift_": 1913, "__not_": 1913, "__or_": 1913, "__range_length": 1913, "__rshift_": 1913, "__xor_": 1913, "_cast_byt": 1913, "_cast_char": 1913, "_cast_doubl": 1913, "_cast_float": 1913, "_cast_half": 1913, "_cast_int": 1913, "_cast_long": 1913, "_cast_short": 1913, "_conj": 1913, "_convolution_mod": 1913, "_dim_arang": 1913, "_log_softmax": [1913, 1951], "_pack_padded_sequ": 1913, "_pad_packed_sequ": 1913, "_reshape_from_tensor": 1913, "_sample_dirichlet": 1913, "_set_item": 1913, "_shape_as_tensor": 1913, "_standard_gamma": 1913, "_uniqu": 1913, "_unique2": 1913, "_weight_norm": 1913, "conv1d_relu": 1913, "conv2d_relu": 1913, "conv3d_relu": 1913, "embedding_renorm": 1913, "floordiv": [1913, 1920], "nonzero_numpi": 1913, "numpy_t": 1913, "unchecked_cast": 1913, "unique_dim": 1913, "_quantiz": 1913, "conv2d_prepack": 1913, "conv3d_prepack": 1913, "conv_transpose1d_prepack": 1913, "conv_transpose2d_prepack": 1913, "conv_transpose3d_prepack": 1913, "linear_dynam": 1913, "linear_prepack": 1913, "linear_prepack_fp16": 1913, "linear_prepack_fp16_legaci": 1913, "linear_prepack_legaci": 1913, "_test": 1913, "get_first": 1913, "compleximplicit": 1913, "floatimplicit": 1913, "intimplicit": 1913, "__iand_": 1913, "__ilshift_": 1913, "__ior_": 1913, "__irshift_": 1913, "__ixor_": 1913, "__round_to_zero_floordiv": 1913, "__upsampl": 1913, "__upsample_bilinear": 1913, "__upsample_nearest": 1913, "_adaptive_avg_pool2d": [1913, 1951], "_adaptive_avg_pool3d": [1913, 1951], "_add_batch_dim": 1913, "_add_relu": 1913, "_addmm_activ": 1913, "_aminmax": 1913, "_amp_foreach_non_finite_check_and_unscal": 1913, "_amp_update_scal": 1913, "_assert_tensor_metadata": 1913, "_autocast_to_full_precis": 1913, "_autocast_to_reduced_precis": 1913, "_batch_norm_impl_index": 1913, "_cdist_forward": [1913, 1951], "_cholesky_solve_help": 1913, "_choose_qparams_per_tensor": 1913, "_coalesc": 1913, "_compute_linear_combin": 1913, "_conj_copi": 1913, "_conj_phys": 1913, "_conv_depthwise2d": 1913, "_convert_indices_from_coo_to_csr": 1913, "_convert_indices_from_csr_to_coo": 1913, "_copy_from": 1913, "_copy_from_and_res": 1913, "_cslt_compress": 1913, "_cslt_sparse_mm": 1913, "_ctc_loss": 1913, "_cudnn_ctc_loss": 1913, "_cudnn_init_dropout_st": 1913, "_cudnn_rnn": 1913, "_cudnn_rnn_flatten_weight": 1913, "_cufft_clear_plan_cach": 1913, "_cufft_get_plan_cache_max_s": 1913, "_cufft_get_plan_cache_s": 1913, "_cufft_set_plan_cache_max_s": 1913, "_cummax_help": 1913, "_cummin_help": 1913, "_debug_has_internal_overlap": 1913, "_dimi": 1913, "_dimv": 1913, "_dirichlet_grad": 1913, "_efficient_attention_forward": 1913, "_efficientzerotensor": 1913, "_embedding_bag": [1913, 1951], "_embedding_bag_forward_onli": 1913, "_empty_affine_quant": 1913, "_empty_per_channel_affine_quant": 1913, "_euclidean_dist": 1913, "_fake_quantize_learnable_per_channel_affin": 1913, "_fake_quantize_learnable_per_tensor_affin": 1913, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1913, "_fft_c2c": 1913, "_fft_c2r": 1913, "_fft_r2c": 1913, "_fill_mem_eff_dropout_mask": 1913, "_flash_attention_forward": 1913, "_foobar": [1913, 1956], "_foreach_ab": 1913, "_foreach_aco": 1913, "_foreach_add": 1913, "_foreach_addcdiv": 1913, "_foreach_addcmul": 1913, "_foreach_asin": 1913, "_foreach_atan": 1913, "_foreach_ceil": 1913, "_foreach_clamp_max": 1913, "_foreach_clamp_min": 1913, "_foreach_copi": 1913, "_foreach_co": 1913, "_foreach_cosh": 1913, "_foreach_div": 1913, "_foreach_erf": 1913, "_foreach_erfc": 1913, "_foreach_exp": 1913, "_foreach_expm1": 1913, "_foreach_floor": 1913, "_foreach_frac": 1913, "_foreach_lerp": 1913, "_foreach_lgamma": 1913, "_foreach_log": 1913, "_foreach_log10": 1913, "_foreach_log1p": 1913, "_foreach_log2": 1913, "_foreach_maximum": 1913, "_foreach_minimum": 1913, "_foreach_mul": 1913, "_foreach_neg": 1913, "_foreach_norm": 1913, "_foreach_pow": 1913, "_foreach_reciproc": 1913, "_foreach_round": 1913, "_foreach_sigmoid": 1913, "_foreach_sign": 1913, "_foreach_sin": 1913, "_foreach_sinh": 1913, "_foreach_sqrt": 1913, "_foreach_sub": 1913, "_foreach_tan": 1913, "_foreach_tanh": 1913, "_foreach_trunc": 1913, "_foreach_zero": 1913, "_functional_assert_async": 1913, "_functional_sym_constrain_rang": 1913, "_functional_sym_constrain_range_for_s": 1913, "_fused_adam": 1913, "_fused_adamw": 1913, "_fused_dropout": 1913, "_fused_moving_avg_obs_fq_help": 1913, "_fused_moving_avg_obs_fq_helper_funct": 1913, "_fused_sdp_choic": 1913, "_fw_primal": 1913, "_fw_primal_copi": 1913, "_get_cpu_cap": 1913, "_get_tracing_st": 1913, "_grad_sum_to_s": 1913, "_has_compatible_shallow_copy_typ": 1913, "_has_same_storage_numel": 1913, "_histogramdd_bin_edg": 1913, "_histogramdd_from_bin_ct": 1913, "_histogramdd_from_bin_tensor": 1913, "_index_put_impl": 1913, "_indices_copi": 1913, "_infer_s": 1913, "_int_mm": 1913, "_is_all_tru": 1913, "_is_any_tru": 1913, "_is_zerotensor": 1913, "_linalg_check_error": 1913, "_linalg_det": 1913, "_linalg_eigh": 1913, "_linalg_slogdet": 1913, "_linalg_solve_ex": 1913, "_linalg_svd": 1913, "_list_to_tensor": 1913, "_logcumsumexp": 1913, "_lstm_mp": 1913, "_make_dep_token": 1913, "_make_du": 1913, "_make_dual_copi": 1913, "_make_per_channel_quantized_tensor": 1913, "_make_per_tensor_quantized_tensor": 1913, "_masked_scal": 1913, "_masked_softmax": 1913, "_mkldnn_reshap": 1913, "_mkldnn_transpos": 1913, "_mps_convolut": 1913, "_mps_convolution_transpos": 1913, "_native_batch_norm_legit": [1913, 1951], "_native_batch_norm_legit_funct": 1913, "_native_batch_norm_legit_no_train": [1913, 1951], "_native_multi_head_attent": 1913, "_ncf_unsqueez": 1913, "_ncf_view": 1913, "_neg_view": 1913, "_neg_view_copi": 1913, "_nested_from_pad": 1913, "_nested_from_padded_and_nested_exampl": 1913, "_nested_tensor_from_mask": 1913, "_nested_tensor_from_mask_left_align": 1913, "_nested_tensor_from_tensor_list": 1913, "_nested_tensor_s": 1913, "_nested_tensor_softmax_with_shap": 1913, "_nested_tensor_storage_offset": 1913, "_nested_tensor_strid": 1913, "_nested_view_from_buff": 1913, "_nested_view_from_buffer_copi": 1913, "_new_zeros_with_same_feature_meta": 1913, "_nnpack_avail": 1913, "_nnpack_spatial_convolut": 1913, "_no_grad_embedding_renorm": 1913, "_no_grad_fil": 1913, "_no_grad_norm": 1913, "_no_grad_uniform": 1913, "_no_grad_zero": 1913, "_pack_sequ": 1913, "_pad_circular": 1913, "_pad_enum": 1913, "_pdist_forward": [1913, 1951], "_pin_memori": 1913, "_prelu_kernel": 1913, "_propagate_xla_data": 1913, "_remove_batch_dim": 1913, "_reshape_alia": 1913, "_reshape_alias_copi": 1913, "_reshape_copi": 1913, "_resize_output": 1913, "_rowwise_prun": 1913, "_saturate_weight_to_fp16": 1913, "_scaled_dot_product_attention_math": 1913, "_scaled_dot_product_efficient_attent": 1913, "_scaled_dot_product_flash_attent": 1913, "_scaled_mm": 1913, "_size_if_not_equ": 1913, "_slow_conv2d_forward": 1913, "_sobol_engine_draw": 1913, "_sobol_engine_ff": 1913, "_sobol_engine_initialize_st": 1913, "_sobol_engine_scrambl": 1913, "_softmax": [1913, 1928, 1951], "_sparse_addmm": 1913, "_sparse_broadcast_to": 1913, "_sparse_broadcast_to_copi": 1913, "_sparse_bsc_tensor_unsaf": 1913, "_sparse_bsr_tensor_unsaf": 1913, "_sparse_compressed_tensor_unsaf": 1913, "_sparse_coo_tensor_unsaf": 1913, "_sparse_coo_tensor_with_dim": 1913, "_sparse_coo_tensor_with_dims_and_tensor": 1913, "_sparse_csc_tensor_unsaf": 1913, "_sparse_csr_prod": 1913, "_sparse_csr_sum": 1913, "_sparse_csr_tensor_unsaf": 1913, "_sparse_log_softmax": 1913, "_sparse_mask_project": 1913, "_sparse_mm": 1913, "_sparse_mm_reduce_impl": 1913, "_sparse_semi_structured_linear": 1913, "_sparse_softmax": 1913, "_sparse_sparse_matmul": 1913, "_sparse_sum": 1913, "_spdiag": 1913, "_standard_gamma_grad": 1913, "_tensor_to_list": 1913, "_test_ambiguous_default": 1913, "_test_autograd_multiple_dispatch": 1913, "_test_autograd_multiple_dispatch_view": 1913, "_test_autograd_multiple_dispatch_view_copi": 1913, "_test_check_tensor": 1913, "_test_functorch_fallback": 1913, "_test_optional_filled_intlist": 1913, "_test_optional_floatlist": 1913, "_test_optional_intlist": 1913, "_test_serialization_subcmul": 1913, "_test_string_default": 1913, "_test_warn_in_autograd": 1913, "_thnn_fused_gru_cel": 1913, "_thnn_fused_lstm_cel": 1913, "_to_copi": [1913, 1951], "_to_cpu": 1913, "_to_dens": 1913, "_to_spars": 1913, "_to_sparse_bsc": 1913, "_to_sparse_bsr": 1913, "_to_sparse_csc": 1913, "_to_sparse_csr": 1913, "_to_sparse_semi_structur": 1913, "_transform_bias_rescale_qkv": 1913, "_transformer_encoder_layer_fwd": 1913, "_trilinear": 1913, "_triton_multi_head_attent": 1913, "_triton_scaled_dot_attent": 1913, "_unpack_du": 1913, "_unsafe_index": 1913, "_unsafe_index_put": 1913, "_unsafe_view": 1913, "_unwrap_opt": 1913, "_upsample_bicubic2d_aa": 1913, "_upsample_bilinear2d_aa": 1913, "_upsample_nearest_exact1d": 1913, "_upsample_nearest_exact2d": 1913, "_upsample_nearest_exact3d": 1913, "_use_cudnn_ctc_loss": 1913, "_use_cudnn_rnn_flatten_weight": 1913, "_validate_compressed_sparse_indic": 1913, "_validate_sparse_bsc_tensor_arg": 1913, "_validate_sparse_bsr_tensor_arg": 1913, "_validate_sparse_compressed_tensor_arg": 1913, "_validate_sparse_coo_tensor_arg": 1913, "_validate_sparse_csc_tensor_arg": 1913, "_validate_sparse_csr_tensor_arg": 1913, "_values_copi": 1913, "_weight_norm_interfac": 1913, "capit": 1913, "confirmed_by_own": [1913, 1923], "convolution_overrid": 1913, "copy_sparse_to_spars": 1913, "endswith": 1913, "expandtab": 1913, "fake_quantize_per_channel_affine_cachemask": 1913, "fake_quantize_per_tensor_affine_cachemask": 1913, "fill_diagon": 1913, "glu_jvp": 1913, "has_torch_funct": [1913, 1957], "is_non_overlapping_and_dens": 1913, "is_own": [1913, 1923], "is_strides_like_format": 1913, "isalnum": 1913, "isalpha": 1913, "isdecim": 1913, "isdigit": 1913, "isidentifi": 1913, "islow": 1913, "isnumer": 1913, "isprint": 1913, "isspac": 1913, "istitl": 1913, "isupp": 1913, "lift_fresh": 1913, "ljust": 1913, "local_valu": [1913, 1916, 1923], "log_sigmoid_forward": 1913, "lstrip": 1913, "matrix_h": 1913, "nll_loss2d_forward": 1913, "nll_loss_forward": 1913, "normal_funct": 1913, "owner_nam": [1913, 1923], "percentformat": 1913, "quantized_gru": 1913, "quantized_lstm": 1913, "resize_as_spars": 1913, "rfind": 1913, "rindex": 1913, "rjust": 1913, "rpartit": 1913, "rsplit": 1913, "rstrip": 1913, "set_data": 1913, "slow_conv3d_forward": 1913, "sparse_res": 1913, "sparse_resize_and_clear": 1913, "splitlin": 1913, "swapcas": 1913, "sym_numel": [1913, 1951], "sym_storage_offset": [1913, 1951], "sym_strid": [1913, 1951], "unique_dim_consecut": 1913, "zfill": 1913, "_allgather_bas": 1913, "_reduce_scatter_bas": 1913, "allgath": 1913, "allgather_coalesc": 1913, "allgather_into_tensor_coalesc": 1913, "allreduce_coalesc": 1913, "alltoal": 1913, "alltoall_bas": 1913, "recv_any_sourc": 1913, "reduce_scatter_tensor_coalesc": 1913, "debugprim": 1913, "load_tensor": 1913, "_mm_plus_mm": 1913, "_reinterpret_tensor": 1913, "_mkl_linear": 1913, "_mkl_reorder_linear_weight": 1913, "_convolution_pointwis": 1913, "_convolution_transpose_pointwis": 1913, "_is_mkldnn_bf16_support": 1913, "_linear_pointwis": 1913, "_reorder_convolution_transpose_weight": 1913, "_reorder_convolution_weight": 1913, "_reorder_linear_weight": 1913, "_reorder_mkldnn_rnn_layer_weight": 1913, "mkldnn_prepack": 1913, "conv2d_run": 1913, "qconv1d_pointwis": 1913, "qconv2d_pointwis": 1913, "qconv3d_pointwis": 1913, "qconv_prepack": 1913, "qlinear_pointwis": 1913, "qlinear_prepack": 1913, "conv2d_clamp_prepack": 1913, "conv2d_clamp_run": 1913, "conv2d_transpose_clamp_prepack": 1913, "conv2d_transpose_clamp_run": 1913, "linear_clamp_prepack": 1913, "linear_clamp_run": 1913, "unpack_prepacked_sizes_conv2d": 1913, "unpack_prepacked_sizes_linear": 1913, "addstatvalu": 1913, "autogradadd": 1913, "autogradallnonzero": 1913, "autogradallzero": 1913, "autogradanynonzero": 1913, "autogradzero": 1913, "bailout": [1913, 1944], "bailouttempl": 1913, "broadcastmkldnntensor": 1913, "broadcasts": 1913, "chunksiz": 1913, "constantmkldnntensor": 1913, "differentiablegraph": 1913, "enumnam": 1913, "enumvalu": 1913, "fallbackgraph": 1913, "fusedconcat": 1913, "fusiongroup": 1913, "ifthenels": 1913, "ignoredpythonop": 1913, "mkldnnclamp": 1913, "mkldnnhardsigmoid": 1913, "mkldnnhardswish": 1913, "mkldnnhardtanh": 1913, "mkldnnlayernorm": 1913, "mkldnnscalarmul": 1913, "mmbatchsid": 1913, "mmtreereduc": 1913, "modulecontainerindex": 1913, "numtotensor": 1913, "raiseexcept": 1913, "reductions": 1913, "requiresgradcheck": 1913, "staticruntimecopyout": 1913, "staticsubgraph": 1913, "stringindex": 1913, "tensorexprdynamicgroup": 1913, "tensorexprdynamicguard": 1913, "tensorexprgroup": 1913, "timepoint": 1913, "tupleindex": 1913, "tupleunpack": 1913, "varconcat": 1913, "varstack": 1913, "awaitable_nowait": 1913, "awaitable_wait": 1913, "is_cpu": 1913, "is_ipu": 1913, "is_mkldnn": 1913, "is_mp": 1913, "is_nest": 1913, "is_ort": 1913, "is_quant": 1913, "is_vulkan": 1913, "is_xla": 1913, "is_xpu": 1913, "onednnfusiongroup": 1913, "onednnfusionguard": 1913, "profile_ivalu": 1913, "rangelist": 1913, "rpc_remot": 1913, "unchecked_unwrap_opt": 1913, "bessel_i0": [1913, 1951], "bessel_i1": [1913, 1951], "bessel_j0": [1913, 1928, 1951], "bessel_j1": [1913, 1928, 1951], "broadcast_in_dim": [1913, 1951], "cbrt": [1913, 1951], "collapse_view": [1913, 1951], "convert_element_typ": [1913, 1951], "copy_strid": [1913, 1951], "copy_to": [1913, 1951], "device_put": [1913, 1951], "erf_inv": [1913, 1951], "erfcx": [1913, 1928, 1951], "fft_c2c": [1913, 1951], "fft_c2r": [1913, 1951], "fft_r2c": [1913, 1951], "iota": [1913, 1951], "maximum_valu": [1913, 1951], "minimum_valu": [1913, 1951], "ndtri": [1913, 1928, 1951], "rev": [1913, 1951], "shift_left": [1913, 1951], "shift_right_arithmet": [1913, 1951], "slice_in_dim": [1913, 1951], "spherical_bessel_j0": [1913, 1928, 1951], "split_dim": [1913, 1951], "view_of": [1913, 1951], "xor_sum": [1913, 1951], "_call_end_callbacks_on_jit_fut": 1913, "_record_function_ent": 1913, "_record_function_enter_new": 1913, "_record_function_exit": 1913, "_bfloat16quantizedtofloat": 1913, "_floattobfloat16quant": 1913, "add_out": 1913, "add_relu_out": 1913, "add_scalar_out": 1913, "add_scalar_relu": 1913, "add_scalar_relu_out": 1913, "batch_norm1d": 1913, "batch_norm1d_relu": 1913, "batch_norm2d": 1913, "batch_norm2d_relu": 1913, "batch_norm3d": 1913, "batch_norm3d_relu": 1913, "batch_norm_relu": 1913, "cat_out": 1913, "cat_relu": 1913, "cat_relu_out": 1913, "conv1d_dynam": 1913, "conv1d_prepack": 1913, "conv1d_unpack": 1913, "conv2d_add": 1913, "conv2d_add_relu": 1913, "conv2d_dil": 1913, "conv2d_dynam": 1913, "conv2d_group": 1913, "conv2d_output_pad": 1913, "conv2d_pad": 1913, "conv2d_strid": 1913, "conv2d_transpos": 1913, "conv2d_unpack": 1913, "conv2d_unpack_s": 1913, "conv3d_dil": 1913, "conv3d_dynam": 1913, "conv3d_group": 1913, "conv3d_output_pad": 1913, "conv3d_pad": 1913, "conv3d_strid": 1913, "conv3d_transpos": 1913, "conv3d_unpack": 1913, "conv_prepack": 1913, "conv_transpose1d_dynam": 1913, "conv_transpose1d_unpack": 1913, "conv_transpose2d_dil": 1913, "conv_transpose2d_dynam": 1913, "conv_transpose2d_group": 1913, "conv_transpose2d_output_pad": 1913, "conv_transpose2d_pad": 1913, "conv_transpose2d_strid": 1913, "conv_transpose2d_transpos": 1913, "conv_transpose2d_unpack": 1913, "conv_transpose3d_dil": 1913, "conv_transpose3d_dynam": 1913, "conv_transpose3d_group": 1913, "conv_transpose3d_output_pad": 1913, "conv_transpose3d_pad": 1913, "conv_transpose3d_strid": 1913, "conv_transpose3d_transpos": 1913, "conv_transpose3d_unpack": 1913, "conv_unpack": 1913, "embedding_4bit": 1913, "embedding_bag_2bit_prepack": 1913, "embedding_bag_2bit_rowwise_offset": 1913, "embedding_bag_2bit_unpack": 1913, "embedding_bag_4bit": 1913, "embedding_bag_4bit_prepack": 1913, "embedding_bag_4bit_rowwise_offset": 1913, "embedding_bag_4bit_unpack": 1913, "embedding_bag_byt": 1913, "embedding_bag_byte_prepack": 1913, "embedding_bag_byte_rowwise_offset": 1913, "embedding_bag_byte_unpack": 1913, "embedding_bag_prepack": 1913, "embedding_bag_unpack": 1913, "embedding_byt": 1913, "linear_dynamic_fp16": 1913, "linear_leaky_relu": 1913, "linear_relu": [1913, 1920], "linear_relu_dynam": 1913, "linear_relu_dynamic_fp16": 1913, "linear_tanh": 1913, "linear_unpack": 1913, "linear_unpack_fp16": 1913, "linear_with_input_q_dq_qweight_dq_output_fp32": 1913, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1913, "make_quantized_cell_param": 1913, "make_quantized_cell_params_dynam": 1913, "make_quantized_cell_params_fp16": 1913, "mul_out": 1913, "mul_relu": 1913, "mul_relu_out": 1913, "mul_scalar_out": 1913, "mul_scalar_relu": 1913, "mul_scalar_relu_out": 1913, "quantized_gru_cell_dynam": 1913, "quantized_lstm_cell_dynam": 1913, "quantized_rnn_relu_cell_dynam": 1913, "quantized_rnn_tanh_cell_dynam": 1913, "rngprim": 1913, "philox_rand": 1913, "qlinear": 1913, "qlinear_dynam": 1913, "qlinear_relu": 1913, "qlinear_relu_dynam": 1913, "qlinear_unpack": 1913, "static_runtim": 1913, "vartupleunpack": 1913, "clamp_nan_to_num": 1913, "create_owned_ref": 1913, "dequantize_copi": 1913, "dict_unpack": 1913, "expand_dims_copi": 1913, "flatten_copi": 1913, "fused_equally_split": 1913, "reshape_copi": 1913, "select_tensor": 1913, "signed_log1p": 1913, "to_copi": 1913, "to_maybe_copy_out": 1913, "var1": 1914, "var2": 1914, "lbfg": 1914, "adadelta": 1914, "adamax": 1914, "asgd": 1914, "nadam": 1914, "radam": 1914, "rmsprop": 1914, "rprop": 1914, "reducelronplateau": 1914, "multisteplr": 1914, "upgrad": [1914, 1934], "swa_util": 1914, "averagedmodel": 1914, "swalr": 1914, "update_bn": 1914, "optima": 1914, "polyak": 1914, "averaged_model": 1914, "multi_avg_fn": 1914, "get_ema_multi_avg_fn": 1914, "textrm": 1914, "update_paramet": 1914, "avg_fn": 1914, "_foreach": 1914, "ema_model": 1914, "ema_avg": 1914, "averaged_model_paramet": 1914, "model_paramet": 1914, "num_averag": 1914, "swa_schedul": 1914, "anneal_epoch": 1914, "swa_lr": 1914, "swa_model": 1914, "cosineannealinglr": 1914, "swa_start": 1914, "test_input": 1914, "secur": 1915, "unpackag": 1915, "exercis": 1915, "unzip": 1915, "my_packag": 1915, "freeli": 1915, "94304870911616": 1915, "94304900784016": 1915, "extern_modul": 1915, "model_1": 1915, "pkl": 1915, "myzip": 1915, "file_byt": 1915, "writestr": 1915, "new_file_byt": 1915, "vim": 1915, "vimrc": 1915, "bufreadcmd": 1915, "brows": 1915, "amatch": 1915, "vi": 1915, "packageimport": 1915, "queryabl": 1915, "glob": 1915, "packageexport": 1915, "pe": 1915, "save_pickl": 1915, "has_fil": 1915, "importer_file_structur": 1915, "package_a": 1915, "get_rdep": 1915, "all_path": 1915, "dependency_graph_str": 1915, "save_text": 1915, "save_binari": 1915, "my_resourc": 1915, "config_stuff": 1915, "raw_data": 1915, "my_byt": 1915, "complementari": [1915, 1928], "load_pickl": 1915, "load_text": 1915, "load_binari": 1915, "my_tensor": 1915, "__reduce_package__": 1915, "my_str": 1915, "time_import": 1915, "time_export": 1915, "pickler": 1915, "persistent_id": 1915, "persistent_load": 1915, "generated_module_nam": 1915, "get_unique_id": 1915, "clock_gettim": 1915, "unpackage_foo": 1915, "depickl": 1915, "foo_1": 1915, "foo_2": 1915, "foo_packag": 1915, "foo_collect": 1915, "foo1": 1915, "foo2": 1915, "imported_foo": 1915, "9857706": 1915, "650140837": 1915, "652698385": 1915, "__torch_package__": 1915, "is_in_packag": 1915, "userexcept": 1915, "unpackageableexcept": 1915, "loaded_modul": 1915, "import_modul": 1915, "save_source_str": 1915, "save_modul": 1915, "textwrap": 1915, "dedent": 1915, "my_funct": 1915, "is_packag": 1915, "importlib": 1915, "my_pickl": 1915, "get_my_resourc": 1915, "read_text": 1915, "torch_package_import": 1915, "get_my_pickl": 1915, "is_from_packag": 1915, "stdlib": 1915, "my_test": 1915, "f2": [1915, 1916], "sys_import": 1915, "script_model": 1915, "mixed_model": 1915, "python_model_with_scripted_submodul": 1915, "loaded_script": 1915, "loaded_mix": 1915, "convention": 1915, "94286146172688": 1915, "94286146172784": 1915, "consult": [1915, 1944], "essai": 1915, "another_packag": 1915, "pickletool": 1915, "ast": 1915, "deni": 1915, "my_export": 1915, "my_interned_modul": 1915, "package_export": 1915, "my_externed_modul": 1915, "my_mocked_modul": 1915, "unwant": [1915, 1932], "hodg": 1915, "podg": 1915, "bazel": 1915, "buck": 1915, "my_class_inst": 1915, "imported_myclass": 1915, "okai": 1915, "torch_package_0": 1915, "handle_me_this_wai": 1915, "inadvert": 1915, "pun": 1915, "packagingerror": 1915, "dependency_graph": 1915, "emptymatcherror": 1915, "allow_empti": 1915, "_sysimport": 1915, "hermet": 1915, "scan": 1915, "orderedimport": 1915, "add_depend": 1915, "graphviz": 1915, "lang": 1915, "denied_modul": 1915, "my_subpackag": 1915, "digraph": 1915, "externed_modul": 1915, "interned_modul": 1915, "mocked_modul": 1915, "register_extern_hook": 1915, "register_intern_hook": 1915, "register_mock_hook": 1915, "myobject": 1915, "save_source_fil": 1915, "file_or_directori": 1915, "my_subsubpackag": 1915, "file_or_buff": 1915, "module_allow": 1915, "pytorchfileread": 1915, "python_vers": 1915, "is_dir": 1915, "gpipe": 1916, "suffer": 1916, "allevi": [1916, 1946], "microbatch": 1916, "bubbl": 1916, "except_last": 1916, "deferred_batch_norm": 1916, "torchgpip": 1916, "withdevic": 1916, "micro": 1916, "fc": [1916, 1918], "init_rpc": [1916, 1923, 1924], "output_rref": 1916, "fed": [1916, 1932], "nochunk": 1916, "resnext": 1916, "till": 1916, "skippabl": 1916, "1to3": 1916, "layer1": 1916, "f1": 1916, "layer2": 1916, "layer3": 1916, "skip_1to3": 1916, "f3": 1916, "alic": 1916, "bob": 1916, "carol": 1916, "stashstashpop": 1916, "f_alic": 1916, "f_bob": 1916, "verify_skipp": 1916, "unmatch": [1916, 1937], "fairscal": 1916, "_kinetoprofil": 1917, "profileract": 1917, "add_metadata": 1917, "add_metadata_json": 1917, "unaggreg": 1917, "export_chrome_trac": [1917, 1954], "export_memory_timelin": 1917, "gzip": 1917, "export_stack": 1917, "self_cuda_time_tot": 1917, "flamegraph": 1917, "brendangregg": 1917, "pl": 1917, "countnam": 1917, "perf_viz": 1917, "svg": 1917, "on_trace_readi": 1917, "record_and_sav": 1917, "tensorboard_trace_handl": 1917, "dir_nam": 1917, "logdir": [1917, 1932], "plugin": [1917, 1932, 1942], "code_to_profil": 1917, "row_limit": 1917, "trace_handl": 1917, "test_trace_": 1917, "step_num": 1917, "code_iteration_to_profil": 1917, "mtia": 1917, "skip_first": 1917, "worker_nam": [1917, 1923], "use_gzip": 1917, "range_push": 1917, "range_pop": 1917, "4x": 1918, "broadli": 1918, "previous_layer_fp32": 1918, "linear_fp32": 1918, "activation_fp32": 1918, "next_layer_fp32": 1918, "linear_weight_fp32": 1918, "linear_int8_w_fp32_inp": 1918, "linear_weight_int8": 1918, "ptdq": 1918, "model_fp32": 1918, "model_int8": 1918, "quantize_dynam": 1918, "input_fp32": 1918, "previous_layer_int8": 1918, "linear_with_activation_int8": 1918, "next_layer_int8": 1918, "ptsq": 1918, "minmax": 1918, "l2norm": 1918, "model_fp32_fus": 1918, "fuse_modul": [1918, 1919], "model_fp32_prepar": 1918, "fq": 1918, "prepare_qat": 1918, "training_loop": 1918, "requant": 1918, "linear1": 1918, "custom_qconfig": 1918, "fxptq": 1918, "model_fp": 1918, "usermodel": 1918, "model_to_quant": 1918, "default_dynamic_qconfig": 1918, "model_prepar": 1918, "model_quant": 1918, "model_fus": 1918, "per_tensor_symmetr": [1918, 1921], "per_channel_symmetr": [1918, 1921], "per_channel_scal": 1918, "per_channel_zero_point": 1918, "quantized_tensor": 1918, "qengin": 1918, "in4": 1918, "tensorrt": [1918, 1938, 1942, 1946], "fx2trt": 1918, "float_modul": [1918, 1936], "staticquantcustommodul": 1918, "observed_modul": 1918, "default_qconfig": [1918, 1937], "vnni": 1918, "test_quantized_op": 1918, "testquantizedop": 1918, "test_custom_module_lstm": 1918, "test_quantize_fx": 1918, "testquantizefx": 1918, "test_static_lstm": 1918, "some_oper": 1918, "e2": 1918, "thnn_conv2d_forward": 1918, "quantizedcpu": 1918, "some_qconfig": 1918, "linearpackedparam": 1918, "_modul": 1918, "prepare_orig": 1918, "quantized_orig": 1918, "scripted_quant": 1918, "fp32_op": 1919, "int8_op": 1919, "cooperlak": 1919, "audit": 1919, "op_fp32": 1919, "op_int8": 1919, "_numeric_suit": 1919, "_numeric_suite_fx": 1919, "0x7f6ef0459620": 1920, "0x7f6edb2973a0": 1920, "0x7f6edb297430": 1920, "num_tensor_args_to_observation_typ": 1920, "convbn1d": 1920, "0x7f6eda5d3280": 1920, "reference_quantized_module_for_root": 1920, "fuse_convtranspose_bn": 1920, "0x7f6eda5d3430": 1920, "linearbn1d": 1920, "fuse_linear_bn": 1920, "0x7f6eda5d33a0": 1920, "convbn2d": 1920, "convbn3d": 1920, "bnrelu2d": 1920, "bnrelu3d": 1920, "input_type_to_index": 1920, "conv_fus": 1920, "convbnrelu1d": 1920, "convbnrelu2d": 1920, "convbnrelu3d": 1920, "convrelu1d": 1920, "convrelu3d": 1920, "0x7f6edb2974c0": 1920, "0x7f6edb297af0": 1920, "quint4x2": [1920, 1929, 1933, 1934], "embedding_op": 1920, "0x7f6edb21a9d0": 1920, "00390625": 1920, "0x7f6edb21a310": 1920, "0x7f6edb21a4c0": 1920, "0x7f6edb2979d0": 1920, "0x7f6edb21a8b0": 1920, "0x7f6edb212dc0": 1920, "0x7f6edb21a940": 1920, "0x7f6edb297ca0": 1920, "linear_fus": 1920, "_sequential_wrapper2": 1920, "0x7f6ef75ab430": 1920, "0x7f6edb2978b0": 1920, "0x7f6ed86f2dc0": 1920, "fuse_conv_bn_relu": 1920, "0x7f6eda5d3310": 1920, "0x7f6ed86f2e50": 1920, "0x7f6ed86f2ee0": 1920, "0x7f6ed86f2f70": 1920, "0x7f6ed8703040": 1920, "0x7f6ed87030d0": 1920, "0x7f6ed8703160": 1920, "0x7f6ed87031f0": 1920, "0x7f6ed8703280": 1920, "0x7f6ed8703310": 1920, "0x7f6ed87033a0": 1920, "0x7f6edb297a60": 1920, "0078125": 1920, "customconfig": 1921, "custom_module_config": 1921, "_caller": 1922, "_devices_kw": 1922, "slowli": 1922, "unind": 1922, "deivce_typ": 1922, "shortcom": 1923, "stitch": 1923, "rpc_backend_opt": 1923, "trainer3": 1923, "parameterserver2": 1923, "dash": [1923, 1925], "backendtyp": 1923, "rpcbackendopt": 1923, "rpcagent": 1923, "transmit": 1923, "calle": [1923, 1925], "_set_rpc_timeout": 1923, "5678": 1923, "worker0": 1923, "my_script_add": 1923, "wire": 1923, "fut2": 1923, "meth": 1923, "grace": 1923, "pend": [1923, 1932, 1941], "userrref": [1923, 1925], "async_execut": 1923, "paus": 1923, "outmost": 1923, "async_add_chain": 1923, "worker2": 1923, "script_add": 1923, "async_add": 1923, "asyncexecutionclass": 1923, "static_async_add": 1923, "class_async_add": 1923, "ret_fut": 1923, "bound_async_add": 1923, "rpc_timeout": 1923, "incid": [1923, 1925], "nvlink": 1923, "multiplex": 1923, "tensorpiperpcbackendopt": 1923, "num_worker_thread": 1923, "device_map": 1923, "_transport": 1923, "tensorpipeag": 1923, "set_device_map": 1923, "intermitt": 1923, "pyrref": 1923, "type_hint": 1923, "_distributed_rpc": 1923, "dist_autograd_ctx_id": 1923, "ctx_id": 1923, "ownerrref": [1923, 1925], "remote_modul": 1923, "forward_async": 1923, "remote_devic": 1923, "workernam": 1923, "trainer0": 1923, "ps0": 1923, "remote_linear_modul": 1923, "get_module_rref": 1923, "remote_paramet": 1923, "my_add": [1924, 1957], "t4": 1924, "t5": 1924, "autograd_message_id": 1924, "autograd_context_id": 1924, "send1": 1924, "kickoff": 1924, "recv2": 1924, "heard": 1924, "send2": 1924, "recv1": 1924, "dist_autograd_simpl": 1924, "random_tensor": 1924, "_run_process": 1924, "dst_rank": 1924, "dst_name": 1924, "run_process": 1924, "rrefid": 1925, "transient": 1925, "udf": 1925, "deliveri": 1925, "knowledg": 1925, "danger": 1925, "ancestor": 1925, "trickier": 1925, "wouldn": [1925, 1945], "forkid": 1925, "ack": 1925, "solid": 1925, "gc": 1925, "followup": 1925, "lil": 1927, "stark": 1927, "9093": 1927, "1411": 1927, "7568": 1927, "9589": 1927, "2794": 1927, "catastroph": 1927, "9900": 1927, "sturctur": 1927, "metadata_mask": 1927, "rce": 1927, "rc": 1927, "62": 1927, "to_sparse_semi_structur": 1927, "1x4": 1927, "16x16": 1927, "a_spars": 1927, "sparsesemistructuredtensor": 1927, "000": 1927, "400": 1927, "s2": 1927, "plain_dim_s": 1927, "lp64": 1927, "280": 1927, "310": 1927, "sp": 1927, "9078": 1927, "conception": 1927, "sparsesemistructur": 1927, "lobpcg": 1927, "geneig": 1927, "pca_lowrank": 1927, "kindli": 1927, "airy_ai": 1928, "airi": 1928, "onward": 1928, "9635": 1928, "entr": 1928, "3466": 1928, "int_": 1928, "8427": 1928, "0561": 1928, "4769": 1928, "9213": 1928, "8858": 1928, "7683": 1928, "7481": 1928, "2920": 1928, "int_0": 1928, "gammaln": 1928, "a1": 1928, "a2": 1928, "3528": 1928, "5665": 1928, "6472": 1928, "4335": 1928, "2650": 1928, "2661": 1928, "2796": 1928, "8808": 1928, "3019": 1928, "4658": 1928, "3085": 1928, "2430": 1928, "2070": 1928, "5652": 1928, "9534": 1928, "7595": 1928, "2153": 1928, "log_ndtr": 1928, "_ndtr": 1928, "6077": 1928, "7832": 1928, "841": 1928, "6931": 1928, "1728": 1928, "023": 1928, "9331": 1928, "6486": 1928, "1523": 1928, "6516": 1928, "6352": 1928, "6131": 1928, "7169": 1928, "6261": 1928, "displaystyl": 1928, "undefiend": 1928, "6835": 1928, "8474": 1928, "1929": 1928, "7162": 1928, "4180": 1928, "3928": 1928, "4007": 1928, "7586": 1928, "3901": 1928, "5049": 1928, "ndtr": 1928, "0228": 1928, "1587": 1928, "9772": 1928, "9987": 1928, "2p": 1928, "64493": 1928, "4041": 1928, "8288": 1928, "4939": 1928, "97": 1928, "4091": 1928, "8863": 1928, "771": 1928, "scaled_modified_bessel_k0": 1928, "scaled_modified_bessel_k1": 1928, "2948": 1928, "0267": 1928, "1566": 1928, "9186": 1928, "8631": 1928, "0259": 1928, "1300": 1928, "spheric": 1928, "xlog1pi": 1928, "3863": 1928, "1972": 1928, "6094": 1928, "2189": 1928, "8283": 1928, "7726": 1928, "0986": 1928, "1589": 1928, "hurwitz": 1928, "6449": 1928, "0823": 1928, "untyp": 1929, "wrap_storag": 1929, "complex_doubl": 1929, "from_buff": 1929, "is_hpu": 1929, "pickle_storage_typ": 1929, "byteswap": 1929, "quint2x4": [1929, 1934], "twelv": 1930, "halftensor": [1930, 1933], "bfloat16tensor": [1930, 1933], "chartensor": [1930, 1933], "shorttensor": [1930, 1933], "binary16": [1930, 1933], "significand": [1930, 1933], "float_tensor": 1930, "double_tensor": 1930, "complex_float_tensor": 1930, "complex_double_tensor": 1930, "int_tensor": 1930, "long_tensor": 1930, "uint_tensor": 1930, "bool_tensor": 1930, "long_zerodim": 1930, "int_zerodim": 1930, "set_default_devic": 1930, "cuda1": 1930, "nhwc": [1930, 1932], "channels_last_3d": 1930, "ndhwc": 1930, "blogpost": 1931, "totensor": 1932, "trainset": 1932, "mnist": 1932, "mnist_train": 1932, "trainload": 1932, "grayscal": 1932, "make_grid": 1932, "add_imag": 1932, "add_graph": 1932, "clutter": 1932, "n_iter": 1932, "purge_step": 1932, "max_queu": 1932, "flush_sec": 1932, "filename_suffix": 1932, "current_datetime_hostnam": 1932, "exp1": 1932, "global_step": 1932, "purg": 1932, "event_file_writ": 1932, "eventfilewrit": 1932, "may04_22": 1932, "54_": 1932, "macbook": 1932, "my_experi": 1932, "lr_0": 1932, "1_batch_16": 1932, "locallr_0": 1932, "scalar_valu": 1932, "walltim": 1932, "new_styl": 1932, "double_precis": 1932, "blobnam": 1932, "simple_valu": 1932, "2x": [1932, 1950], "main_tag": 1932, "tag_scalar_dict": 1932, "run_14h": 1932, "xsinx": 1932, "xcosx": 1932, "tanx": 1932, "add_histogram": 1932, "max_bin": 1932, "fd": 1932, "img_tensor": 1932, "dataformat": 1932, "chw": 1932, "hwc": 1932, "hw": 1932, "wh": 1932, "3xhxw": 1932, "img_hwc": 1932, "my_imag": 1932, "my_image_hwc": 1932, "img_batch": 1932, "my_image_batch": 1932, "add_figur": 1932, "add_video": 1932, "vid_tensor": 1932, "fp": 1932, "moviepi": 1932, "add_audio": 1932, "snd_tensor": 1932, "sample_r": 1932, "44100": 1932, "add_text": 1932, "text_str": 1932, "input_to_model": 1932, "use_strict_trac": 1932, "add_embed": 1932, "label_img": 1932, "metadata_head": 1932, "projector": 1932, "kwlist": 1932, "add_pr_curv": 1932, "num_threshold": 1932, "pr_curv": 1932, "add_custom_scalar": 1932, "chart": 1932, "categorynam": 1932, "chartnam": 1932, "listofproperti": 1932, "multilin": 1932, "taiwan": 1932, "twse": 1932, "0050": 1932, "2330": 1932, "dow": 1932, "aaa": 1932, "bbb": 1932, "ccc": 1932, "nasdaq": 1932, "add_mesh": 1932, "config_dict": 1932, "threej": 1932, "vertex": 1932, "number_of_vertic": 1932, "vertices_tensor": 1932, "colors_tensor": 1932, "faces_tensor": 1932, "my_mesh": 1932, "add_hparam": 1932, "hparam_dict": 1932, "metric_dict": 1932, "hparam_domain_discret": 1932, "run_nam": 1932, "hparam": 1932, "bsize": 1932, "tini": [1933, 1934, 1950, 1959], "_like": 1933, "allow_subclass": 1934, "check_devic": 1934, "check_layout": 1934, "6e": 1934, "3e": 1934, "assert_equ": 1934, "000000000000001e": 1934, "1e0": 1934, "argh": 1934, "nfooter": 1934, "66": 1934, "footer": 1934, "exclude_zero": 1934, "1205": 1934, "2282": 1934, "6380": 1934, "default_gener": 1935, "click": [1935, 1953, 1954], "data_dependent_output": 1935, "dynamic_output_shap": 1935, "inplace_view": 1935, "nondeterministic_bitwis": 1935, "nondeterministic_seed": 1935, "compare_weight": 1936, "float_dict": 1936, "quantized_dict": 1936, "wt_compare_dict": 1936, "qmodel": 1936, "compute_error": 1936, "weight_dict": 1936, "get_logger_dict": 1936, "shadowlogg": 1936, "outputlogg": [1936, 1937], "target_dict": 1936, "q_modul": 1936, "logger_cl": [1936, 1937], "prepare_model_with_stub": 1936, "module_swap_list": 1936, "q_model": 1936, "ob_dict": 1936, "compare_model_stub": 1936, "quantizablebasicblock": 1936, "get_matching_activ": 1936, "act_dict": 1936, "prepare_model_output": 1936, "compare_model_output": 1936, "act_compare_dict": 1936, "weight_comparison": 1937, "extract_weight": 1937, "sqnr": 1937, "extend_logger_results_with_comparison": 1937, "compute_sqnr": 1937, "mp_n": 1937, "mq_n": 1937, "add_logg": 1937, "act_comparison": 1937, "extract_logger_info": 1937, "mp_shadows_mq": 1937, "add_shadow_logg": 1937, "shadow_act_comparison": 1937, "extract_shadow_logger_info": 1937, "ref_node_nam": 1937, "prev_node_nam": 1937, "model_nam": 1937, "ref_nam": 1937, "prev_node_target_typ": 1937, "ref_node_target_typ": 1937, "results_typ": 1937, "index_within_arg": 1937, "index_of_arg": 1937, "qconfig_str": 1937, "outputcomparisonlogg": 1937, "x_ref": 1937, "nstracer": 1937, "skipped_module_nam": 1937, "skipped_module_class": 1937, "model_name_a": 1937, "model_a": 1937, "model_name_b": 1937, "model_b": 1937, "base_name_to_sets_of_related_op": 1937, "unmatchable_types_map": 1937, "op_to_type_to_weight_extraction_fn": 1937, "nsresultstyp": 1937, "name_a": 1937, "name_b": 1937, "should_log_input": 1937, "model_a_with_logg": 1937, "model_b_with_logg": 1937, "model_name_to_use_for_layer_nam": 1937, "node_type_to_io_type_map": 1937, "model_a_shadows_b": 1937, "model_name_1": 1937, "model_name_2": 1937, "comparison_fn": 1937, "comparison_nam": 1937, "prepare_n_shadows_model": 1937, "qconfig_multi_map": 1937, "custom_prepare_fn": 1937, "custom_prepare_kwarg": 1937, "custom_trac": 1937, "args_kwargs_m": 1937, "op_m": 1937, "output_m": 1937, "op_m_n": 1937, "log_m_n": 1937, "log_m_0": 1937, "qconfig_n": 1937, "args_m": 1937, "op_m_prepared_with_qconfig_n": 1937, "out_m_n": 1937, "kwargs_m": 1937, "docblock": 1937, "loggers_set_en": 1937, "loggers_set_save_activ": 1937, "save_activ": 1937, "convert_n_shadows_model": 1937, "custom_convert_fn": 1937, "custom_convert_kwarg": 1937, "extract_results_n_shadows_model": 1937, "print_comparisons_n_shadows_model": 1937, "compute_normalized_l2_error": 1937, "compute_cosine_similar": 1937, "surfac": 1938, "openai": 1938, "ipex": 1938, "tvm": 1938, "apach": 1938, "dashboard": [1938, 1943, 1950], "nnmodul": 1938, "simd": 1940, "slot": [1940, 1957], "isa": 1940, "amx": 1940, "collect_env": 1940, "avx512f": 1940, "avx512bw": 1940, "avx512_vnni": 1940, "amx_til": 1940, "amx_bf16": 1940, "amx_int8": 1940, "debut": 1941, "cachingalloc": 1941, "cudagraph_tre": 1941, "footgun": [1941, 1945], "my_custom_backend": 1942, "f_opt": 1942, "my_compil": [1942, 1943, 1949], "torch_dynamo_backend": 1942, "your_modul": 1942, "minifi": [1942, 1946], "aot_autograd": 1942, "fw_compil": 1942, "bw_compil": 1942, "make_boxed_func": 1942, "model_opt": 1942, "0x7f1a894649a8": 1942, "mockmodul": 1942, "optimized_mod": 1942, "toy_exampl": [1942, 1943, 1946, 1949, 1956], "abs_1": [1942, 1943], "0x7f8d259298a0": 1942, "superior": 1942, "optimize_for_inference_compil": 1942, "code_to_acceler": 1942, "trt_compil": 1942, "inductor_compil": 1942, "523": 1943, "kaichao": 1943, "tensor_match": 1943, "function_match": 1943, "recaptur": 1943, "__compiled_fn_0": 1943, "eval_with_kei": 1943, "0x7f9ca082f8a0": 1943, "load_fast": [1943, 1949], "load_glob": 1943, "load_method": 1943, "load_const": [1943, 1949], "binary_add": 1943, "binary_true_divid": 1943, "store_fast": 1943, "compare_op": 1943, "pop_jump_if_fals": 1943, "binary_multipli": [1943, 1949], "unpack_sequ": 1943, "__resume_at_30_1": 1943, "__resume_at_38_2": 1943, "__resume_at_": 1943, "jump_absolut": 1943, "resume_at": 1943, "eval_fram": 1943, "_debug_get_cache_entry_list": 1943, "__code__": 1943, "codetyp": 1943, "cache_entri": 1943, "_torchdynamo_orig_cal": 1943, "getfullargspec": 1943, "compiled_exampl": 1943, "b_sum_less_than_0": 1943, "symbolic_shap": 1944, "recognit": 1944, "jag": 1944, "induct": 1944, "mark_dynam": 1944, "automatic_dynamic_shap": 1944, "proactiv": 1944, "shapeenv": [1944, 1945], "faithfulli": 1944, "sympi": 1944, "reusabl": 1944, "plumb": 1944, "symnodeimpl": 1944, "python_symnod": 1944, "_meta_registr": 1944, "decomp": [1944, 1945], "primtorch": [1944, 1945], "symnod": 1944, "apparatu": 1944, "precomput": 1944, "constrain_rang": 1944, "wherebi": 1944, "trash": 1945, "bunch": 1945, "from_real_tensor": 1945, "fakeifi": 1945, "dispatch_devic": 1945, "ly": 1945, "derefer": 1945, "backtrac": 1945, "in_kernel_invocation_manag": 1945, "unwrap": 1945, "test_fake_tensor": 1945, "fake_mod": 1945, "fake_x": 1945, "fake_i": 1945, "fake_z": 1945, "_guard": 1945, "detect_fake_mod": 1945, "fake_arg": 1945, "lifecycl": [1945, 1949], "maybe_disable_fake_tensor_mod": 1945, "nich": 1945, "faketensorprop": 1945, "fake_tensor_prop": 1945, "propagate_dont_convert_input": 1945, "fake_input": 1945, "real_tensor": 1945, "annoi": 1945, "somehow": 1945, "fakecopymod": 1945, "gave": 1945, "fakeif": 1945, "tension": 1945, "analys": 1945, "hopefulli": 1945, "impl_abstract": 1945, "hardcod": 1945, "metaconvert": 1945, "die": 1945, "unback": 1945, "saroufim": 1946, "evalfram": 1946, "usercod": 1946, "rob": 1946, "diminish": 1946, "vast": 1946, "nopython": [1946, 1949, 1956], "250k": 1946, "aitempl": 1946, "aot_eag": [1946, 1956], "compile_tim": [1946, 1954, 1956], "torch_compile_debug": [1946, 1948], "troubl": [1946, 1947, 1956], "compileprofil": [1946, 1956], "profiler_model": [1946, 1956], "traffic": 1946, "frozen_toy_exampl": 1946, "multiprocessor": 1946, "some_fun": [1946, 1956], "insurmount": [1946, 1956], "woo": [1946, 1956], "out_guard": [1946, 1956], "ops_per_graph": [1946, 1956], "builtinvari": [1946, 1956], "constantvari": [1946, 1949, 1956], "generic_jump": [1946, 1956], "torchdynamo_dynamic_shap": 1946, "cv": 1946, "app": 1946, "unnecessarili": 1946, "cold": [1946, 1953], "visibli": 1946, "torchdynamo_repro_level": [1946, 1956], "bisect": [1946, 1956], "torchdynamo_repro_aft": [1946, 1956], "dramat": [1946, 1956], "uncommon": 1946, "a_fn": [1946, 1947], "aa_fn": [1946, 1947], "ab_fn": [1946, 1947], "handel": 1947, "unblock": 1947, "nnthi": 1947, "black": 1947, "nnnote": 1947, "screen": [1947, 1954], "b_fn": 1947, "white": 1947, "new_fn": 1948, "famou": 1948, "crunch": 1948, "torchinductor_": 1948, "your_usernam": 1948, "size_hint": 1948, "i32": 1948, "instance_descriptor": 1948, "divisible_by_16": 1948, "equal_to_1": 1948, "in_ptr0": 1948, "out_ptr0": 1948, "xnumel": 1948, "xblock": 1948, "tl": 1948, "constexpr": 1948, "xoffset": 1948, "program_id": 1948, "xindex": 1948, "xmask": 1948, "tmp0": 1948, "tmp1": 1948, "tmp2": 1948, "tmp3": 1948, "v0": 1948, "opt_model": 1948, "timm": [1948, 1953], "huggingfac": [1948, 1953], "berttoken": 1948, "bertmodel": 1948, "uncas": 1948, "me": 1948, "encoded_input": 1948, "return_tensor": 1948, "trigonometri": 1948, "skim": 1948, "create_model": 1948, "resnext101_32x8d": 1948, "fn_foo": 1949, "grab": 1949, "dig": 1949, "hole": 1949, "neutral": 1949, "check_fn": 1949, "_pyinterpreterstate_setevalframefunc": 1949, "convert_fram": [1949, 1956], "convert_frame_assert": 1949, "gloss": 1949, "222": 1949, "compiler_fn": 1949, "one_graph": 1949, "_convert_frame_assert": 1949, "frametyp": 1949, "f_code": 1949, "needless": 1949, "evict": 1949, "transform_code_object": 1949, "output_instruct": 1949, "guardedcod": 1949, "symbolic_loc": 1949, "f_local": 1949, "variablebuild": 1949, "localsourc": 1949, "_wrap": 1949, "variabletrack": 1949, "make_guard": 1949, "pump": 1949, "cool": 1949, "get_instruct": 1949, "124": 1949, "opnam": 1949, "argval": 1949, "starts_lin": 1949, "is_jump_target": 1949, "inst": 1949, "unimpl": 1949, "dozen": 1949, "symbolic_convert": [1949, 1956], "spoken": 1949, "quiet": 1949, "replace_guard": 1949, "add_guard": 1949, "behalf": 1949, "python_typ": 1949, "as_proxi": 1949, "as_python_proxi": 1949, "bookkeep": 1949, "came": 1949, "flesh": 1949, "relianc": 1949, "build_tupl": 1949, "popn": 1949, "tuplevari": 1949, "pydoc": 1949, "tensorvari": 1949, "instructiontranslatorbas": 1949, "ctor": 1949, "guardsourc": 1949, "create_fn": 1949, "guard_sourc": 1949, "istyp": 1949, "guardbuild": 1949, "equals_match": 1949, "rangevari": 1949, "appar": 1949, "checkfunctionmanag": 1949, "compile_check_fn": 1949, "cacheentri": 1949, "create_cache_entri": 1949, "pyobject": 1949, "guarded_cod": 1949, "malloc": [1949, 1958], "debug_null_check": 1949, "pyobject_getattrstr": 1949, "null_check": 1949, "pycodeobject": 1949, "sort_kei": 1949, "guard_nn_modul": 1949, "is_nn_modul": 1949, "local_build": 1949, "global_build": 1949, "___guarded_cod": 1949, "___check_type_id": 1949, "94367738391392": 1949, "___check_tensor": 1949, "_eval_fram": 1949, "anew": 1949, "massiv": 1949, "weak": 1949, "moduleinvalid": 1949, "torchinductor_unique_kernel_nam": 1950, "triton_poi_fused_cat_155": 1950, "poi": 1950, "torchinductor_benchmark_kernel": 1950, "har": 1950, "torchinductor_max_autotun": 1950, "mixnet_l": 1950, "timm_model": 1950, "torchinductor_shunt": 1950, "qz": 1950, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 1950, "shunting314": 1950, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 1950, "48efc83b12ec3ead950052e4a0220b10": 1950, "compiled_module_profil": 1950, "browser": [1950, 1954], "zoom": [1950, 1954, 1958], "88": 1950, "distort": [1950, 1954], "densenet121": 1950, "69": 1950, "cutlass": 1950, "57": 1950, "ff": 1950, "justifi": 1950, "triton_red_fus": 1950, "__native_batch_norm_legit_functional_16": 1950, "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 1950, "_adaptive_avg_pool2d_backward": 1951, "half_to_float": 1951, "no_stat": 1951, "scalartyp": 1951, "memoryformat": 1951, "start_step": 1951, "avg_pool2d_backward": 1951, "convolution_backward": 1951, "bias_siz": 1951, "output_mask": 1951, "embedding_dense_backward": 1951, "num_weight": 1951, "max_pool2d_with_indices_backward": 1951, "native_group_norm_backward": 1951, "rstd": 1951, "native_layer_norm_backward": 1951, "tensor_scalar": 1951, "tensor_tensor": 1951, "dim_int": 1951, "dim_intlist": 1951, "broadcast_dimens": 1951, "start_indic": 1951, "limit_indic": 1951, "start_index": 1951, "limit_index": 1951, "outer_length": 1951, "constabl": 1952, "orchestr": 1952, "_forward_pre_hook": 1952, "_backward_pre_hook": 1952, "_backward_hook": 1952, "_state_dict_hook": 1952, "load_": 1952, "avoiabl": 1952, "skip_nnmodule_hook_guard": 1952, "pre_backward": 1952, "warn_onc": 1952, "hui": 1953, "nightli": 1953, "a100": [1953, 1956], "night": 1953, "40gb": [1953, 1956], "2ghz": 1953, "torchbench": 1953, "trend": 1953, "droplist": 1953, "with_cudagraph": 1953, "toosl": 1954, "ncu": 1954, "model_c": 1954, "fwd_bwd": 1954, "scroll": 1954, "shortcut": 1954, "compiledfunct": 1954, "compiledfunctionbackward": 1954, "ac2g": 1954, "dropdown": 1954, "525": 1954, "_init_for_cuda_graph": 1954, "warmup_compil": 1954, "fn_c": 1954, "record_funct": 1954, "trace_compil": 1954, "synthet": 1954, "modelwithbreak": 1954, "create_sequenti": 1954, "mod1": 1954, "mod2": 1954, "mod3": 1954, "mod4": 1954, "trace_break": 1954, "sit": 1955, "replace_add_with_mul": 1955, "insert_relu_after_add": 1955, "new_relu_nod": 1955, "replaceaddwithmul": 1955, "transformed_graph_modul": 1955, "replaceaddwithmulsub": 1955, "mul_r": 1955, "removedetachpass": 1955, "args_map": 1955, "_schema": 1955, "kwarg_onli": 1955, "scalartotensorpass": 1955, "try_coerc": 1955, "replace_pattern": 1955, "replaced_pattern": 1955, "replace_pattern_with_filt": 1955, "replacedpattern": 1955, "passmanag": 1955, "pass_manag": 1955, "pm": 1955, "replace_add_with_div": 1955, "replace_div_with_mul": 1955, "run_checks_after_each_pass": 1955, "suppress_check_failur": 1955, "graph_module_out": 1955, "set_check": 1955, "check_div_target": 1955, "add_check": 1955, "subgraphmatch": 1955, "matcher_util": 1955, "match_output": 1955, "match_placehold": 1955, "remove_overlapping_match": 1955, "ignore_liter": 1955, "largemodel": 1955, "_bia": 1955, "large_model_graph": 1955, "patternmodel": 1955, "_weight_1": 1955, "_bias_1": 1955, "pattern_graph": 1955, "subgraph_match": 1955, "match_result": 1955, "internalmatch": 1955, "default_factori": 1955, "placeholder_nod": 1955, "returning_nod": 1955, "capabilitybasedpartition": 1955, "l34": 1955, "operator_support": 1955, "operatorsupportbas": 1955, "allows_single_node_partit": 1955, "non_compute_op": 1955, "_oper": 1955, "allowed_single_node_partition_op": 1955, "ll28c1": 1955, "l28c1": 1955, "is_node_support": 1955, "operatorsuppportbas": 1955, "l150": 1955, "any_chain": 1955, "l164": 1955, "addmuloperatorsupport": 1955, "capability_partition": 1955, "op_support": 1955, "partition_list": 1955, "propose_partit": 1955, "fused_graph_modul": 1955, "fuse_partit": 1955, "lazo": 1956, "torchdynamo_verbos": 1956, "replay_record_en": 1956, "torchdynamo_debug_funct": 1956, "test_assertion_error": 1956, "compiled_test_assertion_error": 1956, "mlazo": 1956, "837": 1956, "build_map": 1956, "thousand": 1956, "test_backend_error": 1956, "compiled_test_backend_error": 1956, "decomp_fn": 1956, "810": 1956, "repro_aft": 1956, "minifier_launch": 1956, "base_dir": 1956, "rand_strid": 1956, "0a0": 1956, "gitfddfc44": 1956, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 1956, "2022": 1956, "thu_feb_10_18": 1956, "41_pst_2022": 1956, "v11": 1956, "cuda_11": 1956, "r11": 1956, "30978841_0": 1956, "sxm4": 1956, "compile_fx": 1956, "compile_fx_inn": 1956, "toy_compil": 1956, "debug_util": 1956, "run_fwd_maybe_bwd": 1956, "opt_mod": 1956, "rg": 1956, "test_model": 1956, "debug_dir_root": 1956, "torch_compile_debug_dir": 1956, "run_2023_03_01_08_20_52_143510": 1956, "pid_180167": 1956, "model__0_forward_1": 1956, "aot_model___0_debug": 1956, "fx_graph_read": 1956, "fx_graph_runn": 1956, "fx_graph_transform": 1956, "ir_post_fus": 1956, "ir_pre_fus": 1956, "fx_graph": 1956, "buf1": 1956, "schedulernod": 1956, "computedbuff": 1956, "memorydep": 1956, "unmet_depend": 1956, "buf0": 1956, "met_depend": 1956, "primals_2": 1956, "buf1_loop_bodi": 1956, "var_rang": 1956, "z0": 1956, "index0": 1956, "index1": 1956, "get_index": 1956, "get_index_1": 1956, "load_1": 1956, "get_index_2": 1956, "compiled_fun": 1956, "hinder": 1956, "break_reason": 1956, "explanation_verbos": 1956, "compiled_toi": 1956, "as_subclass": 1957, "resolve_nam": 1957, "handle_torch_funct": 1957, "public_api": 1957, "relevant_arg": 1957, "has_torch_function_unari": 1957, "is_tensor_lik": 1957, "notatensor": 1957, "tensorlik": 1957, "is_tensor_method_or_properti": 1957, "__get__": 1957, "__module__": 1957, "wrap_torch_funct": 1957, "drag": 1958, "interactiv": 1958, "viewer": 1958, "memory_viz": 1958, "run_your_cod": 1958, "my_snapshot": 1958, "javascript": 1958, "upload": 1958, "pan": 1958, "mous": 1958, "slider": 1958, "b7f064c000000_0": 1958, "7f064c000000": 1958, "max_entri": 1958, "_memory_viz": 1958, "2u": 1958, "50n": 1958, "currenli": 1958, "typeddict": 1958, "device_trac": 1958, "traceentri": 1958, "total_s": 1958, "segment_typ": 1958, "allocated_s": 1958, "active_s": 1958, "active_awaiting_fre": 1958, "requested_s": 1958, "active_alloc": 1958, "took": 1958, "free_request": 1958, "free_complet": 1958, "segment_alloc": 1958, "segment_fre": 1958, "coorel": 1958, "device_fre": 1958, "dump_snapshot": 1958, "smallest_norm": 1959, "subnorm": 1959, "denormal_numb": 1959}, "objects": {"": [[1935, 0, 0, "-", "torch"], [1870, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1929, 1, 1, "", "BFloat16Storage"], [1929, 1, 1, "", "BoolStorage"], [1929, 1, 1, "", "ByteStorage"], [1929, 1, 1, "", "CharStorage"], [1929, 1, 1, "", "ComplexDoubleStorage"], [1929, 1, 1, "", "ComplexFloatStorage"], [1929, 1, 1, "", "DoubleStorage"], [1929, 1, 1, "", "FloatStorage"], [76, 1, 1, "", "Generator"], [1929, 1, 1, "", "HalfStorage"], [1929, 1, 1, "", "IntStorage"], [1929, 1, 1, "", "LongStorage"], [1929, 1, 1, "", "QInt32Storage"], [1929, 1, 1, "", "QInt8Storage"], [1929, 1, 1, "", "QUInt2x4Storage"], [1929, 1, 1, "", "QUInt4x2Storage"], [1929, 1, 1, "", "QUInt8Storage"], [1929, 1, 1, "", "ShortStorage"], [1935, 1, 1, "", "SymBool"], [1935, 1, 1, "", "SymFloat"], [1935, 1, 1, "", "SymInt"], [1935, 1, 1, "", "Tag"], [1933, 1, 1, "", "Tensor"], [1929, 1, 1, "", "TypedStorage"], [1929, 1, 1, "", "UntypedStorage"], [12, 0, 0, "-", "__config__"], [611, 5, 1, "", "_assert"], [612, 5, 1, "", "_foreach_abs"], [613, 5, 1, "", "_foreach_abs_"], [614, 5, 1, "", "_foreach_acos"], [615, 5, 1, "", "_foreach_acos_"], [616, 5, 1, "", "_foreach_asin"], [617, 5, 1, "", "_foreach_asin_"], [618, 5, 1, "", "_foreach_atan"], [619, 5, 1, "", "_foreach_atan_"], [620, 5, 1, "", "_foreach_ceil"], [621, 5, 1, "", "_foreach_ceil_"], [622, 5, 1, "", "_foreach_cos"], [623, 5, 1, "", "_foreach_cos_"], [624, 5, 1, "", "_foreach_cosh"], [625, 5, 1, "", "_foreach_cosh_"], [626, 5, 1, "", "_foreach_erf"], [627, 5, 1, "", "_foreach_erf_"], [628, 5, 1, "", "_foreach_erfc"], [629, 5, 1, "", "_foreach_erfc_"], [630, 5, 1, "", "_foreach_exp"], [631, 5, 1, "", "_foreach_exp_"], [632, 5, 1, "", "_foreach_expm1"], [633, 5, 1, "", "_foreach_expm1_"], [634, 5, 1, "", "_foreach_floor"], [635, 5, 1, "", "_foreach_floor_"], [636, 5, 1, "", "_foreach_frac"], [637, 5, 1, "", "_foreach_frac_"], [638, 5, 1, "", "_foreach_lgamma"], [639, 5, 1, "", "_foreach_lgamma_"], [640, 5, 1, "", "_foreach_log"], [641, 5, 1, "", "_foreach_log10"], [642, 5, 1, "", "_foreach_log10_"], [643, 5, 1, "", "_foreach_log1p"], [644, 5, 1, "", "_foreach_log1p_"], [645, 5, 1, "", "_foreach_log2"], [646, 5, 1, "", "_foreach_log2_"], [647, 5, 1, "", "_foreach_log_"], [648, 5, 1, "", "_foreach_neg"], [649, 5, 1, "", "_foreach_neg_"], [650, 5, 1, "", "_foreach_reciprocal"], [651, 5, 1, "", "_foreach_reciprocal_"], [652, 5, 1, "", "_foreach_round"], [653, 5, 1, "", "_foreach_round_"], [654, 5, 1, "", "_foreach_sigmoid"], [655, 5, 1, "", "_foreach_sigmoid_"], [656, 5, 1, "", "_foreach_sin"], [657, 5, 1, "", "_foreach_sin_"], [658, 5, 1, "", "_foreach_sinh"], [659, 5, 1, "", "_foreach_sinh_"], [660, 5, 1, "", "_foreach_sqrt"], [661, 5, 1, "", "_foreach_sqrt_"], [662, 5, 1, "", "_foreach_tan"], [663, 5, 1, "", "_foreach_tan_"], [664, 5, 1, "", "_foreach_trunc"], [665, 5, 1, "", "_foreach_trunc_"], [666, 5, 1, "", "_foreach_zero_"], [1879, 0, 0, "-", "_logging"], [668, 5, 1, "", "abs"], [669, 5, 1, "", "absolute"], [670, 5, 1, "", "acos"], [671, 5, 1, "", "acosh"], [672, 5, 1, "", "add"], [673, 5, 1, "", "addbmm"], [674, 5, 1, "", "addcdiv"], [675, 5, 1, "", "addcmul"], [676, 5, 1, "", "addmm"], [677, 5, 1, "", "addmv"], [678, 5, 1, "", "addr"], [679, 5, 1, "", "adjoint"], [680, 5, 1, "", "all"], [681, 5, 1, "", "allclose"], [682, 5, 1, "", "amax"], [683, 5, 1, "", "amin"], [684, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [685, 5, 1, "", "angle"], [686, 5, 1, "", "any"], [1918, 0, 0, "-", "ao"], [852, 5, 1, "", "arange"], [853, 5, 1, "", "arccos"], [854, 5, 1, "", "arccosh"], [855, 5, 1, "", "arcsin"], [856, 5, 1, "", "arcsinh"], [857, 5, 1, "", "arctan"], [858, 5, 1, "", "arctan2"], [859, 5, 1, "", "arctanh"], [860, 5, 1, "", "are_deterministic_algorithms_enabled"], [861, 5, 1, "", "argmax"], [862, 5, 1, "", "argmin"], [863, 5, 1, "", "argsort"], [864, 5, 1, "", "argwhere"], [865, 5, 1, "", "as_strided"], [866, 5, 1, "", "as_tensor"], [867, 5, 1, "", "asarray"], [868, 5, 1, "", "asin"], [869, 5, 1, "", "asinh"], [870, 5, 1, "", "atan"], [871, 5, 1, "", "atan2"], [872, 5, 1, "", "atanh"], [873, 5, 1, "", "atleast_1d"], [874, 5, 1, "", "atleast_2d"], [875, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [907, 5, 1, "", "baddbmm"], [908, 5, 1, "", "bartlett_window"], [909, 5, 1, "", "bernoulli"], [910, 5, 1, "", "bincount"], [911, 5, 1, "", "bitwise_and"], [912, 5, 1, "", "bitwise_left_shift"], [913, 5, 1, "", "bitwise_not"], [914, 5, 1, "", "bitwise_or"], [915, 5, 1, "", "bitwise_right_shift"], [916, 5, 1, "", "bitwise_xor"], [917, 5, 1, "", "blackman_window"], [918, 5, 1, "", "block_diag"], [919, 5, 1, "", "bmm"], [920, 5, 1, "", "broadcast_shapes"], [921, 5, 1, "", "broadcast_tensors"], [922, 5, 1, "", "broadcast_to"], [923, 5, 1, "", "bucketize"], [924, 5, 1, "", "can_cast"], [925, 5, 1, "", "cartesian_prod"], [926, 5, 1, "", "cat"], [927, 5, 1, "", "cdist"], [928, 5, 1, "", "ceil"], [929, 5, 1, "", "chain_matmul"], [930, 5, 1, "", "cholesky"], [931, 5, 1, "", "cholesky_inverse"], [932, 5, 1, "", "cholesky_solve"], [933, 5, 1, "", "chunk"], [934, 5, 1, "", "clamp"], [935, 5, 1, "", "clip"], [936, 5, 1, "", "clone"], [937, 5, 1, "", "column_stack"], [938, 5, 1, "", "combinations"], [939, 5, 1, "", "compile"], [940, 5, 1, "", "compiled_with_cxx11_abi"], [1939, 0, 0, "-", "compiler"], [947, 5, 1, "", "complex"], [948, 5, 1, "", "concat"], [949, 5, 1, "", "concatenate"], [950, 5, 1, "", "conj"], [951, 5, 1, "", "conj_physical"], [1935, 0, 0, "-", "contrib"], [952, 5, 1, "", "copysign"], [953, 5, 1, "", "corrcoef"], [954, 5, 1, "", "cos"], [955, 5, 1, "", "cosh"], [956, 5, 1, "", "count_nonzero"], [957, 5, 1, "", "cov"], [15, 0, 0, "-", "cpu"], [965, 5, 1, "", "cross"], [16, 0, 0, "-", "cuda"], [1044, 5, 1, "", "cummax"], [1045, 5, 1, "", "cummin"], [1046, 5, 1, "", "cumprod"], [1047, 5, 1, "", "cumsum"], [1048, 5, 1, "", "cumulative_trapezoid"], [1049, 5, 1, "", "deg2rad"], [1050, 5, 1, "", "dequantize"], [1051, 5, 1, "", "det"], [1930, 1, 1, "", "device"], [1052, 5, 1, "", "diag"], [1053, 5, 1, "", "diag_embed"], [1054, 5, 1, "", "diagflat"], [1055, 5, 1, "", "diagonal"], [1056, 5, 1, "", "diagonal_scatter"], [1057, 5, 1, "", "diff"], [1058, 5, 1, "", "digamma"], [1059, 5, 1, "", "dist"], [23, 0, 0, "-", "distributed"], [29, 0, 0, "-", "distributions"], [1060, 5, 1, "", "div"], [1061, 5, 1, "", "divide"], [1062, 5, 1, "", "dot"], [1063, 5, 1, "", "dsplit"], [1064, 5, 1, "", "dstack"], [1930, 1, 1, "", "dtype"], [1065, 5, 1, "", "einsum"], [1066, 5, 1, "", "empty"], [1067, 5, 1, "", "empty_like"], [1068, 5, 1, "", "empty_strided"], [1069, 1, 1, "", "enable_grad"], [1070, 5, 1, "", "eq"], [1071, 5, 1, "", "equal"], [1072, 5, 1, "", "erf"], [1073, 5, 1, "", "erfc"], [1074, 5, 1, "", "erfinv"], [1075, 5, 1, "", "exp"], [1076, 5, 1, "", "exp2"], [1077, 5, 1, "", "expm1"], [44, 0, 0, "-", "export"], [1078, 5, 1, "", "eye"], [1079, 5, 1, "", "fake_quantize_per_channel_affine"], [1080, 5, 1, "", "fake_quantize_per_tensor_affine"], [45, 0, 0, "-", "fft"], [1103, 5, 1, "", "fix"], [1104, 5, 1, "", "flatten"], [1105, 5, 1, "", "flip"], [1106, 5, 1, "", "fliplr"], [1107, 5, 1, "", "flipud"], [1108, 5, 1, "", "float_power"], [1109, 5, 1, "", "floor"], [1110, 5, 1, "", "floor_divide"], [1111, 5, 1, "", "fmax"], [1112, 5, 1, "", "fmin"], [1113, 5, 1, "", "fmod"], [1114, 5, 1, "", "frac"], [1115, 5, 1, "", "frexp"], [1116, 5, 1, "", "from_dlpack"], [1117, 5, 1, "", "from_numpy"], [1118, 5, 1, "", "frombuffer"], [1119, 5, 1, "", "full"], [1120, 5, 1, "", "full_like"], [48, 0, 0, "-", "func"], [53, 0, 0, "-", "futures"], [54, 0, 0, "-", "fx"], [1134, 5, 1, "", "gather"], [1135, 5, 1, "", "gcd"], [1136, 5, 1, "", "ge"], [1137, 5, 1, "", "geqrf"], [1138, 5, 1, "", "ger"], [1139, 5, 1, "", "get_default_dtype"], [1140, 5, 1, "", "get_deterministic_debug_mode"], [1141, 5, 1, "", "get_float32_matmul_precision"], [1142, 5, 1, "", "get_num_interop_threads"], [1143, 5, 1, "", "get_num_threads"], [1144, 5, 1, "", "get_rng_state"], [1145, 5, 1, "", "gradient"], [1146, 5, 1, "", "greater"], [1147, 5, 1, "", "greater_equal"], [1148, 5, 1, "", "gt"], [1149, 5, 1, "", "hamming_window"], [1150, 5, 1, "", "hann_window"], [1151, 5, 1, "", "heaviside"], [1152, 5, 1, "", "histc"], [1153, 5, 1, "", "histogram"], [1154, 5, 1, "", "histogramdd"], [1155, 5, 1, "", "hsplit"], [1156, 5, 1, "", "hspmm"], [1157, 5, 1, "", "hstack"], [1868, 0, 0, "-", "hub"], [1158, 5, 1, "", "hypot"], [1159, 5, 1, "", "i0"], [1160, 5, 1, "", "igamma"], [1161, 5, 1, "", "igammac"], [1162, 5, 1, "", "imag"], [1163, 5, 1, "", "index_add"], [1164, 5, 1, "", "index_copy"], [1165, 5, 1, "", "index_reduce"], [1166, 5, 1, "", "index_select"], [1167, 1, 1, "", "inference_mode"], [1168, 5, 1, "", "initial_seed"], [1169, 5, 1, "", "inner"], [1170, 5, 1, "", "inverse"], [1171, 5, 1, "", "is_complex"], [1172, 5, 1, "", "is_conj"], [1173, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1174, 5, 1, "", "is_floating_point"], [1175, 5, 1, "", "is_grad_enabled"], [1176, 5, 1, "", "is_inference_mode_enabled"], [1177, 5, 1, "", "is_nonzero"], [1178, 5, 1, "", "is_storage"], [1179, 5, 1, "", "is_tensor"], [1180, 5, 1, "", "is_warn_always_enabled"], [1181, 5, 1, "", "isclose"], [1182, 5, 1, "", "isfinite"], [1183, 5, 1, "", "isin"], [1184, 5, 1, "", "isinf"], [1185, 5, 1, "", "isnan"], [1186, 5, 1, "", "isneginf"], [1187, 5, 1, "", "isposinf"], [1188, 5, 1, "", "isreal"], [1189, 5, 1, "", "istft"], [1870, 0, 0, "-", "jit"], [1211, 5, 1, "", "kaiser_window"], [1212, 5, 1, "", "kron"], [1213, 5, 1, "", "kthvalue"], [1930, 1, 1, "", "layout"], [1214, 5, 1, "", "lcm"], [1215, 5, 1, "", "ldexp"], [1216, 5, 1, "", "le"], [1217, 5, 1, "", "lerp"], [1218, 5, 1, "", "less"], [1219, 5, 1, "", "less_equal"], [1220, 5, 1, "", "lgamma"], [1878, 0, 0, "-", "linalg"], [1262, 5, 1, "", "linspace"], [1263, 5, 1, "", "load"], [1264, 5, 1, "", "lobpcg"], [1265, 5, 1, "", "log"], [1266, 5, 1, "", "log10"], [1267, 5, 1, "", "log1p"], [1268, 5, 1, "", "log2"], [1269, 5, 1, "", "logaddexp"], [1270, 5, 1, "", "logaddexp2"], [1271, 5, 1, "", "logcumsumexp"], [1272, 5, 1, "", "logdet"], [1273, 5, 1, "", "logical_and"], [1274, 5, 1, "", "logical_not"], [1275, 5, 1, "", "logical_or"], [1276, 5, 1, "", "logical_xor"], [1277, 5, 1, "", "logit"], [1278, 5, 1, "", "logspace"], [1279, 5, 1, "", "logsumexp"], [1280, 5, 1, "", "lt"], [1281, 5, 1, "", "lu"], [1282, 5, 1, "", "lu_solve"], [1283, 5, 1, "", "lu_unpack"], [1284, 5, 1, "", "manual_seed"], [1880, 0, 0, "-", "masked"], [1285, 5, 1, "", "masked_select"], [1286, 5, 1, "", "matmul"], [1287, 5, 1, "", "matrix_exp"], [1288, 5, 1, "", "matrix_power"], [1289, 5, 1, "", "max"], [1290, 5, 1, "", "maximum"], [1291, 5, 1, "", "mean"], [1292, 5, 1, "", "median"], [1930, 1, 1, "", "memory_format"], [1293, 5, 1, "", "meshgrid"], [1294, 5, 1, "", "min"], [1295, 5, 1, "", "minimum"], [1296, 5, 1, "", "mm"], [1297, 5, 1, "", "mode"], [1883, 0, 0, "-", "monitor"], [1298, 5, 1, "", "moveaxis"], [1299, 5, 1, "", "movedim"], [1884, 0, 0, "-", "mps"], [1313, 5, 1, "", "msort"], [1314, 5, 1, "", "mul"], [1315, 5, 1, "", "multinomial"], [1316, 5, 1, "", "multiply"], [1885, 0, 0, "-", "multiprocessing"], [1317, 5, 1, "", "mv"], [1318, 5, 1, "", "mvlgamma"], [1319, 5, 1, "", "nan_to_num"], [1320, 5, 1, "", "nanmean"], [1321, 5, 1, "", "nanmedian"], [1322, 5, 1, "", "nanquantile"], [1323, 5, 1, "", "nansum"], [1324, 5, 1, "", "narrow"], [1325, 5, 1, "", "narrow_copy"], [1326, 5, 1, "", "ne"], [1327, 5, 1, "", "neg"], [1328, 5, 1, "", "negative"], [1888, 0, 0, "-", "nested"], [1329, 5, 1, "", "nextafter"], [1889, 0, 0, "-", "nn"], [1650, 1, 1, "", "no_grad"], [1651, 5, 1, "", "nonzero"], [1652, 5, 1, "", "norm"], [1653, 5, 1, "", "normal"], [1654, 5, 1, "", "not_equal"], [1655, 5, 1, "", "numel"], [1656, 5, 1, "", "ones"], [1657, 5, 1, "", "ones_like"], [1911, 0, 0, "-", "onnx"], [1914, 0, 0, "-", "optim"], [1700, 5, 1, "", "orgqr"], [1701, 5, 1, "", "ormqr"], [1702, 5, 1, "", "outer"], [1915, 0, 0, "-", "package"], [1703, 5, 1, "", "pca_lowrank"], [1704, 5, 1, "", "permute"], [1705, 5, 1, "", "pinverse"], [1706, 5, 1, "", "poisson"], [1707, 5, 1, "", "polar"], [1708, 5, 1, "", "polygamma"], [1709, 5, 1, "", "positive"], [1710, 5, 1, "", "pow"], [1711, 5, 1, "", "prod"], [1917, 0, 0, "-", "profiler"], [1712, 5, 1, "", "promote_types"], [1713, 5, 1, "", "qr"], [1714, 5, 1, "", "quantile"], [1921, 0, 0, "-", "quantization"], [1715, 5, 1, "", "quantize_per_channel"], [1716, 5, 1, "", "quantize_per_tensor"], [1717, 5, 1, "", "quantized_batch_norm"], [1718, 5, 1, "", "quantized_max_pool1d"], [1719, 5, 1, "", "quantized_max_pool2d"], [1721, 5, 1, "", "rad2deg"], [1722, 5, 1, "", "rand"], [1723, 5, 1, "", "rand_like"], [1724, 5, 1, "", "randint"], [1725, 5, 1, "", "randint_like"], [1726, 5, 1, "", "randn"], [1727, 5, 1, "", "randn_like"], [1922, 0, 0, "-", "random"], [1728, 5, 1, "", "randperm"], [1729, 5, 1, "", "range"], [1730, 5, 1, "", "ravel"], [1731, 5, 1, "", "real"], [1732, 5, 1, "", "reciprocal"], [1733, 5, 1, "", "remainder"], [1734, 5, 1, "", "renorm"], [1735, 5, 1, "", "repeat_interleave"], [1736, 5, 1, "", "reshape"], [1737, 5, 1, "", "resolve_conj"], [1738, 5, 1, "", "resolve_neg"], [1739, 5, 1, "", "result_type"], [1740, 5, 1, "", "roll"], [1741, 5, 1, "", "rot90"], [1742, 5, 1, "", "round"], [1743, 5, 1, "", "row_stack"], [1744, 5, 1, "", "rsqrt"], [1745, 5, 1, "", "save"], [1746, 5, 1, "", "scatter"], [1747, 5, 1, "", "scatter_add"], [1748, 5, 1, "", "scatter_reduce"], [1749, 5, 1, "", "searchsorted"], [1750, 5, 1, "", "seed"], [1751, 5, 1, "", "select"], [1752, 5, 1, "", "select_scatter"], [1753, 5, 1, "", "set_default_device"], [1754, 5, 1, "", "set_default_dtype"], [1755, 5, 1, "", "set_default_tensor_type"], [1756, 5, 1, "", "set_deterministic_debug_mode"], [1757, 5, 1, "", "set_float32_matmul_precision"], [1758, 5, 1, "", "set_flush_denormal"], [1759, 1, 1, "", "set_grad_enabled"], [1760, 5, 1, "", "set_num_interop_threads"], [1761, 5, 1, "", "set_num_threads"], [1762, 5, 1, "", "set_printoptions"], [1763, 5, 1, "", "set_rng_state"], [1764, 5, 1, "", "set_warn_always"], [1765, 5, 1, "", "sgn"], [1766, 5, 1, "", "sigmoid"], [1767, 5, 1, "", "sign"], [1926, 0, 0, "-", "signal"], [1779, 5, 1, "", "signbit"], [1780, 5, 1, "", "sin"], [1781, 5, 1, "", "sinc"], [1782, 5, 1, "", "sinh"], [1783, 5, 1, "", "slice_scatter"], [1784, 5, 1, "", "slogdet"], [1785, 5, 1, "", "smm"], [1786, 5, 1, "", "softmax"], [1787, 5, 1, "", "sort"], [1927, 0, 0, "-", "sparse"], [1797, 5, 1, "", "sparse_bsc_tensor"], [1798, 5, 1, "", "sparse_bsr_tensor"], [1799, 5, 1, "", "sparse_compressed_tensor"], [1800, 5, 1, "", "sparse_coo_tensor"], [1801, 5, 1, "", "sparse_csc_tensor"], [1802, 5, 1, "", "sparse_csr_tensor"], [1928, 0, 0, "-", "special"], [1803, 5, 1, "", "split"], [1804, 5, 1, "", "sqrt"], [1805, 5, 1, "", "square"], [1806, 5, 1, "", "squeeze"], [1807, 5, 1, "", "sspaddmm"], [1808, 5, 1, "", "stack"], [1809, 5, 1, "", "std"], [1810, 5, 1, "", "std_mean"], [1811, 5, 1, "", "stft"], [1812, 5, 1, "", "sub"], [1813, 5, 1, "", "subtract"], [1814, 5, 1, "", "sum"], [1815, 5, 1, "", "svd"], [1816, 5, 1, "", "svd_lowrank"], [1817, 5, 1, "", "swapaxes"], [1818, 5, 1, "", "swapdims"], [1819, 5, 1, "", "sym_float"], [1820, 5, 1, "", "sym_int"], [1821, 5, 1, "", "sym_max"], [1822, 5, 1, "", "sym_min"], [1823, 5, 1, "", "sym_not"], [1824, 5, 1, "", "t"], [1825, 5, 1, "", "take"], [1826, 5, 1, "", "take_along_dim"], [1827, 5, 1, "", "tan"], [1828, 5, 1, "", "tanh"], [1829, 5, 1, "", "tensor"], [1830, 5, 1, "", "tensor_split"], [1831, 5, 1, "", "tensordot"], [1934, 0, 0, "-", "testing"], [1832, 5, 1, "", "tile"], [1833, 5, 1, "", "topk"], [1834, 5, 1, "", "trace"], [1835, 5, 1, "", "transpose"], [1836, 5, 1, "", "trapezoid"], [1837, 5, 1, "", "trapz"], [1838, 5, 1, "", "triangular_solve"], [1839, 5, 1, "", "tril"], [1840, 5, 1, "", "tril_indices"], [1841, 5, 1, "", "triu"], [1842, 5, 1, "", "triu_indices"], [1843, 5, 1, "", "true_divide"], [1844, 5, 1, "", "trunc"], [1845, 5, 1, "", "unbind"], [1846, 5, 1, "", "unflatten"], [1847, 5, 1, "", "unique"], [1848, 5, 1, "", "unique_consecutive"], [1849, 5, 1, "", "unsqueeze"], [1850, 5, 1, "", "use_deterministic_algorithms"], [1960, 0, 0, "-", "utils"], [1855, 5, 1, "", "vander"], [1856, 5, 1, "", "var"], [1857, 5, 1, "", "var_mean"], [1858, 5, 1, "", "vdot"], [1859, 5, 1, "", "view_as_complex"], [1860, 5, 1, "", "view_as_real"], [1861, 5, 1, "", "vmap"], [1862, 5, 1, "", "vsplit"], [1863, 5, 1, "", "vstack"], [1864, 5, 1, "", "where"], [1865, 5, 1, "", "xlogy"], [1866, 5, 1, "", "zeros"], [1867, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1929, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1929, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1929, 2, 1, "", "dtype"]], "torch.CharStorage": [[1929, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1929, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1929, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1929, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1929, 2, 1, "", "dtype"]], "torch.Generator": [[76, 2, 1, "", "device"], [76, 3, 1, "", "get_state"], [76, 3, 1, "", "initial_seed"], [76, 3, 1, "", "manual_seed"], [76, 3, 1, "", "seed"], [76, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1929, 2, 1, "", "dtype"]], "torch.IntStorage": [[1929, 2, 1, "", "dtype"]], "torch.LongStorage": [[1929, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1929, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1929, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1929, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1929, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1929, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1929, 2, 1, "", "dtype"]], "torch.Tag": [[1935, 4, 1, "", "name"]], "torch.Tensor": [[1933, 2, 1, "", "H"], [1933, 2, 1, "", "T"], [77, 3, 1, "", "abs"], [78, 3, 1, "", "abs_"], [79, 3, 1, "", "absolute"], [80, 3, 1, "", "absolute_"], [81, 3, 1, "", "acos"], [82, 3, 1, "", "acos_"], [83, 3, 1, "", "acosh"], [84, 3, 1, "", "acosh_"], [85, 3, 1, "", "add"], [86, 3, 1, "", "add_"], [87, 3, 1, "", "addbmm"], [88, 3, 1, "", "addbmm_"], [89, 3, 1, "", "addcdiv"], [90, 3, 1, "", "addcdiv_"], [91, 3, 1, "", "addcmul"], [92, 3, 1, "", "addcmul_"], [93, 3, 1, "", "addmm"], [94, 3, 1, "", "addmm_"], [95, 3, 1, "", "addmv"], [96, 3, 1, "", "addmv_"], [97, 3, 1, "", "addr"], [98, 3, 1, "", "addr_"], [99, 3, 1, "", "adjoint"], [1887, 3, 1, "", "align_as"], [1887, 3, 1, "", "align_to"], [100, 3, 1, "", "all"], [101, 3, 1, "", "allclose"], [102, 3, 1, "", "amax"], [103, 3, 1, "", "amin"], [104, 3, 1, "", "aminmax"], [105, 3, 1, "", "angle"], [106, 3, 1, "", "any"], [107, 3, 1, "", "apply_"], [108, 3, 1, "", "arccos"], [109, 3, 1, "", "arccos_"], [110, 3, 1, "", "arccosh"], [111, 3, 1, "", "arccosh_"], [112, 3, 1, "", "arcsin"], [113, 3, 1, "", "arcsin_"], [114, 3, 1, "", "arcsinh"], [115, 3, 1, "", "arcsinh_"], [116, 3, 1, "", "arctan"], [117, 3, 1, "", "arctan2"], [118, 3, 1, "", "arctan2_"], [119, 3, 1, "", "arctan_"], [120, 3, 1, "", "arctanh"], [121, 3, 1, "", "arctanh_"], [122, 3, 1, "", "argmax"], [123, 3, 1, "", "argmin"], [124, 3, 1, "", "argsort"], [125, 3, 1, "", "argwhere"], [126, 3, 1, "", "as_strided"], [127, 3, 1, "", "as_subclass"], [128, 3, 1, "", "asin"], [129, 3, 1, "", "asin_"], [130, 3, 1, "", "asinh"], [131, 3, 1, "", "asinh_"], [132, 3, 1, "", "atan"], [133, 3, 1, "", "atan2"], [134, 3, 1, "", "atan2_"], [135, 3, 1, "", "atan_"], [136, 3, 1, "", "atanh"], [137, 3, 1, "", "atanh_"], [138, 3, 1, "", "backward"], [139, 3, 1, "", "baddbmm"], [140, 3, 1, "", "baddbmm_"], [141, 3, 1, "", "bernoulli"], [142, 3, 1, "", "bernoulli_"], [143, 3, 1, "", "bfloat16"], [144, 3, 1, "", "bincount"], [145, 3, 1, "", "bitwise_and"], [146, 3, 1, "", "bitwise_and_"], [147, 3, 1, "", "bitwise_left_shift"], [148, 3, 1, "", "bitwise_left_shift_"], [149, 3, 1, "", "bitwise_not"], [150, 3, 1, "", "bitwise_not_"], [151, 3, 1, "", "bitwise_or"], [152, 3, 1, "", "bitwise_or_"], [153, 3, 1, "", "bitwise_right_shift"], [154, 3, 1, "", "bitwise_right_shift_"], [155, 3, 1, "", "bitwise_xor"], [156, 3, 1, "", "bitwise_xor_"], [157, 3, 1, "", "bmm"], [158, 3, 1, "", "bool"], [159, 3, 1, "", "broadcast_to"], [160, 3, 1, "", "byte"], [161, 3, 1, "", "cauchy_"], [162, 3, 1, "", "ccol_indices"], [163, 3, 1, "", "cdouble"], [164, 3, 1, "", "ceil"], [165, 3, 1, "", "ceil_"], [166, 3, 1, "", "cfloat"], [167, 3, 1, "", "chalf"], [168, 3, 1, "", "char"], [169, 3, 1, "", "cholesky"], [170, 3, 1, "", "cholesky_inverse"], [171, 3, 1, "", "cholesky_solve"], [172, 3, 1, "", "chunk"], [173, 3, 1, "", "clamp"], [174, 3, 1, "", "clamp_"], [175, 3, 1, "", "clip"], [176, 3, 1, "", "clip_"], [177, 3, 1, "", "clone"], [178, 3, 1, "", "coalesce"], [179, 3, 1, "", "col_indices"], [180, 3, 1, "", "conj"], [181, 3, 1, "", "conj_physical"], [182, 3, 1, "", "conj_physical_"], [183, 3, 1, "", "contiguous"], [184, 3, 1, "", "copy_"], [185, 3, 1, "", "copysign"], [186, 3, 1, "", "copysign_"], [187, 3, 1, "", "corrcoef"], [188, 3, 1, "", "cos"], [189, 3, 1, "", "cos_"], [190, 3, 1, "", "cosh"], [191, 3, 1, "", "cosh_"], [192, 3, 1, "", "count_nonzero"], [193, 3, 1, "", "cov"], [194, 3, 1, "", "cpu"], [195, 3, 1, "", "cross"], [196, 3, 1, "", "crow_indices"], [197, 3, 1, "", "cuda"], [198, 3, 1, "", "cummax"], [199, 3, 1, "", "cummin"], [200, 3, 1, "", "cumprod"], [201, 3, 1, "", "cumprod_"], [202, 3, 1, "", "cumsum"], [203, 3, 1, "", "cumsum_"], [204, 3, 1, "", "data_ptr"], [205, 3, 1, "", "deg2rad"], [206, 3, 1, "", "dense_dim"], [207, 3, 1, "", "dequantize"], [208, 3, 1, "", "det"], [209, 3, 1, "", "detach"], [210, 3, 1, "", "detach_"], [211, 2, 1, "", "device"], [212, 3, 1, "", "diag"], [213, 3, 1, "", "diag_embed"], [214, 3, 1, "", "diagflat"], [215, 3, 1, "", "diagonal"], [216, 3, 1, "", "diagonal_scatter"], [217, 3, 1, "", "diff"], [218, 3, 1, "", "digamma"], [219, 3, 1, "", "digamma_"], [220, 3, 1, "", "dim"], [221, 3, 1, "", "dim_order"], [222, 3, 1, "", "dist"], [223, 3, 1, "", "div"], [224, 3, 1, "", "div_"], [225, 3, 1, "", "divide"], [226, 3, 1, "", "divide_"], [227, 3, 1, "", "dot"], [228, 3, 1, "", "double"], [229, 3, 1, "", "dsplit"], [230, 3, 1, "", "element_size"], [231, 3, 1, "", "eq"], [232, 3, 1, "", "eq_"], [233, 3, 1, "", "equal"], [234, 3, 1, "", "erf"], [235, 3, 1, "", "erf_"], [236, 3, 1, "", "erfc"], [237, 3, 1, "", "erfc_"], [238, 3, 1, "", "erfinv"], [239, 3, 1, "", "erfinv_"], [240, 3, 1, "", "exp"], [241, 3, 1, "", "exp_"], [242, 3, 1, "", "expand"], [243, 3, 1, "", "expand_as"], [244, 3, 1, "", "expm1"], [245, 3, 1, "", "expm1_"], [246, 3, 1, "", "exponential_"], [247, 3, 1, "", "fill_"], [248, 3, 1, "", "fill_diagonal_"], [249, 3, 1, "", "fix"], [250, 3, 1, "", "fix_"], [251, 3, 1, "", "flatten"], [252, 3, 1, "", "flip"], [253, 3, 1, "", "fliplr"], [254, 3, 1, "", "flipud"], [255, 3, 1, "", "float"], [256, 3, 1, "", "float_power"], [257, 3, 1, "", "float_power_"], [258, 3, 1, "", "floor"], [259, 3, 1, "", "floor_"], [260, 3, 1, "", "floor_divide"], [261, 3, 1, "", "floor_divide_"], [262, 3, 1, "", "fmax"], [263, 3, 1, "", "fmin"], [264, 3, 1, "", "fmod"], [265, 3, 1, "", "fmod_"], [266, 3, 1, "", "frac"], [267, 3, 1, "", "frac_"], [268, 3, 1, "", "frexp"], [269, 3, 1, "", "gather"], [270, 3, 1, "", "gcd"], [271, 3, 1, "", "gcd_"], [272, 3, 1, "", "ge"], [273, 3, 1, "", "ge_"], [274, 3, 1, "", "geometric_"], [275, 3, 1, "", "geqrf"], [276, 3, 1, "", "ger"], [277, 3, 1, "", "get_device"], [278, 2, 1, "", "grad"], [279, 3, 1, "", "greater"], [280, 3, 1, "", "greater_"], [281, 3, 1, "", "greater_equal"], [282, 3, 1, "", "greater_equal_"], [283, 3, 1, "", "gt"], [284, 3, 1, "", "gt_"], [285, 3, 1, "", "half"], [286, 3, 1, "", "hardshrink"], [287, 3, 1, "", "heaviside"], [288, 3, 1, "", "histc"], [289, 3, 1, "", "histogram"], [290, 3, 1, "", "hsplit"], [291, 3, 1, "", "hypot"], [292, 3, 1, "", "hypot_"], [293, 3, 1, "", "i0"], [294, 3, 1, "", "i0_"], [295, 3, 1, "", "igamma"], [296, 3, 1, "", "igamma_"], [297, 3, 1, "", "igammac"], [298, 3, 1, "", "igammac_"], [299, 2, 1, "", "imag"], [300, 3, 1, "", "index_add"], [301, 3, 1, "", "index_add_"], [302, 3, 1, "", "index_copy"], [303, 3, 1, "", "index_copy_"], [304, 3, 1, "", "index_fill"], [305, 3, 1, "", "index_fill_"], [306, 3, 1, "", "index_put"], [307, 3, 1, "", "index_put_"], [308, 3, 1, "", "index_reduce"], [309, 3, 1, "", "index_reduce_"], [310, 3, 1, "", "index_select"], [311, 3, 1, "", "indices"], [312, 3, 1, "", "inner"], [313, 3, 1, "", "int"], [314, 3, 1, "", "int_repr"], [315, 3, 1, "", "inverse"], [316, 3, 1, "", "is_coalesced"], [317, 3, 1, "", "is_complex"], [318, 3, 1, "", "is_conj"], [319, 3, 1, "", "is_contiguous"], [320, 2, 1, "", "is_cuda"], [321, 3, 1, "", "is_floating_point"], [322, 3, 1, "", "is_inference"], [323, 2, 1, "", "is_leaf"], [324, 2, 1, "", "is_meta"], [325, 3, 1, "", "is_pinned"], [326, 2, 1, "", "is_quantized"], [327, 3, 1, "", "is_set_to"], [328, 3, 1, "", "is_shared"], [329, 3, 1, "", "is_signed"], [330, 2, 1, "", "is_sparse"], [331, 2, 1, "", "is_sparse_csr"], [332, 3, 1, "", "isclose"], [333, 3, 1, "", "isfinite"], [334, 3, 1, "", "isinf"], [335, 3, 1, "", "isnan"], [336, 3, 1, "", "isneginf"], [337, 3, 1, "", "isposinf"], [338, 3, 1, "", "isreal"], [339, 3, 1, "", "istft"], [340, 3, 1, "", "item"], [341, 2, 1, "", "itemsize"], [342, 3, 1, "", "kthvalue"], [343, 3, 1, "", "lcm"], [344, 3, 1, "", "lcm_"], [345, 3, 1, "", "ldexp"], [346, 3, 1, "", "ldexp_"], [347, 3, 1, "", "le"], [348, 3, 1, "", "le_"], [349, 3, 1, "", "lerp"], [350, 3, 1, "", "lerp_"], [351, 3, 1, "", "less"], [352, 3, 1, "", "less_"], [353, 3, 1, "", "less_equal"], [354, 3, 1, "", "less_equal_"], [355, 3, 1, "", "lgamma"], [356, 3, 1, "", "lgamma_"], [357, 3, 1, "", "log"], [358, 3, 1, "", "log10"], [359, 3, 1, "", "log10_"], [360, 3, 1, "", "log1p"], [361, 3, 1, "", "log1p_"], [362, 3, 1, "", "log2"], [363, 3, 1, "", "log2_"], [364, 3, 1, "", "log_"], [365, 3, 1, "", "log_normal_"], [366, 3, 1, "", "logaddexp"], [367, 3, 1, "", "logaddexp2"], [368, 3, 1, "", "logcumsumexp"], [369, 3, 1, "", "logdet"], [370, 3, 1, "", "logical_and"], [371, 3, 1, "", "logical_and_"], [372, 3, 1, "", "logical_not"], [373, 3, 1, "", "logical_not_"], [374, 3, 1, "", "logical_or"], [375, 3, 1, "", "logical_or_"], [376, 3, 1, "", "logical_xor"], [377, 3, 1, "", "logical_xor_"], [378, 3, 1, "", "logit"], [379, 3, 1, "", "logit_"], [380, 3, 1, "", "logsumexp"], [381, 3, 1, "", "long"], [382, 3, 1, "", "lt"], [383, 3, 1, "", "lt_"], [384, 3, 1, "", "lu"], [385, 3, 1, "", "lu_solve"], [1933, 2, 1, "", "mH"], [1933, 2, 1, "", "mT"], [386, 3, 1, "", "map_"], [387, 3, 1, "", "masked_fill"], [388, 3, 1, "", "masked_fill_"], [389, 3, 1, "", "masked_scatter"], [390, 3, 1, "", "masked_scatter_"], [391, 3, 1, "", "masked_select"], [392, 3, 1, "", "matmul"], [393, 3, 1, "", "matrix_exp"], [394, 3, 1, "", "matrix_power"], [395, 3, 1, "", "max"], [396, 3, 1, "", "maximum"], [397, 3, 1, "", "mean"], [398, 3, 1, "", "median"], [399, 3, 1, "", "min"], [400, 3, 1, "", "minimum"], [401, 3, 1, "", "mm"], [402, 3, 1, "", "mode"], [403, 3, 1, "", "moveaxis"], [404, 3, 1, "", "movedim"], [405, 3, 1, "", "msort"], [406, 3, 1, "", "mul"], [407, 3, 1, "", "mul_"], [408, 3, 1, "", "multinomial"], [409, 3, 1, "", "multiply"], [410, 3, 1, "", "multiply_"], [411, 3, 1, "", "mv"], [412, 3, 1, "", "mvlgamma"], [413, 3, 1, "", "mvlgamma_"], [1887, 2, 1, "", "names"], [414, 3, 1, "", "nan_to_num"], [415, 3, 1, "", "nan_to_num_"], [416, 3, 1, "", "nanmean"], [417, 3, 1, "", "nanmedian"], [418, 3, 1, "", "nanquantile"], [419, 3, 1, "", "nansum"], [420, 3, 1, "", "narrow"], [421, 3, 1, "", "narrow_copy"], [422, 2, 1, "", "nbytes"], [423, 2, 1, "", "ndim"], [424, 3, 1, "", "ndimension"], [425, 3, 1, "", "ne"], [426, 3, 1, "", "ne_"], [427, 3, 1, "", "neg"], [428, 3, 1, "", "neg_"], [429, 3, 1, "", "negative"], [430, 3, 1, "", "negative_"], [431, 3, 1, "", "nelement"], [432, 3, 1, "", "new_empty"], [433, 3, 1, "", "new_full"], [434, 3, 1, "", "new_ones"], [435, 3, 1, "", "new_tensor"], [436, 3, 1, "", "new_zeros"], [437, 3, 1, "", "nextafter"], [438, 3, 1, "", "nextafter_"], [439, 3, 1, "", "nonzero"], [440, 3, 1, "", "norm"], [441, 3, 1, "", "normal_"], [442, 3, 1, "", "not_equal"], [443, 3, 1, "", "not_equal_"], [444, 3, 1, "", "numel"], [445, 3, 1, "", "numpy"], [446, 3, 1, "", "orgqr"], [447, 3, 1, "", "ormqr"], [448, 3, 1, "", "outer"], [449, 3, 1, "", "permute"], [450, 3, 1, "", "pin_memory"], [451, 3, 1, "", "pinverse"], [452, 3, 1, "", "polygamma"], [453, 3, 1, "", "polygamma_"], [454, 3, 1, "", "positive"], [455, 3, 1, "", "pow"], [456, 3, 1, "", "pow_"], [457, 3, 1, "", "prod"], [458, 3, 1, "", "put_"], [459, 3, 1, "", "q_per_channel_axis"], [460, 3, 1, "", "q_per_channel_scales"], [461, 3, 1, "", "q_per_channel_zero_points"], [462, 3, 1, "", "q_scale"], [463, 3, 1, "", "q_zero_point"], [464, 3, 1, "", "qr"], [465, 3, 1, "", "qscheme"], [466, 3, 1, "", "quantile"], [467, 3, 1, "", "rad2deg"], [468, 3, 1, "", "random_"], [469, 3, 1, "", "ravel"], [470, 2, 1, "", "real"], [471, 3, 1, "", "reciprocal"], [472, 3, 1, "", "reciprocal_"], [473, 3, 1, "", "record_stream"], [1887, 3, 1, "", "refine_names"], [474, 3, 1, "", "register_hook"], [475, 3, 1, "", "register_post_accumulate_grad_hook"], [476, 3, 1, "", "remainder"], [477, 3, 1, "", "remainder_"], [1887, 3, 1, "", "rename"], [1887, 3, 1, "", "rename_"], [478, 3, 1, "", "renorm"], [479, 3, 1, "", "renorm_"], [480, 3, 1, "", "repeat"], [481, 3, 1, "", "repeat_interleave"], [482, 2, 1, "", "requires_grad"], [483, 3, 1, "", "requires_grad_"], [484, 3, 1, "", "reshape"], [485, 3, 1, "", "reshape_as"], [486, 3, 1, "", "resize_"], [487, 3, 1, "", "resize_as_"], [488, 3, 1, "", "resolve_conj"], [489, 3, 1, "", "resolve_neg"], [490, 3, 1, "", "retain_grad"], [491, 2, 1, "", "retains_grad"], [492, 3, 1, "", "roll"], [493, 3, 1, "", "rot90"], [494, 3, 1, "", "round"], [495, 3, 1, "", "round_"], [496, 3, 1, "", "row_indices"], [497, 3, 1, "", "rsqrt"], [498, 3, 1, "", "rsqrt_"], [499, 3, 1, "", "scatter"], [500, 3, 1, "", "scatter_"], [501, 3, 1, "", "scatter_add"], [502, 3, 1, "", "scatter_add_"], [503, 3, 1, "", "scatter_reduce"], [504, 3, 1, "", "scatter_reduce_"], [505, 3, 1, "", "select"], [506, 3, 1, "", "select_scatter"], [507, 3, 1, "", "set_"], [508, 3, 1, "", "sgn"], [509, 3, 1, "", "sgn_"], [510, 2, 1, "", "shape"], [511, 3, 1, "", "share_memory_"], [512, 3, 1, "", "short"], [513, 3, 1, "", "sigmoid"], [514, 3, 1, "", "sigmoid_"], [515, 3, 1, "", "sign"], [516, 3, 1, "", "sign_"], [517, 3, 1, "", "signbit"], [518, 3, 1, "", "sin"], [519, 3, 1, "", "sin_"], [520, 3, 1, "", "sinc"], [521, 3, 1, "", "sinc_"], [522, 3, 1, "", "sinh"], [523, 3, 1, "", "sinh_"], [524, 3, 1, "", "size"], [525, 3, 1, "", "slice_scatter"], [526, 3, 1, "", "slogdet"], [527, 3, 1, "", "smm"], [528, 3, 1, "", "softmax"], [529, 3, 1, "", "sort"], [530, 3, 1, "", "sparse_dim"], [531, 3, 1, "", "sparse_mask"], [532, 3, 1, "", "sparse_resize_"], [533, 3, 1, "", "sparse_resize_and_clear_"], [534, 3, 1, "", "split"], [535, 3, 1, "", "sqrt"], [536, 3, 1, "", "sqrt_"], [537, 3, 1, "", "square"], [538, 3, 1, "", "square_"], [539, 3, 1, "", "squeeze"], [540, 3, 1, "", "squeeze_"], [541, 3, 1, "", "sspaddmm"], [542, 3, 1, "", "std"], [543, 3, 1, "", "stft"], [544, 3, 1, "", "storage"], [545, 3, 1, "", "storage_offset"], [546, 3, 1, "", "storage_type"], [547, 3, 1, "", "stride"], [548, 3, 1, "", "sub"], [549, 3, 1, "", "sub_"], [550, 3, 1, "", "subtract"], [551, 3, 1, "", "subtract_"], [552, 3, 1, "", "sum"], [553, 3, 1, "", "sum_to_size"], [554, 3, 1, "", "svd"], [555, 3, 1, "", "swapaxes"], [556, 3, 1, "", "swapdims"], [557, 3, 1, "", "t"], [558, 3, 1, "", "t_"], [559, 3, 1, "", "take"], [560, 3, 1, "", "take_along_dim"], [561, 3, 1, "", "tan"], [562, 3, 1, "", "tan_"], [563, 3, 1, "", "tanh"], [564, 3, 1, "", "tanh_"], [565, 3, 1, "", "tensor_split"], [566, 3, 1, "", "tile"], [567, 3, 1, "", "to"], [568, 3, 1, "", "to_dense"], [569, 3, 1, "", "to_mkldnn"], [570, 3, 1, "", "to_sparse"], [571, 3, 1, "", "to_sparse_bsc"], [572, 3, 1, "", "to_sparse_bsr"], [573, 3, 1, "", "to_sparse_coo"], [574, 3, 1, "", "to_sparse_csc"], [575, 3, 1, "", "to_sparse_csr"], [576, 3, 1, "", "tolist"], [577, 3, 1, "", "topk"], [578, 3, 1, "", "trace"], [579, 3, 1, "", "transpose"], [580, 3, 1, "", "transpose_"], [581, 3, 1, "", "triangular_solve"], [582, 3, 1, "", "tril"], [583, 3, 1, "", "tril_"], [584, 3, 1, "", "triu"], [585, 3, 1, "", "triu_"], [586, 3, 1, "", "true_divide"], [587, 3, 1, "", "true_divide_"], [588, 3, 1, "", "trunc"], [589, 3, 1, "", "trunc_"], [590, 3, 1, "", "type"], [591, 3, 1, "", "type_as"], [592, 3, 1, "", "unbind"], [593, 3, 1, "", "unflatten"], [594, 3, 1, "", "unfold"], [595, 3, 1, "", "uniform_"], [596, 3, 1, "", "unique"], [597, 3, 1, "", "unique_consecutive"], [598, 3, 1, "", "unsqueeze"], [599, 3, 1, "", "unsqueeze_"], [600, 3, 1, "", "untyped_storage"], [601, 3, 1, "", "values"], [602, 3, 1, "", "var"], [603, 3, 1, "", "vdot"], [604, 3, 1, "", "view"], [605, 3, 1, "", "view_as"], [606, 3, 1, "", "vsplit"], [607, 3, 1, "", "where"], [608, 3, 1, "", "xlogy"], [609, 3, 1, "", "xlogy_"], [610, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1929, 3, 1, "", "bfloat16"], [1929, 3, 1, "", "bool"], [1929, 3, 1, "", "byte"], [1929, 3, 1, "", "char"], [1929, 3, 1, "", "clone"], [1929, 3, 1, "", "complex_double"], [1929, 3, 1, "", "complex_float"], [1929, 3, 1, "", "copy_"], [1929, 3, 1, "", "cpu"], [1929, 3, 1, "", "cuda"], [1929, 3, 1, "", "data_ptr"], [1929, 4, 1, "", "device"], [1929, 3, 1, "", "double"], [1929, 2, 1, "", "dtype"], [1929, 3, 1, "", "element_size"], [1929, 3, 1, "", "fill_"], [1929, 3, 1, "", "float"], [1929, 3, 1, "", "from_buffer"], [1929, 3, 1, "", "from_file"], [1929, 3, 1, "", "get_device"], [1929, 3, 1, "", "half"], [1929, 3, 1, "", "hpu"], [1929, 3, 1, "", "int"], [1929, 4, 1, "", "is_cuda"], [1929, 4, 1, "", "is_hpu"], [1929, 3, 1, "", "is_pinned"], [1929, 3, 1, "", "is_shared"], [1929, 2, 1, "", "is_sparse"], [1929, 3, 1, "", "long"], [1929, 3, 1, "", "nbytes"], [1929, 3, 1, "", "pickle_storage_type"], [1929, 3, 1, "", "pin_memory"], [1929, 3, 1, "", "resize_"], [1929, 3, 1, "", "share_memory_"], [1929, 3, 1, "", "short"], [1929, 3, 1, "", "size"], [1929, 3, 1, "", "tolist"], [1929, 3, 1, "", "type"], [1929, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1929, 3, 1, "", "bfloat16"], [1929, 3, 1, "", "bool"], [1929, 3, 1, "", "byte"], [1929, 3, 1, "", "byteswap"], [1929, 3, 1, "", "char"], [1929, 3, 1, "", "clone"], [1929, 3, 1, "", "complex_double"], [1929, 3, 1, "", "complex_float"], [1929, 3, 1, "", "copy_"], [1929, 3, 1, "", "cpu"], [1929, 3, 1, "", "cuda"], [1929, 3, 1, "", "data_ptr"], [1929, 2, 1, "", "device"], [1929, 3, 1, "", "double"], [1929, 3, 1, "", "element_size"], [1929, 3, 1, "", "fill_"], [1929, 3, 1, "", "float"], [1929, 3, 1, "", "from_buffer"], [1929, 3, 1, "", "from_file"], [1929, 3, 1, "", "get_device"], [1929, 3, 1, "", "half"], [1929, 3, 1, "", "hpu"], [1929, 3, 1, "", "int"], [1929, 4, 1, "", "is_cuda"], [1929, 4, 1, "", "is_hpu"], [1929, 3, 1, "", "is_pinned"], [1929, 3, 1, "", "is_shared"], [1929, 2, 1, "", "is_sparse"], [1929, 2, 1, "", "is_sparse_csr"], [1929, 3, 1, "", "long"], [1929, 3, 1, "", "mps"], [1929, 3, 1, "", "nbytes"], [1929, 3, 1, "", "new"], [1929, 3, 1, "", "pin_memory"], [1929, 3, 1, "", "resize_"], [1929, 3, 1, "", "share_memory_"], [1929, 3, 1, "", "short"], [1929, 3, 1, "", "size"], [1929, 3, 1, "", "tolist"], [1929, 3, 1, "", "type"], [1929, 3, 1, "", "untyped"]], "torch.__config__": [[12, 5, 1, "", "parallel_info"], [12, 5, 1, "", "show"]], "torch._logging": [[667, 5, 1, "", "set_logs"]], "torch.ao": [[1918, 0, 0, "-", "nn"], [1918, 0, 0, "-", "ns"], [1918, 0, 0, "-", "pruning"], [1918, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1921, 0, 0, "-", "intrinsic"], [1921, 0, 0, "-", "qat"], [1918, 0, 0, "-", "quantizable"], [1918, 0, 0, "-", "quantized"], [1918, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[687, 1, 1, "", "BNReLU2d"], [688, 1, 1, "", "BNReLU3d"], [689, 1, 1, "", "ConvBn1d"], [690, 1, 1, "", "ConvBn2d"], [691, 1, 1, "", "ConvBn3d"], [692, 1, 1, "", "ConvBnReLU1d"], [693, 1, 1, "", "ConvBnReLU2d"], [694, 1, 1, "", "ConvBnReLU3d"], [695, 1, 1, "", "ConvReLU1d"], [696, 1, 1, "", "ConvReLU2d"], [697, 1, 1, "", "ConvReLU3d"], [698, 1, 1, "", "LinearReLU"], [1921, 0, 0, "-", "modules"], [1921, 0, 0, "-", "qat"], [1921, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[699, 1, 1, "", "ConvBn1d"], [700, 1, 1, "", "ConvBn2d"], [701, 1, 1, "", "ConvBn3d"], [702, 1, 1, "", "ConvBnReLU1d"], [703, 1, 1, "", "ConvBnReLU2d"], [704, 1, 1, "", "ConvBnReLU3d"], [705, 1, 1, "", "ConvReLU2d"], [706, 1, 1, "", "ConvReLU3d"], [707, 1, 1, "", "LinearReLU"], [708, 1, 1, "", "freeze_bn_stats"], [1921, 0, 0, "-", "modules"], [709, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[710, 1, 1, "", "BNReLU2d"], [711, 1, 1, "", "BNReLU3d"], [712, 1, 1, "", "ConvReLU1d"], [713, 1, 1, "", "ConvReLU2d"], [714, 1, 1, "", "ConvReLU3d"], [715, 1, 1, "", "LinearReLU"], [1921, 0, 0, "-", "dynamic"], [1921, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[716, 1, 1, "", "LinearReLU"], [1921, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[717, 1, 1, "", "Conv2d"], [718, 1, 1, "", "Conv3d"], [719, 1, 1, "", "Linear"], [1921, 0, 0, "-", "dynamic"], [1921, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[719, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[720, 1, 1, "", "Linear"], [1921, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[721, 1, 1, "", "LSTM"], [722, 1, 1, "", "MultiheadAttention"], [1918, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[722, 3, 1, "", "dequantize"], [722, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[723, 1, 1, "", "BatchNorm2d"], [724, 1, 1, "", "BatchNorm3d"], [725, 1, 1, "", "Conv1d"], [726, 1, 1, "", "Conv2d"], [727, 1, 1, "", "Conv3d"], [728, 1, 1, "", "ConvTranspose1d"], [729, 1, 1, "", "ConvTranspose2d"], [730, 1, 1, "", "ConvTranspose3d"], [731, 1, 1, "", "ELU"], [732, 1, 1, "", "Embedding"], [733, 1, 1, "", "EmbeddingBag"], [734, 1, 1, "", "FXFloatFunctional"], [735, 1, 1, "", "FloatFunctional"], [736, 1, 1, "", "GroupNorm"], [737, 1, 1, "", "Hardswish"], [738, 1, 1, "", "InstanceNorm1d"], [739, 1, 1, "", "InstanceNorm2d"], [740, 1, 1, "", "InstanceNorm3d"], [741, 1, 1, "", "LayerNorm"], [742, 1, 1, "", "LeakyReLU"], [743, 1, 1, "", "Linear"], [744, 1, 1, "", "QFunctional"], [745, 1, 1, "", "ReLU6"], [746, 1, 1, "", "Sigmoid"], [1921, 0, 0, "-", "dynamic"], [1921, 0, 0, "-", "functional"], [1921, 0, 0, "-", "modules"], [1918, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[725, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[726, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[727, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[732, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[733, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[743, 3, 1, "", "from_float"], [743, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[747, 1, 1, "", "GRU"], [748, 1, 1, "", "GRUCell"], [749, 1, 1, "", "LSTM"], [750, 1, 1, "", "LSTMCell"], [751, 1, 1, "", "Linear"], [752, 1, 1, "", "RNNCell"], [1921, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[751, 3, 1, "", "from_float"], [751, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[753, 1, 1, "", "adaptive_avg_pool2d"], [754, 1, 1, "", "adaptive_avg_pool3d"], [755, 1, 1, "", "avg_pool2d"], [756, 1, 1, "", "avg_pool3d"], [757, 1, 1, "", "celu"], [758, 1, 1, "", "clamp"], [759, 1, 1, "", "conv1d"], [760, 1, 1, "", "conv2d"], [761, 1, 1, "", "conv3d"], [762, 1, 1, "", "elu"], [763, 1, 1, "", "hardsigmoid"], [764, 1, 1, "", "hardswish"], [765, 1, 1, "", "hardtanh"], [766, 1, 1, "", "interpolate"], [767, 1, 1, "", "leaky_relu"], [768, 1, 1, "", "linear"], [769, 1, 1, "", "max_pool1d"], [770, 1, 1, "", "max_pool2d"], [771, 1, 1, "", "threshold"], [772, 1, 1, "", "upsample"], [773, 1, 1, "", "upsample_bilinear"], [774, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1918, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1918, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1918, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1936, 0, 0, "-", "_numeric_suite"], [1937, 0, 0, "-", "_numeric_suite_fx"], [1918, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1936, 1, 1, "", "Logger"], [1936, 1, 1, "", "OutputLogger"], [1936, 1, 1, "", "Shadow"], [1936, 1, 1, "", "ShadowLogger"], [1936, 5, 1, "", "compare_model_outputs"], [1936, 5, 1, "", "compare_model_stub"], [1936, 5, 1, "", "compare_weights"], [1936, 5, 1, "", "get_logger_dict"], [1936, 5, 1, "", "get_matching_activations"], [1936, 5, 1, "", "prepare_model_outputs"], [1936, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1936, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1936, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1936, 3, 1, "", "add"], [1936, 3, 1, "", "add_relu"], [1936, 3, 1, "", "add_scalar"], [1936, 3, 1, "", "cat"], [1936, 3, 1, "", "forward"], [1936, 3, 1, "", "mul"], [1936, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1936, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1937, 1, 1, "", "NSTracer"], [1937, 1, 1, "", "OutputComparisonLogger"], [1937, 1, 1, "", "OutputLogger"], [1937, 5, 1, "", "add_loggers"], [1937, 5, 1, "", "add_shadow_loggers"], [1937, 5, 1, "", "convert_n_shadows_model"], [1937, 5, 1, "", "extend_logger_results_with_comparison"], [1937, 5, 1, "", "extract_logger_info"], [1937, 5, 1, "", "extract_results_n_shadows_model"], [1937, 5, 1, "", "extract_shadow_logger_info"], [1937, 5, 1, "", "extract_weights"], [1937, 5, 1, "", "loggers_set_enabled"], [1937, 5, 1, "", "loggers_set_save_activations"], [1937, 5, 1, "", "prepare_n_shadows_model"], [1937, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1937, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1937, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1937, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1937, 5, 1, "", "compute_cosine_similarity"], [1937, 5, 1, "", "compute_normalized_l2_error"], [1937, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1918, 0, 0, "-", "scheduler"], [1918, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[775, 1, 1, "", "DeQuantStub"], [776, 1, 1, "", "QuantStub"], [777, 1, 1, "", "QuantWrapper"], [778, 1, 1, "", "add_quant_dequant"], [1918, 0, 0, "-", "backend_config"], [784, 1, 1, "", "convert"], [785, 1, 1, "", "default_eval_fn"], [801, 1, 1, "", "fuse_modules"], [1918, 0, 0, "-", "fx"], [825, 1, 1, "", "prepare"], [826, 1, 1, "", "prepare_qat"], [827, 1, 1, "", "propagate_qconfig_"], [1921, 0, 0, "-", "pt2e"], [844, 1, 1, "", "quantize"], [845, 1, 1, "", "quantize_dynamic"], [850, 1, 1, "", "quantize_qat"], [1921, 0, 0, "-", "quantizer"], [851, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[779, 1, 1, "", "BackendConfig"], [780, 1, 1, "", "BackendPatternConfig"], [781, 1, 1, "", "DTypeConfig"], [782, 1, 1, "", "DTypeWithConstraints"], [783, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[779, 4, 1, "", "configs"], [779, 3, 1, "", "from_dict"], [779, 3, 1, "", "set_backend_pattern_config"], [779, 3, 1, "", "set_backend_pattern_configs"], [779, 3, 1, "", "set_name"], [779, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[780, 3, 1, "", "add_dtype_config"], [780, 3, 1, "", "from_dict"], [780, 3, 1, "", "set_dtype_configs"], [780, 3, 1, "", "set_fused_module"], [780, 3, 1, "", "set_fuser_method"], [780, 3, 1, "", "set_observation_type"], [780, 3, 1, "", "set_pattern"], [780, 3, 1, "", "set_qat_module"], [780, 3, 1, "", "set_reference_quantized_module"], [780, 3, 1, "", "set_root_module"], [780, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[781, 3, 1, "", "from_dict"], [781, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[783, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [783, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [783, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[786, 1, 1, "", "FakeQuantize"], [787, 1, 1, "", "FakeQuantizeBase"], [788, 1, 1, "", "FixedQParamsFakeQuantize"], [789, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [790, 2, 1, "", "default_fake_quant"], [791, 2, 1, "", "default_fused_act_fake_quant"], [792, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [793, 2, 1, "", "default_fused_wt_fake_quant"], [794, 2, 1, "", "default_histogram_fake_quant"], [795, 2, 1, "", "default_per_channel_weight_fake_quant"], [796, 2, 1, "", "default_weight_fake_quant"], [797, 1, 1, "", "disable_fake_quant"], [798, 1, 1, "", "disable_observer"], [799, 1, 1, "", "enable_fake_quant"], [800, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[802, 1, 1, "", "ConvertCustomConfig"], [803, 1, 1, "", "FuseCustomConfig"], [804, 1, 1, "", "PrepareCustomConfig"], [805, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[802, 3, 1, "", "from_dict"], [802, 3, 1, "", "set_observed_to_quantized_mapping"], [802, 3, 1, "", "set_preserved_attributes"], [802, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[803, 3, 1, "", "from_dict"], [803, 3, 1, "", "set_preserved_attributes"], [803, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[804, 3, 1, "", "from_dict"], [804, 3, 1, "", "set_float_to_observed_mapping"], [804, 3, 1, "", "set_input_quantized_indexes"], [804, 3, 1, "", "set_non_traceable_module_classes"], [804, 3, 1, "", "set_non_traceable_module_names"], [804, 3, 1, "", "set_output_quantized_indexes"], [804, 3, 1, "", "set_preserved_attributes"], [804, 3, 1, "", "set_standalone_module_class"], [804, 3, 1, "", "set_standalone_module_name"], [804, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[806, 1, 1, "", "HistogramObserver"], [807, 1, 1, "", "MinMaxObserver"], [808, 1, 1, "", "MovingAverageMinMaxObserver"], [809, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [810, 1, 1, "", "NoopObserver"], [811, 1, 1, "", "ObserverBase"], [812, 1, 1, "", "PerChannelMinMaxObserver"], [813, 1, 1, "", "PlaceholderObserver"], [814, 1, 1, "", "RecordingObserver"], [815, 2, 1, "", "default_debug_observer"], [816, 2, 1, "", "default_dynamic_quant_observer"], [817, 2, 1, "", "default_float_qparams_observer"], [818, 2, 1, "", "default_histogram_observer"], [819, 2, 1, "", "default_observer"], [820, 2, 1, "", "default_per_channel_weight_observer"], [821, 2, 1, "", "default_placeholder_observer"], [822, 2, 1, "", "default_weight_observer"], [823, 1, 1, "", "get_observer_state_dict"], [824, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[807, 3, 1, "", "calculate_qparams"], [807, 3, 1, "", "forward"], [807, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[811, 3, 1, "", "with_args"], [811, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[812, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[1921, 0, 0, "-", "representation"]], "torch.ao.quantization.qconfig": [[828, 1, 1, "", "QConfig"], [829, 2, 1, "", "default_activation_only_qconfig"], [830, 2, 1, "", "default_debug_qconfig"], [831, 2, 1, "", "default_dynamic_qconfig"], [832, 2, 1, "", "default_per_channel_qconfig"], [833, 2, 1, "", "default_qat_qconfig"], [834, 2, 1, "", "default_qat_qconfig_v2"], [835, 2, 1, "", "default_qconfig"], [836, 2, 1, "", "default_weight_only_qconfig"], [837, 2, 1, "", "float16_dynamic_qconfig"], [838, 2, 1, "", "float16_static_qconfig"], [839, 2, 1, "", "float_qparams_weight_only_qconfig"], [840, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[841, 1, 1, "", "QConfigMapping"], [842, 1, 1, "", "get_default_qat_qconfig_mapping"], [843, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[841, 3, 1, "", "from_dict"], [841, 3, 1, "", "set_global"], [841, 3, 1, "", "set_module_name"], [841, 3, 1, "", "set_module_name_object_type_order"], [841, 3, 1, "", "set_module_name_regex"], [841, 3, 1, "", "set_object_type"], [841, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[846, 1, 1, "", "convert_fx"], [847, 1, 1, "", "fuse_fx"], [848, 1, 1, "", "prepare_fx"], [849, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[1, 1, 1, "", "Function"], [880, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [894, 5, 1, "", "grad"], [895, 5, 1, "", "gradcheck"], [896, 5, 1, "", "gradgradcheck"], [1, 1, 1, "", "set_detect_anomaly"]], "torch.autograd.Function": [[876, 3, 1, "", "backward"], [877, 3, 1, "", "forward"], [878, 3, 1, "", "jvp"], [879, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[881, 1, 1, "", "dual_level"], [882, 5, 1, "", "make_dual"], [883, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[884, 3, 1, "", "mark_dirty"], [885, 3, 1, "", "mark_non_differentiable"], [886, 3, 1, "", "save_for_backward"], [887, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[888, 5, 1, "", "hessian"], [889, 5, 1, "", "hvp"], [890, 5, 1, "", "jacobian"], [891, 5, 1, "", "jvp"], [892, 5, 1, "", "vhp"], [893, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[897, 3, 1, "", "metadata"], [898, 3, 1, "", "name"], [899, 4, 1, "", "next_functions"], [900, 3, 1, "", "register_hook"], [901, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [902, 5, 1, "", "load_nvprof"], [1, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[903, 3, 1, "", "export_chrome_trace"], [904, 3, 1, "", "key_averages"], [905, 4, 1, "", "self_cpu_time_total"], [906, 3, 1, "", "total_average"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPBackend"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "version"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.compiler": [[941, 5, 1, "", "allow_in_graph"], [942, 5, 1, "", "assume_constant_result"], [943, 5, 1, "", "compile"], [944, 5, 1, "", "disable"], [945, 5, 1, "", "list_backends"], [946, 5, 1, "", "reset"]], "torch.cpu": [[958, 1, 1, "", "Stream"], [959, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [960, 5, 1, "", "current_stream"], [961, 5, 1, "", "device_count"], [962, 5, 1, "", "is_available"], [963, 5, 1, "", "stream"], [964, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"]], "torch.cuda": [[966, 1, 1, "", "CUDAGraph"], [967, 1, 1, "", "CUDAPluggableAllocator"], [968, 1, 1, "", "Event"], [969, 1, 1, "", "ExternalStream"], [970, 6, 1, "", "OutOfMemoryError"], [971, 1, 1, "", "Stream"], [972, 1, 1, "", "StreamContext"], [17, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [973, 5, 1, "", "caching_allocator_alloc"], [974, 5, 1, "", "caching_allocator_delete"], [975, 5, 1, "", "can_device_access_peer"], [976, 5, 1, "", "change_current_allocator"], [977, 5, 1, "", "clock_rate"], [983, 5, 1, "", "current_blas_handle"], [984, 5, 1, "", "current_device"], [985, 5, 1, "", "current_stream"], [986, 5, 1, "", "default_stream"], [987, 1, 1, "", "device"], [988, 5, 1, "", "device_count"], [989, 1, 1, "", "device_of"], [990, 5, 1, "", "empty_cache"], [991, 5, 1, "", "get_allocator_backend"], [992, 5, 1, "", "get_arch_list"], [993, 5, 1, "", "get_device_capability"], [994, 5, 1, "", "get_device_name"], [995, 5, 1, "", "get_device_properties"], [996, 5, 1, "", "get_gencode_flags"], [997, 5, 1, "", "get_rng_state"], [998, 5, 1, "", "get_rng_state_all"], [999, 5, 1, "", "get_sync_debug_mode"], [1000, 1, 1, "", "graph"], [1001, 5, 1, "", "graph_pool_handle"], [1002, 5, 1, "", "init"], [1003, 5, 1, "", "initial_seed"], [1004, 5, 1, "", "ipc_collect"], [1005, 5, 1, "", "is_available"], [1006, 5, 1, "", "is_current_stream_capturing"], [1007, 5, 1, "", "is_initialized"], [1010, 5, 1, "", "list_gpu_processes"], [1011, 5, 1, "", "make_graphed_callables"], [1012, 5, 1, "", "manual_seed"], [1013, 5, 1, "", "manual_seed_all"], [1014, 5, 1, "", "max_memory_allocated"], [1015, 5, 1, "", "max_memory_cached"], [1016, 5, 1, "", "max_memory_reserved"], [1017, 5, 1, "", "mem_get_info"], [1018, 5, 1, "", "memory_allocated"], [1019, 5, 1, "", "memory_cached"], [1020, 5, 1, "", "memory_reserved"], [1021, 5, 1, "", "memory_snapshot"], [1022, 5, 1, "", "memory_stats"], [1023, 5, 1, "", "memory_summary"], [1024, 5, 1, "", "memory_usage"], [1028, 5, 1, "", "power_draw"], [1029, 5, 1, "", "reset_max_memory_allocated"], [1030, 5, 1, "", "reset_max_memory_cached"], [1031, 5, 1, "", "reset_peak_memory_stats"], [1032, 5, 1, "", "seed"], [1033, 5, 1, "", "seed_all"], [1034, 5, 1, "", "set_device"], [1035, 5, 1, "", "set_per_process_memory_fraction"], [1036, 5, 1, "", "set_rng_state"], [1037, 5, 1, "", "set_rng_state_all"], [1038, 5, 1, "", "set_stream"], [1039, 5, 1, "", "set_sync_debug_mode"], [1040, 5, 1, "", "stream"], [1041, 5, 1, "", "synchronize"], [1042, 5, 1, "", "temperature"], [1043, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[966, 3, 1, "", "capture_begin"], [966, 3, 1, "", "capture_end"], [966, 3, 1, "", "debug_dump"], [966, 3, 1, "", "enable_debug_mode"], [966, 3, 1, "", "pool"], [966, 3, 1, "", "replay"], [966, 3, 1, "", "reset"]], "torch.cuda.Event": [[968, 3, 1, "", "elapsed_time"], [968, 3, 1, "", "from_ipc_handle"], [968, 3, 1, "", "ipc_handle"], [968, 3, 1, "", "query"], [968, 3, 1, "", "record"], [968, 3, 1, "", "synchronize"], [968, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[969, 3, 1, "", "query"], [969, 3, 1, "", "record_event"], [969, 3, 1, "", "synchronize"], [969, 3, 1, "", "wait_event"], [969, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[971, 3, 1, "", "query"], [971, 3, 1, "", "record_event"], [971, 3, 1, "", "synchronize"], [971, 3, 1, "", "wait_event"], [971, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[17, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[0, 3, 1, "", "get_backoff_factor"], [0, 3, 1, "", "get_growth_factor"], [0, 3, 1, "", "get_growth_interval"], [0, 3, 1, "", "get_scale"], [0, 3, 1, "", "is_enabled"], [0, 3, 1, "", "load_state_dict"], [0, 3, 1, "", "scale"], [0, 3, 1, "", "set_backoff_factor"], [0, 3, 1, "", "set_growth_factor"], [0, 3, 1, "", "set_growth_interval"], [0, 3, 1, "", "state_dict"], [0, 3, 1, "", "step"], [0, 3, 1, "", "unscale_"], [0, 3, 1, "", "update"]], "torch.cuda.comm": [[978, 5, 1, "", "broadcast"], [979, 5, 1, "", "broadcast_coalesced"], [980, 5, 1, "", "gather"], [981, 5, 1, "", "reduce_add"], [982, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1008, 5, 1, "", "_create_jit_fn"], [1009, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.memory": [[1958, 5, 1, "", "_dump_snapshot"], [1958, 5, 1, "", "_record_memory_history"], [1958, 5, 1, "", "_snapshot"]], "torch.cuda.nvtx": [[1025, 5, 1, "", "mark"], [1026, 5, 1, "", "range_pop"], [1027, 5, 1, "", "range_push"]], "torch.distributed": [[23, 1, 1, "", "Backend"], [23, 1, 1, "", "DistBackendError"], [23, 1, 1, "", "DistError"], [23, 1, 1, "", "DistNetworkError"], [23, 1, 1, "", "DistStoreError"], [23, 1, 1, "", "FileStore"], [21, 1, 1, "", "GradBucket"], [23, 1, 1, "", "HashStore"], [23, 1, 1, "", "P2POp"], [23, 1, 1, "", "PrefixStore"], [23, 1, 1, "", "ReduceOp"], [23, 1, 1, "", "Store"], [23, 1, 1, "", "TCPStore"], [23, 0, 0, "-", "algorithms"], [23, 5, 1, "", "all_gather"], [23, 5, 1, "", "all_gather_into_tensor"], [23, 5, 1, "", "all_gather_multigpu"], [23, 5, 1, "", "all_gather_object"], [23, 5, 1, "", "all_reduce"], [23, 5, 1, "", "all_reduce_multigpu"], [23, 5, 1, "", "all_to_all"], [23, 5, 1, "", "all_to_all_single"], [1923, 0, 0, "-", "autograd"], [23, 5, 1, "", "barrier"], [23, 5, 1, "", "batch_isend_irecv"], [23, 5, 1, "", "broadcast"], [23, 5, 1, "", "broadcast_multigpu"], [23, 5, 1, "", "broadcast_object_list"], [25, 0, 0, "-", "checkpoint"], [23, 0, 0, "-", "elastic"], [46, 0, 0, "-", "fsdp"], [23, 5, 1, "", "gather"], [23, 5, 1, "", "gather_object"], [23, 5, 1, "", "get_backend"], [23, 5, 1, "", "get_global_rank"], [23, 5, 1, "", "get_group_rank"], [23, 5, 1, "", "get_process_group_ranks"], [23, 5, 1, "", "get_rank"], [23, 5, 1, "", "get_world_size"], [23, 5, 1, "", "init_process_group"], [23, 5, 1, "", "irecv"], [23, 5, 1, "", "is_available"], [23, 5, 1, "", "is_gloo_available"], [23, 5, 1, "", "is_initialized"], [23, 5, 1, "", "is_mpi_available"], [23, 5, 1, "", "is_nccl_available"], [23, 5, 1, "", "is_torchelastic_launched"], [23, 5, 1, "", "isend"], [23, 0, 0, "-", "launch"], [23, 0, 0, "-", "launcher"], [23, 5, 1, "", "monitored_barrier"], [23, 5, 1, "", "new_group"], [23, 0, 0, "-", "nn"], [27, 0, 0, "-", "optim"], [23, 0, 0, "-", "pipeline"], [23, 5, 1, "", "recv"], [23, 5, 1, "", "reduce"], [23, 5, 1, "", "reduce_multigpu"], [23, 1, 1, "", "reduce_op"], [23, 5, 1, "", "reduce_scatter"], [23, 5, 1, "", "reduce_scatter_multigpu"], [23, 5, 1, "", "reduce_scatter_tensor"], [1923, 0, 0, "-", "rpc"], [41, 0, 0, "-", "run"], [23, 5, 1, "", "scatter"], [23, 5, 1, "", "scatter_object_list"], [23, 5, 1, "", "send"], [23, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[23, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[21, 5, 1, "", "buffer"], [21, 5, 1, "", "gradients"], [21, 5, 1, "", "index"], [21, 5, 1, "", "is_last"], [21, 5, 1, "", "parameters"], [21, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[23, 5, 1, "", "add"], [23, 5, 1, "", "compare_set"], [23, 5, 1, "", "delete_key"], [23, 5, 1, "", "get"], [23, 5, 1, "", "num_keys"], [23, 5, 1, "", "set"], [23, 5, 1, "", "set_timeout"], [23, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[24, 1, 1, "", "Join"], [24, 1, 1, "", "JoinHook"], [24, 1, 1, "", "Joinable"], [23, 0, 0, "-", "ddp_comm_hooks"], [23, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[24, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[24, 3, 1, "", "main_hook"], [24, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[24, 4, 1, "", "join_device"], [24, 3, 1, "", "join_hook"], [24, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[21, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[21, 5, 1, "", "allreduce_hook"], [21, 5, 1, "", "bf16_compress_hook"], [21, 5, 1, "", "bf16_compress_wrapper"], [21, 5, 1, "", "fp16_compress_hook"], [21, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[21, 1, 1, "", "PowerSGDState"], [21, 5, 1, "", "batched_powerSGD_hook"], [21, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[21, 3, 1, "", "__getstate__"], [21, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1923, 5, 1, "", "backward"], [1923, 1, 1, "", "context"], [1923, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[25, 1, 1, "", "DefaultLoadPlanner"], [25, 1, 1, "", "DefaultSavePlanner"], [25, 1, 1, "", "FileSystemReader"], [25, 1, 1, "", "FileSystemWriter"], [25, 1, 1, "", "LoadPlan"], [25, 1, 1, "", "LoadPlanner"], [25, 1, 1, "", "ReadItem"], [25, 1, 1, "", "SavePlan"], [25, 1, 1, "", "SavePlanner"], [25, 1, 1, "", "StorageReader"], [25, 1, 1, "", "StorageWriter"], [25, 1, 1, "", "WriteItem"], [25, 5, 1, "", "load_state_dict"], [25, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[25, 3, 1, "", "lookup_tensor"], [25, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[25, 3, 1, "", "lookup_object"], [25, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[25, 3, 1, "", "commit_tensor"], [25, 3, 1, "", "create_global_plan"], [25, 3, 1, "", "create_local_plan"], [25, 3, 1, "", "finish_plan"], [25, 3, 1, "", "load_bytes"], [25, 3, 1, "", "resolve_tensor"], [25, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[25, 3, 1, "", "create_global_plan"], [25, 3, 1, "", "create_local_plan"], [25, 3, 1, "", "finish_plan"], [25, 3, 1, "", "resolve_data"], [25, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[25, 3, 1, "", "prepare_global_plan"], [25, 3, 1, "", "prepare_local_plan"], [25, 3, 1, "", "read_data"], [25, 3, 1, "", "read_metadata"], [25, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[25, 3, 1, "", "finish"], [25, 3, 1, "", "prepare_global_plan"], [25, 3, 1, "", "prepare_local_plan"], [25, 3, 1, "", "set_up_storage_writer"], [25, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[31, 0, 0, "-", "agent"], [34, 0, 0, "-", "events"], [37, 0, 0, "-", "metrics"], [38, 0, 0, "-", "multiprocessing"], [40, 0, 0, "-", "rendezvous"], [42, 0, 0, "-", "timer"], [23, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[31, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[31, 1, 1, "", "ElasticAgent"], [31, 1, 1, "", "SimpleElasticAgent"], [31, 1, 1, "", "Worker"], [31, 1, 1, "", "WorkerGroup"], [31, 1, 1, "", "WorkerSpec"], [31, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[31, 3, 1, "", "get_worker_group"], [31, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[31, 3, 1, "", "_assign_worker_ranks"], [31, 3, 1, "", "_exit_barrier"], [31, 3, 1, "", "_initialize_workers"], [31, 3, 1, "", "_monitor_workers"], [31, 3, 1, "", "_rendezvous"], [31, 3, 1, "", "_restart_workers"], [31, 3, 1, "", "_shutdown"], [31, 3, 1, "", "_start_workers"], [31, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[31, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[31, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[31, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[31, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[34, 1, 1, "", "Event"], [34, 2, 1, "", "EventMetadataValue"], [34, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[34, 5, 1, "", "get_logging_handler"], [34, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[37, 1, 1, "", "ConsoleMetricHandler"], [37, 1, 1, "", "MetricHandler"], [37, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[37, 5, 1, "", "configure"], [37, 5, 1, "", "prof"], [37, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[38, 1, 1, "", "MultiprocessContext"], [38, 1, 1, "", "PContext"], [38, 1, 1, "", "RunProcsResult"], [38, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[33, 0, 0, "-", "errors"], [38, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[33, 1, 1, "", "ChildFailedError"], [33, 1, 1, "", "ErrorHandler"], [33, 1, 1, "", "ProcessFailure"], [33, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[40, 1, 1, "", "RendezvousClosedError"], [40, 1, 1, "", "RendezvousConnectionError"], [40, 1, 1, "", "RendezvousError"], [40, 1, 1, "", "RendezvousHandler"], [40, 1, 1, "", "RendezvousHandlerRegistry"], [40, 1, 1, "", "RendezvousParameters"], [40, 1, 1, "", "RendezvousStateError"], [40, 1, 1, "", "RendezvousTimeoutError"], [40, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[40, 3, 1, "", "get_backend"], [40, 3, 1, "", "get_run_id"], [40, 3, 1, "", "is_closed"], [40, 3, 1, "", "next_rendezvous"], [40, 3, 1, "", "num_nodes_waiting"], [40, 3, 1, "", "set_closed"], [40, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[40, 3, 1, "", "create_handler"], [40, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[40, 3, 1, "", "get"], [40, 3, 1, "", "get_as_bool"], [40, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[40, 1, 1, "", "C10dRendezvousBackend"], [40, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[40, 3, 1, "", "get_state"], [40, 4, 1, "", "name"], [40, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[40, 1, 1, "", "DynamicRendezvousHandler"], [40, 1, 1, "", "RendezvousBackend"], [40, 1, 1, "", "RendezvousTimeout"], [40, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[40, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[40, 3, 1, "", "get_state"], [40, 4, 1, "", "name"], [40, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[40, 4, 1, "", "close"], [40, 4, 1, "", "heartbeat"], [40, 4, 1, "", "join"], [40, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[40, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[40, 1, 1, "", "EtcdRendezvousBackend"], [40, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[40, 3, 1, "", "get_state"], [40, 4, 1, "", "name"], [40, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[40, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[40, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[40, 3, 1, "", "add"], [40, 3, 1, "", "check"], [40, 3, 1, "", "get"], [40, 3, 1, "", "set"], [40, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[42, 1, 1, "", "FileTimerClient"], [42, 1, 1, "", "FileTimerServer"], [42, 1, 1, "", "LocalTimerClient"], [42, 1, 1, "", "LocalTimerServer"], [42, 1, 1, "", "TimerClient"], [42, 1, 1, "", "TimerRequest"], [42, 1, 1, "", "TimerServer"], [42, 5, 1, "", "configure"], [42, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[42, 3, 1, "", "acquire"], [42, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[42, 3, 1, "", "clear_timers"], [42, 3, 1, "", "get_expired_timers"], [42, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[23, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[46, 1, 1, "", "BackwardPrefetch"], [46, 1, 1, "", "CPUOffload"], [46, 1, 1, "", "FullOptimStateDictConfig"], [46, 1, 1, "", "FullStateDictConfig"], [46, 1, 1, "", "FullyShardedDataParallel"], [46, 1, 1, "", "LocalOptimStateDictConfig"], [46, 1, 1, "", "LocalStateDictConfig"], [46, 1, 1, "", "MixedPrecision"], [46, 1, 1, "", "OptimStateDictConfig"], [46, 1, 1, "", "ShardedOptimStateDictConfig"], [46, 1, 1, "", "ShardedStateDictConfig"], [46, 1, 1, "", "ShardingStrategy"], [46, 1, 1, "", "StateDictConfig"], [46, 1, 1, "", "StateDictSettings"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "clip_grad_norm_"], [46, 3, 1, "", "flatten_sharded_optim_state_dict"], [46, 3, 1, "", "forward"], [46, 3, 1, "", "fsdp_modules"], [46, 3, 1, "", "full_optim_state_dict"], [46, 3, 1, "", "get_state_dict_type"], [46, 4, 1, "", "module"], [46, 3, 1, "", "named_buffers"], [46, 3, 1, "", "named_parameters"], [46, 3, 1, "", "no_sync"], [46, 3, 1, "", "optim_state_dict"], [46, 3, 1, "", "optim_state_dict_to_load"], [46, 3, 1, "", "register_comm_hook"], [46, 3, 1, "", "rekey_optim_state_dict"], [46, 3, 1, "", "scatter_full_optim_state_dict"], [46, 3, 1, "", "set_state_dict_type"], [46, 3, 1, "", "shard_full_optim_state_dict"], [46, 3, 1, "", "sharded_optim_state_dict"], [46, 3, 1, "", "state_dict_type"], [46, 3, 1, "", "summon_full_params"]], "torch.distributed.nn": [[23, 0, 0, "-", "api"], [23, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1923, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1923, 3, 1, "", "get_module_rref"], [1923, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[23, 0, 0, "-", "templates"]], "torch.distributed.optim": [[27, 1, 1, "", "DistributedOptimizer"], [27, 1, 1, "", "PostLocalSGDOptimizer"], [27, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[27, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[27, 3, 1, "", "load_state_dict"], [27, 3, 1, "", "state_dict"], [27, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[27, 3, 1, "", "add_param_group"], [27, 3, 1, "", "consolidate_state_dict"], [27, 3, 1, "", "join_hook"], [27, 3, 1, "", "load_state_dict"], [27, 3, 1, "", "state_dict"], [27, 3, 1, "", "step"]], "torch.distributed.pipeline": [[23, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1916, 1, 1, "", "Pipe"], [23, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1916, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1916, 1, 1, "", "pop"], [1916, 5, 1, "", "skippable"], [1916, 1, 1, "", "stash"], [1916, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1923, 1, 1, "", "BackendType"], [1923, 1, 1, "", "PyRRef"], [1923, 1, 1, "", "RpcBackendOptions"], [1923, 1, 1, "", "TensorPipeRpcBackendOptions"], [1923, 1, 1, "", "WorkerInfo"], [1923, 5, 1, "", "get_worker_info"], [1923, 5, 1, "", "init_rpc"], [1923, 5, 1, "", "remote"], [1923, 5, 1, "", "rpc_async"], [1923, 5, 1, "", "rpc_sync"], [1923, 5, 1, "", "shutdown"]], "torch.distributed.rpc.PyRRef": [[1923, 3, 1, "", "backward"], [1923, 3, 1, "", "confirmed_by_owner"], [1923, 3, 1, "", "is_owner"], [1923, 3, 1, "", "local_value"], [1923, 3, 1, "", "owner"], [1923, 3, 1, "", "owner_name"], [1923, 3, 1, "", "remote"], [1923, 3, 1, "", "rpc_async"], [1923, 3, 1, "", "rpc_sync"], [1923, 3, 1, "", "to_here"]], "torch.distributed.rpc.RpcBackendOptions": [[1923, 4, 1, "", "init_method"], [1923, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1923, 4, 1, "", "device_maps"], [1923, 4, 1, "", "devices"], [1923, 4, 1, "", "init_method"], [1923, 4, 1, "", "num_worker_threads"], [1923, 4, 1, "", "rpc_timeout"], [1923, 3, 1, "", "set_device_map"], [1923, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1923, 4, 1, "", "id"], [1923, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1923, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[28, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.ddp": [[28, 5, 1, "", "pre_dp_module_transform"]], "torch.distributed.tensor.parallel.fsdp": [[28, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel": [[28, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[28, 1, 1, "", "ColwiseParallel"], [28, 1, 1, "", "PairwiseParallel"], [28, 1, 1, "", "RowwiseParallel"], [28, 1, 1, "", "SequenceParallel"], [28, 5, 1, "", "make_input_replicate_1d"], [28, 5, 1, "", "make_input_reshard_replicate"], [28, 5, 1, "", "make_input_shard_1d"], [28, 5, 1, "", "make_input_shard_1d_last_dim"], [28, 5, 1, "", "make_output_replicate_1d"], [28, 5, 1, "", "make_output_reshard_tensor"], [28, 5, 1, "", "make_output_shard_1d"], [28, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[29, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.beta": [[29, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "concentration0"], [29, 4, 1, "", "concentration1"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.binomial": [[29, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.categorical": [[29, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[29, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.chi2": [[29, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "df"], [29, 3, 1, "", "expand"]], "torch.distributions": [[29, 0, 0, "-", "constraint_registry"], [29, 0, 0, "-", "constraints"], [29, 0, 0, "-", "kl"], [29, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[29, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[29, 3, 1, "", "register"]], "torch.distributions.constraints": [[29, 1, 1, "", "Constraint"], [29, 2, 1, "", "cat"], [29, 2, 1, "", "dependent_property"], [29, 2, 1, "", "greater_than"], [29, 2, 1, "", "greater_than_eq"], [29, 2, 1, "", "half_open_interval"], [29, 2, 1, "", "independent"], [29, 2, 1, "", "integer_interval"], [29, 2, 1, "", "interval"], [29, 2, 1, "", "less_than"], [29, 2, 1, "", "multinomial"], [29, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[29, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[29, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[29, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.distribution": [[29, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[29, 4, 1, "", "arg_constraints"], [29, 4, 1, "", "batch_shape"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 4, 1, "", "event_shape"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "perplexity"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 3, 1, "", "sample_n"], [29, 3, 1, "", "set_default_validate_args"], [29, 4, 1, "", "stddev"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[29, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[29, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[29, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[29, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.gamma": [[29, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.geometric": [[29, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[29, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[29, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "scale"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[29, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "scale"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.independent": [[29, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "has_enumerate_support"], [29, 4, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.kl": [[29, 5, 1, "", "kl_divergence"], [29, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[29, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.laplace": [[29, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[29, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"]], "torch.distributions.log_normal": [[29, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "loc"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "scale"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[29, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "covariance_matrix"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "precision_matrix"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "scale_tril"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[29, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 4, 1, "", "component_distribution"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mixture_distribution"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[29, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 2, 1, "", "total_count"], [29, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[29, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "covariance_matrix"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "precision_matrix"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "scale_tril"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[29, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.normal": [[29, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[29, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.pareto": [[29, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.poisson": [[29, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[29, 1, 1, "", "LogitRelaxedBernoulli"], [29, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "probs"], [29, 2, 1, "", "support"], [29, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[29, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "probs"], [29, 2, 1, "", "support"], [29, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[29, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[29, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"]], "torch.distributions.transforms": [[29, 1, 1, "", "AbsTransform"], [29, 1, 1, "", "AffineTransform"], [29, 1, 1, "", "CatTransform"], [29, 1, 1, "", "ComposeTransform"], [29, 1, 1, "", "CorrCholeskyTransform"], [29, 1, 1, "", "CumulativeDistributionTransform"], [29, 1, 1, "", "ExpTransform"], [29, 1, 1, "", "IndependentTransform"], [29, 1, 1, "", "LowerCholeskyTransform"], [29, 1, 1, "", "PositiveDefiniteTransform"], [29, 1, 1, "", "PowerTransform"], [29, 1, 1, "", "ReshapeTransform"], [29, 1, 1, "", "SigmoidTransform"], [29, 1, 1, "", "SoftmaxTransform"], [29, 1, 1, "", "SoftplusTransform"], [29, 1, 1, "", "StackTransform"], [29, 1, 1, "", "StickBreakingTransform"], [29, 1, 1, "", "TanhTransform"], [29, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[29, 3, 1, "", "forward_shape"], [29, 4, 1, "", "inv"], [29, 3, 1, "", "inverse_shape"], [29, 3, 1, "", "log_abs_det_jacobian"], [29, 4, 1, "", "sign"]], "torch.distributions.uniform": [[29, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "stddev"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[29, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.weibull": [[29, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.wishart": [[29, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "covariance_matrix"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "precision_matrix"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "scale_tril"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.export": [[44, 1, 1, "", "ArgumentKind"], [44, 1, 1, "", "ArgumentSpec"], [44, 1, 1, "", "Constraint"], [44, 1, 1, "", "ExportBackwardSignature"], [44, 1, 1, "", "ExportGraphSignature"], [44, 1, 1, "", "ExportedProgram"], [44, 1, 1, "", "ModuleCallEntry"], [44, 1, 1, "", "ModuleCallSignature"], [44, 5, 1, "", "constrain_as_size"], [44, 5, 1, "", "constrain_as_value"], [44, 5, 1, "", "dynamic_dim"], [44, 5, 1, "", "export"], [44, 5, 1, "", "load"], [44, 5, 1, "", "save"]], "torch.export.ExportedProgram": [[44, 3, 1, "", "module"]], "torch.fft": [[1081, 5, 1, "", "fft"], [1082, 5, 1, "", "fft2"], [1083, 5, 1, "", "fftfreq"], [1084, 5, 1, "", "fftn"], [1085, 5, 1, "", "fftshift"], [1086, 5, 1, "", "hfft"], [1087, 5, 1, "", "hfft2"], [1088, 5, 1, "", "hfftn"], [1089, 5, 1, "", "ifft"], [1090, 5, 1, "", "ifft2"], [1091, 5, 1, "", "ifftn"], [1092, 5, 1, "", "ifftshift"], [1093, 5, 1, "", "ihfft"], [1094, 5, 1, "", "ihfft2"], [1095, 5, 1, "", "ihfftn"], [1096, 5, 1, "", "irfft"], [1097, 5, 1, "", "irfft2"], [1098, 5, 1, "", "irfftn"], [1099, 5, 1, "", "rfft"], [1100, 5, 1, "", "rfft2"], [1101, 5, 1, "", "rfftfreq"], [1102, 5, 1, "", "rfftn"]], "torch.func": [[1121, 5, 1, "", "functional_call"], [1122, 5, 1, "", "functionalize"], [1123, 5, 1, "", "grad"], [1124, 5, 1, "", "grad_and_value"], [1125, 5, 1, "", "hessian"], [1126, 5, 1, "", "jacfwd"], [1127, 5, 1, "", "jacrev"], [1128, 5, 1, "", "jvp"], [1129, 5, 1, "", "linearize"], [1130, 5, 1, "", "replace_all_batch_norm_modules_"], [1131, 5, 1, "", "stack_module_state"], [1132, 5, 1, "", "vjp"], [1133, 5, 1, "", "vmap"]], "torch.futures": [[53, 1, 1, "", "Future"], [53, 5, 1, "", "collect_all"], [53, 5, 1, "", "wait_all"]], "torch.futures.Future": [[53, 3, 1, "", "add_done_callback"], [53, 3, 1, "", "done"], [53, 3, 1, "", "set_exception"], [53, 3, 1, "", "set_result"], [53, 3, 1, "", "then"], [53, 3, 1, "", "value"], [53, 3, 1, "", "wait"]], "torch.fx": [[54, 1, 1, "", "Graph"], [54, 1, 1, "", "GraphModule"], [54, 1, 1, "", "Interpreter"], [54, 1, 1, "", "Node"], [54, 1, 1, "", "Proxy"], [54, 1, 1, "", "Tracer"], [54, 1, 1, "", "Transformer"], [54, 0, 0, "-", "experimental"], [54, 0, 0, "-", "passes"], [54, 5, 1, "", "replace_pattern"], [54, 5, 1, "", "symbolic_trace"], [54, 5, 1, "", "wrap"]], "torch.fx.Graph": [[54, 3, 1, "", "__init__"], [54, 3, 1, "", "call_function"], [54, 3, 1, "", "call_method"], [54, 3, 1, "", "call_module"], [54, 3, 1, "", "create_node"], [54, 3, 1, "", "eliminate_dead_code"], [54, 3, 1, "", "erase_node"], [54, 3, 1, "", "get_attr"], [54, 3, 1, "", "graph_copy"], [54, 3, 1, "", "inserting_after"], [54, 3, 1, "", "inserting_before"], [54, 3, 1, "", "lint"], [54, 3, 1, "", "node_copy"], [54, 4, 1, "", "nodes"], [54, 3, 1, "", "on_generate_code"], [54, 3, 1, "", "output"], [54, 3, 1, "", "placeholder"], [54, 3, 1, "", "print_tabular"], [54, 3, 1, "", "process_inputs"], [54, 3, 1, "", "process_outputs"], [54, 3, 1, "", "python_code"], [54, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[54, 3, 1, "", "__init__"], [54, 3, 1, "", "add_submodule"], [54, 4, 1, "", "code"], [54, 3, 1, "", "delete_all_unused_submodules"], [54, 3, 1, "", "delete_submodule"], [54, 4, 1, "", "graph"], [54, 3, 1, "", "print_readable"], [54, 3, 1, "", "recompile"], [54, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[54, 3, 1, "", "boxed_run"], [54, 3, 1, "", "call_function"], [54, 3, 1, "", "call_method"], [54, 3, 1, "", "call_module"], [54, 3, 1, "", "fetch_args_kwargs_from_env"], [54, 3, 1, "", "fetch_attr"], [54, 3, 1, "", "get_attr"], [54, 3, 1, "", "map_nodes_to_values"], [54, 3, 1, "", "output"], [54, 3, 1, "", "placeholder"], [54, 3, 1, "", "run"], [54, 3, 1, "", "run_node"]], "torch.fx.Node": [[54, 4, 1, "", "all_input_nodes"], [54, 3, 1, "", "append"], [54, 4, 1, "", "args"], [54, 3, 1, "", "format_node"], [54, 3, 1, "", "is_impure"], [54, 4, 1, "", "kwargs"], [54, 4, 1, "", "next"], [54, 3, 1, "", "normalized_arguments"], [54, 3, 1, "", "prepend"], [54, 4, 1, "", "prev"], [54, 3, 1, "", "replace_all_uses_with"], [54, 3, 1, "", "replace_input_with"], [54, 4, 1, "", "stack_trace"], [54, 3, 1, "", "update_arg"], [54, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[54, 3, 1, "", "call_module"], [54, 3, 1, "", "create_arg"], [54, 3, 1, "", "create_args_for_root"], [54, 3, 1, "", "create_node"], [54, 3, 1, "", "create_proxy"], [54, 3, 1, "", "getattr"], [54, 3, 1, "", "is_leaf_module"], [54, 3, 1, "", "iter"], [54, 3, 1, "", "keys"], [54, 3, 1, "", "path_of_module"], [54, 3, 1, "", "proxy"], [54, 3, 1, "", "to_bool"], [54, 3, 1, "", "trace"]], "torch.fx.Transformer": [[54, 3, 1, "", "call_function"], [54, 3, 1, "", "call_module"], [54, 3, 1, "", "get_attr"], [54, 3, 1, "", "placeholder"], [54, 3, 1, "", "transform"]], "torch.fx.experimental": [[54, 0, 0, "-", "migrate_gradual_types"], [54, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[54, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[54, 0, 0, "-", "backends"], [54, 0, 0, "-", "dialect"], [54, 0, 0, "-", "infra"], [54, 0, 0, "-", "tests"], [54, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[54, 0, 0, "-", "common"]], "torch.hub": [[1868, 5, 1, "", "download_url_to_file"], [1868, 5, 1, "", "get_dir"], [1868, 5, 1, "", "help"], [1868, 5, 1, "", "list"], [1868, 5, 1, "", "load"], [1868, 5, 1, "", "load_state_dict_from_url"], [1868, 5, 1, "", "set_dir"]], "torch.jit": [[1190, 1, 1, "", "Attribute"], [1191, 1, 1, "", "ScriptFunction"], [1192, 1, 1, "", "ScriptModule"], [1193, 5, 1, "", "annotate"], [1194, 5, 1, "", "enable_onednn_fusion"], [1870, 5, 1, "", "export"], [1195, 5, 1, "", "fork"], [1196, 5, 1, "", "freeze"], [1197, 5, 1, "", "ignore"], [1872, 5, 1, "", "is_scripting"], [1872, 5, 1, "", "is_tracing"], [1198, 5, 1, "", "isinstance"], [1199, 5, 1, "", "load"], [1870, 0, 0, "-", "mobile"], [1200, 5, 1, "", "onednn_fusion_enabled"], [1201, 5, 1, "", "optimize_for_inference"], [1202, 5, 1, "", "save"], [1203, 5, 1, "", "script"], [1204, 5, 1, "", "script_if_tracing"], [1205, 5, 1, "", "set_fusion_strategy"], [1206, 1, 1, "", "strict_fusion"], [1871, 0, 0, "-", "supported_ops"], [1207, 5, 1, "", "trace"], [1208, 5, 1, "", "trace_module"], [1875, 0, 0, "-", "unsupported_tensor_ops"], [1209, 5, 1, "", "unused"], [1210, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1190, 3, 1, "", "count"], [1190, 3, 1, "", "index"], [1190, 2, 1, "", "type"], [1190, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1191, 3, 1, "", "get_debug_state"], [1191, 3, 1, "", "save"], [1191, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1192, 3, 1, "", "add_module"], [1192, 3, 1, "", "apply"], [1192, 3, 1, "", "bfloat16"], [1192, 3, 1, "", "buffers"], [1192, 3, 1, "", "children"], [1192, 4, 1, "", "code"], [1192, 4, 1, "", "code_with_constants"], [1192, 3, 1, "", "compile"], [1192, 3, 1, "", "cpu"], [1192, 3, 1, "", "cuda"], [1192, 3, 1, "", "double"], [1192, 3, 1, "", "eval"], [1192, 3, 1, "", "extra_repr"], [1192, 3, 1, "", "float"], [1192, 3, 1, "", "get_buffer"], [1192, 3, 1, "", "get_extra_state"], [1192, 3, 1, "", "get_parameter"], [1192, 3, 1, "", "get_submodule"], [1192, 4, 1, "", "graph"], [1192, 3, 1, "", "half"], [1192, 4, 1, "", "inlined_graph"], [1192, 3, 1, "", "ipu"], [1192, 3, 1, "", "load_state_dict"], [1192, 3, 1, "", "modules"], [1192, 3, 1, "", "named_buffers"], [1192, 3, 1, "", "named_children"], [1192, 3, 1, "", "named_modules"], [1192, 3, 1, "", "named_parameters"], [1192, 3, 1, "", "parameters"], [1192, 3, 1, "", "register_backward_hook"], [1192, 3, 1, "", "register_buffer"], [1192, 3, 1, "", "register_forward_hook"], [1192, 3, 1, "", "register_forward_pre_hook"], [1192, 3, 1, "", "register_full_backward_hook"], [1192, 3, 1, "", "register_full_backward_pre_hook"], [1192, 3, 1, "", "register_load_state_dict_post_hook"], [1192, 3, 1, "", "register_module"], [1192, 3, 1, "", "register_parameter"], [1192, 3, 1, "", "register_state_dict_pre_hook"], [1192, 3, 1, "", "requires_grad_"], [1192, 3, 1, "", "save"], [1192, 3, 1, "", "set_extra_state"], [1192, 3, 1, "", "share_memory"], [1192, 3, 1, "", "state_dict"], [1192, 3, 1, "", "to"], [1192, 3, 1, "", "to_empty"], [1192, 3, 1, "", "train"], [1192, 3, 1, "", "type"], [1192, 3, 1, "", "xpu"], [1192, 3, 1, "", "zero_grad"]], "torch.library": [[1877, 1, 1, "", "Library"], [1877, 5, 1, "", "fallthrough_kernel"]], "torch.library.Library": [[1877, 3, 1, "", "define"], [1877, 3, 1, "", "impl"]], "torch.linalg": [[1221, 5, 1, "", "cholesky"], [1222, 5, 1, "", "cholesky_ex"], [1223, 5, 1, "", "cond"], [1224, 5, 1, "", "cross"], [1225, 5, 1, "", "det"], [1226, 5, 1, "", "diagonal"], [1227, 5, 1, "", "eig"], [1228, 5, 1, "", "eigh"], [1229, 5, 1, "", "eigvals"], [1230, 5, 1, "", "eigvalsh"], [1231, 5, 1, "", "householder_product"], [1232, 5, 1, "", "inv"], [1233, 5, 1, "", "inv_ex"], [1234, 5, 1, "", "ldl_factor"], [1235, 5, 1, "", "ldl_factor_ex"], [1236, 5, 1, "", "ldl_solve"], [1237, 5, 1, "", "lstsq"], [1238, 5, 1, "", "lu"], [1239, 5, 1, "", "lu_factor"], [1240, 5, 1, "", "lu_factor_ex"], [1241, 5, 1, "", "lu_solve"], [1242, 5, 1, "", "matmul"], [1243, 5, 1, "", "matrix_exp"], [1244, 5, 1, "", "matrix_norm"], [1245, 5, 1, "", "matrix_power"], [1246, 5, 1, "", "matrix_rank"], [1247, 5, 1, "", "multi_dot"], [1248, 5, 1, "", "norm"], [1249, 5, 1, "", "pinv"], [1250, 5, 1, "", "qr"], [1251, 5, 1, "", "slogdet"], [1252, 5, 1, "", "solve"], [1253, 5, 1, "", "solve_ex"], [1254, 5, 1, "", "solve_triangular"], [1255, 5, 1, "", "svd"], [1256, 5, 1, "", "svdvals"], [1257, 5, 1, "", "tensorinv"], [1258, 5, 1, "", "tensorsolve"], [1259, 5, 1, "", "vander"], [1260, 5, 1, "", "vecdot"], [1261, 5, 1, "", "vector_norm"]], "torch.masked": [[1880, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1883, 1, 1, "", "Aggregation"], [1883, 1, 1, "", "Event"], [1883, 1, 1, "", "EventHandlerHandle"], [1883, 1, 1, "", "Stat"], [1883, 1, 1, "", "TensorboardEventHandler"], [1883, 1, 1, "", "data_value_t"], [1883, 5, 1, "", "log_event"], [1883, 5, 1, "", "register_event_handler"], [1883, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1883, 4, 1, "", "name"]], "torch.monitor.Event": [[1883, 3, 1, "", "__init__"], [1883, 4, 1, "", "data"], [1883, 4, 1, "", "name"], [1883, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1883, 3, 1, "", "__init__"], [1883, 3, 1, "", "add"], [1883, 4, 1, "", "count"], [1883, 3, 1, "", "get"], [1883, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1883, 3, 1, "", "__init__"]], "torch.mps": [[1300, 5, 1, "", "current_allocated_memory"], [1301, 5, 1, "", "driver_allocated_memory"], [1302, 5, 1, "", "empty_cache"], [1304, 5, 1, "", "get_rng_state"], [1305, 5, 1, "", "manual_seed"], [1309, 5, 1, "", "seed"], [1310, 5, 1, "", "set_per_process_memory_fraction"], [1311, 5, 1, "", "set_rng_state"], [1312, 5, 1, "", "synchronize"]], "torch.mps.event": [[1303, 1, 1, "", "Event"]], "torch.mps.event.Event": [[1303, 3, 1, "", "elapsed_time"], [1303, 3, 1, "", "query"], [1303, 3, 1, "", "record"], [1303, 3, 1, "", "synchronize"], [1303, 3, 1, "", "wait"]], "torch.mps.profiler": [[1306, 5, 1, "", "profile"], [1307, 5, 1, "", "start"], [1308, 5, 1, "", "stop"]], "torch.multiprocessing": [[1885, 1, 1, "", "SpawnContext"], [1885, 5, 1, "", "get_all_sharing_strategies"], [1885, 5, 1, "", "get_sharing_strategy"], [1885, 5, 1, "", "set_sharing_strategy"], [1885, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1885, 3, 1, "", "join"]], "torch.nested": [[1888, 5, 1, "", "as_nested_tensor"], [1888, 5, 1, "", "nested_tensor"], [1888, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1330, 1, 1, "", "AdaptiveAvgPool1d"], [1331, 1, 1, "", "AdaptiveAvgPool2d"], [1332, 1, 1, "", "AdaptiveAvgPool3d"], [1333, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1334, 1, 1, "", "AdaptiveMaxPool1d"], [1335, 1, 1, "", "AdaptiveMaxPool2d"], [1336, 1, 1, "", "AdaptiveMaxPool3d"], [1337, 1, 1, "", "AlphaDropout"], [1338, 1, 1, "", "AvgPool1d"], [1339, 1, 1, "", "AvgPool2d"], [1340, 1, 1, "", "AvgPool3d"], [1341, 1, 1, "", "BCELoss"], [1342, 1, 1, "", "BCEWithLogitsLoss"], [1343, 1, 1, "", "BatchNorm1d"], [1344, 1, 1, "", "BatchNorm2d"], [1345, 1, 1, "", "BatchNorm3d"], [1346, 1, 1, "", "Bilinear"], [1347, 1, 1, "", "CELU"], [1348, 1, 1, "", "CTCLoss"], [1349, 1, 1, "", "ChannelShuffle"], [1350, 1, 1, "", "ConstantPad1d"], [1351, 1, 1, "", "ConstantPad2d"], [1352, 1, 1, "", "ConstantPad3d"], [1353, 1, 1, "", "Conv1d"], [1354, 1, 1, "", "Conv2d"], [1355, 1, 1, "", "Conv3d"], [1356, 1, 1, "", "ConvTranspose1d"], [1357, 1, 1, "", "ConvTranspose2d"], [1358, 1, 1, "", "ConvTranspose3d"], [1359, 1, 1, "", "CosineEmbeddingLoss"], [1360, 1, 1, "", "CosineSimilarity"], [1361, 1, 1, "", "CrossEntropyLoss"], [1362, 1, 1, "", "DataParallel"], [1363, 1, 1, "", "Dropout"], [1364, 1, 1, "", "Dropout1d"], [1365, 1, 1, "", "Dropout2d"], [1366, 1, 1, "", "Dropout3d"], [1367, 1, 1, "", "ELU"], [1368, 1, 1, "", "Embedding"], [1369, 1, 1, "", "EmbeddingBag"], [1370, 1, 1, "", "FeatureAlphaDropout"], [1371, 1, 1, "", "Flatten"], [1372, 1, 1, "", "Fold"], [1373, 1, 1, "", "FractionalMaxPool2d"], [1374, 1, 1, "", "FractionalMaxPool3d"], [1375, 1, 1, "", "GELU"], [1376, 1, 1, "", "GLU"], [1377, 1, 1, "", "GRU"], [1378, 1, 1, "", "GRUCell"], [1379, 1, 1, "", "GaussianNLLLoss"], [1380, 1, 1, "", "GroupNorm"], [1381, 1, 1, "", "Hardshrink"], [1382, 1, 1, "", "Hardsigmoid"], [1383, 1, 1, "", "Hardswish"], [1384, 1, 1, "", "Hardtanh"], [1385, 1, 1, "", "HingeEmbeddingLoss"], [1386, 1, 1, "", "HuberLoss"], [1387, 1, 1, "", "Identity"], [1388, 1, 1, "", "InstanceNorm1d"], [1389, 1, 1, "", "InstanceNorm2d"], [1390, 1, 1, "", "InstanceNorm3d"], [1391, 1, 1, "", "KLDivLoss"], [1392, 1, 1, "", "L1Loss"], [1393, 1, 1, "", "LPPool1d"], [1394, 1, 1, "", "LPPool2d"], [1395, 1, 1, "", "LSTM"], [1396, 1, 1, "", "LSTMCell"], [1397, 1, 1, "", "LayerNorm"], [1398, 1, 1, "", "LazyBatchNorm1d"], [1399, 1, 1, "", "LazyBatchNorm2d"], [1400, 1, 1, "", "LazyBatchNorm3d"], [1401, 1, 1, "", "LazyConv1d"], [1402, 1, 1, "", "LazyConv2d"], [1403, 1, 1, "", "LazyConv3d"], [1404, 1, 1, "", "LazyConvTranspose1d"], [1405, 1, 1, "", "LazyConvTranspose2d"], [1406, 1, 1, "", "LazyConvTranspose3d"], [1407, 1, 1, "", "LazyInstanceNorm1d"], [1408, 1, 1, "", "LazyInstanceNorm2d"], [1409, 1, 1, "", "LazyInstanceNorm3d"], [1410, 1, 1, "", "LazyLinear"], [1411, 1, 1, "", "LeakyReLU"], [1412, 1, 1, "", "Linear"], [1413, 1, 1, "", "LocalResponseNorm"], [1414, 1, 1, "", "LogSigmoid"], [1415, 1, 1, "", "LogSoftmax"], [1416, 1, 1, "", "MSELoss"], [1417, 1, 1, "", "MarginRankingLoss"], [1418, 1, 1, "", "MaxPool1d"], [1419, 1, 1, "", "MaxPool2d"], [1420, 1, 1, "", "MaxPool3d"], [1421, 1, 1, "", "MaxUnpool1d"], [1422, 1, 1, "", "MaxUnpool2d"], [1423, 1, 1, "", "MaxUnpool3d"], [1424, 1, 1, "", "Mish"], [1425, 1, 1, "", "Module"], [1426, 1, 1, "", "ModuleDict"], [1427, 1, 1, "", "ModuleList"], [1428, 1, 1, "", "MultiLabelMarginLoss"], [1429, 1, 1, "", "MultiLabelSoftMarginLoss"], [1430, 1, 1, "", "MultiMarginLoss"], [1431, 1, 1, "", "MultiheadAttention"], [1432, 1, 1, "", "NLLLoss"], [1433, 1, 1, "", "PReLU"], [1434, 1, 1, "", "PairwiseDistance"], [1435, 1, 1, "", "ParameterDict"], [1436, 1, 1, "", "ParameterList"], [1437, 1, 1, "", "PixelShuffle"], [1438, 1, 1, "", "PixelUnshuffle"], [1439, 1, 1, "", "PoissonNLLLoss"], [1440, 1, 1, "", "RNN"], [1441, 1, 1, "", "RNNBase"], [1442, 1, 1, "", "RNNCell"], [1443, 1, 1, "", "RReLU"], [1444, 1, 1, "", "ReLU"], [1445, 1, 1, "", "ReLU6"], [1446, 1, 1, "", "ReflectionPad1d"], [1447, 1, 1, "", "ReflectionPad2d"], [1448, 1, 1, "", "ReflectionPad3d"], [1449, 1, 1, "", "ReplicationPad1d"], [1450, 1, 1, "", "ReplicationPad2d"], [1451, 1, 1, "", "ReplicationPad3d"], [1452, 1, 1, "", "SELU"], [1453, 1, 1, "", "Sequential"], [1454, 1, 1, "", "SiLU"], [1455, 1, 1, "", "Sigmoid"], [1456, 1, 1, "", "SmoothL1Loss"], [1457, 1, 1, "", "SoftMarginLoss"], [1458, 1, 1, "", "Softmax"], [1459, 1, 1, "", "Softmax2d"], [1460, 1, 1, "", "Softmin"], [1461, 1, 1, "", "Softplus"], [1462, 1, 1, "", "Softshrink"], [1463, 1, 1, "", "Softsign"], [1464, 1, 1, "", "SyncBatchNorm"], [1465, 1, 1, "", "Tanh"], [1466, 1, 1, "", "Tanhshrink"], [1467, 1, 1, "", "Threshold"], [1468, 1, 1, "", "Transformer"], [1469, 1, 1, "", "TransformerDecoder"], [1470, 1, 1, "", "TransformerDecoderLayer"], [1471, 1, 1, "", "TransformerEncoder"], [1472, 1, 1, "", "TransformerEncoderLayer"], [1473, 1, 1, "", "TripletMarginLoss"], [1474, 1, 1, "", "TripletMarginWithDistanceLoss"], [1475, 1, 1, "", "Unflatten"], [1476, 1, 1, "", "Unfold"], [1477, 1, 1, "", "Upsample"], [1478, 1, 1, "", "UpsamplingBilinear2d"], [1479, 1, 1, "", "UpsamplingNearest2d"], [1480, 1, 1, "", "ZeroPad1d"], [1481, 1, 1, "", "ZeroPad2d"], [1482, 1, 1, "", "ZeroPad3d"], [1889, 0, 0, "-", "backends"], [1921, 0, 0, "-", "intrinsic"], [1889, 0, 0, "-", "modules"], [1889, 0, 0, "-", "parallel"], [1921, 0, 0, "-", "qat"], [1921, 0, 0, "-", "quantizable"], [1921, 0, 0, "-", "quantized"], [1889, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1333, 3, 1, "", "log_prob"], [1333, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1368, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1369, 3, 1, "", "forward"], [1369, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1398, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1399, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1400, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1401, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1402, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1403, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1404, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1405, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1406, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1407, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1408, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1409, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1410, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1425, 3, 1, "", "add_module"], [1425, 3, 1, "", "apply"], [1425, 3, 1, "", "bfloat16"], [1425, 3, 1, "", "buffers"], [1425, 3, 1, "", "children"], [1425, 3, 1, "", "compile"], [1425, 3, 1, "", "cpu"], [1425, 3, 1, "", "cuda"], [1425, 3, 1, "", "double"], [1425, 3, 1, "", "eval"], [1425, 3, 1, "", "extra_repr"], [1425, 3, 1, "", "float"], [1425, 3, 1, "", "forward"], [1425, 3, 1, "", "get_buffer"], [1425, 3, 1, "", "get_extra_state"], [1425, 3, 1, "", "get_parameter"], [1425, 3, 1, "", "get_submodule"], [1425, 3, 1, "", "half"], [1425, 3, 1, "", "ipu"], [1425, 3, 1, "", "load_state_dict"], [1425, 3, 1, "", "modules"], [1425, 3, 1, "", "named_buffers"], [1425, 3, 1, "", "named_children"], [1425, 3, 1, "", "named_modules"], [1425, 3, 1, "", "named_parameters"], [1425, 3, 1, "", "parameters"], [1425, 3, 1, "", "register_backward_hook"], [1425, 3, 1, "", "register_buffer"], [1425, 3, 1, "", "register_forward_hook"], [1425, 3, 1, "", "register_forward_pre_hook"], [1425, 3, 1, "", "register_full_backward_hook"], [1425, 3, 1, "", "register_full_backward_pre_hook"], [1425, 3, 1, "", "register_load_state_dict_post_hook"], [1425, 3, 1, "", "register_module"], [1425, 3, 1, "", "register_parameter"], [1425, 3, 1, "", "register_state_dict_pre_hook"], [1425, 3, 1, "", "requires_grad_"], [1425, 3, 1, "", "set_extra_state"], [1425, 3, 1, "", "share_memory"], [1425, 3, 1, "", "state_dict"], [1425, 3, 1, "", "to"], [1425, 3, 1, "", "to_empty"], [1425, 3, 1, "", "train"], [1425, 3, 1, "", "type"], [1425, 3, 1, "", "xpu"], [1425, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1426, 3, 1, "", "clear"], [1426, 3, 1, "", "items"], [1426, 3, 1, "", "keys"], [1426, 3, 1, "", "pop"], [1426, 3, 1, "", "update"], [1426, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1427, 3, 1, "", "append"], [1427, 3, 1, "", "extend"], [1427, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1431, 3, 1, "", "forward"], [1431, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1435, 3, 1, "", "clear"], [1435, 3, 1, "", "copy"], [1435, 3, 1, "", "fromkeys"], [1435, 3, 1, "", "get"], [1435, 3, 1, "", "items"], [1435, 3, 1, "", "keys"], [1435, 3, 1, "", "pop"], [1435, 3, 1, "", "popitem"], [1435, 3, 1, "", "setdefault"], [1435, 3, 1, "", "update"], [1435, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1436, 3, 1, "", "append"], [1436, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1441, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1453, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1464, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1468, 3, 1, "", "forward"], [1468, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1469, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1470, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1471, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1472, 3, 1, "", "forward"]], "torch.nn.functional": [[1483, 5, 1, "", "adaptive_avg_pool1d"], [1484, 5, 1, "", "adaptive_avg_pool2d"], [1485, 5, 1, "", "adaptive_avg_pool3d"], [1486, 5, 1, "", "adaptive_max_pool1d"], [1487, 5, 1, "", "adaptive_max_pool2d"], [1488, 5, 1, "", "adaptive_max_pool3d"], [1489, 5, 1, "", "affine_grid"], [1490, 5, 1, "", "alpha_dropout"], [1491, 5, 1, "", "avg_pool1d"], [1492, 5, 1, "", "avg_pool2d"], [1493, 5, 1, "", "avg_pool3d"], [1494, 5, 1, "", "batch_norm"], [1495, 5, 1, "", "bilinear"], [1496, 5, 1, "", "binary_cross_entropy"], [1497, 5, 1, "", "binary_cross_entropy_with_logits"], [1498, 5, 1, "", "celu"], [1499, 5, 1, "", "conv1d"], [1500, 5, 1, "", "conv2d"], [1501, 5, 1, "", "conv3d"], [1502, 5, 1, "", "conv_transpose1d"], [1503, 5, 1, "", "conv_transpose2d"], [1504, 5, 1, "", "conv_transpose3d"], [1505, 5, 1, "", "cosine_embedding_loss"], [1506, 5, 1, "", "cosine_similarity"], [1507, 5, 1, "", "cross_entropy"], [1508, 5, 1, "", "ctc_loss"], [1509, 5, 1, "", "dropout"], [1510, 5, 1, "", "dropout1d"], [1511, 5, 1, "", "dropout2d"], [1512, 5, 1, "", "dropout3d"], [1513, 5, 1, "", "elu"], [1514, 5, 1, "", "elu_"], [1515, 5, 1, "", "embedding"], [1516, 5, 1, "", "embedding_bag"], [1517, 5, 1, "", "feature_alpha_dropout"], [1518, 5, 1, "", "fold"], [1519, 5, 1, "", "fractional_max_pool2d"], [1520, 5, 1, "", "fractional_max_pool3d"], [1521, 5, 1, "", "gaussian_nll_loss"], [1522, 5, 1, "", "gelu"], [1523, 5, 1, "", "glu"], [1524, 5, 1, "", "grid_sample"], [1525, 5, 1, "", "group_norm"], [1526, 5, 1, "", "gumbel_softmax"], [1527, 5, 1, "", "hardshrink"], [1528, 5, 1, "", "hardsigmoid"], [1529, 5, 1, "", "hardswish"], [1530, 5, 1, "", "hardtanh"], [1531, 5, 1, "", "hardtanh_"], [1532, 5, 1, "", "hinge_embedding_loss"], [1533, 5, 1, "", "huber_loss"], [1534, 5, 1, "", "instance_norm"], [1535, 5, 1, "", "interpolate"], [1536, 5, 1, "", "kl_div"], [1537, 5, 1, "", "l1_loss"], [1538, 5, 1, "", "layer_norm"], [1539, 5, 1, "", "leaky_relu"], [1540, 5, 1, "", "leaky_relu_"], [1541, 5, 1, "", "linear"], [1542, 5, 1, "", "local_response_norm"], [1543, 5, 1, "", "log_softmax"], [1544, 5, 1, "", "logsigmoid"], [1545, 5, 1, "", "lp_pool1d"], [1546, 5, 1, "", "lp_pool2d"], [1547, 5, 1, "", "margin_ranking_loss"], [1548, 5, 1, "", "max_pool1d"], [1549, 5, 1, "", "max_pool2d"], [1550, 5, 1, "", "max_pool3d"], [1551, 5, 1, "", "max_unpool1d"], [1552, 5, 1, "", "max_unpool2d"], [1553, 5, 1, "", "max_unpool3d"], [1554, 5, 1, "", "mish"], [1555, 5, 1, "", "mse_loss"], [1556, 5, 1, "", "multi_margin_loss"], [1557, 5, 1, "", "multilabel_margin_loss"], [1558, 5, 1, "", "multilabel_soft_margin_loss"], [1559, 5, 1, "", "nll_loss"], [1560, 5, 1, "", "normalize"], [1561, 5, 1, "", "one_hot"], [1562, 5, 1, "", "pad"], [1563, 5, 1, "", "pairwise_distance"], [1564, 5, 1, "", "pdist"], [1565, 5, 1, "", "pixel_shuffle"], [1566, 5, 1, "", "pixel_unshuffle"], [1567, 5, 1, "", "poisson_nll_loss"], [1568, 5, 1, "", "prelu"], [1569, 5, 1, "", "relu"], [1570, 5, 1, "", "relu6"], [1571, 5, 1, "", "relu_"], [1572, 5, 1, "", "rrelu"], [1573, 5, 1, "", "rrelu_"], [1574, 5, 1, "", "scaled_dot_product_attention"], [1575, 5, 1, "", "selu"], [1576, 5, 1, "", "sigmoid"], [1577, 5, 1, "", "silu"], [1578, 5, 1, "", "smooth_l1_loss"], [1579, 5, 1, "", "soft_margin_loss"], [1580, 5, 1, "", "softmax"], [1581, 5, 1, "", "softmin"], [1582, 5, 1, "", "softplus"], [1583, 5, 1, "", "softshrink"], [1584, 5, 1, "", "softsign"], [1585, 5, 1, "", "tanh"], [1586, 5, 1, "", "tanhshrink"], [1587, 5, 1, "", "threshold"], [1588, 5, 1, "", "threshold_"], [1590, 5, 1, "", "triplet_margin_loss"], [1591, 5, 1, "", "triplet_margin_with_distance_loss"], [1592, 5, 1, "", "unfold"], [1593, 5, 1, "", "upsample"], [1594, 5, 1, "", "upsample_bilinear"], [1595, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1891, 5, 1, "", "calculate_gain"], [1891, 5, 1, "", "constant_"], [1891, 5, 1, "", "dirac_"], [1891, 5, 1, "", "eye_"], [1891, 5, 1, "", "kaiming_normal_"], [1891, 5, 1, "", "kaiming_uniform_"], [1891, 5, 1, "", "normal_"], [1891, 5, 1, "", "ones_"], [1891, 5, 1, "", "orthogonal_"], [1891, 5, 1, "", "sparse_"], [1891, 5, 1, "", "trunc_normal_"], [1891, 5, 1, "", "uniform_"], [1891, 5, 1, "", "xavier_normal_"], [1891, 5, 1, "", "xavier_uniform_"], [1891, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1921, 0, 0, "-", "modules"], [1921, 0, 0, "-", "qat"], [1921, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1921, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1921, 0, 0, "-", "dynamic"], [1921, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1921, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1596, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1596, 3, 1, "", "has_uninitialized_params"], [1596, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1597, 5, 1, "", "register_module_backward_hook"], [1598, 5, 1, "", "register_module_buffer_registration_hook"], [1599, 5, 1, "", "register_module_forward_hook"], [1600, 5, 1, "", "register_module_forward_pre_hook"], [1601, 5, 1, "", "register_module_full_backward_hook"], [1602, 5, 1, "", "register_module_full_backward_pre_hook"], [1603, 5, 1, "", "register_module_module_registration_hook"], [1604, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1605, 1, 1, "", "DistributedDataParallel"], [1589, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1605, 3, 1, "", "join"], [1605, 3, 1, "", "join_hook"], [1605, 3, 1, "", "no_sync"], [1605, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1606, 1, 1, "", "Parameter"], [1607, 1, 1, "", "UninitializedBuffer"], [1608, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1608, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1921, 0, 0, "-", "dynamic"], [1921, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1921, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1921, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1921, 0, 0, "-", "dynamic"], [1921, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1921, 0, 0, "-", "modules"]], "torch.nn.utils": [[1609, 5, 1, "", "clip_grad_norm_"], [1610, 5, 1, "", "clip_grad_value_"], [1611, 5, 1, "", "parameters_to_vector"], [1636, 5, 1, "", "remove_spectral_norm"], [1637, 5, 1, "", "remove_weight_norm"], [1645, 5, 1, "", "skip_init"], [1646, 5, 1, "", "spectral_norm"], [1889, 0, 0, "-", "stateless"], [1648, 5, 1, "", "vector_to_parameters"], [1649, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1612, 5, 1, "", "orthogonal"], [1613, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1614, 1, 1, "", "ParametrizationList"], [1615, 5, 1, "", "cached"], [1616, 5, 1, "", "is_parametrized"], [1617, 5, 1, "", "register_parametrization"], [1618, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1614, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1619, 1, 1, "", "BasePruningMethod"], [1620, 1, 1, "", "CustomFromMask"], [1621, 1, 1, "", "Identity"], [1622, 1, 1, "", "L1Unstructured"], [1623, 1, 1, "", "LnStructured"], [1624, 1, 1, "", "PruningContainer"], [1625, 1, 1, "", "RandomStructured"], [1626, 1, 1, "", "RandomUnstructured"], [1627, 5, 1, "", "custom_from_mask"], [1628, 5, 1, "", "global_unstructured"], [1629, 5, 1, "", "identity"], [1630, 5, 1, "", "is_pruned"], [1631, 5, 1, "", "l1_unstructured"], [1632, 5, 1, "", "ln_structured"], [1633, 5, 1, "", "random_structured"], [1634, 5, 1, "", "random_unstructured"], [1635, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1619, 3, 1, "", "apply"], [1619, 3, 1, "", "apply_mask"], [1619, 3, 1, "", "compute_mask"], [1619, 3, 1, "", "prune"], [1619, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1620, 3, 1, "", "apply"], [1620, 3, 1, "", "apply_mask"], [1620, 3, 1, "", "prune"], [1620, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1621, 3, 1, "", "apply"], [1621, 3, 1, "", "apply_mask"], [1621, 3, 1, "", "prune"], [1621, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1622, 3, 1, "", "apply"], [1622, 3, 1, "", "apply_mask"], [1622, 3, 1, "", "prune"], [1622, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1623, 3, 1, "", "apply"], [1623, 3, 1, "", "apply_mask"], [1623, 3, 1, "", "compute_mask"], [1623, 3, 1, "", "prune"], [1623, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1624, 3, 1, "", "add_pruning_method"], [1624, 3, 1, "", "apply"], [1624, 3, 1, "", "apply_mask"], [1624, 3, 1, "", "compute_mask"], [1624, 3, 1, "", "prune"], [1624, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1625, 3, 1, "", "apply"], [1625, 3, 1, "", "apply_mask"], [1625, 3, 1, "", "compute_mask"], [1625, 3, 1, "", "prune"], [1625, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1626, 3, 1, "", "apply"], [1626, 3, 1, "", "apply_mask"], [1626, 3, 1, "", "prune"], [1626, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1638, 1, 1, "", "PackedSequence"], [1639, 5, 1, "", "pack_padded_sequence"], [1640, 5, 1, "", "pack_sequence"], [1641, 5, 1, "", "pad_packed_sequence"], [1642, 5, 1, "", "pad_sequence"], [1643, 5, 1, "", "unpack_sequence"], [1644, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1638, 2, 1, "", "batch_sizes"], [1638, 3, 1, "", "count"], [1638, 2, 1, "", "data"], [1638, 3, 1, "", "index"], [1638, 4, 1, "", "is_cuda"], [1638, 3, 1, "", "is_pinned"], [1638, 2, 1, "", "sorted_indices"], [1638, 3, 1, "", "to"], [1638, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1647, 5, 1, "", "functional_call"]], "torch.onnx": [[1658, 1, 1, "", "DiagnosticOptions"], [1659, 1, 1, "", "ExportOptions"], [1660, 1, 1, "", "ExportOutput"], [1661, 1, 1, "", "ExportOutputSerializer"], [1662, 1, 1, "", "JitScalarType"], [1663, 1, 1, "", "OnnxExporterError"], [1664, 1, 1, "", "OnnxRegistry"], [1911, 5, 1, "", "disable_log"], [1911, 5, 1, "", "dynamo_export"], [1911, 5, 1, "", "enable_fake_mode"], [1911, 5, 1, "", "enable_log"], [1911, 5, 1, "", "export"], [1911, 5, 1, "", "export_to_pretty_string"], [1911, 5, 1, "", "is_in_onnx_export"], [1911, 5, 1, "", "is_onnxrt_backend_supported"], [1911, 5, 1, "", "register_custom_op_symbolic"], [1911, 5, 1, "", "select_model_mode_for_export"], [1911, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1660, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1660, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1660, 4, 1, "", "diagnostic_context"], [1660, 4, 1, "", "fake_context"], [1660, 4, 1, "", "model_proto"], [1660, 3, 1, "", "save"], [1660, 3, 1, "", "save_diagnostics"]], "torch.onnx.ExportOutputSerializer": [[1661, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1662, 3, 1, "", "dtype"], [1662, 3, 1, "", "from_dtype"], [1662, 3, 1, "", "from_value"], [1662, 3, 1, "", "onnx_compatible"], [1662, 3, 1, "", "onnx_type"], [1662, 3, 1, "", "scalar_name"], [1662, 3, 1, "", "torch_name"]], "torch.onnx.OnnxRegistry": [[1664, 3, 1, "", "get_op_functions"], [1664, 3, 1, "", "is_registered_op"], [1664, 4, 1, "", "opset_version"], [1664, 3, 1, "", "register_op"]], "torch.onnx._internal": [[1912, 0, 0, "-", "diagnostics"]], "torch.onnx.verification": [[1665, 1, 1, "", "GraphInfo"], [1666, 1, 1, "", "VerificationOptions"], [1911, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1665, 3, 1, "", "all_mismatch_leaf_graph_info"], [1665, 3, 1, "", "clear"], [1665, 3, 1, "", "essential_node_count"], [1665, 3, 1, "", "essential_node_kinds"], [1665, 3, 1, "", "export_repro"], [1665, 3, 1, "", "find_mismatch"], [1665, 3, 1, "", "find_partition"], [1665, 3, 1, "", "has_mismatch"], [1665, 3, 1, "", "pretty_print_mismatch"], [1665, 3, 1, "", "pretty_print_tree"], [1665, 3, 1, "", "verify_export"]], "torch.optim": [[1667, 1, 1, "", "ASGD"], [1668, 1, 1, "", "Adadelta"], [1669, 1, 1, "", "Adagrad"], [1670, 1, 1, "", "Adam"], [1671, 1, 1, "", "AdamW"], [1672, 1, 1, "", "Adamax"], [1673, 1, 1, "", "LBFGS"], [1674, 1, 1, "", "NAdam"], [1914, 1, 1, "", "Optimizer"], [1680, 1, 1, "", "RAdam"], [1681, 1, 1, "", "RMSprop"], [1682, 1, 1, "", "Rprop"], [1683, 1, 1, "", "SGD"], [1684, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1667, 3, 1, "", "add_param_group"], [1667, 3, 1, "", "load_state_dict"], [1667, 3, 1, "", "register_load_state_dict_post_hook"], [1667, 3, 1, "", "register_load_state_dict_pre_hook"], [1667, 3, 1, "", "register_state_dict_post_hook"], [1667, 3, 1, "", "register_state_dict_pre_hook"], [1667, 3, 1, "", "register_step_post_hook"], [1667, 3, 1, "", "register_step_pre_hook"], [1667, 3, 1, "", "state_dict"], [1667, 3, 1, "", "step"], [1667, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1668, 3, 1, "", "add_param_group"], [1668, 3, 1, "", "load_state_dict"], [1668, 3, 1, "", "register_load_state_dict_post_hook"], [1668, 3, 1, "", "register_load_state_dict_pre_hook"], [1668, 3, 1, "", "register_state_dict_post_hook"], [1668, 3, 1, "", "register_state_dict_pre_hook"], [1668, 3, 1, "", "register_step_post_hook"], [1668, 3, 1, "", "register_step_pre_hook"], [1668, 3, 1, "", "state_dict"], [1668, 3, 1, "", "step"], [1668, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1669, 3, 1, "", "add_param_group"], [1669, 3, 1, "", "load_state_dict"], [1669, 3, 1, "", "register_load_state_dict_post_hook"], [1669, 3, 1, "", "register_load_state_dict_pre_hook"], [1669, 3, 1, "", "register_state_dict_post_hook"], [1669, 3, 1, "", "register_state_dict_pre_hook"], [1669, 3, 1, "", "register_step_post_hook"], [1669, 3, 1, "", "register_step_pre_hook"], [1669, 3, 1, "", "state_dict"], [1669, 3, 1, "", "step"], [1669, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1670, 3, 1, "", "add_param_group"], [1670, 3, 1, "", "load_state_dict"], [1670, 3, 1, "", "register_load_state_dict_post_hook"], [1670, 3, 1, "", "register_load_state_dict_pre_hook"], [1670, 3, 1, "", "register_state_dict_post_hook"], [1670, 3, 1, "", "register_state_dict_pre_hook"], [1670, 3, 1, "", "register_step_post_hook"], [1670, 3, 1, "", "register_step_pre_hook"], [1670, 3, 1, "", "state_dict"], [1670, 3, 1, "", "step"], [1670, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1671, 3, 1, "", "add_param_group"], [1671, 3, 1, "", "load_state_dict"], [1671, 3, 1, "", "register_load_state_dict_post_hook"], [1671, 3, 1, "", "register_load_state_dict_pre_hook"], [1671, 3, 1, "", "register_state_dict_post_hook"], [1671, 3, 1, "", "register_state_dict_pre_hook"], [1671, 3, 1, "", "register_step_post_hook"], [1671, 3, 1, "", "register_step_pre_hook"], [1671, 3, 1, "", "state_dict"], [1671, 3, 1, "", "step"], [1671, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1672, 3, 1, "", "add_param_group"], [1672, 3, 1, "", "load_state_dict"], [1672, 3, 1, "", "register_load_state_dict_post_hook"], [1672, 3, 1, "", "register_load_state_dict_pre_hook"], [1672, 3, 1, "", "register_state_dict_post_hook"], [1672, 3, 1, "", "register_state_dict_pre_hook"], [1672, 3, 1, "", "register_step_post_hook"], [1672, 3, 1, "", "register_step_pre_hook"], [1672, 3, 1, "", "state_dict"], [1672, 3, 1, "", "step"], [1672, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1673, 3, 1, "", "add_param_group"], [1673, 3, 1, "", "load_state_dict"], [1673, 3, 1, "", "register_load_state_dict_post_hook"], [1673, 3, 1, "", "register_load_state_dict_pre_hook"], [1673, 3, 1, "", "register_state_dict_post_hook"], [1673, 3, 1, "", "register_state_dict_pre_hook"], [1673, 3, 1, "", "register_step_post_hook"], [1673, 3, 1, "", "register_step_pre_hook"], [1673, 3, 1, "", "state_dict"], [1673, 3, 1, "", "step"], [1673, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1674, 3, 1, "", "add_param_group"], [1674, 3, 1, "", "load_state_dict"], [1674, 3, 1, "", "register_load_state_dict_post_hook"], [1674, 3, 1, "", "register_load_state_dict_pre_hook"], [1674, 3, 1, "", "register_state_dict_post_hook"], [1674, 3, 1, "", "register_state_dict_pre_hook"], [1674, 3, 1, "", "register_step_post_hook"], [1674, 3, 1, "", "register_step_pre_hook"], [1674, 3, 1, "", "state_dict"], [1674, 3, 1, "", "step"], [1674, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1675, 3, 1, "", "add_param_group"], [1676, 3, 1, "", "load_state_dict"], [1677, 3, 1, "", "state_dict"], [1678, 3, 1, "", "step"], [1679, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1680, 3, 1, "", "add_param_group"], [1680, 3, 1, "", "load_state_dict"], [1680, 3, 1, "", "register_load_state_dict_post_hook"], [1680, 3, 1, "", "register_load_state_dict_pre_hook"], [1680, 3, 1, "", "register_state_dict_post_hook"], [1680, 3, 1, "", "register_state_dict_pre_hook"], [1680, 3, 1, "", "register_step_post_hook"], [1680, 3, 1, "", "register_step_pre_hook"], [1680, 3, 1, "", "state_dict"], [1680, 3, 1, "", "step"], [1680, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1681, 3, 1, "", "add_param_group"], [1681, 3, 1, "", "load_state_dict"], [1681, 3, 1, "", "register_load_state_dict_post_hook"], [1681, 3, 1, "", "register_load_state_dict_pre_hook"], [1681, 3, 1, "", "register_state_dict_post_hook"], [1681, 3, 1, "", "register_state_dict_pre_hook"], [1681, 3, 1, "", "register_step_post_hook"], [1681, 3, 1, "", "register_step_pre_hook"], [1681, 3, 1, "", "state_dict"], [1681, 3, 1, "", "step"], [1681, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1682, 3, 1, "", "add_param_group"], [1682, 3, 1, "", "load_state_dict"], [1682, 3, 1, "", "register_load_state_dict_post_hook"], [1682, 3, 1, "", "register_load_state_dict_pre_hook"], [1682, 3, 1, "", "register_state_dict_post_hook"], [1682, 3, 1, "", "register_state_dict_pre_hook"], [1682, 3, 1, "", "register_step_post_hook"], [1682, 3, 1, "", "register_step_pre_hook"], [1682, 3, 1, "", "state_dict"], [1682, 3, 1, "", "step"], [1682, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1683, 3, 1, "", "add_param_group"], [1683, 3, 1, "", "load_state_dict"], [1683, 3, 1, "", "register_load_state_dict_post_hook"], [1683, 3, 1, "", "register_load_state_dict_pre_hook"], [1683, 3, 1, "", "register_state_dict_post_hook"], [1683, 3, 1, "", "register_state_dict_pre_hook"], [1683, 3, 1, "", "register_step_post_hook"], [1683, 3, 1, "", "register_step_pre_hook"], [1683, 3, 1, "", "state_dict"], [1683, 3, 1, "", "step"], [1683, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1684, 3, 1, "", "add_param_group"], [1684, 3, 1, "", "load_state_dict"], [1684, 3, 1, "", "register_load_state_dict_post_hook"], [1684, 3, 1, "", "register_load_state_dict_pre_hook"], [1684, 3, 1, "", "register_state_dict_post_hook"], [1684, 3, 1, "", "register_state_dict_pre_hook"], [1684, 3, 1, "", "register_step_post_hook"], [1684, 3, 1, "", "register_step_pre_hook"], [1684, 3, 1, "", "state_dict"], [1684, 3, 1, "", "step"], [1684, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1685, 1, 1, "", "ChainedScheduler"], [1686, 1, 1, "", "ConstantLR"], [1687, 1, 1, "", "CosineAnnealingLR"], [1688, 1, 1, "", "CosineAnnealingWarmRestarts"], [1689, 1, 1, "", "CyclicLR"], [1690, 1, 1, "", "ExponentialLR"], [1691, 1, 1, "", "LambdaLR"], [1692, 1, 1, "", "LinearLR"], [1693, 1, 1, "", "MultiStepLR"], [1694, 1, 1, "", "MultiplicativeLR"], [1695, 1, 1, "", "OneCycleLR"], [1696, 1, 1, "", "PolynomialLR"], [1697, 1, 1, "", "ReduceLROnPlateau"], [1698, 1, 1, "", "SequentialLR"], [1699, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1685, 3, 1, "", "get_last_lr"], [1685, 3, 1, "", "load_state_dict"], [1685, 3, 1, "", "print_lr"], [1685, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1686, 3, 1, "", "get_last_lr"], [1686, 3, 1, "", "load_state_dict"], [1686, 3, 1, "", "print_lr"], [1686, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1687, 3, 1, "", "get_last_lr"], [1687, 3, 1, "", "load_state_dict"], [1687, 3, 1, "", "print_lr"], [1687, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1688, 3, 1, "", "get_last_lr"], [1688, 3, 1, "", "load_state_dict"], [1688, 3, 1, "", "print_lr"], [1688, 3, 1, "", "state_dict"], [1688, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1689, 3, 1, "", "get_last_lr"], [1689, 3, 1, "", "get_lr"], [1689, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1690, 3, 1, "", "get_last_lr"], [1690, 3, 1, "", "load_state_dict"], [1690, 3, 1, "", "print_lr"], [1690, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1691, 3, 1, "", "get_last_lr"], [1691, 3, 1, "", "load_state_dict"], [1691, 3, 1, "", "print_lr"], [1691, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1692, 3, 1, "", "get_last_lr"], [1692, 3, 1, "", "load_state_dict"], [1692, 3, 1, "", "print_lr"], [1692, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1693, 3, 1, "", "get_last_lr"], [1693, 3, 1, "", "load_state_dict"], [1693, 3, 1, "", "print_lr"], [1693, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1694, 3, 1, "", "get_last_lr"], [1694, 3, 1, "", "load_state_dict"], [1694, 3, 1, "", "print_lr"], [1694, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1695, 3, 1, "", "get_last_lr"], [1695, 3, 1, "", "load_state_dict"], [1695, 3, 1, "", "print_lr"], [1695, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1696, 3, 1, "", "get_last_lr"], [1696, 3, 1, "", "load_state_dict"], [1696, 3, 1, "", "print_lr"], [1696, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.SequentialLR": [[1698, 3, 1, "", "get_last_lr"], [1698, 3, 1, "", "load_state_dict"], [1698, 3, 1, "", "print_lr"], [1698, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1699, 3, 1, "", "get_last_lr"], [1699, 3, 1, "", "load_state_dict"], [1699, 3, 1, "", "print_lr"], [1699, 3, 1, "", "state_dict"]], "torch.overrides": [[1957, 5, 1, "", "get_ignored_functions"], [1957, 5, 1, "", "get_overridable_functions"], [1957, 5, 1, "", "get_testing_overrides"], [1957, 5, 1, "", "handle_torch_function"], [1957, 5, 1, "", "has_torch_function"], [1957, 5, 1, "", "is_tensor_like"], [1957, 5, 1, "", "is_tensor_method_or_property"], [1957, 5, 1, "", "resolve_name"], [1957, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1915, 1, 1, "", "Directory"], [1915, 1, 1, "", "EmptyMatchError"], [1915, 1, 1, "", "PackageExporter"], [1915, 1, 1, "", "PackageImporter"], [1915, 1, 1, "", "PackagingError"], [1915, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1915, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1915, 3, 1, "", "__init__"], [1915, 3, 1, "", "add_dependency"], [1915, 3, 1, "", "all_paths"], [1915, 3, 1, "", "close"], [1915, 3, 1, "", "denied_modules"], [1915, 3, 1, "", "deny"], [1915, 3, 1, "", "dependency_graph_string"], [1915, 3, 1, "", "extern"], [1915, 3, 1, "", "externed_modules"], [1915, 3, 1, "", "get_rdeps"], [1915, 3, 1, "", "get_unique_id"], [1915, 3, 1, "", "intern"], [1915, 3, 1, "", "interned_modules"], [1915, 3, 1, "", "mock"], [1915, 3, 1, "", "mocked_modules"], [1915, 3, 1, "", "register_extern_hook"], [1915, 3, 1, "", "register_intern_hook"], [1915, 3, 1, "", "register_mock_hook"], [1915, 3, 1, "", "save_binary"], [1915, 3, 1, "", "save_module"], [1915, 3, 1, "", "save_pickle"], [1915, 3, 1, "", "save_source_file"], [1915, 3, 1, "", "save_source_string"], [1915, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1915, 3, 1, "", "__init__"], [1915, 3, 1, "", "file_structure"], [1915, 3, 1, "", "id"], [1915, 3, 1, "", "import_module"], [1915, 3, 1, "", "load_binary"], [1915, 3, 1, "", "load_pickle"], [1915, 3, 1, "", "load_text"], [1915, 3, 1, "", "python_version"]], "torch.profiler": [[1917, 1, 1, "", "ProfilerAction"], [1917, 1, 1, "", "ProfilerActivity"], [1917, 1, 1, "", "_KinetoProfile"], [1917, 1, 1, "", "profile"], [1917, 5, 1, "", "schedule"], [1917, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1917, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1917, 3, 1, "", "add_metadata"], [1917, 3, 1, "", "add_metadata_json"], [1917, 3, 1, "", "events"], [1917, 3, 1, "", "export_chrome_trace"], [1917, 3, 1, "", "export_memory_timeline"], [1917, 3, 1, "", "export_stacks"], [1917, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1917, 5, 1, "", "is_available"], [1917, 5, 1, "", "mark"], [1917, 5, 1, "", "range_pop"], [1917, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1917, 3, 1, "", "step"]], "torch.quantization": [[1921, 0, 0, "-", "fx"]], "torch.quasirandom": [[1720, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1720, 3, 1, "", "draw"], [1720, 3, 1, "", "draw_base2"], [1720, 3, 1, "", "fast_forward"], [1720, 3, 1, "", "reset"]], "torch.random": [[1922, 5, 1, "", "fork_rng"], [1922, 5, 1, "", "get_rng_state"], [1922, 5, 1, "", "initial_seed"], [1922, 5, 1, "", "manual_seed"], [1922, 5, 1, "", "seed"], [1922, 5, 1, "", "set_rng_state"]], "torch.serialization": [[1909, 5, 1, "", "get_default_load_endianness"], [1909, 5, 1, "", "register_package"], [1909, 5, 1, "", "set_default_load_endianness"]], "torch.signal": [[1926, 0, 0, "-", "windows"]], "torch.signal.windows": [[1768, 5, 1, "", "bartlett"], [1769, 5, 1, "", "blackman"], [1770, 5, 1, "", "cosine"], [1771, 5, 1, "", "exponential"], [1772, 5, 1, "", "gaussian"], [1773, 5, 1, "", "general_cosine"], [1774, 5, 1, "", "general_hamming"], [1775, 5, 1, "", "hamming"], [1776, 5, 1, "", "hann"], [1777, 5, 1, "", "kaiser"], [1778, 5, 1, "", "nuttall"]], "torch.sparse": [[1788, 5, 1, "", "addmm"], [1789, 5, 1, "", "as_sparse_gradcheck"], [1790, 1, 1, "", "check_sparse_tensor_invariants"], [1791, 5, 1, "", "log_softmax"], [1792, 5, 1, "", "mm"], [1793, 5, 1, "", "sampled_addmm"], [1794, 5, 1, "", "softmax"], [1795, 5, 1, "", "spdiags"], [1796, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1790, 3, 1, "", "disable"], [1790, 3, 1, "", "enable"], [1790, 3, 1, "", "is_enabled"]], "torch.special": [[1928, 5, 1, "", "airy_ai"], [1928, 5, 1, "", "bessel_j0"], [1928, 5, 1, "", "bessel_j1"], [1928, 5, 1, "", "digamma"], [1928, 5, 1, "", "entr"], [1928, 5, 1, "", "erf"], [1928, 5, 1, "", "erfc"], [1928, 5, 1, "", "erfcx"], [1928, 5, 1, "", "erfinv"], [1928, 5, 1, "", "exp2"], [1928, 5, 1, "", "expit"], [1928, 5, 1, "", "expm1"], [1928, 5, 1, "", "gammainc"], [1928, 5, 1, "", "gammaincc"], [1928, 5, 1, "", "gammaln"], [1928, 5, 1, "", "i0"], [1928, 5, 1, "", "i0e"], [1928, 5, 1, "", "i1"], [1928, 5, 1, "", "i1e"], [1928, 5, 1, "", "log1p"], [1928, 5, 1, "", "log_ndtr"], [1928, 5, 1, "", "log_softmax"], [1928, 5, 1, "", "logit"], [1928, 5, 1, "", "logsumexp"], [1928, 5, 1, "", "multigammaln"], [1928, 5, 1, "", "ndtr"], [1928, 5, 1, "", "ndtri"], [1928, 5, 1, "", "polygamma"], [1928, 5, 1, "", "psi"], [1928, 5, 1, "", "round"], [1928, 5, 1, "", "scaled_modified_bessel_k0"], [1928, 5, 1, "", "scaled_modified_bessel_k1"], [1928, 5, 1, "", "sinc"], [1928, 5, 1, "", "softmax"], [1928, 5, 1, "", "spherical_bessel_j0"], [1928, 5, 1, "", "xlog1py"], [1928, 5, 1, "", "xlogy"], [1928, 5, 1, "", "zeta"]], "torch.testing": [[1934, 5, 1, "", "assert_allclose"], [1934, 5, 1, "", "assert_close"], [1934, 5, 1, "", "make_tensor"]], "torch.torch": [[1935, 2, 1, "", "default_generator"], [1959, 1, 1, "", "finfo"], [1959, 1, 1, "", "iinfo"]], "torch.utils": [[1935, 0, 0, "-", "backcompat"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [20, 0, 0, "-", "data"], [1851, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1852, 5, 1, "", "get_cpp_backtrace"], [1935, 0, 0, "-", "hipify"], [1876, 0, 0, "-", "jit"], [1935, 0, 0, "-", "model_dump"], [1882, 0, 0, "-", "model_zoo"], [1853, 5, 1, "", "rename_privateuse1_backend"], [1854, 5, 1, "", "set_module"], [1932, 0, 0, "-", "tensorboard"], [1935, 0, 0, "-", "viz"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[13, 5, 1, "", "BuildExtension"], [13, 5, 1, "", "CUDAExtension"], [13, 5, 1, "", "CppExtension"], [13, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [13, 5, 1, "", "include_paths"], [13, 5, 1, "", "is_ninja_available"], [13, 5, 1, "", "load"], [13, 5, 1, "", "load_inline"], [13, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[20, 1, 1, "", "BatchSampler"], [20, 1, 1, "", "ChainDataset"], [20, 1, 1, "", "ConcatDataset"], [20, 1, 1, "", "DataLoader"], [20, 1, 1, "", "Dataset"], [20, 1, 1, "", "IterableDataset"], [20, 1, 1, "", "RandomSampler"], [20, 1, 1, "", "Sampler"], [20, 1, 1, "", "SequentialSampler"], [20, 1, 1, "", "StackDataset"], [20, 1, 1, "", "Subset"], [20, 1, 1, "", "SubsetRandomSampler"], [20, 1, 1, "", "TensorDataset"], [20, 1, 1, "", "WeightedRandomSampler"], [20, 0, 0, "-", "datapipes"], [20, 5, 1, "", "default_collate"], [20, 5, 1, "", "default_convert"], [20, 5, 1, "", "get_worker_info"], [20, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[20, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[20, 0, 0, "-", "dataframe"], [20, 0, 0, "-", "iter"], [20, 0, 0, "-", "map"], [20, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[20, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[30, 5, 1, "", "from_dlpack"], [30, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1881, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1882, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1932, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1932, 3, 1, "", "__init__"], [1932, 3, 1, "", "add_audio"], [1932, 3, 1, "", "add_custom_scalars"], [1932, 3, 1, "", "add_embedding"], [1932, 3, 1, "", "add_figure"], [1932, 3, 1, "", "add_graph"], [1932, 3, 1, "", "add_histogram"], [1932, 3, 1, "", "add_hparams"], [1932, 3, 1, "", "add_image"], [1932, 3, 1, "", "add_images"], [1932, 3, 1, "", "add_mesh"], [1932, 3, 1, "", "add_pr_curve"], [1932, 3, 1, "", "add_scalar"], [1932, 3, 1, "", "add_scalars"], [1932, 3, 1, "", "add_text"], [1932, 3, 1, "", "add_video"], [1932, 3, 1, "", "close"], [1932, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 20, 1870, 1892, 1899], "mix": [0, 1870, 1892], "precis": [0, 1892, 1896, 1907], "packag": [0, 1, 14, 23, 1885, 1910, 1915], "torch": [0, 1, 2, 3, 4, 5, 10, 12, 13, 15, 16, 20, 22, 23, 25, 26, 28, 29, 30, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 960, 961, 962, 963, 964, 965, 970, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1609, 1610, 1611, 1612, 1613, 1615, 1616, 1617, 1618, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1675, 1676, 1677, 1678, 1679, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1873, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1888, 1889, 1890, 1891, 1896, 1898, 1899, 1902, 1907, 1909, 1911, 1912, 1914, 1915, 1917, 1921, 1922, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1946, 1947, 1954, 1957, 1959, 1960], "amp": [0, 1896], "autocast": [0, 1892], "gradient": [0, 1, 52, 1145, 1892, 1893, 1899, 1935], "scale": [0, 1892, 1903], "op": [0, 72, 1875, 1892, 1911, 1935], "refer": [0, 17, 48, 54, 1870, 1872, 1873, 1874, 1883, 1887, 1902, 1915, 1917, 1918, 1921, 1925, 1933, 1939, 1958], "elig": 0, "cuda": [0, 2, 10, 16, 17, 197, 970, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1885, 1892, 1896, 1900, 1902, 1906, 1908, 1910, 1941, 1954, 1958], "specif": [0, 20, 1927], "behavior": [0, 20, 1893, 1901], "can": [0, 1893, 1900, 1953], "float16": 0, "float32": 0, "promot": [0, 7, 74], "widest": 0, "input": [0, 1886, 1892, 1901], "type": [0, 20, 74, 590, 1872, 1873, 1898, 1911, 1915, 1933, 1959], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1497], "over": [0, 8, 1872], "binary_cross_entropi": [0, 1496], "cpu": [0, 2, 10, 15, 194, 960, 961, 962, 963, 964, 1893, 1895, 1906, 1918, 1940], "bfloat16": [0, 143], "differenti": [1, 1893], "autograd": [1, 10, 11, 14, 51, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 1887, 1892, 1893, 1898, 1899, 1911, 1923, 1924], "forward": [1, 877, 1898, 1924], "mode": [1, 41, 49, 402, 1297, 1893, 1898, 1901, 1911, 1918, 1924], "function": [1, 23, 29, 45, 47, 48, 50, 52, 54, 70, 73, 876, 877, 878, 879, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 1122, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1870, 1871, 1872, 1873, 1875, 1878, 1880, 1886, 1888, 1889, 1890, 1892, 1893, 1899, 1901, 1909, 1911, 1921, 1927, 1928, 1946, 1957], "higher": 1, "level": [1, 10, 72, 1921], "api": [1, 10, 14, 17, 26, 34, 48, 51, 54, 1869, 1870, 1873, 1883, 1887, 1895, 1896, 1898, 1902, 1903, 1915, 1916, 1917, 1918, 1921, 1939, 1944, 1945, 1946, 1947, 1958], "local": [1, 1873, 1893, 1935, 1953, 1955], "disabl": [1, 20, 944, 1870, 1893, 1935, 1946, 1947], "comput": [1, 52, 1893, 1907, 1924, 1935], "default": [1, 20, 21, 1872, 1893, 1896, 1901, 1920], "layout": [1, 1930], "manual": 1, "In": [1, 8, 1893, 1894, 1935], "place": [1, 51, 1886, 1893, 1894, 1911, 1935], "oper": [1, 10, 21, 23, 51, 75, 1872, 1873, 1878, 1880, 1886, 1887, 1888, 1893, 1898, 1903, 1910, 1911, 1913, 1918, 1927, 1933, 1935, 1945], "tensor": [1, 11, 14, 28, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 1829, 1871, 1875, 1878, 1885, 1886, 1887, 1888, 1893, 1898, 1909, 1911, 1918, 1921, 1927, 1930, 1931, 1933, 1935, 1945], "correct": [1, 54, 1893], "check": [1, 54, 1870, 1893, 1902, 1953], "variabl": [1, 23, 41, 1870, 1872, 1873, 1896, 1949, 1950], "deprec": 1, "context": [1, 24, 38, 59, 1924], "method": [1, 33, 34, 37, 42, 1871, 1872, 1875, 1911, 1921, 1927], "mixin": 1, "numer": [1, 1901, 1907, 1919], "profil": [1, 23, 902, 903, 904, 905, 906, 1306, 1307, 1308, 1884, 1903, 1904, 1917, 1950, 1954, 1956], "anomali": 1, "detect": 1, "graph": [1, 16, 54, 67, 897, 898, 899, 900, 901, 1000, 1870, 1893, 1896, 1918, 1941, 1946, 1954, 1955, 1956], "backend": [2, 23, 40, 41, 1870, 1902, 1905, 1918, 1920, 1923, 1938, 1940, 1942, 1956], "cudnn": 2, "mp": [2, 10, 1300, 1301, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1884, 1905], "mkl": 2, "mkldnn": [2, 10], "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 1908, 1950], "util": [3, 4, 5, 10, 13, 20, 23, 30, 48, 50, 1043, 1609, 1610, 1611, 1612, 1613, 1615, 1616, 1617, 1618, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1851, 1852, 1853, 1854, 1876, 1881, 1882, 1889, 1909, 1921, 1932, 1935, 1937, 1955, 1960], "bottleneck": 4, "checkpoint": [5, 21, 25], "pytorch": [6, 7, 8, 9, 10, 14, 22, 23, 51, 1869, 1870, 1871, 1875, 1893, 1896, 1898, 1908, 1909, 1911, 1916, 1921, 1938, 1941, 1952, 1953, 1956], "govern": [6, 9, 10], "build": [6, 7, 10, 1895, 1903, 1904, 1910], "ci": [6, 10], "how": [6, 21, 49, 1868, 1893, 1898, 1914, 1915, 1943, 1945, 1946, 1953], "add": [6, 9, 85, 672], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 1911], "guid": 7, "process": [7, 9, 20, 38, 1892], "get": [7, 26, 1911, 1938, 1946, 1948], "start": [7, 26, 38, 1307, 1938, 1948], "propos": 7, "featur": [7, 1903, 1904], "report": [7, 1900], "issu": [7, 1870, 1954], "implement": [7, 31, 40, 42, 1868, 1897, 1901, 1911, 1919, 1921, 1925, 1945], "fix": [7, 41, 49, 249, 1103], "bug": 7, "ad": [7, 1898, 1911], "tutori": [7, 10, 1915, 1916, 1923], "improv": [7, 1904], "document": [7, 26, 1869], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 54, 1870, 1896, 1915, 1946], "readabl": 7, "test": [7, 1873, 1898, 1915, 1934, 1953], "case": [7, 1870], "make": [7, 9, 1941, 1949], "codebas": 7, "more": [7, 47, 1923, 1938], "robust": 7, "triag": 7, "about": [7, 1893, 1923, 1945], "sourc": [7, 1908, 1910, 1915], "develop": [7, 1869, 1911, 1938], "common": [7, 23, 54, 1903, 1918], "mistak": 7, "To": 7, "avoid": [7, 1906, 1908, 1911, 1915], "frequent": [7, 1870, 1900, 1911, 1918, 1946], "ask": [7, 1870, 1900, 1911, 1918, 1946], "question": [7, 1870, 1900, 1911, 1918, 1946], "On": [7, 21, 1872], "python": [7, 8, 51, 56, 57, 58, 59, 60, 61, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1898, 1908, 1911, 1949], "doc": [7, 10, 1902], "c": [7, 10, 14, 1893, 1898, 1902, 1909, 1911], "overview": [7, 17, 54, 1912, 1915, 1917, 1927, 1942, 1949], "design": [8, 1873, 1897, 1923, 1924, 1925], "philosophi": 8, "principl": [8, 9], "1": [8, 41, 49, 1870, 1899], "usabl": 8, "perform": [8, 10, 1904, 1909, 1945, 1953, 1954, 1956], "2": [8, 49, 1870, 1896, 1899, 1900, 1921, 1952, 1953, 1956], "simpl": [8, 1872, 1873, 1904, 1924], "easi": 8, "3": [8, 41, 49], "first": [8, 1915], "best": [8, 1896, 1906, 1918, 1940], "class": [8, 33, 54, 1870, 1872, 1873, 1875, 1911, 1914, 1915, 1933], "languag": [8, 1869, 1870, 1872, 1873, 1874], "interoper": 8, "mechan": [9, 1890, 1893, 1901], "summari": [9, 1918, 1949], "modul": [9, 10, 48, 50, 54, 1425, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1870, 1871, 1872, 1873, 1875, 1889, 1893, 1898, 1904, 1909, 1915, 1918, 1952], "core": [9, 10, 1951], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1873], "confirm": 9, "remov": [9, 1635, 1886], "The": [9, 54, 1873, 1893, 1944], "re": [9, 1915], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 41, 49, 1946], "controversi": 9, "gener": [9, 16, 24, 51, 54, 76, 1894, 1899, 1908, 1918, 1919, 1935, 1943, 1958], "polici": [9, 1944], "faq": [9, 1910], "respons": 10, "nn": [10, 48, 50, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1609, 1610, 1611, 1612, 1613, 1615, 1616, 1617, 1618, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1872, 1873, 1889, 1890, 1891, 1893, 1896, 1898, 1909, 1921, 1927, 1952], "optim": [10, 27, 1675, 1676, 1677, 1678, 1679, 1892, 1893, 1914, 1923, 1924, 1935], "compil": [10, 50, 939, 941, 942, 943, 944, 945, 946, 1896, 1938, 1939, 1946, 1947, 1954, 1956], "jit": [10, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1870, 1873, 1876], "torchscript": [10, 14, 1870, 1871, 1872, 1873, 1875, 1895, 1903, 1913, 1915], "fx": [10, 54, 67, 68, 69, 71, 74, 1904, 1918, 1921, 1937], "torchdynamo": [10, 1897, 1911, 1941, 1943, 1947, 1956], "distribut": [10, 23, 25, 26, 27, 28, 29, 41, 1889, 1890, 1897, 1902, 1904, 1923, 1924, 1946], "rng": 10, "multiprocess": [10, 38, 1885, 1896, 1906, 1910], "dataload": [10, 1908], "linear": [10, 11, 719, 720, 743, 751, 768, 1129, 1412, 1541, 1889, 1890, 1907, 1927], "algebra": [10, 11, 1907, 1927], "linalg": [10, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1878, 1907], "spars": [10, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1889, 1890, 1927], "nestedtensor": 10, "nest": [10, 1888], "maskedtensor": [10, 1880], "mask": [10, 1880], "fast": [10, 45, 1901, 1924], "fourier": [10, 45], "transform": [10, 29, 45, 47, 48, 50, 52, 54, 1468, 1889, 1898, 1904, 1946, 1955], "fft": [10, 45, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102], "inductor": 10, "gpu": [10, 23, 1889, 1890, 1892, 1900, 1916, 1950], "triton": [10, 1950], "nvfuser": 10, "amd": [10, 1907], "rocm": [10, 1902], "hip": [10, 1902], "tool": [10, 16, 1919, 1927], "c10": 10, "dispatch": 10, "onnx": [10, 67, 68, 75, 1911, 1912, 1913], "export": [10, 44, 1911, 1915, 1921, 1935, 1946], "mobil": 10, "edg": [10, 1870, 1915], "model": [10, 14, 1868, 1892, 1900, 1903, 1914, 1915, 1916, 1918, 1921, 1944, 1948, 1950], "compress": [10, 1927], "window": [10, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1910, 1926], "appl": 10, "m1": 10, "powerpc": 10, "librari": [10, 1869, 1877, 1908], "xla": 10, "torchserv": 10, "torchvis": [10, 49], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "complex": [11, 947, 1893, 1901], "number": [11, 16, 41, 1893, 1895, 1900, 1908, 1935], "creat": [11, 1870, 1887], "transit": [11, 41], "from": [11, 41, 50, 54, 1868, 1886, 1910, 1911, 1915], "old": 11, "represent": [11, 67], "access": [11, 1872, 1915, 1956], "real": [11, 470, 1731, 1901], "imag": [11, 299, 1162], "angl": [11, 105, 685], "ab": [11, 77, 668], "serial": [11, 1909, 1935], "__config__": 12, "cpp_extens": 13, "extend": [14, 31, 1898, 1899], "extens": [14, 16, 1898, 1903, 1910], "author": [14, 54], "stream": [15, 16, 17, 958, 963, 971, 1040, 1896], "event": [15, 16, 32, 34, 968, 1303, 1884], "random": [16, 20, 51, 1900, 1908, 1922, 1935], "commun": [16, 21, 23, 1869], "collect": [16, 23], "beta": [16, 29], "memori": [16, 20, 1896, 1900, 1902, 1904, 1958], "manag": [16, 24, 59, 1885, 1896, 1902, 1915, 1955], "nvidia": [16, 1907], "nvtx": [16, 1025, 1026, 1027], "jiter": [16, 1008, 1009], "sanit": [16, 17], "prototyp": [16, 1918, 1919], "usag": [17, 26, 41, 1896, 1899, 1903, 1904, 1910, 1952, 1958], "data": [20, 51, 61, 1873, 1897, 1900, 1911, 1919, 1933], "dataset": 20, "map": [20, 66, 1902], "style": 20, "iter": [20, 1872], "load": [20, 1199, 1263, 1868, 1909, 1915, 1918], "order": [20, 1893], "sampler": 20, "batch": [20, 49, 1907, 1914], "non": [20, 54, 1889, 1890, 1893, 1896, 1907, 1915, 1918], "work": [20, 48, 1892, 1900, 1927, 1945, 1946, 1954], "collate_fn": 20, "singl": [20, 41, 1892], "multi": [20, 23, 41, 1889, 1890], "platform": 20, "pin": [20, 1896], "ddp": 21, "hook": [21, 1893, 1904, 1952], "us": [21, 23, 54, 1872, 1893, 1896, 1898, 1901, 1911, 1914, 1915, 1916, 1918, 1927, 1946, 1948, 1954, 1956, 1958], "what": [21, 47, 49, 52, 1880, 1893, 1915, 1943, 1946, 1953, 1954], "doe": [21, 1893, 1945, 1946], "powersgd": 21, "state": [21, 1904, 1915, 1958], "debug": [21, 23, 54, 72, 1870, 1918, 1919, 1942, 1956], "acknowledg": [21, 1916], "deploi": 22, "ha": 22, "been": 22, "move": 22, "multipi": 22, "come": [23, 1893], "which": [23, 1893, 1946], "environ": [23, 41, 1896, 1903, 1915, 1950], "choos": 23, "network": [23, 1896, 1900, 1904], "interfac": [23, 1902], "other": [23, 1889, 1908, 1915, 1927, 1935, 1945], "nccl": [23, 1896], "basic": [23, 1873, 1887, 1899, 1923, 1933, 1954], "initi": [23, 1889, 1904, 1933], "tcp": 23, "share": [23, 1885, 1896, 1915, 1925], "file": [23, 1885, 1915], "system": [23, 1873, 1885, 1899], "post": [23, 1918], "kei": [23, 67, 1910], "valu": [23, 64, 601, 1872, 1873, 1907, 1920, 1925], "store": [23, 40], "group": 23, "point": [23, 1903], "synchron": [23, 964, 1041, 1312], "asynchron": [23, 1873, 1896, 1906], "third": 23, "parti": 23, "launch": [23, 41, 1954], "spawn": [23, 1885], "applic": 23, "monitor": [23, 1883], "barrier": 23, "torch_distributed_debug": 23, "log": [23, 357, 1265, 1903], "join": [24, 1935], "elast": [26, 31, 41], "advanc": [26, 1904], "plugin": 26, "parallel": [28, 1589, 1896, 1897, 1900, 1916, 1935], "probabl": 29, "score": 29, "pathwis": 29, "deriv": [29, 1893], "exponentialfamili": 29, "bernoulli": [29, 141, 909], "binomi": 29, "categor": 29, "cauchi": 29, "chi2": 29, "continuousbernoulli": 29, "dirichlet": 29, "exponenti": [29, 1771], "fishersnedecor": 29, "gamma": 29, "geometr": 29, "gumbel": 29, "halfcauchi": 29, "halfnorm": 29, "independ": 29, "kumaraswami": 29, "lkjcholeski": 29, "laplac": 29, "lognorm": 29, "lowrankmultivariatenorm": 29, "mixturesamefamili": 29, "multinomi": [29, 408, 1315], "multivariatenorm": 29, "negativebinomi": 29, "normal": [29, 1560, 1653, 1889, 1914], "onehotcategor": 29, "pareto": 29, "poisson": [29, 1706], "relaxedbernoulli": 29, "logitrelaxedbernoulli": 29, "relaxedonehotcategor": 29, "studentt": 29, "transformeddistribut": 29, "uniform": 29, "vonmis": 29, "weibul": 29, "wishart": 29, "kl": 29, "diverg": [29, 1875], "constraint": [29, 1896], "registri": [29, 40, 75], "dlpack": 30, "agent": 31, "server": [31, 40, 42], "concept": 31, "watchdog": 31, "custom": [32, 42, 54, 1873, 1892, 1896, 1898, 1899, 1904, 1911, 1914, 1915, 1918, 1942], "launcher": 32, "rendezv": [32, 40, 41], "handler": [32, 37, 40, 1900], "metric": [32, 37], "error": [33, 1900, 1910, 1918, 1919, 1956], "propag": [33, 1887], "object": [34, 1915], "exampl": [35, 54, 1892, 1897, 1898, 1899, 1911, 1924, 1942], "torchelast": 36, "kubernet": 36, "multipl": [38, 1892, 1896, 1898, 1916], "worker": [38, 41, 1900], "quickstart": 39, "except": [40, 1900], "dynam": [40, 51, 54, 63, 64, 1918, 1921, 1944, 1945], "c10d": 40, "etcd": 40, "legaci": 40, "torchrun": 41, "node": [41, 68, 71, 74, 897, 898, 899, 900, 901, 1893], "stack": [41, 1808, 1918], "fault": 41, "toler": 41, "size": [41, 524, 1888], "failur": 41, "min": [41, 399, 1294], "max": [41, 395, 1289], "4": [41, 49], "up": [41, 1946], "membership": [41, 1873], "note": [41, 67, 1869, 1873, 1896, 1918, 1923], "definit": [41, 1873], "deploy": [41, 1903], "import": [41, 1868, 1910, 1915, 1945], "notic": [41, 1868], "expir": 42, "timer": 42, "client": 42, "write": [42, 54, 1893, 1898, 1911, 1955], "train": [43, 1892, 1904, 1906, 1918, 1946], "script": [43, 1203, 1870, 1910, 1911], "helper": 45, "fullyshardeddataparallel": 46, "func": [47, 48, 50, 52, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1898, 1899, 1946], "ar": [47, 52, 1868, 1893, 1915, 1946], "compos": [47, 52, 1942], "why": [47, 52, 1896, 1901, 1915, 1927, 1946], "read": [47, 1911, 1938, 1953], "patch": [49, 1915], "norm": [49, 440, 1248, 1652], "": [49, 1915, 1946, 1953], "happen": 49, "option": [49, 1872, 1895, 1910, 1914], "batchnorm": 49, "paramet": [49, 1606, 1872, 1914], "functorch": [49, 50], "eval": [49, 1893], "migrat": [50, 1870], "make_funct": 50, "combine_state_for_ensembl": 50, "ux": 51, "limit": [51, 54, 1868, 1899, 1911, 1941, 1947, 1952], "vmap": [51, 52, 879, 1133, 1861, 1898, 1899], "mutat": [51, 1935], "arbitrari": [51, 1915], "structur": [51, 61, 1873, 1927], "out": [51, 1886, 1900], "depend": [51, 1915, 1924], "control": [51, 54, 60, 1908, 1947], "flow": [51, 54, 60, 1918], "item": [51, 340], "shape": [51, 63, 510, 1911, 1944, 1945], "nonzero": [51, 439, 1651], "friend": 51, "whirlwind": 52, "tour": 52, "i": [52, 1880, 1893, 1915, 1943, 1945, 1946, 1953], "grad": [52, 278, 894, 1123, 1893, 1896], "auto": 52, "vector": 52, "vjp": [52, 893, 1132], "jacobian": [52, 890], "product": [52, 1878, 1946], "jvp": [52, 878, 891, 1128, 1899], "jacrev": [52, 1127], "jacfwd": [52, 1126], "hessian": [52, 888, 1125], "futur": 53, "A": [54, 1904], "quick": 54, "primer": 54, "manipul": [54, 1887], "direct": 54, "subgraph": [54, 1955], "rewrit": [54, 1955], "With": [54, 1875], "replace_pattern": 54, "proxi": 54, "retrac": 54, "interpret": [54, 1870], "pattern": [54, 1872, 1911, 1915], "introduct": [54, 1880, 1888, 1918], "pitfal": [54, 1911], "pdb": 54, "print": [54, 1872, 1873], "to_fold": 54, "graphmodul": 54, "avail": 54, "debugg": 54, "symbol": [54, 70, 73, 1911, 1918, 1935], "trace": [54, 578, 1207, 1834, 1870, 1911, 1917, 1918, 1946, 1947, 1954], "static": [54, 1911, 1918], "tracer": [54, 1870], "leaf": 54, "miscellanea": 54, "exportdb": 55, "tag": [55, 1935], "support": [55, 1871, 1873, 1880, 1886, 1887, 1888, 1899, 1911, 1913, 1918, 1927, 1946, 1952], "assume_constant_result": [55, 65, 942], "autograd_funct": 55, "class_method": 55, "cond_branch_class_method": [55, 62, 63], "cond_branch_nested_funct": [55, 62, 63], "cond_branch_nonlocal_vari": [55, 62, 63], "cond_closed_over_vari": [55, 58, 62], "cond_operand": [55, 62, 63], "cond_pred": [55, 62, 63], "constrain_as_size_exampl": [55, 64, 65], "constrain_as_value_exampl": [55, 64, 65], "decor": 55, "dictionari": [55, 61, 1873], "dynamic_shape_assert": [55, 56], "dynamic_shape_constructor": [55, 63], "dynamic_shape_if_guard": [55, 60, 63], "dynamic_shape_map": [55, 63, 66], "dynamic_shape_sl": [55, 63], "dynamic_shape_view": [55, 63], "fn_with_kwarg": [55, 61], "list_contain": [55, 56, 61, 63], "list_unpack": [55, 60, 61], "nested_funct": [55, 58], "null_context_manag": [55, 59], "pytree_flatten": 55, "scalar_output": [55, 63], "specialized_attribut": 55, "static_for_loop": [55, 60], "static_if": [55, 60], "tensor_setattr": [55, 57], "Not": [55, 1875], "yet": 55, "dynamic_shape_round": [55, 57, 63], "type_reflection_method": [55, 57], "assert": [56, 1873, 1902], "builtin": [57, 1871], "closur": [58, 1914], "cond": [62, 1223], "escap": 65, "hatch": 65, "fxe0007": 67, "addit": 67, "fxe0008": 68, "fxe0010": 69, "pass": [69, 1873, 1896, 1906, 1918, 1924, 1955], "fxe0011": 70, "call": [70, 1872, 1873, 1899, 1946], "fxe0012": 71, "unsupport": [71, 1872, 1873, 1875, 1911, 1913], "analysi": 71, "fxe0013": 72, "fxe0014": 73, "find": [73, 75, 1915, 1954], "opschema": 73, "match": [73, 1872, 1887], "fxe0015": 74, "insert": 74, "fxe0016": 75, "overload": 75, "abs_": 78, "absolut": [79, 669], "absolute_": 80, "aco": [81, 670], "acos_": 82, "acosh": [83, 671], "acosh_": 84, "add_": 86, "addbmm": [87, 673], "addbmm_": 88, "addcdiv": [89, 674], "addcdiv_": 90, "addcmul": [91, 675], "addcmul_": 92, "addmm": [93, 676, 1788], "addmm_": 94, "addmv": [95, 677], "addmv_": 96, "addr": [97, 678], "addr_": 98, "adjoint": [99, 679], "all": [100, 680, 1898, 1911, 1914], "allclos": [101, 681], "amax": [102, 682], "amin": [103, 683], "aminmax": [104, 684], "ani": [106, 686, 1873, 1953], "apply_": 107, "arcco": [108, 853], "arccos_": 109, "arccosh": [110, 854], "arccosh_": 111, "arcsin": [112, 855], "arcsin_": 113, "arcsinh": [114, 856], "arcsinh_": 115, "arctan": [116, 857], "arctan2": [117, 858], "arctan2_": 118, "arctan_": 119, "arctanh": [120, 859], "arctanh_": 121, "argmax": [122, 861], "argmin": [123, 862], "argsort": [124, 863], "argwher": [125, 864], "as_strid": [126, 865], "as_subclass": 127, "asin": [128, 868], "asin_": 129, "asinh": [130, 869], "asinh_": 131, "atan": [132, 870], "atan2": [133, 871], "atan2_": 134, "atan_": 135, "atanh": [136, 872], "atanh_": 137, "backward": [138, 876, 880, 1893, 1894, 1896, 1901, 1924], "baddbmm": [139, 907], "baddbmm_": 140, "bernoulli_": 142, "bincount": [144, 910], "bitwise_and": [145, 911], "bitwise_and_": 146, "bitwise_left_shift": [147, 912], "bitwise_left_shift_": 148, "bitwise_not": [149, 913], "bitwise_not_": 150, "bitwise_or": [151, 914], "bitwise_or_": 152, "bitwise_right_shift": [153, 915], "bitwise_right_shift_": 154, "bitwise_xor": [155, 916], "bitwise_xor_": 156, "bmm": [157, 919], "bool": 158, "broadcast_to": [159, 922], "byte": 160, "cauchy_": 161, "ccol_indic": 162, "cdoubl": 163, "ceil": [164, 928], "ceil_": 165, "cfloat": 166, "chalf": 167, "char": 168, "choleski": [169, 930, 1221], "cholesky_invers": [170, 931], "cholesky_solv": [171, 932], "chunk": [172, 933], "clamp": [173, 758, 934], "clamp_": 174, "clip": [175, 935, 1892], "clip_": 176, "clone": [177, 936], "coalesc": 178, "col_indic": 179, "conj": [180, 950], "conj_phys": [181, 951], "conj_physical_": 182, "contigu": 183, "copy_": 184, "copysign": [185, 952], "copysign_": 186, "corrcoef": [187, 953], "co": [188, 954], "cos_": 189, "cosh": [190, 955], "cosh_": 191, "count_nonzero": [192, 956], "cov": [193, 957], "cross": [195, 965, 1224, 1893], "crow_indic": 196, "cummax": [198, 1044], "cummin": [199, 1045], "cumprod": [200, 1046], "cumprod_": 201, "cumsum": [202, 1047], "cumsum_": 203, "data_ptr": 204, "deg2rad": [205, 1049], "dense_dim": 206, "dequant": [207, 1050, 1918], "det": [208, 1051, 1225], "detach": 209, "detach_": 210, "devic": [211, 987, 1896, 1907, 1930], "diag": [212, 1052], "diag_emb": [213, 1053], "diagflat": [214, 1054], "diagon": [215, 1055, 1226], "diagonal_scatt": [216, 1056], "diff": [217, 1057], "digamma": [218, 1058], "digamma_": 219, "dim": [220, 1886], "dim_ord": 221, "dist": [222, 1059], "div": [223, 1060, 1909], "div_": 224, "divid": [225, 1061], "divide_": 226, "dot": [227, 1062], "doubl": 228, "dsplit": [229, 1063], "element_s": 230, "eq": [231, 1070], "eq_": 232, "equal": [233, 1071], "erf": [234, 1072], "erf_": 235, "erfc": [236, 1073], "erfc_": 237, "erfinv": [238, 1074], "erfinv_": 239, "exp": [240, 1075], "exp_": 241, "expand": 242, "expand_a": 243, "expm1": [244, 1077], "expm1_": 245, "exponential_": 246, "fill_": 247, "fill_diagonal_": 248, "fix_": 250, "flatten": [251, 1104, 1371], "flip": [252, 1105], "fliplr": [253, 1106], "flipud": [254, 1107], "float": [255, 1909], "float_pow": [256, 1108], "float_power_": 257, "floor": [258, 1109], "floor_": 259, "floor_divid": [260, 1110], "floor_divide_": 261, "fmax": [262, 1111], "fmin": [263, 1112], "fmod": [264, 1113], "fmod_": 265, "frac": [266, 1114], "frac_": 267, "frexp": [268, 1115], "gather": [269, 980, 1134], "gcd": [270, 1135], "gcd_": 271, "ge": [272, 1136], "ge_": 273, "geometric_": 274, "geqrf": [275, 1137], "ger": [276, 1138], "get_devic": 277, "greater": [279, 1146], "greater_": 280, "greater_equ": [281, 1147], "greater_equal_": 282, "gt": [283, 1148], "gt_": 284, "half": 285, "hardshrink": [286, 1381, 1527], "heavisid": [287, 1151], "histc": [288, 1152], "histogram": [289, 1153], "hsplit": [290, 1155], "hypot": [291, 1158], "hypot_": 292, "i0": [293, 1159], "i0_": 294, "igamma": [295, 1160], "igamma_": 296, "igammac": [297, 1161], "igammac_": 298, "index_add": [300, 1163], "index_add_": 301, "index_copi": [302, 1164], "index_copy_": 303, "index_fil": 304, "index_fill_": 305, "index_put": 306, "index_put_": 307, "index_reduc": [308, 1165], "index_reduce_": 309, "index_select": [310, 1166], "indic": [311, 1869], "inner": [312, 1169], "int": 313, "int_repr": 314, "invers": [315, 1170, 1878], "is_coalesc": 316, "is_complex": [317, 1171], "is_conj": [318, 1172], "is_contigu": 319, "is_cuda": 320, "is_floating_point": [321, 1174], "is_infer": 322, "is_leaf": 323, "is_meta": 324, "is_pin": 325, "is_quant": 326, "is_set_to": 327, "is_shar": 328, "is_sign": 329, "is_spars": 330, "is_sparse_csr": 331, "isclos": [332, 1181], "isfinit": [333, 1182], "isinf": [334, 1184], "isnan": [335, 1185], "isneginf": [336, 1186], "isposinf": [337, 1187], "isreal": [338, 1188], "istft": [339, 1189], "items": 341, "kthvalu": [342, 1213], "lcm": [343, 1214], "lcm_": 344, "ldexp": [345, 1215], "ldexp_": 346, "le": [347, 1216], "le_": 348, "lerp": [349, 1217], "lerp_": 350, "less": [351, 1218], "less_": 352, "less_equ": [353, 1219], "less_equal_": 354, "lgamma": [355, 1220], "lgamma_": 356, "log10": [358, 1266], "log10_": 359, "log1p": [360, 1267], "log1p_": 361, "log2": [362, 1268], "log2_": 363, "log_": 364, "log_normal_": 365, "logaddexp": [366, 1269], "logaddexp2": [367, 1270], "logcumsumexp": [368, 1271], "logdet": [369, 1272], "logical_and": [370, 1273], "logical_and_": 371, "logical_not": [372, 1274], "logical_not_": 373, "logical_or": [374, 1275], "logical_or_": 375, "logical_xor": [376, 1276], "logical_xor_": 377, "logit": [378, 1277], "logit_": 379, "logsumexp": [380, 1279], "long": 381, "lt": [382, 1280], "lt_": 383, "lu": [384, 1238, 1281], "lu_solv": [385, 1241, 1282], "map_": 386, "masked_fil": 387, "masked_fill_": 388, "masked_scatt": 389, "masked_scatter_": 390, "masked_select": [391, 1285], "matmul": [392, 1242, 1286], "matrix_exp": [393, 1243, 1287], "matrix_pow": [394, 1245, 1288], "maximum": [396, 1290], "mean": [397, 1291], "median": [398, 1292], "minimum": [400, 1295], "mm": [401, 1296, 1792], "moveaxi": [403, 1298], "movedim": [404, 1299], "msort": [405, 1313], "mul": [406, 1314], "mul_": 407, "multipli": [409, 1316], "multiply_": 410, "mv": [411, 1317], "mvlgamma": [412, 1318], "mvlgamma_": 413, "nan_to_num": [414, 1319], "nan_to_num_": 415, "nanmean": [416, 1320], "nanmedian": [417, 1321], "nanquantil": [418, 1322], "nansum": [419, 1323], "narrow": [420, 1324], "narrow_copi": [421, 1325], "nbyte": 422, "ndim": 423, "ndimens": 424, "ne": [425, 1326], "ne_": 426, "neg": [427, 429, 1327, 1328], "neg_": 428, "negative_": 430, "nelement": 431, "new_empti": 432, "new_ful": 433, "new_on": 434, "new_tensor": 435, "new_zero": 436, "nextaft": [437, 1329], "nextafter_": 438, "normal_": 441, "not_equ": [442, 1654], "not_equal_": 443, "numel": [444, 1655], "numpi": [445, 1911], "orgqr": [446, 1700], "ormqr": [447, 1701], "outer": [448, 1702], "permut": [449, 1704, 1886], "pin_memori": 450, "pinvers": [451, 1705], "polygamma": [452, 1708], "polygamma_": 453, "posit": [454, 1709], "pow": [455, 1710], "pow_": 456, "prod": [457, 1711], "put_": 458, "q_per_channel_axi": 459, "q_per_channel_scal": 460, "q_per_channel_zero_point": 461, "q_scale": 462, "q_zero_point": 463, "qr": [464, 1250, 1713], "qscheme": 465, "quantil": [466, 1714], "rad2deg": [467, 1721], "random_": 468, "ravel": [469, 1730], "reciproc": [471, 1732], "reciprocal_": 472, "record_stream": 473, "register_hook": [474, 900], "register_post_accumulate_grad_hook": 475, "remaind": [476, 1733], "remainder_": 477, "renorm": [478, 1734], "renorm_": 479, "repeat": 480, "repeat_interleav": [481, 1735], "requires_grad": [482, 1893], "requires_grad_": 483, "reshap": [484, 1736], "reshape_a": 485, "resize_": 486, "resize_as_": 487, "resolve_conj": [488, 1737], "resolve_neg": [489, 1738], "retain_grad": 490, "retains_grad": 491, "roll": [492, 1740], "rot90": [493, 1741], "round": [494, 1742], "round_": 495, "row_indic": 496, "rsqrt": [497, 1744], "rsqrt_": 498, "scatter": [499, 982, 1746], "scatter_": 500, "scatter_add": [501, 1747], "scatter_add_": 502, "scatter_reduc": [503, 1748], "scatter_reduce_": 504, "select": [505, 1751, 1880], "select_scatt": [506, 1752], "set_": 507, "sgn": [508, 1765], "sgn_": 509, "share_memory_": 511, "short": 512, "sigmoid": [513, 746, 1455, 1576, 1766], "sigmoid_": 514, "sign": [515, 1767], "sign_": 516, "signbit": [517, 1779], "sin": [518, 1780], "sin_": 519, "sinc": [520, 1781], "sinc_": 521, "sinh": [522, 1782], "sinh_": 523, "slice_scatt": [525, 1783], "slogdet": [526, 1251, 1784], "smm": [527, 1785], "softmax": [528, 1458, 1580, 1786, 1794], "sort": [529, 1787], "sparse_dim": 530, "sparse_mask": 531, "sparse_resize_": 532, "sparse_resize_and_clear_": 533, "split": [534, 1803], "sqrt": [535, 1804], "sqrt_": 536, "squar": [537, 1805], "square_": 538, "squeez": [539, 1806], "squeeze_": 540, "sspaddmm": [541, 1807], "std": [542, 1809], "stft": [543, 1811], "storag": [544, 1929], "storage_offset": 545, "storage_typ": 546, "stride": 547, "sub": [548, 1812], "sub_": 549, "subtract": [550, 1813], "subtract_": 551, "sum": [552, 1796, 1814, 1889], "sum_to_s": 553, "svd": [554, 1255, 1815], "swapax": [555, 1817], "swapdim": [556, 1818], "t": [557, 1824, 1873, 1900, 1946], "t_": 558, "take": [559, 1825, 1914], "take_along_dim": [560, 1826], "tan": [561, 1827], "tan_": 562, "tanh": [563, 1465, 1585, 1828], "tanh_": 564, "tensor_split": [565, 1830], "tile": [566, 1832], "to_dens": 568, "to_mkldnn": 569, "to_spars": 570, "to_sparse_bsc": 571, "to_sparse_bsr": 572, "to_sparse_coo": 573, "to_sparse_csc": 574, "to_sparse_csr": 575, "tolist": 576, "topk": [577, 1833], "transpos": [579, 1835], "transpose_": 580, "triangular_solv": [581, 1838], "tril": [582, 1839], "tril_": 583, "triu": [584, 1841], "triu_": 585, "true_divid": [586, 1843], "true_divide_": 587, "trunc": [588, 1844], "trunc_": 589, "type_a": 591, "unbind": [592, 1845, 1888], "unflatten": [593, 1475, 1846], "unfold": [594, 1476, 1592], "uniform_": 595, "uniqu": [596, 1847], "unique_consecut": [597, 1848], "unsqueez": [598, 1849], "unsqueeze_": 599, "untyped_storag": 600, "var": [602, 1856], "vdot": [603, 1858], "view": [604, 1880, 1909, 1931, 1954], "view_a": 605, "vsplit": [606, 1862], "where": [607, 1864, 1868], "xlogi": [608, 1865], "xlogy_": 609, "zero_": 610, "_assert": 611, "_foreach_ab": 612, "_foreach_abs_": 613, "_foreach_aco": 614, "_foreach_acos_": 615, "_foreach_asin": 616, "_foreach_asin_": 617, "_foreach_atan": 618, "_foreach_atan_": 619, "_foreach_ceil": 620, "_foreach_ceil_": 621, "_foreach_co": 622, "_foreach_cos_": 623, "_foreach_cosh": 624, "_foreach_cosh_": 625, "_foreach_erf": 626, "_foreach_erf_": 627, "_foreach_erfc": 628, "_foreach_erfc_": 629, "_foreach_exp": 630, "_foreach_exp_": 631, "_foreach_expm1": 632, "_foreach_expm1_": 633, "_foreach_floor": 634, "_foreach_floor_": 635, "_foreach_frac": 636, "_foreach_frac_": 637, "_foreach_lgamma": 638, "_foreach_lgamma_": 639, "_foreach_log": 640, "_foreach_log10": 641, "_foreach_log10_": 642, "_foreach_log1p": 643, "_foreach_log1p_": 644, "_foreach_log2": 645, "_foreach_log2_": 646, "_foreach_log_": 647, "_foreach_neg": 648, "_foreach_neg_": 649, "_foreach_reciproc": 650, "_foreach_reciprocal_": 651, "_foreach_round": 652, "_foreach_round_": 653, "_foreach_sigmoid": 654, "_foreach_sigmoid_": 655, "_foreach_sin": 656, "_foreach_sin_": 657, "_foreach_sinh": 658, "_foreach_sinh_": 659, "_foreach_sqrt": 660, "_foreach_sqrt_": 661, "_foreach_tan": 662, "_foreach_tan_": 663, "_foreach_trunc": 664, "_foreach_trunc_": 665, "_foreach_zero_": 666, "_log": [667, 1879], "set_log": 667, "bnrelu2d": [687, 710], "bnrelu3d": [688, 711], "convbn1d": [689, 699], "convbn2d": [690, 700], "convbn3d": [691, 701], "convbnrelu1d": [692, 702], "convbnrelu2d": [693, 703], "convbnrelu3d": [694, 704], "convrelu1d": [695, 712], "convrelu2d": [696, 705, 713], "convrelu3d": [697, 706, 714], "linearrelu": [698, 707, 715, 716], "freeze_bn_stat": 708, "update_bn_stat": 709, "conv2d": [717, 726, 760, 1354, 1500], "conv3d": [718, 727, 761, 1355, 1501], "lstm": [721, 749, 1395, 1908], "multiheadattent": [722, 1431], "batchnorm2d": [723, 1344], "batchnorm3d": [724, 1345], "conv1d": [725, 759, 1353, 1499], "convtranspose1d": [728, 1356], "convtranspose2d": [729, 1357], "convtranspose3d": [730, 1358], "elu": [731, 762, 1367, 1513], "embed": [732, 1368, 1515], "embeddingbag": [733, 1369], "fxfloatfunct": 734, "floatfunct": 735, "groupnorm": [736, 1380], "hardswish": [737, 764, 1383, 1529], "instancenorm1d": [738, 1388], "instancenorm2d": [739, 1389], "instancenorm3d": [740, 1390], "layernorm": [741, 1397], "leakyrelu": [742, 1411], "qfunction": 744, "relu6": [745, 1445, 1570], "gru": [747, 1377], "grucel": [748, 1378], "lstmcell": [750, 1396], "rnncell": [752, 1442], "adaptive_avg_pool2d": [753, 1484], "adaptive_avg_pool3d": [754, 1485], "avg_pool2d": [755, 1492], "avg_pool3d": [756, 1493], "celu": [757, 1347, 1498], "hardsigmoid": [763, 1382, 1528], "hardtanh": [765, 1384, 1530], "interpol": [766, 1535], "leaky_relu": [767, 1539], "max_pool1d": [769, 1548], "max_pool2d": [770, 1549], "threshold": [771, 1467, 1587], "upsampl": [772, 1477, 1593], "upsample_bilinear": [773, 1594], "upsample_nearest": [774, 1595], "dequantstub": 775, "quantstub": 776, "quantwrapp": 777, "add_quant_dequ": 778, "backendconfig": 779, "backendpatternconfig": 780, "dtypeconfig": 781, "dtypewithconstraint": 782, "observationtyp": 783, "convert": [784, 1945], "default_eval_fn": 785, "fakequant": [786, 1918], "fakequantizebas": 787, "fixedqparamsfakequant": 788, "fusedmovingavgobsfakequant": 789, "default_fake_qu": 790, "default_fused_act_fake_qu": 791, "default_fused_per_channel_wt_fake_qu": 792, "default_fused_wt_fake_qu": 793, "default_histogram_fake_qu": 794, "default_per_channel_weight_fake_qu": 795, "default_weight_fake_qu": 796, "disable_fake_qu": 797, "disable_observ": 798, "enable_fake_qu": 799, "enable_observ": 800, "fuse_modul": 801, "convertcustomconfig": 802, "fusecustomconfig": 803, "preparecustomconfig": 804, "standalonemoduleconfigentri": 805, "histogramobserv": 806, "minmaxobserv": 807, "movingaverageminmaxobserv": 808, "movingaverageperchannelminmaxobserv": 809, "noopobserv": 810, "observerbas": 811, "perchannelminmaxobserv": 812, "placeholderobserv": 813, "recordingobserv": 814, "default_debug_observ": 815, "default_dynamic_quant_observ": 816, "default_float_qparams_observ": 817, "default_histogram_observ": 818, "default_observ": 819, "default_per_channel_weight_observ": 820, "default_placeholder_observ": 821, "default_weight_observ": 822, "get_observer_state_dict": 823, "load_observer_state_dict": 824, "prepar": [825, 1918, 1921], "prepare_qat": 826, "propagate_qconfig": 827, "qconfig": [828, 1918, 1921], "default_activation_only_qconfig": 829, "default_debug_qconfig": 830, "default_dynamic_qconfig": 831, "default_per_channel_qconfig": 832, "default_qat_qconfig": 833, "default_qat_qconfig_v2": 834, "default_qconfig": 835, "default_weight_only_qconfig": 836, "float16_dynamic_qconfig": 837, "float16_static_qconfig": 838, "float_qparams_weight_only_qconfig": 839, "per_channel_dynamic_qconfig": 840, "qconfigmap": 841, "get_default_qat_qconfig_map": 842, "get_default_qconfig_map": 843, "quantiz": [844, 1889, 1904, 1911, 1918, 1919, 1920, 1921], "quantize_dynam": 845, "convert_fx": 846, "fuse_fx": 847, "prepare_fx": 848, "prepare_qat_fx": 849, "quantize_qat": 850, "swap_modul": 851, "arang": 852, "are_deterministic_algorithms_en": 860, "as_tensor": 866, "asarrai": 867, "atleast_1d": 873, "atleast_2d": 874, "atleast_3d": 875, "dual_level": 881, "forward_ad": [882, 883], "make_du": 882, "unpack_du": 883, "functionctx": [884, 885, 886, 887], "mark_dirti": 884, "mark_non_differenti": 885, "save_for_backward": 886, "set_materialize_grad": 887, "hvp": 889, "vhp": 892, "gradcheck": [895, 1901], "gradgradcheck": [896, 1901], "metadata": [897, 1903], "name": [898, 1872, 1886, 1887], "next_funct": 899, "register_prehook": 901, "load_nvprof": 902, "export_chrome_trac": 903, "key_averag": 904, "self_cpu_time_tot": 905, "total_averag": 906, "bartlett_window": 908, "blackman_window": 917, "block_diag": 918, "broadcast_shap": 920, "broadcast_tensor": 921, "bucket": 923, "can_cast": 924, "cartesian_prod": 925, "cat": 926, "cdist": 927, "chain_matmul": 929, "column_stack": 937, "combin": [938, 1898], "compiled_with_cxx11_abi": 940, "allow_in_graph": [941, 1947], "list_backend": 945, "reset": 946, "concat": 948, "concaten": 949, "streamcontext": [959, 972], "current_stream": [960, 985], "device_count": [961, 988], "is_avail": [962, 1005], "cudagraph": [966, 1941], "cudapluggablealloc": 967, "externalstream": 969, "outofmemoryerror": 970, "caching_allocator_alloc": 973, "caching_allocator_delet": 974, "can_device_access_p": 975, "change_current_alloc": 976, "clock_rat": 977, "comm": [978, 979, 980, 981, 982], "broadcast": [978, 1894], "broadcast_coalesc": 979, "reduce_add": 981, "current_blas_handl": 983, "current_devic": 984, "default_stream": 986, "device_of": 989, "empty_cach": [990, 1302], "get_allocator_backend": 991, "get_arch_list": 992, "get_device_cap": 993, "get_device_nam": 994, "get_device_properti": 995, "get_gencode_flag": 996, "get_rng_stat": [997, 1144, 1304], "get_rng_state_al": 998, "get_sync_debug_mod": 999, "graph_pool_handl": 1001, "init": [1002, 1891], "initial_se": [1003, 1168], "ipc_collect": 1004, "is_current_stream_captur": 1006, "is_initi": 1007, "_create_jit_fn": 1008, "_create_multi_output_jit_fn": 1009, "list_gpu_process": 1010, "make_graphed_cal": 1011, "manual_se": [1012, 1284, 1305], "manual_seed_al": 1013, "max_memory_alloc": 1014, "max_memory_cach": 1015, "max_memory_reserv": 1016, "mem_get_info": 1017, "memory_alloc": 1018, "memory_cach": 1019, "memory_reserv": 1020, "memory_snapshot": 1021, "memory_stat": 1022, "memory_summari": 1023, "memory_usag": 1024, "mark": 1025, "range_pop": 1026, "range_push": 1027, "power_draw": 1028, "reset_max_memory_alloc": 1029, "reset_max_memory_cach": 1030, "reset_peak_memory_stat": 1031, "seed": [1032, 1309, 1750], "seed_al": 1033, "set_devic": 1034, "set_per_process_memory_fract": [1035, 1310], "set_rng_stat": [1036, 1311, 1763], "set_rng_state_al": 1037, "set_stream": 1038, "set_sync_debug_mod": 1039, "temperatur": 1042, "cumulative_trapezoid": 1048, "dstack": 1064, "einsum": 1065, "empti": 1066, "empty_lik": 1067, "empty_strid": 1068, "enable_grad": 1069, "exp2": 1076, "ey": 1078, "fake_quantize_per_channel_affin": 1079, "fake_quantize_per_tensor_affin": 1080, "fft2": 1082, "fftfreq": 1083, "fftn": 1084, "fftshift": 1085, "hfft": 1086, "hfft2": 1087, "hfftn": 1088, "ifft": 1089, "ifft2": 1090, "ifftn": 1091, "ifftshift": 1092, "ihfft": 1093, "ihfft2": 1094, "ihfftn": 1095, "irfft": 1096, "irfft2": 1097, "irfftn": 1098, "rfft": 1099, "rfft2": 1100, "rfftfreq": 1101, "rfftn": 1102, "from_dlpack": 1116, "from_numpi": 1117, "frombuff": 1118, "full": [1119, 1909], "full_lik": 1120, "functional_cal": [1121, 1647], "grad_and_valu": 1124, "replace_all_batch_norm_modules_": 1130, "stack_module_st": 1131, "get_default_dtyp": 1139, "get_deterministic_debug_mod": 1140, "get_float32_matmul_precis": 1141, "get_num_interop_thread": 1142, "get_num_thread": 1143, "hamming_window": 1149, "hann_window": 1150, "histogramdd": 1154, "hspmm": 1156, "hstack": 1157, "inference_mod": 1167, "is_deterministic_algorithms_warn_only_en": 1173, "is_grad_en": 1175, "is_inference_mode_en": 1176, "is_nonzero": 1177, "is_storag": 1178, "is_tensor": 1179, "is_warn_always_en": 1180, "isin": 1183, "attribut": [1190, 1870, 1872, 1873, 1875, 1930], "scriptfunct": 1191, "scriptmodul": [1192, 1909], "annot": [1193, 1873], "enable_onednn_fus": 1194, "fork": 1195, "freez": 1196, "ignor": 1197, "isinst": 1198, "onednn_fusion_en": 1200, "optimize_for_infer": 1201, "save": [1202, 1745, 1868, 1893, 1903, 1909, 1918], "script_if_trac": 1204, "set_fusion_strategi": 1205, "strict_fus": 1206, "trace_modul": 1208, "unus": 1209, "wait": 1210, "kaiser_window": 1211, "kron": 1212, "cholesky_ex": 1222, "eig": 1227, "eigh": 1228, "eigval": 1229, "eigvalsh": 1230, "householder_product": 1231, "inv": 1232, "inv_ex": 1233, "ldl_factor": 1234, "ldl_factor_ex": 1235, "ldl_solv": 1236, "lstsq": 1237, "lu_factor": 1239, "lu_factor_ex": 1240, "matrix_norm": 1244, "matrix_rank": 1246, "multi_dot": 1247, "pinv": 1249, "solv": 1252, "solve_ex": 1253, "solve_triangular": 1254, "svdval": 1256, "tensorinv": 1257, "tensorsolv": 1258, "vander": [1259, 1855], "vecdot": 1260, "vector_norm": 1261, "linspac": 1262, "lobpcg": 1264, "logspac": 1278, "lu_unpack": 1283, "meshgrid": 1293, "current_allocated_memori": 1300, "driver_allocated_memori": 1301, "stop": 1308, "adaptiveavgpool1d": 1330, "adaptiveavgpool2d": 1331, "adaptiveavgpool3d": 1332, "adaptivelogsoftmaxwithloss": 1333, "adaptivemaxpool1d": 1334, "adaptivemaxpool2d": 1335, "adaptivemaxpool3d": 1336, "alphadropout": 1337, "avgpool1d": 1338, "avgpool2d": 1339, "avgpool3d": 1340, "bceloss": 1341, "bcewithlogitsloss": 1342, "batchnorm1d": 1343, "bilinear": [1346, 1495], "ctcloss": 1348, "channelshuffl": 1349, "constantpad1d": 1350, "constantpad2d": 1351, "constantpad3d": 1352, "cosineembeddingloss": 1359, "cosinesimilar": 1360, "crossentropyloss": 1361, "dataparallel": [1362, 1889, 1890, 1892, 1896], "dropout": [1363, 1509, 1889, 1890], "dropout1d": [1364, 1510], "dropout2d": [1365, 1511], "dropout3d": [1366, 1512], "featurealphadropout": 1370, "fold": [1372, 1518], "fractionalmaxpool2d": 1373, "fractionalmaxpool3d": 1374, "gelu": [1375, 1522], "glu": [1376, 1523], "gaussiannllloss": 1379, "hingeembeddingloss": 1385, "huberloss": 1386, "ident": [1387, 1621, 1629, 1873, 1900], "kldivloss": 1391, "l1loss": 1392, "lppool1d": 1393, "lppool2d": 1394, "lazybatchnorm1d": 1398, "lazybatchnorm2d": 1399, "lazybatchnorm3d": 1400, "lazyconv1d": 1401, "lazyconv2d": 1402, "lazyconv3d": 1403, "lazyconvtranspose1d": 1404, "lazyconvtranspose2d": 1405, "lazyconvtranspose3d": 1406, "lazyinstancenorm1d": 1407, "lazyinstancenorm2d": 1408, "lazyinstancenorm3d": 1409, "lazylinear": 1410, "localresponsenorm": 1413, "logsigmoid": [1414, 1544], "logsoftmax": 1415, "mseloss": 1416, "marginrankingloss": 1417, "maxpool1d": 1418, "maxpool2d": 1419, "maxpool3d": 1420, "maxunpool1d": 1421, "maxunpool2d": 1422, "maxunpool3d": 1423, "mish": [1424, 1554], "moduledict": [1426, 1873], "modulelist": [1427, 1872, 1873], "multilabelmarginloss": 1428, "multilabelsoftmarginloss": 1429, "multimarginloss": 1430, "nllloss": 1432, "prelu": [1433, 1568], "pairwisedist": 1434, "parameterdict": 1435, "parameterlist": 1436, "pixelshuffl": 1437, "pixelunshuffl": 1438, "poissonnllloss": 1439, "rnn": [1440, 1639, 1640, 1641, 1642, 1643, 1644, 1908], "rnnbase": 1441, "rrelu": [1443, 1572], "relu": [1444, 1569], "reflectionpad1d": 1446, "reflectionpad2d": 1447, "reflectionpad3d": 1448, "replicationpad1d": 1449, "replicationpad2d": 1450, "replicationpad3d": 1451, "selu": [1452, 1575], "sequenti": 1453, "silu": [1454, 1577], "smoothl1loss": 1456, "softmarginloss": 1457, "softmax2d": 1459, "softmin": [1460, 1581], "softplu": [1461, 1582], "softshrink": [1462, 1583], "softsign": [1463, 1584], "syncbatchnorm": 1464, "tanhshrink": [1466, 1586], "transformerdecod": 1469, "transformerdecoderlay": 1470, "transformerencod": 1471, "transformerencoderlay": 1472, "tripletmarginloss": 1473, "tripletmarginwithdistanceloss": 1474, "upsamplingbilinear2d": 1478, "upsamplingnearest2d": 1479, "zeropad1d": 1480, "zeropad2d": 1481, "zeropad3d": 1482, "adaptive_avg_pool1d": 1483, "adaptive_max_pool1d": 1486, "adaptive_max_pool2d": 1487, "adaptive_max_pool3d": 1488, "affine_grid": 1489, "alpha_dropout": 1490, "avg_pool1d": 1491, "batch_norm": 1494, "conv_transpose1d": 1502, "conv_transpose2d": 1503, "conv_transpose3d": 1504, "cosine_embedding_loss": 1505, "cosine_similar": 1506, "cross_entropi": 1507, "ctc_loss": 1508, "elu_": 1514, "embedding_bag": 1516, "feature_alpha_dropout": 1517, "fractional_max_pool2d": 1519, "fractional_max_pool3d": 1520, "gaussian_nll_loss": 1521, "grid_sampl": 1524, "group_norm": 1525, "gumbel_softmax": 1526, "hardtanh_": 1531, "hinge_embedding_loss": 1532, "huber_loss": 1533, "instance_norm": 1534, "kl_div": 1536, "l1_loss": 1537, "layer_norm": 1538, "leaky_relu_": 1540, "local_response_norm": 1542, "log_softmax": [1543, 1791], "lp_pool1d": 1545, "lp_pool2d": 1546, "margin_ranking_loss": 1547, "max_pool3d": 1550, "max_unpool1d": 1551, "max_unpool2d": 1552, "max_unpool3d": 1553, "mse_loss": 1555, "multi_margin_loss": 1556, "multilabel_margin_loss": 1557, "multilabel_soft_margin_loss": 1558, "nll_loss": 1559, "one_hot": 1561, "pad": [1562, 1889], "pairwise_dist": 1563, "pdist": 1564, "pixel_shuffl": 1565, "pixel_unshuffl": 1566, "poisson_nll_loss": 1567, "relu_": 1571, "rrelu_": 1573, "scaled_dot_product_attent": 1574, "smooth_l1_loss": 1578, "soft_margin_loss": 1579, "threshold_": 1588, "data_parallel": [1589, 1890], "triplet_margin_loss": 1590, "triplet_margin_with_distance_loss": 1591, "lazymodulemixin": 1596, "register_module_backward_hook": 1597, "register_module_buffer_registration_hook": 1598, "register_module_forward_hook": 1599, "register_module_forward_pre_hook": 1600, "register_module_full_backward_hook": 1601, "register_module_full_backward_pre_hook": 1602, "register_module_module_registration_hook": 1603, "register_module_parameter_registration_hook": 1604, "distributeddataparallel": [1605, 1892, 1896, 1897], "uninitializedbuff": 1607, "uninitializedparamet": 1608, "clip_grad_norm_": 1609, "clip_grad_value_": 1610, "parameters_to_vector": 1611, "parametr": [1612, 1613, 1615, 1616, 1617, 1618, 1904], "orthogon": 1612, "spectral_norm": [1613, 1646], "parametrizationlist": 1614, "cach": [1615, 1868, 1896, 1902, 1949], "is_parametr": 1616, "register_parametr": 1617, "remove_parametr": 1618, "basepruningmethod": 1619, "customfrommask": 1620, "l1unstructur": 1622, "lnstructur": 1623, "pruningcontain": 1624, "randomstructur": 1625, "randomunstructur": 1626, "prune": [1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1904], "custom_from_mask": 1627, "global_unstructur": 1628, "is_prun": 1630, "l1_unstructur": 1631, "ln_structur": 1632, "random_structur": 1633, "random_unstructur": 1634, "remove_spectral_norm": 1636, "remove_weight_norm": 1637, "packedsequ": 1638, "pack_padded_sequ": 1639, "pack_sequ": 1640, "pad_packed_sequ": 1641, "pad_sequ": 1642, "unpack_sequ": 1643, "unpad_sequ": 1644, "skip_init": 1645, "stateless": 1647, "vector_to_paramet": 1648, "weight_norm": 1649, "no_grad": 1650, "ones": 1656, "ones_lik": 1657, "diagnosticopt": 1658, "exportopt": 1659, "exportoutput": 1660, "exportoutputseri": 1661, "jitscalartyp": 1662, "onnxexportererror": 1663, "onnxregistri": 1664, "graphinfo": 1665, "verificationopt": 1666, "asgd": 1667, "adadelta": 1668, "adagrad": 1669, "adam": 1670, "adamw": 1671, "adamax": 1672, "lbfg": 1673, "nadam": 1674, "add_param_group": 1675, "load_state_dict": 1676, "state_dict": [1677, 1952], "step": [1678, 1914, 1948], "zero_grad": 1679, "radam": 1680, "rmsprop": 1681, "rprop": 1682, "sgd": 1683, "sparseadam": 1684, "chainedschedul": 1685, "constantlr": 1686, "cosineannealinglr": 1687, "cosineannealingwarmrestart": 1688, "cycliclr": 1689, "exponentiallr": 1690, "lambdalr": 1691, "linearlr": 1692, "multisteplr": 1693, "multiplicativelr": 1694, "onecyclelr": 1695, "polynomiallr": 1696, "reducelronplateau": 1697, "sequentiallr": 1698, "steplr": 1699, "pca_lowrank": 1703, "polar": 1707, "promote_typ": 1712, "quantize_per_channel": 1715, "quantize_per_tensor": 1716, "quantized_batch_norm": 1717, "quantized_max_pool1d": 1718, "quantized_max_pool2d": 1719, "sobolengin": 1720, "rand": 1722, "rand_lik": 1723, "randint": 1724, "randint_lik": 1725, "randn": 1726, "randn_lik": 1727, "randperm": 1728, "rang": [1729, 1872], "result_typ": 1739, "row_stack": 1743, "searchsort": 1749, "set_default_devic": 1753, "set_default_dtyp": 1754, "set_default_tensor_typ": 1755, "set_deterministic_debug_mod": 1756, "set_float32_matmul_precis": 1757, "set_flush_denorm": 1758, "set_grad_en": 1759, "set_num_interop_thread": 1760, "set_num_thread": 1761, "set_printopt": 1762, "set_warn_alwai": 1764, "signal": [1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1926], "bartlett": 1768, "blackman": 1769, "cosin": 1770, "gaussian": 1772, "general_cosin": 1773, "general_ham": 1774, "ham": 1775, "hann": 1776, "kaiser": 1777, "nuttal": 1778, "as_sparse_gradcheck": 1789, "check_sparse_tensor_invari": 1790, "sampled_addmm": 1793, "spdiag": 1795, "sparse_bsc_tensor": 1797, "sparse_bsr_tensor": 1798, "sparse_compressed_tensor": 1799, "sparse_coo_tensor": 1800, "sparse_csc_tensor": 1801, "sparse_csr_tensor": 1802, "std_mean": 1810, "svd_lowrank": 1816, "sym_float": 1819, "sym_int": 1820, "sym_max": 1821, "sym_min": 1822, "sym_not": 1823, "tensordot": 1831, "trapezoid": 1836, "trapz": 1837, "tril_indic": 1840, "triu_indic": 1842, "use_deterministic_algorithm": 1850, "generate_methods_for_privateuse1_backend": 1851, "get_cpp_backtrac": 1852, "rename_privateuse1_backend": 1853, "set_modul": 1854, "var_mean": 1857, "view_as_complex": 1859, "view_as_r": 1860, "vstack": 1863, "zero": 1866, "zeros_lik": 1867, "hub": 1868, "publish": 1868, "an": [1868, 1911, 1914, 1915], "entrypoint": 1868, "run": [1868, 1953], "my": [1868, 1893, 1900, 1915, 1946, 1953], "download": 1868, "logic": [1868, 1872], "known": [1868, 1870], "bind": 1869, "tabl": [1869, 1909], "built": [1870, 1871, 1873, 1911], "comparison": [1870, 1872, 1873, 1935, 1941], "inspect": [1870, 1943], "warn": 1870, "appendix": [1870, 1873], "recurs": 1870, "constant": [1870, 1872], "fusion": 1870, "math": [1871, 1935], "construct": [1872, 1873, 1875, 1888, 1914, 1927], "refin": [1872, 1873], "enum": [1872, 1873], "tupl": [1872, 1873], "express": [1872, 1873], "liter": [1872, 1873], "list": [1872, 1873, 1911], "dict": 1872, "arithmet": [1872, 1873], "subscript": [1872, 1873], "slice": [1872, 1873, 1907, 1935], "ternari": [1872, 1873], "cast": 1872, "statement": [1872, 1873], "assign": [1872, 1873], "If": 1872, "while": [1872, 1873], "loop": 1872, "For": 1872, "break": [1872, 1873, 1946, 1954, 1956], "continu": [1872, 1873], "return": [1872, 1873, 1900, 1925], "resolut": [1872, 1873], "lookup": 1872, "defin": [1872, 1898, 1899], "terminologi": 1873, "meta": 1873, "primit": 1873, "special": [1873, 1893, 1928], "instanc": 1873, "when": [1873, 1893, 1898, 1911, 1918, 1927, 1946], "signatur": 1873, "expr": 1873, "convers": [1873, 1888], "atom": 1873, "identifi": [1873, 1946, 1956], "parenthes": 1873, "form": 1873, "displai": 1873, "primari": 1873, "power": 1873, "unari": [1873, 1880, 1927], "bitwis": 1873, "binari": [1873, 1880], "shift": 1873, "boolean": 1873, "condit": 1873, "augment": 1873, "rais": 1873, "del": 1873, "compound": 1873, "els": 1873, "getattr": 1873, "hasattr": 1873, "zip": [1873, 1915], "enumer": 1873, "rule": [1873, 1887, 1899, 1912], "remot": [1873, 1925], "procedur": 1873, "execut": [1873, 1893, 1896, 1915, 1916], "program": 1873, "coverag": [1874, 1886, 1898], "properti": [1875, 1878], "correctli": 1875, "bound": 1875, "schema": 1875, "between": [1875, 1915, 1946], "matrix": [1878, 1918], "decomposit": 1878, "solver": 1878, "misc": 1878, "experiment": 1878, "motiv": [1880, 1944, 1945], "reduct": [1880, 1896, 1907, 1935], "mobile_optim": 1881, "model_zoo": 1882, "strategi": [1885, 1914], "descriptor": 1885, "file_descriptor": 1885, "file_system": 1885, "subprocess": 1885, "keep": [1886, 1915], "dimens": [1886, 1887], "unifi": 1886, "contract": 1886, "awai": 1886, "factori": 1886, "variant": 1886, "semant": [1887, 1894, 1896, 1902, 1909], "infer": [1887, 1893, 1895, 1909], "explicit": 1887, "align": 1887, "current": 1887, "subsystem": 1887, "constructor": 1888, "contain": 1889, "convolut": [1889, 1890, 1907, 1908], "layer": 1889, "pool": [1889, 1890], "activ": [1889, 1890, 1958], "weight": [1889, 1914], "nonlinear": 1889, "recurr": [1889, 1900], "distanc": [1889, 1890], "loss": [1889, 1890, 1892], "vision": [1889, 1890], "shuffl": 1889, "lazi": 1889, "attent": 1890, "typic": 1892, "unscal": 1892, "accumul": 1892, "penalti": 1892, "one": 1892, "per": [1892, 1914], "need": [1892, 1946], "particular": [1892, 1893], "dtype": [1892, 1909, 1921, 1930], "encod": 1893, "histori": [1893, 1958], "set": [1893, 1911], "No": 1893, "evalu": [1893, 1901, 1949], "multithread": 1893, "concurr": 1893, "determin": [1893, 1908], "retain": 1893, "thread": [1893, 1895], "safeti": 1893, "wirting": 1893, "calculu": 1893, "pictur": 1893, "conjug": 1893, "own": 1893, "formula": 1893, "domain": 1893, "regist": [1893, 1942], "whether": [1893, 1915], "fire": 1893, "differ": [1893, 1911, 1946], "modifi": 1893, "compat": 1894, "runtim": [1895, 1900, 1956], "tune": 1895, "tensorfloat": [1896, 1902, 1907], "32": [1896, 1902, 1907, 1910], "tf32": [1896, 1902, 1907], "amper": [1896, 1907], "reduc": [1896, 1907], "fp16": [1896, 1907], "gemm": [1896, 1907], "bf16": [1896, 1907], "bc": 1896, "alloc": [1896, 1900, 1958], "cubla": 1896, "workspac": 1896, "cufft": 1896, "plan": [1896, 1902], "just": 1896, "time": [1896, 1950, 1954], "practic": [1896, 1906, 1918, 1940], "agnost": 1896, "buffer": [1896, 1906], "instead": 1896, "whole": [1896, 1946], "captur": 1896, "partial": 1896, "9": 1896, "6": 1896, "across": [1896, 1909], "intern": [1897, 1911, 1915, 1943, 1944], "processgroup": 1897, "ddpoptim": 1897, "separ": 1898, "setup_context": 1898, "like": [1898, 1915], "subclass": [1898, 1945], "wrapper": 1898, "__torch_function__": 1898, "overrid": [1898, 1957], "nativ": [1898, 1918, 1920], "anoth": 1899, "specifi": 1899, "gotcha": 1899, "staticmethod": 1899, "isn": 1900, "freed": 1900, "properli": 1900, "loader": 1900, "doesn": 1900, "notat": 1901, "background": [1901, 1924, 1925, 1941], "inform": [1901, 1923, 1955], "analyt": 1901, "output": 1901, "u": 1901, "reus": [1902, 1906], "hipfft": 1902, "rocfft": 1902, "enabl": 1902, "kernel": [1902, 1918, 1950], "larg": 1903, "fleet": 1903, "wide": 1903, "attach": 1903, "consider": 1903, "block": 1904, "neural": 1904, "tip": [1906, 1919], "fight": 1906, "deadlock": 1906, "through": 1906, "queue": 1906, "e": 1906, "g": 1906, "hogwild": 1906, "oversubscript": 1906, "accuraci": [1907, 1918, 1919, 1956], "extrem": 1907, "finit": 1907, "instinct": 1907, "mi200": 1907, "reproduc": 1908, "nondeterminist": 1908, "algorithm": [1908, 1914, 1924], "content": [1909, 1915], "preserv": 1909, "them": [1909, 1915], "version": 1909, "integ": 1909, "divis": 1909, "alwai": 1909, "includ": [1910, 1915], "compon": 1910, "speed": [1910, 1946], "One": [1910, 1955], "instal": 1910, "cffi": 1910, "cpp": 1910, "found": 1910, "win": 1910, "channel": 1910, "without": 1910, "claus": 1910, "protect": 1910, "broken": 1910, "pipe": [1910, 1916], "driver": 1910, "shut": 1910, "down": 1910, "ipc": 1910, "alexnet": 1911, "v": 1911, "index": [1911, 1935], "aten": [1911, 1951, 1955], "inlin": 1911, "discov": 1911, "unconvert": 1911, "onc": 1911, "preview": 1911, "diagnost": 1912, "base": [1914, 1955], "adjust": 1914, "learn": 1914, "rate": 1914, "averag": 1914, "swa": 1914, "ema": 1914, "schedul": 1914, "care": 1914, "put": 1914, "togeth": 1914, "your": 1915, "do": [1915, 1943, 1946], "see": [1915, 1946], "insid": [1915, 1946], "treat": 1915, "archiv": 1915, "file_structur": 1915, "given": 1915, "wa": 1915, "resourc": [1915, 1945], "later": 1915, "distinguish": 1915, "explan": 1915, "format": 1915, "framework": [1915, 1923], "user": [1915, 1925, 1938], "analyz": 1915, "extern": 1915, "mock": 1915, "refactor": 1915, "sharp": 1915, "global": 1915, "isol": 1915, "each": [1915, 1945], "mangl": 1915, "pipelin": 1916, "skip": 1916, "connect": 1916, "intel": 1917, "instrument": 1917, "technologi": 1917, "eager": 1918, "awar": 1918, "engin": 1918, "observ": [1918, 1921], "hardwar": 1918, "configur": [1918, 1920], "insensit": 1919, "int8": 1919, "sensit": 1919, "ao": [1921, 1936, 1937], "top": 1921, "quantize_fx": 1921, "qconfig_map": 1921, "backend_config": 1921, "custom_config": 1921, "pt2e": 1921, "0": [1921, 1952, 1953, 1956], "relat": [1921, 1945], "fake_quant": 1921, "intrins": 1921, "qat": 1921, "scheme": 1921, "rpc": 1923, "tensorpip": 1923, "rref": [1923, 1925], "remotemodul": 1923, "record": 1924, "dure": 1924, "smart": 1924, "end": 1924, "protocol": 1925, "assumpt": 1925, "lifetim": 1925, "reason": 1925, "scenario": 1925, "owner": 1925, "argument": 1925, "sparsiti": 1927, "semi": 1927, "acceler": 1927, "coo": 1927, "hybrid": 1927, "uncoalesc": 1927, "csr": 1927, "csc": 1927, "bsr": 1927, "bsc": 1927, "memory_format": 1930, "tensorboard": 1932, "creation": 1935, "sampl": 1935, "quasi": 1935, "pointwis": 1935, "spectral": 1935, "bla": 1935, "lapack": 1935, "foreach": 1935, "path": 1935, "n": [1936, 1937], "_numeric_suit": 1936, "_numeric_suite_fx": 1937, "deep": [1938, 1943], "dive": [1938, 1943], "howto": 1938, "vendor": 1938, "x86": 1940, "tree": 1941, "integr": 1941, "callabl": 1941, "previou": 1941, "after": 1942, "aotautograd": 1942, "speedi": 1942, "guard": [1943, 1944, 1949], "dynamo": 1943, "artifact": 1943, "abridg": 1944, "public": 1944, "overal": [1944, 1945], "architectur": [1944, 1945], "dimdynam": 1944, "unback": 1944, "symint": 1944, "fake": 1945, "bit": 1945, "detail": 1945, "individu": [1945, 1950], "characterist": 1945, "interact": 1945, "you": 1946, "still": 1946, "crash": 1946, "slow": 1946, "recompil": [1946, 1956], "am": 1946, "speedup": 1946, "caus": [1946, 1956], "didn": 1946, "incorrect": 1946, "result": 1946, "oom": 1946, "appli": 1946, "handl": 1946, "fine": [1946, 1947], "grain": [1946, 1947], "_dynamo": [1946, 1947], "disallow_in_graph": [1946, 1947], "_dynamo_skip": 1946, "pretrain": 1948, "next": 1948, "frame": 1949, "pep": 1949, "523": 1949, "instructiontransl": 1949, "torchinductor": [1950, 1953, 1956], "relev": 1950, "breakdown": 1950, "ir": [1951, 1955], "prim": 1951, "nnmodul": 1952, "__call__": 1952, "dashboard": 1953, "measur": 1953, "pr": 1953, "affect": 1953, "befor": 1953, "merg": 1953, "understand": [1954, 1958], "around": 1954, "overhead": 1954, "x": 1955, "none": 1955, "partition": 1955, "matcher": 1955, "capabl": 1955, "troubleshoot": 1956, "titl": 1956, "diagnos": 1956, "minifi": 1956, "torch_compile_debug": 1956, "excess": 1956, "snapshot": 1958, "visual": 1958, "timelin": 1958, "info": 1959, "finfo": 1959, "iinfo": 1959}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.flipud": [[254, "torch-tensor-flipud"]], "torch.Tensor.greater_equal_": [[282, "torch-tensor-greater-equal"]], "torch.Tensor.gt": [[283, "torch-tensor-gt"]], "torch.Tensor.hardshrink": [[286, "torch-tensor-hardshrink"]], "torch.Tensor.fix": [[249, "torch-tensor-fix"]], "torch.Tensor.ge_": [[273, "torch-tensor-ge"]], "torch.Tensor.hypot": [[291, "torch-tensor-hypot"]], "torch.Tensor.floor_": [[259, "torch-tensor-floor"]], "torch.Tensor.fmin": [[263, "torch-tensor-fmin"]], "torch.Tensor.flip": [[252, "torch-tensor-flip"]], "torch.Tensor.i0": [[293, "torch-tensor-i0"]], "torch.Tensor.floor_divide_": [[261, "torch-tensor-floor-divide"]], "torch.Tensor.geqrf": [[275, "torch-tensor-geqrf"]], "torch.Tensor.histogram": [[289, "torch-tensor-histogram"]], "torch.Tensor.float": [[255, "torch-tensor-float"]], "torch.Tensor.fliplr": [[253, "torch-tensor-fliplr"]], "torch.Tensor.geometric_": [[274, "torch-tensor-geometric"]], "torch.Tensor.heaviside": [[287, "torch-tensor-heaviside"]], "torch.Tensor.fill_": [[247, "torch-tensor-fill"]], "torch.Tensor.fix_": [[250, "torch-tensor-fix"]], "torch.Tensor.gt_": [[284, "torch-tensor-gt"]], "torch.Tensor.expm1_": [[245, "torch-tensor-expm1"]], "torch.Tensor.flatten": [[251, "torch-tensor-flatten"]], "torch.Tensor.greater": [[279, "torch-tensor-greater"]], "torch.Tensor.gcd": [[270, "torch-tensor-gcd"]], "torch.Tensor.frac": [[266, "torch-tensor-frac"]], "torch.Tensor.ge": [[272, "torch-tensor-ge"]], "torch.Tensor.half": [[285, "torch-tensor-half"]], "torch.Tensor.exponential_": [[246, "torch-tensor-exponential"]], "torch.Tensor.grad": [[278, "torch-tensor-grad"]], "torch.Tensor.hsplit": [[290, "torch-tensor-hsplit"]], "torch.Tensor.float_power_": [[257, "torch-tensor-float-power"]], "torch.Tensor.get_device": [[277, "torch-tensor-get-device"]], "torch.Tensor.hypot_": [[292, "torch-tensor-hypot"]], "torch.Tensor.fill_diagonal_": [[248, "torch-tensor-fill-diagonal"]], "torch.Tensor.fmax": [[262, "torch-tensor-fmax"]], "torch.Tensor.floor": [[258, "torch-tensor-floor"]], "torch.Tensor.frac_": [[267, "torch-tensor-frac"]], "torch.Tensor.float_power": [[256, "torch-tensor-float-power"]], "torch.Tensor.fmod_": [[265, "torch-tensor-fmod"]], "torch.Tensor.histc": [[288, "torch-tensor-histc"]], "torch.Tensor.frexp": [[268, "torch-tensor-frexp"]], "torch.Tensor.gcd_": [[271, "torch-tensor-gcd"]], "torch.Tensor.greater_": [[280, "torch-tensor-greater"]], "torch.Tensor.gather": [[269, "torch-tensor-gather"]], "torch.Tensor.ger": [[276, "torch-tensor-ger"]], "torch.Tensor.greater_equal": [[281, "torch-tensor-greater-equal"]], "torch.Tensor.fmod": [[264, "torch-tensor-fmod"]], "torch.Tensor.floor_divide": [[260, "torch-tensor-floor-divide"]], "torch.Tensor.bitwise_right_shift_": [[154, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.chalf": [[167, "torch-tensor-chalf"]], "torch.Tensor.contiguous": [[183, "torch-tensor-contiguous"]], "torch.Tensor.conj_physical_": [[182, "torch-tensor-conj-physical"]], "torch.Tensor.cosh_": [[191, "torch-tensor-cosh"]], "torch.Tensor.cauchy_": [[161, "torch-tensor-cauchy"]], "torch.Tensor.bitwise_or_": [[152, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_or": [[151, "torch-tensor-bitwise-or"]], "torch.Tensor.ceil": [[164, "torch-tensor-ceil"]], "torch.Tensor.chunk": [[172, "torch-tensor-chunk"]], "torch.Tensor.count_nonzero": [[192, "torch-tensor-count-nonzero"]], "torch.Tensor.bitwise_left_shift_": [[148, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.copysign": [[185, "torch-tensor-copysign"]], "torch.Tensor.clamp_": [[174, "torch-tensor-clamp"]], "torch.Tensor.corrcoef": [[187, "torch-tensor-corrcoef"]], "torch.Tensor.cosh": [[190, "torch-tensor-cosh"]], "torch.Tensor.copy_": [[184, "torch-tensor-copy"]], "torch.Tensor.conj_physical": [[181, "torch-tensor-conj-physical"]], "torch.Tensor.cos": [[188, "torch-tensor-cos"]], "torch.Tensor.byte": [[160, "torch-tensor-byte"]], "torch.Tensor.cholesky_inverse": [[170, "torch-tensor-cholesky-inverse"]], "torch.Tensor.cov": [[193, "torch-tensor-cov"]], "torch.Tensor.cpu": [[194, "torch-tensor-cpu"]], "torch.Tensor.cholesky": [[169, "torch-tensor-cholesky"]], "torch.Tensor.char": [[168, "torch-tensor-char"]], "torch.Tensor.clip_": [[176, "torch-tensor-clip"]], "torch.Tensor.conj": [[180, "torch-tensor-conj"]], "torch.Tensor.cross": [[195, "torch-tensor-cross"]], "torch.Tensor.ccol_indices": [[162, "torch-tensor-ccol-indices"]], "torch.Tensor.clamp": [[173, "torch-tensor-clamp"]], "torch.Tensor.clip": [[175, "torch-tensor-clip"]], "torch.Tensor.cos_": [[189, "torch-tensor-cos"]], "torch.Tensor.coalesce": [[178, "torch-tensor-coalesce"]], "torch.Tensor.col_indices": [[179, "torch-tensor-col-indices"]], "torch.Tensor.cfloat": [[166, "torch-tensor-cfloat"]], "torch.Tensor.bitwise_left_shift": [[147, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bmm": [[157, "torch-tensor-bmm"]], "torch.Tensor.bitwise_xor_": [[156, "torch-tensor-bitwise-xor"]], "torch.Tensor.cholesky_solve": [[171, "torch-tensor-cholesky-solve"]], "torch.Tensor.bitwise_not_": [[150, "torch-tensor-bitwise-not"]], "torch.Tensor.bitwise_not": [[149, "torch-tensor-bitwise-not"]], "torch.Tensor.ceil_": [[165, "torch-tensor-ceil"]], "torch.Tensor.bitwise_right_shift": [[153, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bitwise_xor": [[155, "torch-tensor-bitwise-xor"]], "torch.Tensor.broadcast_to": [[159, "torch-tensor-broadcast-to"]], "torch.Tensor.copysign_": [[186, "torch-tensor-copysign"]], "torch.Tensor.clone": [[177, "torch-tensor-clone"]], "torch.Tensor.cdouble": [[163, "torch-tensor-cdouble"]], "torch.Tensor.bool": [[158, "torch-tensor-bool"]], "torch.Tensor.allclose": [[101, "torch-tensor-allclose"]], "torch.Tensor.asin_": [[129, "torch-tensor-asin"]], "torch.Tensor.atan2_": [[134, "torch-tensor-atan2"]], "torch.Tensor.adjoint": [[99, "torch-tensor-adjoint"]], "torch.Tensor.arcsin": [[112, "torch-tensor-arcsin"]], "torch.Tensor.as_strided": [[126, "torch-tensor-as-strided"]], "torch.Tensor.all": [[100, "torch-tensor-all"]], "torch.Tensor.arctan_": [[119, "torch-tensor-arctan"]], "torch.Tensor.atanh_": [[137, "torch-tensor-atanh"]], "torch.Tensor.baddbmm_": [[140, "torch-tensor-baddbmm"]], "torch.Tensor.bitwise_and": [[145, "torch-tensor-bitwise-and"]], "torch.Tensor.arctan": [[116, "torch-tensor-arctan"]], "torch.Tensor.addr_": [[98, "torch-tensor-addr"]], "torch.Tensor.bfloat16": [[143, "torch-tensor-bfloat16"]], "torch.Tensor.bernoulli": [[141, "torch-tensor-bernoulli"]], "torch.Tensor.atan": [[132, "torch-tensor-atan"]], "torch.Tensor.asin": [[128, "torch-tensor-asin"]], "torch.Tensor.arctanh": [[120, "torch-tensor-arctanh"]], "torch.Tensor.arcsin_": [[113, "torch-tensor-arcsin"]], "torch.Tensor.asinh": [[130, "torch-tensor-asinh"]], "torch.Tensor.argmax": [[122, "torch-tensor-argmax"]], "torch.Tensor.atanh": [[136, "torch-tensor-atanh"]], "torch.Tensor.arccosh_": [[111, "torch-tensor-arccosh"]], "torch.Tensor.amin": [[103, "torch-tensor-amin"]], "torch.Tensor.arccosh": [[110, "torch-tensor-arccosh"]], "torch.Tensor.backward": [[138, "torch-tensor-backward"]], "torch.Tensor.any": [[106, "torch-tensor-any"]], "torch.Tensor.arccos": [[108, "torch-tensor-arccos"]], "torch.Tensor.asinh_": [[131, "torch-tensor-asinh"]], "torch.Tensor.baddbmm": [[139, "torch-tensor-baddbmm"]], "torch.Tensor.atan2": [[133, "torch-tensor-atan2"]], "torch.Tensor.apply_": [[107, "torch-tensor-apply"]], "torch.Tensor.as_subclass": [[127, "torch-tensor-as-subclass"]], "torch.Tensor.atan_": [[135, "torch-tensor-atan"]], "torch.Tensor.amax": [[102, "torch-tensor-amax"]], "torch.Tensor.arcsinh_": [[115, "torch-tensor-arcsinh"]], "torch.Tensor.argwhere": [[125, "torch-tensor-argwhere"]], "torch.Tensor.bitwise_and_": [[146, "torch-tensor-bitwise-and"]], "torch.Tensor.angle": [[105, "torch-tensor-angle"]], "torch.Tensor.arctan2": [[117, "torch-tensor-arctan2"]], "torch.Tensor.argsort": [[124, "torch-tensor-argsort"]], "torch.Tensor.bincount": [[144, "torch-tensor-bincount"]], "torch.Tensor.arcsinh": [[114, "torch-tensor-arcsinh"]], "torch.Tensor.arccos_": [[109, "torch-tensor-arccos"]], "torch.Tensor.argmin": [[123, "torch-tensor-argmin"]], "torch.Tensor.arctan2_": [[118, "torch-tensor-arctan2"]], "torch.Tensor.arctanh_": [[121, "torch-tensor-arctanh"]], "torch.Tensor.bernoulli_": [[142, "torch-tensor-bernoulli"]], "torch.Tensor.aminmax": [[104, "torch-tensor-aminmax"]], "torch.Tensor.cumprod": [[200, "torch-tensor-cumprod"]], "torch.Tensor.erfc": [[236, "torch-tensor-erfc"]], "torch.Tensor.double": [[228, "torch-tensor-double"]], "torch.Tensor.dot": [[227, "torch-tensor-dot"]], "torch.Tensor.element_size": [[230, "torch-tensor-element-size"]], "torch.Tensor.dense_dim": [[206, "torch-tensor-dense-dim"]], "torch.Tensor.cuda": [[197, "torch-tensor-cuda"]], "torch.Tensor.erfinv": [[238, "torch-tensor-erfinv"]], "torch.Tensor.deg2rad": [[205, "torch-tensor-deg2rad"]], "torch.Tensor.cumsum": [[202, "torch-tensor-cumsum"]], "torch.Tensor.diag": [[212, "torch-tensor-diag"]], "torch.Tensor.device": [[211, "torch-tensor-device"]], "torch.Tensor.digamma": [[218, "torch-tensor-digamma"]], "torch.Tensor.cummax": [[198, "torch-tensor-cummax"]], "torch.Tensor.dist": [[222, "torch-tensor-dist"]], "torch.Tensor.exp_": [[241, "torch-tensor-exp"]], "torch.Tensor.diagonal": [[215, "torch-tensor-diagonal"]], "torch.Tensor.equal": [[233, "torch-tensor-equal"]], "torch.Tensor.dim": [[220, "torch-tensor-dim"]], "torch.Tensor.exp": [[240, "torch-tensor-exp"]], "torch.Tensor.eq": [[231, "torch-tensor-eq"]], "torch.Tensor.crow_indices": [[196, "torch-tensor-crow-indices"]], "torch.Tensor.div_": [[224, "torch-tensor-div"]], "torch.Tensor.detach_": [[210, "torch-tensor-detach"]], "torch.Tensor.dsplit": [[229, "torch-tensor-dsplit"]], "torch.Tensor.expand": [[242, "torch-tensor-expand"]], "torch.Tensor.dim_order": [[221, "torch-tensor-dim-order"]], "torch.Tensor.dequantize": [[207, "torch-tensor-dequantize"]], "torch.Tensor.divide": [[225, "torch-tensor-divide"]], "torch.Tensor.expand_as": [[243, "torch-tensor-expand-as"]], "torch.Tensor.erfc_": [[237, "torch-tensor-erfc"]], "torch.Tensor.erf": [[234, "torch-tensor-erf"]], "torch.Tensor.cumprod_": [[201, "torch-tensor-cumprod"]], "torch.Tensor.expm1": [[244, "torch-tensor-expm1"]], "torch.Tensor.erf_": [[235, "torch-tensor-erf"]], "torch.Tensor.diff": [[217, "torch-tensor-diff"]], "torch.Tensor.data_ptr": [[204, "torch-tensor-data-ptr"]], "torch.Tensor.det": [[208, "torch-tensor-det"]], "torch.Tensor.erfinv_": [[239, "torch-tensor-erfinv"]], "torch.Tensor.diagflat": [[214, "torch-tensor-diagflat"]], "torch.Tensor.cummin": [[199, "torch-tensor-cummin"]], "torch.Tensor.diagonal_scatter": [[216, "torch-tensor-diagonal-scatter"]], "torch.Tensor.div": [[223, "torch-tensor-div"]], "torch.Tensor.cumsum_": [[203, "torch-tensor-cumsum"]], "torch.Tensor.eq_": [[232, "torch-tensor-eq"]], "torch.Tensor.digamma_": [[219, "torch-tensor-digamma"]], "torch.Tensor.diag_embed": [[213, "torch-tensor-diag-embed"]], "torch.Tensor.detach": [[209, "torch-tensor-detach"]], "torch.Tensor.divide_": [[226, "torch-tensor-divide"]], "torch.Tensor.is_complex": [[317, "torch-tensor-is-complex"]], "torch.Tensor.index_copy_": [[303, "torch-tensor-index-copy"]], "torch.Tensor.inner": [[312, "torch-tensor-inner"]], "torch.Tensor.is_contiguous": [[319, "torch-tensor-is-contiguous"]], "torch.Tensor.igamma_": [[296, "torch-tensor-igamma"]], "torch.Tensor.is_cuda": [[320, "torch-tensor-is-cuda"]], "torch.Tensor.igammac": [[297, "torch-tensor-igammac"]], "torch.Tensor.is_coalesced": [[316, "torch-tensor-is-coalesced"]], "torch.Tensor.is_sparse": [[330, "torch-tensor-is-sparse"]], "torch.Tensor.istft": [[339, "torch-tensor-istft"]], "torch.Tensor.imag": [[299, "torch-tensor-imag"]], "torch.Tensor.igamma": [[295, "torch-tensor-igamma"]], "torch.Tensor.index_reduce": [[308, "torch-tensor-index-reduce"]], "torch.Tensor.inverse": [[315, "torch-tensor-inverse"]], "torch.Tensor.isneginf": [[336, "torch-tensor-isneginf"]], "torch.Tensor.is_pinned": [[325, "torch-tensor-is-pinned"]], "torch.Tensor.igammac_": [[298, "torch-tensor-igammac"]], "torch.Tensor.index_fill": [[304, "torch-tensor-index-fill"]], "torch.Tensor.is_inference": [[322, "torch-tensor-is-inference"]], "torch.Tensor.is_leaf": [[323, "torch-tensor-is-leaf"]], "torch.Tensor.index_add": [[300, "torch-tensor-index-add"]], "torch.Tensor.item": [[340, "torch-tensor-item"]], "torch.Tensor.isfinite": [[333, "torch-tensor-isfinite"]], "torch.Tensor.index_fill_": [[305, "torch-tensor-index-fill"]], "torch.Tensor.is_shared": [[328, "torch-tensor-is-shared"]], "torch.Tensor.isreal": [[338, "torch-tensor-isreal"]], "torch.Tensor.index_add_": [[301, "torch-tensor-index-add"]], "torch.Tensor.index_put": [[306, "torch-tensor-index-put"]], "torch.Tensor.i0_": [[294, "torch-tensor-i0"]], "torch.Tensor.index_reduce_": [[309, "torch-tensor-index-reduce"]], "torch.Tensor.isinf": [[334, "torch-tensor-isinf"]], "torch.Tensor.itemsize": [[341, "torch-tensor-itemsize"]], "torch.Tensor.is_floating_point": [[321, "torch-tensor-is-floating-point"]], "torch.Tensor.index_select": [[310, "torch-tensor-index-select"]], "torch.Tensor.is_meta": [[324, "torch-tensor-is-meta"]], "torch.Tensor.isclose": [[332, "torch-tensor-isclose"]], "torch.Tensor.isnan": [[335, "torch-tensor-isnan"]], "torch.Tensor.is_conj": [[318, "torch-tensor-is-conj"]], "torch.Tensor.is_signed": [[329, "torch-tensor-is-signed"]], "torch.Tensor.is_sparse_csr": [[331, "torch-tensor-is-sparse-csr"]], "torch.Tensor.indices": [[311, "torch-tensor-indices"]], "torch.Tensor.is_quantized": [[326, "torch-tensor-is-quantized"]], "torch.Tensor.isposinf": [[337, "torch-tensor-isposinf"]], "torch.Tensor.int_repr": [[314, "torch-tensor-int-repr"]], "torch.Tensor.index_copy": [[302, "torch-tensor-index-copy"]], "torch.Tensor.kthvalue": [[342, "torch-tensor-kthvalue"]], "torch.Tensor.is_set_to": [[327, "torch-tensor-is-set-to"]], "torch.Tensor.int": [[313, "torch-tensor-int"]], "torch.Tensor.index_put_": [[307, "torch-tensor-index-put"]], "torch.Tensor.log2_": [[363, "torch-tensor-log2"]], "torch.Tensor.lu_solve": [[385, "torch-tensor-lu-solve"]], "torch.Tensor.masked_scatter_": [[390, "torch-tensor-masked-scatter"]], "torch.Tensor.logdet": [[369, "torch-tensor-logdet"]], "torch.Tensor.log_normal_": [[365, "torch-tensor-log-normal"]], "torch.Tensor.logical_not_": [[373, "torch-tensor-logical-not"]], "torch.Tensor.log1p_": [[361, "torch-tensor-log1p"]], "torch.Tensor.le": [[347, "torch-tensor-le"]], "torch.Tensor.lgamma": [[355, "torch-tensor-lgamma"]], "torch.Tensor.lerp": [[349, "torch-tensor-lerp"]], "torch.Tensor.log10_": [[359, "torch-tensor-log10"]], "torch.Tensor.map_": [[386, "torch-tensor-map"]], "torch.Tensor.logical_xor_": [[377, "torch-tensor-logical-xor"]], "torch.Tensor.lt": [[382, "torch-tensor-lt"]], "torch.Tensor.logical_or_": [[375, "torch-tensor-logical-or"]], "torch.Tensor.lu": [[384, "torch-tensor-lu"]], "torch.Tensor.less": [[351, "torch-tensor-less"]], "torch.Tensor.logit": [[378, "torch-tensor-logit"]], "torch.Tensor.log10": [[358, "torch-tensor-log10"]], "torch.Tensor.logaddexp": [[366, "torch-tensor-logaddexp"]], "torch.Tensor.ldexp": [[345, "torch-tensor-ldexp"]], "torch.Tensor.less_equal_": [[354, "torch-tensor-less-equal"]], "torch.Tensor.lcm_": [[344, "torch-tensor-lcm"]], "torch.Tensor.masked_fill": [[387, "torch-tensor-masked-fill"]], "torch.Tensor.ldexp_": [[346, "torch-tensor-ldexp"]], "torch.Tensor.le_": [[348, "torch-tensor-le"]], "torch.Tensor.logaddexp2": [[367, "torch-tensor-logaddexp2"]], "torch.Tensor.logcumsumexp": [[368, "torch-tensor-logcumsumexp"]], "torch.Tensor.lerp_": [[350, "torch-tensor-lerp"]], "torch.Tensor.logsumexp": [[380, "torch-tensor-logsumexp"]], "torch.Tensor.lgamma_": [[356, "torch-tensor-lgamma"]], "torch.Tensor.lt_": [[383, "torch-tensor-lt"]], "torch.Tensor.masked_fill_": [[388, "torch-tensor-masked-fill"]], "torch.Tensor.logical_not": [[372, "torch-tensor-logical-not"]], "torch.Tensor.log": [[357, "torch-tensor-log"]], "torch.Tensor.logical_and_": [[371, "torch-tensor-logical-and"]], "torch.Tensor.less_": [[352, "torch-tensor-less"]], "torch.Tensor.logical_xor": [[376, "torch-tensor-logical-xor"]], "torch.Tensor.masked_select": [[391, "torch-tensor-masked-select"]], "torch.Tensor.log2": [[362, "torch-tensor-log2"]], "torch.Tensor.masked_scatter": [[389, "torch-tensor-masked-scatter"]], "torch.Tensor.log_": [[364, "torch-tensor-log"]], "torch.Tensor.logical_and": [[370, "torch-tensor-logical-and"]], "torch.Tensor.long": [[381, "torch-tensor-long"]], "torch.Tensor.logit_": [[379, "torch-tensor-logit"]], "torch.Tensor.logical_or": [[374, "torch-tensor-logical-or"]], "torch.Tensor.lcm": [[343, "torch-tensor-lcm"]], "torch.Tensor.less_equal": [[353, "torch-tensor-less-equal"]], "torch.Tensor.log1p": [[360, "torch-tensor-log1p"]], "torch.utils": [[1960, "module-torch.utils"]], "torch.utils.set_module": [[1854, "torch-utils-set-module"]], "torch.sum": [[1814, "torch-sum"]], "torch.view_as_real": [[1860, "torch-view-as-real"]], "torch.trunc": [[1844, "torch-trunc"]], "torch.utils.rename_privateuse1_backend": [[1853, "torch-utils-rename-privateuse1-backend"]], "torch.vdot": [[1858, "torch-vdot"]], "torch.unflatten": [[1846, "torch-unflatten"]], "torch.unique": [[1847, "torch-unique"]], "torch.var": [[1856, "torch-var"]], "torch.var_mean": [[1857, "torch-var-mean"]], "torch.swapdims": [[1818, "torch-swapdims"]], "torch.svd": [[1815, "torch-svd"]], "torch.subtract": [[1813, "torch-subtract"]], "torch.svd_lowrank": [[1816, "torch-svd-lowrank"]], "torch.trace": [[1834, "torch-trace"]], "torch.tile": [[1832, "torch-tile"]], "torch.sym_min": [[1822, "torch-sym-min"]], "torch.take_along_dim": [[1826, "torch-take-along-dim"]], "torch.sym_int": [[1820, "torch-sym-int"]], "torch.triu": [[1841, "torch-triu"]], "torch.vander": [[1855, "torch-vander"]], "torch.topk": [[1833, "torch-topk"]], "torch.transpose": [[1835, "torch-transpose"]], "torch.tril_indices": [[1840, "torch-tril-indices"]], "torch.view_as_complex": [[1859, "torch-view-as-complex"]], "torch.triu_indices": [[1842, "torch-triu-indices"]], "torch.trapezoid": [[1836, "torch-trapezoid"]], "torch.sym_float": [[1819, "torch-sym-float"]], "torch.triangular_solve": [[1838, "torch-triangular-solve"]], "torch.tril": [[1839, "torch-tril"]], "torch.unsqueeze": [[1849, "torch-unsqueeze"]], "torch.tan": [[1827, "torch-tan"]], "torch.tensor": [[1829, "torch-tensor"]], "torch.unbind": [[1845, "torch-unbind"]], "torch.vmap": [[1861, "torch-vmap"]], "torch.tensordot": [[1831, "torch-tensordot"]], "torch.tanh": [[1828, "torch-tanh"]], "torch.sym_not": [[1823, "torch-sym-not"]], "torch.trapz": [[1837, "torch-trapz"]], "torch.t": [[1824, "torch-t"]], "torch.true_divide": [[1843, "torch-true-divide"]], "torch.sym_max": [[1821, "torch-sym-max"]], "torch.take": [[1825, "torch-take"]], "torch.unique_consecutive": [[1848, "torch-unique-consecutive"]], "torch.utils.get_cpp_backtrace": [[1852, "torch-utils-get-cpp-backtrace"]], "torch.use_deterministic_algorithms": [[1850, "torch-use-deterministic-algorithms"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1851, "torch-utils-generate-methods-for-privateuse1-backend"]], "torch.swapaxes": [[1817, "torch-swapaxes"]], "torch.tensor_split": [[1830, "torch-tensor-split"]], "torch.rand": [[1722, "torch-rand"]], "torch.renorm": [[1734, "torch-renorm"]], "torch.set_num_threads": [[1761, "torch-set-num-threads"]], "torch.resolve_conj": [[1737, "torch-resolve-conj"]], "torch.roll": [[1740, "torch-roll"]], "torch.rsqrt": [[1744, "torch-rsqrt"]], "torch.set_rng_state": [[1763, "torch-set-rng-state"]], "torch.real": [[1731, "torch-real"]], "torch.quantized_batch_norm": [[1717, "torch-quantized-batch-norm"]], "torch.quantized_max_pool1d": [[1718, "torch-quantized-max-pool1d"]], "torch.set_default_dtype": [[1754, "torch-set-default-dtype"]], "torch.randint": [[1724, "torch-randint"]], "set_grad_enabled": [[1759, "set-grad-enabled"]], "torch.rot90": [[1741, "torch-rot90"]], "torch.result_type": [[1739, "torch-result-type"]], "torch.rand_like": [[1723, "torch-rand-like"]], "torch.randn_like": [[1727, "torch-randn-like"]], "torch.repeat_interleave": [[1735, "torch-repeat-interleave"]], "torch.reciprocal": [[1732, "torch-reciprocal"]], "torch.round": [[1742, "torch-round"]], "torch.set_flush_denormal": [[1758, "torch-set-flush-denormal"]], "torch.reshape": [[1736, "torch-reshape"]], "torch.quantize_per_channel": [[1715, "torch-quantize-per-channel"]], "torch.set_printoptions": [[1762, "torch-set-printoptions"]], "SobolEngine": [[1720, "sobolengine"]], "torch.scatter_reduce": [[1748, "torch-scatter-reduce"]], "torch.select": [[1751, "torch-select"]], "torch.scatter_add": [[1747, "torch-scatter-add"]], "torch.set_deterministic_debug_mode": [[1756, "torch-set-deterministic-debug-mode"]], "torch.randn": [[1726, "torch-randn"]], "torch.quantize_per_tensor": [[1716, "torch-quantize-per-tensor"]], "torch.rad2deg": [[1721, "torch-rad2deg"]], "torch.range": [[1729, "torch-range"]], "torch.remainder": [[1733, "torch-remainder"]], "torch.select_scatter": [[1752, "torch-select-scatter"]], "torch.save": [[1745, "torch-save"]], "torch.quantized_max_pool2d": [[1719, "torch-quantized-max-pool2d"]], "torch.set_float32_matmul_precision": [[1757, "torch-set-float32-matmul-precision"]], "torch.set_default_device": [[1753, "torch-set-default-device"]], "torch.resolve_neg": [[1738, "torch-resolve-neg"]], "torch.randint_like": [[1725, "torch-randint-like"]], "torch.set_num_interop_threads": [[1760, "torch-set-num-interop-threads"]], "torch.scatter": [[1746, "torch-scatter"]], "torch.set_default_tensor_type": [[1755, "torch-set-default-tensor-type"]], "torch.row_stack": [[1743, "torch-row-stack"]], "torch.searchsorted": [[1749, "torch-searchsorted"]], "torch.seed": [[1750, "torch-seed"]], "torch.randperm": [[1728, "torch-randperm"]], "torch.ravel": [[1730, "torch-ravel"]], "torch.Tensor.addmm_": [[94, "torch-tensor-addmm"]], "torch.Tensor.abs_": [[78, "torch-tensor-abs"]], "ExportDB": [[55, "exportdb"]], "Tags": [[55, null]], "Supported": [[55, "supported"]], "assume_constant_result": [[55, "assume-constant-result"], [65, "assume-constant-result"]], "autograd_function": [[55, "autograd-function"]], "class_method": [[55, "class-method"]], "cond_branch_class_method": [[55, "cond-branch-class-method"], [62, "cond-branch-class-method"], [63, "cond-branch-class-method"]], "cond_branch_nested_function": [[55, "cond-branch-nested-function"], [62, "cond-branch-nested-function"], [63, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[55, "cond-branch-nonlocal-variables"], [62, "cond-branch-nonlocal-variables"], [63, "cond-branch-nonlocal-variables"]], "cond_closed_over_variable": [[55, "cond-closed-over-variable"], [62, "cond-closed-over-variable"], [58, "cond-closed-over-variable"]], "cond_operands": [[55, "cond-operands"], [62, "cond-operands"], [63, "cond-operands"]], "cond_predicate": [[55, "cond-predicate"], [62, "cond-predicate"], [63, "cond-predicate"]], "constrain_as_size_example": [[55, "constrain-as-size-example"], [64, "constrain-as-size-example"], [65, "constrain-as-size-example"]], "constrain_as_value_example": [[55, "constrain-as-value-example"], [64, "constrain-as-value-example"], [65, "constrain-as-value-example"]], "decorator": [[55, "decorator"]], "dictionary": [[55, "dictionary"], [61, "dictionary"]], "dynamic_shape_assert": [[55, "dynamic-shape-assert"], [56, "dynamic-shape-assert"]], "dynamic_shape_constructor": [[55, "dynamic-shape-constructor"], [63, "dynamic-shape-constructor"]], "dynamic_shape_if_guard": [[55, "dynamic-shape-if-guard"], [63, "dynamic-shape-if-guard"], [60, "dynamic-shape-if-guard"]], "dynamic_shape_map": [[55, "dynamic-shape-map"], [66, "dynamic-shape-map"], [63, "dynamic-shape-map"]], "dynamic_shape_slicing": [[55, "dynamic-shape-slicing"], [63, "dynamic-shape-slicing"]], "dynamic_shape_view": [[55, "dynamic-shape-view"], [63, "dynamic-shape-view"]], "fn_with_kwargs": [[55, "fn-with-kwargs"], [61, "fn-with-kwargs"]], "list_contains": [[55, "list-contains"], [61, "list-contains"], [63, "list-contains"], [56, "list-contains"]], "list_unpack": [[55, "list-unpack"], [61, "list-unpack"], [60, "list-unpack"]], "nested_function": [[55, "nested-function"], [58, "nested-function"]], "null_context_manager": [[55, "null-context-manager"], [59, "null-context-manager"]], "pytree_flatten": [[55, "pytree-flatten"]], "scalar_output": [[55, "scalar-output"], [63, "scalar-output"]], "specialized_attribute": [[55, "specialized-attribute"]], "static_for_loop": [[55, "static-for-loop"], [60, "static-for-loop"]], "static_if": [[55, "static-if"], [60, "static-if"]], "tensor_setattr": [[55, "tensor-setattr"], [57, "tensor-setattr"]], "Not Supported Yet": [[55, "not-supported-yet"]], "dynamic_shape_round": [[55, "dynamic-shape-round"], [57, "dynamic-shape-round"], [63, "dynamic-shape-round"]], "type_reflection_method": [[55, "type-reflection-method"], [57, "type-reflection-method"]], "torch.func Whirlwind Tour": [[52, "torch-func-whirlwind-tour"]], "What is torch.func?": [[52, "what-is-torch-func"]], "Why composable function transforms?": [[52, "why-composable-function-transforms"], [47, "why-composable-function-transforms"]], "What are the transforms?": [[52, "what-are-the-transforms"]], "grad() (gradient computation)": [[52, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[52, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[52, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[52, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[52, "jacrev-jacfwd-and-hessian"]], "torch.Tensor.addmm": [[93, "torch-tensor-addmm"]], "python.data-structure": [[61, "python-data-structure"]], "torch.Tensor.addcmul_": [[92, "torch-tensor-addcmul"]], "torch.Tensor.addmv": [[95, "torch-tensor-addmv"]], "torch.cond": [[62, "torch-cond"]], "torch.map": [[66, "torch-map"]], "torch.Tensor.abs": [[77, "torch-tensor-abs"]], "Generator": [[76, "generator"]], "FXE0008:fx-node-to-onnx": [[68, "fxe0008-fx-node-to-onnx"]], "torch.dynamic-value": [[64, "torch-dynamic-value"]], "torch.Tensor.acosh_": [[84, "torch-tensor-acosh"]], "FXE0010:fx-pass": [[69, "fxe0010-fx-pass"]], "python.closure": [[58, "python-closure"]], "FXE0015:fx-node-insert-type-promotion": [[74, "fxe0015-fx-node-insert-type-promotion"]], "python.builtin": [[57, "python-builtin"]], "torch.Tensor.addbmm_": [[88, "torch-tensor-addbmm"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[75, "fxe0016-find-operator-overloads-in-onnx-registry"]], "Migrating from functorch to torch.func": [[50, "migrating-from-functorch-to-torch-func"]], "function transforms": [[50, "function-transforms"]], "NN module utilities": [[50, "nn-module-utilities"]], "functorch.make_functional": [[50, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[50, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[50, "functorch-compile"]], "torch.Tensor.absolute": [[79, "torch-tensor-absolute"]], "torch.Tensor.absolute_": [[80, "torch-tensor-absolute"]], "torch.fx": [[54, "torch-fx"]], "Overview": [[54, "module-torch.fx"], [17, "module-torch.cuda._sanitizer"], [1912, "overview"], [1942, "overview"], [1917, "module-torch.profiler"]], "Writing Transformations": [[54, "writing-transformations"]], "A Quick Primer on Graphs": [[54, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[54, "graph-manipulation"]], "Direct Graph Manipulation": [[54, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[54, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[54, "graph-manipulation-examples"]], "Proxy/Retracing": [[54, "proxy-retracing"]], "The Interpreter Pattern": [[54, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[54, "examples-of-the-interpreter-pattern"]], "Debugging": [[54, "debugging"], [1870, "debugging"]], "Introduction": [[54, "introduction"], [1888, "introduction"], [1880, "introduction"]], "Common Pitfalls in Transform Authoring": [[54, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[54, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[54, "debugging-the-generated-code"]], "Use pdb": [[54, "use-pdb"]], "Print the Generated Code": [[54, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[54, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[54, "debugging-the-transformation"]], "Available Debuggers": [[54, "available-debuggers"]], "Limitations of Symbolic Tracing": [[54, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[54, "dynamic-control-flow"]], "Static Control Flow": [[54, "static-control-flow"]], "Non-torch Functions": [[54, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[54, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[54, "leaf-modules"]], "Miscellanea": [[54, "miscellanea"]], "API Reference": [[54, "api-reference"], [1883, "module-torch.monitor"], [17, "api-reference"], [1917, "api-reference"], [1915, "api-reference"]], "torch.Tensor.addcdiv": [[89, "torch-tensor-addcdiv"]], "FXE0007:fx-graph-to-onnx": [[67, "fxe0007-fx-graph-to-onnx"]], "Key Representations:": [[67, "key-representations"]], "Additional Notes:": [[67, "additional-notes"]], "FXE0011:no-symbolic-function-for-call-function": [[70, "fxe0011-no-symbolic-function-for-call-function"]], "UX Limitations": [[51, "ux-limitations"]], "General limitations": [[51, "general-limitations"]], "torch.autograd APIs": [[51, "torch-autograd-apis"]], "vmap limitations": [[51, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[51, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[51, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[51, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[51, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[51, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[51, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[51, "randomness"]], "torch.Tensor.acos_": [[82, "torch-tensor-acos"]], "torch.Tensor.addcdiv_": [[90, "torch-tensor-addcdiv"]], "torch.Tensor.addcmul": [[91, "torch-tensor-addcmul"]], "torch.dynamic-shape": [[63, "torch-dynamic-shape"]], "torch.Tensor.addmv_": [[96, "torch-tensor-addmv"]], "python.context-manager": [[59, "python-context-manager"]], "torch.escape-hatch": [[65, "torch-escape-hatch"]], "torch.Tensor.acos": [[81, "torch-tensor-acos"]], "torch.Tensor.addbmm": [[87, "torch-tensor-addbmm"]], "FXE0012:unsupported-fx-node-analysis": [[71, "fxe0012-unsupported-fx-node-analysis"]], "torch.Tensor.add": [[85, "torch-tensor-add"]], "torch.futures": [[53, "torch-futures"]], "python.control-flow": [[60, "python-control-flow"]], "python.assert": [[56, "python-assert"]], "FXE0013:op-level-debugging": [[72, "fxe0013-op-level-debugging"]], "FXE0014:find-opschema-matched-symbolic-function": [[73, "fxe0014-find-opschema-matched-symbolic-function"]], "torch.Tensor.addr": [[97, "torch-tensor-addr"]], "Patching Batch Norm": [[49, "patching-batch-norm"]], "What\u2019s happening?": [[49, "what-s-happening"]], "How to fix": [[49, "how-to-fix"]], "Option 1: Change the BatchNorm": [[49, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[49, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[49, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[49, "option-4-eval-mode"]], "torch.Tensor.add_": [[86, "torch-tensor-add"]], "torch.Tensor.acosh": [[83, "torch-tensor-acosh"]], "torch.set_warn_always": [[1764, "torch-set-warn-always"]], "torch.sqrt": [[1804, "torch-sqrt"]], "torch.stft": [[1811, "torch-stft"]], "torch.sin": [[1780, "torch-sin"]], "torch.sub": [[1812, "torch-sub"]], "torch.signal.windows.bartlett": [[1768, "torch-signal-windows-bartlett"]], "torch.sparse.as_sparse_gradcheck": [[1789, "torch-sparse-as-sparse-gradcheck"]], "torch.signbit": [[1779, "torch-signbit"]], "torch.sparse_compressed_tensor": [[1799, "torch-sparse-compressed-tensor"]], "torch.signal.windows.kaiser": [[1777, "torch-signal-windows-kaiser"]], "torch.slogdet": [[1784, "torch-slogdet"]], "torch.sparse.sampled_addmm": [[1793, "torch-sparse-sampled-addmm"]], "torch.sspaddmm": [[1807, "torch-sspaddmm"]], "torch.softmax": [[1786, "torch-softmax"]], "check_sparse_tensor_invariants": [[1790, "check-sparse-tensor-invariants"]], "torch.sparse.spdiags": [[1795, "torch-sparse-spdiags"]], "torch.signal.windows.hamming": [[1775, "torch-signal-windows-hamming"]], "torch.sparse_bsc_tensor": [[1797, "torch-sparse-bsc-tensor"]], "torch.sinh": [[1782, "torch-sinh"]], "torch.sparse_bsr_tensor": [[1798, "torch-sparse-bsr-tensor"]], "torch.std": [[1809, "torch-std"]], "torch.sparse_csr_tensor": [[1802, "torch-sparse-csr-tensor"]], "torch.sparse_coo_tensor": [[1800, "torch-sparse-coo-tensor"]], "torch.sparse_csc_tensor": [[1801, "torch-sparse-csc-tensor"]], "torch.sinc": [[1781, "torch-sinc"]], "torch.signal.windows.hann": [[1776, "torch-signal-windows-hann"]], "torch.squeeze": [[1806, "torch-squeeze"]], "torch.signal.windows.gaussian": [[1772, "torch-signal-windows-gaussian"]], "torch.signal.windows.cosine": [[1770, "torch-signal-windows-cosine"]], "torch.sparse.addmm": [[1788, "torch-sparse-addmm"]], "torch.signal.windows.nuttall": [[1778, "torch-signal-windows-nuttall"]], "torch.sort": [[1787, "torch-sort"]], "torch.std_mean": [[1810, "torch-std-mean"]], "torch.stack": [[1808, "torch-stack"]], "torch.slice_scatter": [[1783, "torch-slice-scatter"]], "torch.signal.windows.general_cosine": [[1773, "torch-signal-windows-general-cosine"]], "torch.smm": [[1785, "torch-smm"]], "torch.sparse.sum": [[1796, "torch-sparse-sum"]], "torch.signal.windows.blackman": [[1769, "torch-signal-windows-blackman"]], "torch.sgn": [[1765, "torch-sgn"]], "torch.sparse.log_softmax": [[1791, "torch-sparse-log-softmax"]], "torch.sparse.mm": [[1792, "torch-sparse-mm"]], "torch.sigmoid": [[1766, "torch-sigmoid"]], "torch.signal.windows.general_hamming": [[1774, "torch-signal-windows-general-hamming"]], "torch.square": [[1805, "torch-square"]], "torch.sparse.softmax": [[1794, "torch-sparse-softmax"]], "torch.split": [[1803, "torch-split"]], "torch.signal.windows.exponential": [[1771, "torch-signal-windows-exponential"]], "torch.sign": [[1767, "torch-sign"]], "torch.nn.functional.pad": [[1562, "torch-nn-functional-pad"]], "torch.nn.functional.fractional_max_pool2d": [[1519, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.multi_margin_loss": [[1556, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.hardshrink": [[1527, "torch-nn-functional-hardshrink"]], "torch.nn.functional.max_unpool2d": [[1552, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.nll_loss": [[1559, "torch-nn-functional-nll-loss"]], "torch.nn.functional.max_pool2d": [[1549, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.fractional_max_pool3d": [[1520, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.max_unpool3d": [[1553, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.poisson_nll_loss": [[1567, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.lp_pool2d": [[1546, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.instance_norm": [[1534, "torch-nn-functional-instance-norm"]], "torch.nn.functional.gelu": [[1522, "torch-nn-functional-gelu"]], "torch.nn.functional.gaussian_nll_loss": [[1521, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.hardswish": [[1529, "torch-nn-functional-hardswish"]], "torch.nn.functional.max_pool1d": [[1548, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.grid_sample": [[1524, "torch-nn-functional-grid-sample"]], "torch.nn.functional.mse_loss": [[1555, "torch-nn-functional-mse-loss"]], "torch.nn.functional.gumbel_softmax": [[1526, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.normalize": [[1560, "torch-nn-functional-normalize"]], "torch.nn.functional.pixel_shuffle": [[1565, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.l1_loss": [[1537, "torch-nn-functional-l1-loss"]], "torch.nn.functional.leaky_relu": [[1539, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.hardsigmoid": [[1528, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.log_softmax": [[1543, "torch-nn-functional-log-softmax"]], "torch.nn.functional.lp_pool1d": [[1545, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.one_hot": [[1561, "torch-nn-functional-one-hot"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1558, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.hardtanh_": [[1531, "torch-nn-functional-hardtanh"]], "torch.nn.functional.local_response_norm": [[1542, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.max_unpool1d": [[1551, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.margin_ranking_loss": [[1547, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.huber_loss": [[1533, "torch-nn-functional-huber-loss"]], "torch.nn.functional.pairwise_distance": [[1563, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.logsigmoid": [[1544, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.interpolate": [[1535, "torch-nn-functional-interpolate"]], "torch.nn.functional.group_norm": [[1525, "torch-nn-functional-group-norm"]], "torch.nn.functional.mish": [[1554, "torch-nn-functional-mish"]], "torch.nn.functional.glu": [[1523, "torch-nn-functional-glu"]], "torch.nn.functional.leaky_relu_": [[1540, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.linear": [[1541, "torch-nn-functional-linear"]], "torch.nn.functional.kl_div": [[1536, "torch-nn-functional-kl-div"]], "torch.nn.functional.max_pool3d": [[1550, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.pixel_unshuffle": [[1566, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.multilabel_margin_loss": [[1557, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.layer_norm": [[1538, "torch-nn-functional-layer-norm"]], "torch.nn.functional.hardtanh": [[1530, "torch-nn-functional-hardtanh"]], "torch.nn.functional.pdist": [[1564, "torch-nn-functional-pdist"]], "torch.nn.functional.hinge_embedding_loss": [[1532, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.utils.parameters_to_vector": [[1611, "torch-nn-utils-parameters-to-vector"]], "torch.nn.utils.parametrizations.orthogonal": [[1612, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.functional.selu": [[1575, "torch-nn-functional-selu"]], "torch.nn.functional.upsample_bilinear": [[1594, "torch-nn-functional-upsample-bilinear"]], "torch.nn.utils.clip_grad_norm_": [[1609, "torch-nn-utils-clip-grad-norm"]], "torch.nn.functional.upsample": [[1593, "torch-nn-functional-upsample"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1589, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "UninitializedParameter": [[1608, "uninitializedparameter"]], "torch.nn.functional.smooth_l1_loss": [[1578, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1598, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1604, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "Parameter": [[1606, "parameter"]], "LazyModuleMixin": [[1596, "lazymodulemixin"]], "torch.nn.functional.rrelu_": [[1573, "torch-nn-functional-rrelu"]], "torch.nn.utils.parametrize.is_parametrized": [[1616, "torch-nn-utils-parametrize-is-parametrized"]], "ParametrizationList": [[1614, "parametrizationlist"]], "torch.nn.modules.module.register_module_forward_hook": [[1599, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.functional.scaled_dot_product_attention": [[1574, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1591, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.utils.parametrizations.spectral_norm": [[1613, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.functional.threshold_": [[1588, "torch-nn-functional-threshold"]], "torch.nn.functional.relu": [[1569, "torch-nn-functional-relu"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1600, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.functional.triplet_margin_loss": [[1590, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.functional.softplus": [[1582, "torch-nn-functional-softplus"]], "torch.nn.functional.tanh": [[1585, "torch-nn-functional-tanh"]], "torch.nn.functional.rrelu": [[1572, "torch-nn-functional-rrelu"]], "torch.nn.functional.relu6": [[1570, "torch-nn-functional-relu6"]], "torch.nn.functional.tanhshrink": [[1586, "torch-nn-functional-tanhshrink"]], "torch.nn.functional.sigmoid": [[1576, "torch-nn-functional-sigmoid"]], "torch.nn.functional.prelu": [[1568, "torch-nn-functional-prelu"]], "DistributedDataParallel": [[1605, "distributeddataparallel"], [1897, "distributeddataparallel"]], "torch.nn.functional.silu": [[1577, "torch-nn-functional-silu"]], "torch.nn.functional.relu_": [[1571, "torch-nn-functional-relu"]], "torch.nn.functional.unfold": [[1592, "torch-nn-functional-unfold"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1602, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.functional.threshold": [[1587, "torch-nn-functional-threshold"]], "torch.nn.utils.parametrize.cached": [[1615, "torch-nn-utils-parametrize-cached"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1603, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1601, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.functional.softmin": [[1581, "torch-nn-functional-softmin"]], "torch.nn.utils.clip_grad_value_": [[1610, "torch-nn-utils-clip-grad-value"]], "torch.nn.modules.module.register_module_backward_hook": [[1597, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.functional.softmax": [[1580, "torch-nn-functional-softmax"]], "torch.nn.functional.soft_margin_loss": [[1579, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.softsign": [[1584, "torch-nn-functional-softsign"]], "UninitializedBuffer": [[1607, "uninitializedbuffer"]], "torch.nn.functional.upsample_nearest": [[1595, "torch-nn-functional-upsample-nearest"]], "torch.nn.functional.softshrink": [[1583, "torch-nn-functional-softshrink"]], "torch.nn.utils.prune.custom_from_mask": [[1627, "torch-nn-utils-prune-custom-from-mask"]], "torch.nn.utils.remove_spectral_norm": [[1636, "torch-nn-utils-remove-spectral-norm"]], "no_grad": [[1650, "no-grad"]], "torch.nn.utils.rnn.pad_sequence": [[1642, "torch-nn-utils-rnn-pad-sequence"]], "CustomFromMask": [[1620, "customfrommask"]], "Identity": [[1621, "identity"], [1387, "identity"]], "PackedSequence": [[1638, "packedsequence"]], "torch.nn.utils.prune.random_structured": [[1633, "torch-nn-utils-prune-random-structured"]], "RandomUnstructured": [[1626, "randomunstructured"]], "JitScalarType": [[1662, "jitscalartype"]], "torch.nn.utils.vector_to_parameters": [[1648, "torch-nn-utils-vector-to-parameters"]], "torch.nn.utils.rnn.unpad_sequence": [[1644, "torch-nn-utils-rnn-unpad-sequence"]], "L1Unstructured": [[1622, "l1unstructured"]], "torch.nn.utils.prune.ln_structured": [[1632, "torch-nn-utils-prune-ln-structured"]], "LnStructured": [[1623, "lnstructured"]], "torch.nonzero": [[1651, "torch-nonzero"]], "torch.nn.utils.prune.is_pruned": [[1630, "torch-nn-utils-prune-is-pruned"]], "ExportOptions": [[1659, "exportoptions"]], "PruningContainer": [[1624, "pruningcontainer"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1641, "torch-nn-utils-rnn-pad-packed-sequence"]], "torch.ones": [[1656, "torch-ones"]], "torch.nn.utils.remove_weight_norm": [[1637, "torch-nn-utils-remove-weight-norm"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1618, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.nn.utils.rnn.unpack_sequence": [[1643, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nn.utils.stateless.functional_call": [[1647, "torch-nn-utils-stateless-functional-call"]], "torch.norm": [[1652, "torch-norm"]], "torch.normal": [[1653, "torch-normal"]], "OnnxExporterError": [[1663, "onnxexportererror"]], "torch.nn.utils.prune.remove": [[1635, "torch-nn-utils-prune-remove"]], "torch.nn.utils.prune.identity": [[1629, "torch-nn-utils-prune-identity"]], "BasePruningMethod": [[1619, "basepruningmethod"]], "DiagnosticOptions": [[1658, "diagnosticoptions"]], "torch.nn.utils.prune.l1_unstructured": [[1631, "torch-nn-utils-prune-l1-unstructured"]], "torch.nn.utils.parametrize.register_parametrization": [[1617, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.utils.prune.global_unstructured": [[1628, "torch-nn-utils-prune-global-unstructured"]], "RandomStructured": [[1625, "randomstructured"]], "OnnxRegistry": [[1664, "onnxregistry"]], "torch.nn.utils.skip_init": [[1645, "torch-nn-utils-skip-init"]], "ExportOutput": [[1660, "exportoutput"]], "GraphInfo": [[1665, "graphinfo"]], "torch.nn.utils.spectral_norm": [[1646, "torch-nn-utils-spectral-norm"]], "torch.numel": [[1655, "torch-numel"]], "ExportOutputSerializer": [[1661, "exportoutputserializer"]], "torch.nn.utils.rnn.pack_sequence": [[1640, "torch-nn-utils-rnn-pack-sequence"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1639, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.prune.random_unstructured": [[1634, "torch-nn-utils-prune-random-unstructured"]], "torch.nn.utils.weight_norm": [[1649, "torch-nn-utils-weight-norm"]], "torch.not_equal": [[1654, "torch-not-equal"]], "torch.ones_like": [[1657, "torch-ones-like"]], "Adam": [[1670, "adam"]], "torch.quantile": [[1714, "torch-quantile"]], "VerificationOptions": [[1666, "verificationoptions"]], "torch.optim.Optimizer.step": [[1678, "torch-optim-optimizer-step"]], "ExponentialLR": [[1690, "exponentiallr"]], "MultiStepLR": [[1693, "multisteplr"]], "LinearLR": [[1692, "linearlr"]], "LBFGS": [[1673, "lbfgs"]], "ASGD": [[1667, "asgd"]], "SequentialLR": [[1698, "sequentiallr"]], "torch.pinverse": [[1705, "torch-pinverse"]], "torch.polar": [[1707, "torch-polar"]], "torch.optim.Optimizer.zero_grad": [[1679, "torch-optim-optimizer-zero-grad"]], "Rprop": [[1682, "rprop"]], "RMSprop": [[1681, "rmsprop"]], "RAdam": [[1680, "radam"]], "LambdaLR": [[1691, "lambdalr"]], "torch.optim.Optimizer.load_state_dict": [[1676, "torch-optim-optimizer-load-state-dict"]], "torch.outer": [[1702, "torch-outer"]], "MultiplicativeLR": [[1694, "multiplicativelr"]], "torch.qr": [[1713, "torch-qr"]], "NAdam": [[1674, "nadam"]], "SparseAdam": [[1684, "sparseadam"]], "torch.poisson": [[1706, "torch-poisson"]], "ReduceLROnPlateau": [[1697, "reducelronplateau"]], "torch.pca_lowrank": [[1703, "torch-pca-lowrank"]], "CosineAnnealingWarmRestarts": [[1688, "cosineannealingwarmrestarts"]], "ConstantLR": [[1686, "constantlr"]], "torch.positive": [[1709, "torch-positive"]], "torch.optim.Optimizer.state_dict": [[1677, "torch-optim-optimizer-state-dict"]], "AdamW": [[1671, "adamw"]], "ChainedScheduler": [[1685, "chainedscheduler"]], "Adadelta": [[1668, "adadelta"]], "CosineAnnealingLR": [[1687, "cosineannealinglr"]], "torch.pow": [[1710, "torch-pow"]], "torch.prod": [[1711, "torch-prod"]], "OneCycleLR": [[1695, "onecyclelr"]], "torch.orgqr": [[1700, "torch-orgqr"]], "CyclicLR": [[1689, "cycliclr"]], "torch.permute": [[1704, "torch-permute"]], "torch.promote_types": [[1712, "torch-promote-types"]], "Adagrad": [[1669, "adagrad"]], "SGD": [[1683, "sgd"]], "torch.polygamma": [[1708, "torch-polygamma"]], "PolynomialLR": [[1696, "polynomiallr"]], "torch.ormqr": [[1701, "torch-ormqr"]], "torch.optim.Optimizer.add_param_group": [[1675, "torch-optim-optimizer-add-param-group"]], "StepLR": [[1699, "steplr"]], "Adamax": [[1672, "adamax"]], "torch.nn.functional.conv2d": [[1500, "torch-nn-functional-conv2d"]], "torch.nn.functional.dropout": [[1509, "torch-nn-functional-dropout"]], "ZeroPad3d": [[1482, "zeropad3d"]], "torch.nn.functional.adaptive_max_pool2d": [[1487, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.avg_pool2d": [[1492, "torch-nn-functional-avg-pool2d"]], "TransformerEncoderLayer": [[1472, "transformerencoderlayer"]], "torch.nn.functional.embedding": [[1515, "torch-nn-functional-embedding"]], "torch.nn.functional.cosine_embedding_loss": [[1505, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1497, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.dropout3d": [[1512, "torch-nn-functional-dropout3d"]], "torch.nn.functional.elu": [[1513, "torch-nn-functional-elu"]], "TransformerDecoderLayer": [[1470, "transformerdecoderlayer"]], "Unflatten": [[1475, "unflatten"]], "ZeroPad2d": [[1481, "zeropad2d"]], "torch.nn.functional.cosine_similarity": [[1506, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.conv_transpose1d": [[1502, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.elu_": [[1514, "torch-nn-functional-elu"]], "torch.nn.functional.binary_cross_entropy": [[1496, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.avg_pool1d": [[1491, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.adaptive_avg_pool2d": [[1484, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.alpha_dropout": [[1490, "torch-nn-functional-alpha-dropout"]], "torch.nn.functional.conv_transpose2d": [[1503, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.affine_grid": [[1489, "torch-nn-functional-affine-grid"]], "torch.nn.functional.bilinear": [[1495, "torch-nn-functional-bilinear"]], "torch.nn.functional.dropout1d": [[1510, "torch-nn-functional-dropout1d"]], "Unfold": [[1476, "unfold"]], "torch.nn.functional.adaptive_avg_pool1d": [[1483, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.cross_entropy": [[1507, "torch-nn-functional-cross-entropy"]], "UpsamplingNearest2d": [[1479, "upsamplingnearest2d"]], "Upsample": [[1477, "upsample"]], "torch.nn.functional.fold": [[1518, "torch-nn-functional-fold"]], "torch.nn.functional.avg_pool3d": [[1493, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.adaptive_avg_pool3d": [[1485, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.functional.batch_norm": [[1494, "torch-nn-functional-batch-norm"]], "torch.nn.functional.celu": [[1498, "torch-nn-functional-celu"]], "torch.nn.functional.dropout2d": [[1511, "torch-nn-functional-dropout2d"]], "TripletMarginLoss": [[1473, "tripletmarginloss"]], "torch.nn.functional.conv3d": [[1501, "torch-nn-functional-conv3d"]], "UpsamplingBilinear2d": [[1478, "upsamplingbilinear2d"]], "torch.nn.functional.adaptive_max_pool3d": [[1488, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.conv_transpose3d": [[1504, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.ctc_loss": [[1508, "torch-nn-functional-ctc-loss"]], "TransformerEncoder": [[1471, "transformerencoder"]], "ZeroPad1d": [[1480, "zeropad1d"]], "torch.nn.functional.feature_alpha_dropout": [[1517, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.embedding_bag": [[1516, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.adaptive_max_pool1d": [[1486, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.conv1d": [[1499, "torch-nn-functional-conv1d"]], "TripletMarginWithDistanceLoss": [[1474, "tripletmarginwithdistanceloss"]], "torch.lu_solve": [[1282, "torch-lu-solve"]], "torch.moveaxis": [[1298, "torch-moveaxis"]], "torch.lt": [[1280, "torch-lt"]], "torch.matmul": [[1286, "torch-matmul"]], "torch.mps.get_rng_state": [[1304, "torch-mps-get-rng-state"]], "torch.mvlgamma": [[1318, "torch-mvlgamma"]], "torch.min": [[1294, "torch-min"]], "torch.mm": [[1296, "torch-mm"]], "torch.mps.manual_seed": [[1305, "torch-mps-manual-seed"]], "torch.logit": [[1277, "torch-logit"]], "torch.logical_xor": [[1276, "torch-logical-xor"]], "torch.mps.seed": [[1309, "torch-mps-seed"]], "torch.msort": [[1313, "torch-msort"]], "torch.maximum": [[1290, "torch-maximum"]], "torch.mps.set_rng_state": [[1311, "torch-mps-set-rng-state"]], "torch.mps.synchronize": [[1312, "torch-mps-synchronize"]], "torch.max": [[1289, "torch-max"]], "torch.matrix_exp": [[1287, "torch-matrix-exp"]], "Event": [[1303, "event"], [968, "event"]], "torch.masked_select": [[1285, "torch-masked-select"]], "torch.minimum": [[1295, "torch-minimum"]], "torch.movedim": [[1299, "torch-movedim"]], "torch.nanmean": [[1320, "torch-nanmean"]], "torch.mps.empty_cache": [[1302, "torch-mps-empty-cache"]], "torch.mps.set_per_process_memory_fraction": [[1310, "torch-mps-set-per-process-memory-fraction"]], "torch.mps.current_allocated_memory": [[1300, "torch-mps-current-allocated-memory"]], "torch.logical_not": [[1274, "torch-logical-not"]], "torch.matrix_power": [[1288, "torch-matrix-power"]], "torch.logspace": [[1278, "torch-logspace"]], "torch.mv": [[1317, "torch-mv"]], "torch.mps.driver_allocated_memory": [[1301, "torch-mps-driver-allocated-memory"]], "torch.logical_or": [[1275, "torch-logical-or"]], "torch.mps.profiler.start": [[1307, "torch-mps-profiler-start"]], "torch.multinomial": [[1315, "torch-multinomial"]], "torch.multiply": [[1316, "torch-multiply"]], "torch.mean": [[1291, "torch-mean"]], "torch.median": [[1292, "torch-median"]], "torch.nanmedian": [[1321, "torch-nanmedian"]], "torch.mps.profiler.stop": [[1308, "torch-mps-profiler-stop"]], "torch.mul": [[1314, "torch-mul"]], "torch.mps.profiler.profile": [[1306, "torch-mps-profiler-profile"]], "torch.lu_unpack": [[1283, "torch-lu-unpack"]], "torch.mode": [[1297, "torch-mode"]], "torch.lu": [[1281, "torch-lu"]], "torch.meshgrid": [[1293, "torch-meshgrid"]], "torch.nanquantile": [[1322, "torch-nanquantile"]], "torch.manual_seed": [[1284, "torch-manual-seed"]], "torch.logsumexp": [[1279, "torch-logsumexp"]], "torch.nan_to_num": [[1319, "torch-nan-to-num"]], "LPPool1d": [[1393, "lppool1d"]], "InstanceNorm2d": [[1389, "instancenorm2d"], [739, "instancenorm2d"]], "Fold": [[1372, "fold"]], "LSTMCell": [[1396, "lstmcell"], [750, "lstmcell"]], "MarginRankingLoss": [[1417, "marginrankingloss"]], "FractionalMaxPool3d": [[1374, "fractionalmaxpool3d"]], "Hardshrink": [[1381, "hardshrink"]], "LazyConv1d": [[1401, "lazyconv1d"]], "HuberLoss": [[1386, "huberloss"]], "GELU": [[1375, "gelu"]], "LazyConv3d": [[1403, "lazyconv3d"]], "LazyBatchNorm3d": [[1400, "lazybatchnorm3d"]], "L1Loss": [[1392, "l1loss"]], "FractionalMaxPool2d": [[1373, "fractionalmaxpool2d"]], "Hardswish": [[1383, "hardswish"], [737, "hardswish"]], "LazyConv2d": [[1402, "lazyconv2d"]], "LogSoftmax": [[1415, "logsoftmax"]], "LazyConvTranspose2d": [[1405, "lazyconvtranspose2d"]], "LazyInstanceNorm1d": [[1407, "lazyinstancenorm1d"]], "LayerNorm": [[1397, "layernorm"], [741, "layernorm"]], "MaxPool1d": [[1418, "maxpool1d"]], "LocalResponseNorm": [[1413, "localresponsenorm"]], "InstanceNorm1d": [[1388, "instancenorm1d"], [738, "instancenorm1d"]], "GRUCell": [[1378, "grucell"], [748, "grucell"]], "GRU": [[1377, "gru"], [747, "gru"]], "Linear": [[1412, "linear"], [743, "linear"], [751, "linear"], [719, "linear"], [720, "linear"]], "LazyConvTranspose1d": [[1404, "lazyconvtranspose1d"]], "LazyBatchNorm1d": [[1398, "lazybatchnorm1d"]], "Hardsigmoid": [[1382, "hardsigmoid"]], "LazyLinear": [[1410, "lazylinear"]], "LogSigmoid": [[1414, "logsigmoid"]], "GroupNorm": [[1380, "groupnorm"], [736, "groupnorm"]], "LPPool2d": [[1394, "lppool2d"]], "HingeEmbeddingLoss": [[1385, "hingeembeddingloss"]], "LSTM": [[1395, "lstm"], [749, "lstm"], [721, "lstm"]], "KLDivLoss": [[1391, "kldivloss"]], "LazyConvTranspose3d": [[1406, "lazyconvtranspose3d"]], "GaussianNLLLoss": [[1379, "gaussiannllloss"]], "Hardtanh": [[1384, "hardtanh"]], "MSELoss": [[1416, "mseloss"]], "MaxPool2d": [[1419, "maxpool2d"]], "MaxPool3d": [[1420, "maxpool3d"]], "LazyInstanceNorm2d": [[1408, "lazyinstancenorm2d"]], "LazyBatchNorm2d": [[1399, "lazybatchnorm2d"]], "InstanceNorm3d": [[1390, "instancenorm3d"], [740, "instancenorm3d"]], "GLU": [[1376, "glu"]], "LazyInstanceNorm3d": [[1409, "lazyinstancenorm3d"]], "LeakyReLU": [[1411, "leakyrelu"], [742, "leakyrelu"]], "torch.narrow_copy": [[1325, "torch-narrow-copy"]], "BatchNorm3d": [[1345, "batchnorm3d"], [724, "batchnorm3d"]], "CrossEntropyLoss": [[1361, "crossentropyloss"]], "AdaptiveAvgPool2d": [[1331, "adaptiveavgpool2d"]], "torch.narrow": [[1324, "torch-narrow"]], "Conv3d": [[1355, "conv3d"], [727, "conv3d"], [718, "conv3d"]], "Embedding": [[1368, "embedding"], [732, "embedding"]], "AdaptiveAvgPool1d": [[1330, "adaptiveavgpool1d"]], "torch.neg": [[1327, "torch-neg"]], "ConvTranspose1d": [[1356, "convtranspose1d"], [728, "convtranspose1d"]], "Bilinear": [[1346, "bilinear"]], "AdaptiveMaxPool3d": [[1336, "adaptivemaxpool3d"]], "AdaptiveMaxPool2d": [[1335, "adaptivemaxpool2d"]], "CosineEmbeddingLoss": [[1359, "cosineembeddingloss"]], "ELU": [[1367, "elu"], [731, "elu"]], "CELU": [[1347, "celu"]], "BatchNorm2d": [[1344, "batchnorm2d"], [723, "batchnorm2d"]], "ConstantPad1d": [[1350, "constantpad1d"]], "ChannelShuffle": [[1349, "channelshuffle"]], "Dropout3d": [[1366, "dropout3d"]], "Dropout1d": [[1364, "dropout1d"]], "DataParallel": [[1362, "dataparallel"]], "CTCLoss": [[1348, "ctcloss"]], "CosineSimilarity": [[1360, "cosinesimilarity"]], "AvgPool3d": [[1340, "avgpool3d"]], "AvgPool2d": [[1339, "avgpool2d"]], "Dropout": [[1363, "dropout"]], "BCEWithLogitsLoss": [[1342, "bcewithlogitsloss"]], "Conv2d": [[1354, "conv2d"], [717, "conv2d"], [726, "conv2d"]], "AdaptiveLogSoftmaxWithLoss": [[1333, "adaptivelogsoftmaxwithloss"]], "FeatureAlphaDropout": [[1370, "featurealphadropout"]], "EmbeddingBag": [[1369, "embeddingbag"], [733, "embeddingbag"]], "Flatten": [[1371, "flatten"]], "ConstantPad3d": [[1352, "constantpad3d"]], "AlphaDropout": [[1337, "alphadropout"]], "ConvTranspose3d": [[1358, "convtranspose3d"], [730, "convtranspose3d"]], "torch.ne": [[1326, "torch-ne"]], "torch.nextafter": [[1329, "torch-nextafter"]], "ConstantPad2d": [[1351, "constantpad2d"]], "AdaptiveAvgPool3d": [[1332, "adaptiveavgpool3d"]], "Conv1d": [[1353, "conv1d"], [725, "conv1d"]], "AvgPool1d": [[1338, "avgpool1d"]], "BatchNorm1d": [[1343, "batchnorm1d"]], "AdaptiveMaxPool1d": [[1334, "adaptivemaxpool1d"]], "torch.negative": [[1328, "torch-negative"]], "BCELoss": [[1341, "bceloss"]], "Dropout2d": [[1365, "dropout2d"]], "torch.nansum": [[1323, "torch-nansum"]], "ConvTranspose2d": [[1357, "convtranspose2d"], [729, "convtranspose2d"]], "PoissonNLLLoss": [[1439, "poissonnllloss"]], "Transformer": [[1468, "transformer"], [1955, "transformer"]], "ReLU": [[1444, "relu"]], "Sequential": [[1453, "sequential"]], "PixelUnshuffle": [[1438, "pixelunshuffle"]], "ReplicationPad1d": [[1449, "replicationpad1d"]], "Threshold": [[1467, "threshold"]], "SiLU": [[1454, "silu"]], "MaxUnpool1d": [[1421, "maxunpool1d"]], "MultiMarginLoss": [[1430, "multimarginloss"]], "Softmax2d": [[1459, "softmax2d"]], "RNNCell": [[1442, "rnncell"], [752, "rnncell"]], "ModuleDict": [[1426, "moduledict"]], "Sigmoid": [[1455, "sigmoid"], [746, "sigmoid"]], "Module": [[1425, "module"]], "Tanhshrink": [[1466, "tanhshrink"]], "ReplicationPad2d": [[1450, "replicationpad2d"]], "Tanh": [[1465, "tanh"]], "MaxUnpool3d": [[1423, "maxunpool3d"]], "Softmin": [[1460, "softmin"]], "SELU": [[1452, "selu"]], "NLLLoss": [[1432, "nllloss"]], "SoftMarginLoss": [[1457, "softmarginloss"]], "MaxUnpool2d": [[1422, "maxunpool2d"]], "TransformerDecoder": [[1469, "transformerdecoder"]], "ReplicationPad3d": [[1451, "replicationpad3d"]], "MultiLabelMarginLoss": [[1428, "multilabelmarginloss"]], "PixelShuffle": [[1437, "pixelshuffle"]], "SmoothL1Loss": [[1456, "smoothl1loss"]], "PairwiseDistance": [[1434, "pairwisedistance"]], "Mish": [[1424, "mish"]], "RNN": [[1440, "rnn"]], "ParameterList": [[1436, "parameterlist"]], "MultiLabelSoftMarginLoss": [[1429, "multilabelsoftmarginloss"]], "ReflectionPad3d": [[1448, "reflectionpad3d"]], "ParameterDict": [[1435, "parameterdict"]], "RNNBase": [[1441, "rnnbase"]], "Softshrink": [[1462, "softshrink"]], "ReLU6": [[1445, "relu6"], [745, "relu6"]], "ReflectionPad1d": [[1446, "reflectionpad1d"]], "ReflectionPad2d": [[1447, "reflectionpad2d"]], "ModuleList": [[1427, "modulelist"]], "Softmax": [[1458, "softmax"]], "Softplus": [[1461, "softplus"]], "SyncBatchNorm": [[1464, "syncbatchnorm"]], "PReLU": [[1433, "prelu"]], "RReLU": [[1443, "rrelu"]], "Softsign": [[1463, "softsign"]], "MultiheadAttention": [[1431, "multiheadattention"], [722, "multiheadattention"]], "torch.linalg.matmul": [[1242, "torch-linalg-matmul"]], "torch.linalg.solve_triangular": [[1254, "torch-linalg-solve-triangular"]], "torch.log10": [[1266, "torch-log10"]], "torch.logdet": [[1272, "torch-logdet"]], "torch.linalg.pinv": [[1249, "torch-linalg-pinv"]], "torch.linalg.tensorinv": [[1257, "torch-linalg-tensorinv"]], "torch.linalg.ldl_solve": [[1236, "torch-linalg-ldl-solve"]], "torch.load": [[1263, "torch-load"]], "torch.logical_and": [[1273, "torch-logical-and"]], "torch.linalg.matrix_norm": [[1244, "torch-linalg-matrix-norm"]], "torch.linalg.vector_norm": [[1261, "torch-linalg-vector-norm"]], "torch.linalg.matrix_power": [[1245, "torch-linalg-matrix-power"]], "torch.linalg.solve_ex": [[1253, "torch-linalg-solve-ex"]], "torch.linalg.svd": [[1255, "torch-linalg-svd"]], "torch.linalg.lu_solve": [[1241, "torch-linalg-lu-solve"]], "torch.linalg.matrix_rank": [[1246, "torch-linalg-matrix-rank"]], "torch.logaddexp": [[1269, "torch-logaddexp"]], "torch.linalg.det": [[1225, "torch-linalg-det"]], "torch.linalg.ldl_factor": [[1234, "torch-linalg-ldl-factor"]], "torch.linalg.lu": [[1238, "torch-linalg-lu"]], "torch.lobpcg": [[1264, "torch-lobpcg"]], "torch.log1p": [[1267, "torch-log1p"]], "torch.linalg.qr": [[1250, "torch-linalg-qr"]], "torch.linalg.eigh": [[1228, "torch-linalg-eigh"]], "torch.linalg.vander": [[1259, "torch-linalg-vander"]], "torch.linalg.eig": [[1227, "torch-linalg-eig"]], "torch.linalg.slogdet": [[1251, "torch-linalg-slogdet"]], "torch.linalg.eigvals": [[1229, "torch-linalg-eigvals"]], "torch.linalg.solve": [[1252, "torch-linalg-solve"]], "torch.linalg.ldl_factor_ex": [[1235, "torch-linalg-ldl-factor-ex"]], "torch.linalg.tensorsolve": [[1258, "torch-linalg-tensorsolve"]], "torch.linalg.svdvals": [[1256, "torch-linalg-svdvals"]], "torch.linalg.lu_factor": [[1239, "torch-linalg-lu-factor"]], "torch.logaddexp2": [[1270, "torch-logaddexp2"]], "torch.linalg.eigvalsh": [[1230, "torch-linalg-eigvalsh"]], "torch.log2": [[1268, "torch-log2"]], "torch.linalg.lstsq": [[1237, "torch-linalg-lstsq"]], "torch.linspace": [[1262, "torch-linspace"]], "torch.linalg.lu_factor_ex": [[1240, "torch-linalg-lu-factor-ex"]], "torch.linalg.householder_product": [[1231, "torch-linalg-householder-product"]], "torch.linalg.inv": [[1232, "torch-linalg-inv"]], "torch.linalg.multi_dot": [[1247, "torch-linalg-multi-dot"]], "torch.logcumsumexp": [[1271, "torch-logcumsumexp"]], "torch.linalg.diagonal": [[1226, "torch-linalg-diagonal"]], "torch.linalg.norm": [[1248, "torch-linalg-norm"]], "torch.log": [[1265, "torch-log"]], "torch.linalg.matrix_exp": [[1243, "torch-linalg-matrix-exp"]], "torch.linalg.vecdot": [[1260, "torch-linalg-vecdot"]], "torch.linalg.inv_ex": [[1233, "torch-linalg-inv-ex"]], "torch.func.linearize": [[1129, "torch-func-linearize"]], "torch.gt": [[1148, "torch-gt"]], "torch.hamming_window": [[1149, "torch-hamming-window"]], "torch.gcd": [[1135, "torch-gcd"]], "torch.gather": [[1134, "torch-gather"]], "torch.hann_window": [[1150, "torch-hann-window"]], "torch.histogram": [[1153, "torch-histogram"]], "torch.ge": [[1136, "torch-ge"]], "torch.i0": [[1159, "torch-i0"]], "torch.func.jvp": [[1128, "torch-func-jvp"]], "torch.initial_seed": [[1168, "torch-initial-seed"]], "torch.index_add": [[1163, "torch-index-add"]], "torch.geqrf": [[1137, "torch-geqrf"]], "torch.hypot": [[1158, "torch-hypot"]], "torch.get_default_dtype": [[1139, "torch-get-default-dtype"]], "torch.igammac": [[1161, "torch-igammac"]], "torch.inner": [[1169, "torch-inner"]], "torch.index_reduce": [[1165, "torch-index-reduce"]], "torch.hsplit": [[1155, "torch-hsplit"]], "torch.index_select": [[1166, "torch-index-select"]], "torch.imag": [[1162, "torch-imag"]], "torch.get_rng_state": [[1144, "torch-get-rng-state"]], "torch.greater_equal": [[1147, "torch-greater-equal"]], "torch.igamma": [[1160, "torch-igamma"]], "torch.get_num_threads": [[1143, "torch-get-num-threads"]], "torch.func.vjp": [[1132, "torch-func-vjp"]], "torch.greater": [[1146, "torch-greater"]], "torch.index_copy": [[1164, "torch-index-copy"]], "torch.func.vmap": [[1133, "torch-func-vmap"]], "torch.heaviside": [[1151, "torch-heaviside"]], "torch.func.jacrev": [[1127, "torch-func-jacrev"]], "torch.func.stack_module_state": [[1131, "torch-func-stack-module-state"]], "inference_mode": [[1167, "inference-mode"]], "torch.gradient": [[1145, "torch-gradient"]], "torch.is_conj": [[1172, "torch-is-conj"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1173, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.histogramdd": [[1154, "torch-histogramdd"]], "torch.inverse": [[1170, "torch-inverse"]], "torch.is_floating_point": [[1174, "torch-is-floating-point"]], "torch.get_float32_matmul_precision": [[1141, "torch-get-float32-matmul-precision"]], "torch.get_deterministic_debug_mode": [[1140, "torch-get-deterministic-debug-mode"]], "torch.func.replace_all_batch_norm_modules_": [[1130, "torch-func-replace-all-batch-norm-modules"]], "torch.hstack": [[1157, "torch-hstack"]], "torch.ger": [[1138, "torch-ger"]], "torch.hspmm": [[1156, "torch-hspmm"]], "torch.histc": [[1152, "torch-histc"]], "torch.get_num_interop_threads": [[1142, "torch-get-num-interop-threads"]], "torch.is_grad_enabled": [[1175, "torch-is-grad-enabled"]], "torch.is_complex": [[1171, "torch-is-complex"]], "TorchScript": [[1870, "torchscript"]], "Creating TorchScript Code": [[1870, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1870, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1870, "torchscript-language"]], "Built-in Functions and Modules": [[1870, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1870, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1870, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1870, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[1870, "disable-jit-for-debugging"]], "Inspecting Code": [[1870, "inspecting-code"]], "Interpreting Graphs": [[1870, "interpreting-graphs"]], "Tracer": [[1870, "tracer"]], "Tracing Edge Cases": [[1870, "tracing-edge-cases"]], "Automatic Trace Checking": [[1870, "automatic-trace-checking"]], "Tracer Warnings": [[1870, "tracer-warnings"]], "Frequently Asked Questions": [[1870, "frequently-asked-questions"], [1900, "frequently-asked-questions"], [7, "frequently-asked-questions"], [1918, "frequently-asked-questions"], [1946, "frequently-asked-questions"], [1911, "frequently-asked-questions"]], "Known Issues": [[1870, "known-issues"]], "Appendix": [[1870, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1870, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1870, "modules"], [1904, "modules"]], "Functions": [[1870, "functions"], [1872, "functions"], [1928, "functions"], [1957, "functions"], [1911, "functions"]], "TorchScript Classes": [[1870, "torchscript-classes"], [1872, "id2"]], "Attributes": [[1870, "attributes"]], "Constants": [[1870, "constants"]], "Variables": [[1870, "variables"], [1872, "variables"], [1949, "variables"]], "Fusion Backends": [[1870, "fusion-backends"]], "References": [[1870, "references"]], "torch.zeros_like": [[1867, "torch-zeros-like"]], "TorchScript Builtins": [[1871, "torchscript-builtins"]], "Supported Tensor Methods": [[1871, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1871, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1871, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1871, "python-built-in-functions"]], "math Module": [[1871, "math-module"]], "Broadcasting semantics": [[1894, "broadcasting-semantics"]], "General semantics": [[1894, "general-semantics"]], "In-place semantics": [[1894, "in-place-semantics"]], "Backwards compatibility": [[1894, "backwards-compatibility"]], "TorchScript Language Reference": [[1872, "torchscript-language-reference"], [1873, "torchscript-language-reference"]], "Types": [[1872, "supported-type"], [1911, "types"]], "Unsupported Typing Constructs": [[1872, "unsupported-typing-constructs"], [1873, "unsupported-typing-constructs"]], "Default Types": [[1872, "default-types"]], "Optional Type Refinement": [[1872, "optional-type-refinement"]], "TorchScript Enums": [[1872, "id4"]], "Named Tuples": [[1872, "named-tuples"]], "Iterables": [[1872, "iterables"]], "Expressions": [[1872, "expressions"], [1873, "expressions"]], "Literals": [[1872, "literals"], [1873, "literals"]], "List Construction": [[1872, "list-construction"]], "Tuple Construction": [[1872, "tuple-construction"]], "Dict Construction": [[1872, "dict-construction"]], "Arithmetic Operators": [[1872, "arithmetic-operators"]], "Comparison Operators": [[1872, "comparison-operators"]], "Logical Operators": [[1872, "logical-operators"]], "Subscripts and Slicing": [[1872, "subscripts-and-slicing"]], "Function Calls": [[1872, "function-calls"]], "Method Calls": [[1872, "method-calls"]], "Ternary Expressions": [[1872, "ternary-expressions"]], "Casts": [[1872, "casts"]], "Accessing Module Parameters": [[1872, "accessing-module-parameters"]], "Statements": [[1872, "statements"]], "Simple Assignments": [[1872, "simple-assignments"]], "Pattern Matching Assignments": [[1872, "pattern-matching-assignments"]], "Print Statements": [[1872, "print-statements"]], "If Statements": [[1872, "if-statements"]], "While Loops": [[1872, "while-loops"]], "For loops with range": [[1872, "for-loops-with-range"]], "For loops over tuples": [[1872, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1872, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1872, "break-and-continue"]], "Return": [[1872, "return"]], "Variable Resolution": [[1872, "variable-resolution"]], "Use of Python Values": [[1872, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[1872, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1872, "python-defined-constants"]], "Module Attributes": [[1872, "module-attributes"]], "torch.zeros": [[1866, "torch-zeros"]], "torch.monitor": [[1883, "torch-monitor"]], "CUDA Automatic Mixed Precision examples": [[1892, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1892, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1892, "working-with-unscaled-gradients"]], "Gradient clipping": [[1892, "gradient-clipping"]], "Working with Scaled Gradients": [[1892, "working-with-scaled-gradients"]], "Gradient accumulation": [[1892, "gradient-accumulation"]], "Gradient penalty": [[1892, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1892, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1892, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1892, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1892, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1892, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1892, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1892, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1892, "functions-that-need-a-particular-dtype"]], "torch.xlogy": [[1865, "torch-xlogy"]], "torch.linalg": [[1878, "torch-linalg"]], "Matrix Properties": [[1878, "matrix-properties"]], "Decompositions": [[1878, "decompositions"]], "Solvers": [[1878, "solvers"]], "Inverses": [[1878, "inverses"]], "Matrix Functions": [[1878, "matrix-functions"]], "Matrix Products": [[1878, "matrix-products"]], "Tensor Operations": [[1878, "tensor-operations"]], "Misc": [[1878, "misc"]], "Experimental Functions": [[1878, "experimental-functions"]], "MPS backend": [[1905, "mps-backend"]], "torch.utils.mobile_optimizer": [[1881, "torch-utils-mobile-optimizer"]], "JIT Utils - torch.utils.jit": [[1876, "module-torch.utils.jit"]], "torch.where": [[1864, "torch-where"]], "HIP (ROCm) semantics": [[1902, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1902, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1902, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1902, "tensorfloat-32-tf32-on-rocm"]], "Memory management": [[1902, "memory-management"], [1896, "memory-management"], [16, "memory-management"]], "hipFFT/rocFFT plan cache": [[1902, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1902, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1902, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1902, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1902, "enabling-kernel-asserts"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1900, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1900, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1900, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1900, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1900, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "torch.vstack": [[1863, "torch-vstack"]], "torch.hub": [[1868, "torch-hub"]], "Publishing models": [[1868, "publishing-models"]], "How to implement an entrypoint?": [[1868, "how-to-implement-an-entrypoint"]], "Important Notice": [[1868, "important-notice"]], "Loading models from Hub": [[1868, "loading-models-from-hub"]], "Running a loaded model:": [[1868, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1868, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1868, "caching-logic"]], "Known limitations:": [[1868, "known-limitations"]], "Terminology": [[1873, "terminology"]], "Type System": [[1873, "id1"]], "TorchScript Types": [[1873, "torchscript-types"]], "Meta Types": [[1873, "meta-types"]], "Any Type": [[1873, "any-type"]], "Operators Supported for Any Type": [[1873, "operators-supported-for-any-type"]], "Design Notes": [[1873, "design-notes"], [1923, "design-notes"]], "Primitive Types": [[1873, "primitive-types"]], "Structural Types": [[1873, "structural-types"]], "Nominal Types": [[1873, "nominal-types"]], "Built-in Class": [[1873, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1873, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1873, "custom-class"]], "Enum Type": [[1873, "enum-type"]], "TorchScript Module Class": [[1873, "torchscript-module-class"]], "Module Instance Class": [[1873, "module-instance-class"]], "Type Annotation": [[1873, "type-annotation"]], "When to Annotate Types": [[1873, "when-to-annotate-types"]], "Annotate Function Signature": [[1873, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1873, "annotate-variables-and-data-attributes"]], "Local Variables": [[1873, "local-variables"]], "Instance Data Attributes": [[1873, "instance-data-attributes"]], "Type Annotation APIs": [[1873, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1873, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1873, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1873, "torchscript-type-system-definition"]], "Arithmetic Conversions": [[1873, "arithmetic-conversions"]], "Atoms": [[1873, "atoms"]], "Identifiers": [[1873, "identifiers"]], "Parenthesized Forms": [[1873, "parenthesized-forms"]], "List and Dictionary Displays": [[1873, "list-and-dictionary-displays"]], "Primaries": [[1873, "primaries"]], "Attribute References": [[1873, "attribute-references"]], "Subscriptions": [[1873, "subscriptions"]], "Slicings": [[1873, "slicings"]], "Calls": [[1873, "calls"]], "Power Operator": [[1873, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1873, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1873, "binary-arithmetic-operations"]], "Shifting Operations": [[1873, "shifting-operations"]], "Binary Bitwise Operations": [[1873, "binary-bitwise-operations"]], "Comparisons": [[1873, "comparisons"], [1941, "comparisons"]], "Value Comparisons": [[1873, "value-comparisons"]], "Membership Test Operations": [[1873, "membership-test-operations"]], "Identity Comparisons": [[1873, "identity-comparisons"]], "Boolean Operations": [[1873, "boolean-operations"]], "Conditional Expressions": [[1873, "conditional-expressions"]], "Expression Lists": [[1873, "expression-lists"]], "Simple Statements": [[1873, "simple-statements"]], "Expression Statements": [[1873, "expression-statements"]], "Assignment Statements": [[1873, "assignment-statements"]], "Augmented Assignment Statements": [[1873, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1873, "annotated-assignment-statements"]], "The raise Statement": [[1873, "the-raise-statement"]], "The assert Statement": [[1873, "the-assert-statement"]], "The return Statement": [[1873, "the-return-statement"]], "The del Statement": [[1873, "the-del-statement"]], "The pass Statement": [[1873, "the-pass-statement"]], "The print Statement": [[1873, "the-print-statement"]], "The break Statement": [[1873, "the-break-statement"]], "The continue Statement:": [[1873, "the-continue-statement"]], "Compound Statements": [[1873, "compound-statements"]], "The if Statement": [[1873, "the-if-statement"]], "Basic if/else Statement": [[1873, "basic-if-else-statement"]], "Ternary if/else Statement": [[1873, "ternary-if-else-statement"]], "The while Statement": [[1873, "the-while-statement"]], "The for-in Statement": [[1873, "the-for-in-statement"]], "The with Statement": [[1873, "the-with-statement"]], "The tuple Statement": [[1873, "the-tuple-statement"]], "The getattr Statement": [[1873, "the-getattr-statement"]], "The hasattr Statement": [[1873, "the-hasattr-statement"]], "The zip Statement": [[1873, "the-zip-statement"]], "The enumerate Statement": [[1873, "the-enumerate-statement"]], "Python Values": [[1873, "python-values"]], "Resolution Rules": [[1873, "resolution-rules"]], "Python Built-in Functions Support": [[1873, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1873, "id5"]], "Python Built-in Values Support": [[1873, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1873, "id6"]], "torch.* APIs": [[1873, "torch-apis"]], "Remote Procedure Calls": [[1873, "remote-procedure-calls"]], "Asynchronous Execution": [[1873, "asynchronous-execution"]], "Type Annotations": [[1873, "type-annotations"]], "Meta Programming": [[1873, "meta-programming"]], "Type Refinement": [[1873, "type-refinement"]], "torch.nested": [[1888, "module-torch.nested"]], "Construction": [[1888, "construction"], [1927, "construction"]], "size": [[1888, "size"]], "unbind": [[1888, "unbind"]], "Nested tensor constructor and conversion functions": [[1888, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1888, "supported-operations"], [1927, "supported-operations"]], "Named Tensors operator coverage": [[1886, "named-tensors-operator-coverage"]], "Supported Operations": [[1886, "id1"]], "Keeps input names": [[1886, "keeps-input-names"]], "Removes dimensions": [[1886, "removes-dimensions"]], "Unifies names from inputs": [[1886, "unifies-names-from-inputs"]], "Permutes dimensions": [[1886, "permutes-dimensions"]], "Contracts away dims": [[1886, "contracts-away-dims"]], "Factory functions": [[1886, "factory-functions"]], "out function and in-place variants": [[1886, "out-function-and-in-place-variants"]], "Extending PyTorch": [[1898, "extending-pytorch"]], "Extending torch.autograd": [[1898, "extending-torch-autograd"]], "When to use": [[1898, "when-to-use"]], "When not to use": [[1898, "when-not-to-use"]], "How to use": [[1898, "how-to-use"]], "Example": [[1898, "example"], [1897, "example"]], "Combined or separate forward() and setup_context()": [[1898, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1898, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1898, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1898, "extending-torch-nn"]], "Adding a Module": [[1898, "adding-a-module"]], "Extending torch Python API": [[1898, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[1898, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1898, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1898, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1898, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1898, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[1898, "extending-torch-native-api"]], "Extending all torch API with Modes": [[1898, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[1898, "writing-custom-c-extensions"]], "torch.nn.init": [[1891, "torch-nn-init"]], "CPU threading and TorchScript inference": [[1895, "cpu-threading-and-torchscript-inference"]], "Build options": [[1895, "build-options"]], "Runtime API": [[1895, "runtime-api"]], "Tuning the number of threads": [[1895, "tuning-the-number-of-threads"]], "CUDA semantics": [[1896, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1896, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1896, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1896, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1896, "asynchronous-execution"]], "CUDA streams": [[1896, "cuda-streams"]], "Stream semantics of backward passes": [[1896, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1896, "bc-note-using-grads-on-the-default-stream"]], "Environment variables": [[1896, "environment-variables"]], "Using custom memory allocators for CUDA": [[1896, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1896, "cublas-workspaces"]], "cuFFT plan cache": [[1896, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1896, "just-in-time-compilation"]], "Best practices": [[1896, "best-practices"]], "Device-agnostic code": [[1896, "device-agnostic-code"]], "Use pinned memory buffers": [[1896, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1896, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1896, "cuda-graphs"]], "Why CUDA Graphs?": [[1896, "why-cuda-graphs"]], "PyTorch API": [[1896, "pytorch-api"]], "Constraints": [[1896, "constraints"], [29, "module-torch.distributions.constraints"]], "Non-constraints": [[1896, "non-constraints"]], "Whole-network capture": [[1896, "whole-network-capture"]], "Partial-network capture": [[1896, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1896, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1896, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1896, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1896, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1896, "id5"]], "Graph memory management": [[1896, "graph-memory-management"]], "Sharing memory across captures": [[1896, "sharing-memory-across-captures"]], "Serialization semantics": [[1909, "serialization-semantics"]], "Table of Contents": [[1909, "table-of-contents"]], "Saving and loading tensors": [[1909, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1909, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1909, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1909, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1909, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1909, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1909, "torch-full-always-inferring-a-float-dtype"]], "Utility functions": [[1909, "utility-functions"], [1921, "utility-functions"]], "torch.nn.functional": [[1890, "torch-nn-functional"]], "Convolution functions": [[1890, "convolution-functions"]], "Pooling functions": [[1890, "pooling-functions"]], "Attention Mechanisms": [[1890, "attention-mechanisms"]], "Non-linear activation functions": [[1890, "non-linear-activation-functions"]], "Linear functions": [[1890, "linear-functions"]], "Dropout functions": [[1890, "dropout-functions"]], "Sparse functions": [[1890, "sparse-functions"]], "Distance functions": [[1890, "distance-functions"]], "Loss functions": [[1890, "loss-functions"]], "Vision functions": [[1890, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1890, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1890, "data-parallel"]], "Numerical accuracy": [[1907, "numerical-accuracy"]], "Batched computations or slice computations": [[1907, "batched-computations-or-slice-computations"]], "Extremal values": [[1907, "extremal-values"]], "Linear algebra (torch.linalg)": [[1907, "linear-algebra-torch-linalg"]], "Non-finite values": [[1907, "non-finite-values"]], "Extremal values in linalg": [[1907, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1907, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1907, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1907, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "Python Language Reference Coverage": [[1874, "python-language-reference-coverage"]], "Reproducibility": [[1908, "reproducibility"]], "Controlling sources of randomness": [[1908, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1908, "pytorch-random-number-generator"]], "Python": [[1908, "python"]], "Random number generators in other libraries": [[1908, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1908, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1908, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1908, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1908, "cuda-rnn-and-lstm"]], "DataLoader": [[1908, "dataloader"]], "Multiprocessing best practices": [[1906, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1906, "cuda-in-multiprocessing"]], "Best practices and tips": [[1906, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1906, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1906, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1906, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1906, "hogwild"]], "CPU in multiprocessing": [[1906, "cpu-in-multiprocessing"]], "CPU oversubscription": [[1906, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[1906, "avoid-cpu-oversubscription"]], "A Simple Custom Module": [[1904, "a-simple-custom-module"]], "Modules as Building Blocks": [[1904, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1904, "neural-network-training-with-modules"]], "Module State": [[1904, "module-state"]], "Module Initialization": [[1904, "module-initialization"]], "Module Hooks": [[1904, "module-hooks"]], "Advanced Features": [[1904, "advanced-features"]], "Distributed Training": [[1904, "distributed-training"]], "Profiling Performance": [[1904, "profiling-performance"]], "Improving Performance with Quantization": [[1904, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1904, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1904, "parametrizations"]], "Transforming Modules with FX": [[1904, "transforming-modules-with-fx"]], "torch.nn": [[1889, "module-torch.nn"], [1889, "id1"]], "Containers": [[1889, "containers"]], "Convolution Layers": [[1889, "convolution-layers"]], "Pooling layers": [[1889, "pooling-layers"]], "Padding Layers": [[1889, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1889, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1889, "non-linear-activations-other"]], "Normalization Layers": [[1889, "normalization-layers"]], "Recurrent Layers": [[1889, "recurrent-layers"]], "Transformer Layers": [[1889, "transformer-layers"]], "Linear Layers": [[1889, "linear-layers"]], "Dropout Layers": [[1889, "dropout-layers"]], "Sparse Layers": [[1889, "sparse-layers"]], "Distance Functions": [[1889, "distance-functions"]], "Loss Functions": [[1889, "loss-functions"]], "Vision Layers": [[1889, "vision-layers"]], "Shuffle Layers": [[1889, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1889, "module-torch.nn.parallel"]], "Utilities": [[1889, "module-torch.nn.utils"], [1935, "utilities"]], "Quantized Functions": [[1889, "quantized-functions"]], "Lazy Modules Initialization": [[1889, "lazy-modules-initialization"]], "torch.masked": [[1880, "torch-masked"]], "Motivation": [[1880, "motivation"], [1945, "motivation"], [1944, "motivation"]], "What is a MaskedTensor?": [[1880, "what-is-a-maskedtensor"]], "Supported Operators": [[1880, "supported-operators"]], "Unary Operators": [[1880, "unary-operators"]], "Binary Operators": [[1880, "binary-operators"]], "Reductions": [[1880, "reductions"]], "View and select functions": [[1880, "view-and-select-functions"]], "Windows FAQ": [[1910, "windows-faq"]], "Building from source": [[1910, "building-from-source"]], "Include optional components": [[1910, "include-optional-components"]], "Speeding CUDA build for Windows": [[1910, "speeding-cuda-build-for-windows"]], "One key install script": [[1910, "one-key-install-script"]], "Extension": [[1910, "extension"]], "CFFI Extension": [[1910, "cffi-extension"]], "Cpp Extension": [[1910, "cpp-extension"]], "Installation": [[1910, "installation"]], "Package not found in win-32 channel.": [[1910, "package-not-found-in-win-32-channel"]], "Import error": [[1910, "import-error"]], "Usage (multiprocessing)": [[1910, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1910, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1910, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1910, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1910, "cuda-ipc-operations"]], "torch._logging": [[1879, "torch-logging"]], "Autograd mechanics": [[1893, "autograd-mechanics"]], "How autograd encodes the history": [[1893, "how-autograd-encodes-the-history"]], "Saved tensors": [[1893, "saved-tensors"]], "Gradients for non-differentiable functions": [[1893, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[1893, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [1935, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[1893, "setting-requires-grad"]], "Grad Modes": [[1893, "grad-modes"]], "Default Mode (Grad Mode)": [[1893, "default-mode-grad-mode"]], "No-grad Mode": [[1893, "no-grad-mode"]], "Inference Mode": [[1893, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1893, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1893, "in-place-operations-with-autograd"]], "In-place correctness checks": [[1893, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[1893, "multithreaded-autograd"]], "Concurrency on CPU": [[1893, "concurrency-on-cpu"]], "Non-determinism": [[1893, "non-determinism"]], "Graph retaining": [[1893, "graph-retaining"]], "Thread Safety on Autograd Node": [[1893, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1893, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1893, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1893, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1893, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1893, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1893, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1893, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1893, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1893, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1893, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1893, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1893, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1893, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1893, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1893, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1893, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "Multiprocessing package - torch.multiprocessing": [[1885, "module-torch.multiprocessing"]], "Strategy management": [[1885, "strategy-management"]], "Sharing CUDA tensors": [[1885, "sharing-cuda-tensors"]], "Sharing strategies": [[1885, "sharing-strategies"]], "File descriptor - file_descriptor": [[1885, "file-descriptor-file-descriptor"]], "File system - file_system": [[1885, "file-system-file-system"]], "Spawning subprocesses": [[1885, "spawning-subprocesses"]], "torch.mps": [[1884, "module-torch.mps"]], "MPS Profiler": [[1884, "mps-profiler"]], "MPS Event": [[1884, "mps-event"]], "Named Tensors": [[1887, "named-tensors"]], "Creating named tensors": [[1887, "creating-named-tensors"]], "Named dimensions": [[1887, "named-dimensions"]], "Name propagation semantics": [[1887, "name-propagation-semantics"]], "match semantics": [[1887, "match-semantics"]], "Basic name inference rules": [[1887, "basic-name-inference-rules"]], "Explicit alignment by names": [[1887, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1887, "manipulating-dimensions"]], "Autograd support": [[1887, "autograd-support"]], "Currently supported operations and subsystems": [[1887, "currently-supported-operations-and-subsystems"]], "Operators": [[1887, "operators"]], "Subsystems": [[1887, "subsystems"]], "Named tensor API reference": [[1887, "named-tensor-api-reference"]], "torch.library": [[1877, "torch-library"]], "PyTorch documentation": [[1869, "pytorch-documentation"]], "Community": [[1869, null]], "Developer Notes": [[1869, null]], "Language Bindings": [[1869, null]], "Python API": [[1869, null]], "Libraries": [[1869, null]], "Indices and tables": [[1869, "indices-and-tables"]], "TorchScript Unsupported PyTorch Constructs": [[1875, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1875, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1875, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1875, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1875, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1875, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1875, "pytorch-unsupported-modules-and-classes"]], "Distributed Data Parallel": [[1897, "distributed-data-parallel"]], "Internal Design": [[1897, "internal-design"]], "Implementation": [[1897, "implementation"], [1925, "implementation"]], "ProcessGroup": [[1897, "processgroup"]], "TorchDynamo DDPOptimizer": [[1897, "id1"]], "Gradcheck mechanics": [[1901, "gradcheck-mechanics"]], "Notations and background information": [[1901, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1901, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1901, "real-to-real-functions"]], "Default real input numerical evaluation": [[1901, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1901, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1901, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1901, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1901, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1901, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1901, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1901, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1901, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1901, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1901, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1901, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1901, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1901, "gradgradcheck-implementation"]], "Features for large-scale deployments": [[1903, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1903, "fleet-wide-operator-profiling"]], "API usage logging": [[1903, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1903, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1903, "build-environment-considerations"]], "Common extension points": [[1903, "common-extension-points"]], "torch.vsplit": [[1862, "torch-vsplit"]], "Extending torch.func with autograd.Function": [[1899, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1899, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1899, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1899, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1899, "limitations-and-gotchas"]], "torch.vmap() Support": [[1899, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1899, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1899, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1899, "torch-func-jvp-support"]], "torch.utils.model_zoo": [[1882, "torch-utils-model-zoo"]], "torch.divide": [[1061, "torch-divide"]], "torch.erfc": [[1073, "torch-erfc"]], "torch.cuda.set_per_process_memory_fraction": [[1035, "torch-cuda-set-per-process-memory-fraction"]], "torch.cumsum": [[1047, "torch-cumsum"]], "torch.diagonal_scatter": [[1056, "torch-diagonal-scatter"]], "torch.diagonal": [[1055, "torch-diagonal"]], "torch.cuda.stream": [[1040, "torch-cuda-stream"]], "enable_grad": [[1069, "enable-grad"]], "torch.cuda.synchronize": [[1041, "torch-cuda-synchronize"]], "torch.dequantize": [[1050, "torch-dequantize"]], "torch.cuda.reset_max_memory_allocated": [[1029, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.set_sync_debug_mode": [[1039, "torch-cuda-set-sync-debug-mode"]], "torch.div": [[1060, "torch-div"]], "torch.dstack": [[1064, "torch-dstack"]], "torch.cummin": [[1045, "torch-cummin"]], "torch.cuda.utilization": [[1043, "torch-cuda-utilization"]], "torch.einsum": [[1065, "torch-einsum"]], "torch.dot": [[1062, "torch-dot"]], "torch.cuda.set_stream": [[1038, "torch-cuda-set-stream"]], "torch.erfinv": [[1074, "torch-erfinv"]], "torch.expm1": [[1077, "torch-expm1"]], "torch.cuda.set_device": [[1034, "torch-cuda-set-device"]], "torch.cuda.set_rng_state_all": [[1037, "torch-cuda-set-rng-state-all"]], "torch.eq": [[1070, "torch-eq"]], "torch.cumprod": [[1046, "torch-cumprod"]], "torch.diag": [[1052, "torch-diag"]], "torch.exp": [[1075, "torch-exp"]], "torch.dist": [[1059, "torch-dist"]], "torch.digamma": [[1058, "torch-digamma"]], "torch.cuda.reset_peak_memory_stats": [[1031, "torch-cuda-reset-peak-memory-stats"]], "torch.cuda.seed": [[1032, "torch-cuda-seed"]], "torch.exp2": [[1076, "torch-exp2"]], "torch.cuda.set_rng_state": [[1036, "torch-cuda-set-rng-state"]], "torch.erf": [[1072, "torch-erf"]], "torch.cumulative_trapezoid": [[1048, "torch-cumulative-trapezoid"]], "torch.empty_strided": [[1068, "torch-empty-strided"]], "torch.cuda.reset_max_memory_cached": [[1030, "torch-cuda-reset-max-memory-cached"]], "torch.equal": [[1071, "torch-equal"]], "torch.empty": [[1066, "torch-empty"]], "torch.empty_like": [[1067, "torch-empty-like"]], "torch.diff": [[1057, "torch-diff"]], "torch.dsplit": [[1063, "torch-dsplit"]], "torch.det": [[1051, "torch-det"]], "torch.diagflat": [[1054, "torch-diagflat"]], "torch.cuda.seed_all": [[1033, "torch-cuda-seed-all"]], "torch.deg2rad": [[1049, "torch-deg2rad"]], "torch.cuda.temperature": [[1042, "torch-cuda-temperature"]], "torch.cummax": [[1044, "torch-cummax"]], "torch.diag_embed": [[1053, "torch-diag-embed"]], "torch.isneginf": [[1186, "torch-isneginf"]], "torch.jit.load": [[1199, "torch-jit-load"]], "torch.jit.script_if_tracing": [[1204, "torch-jit-script-if-tracing"]], "torch.jit.freeze": [[1196, "torch-jit-freeze"]], "torch.linalg.cond": [[1223, "torch-linalg-cond"]], "torch.kaiser_window": [[1211, "torch-kaiser-window"]], "torch.less": [[1218, "torch-less"]], "torch.le": [[1216, "torch-le"]], "torch.is_tensor": [[1179, "torch-is-tensor"]], "strict_fusion": [[1206, "strict-fusion"]], "Attribute": [[1190, "attribute"]], "torch.ldexp": [[1215, "torch-ldexp"]], "torch.jit.fork": [[1195, "torch-jit-fork"]], "torch.jit.script": [[1203, "torch-jit-script"]], "torch.jit.annotate": [[1193, "torch-jit-annotate"]], "torch.isposinf": [[1187, "torch-isposinf"]], "torch.linalg.cholesky": [[1221, "torch-linalg-cholesky"]], "torch.jit.isinstance": [[1198, "torch-jit-isinstance"]], "torch.isin": [[1183, "torch-isin"]], "torch.jit.optimize_for_inference": [[1201, "torch-jit-optimize-for-inference"]], "torch.jit.unused": [[1209, "torch-jit-unused"]], "torch.lcm": [[1214, "torch-lcm"]], "torch.kthvalue": [[1213, "torch-kthvalue"]], "torch.jit.onednn_fusion_enabled": [[1200, "torch-jit-onednn-fusion-enabled"]], "torch.isclose": [[1181, "torch-isclose"]], "torch.linalg.cross": [[1224, "torch-linalg-cross"]], "torch.kron": [[1212, "torch-kron"]], "torch.linalg.cholesky_ex": [[1222, "torch-linalg-cholesky-ex"]], "torch.jit.set_fusion_strategy": [[1205, "torch-jit-set-fusion-strategy"]], "ScriptFunction": [[1191, "scriptfunction"]], "torch.isinf": [[1184, "torch-isinf"]], "torch.is_inference_mode_enabled": [[1176, "torch-is-inference-mode-enabled"]], "torch.jit.ignore": [[1197, "torch-jit-ignore"]], "torch.jit.trace": [[1207, "torch-jit-trace"]], "torch.less_equal": [[1219, "torch-less-equal"]], "torch.isnan": [[1185, "torch-isnan"]], "torch.lerp": [[1217, "torch-lerp"]], "ScriptModule": [[1192, "scriptmodule"]], "torch.isreal": [[1188, "torch-isreal"]], "torch.is_storage": [[1178, "torch-is-storage"]], "torch.jit.wait": [[1210, "torch-jit-wait"]], "torch.jit.save": [[1202, "torch-jit-save"]], "torch.isfinite": [[1182, "torch-isfinite"]], "torch.is_warn_always_enabled": [[1180, "torch-is-warn-always-enabled"]], "torch.lgamma": [[1220, "torch-lgamma"]], "torch.is_nonzero": [[1177, "torch-is-nonzero"]], "torch.jit.enable_onednn_fusion": [[1194, "torch-jit-enable-onednn-fusion"]], "torch.istft": [[1189, "torch-istft"]], "torch.jit.trace_module": [[1208, "torch-jit-trace-module"]], "torch.fft.hfft2": [[1087, "torch-fft-hfft2"]], "torch.fft.fft2": [[1082, "torch-fft-fft2"]], "torch.float_power": [[1108, "torch-float-power"]], "torch.fft.irfft2": [[1097, "torch-fft-irfft2"]], "torch.func.functional_call": [[1121, "torch-func-functional-call"]], "torch.fmax": [[1111, "torch-fmax"]], "torch.frexp": [[1115, "torch-frexp"]], "torch.fft.rfftn": [[1102, "torch-fft-rfftn"]], "torch.fft.irfftn": [[1098, "torch-fft-irfftn"]], "torch.fft.ifftshift": [[1092, "torch-fft-ifftshift"]], "torch.frombuffer": [[1118, "torch-frombuffer"]], "torch.fft.rfft": [[1099, "torch-fft-rfft"]], "torch.from_numpy": [[1117, "torch-from-numpy"]], "torch.eye": [[1078, "torch-eye"]], "torch.fft.hfftn": [[1088, "torch-fft-hfftn"]], "torch.func.functionalize": [[1122, "torch-func-functionalize"]], "torch.fft.ifft2": [[1090, "torch-fft-ifft2"]], "torch.floor_divide": [[1110, "torch-floor-divide"]], "torch.flatten": [[1104, "torch-flatten"]], "torch.fmod": [[1113, "torch-fmod"]], "torch.fft.rfft2": [[1100, "torch-fft-rfft2"]], "torch.fft.ifftn": [[1091, "torch-fft-ifftn"]], "torch.fft.hfft": [[1086, "torch-fft-hfft"]], "torch.func.hessian": [[1125, "torch-func-hessian"]], "torch.fft.fftshift": [[1085, "torch-fft-fftshift"]], "torch.full_like": [[1120, "torch-full-like"]], "torch.fft.fftfreq": [[1083, "torch-fft-fftfreq"]], "torch.fft.ihfft": [[1093, "torch-fft-ihfft"]], "torch.fix": [[1103, "torch-fix"]], "torch.flipud": [[1107, "torch-flipud"]], "torch.fliplr": [[1106, "torch-fliplr"]], "torch.from_dlpack": [[1116, "torch-from-dlpack"]], "torch.func.grad": [[1123, "torch-func-grad"]], "torch.flip": [[1105, "torch-flip"]], "torch.fft.ihfft2": [[1094, "torch-fft-ihfft2"]], "torch.fmin": [[1112, "torch-fmin"]], "torch.fft.ifft": [[1089, "torch-fft-ifft"]], "torch.fft.rfftfreq": [[1101, "torch-fft-rfftfreq"]], "torch.func.grad_and_value": [[1124, "torch-func-grad-and-value"]], "torch.fft.fft": [[1081, "torch-fft-fft"]], "torch.fft.fftn": [[1084, "torch-fft-fftn"]], "torch.floor": [[1109, "torch-floor"]], "torch.full": [[1119, "torch-full"]], "torch.fake_quantize_per_tensor_affine": [[1080, "torch-fake-quantize-per-tensor-affine"]], "torch.func.jacfwd": [[1126, "torch-func-jacfwd"]], "torch.fft.ihfftn": [[1095, "torch-fft-ihfftn"]], "torch.frac": [[1114, "torch-frac"]], "torch.fake_quantize_per_channel_affine": [[1079, "torch-fake-quantize-per-channel-affine"]], "torch.fft.irfft": [[1096, "torch-fft-irfft"]], "torch.cuda.empty_cache": [[990, "torch-cuda-empty-cache"]], "graph": [[1000, "graph"]], "torch.cuda.max_memory_allocated": [[1014, "torch-cuda-max-memory-allocated"]], "torch.cuda.memory_summary": [[1023, "torch-cuda-memory-summary"]], "torch.cuda.get_sync_debug_mode": [[999, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.manual_seed": [[1012, "torch-cuda-manual-seed"]], "device_of": [[989, "device-of"]], "torch.cuda.comm.scatter": [[982, "torch-cuda-comm-scatter"]], "torch.cuda.get_allocator_backend": [[991, "torch-cuda-get-allocator-backend"]], "torch.cuda.list_gpu_processes": [[1010, "torch-cuda-list-gpu-processes"]], "torch.cuda.memory_allocated": [[1018, "torch-cuda-memory-allocated"]], "torch.cuda.current_stream": [[985, "torch-cuda-current-stream"]], "torch.cuda.get_arch_list": [[992, "torch-cuda-get-arch-list"]], "torch.cuda.init": [[1002, "torch-cuda-init"]], "torch.cuda.memory_stats": [[1022, "torch-cuda-memory-stats"]], "torch.cuda.comm.gather": [[980, "torch-cuda-comm-gather"]], "torch.cuda.get_device_properties": [[995, "torch-cuda-get-device-properties"]], "torch.cuda.get_rng_state": [[997, "torch-cuda-get-rng-state"]], "torch.cuda.make_graphed_callables": [[1011, "torch-cuda-make-graphed-callables"]], "torch.cuda.max_memory_reserved": [[1016, "torch-cuda-max-memory-reserved"]], "torch.cuda.nvtx.range_push": [[1027, "torch-cuda-nvtx-range-push"]], "torch.cuda.default_stream": [[986, "torch-cuda-default-stream"]], "torch.cuda.initial_seed": [[1003, "torch-cuda-initial-seed"]], "torch.cuda.memory_cached": [[1019, "torch-cuda-memory-cached"]], "torch.cuda.is_current_stream_capturing": [[1006, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1009, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.manual_seed_all": [[1013, "torch-cuda-manual-seed-all"]], "torch.cuda.get_rng_state_all": [[998, "torch-cuda-get-rng-state-all"]], "torch.cuda.current_device": [[984, "torch-cuda-current-device"]], "torch.cuda.get_device_name": [[994, "torch-cuda-get-device-name"]], "torch.cuda.get_gencode_flags": [[996, "torch-cuda-get-gencode-flags"]], "torch.cuda.mem_get_info": [[1017, "torch-cuda-mem-get-info"]], "torch.cuda.current_blas_handle": [[983, "torch-cuda-current-blas-handle"]], "torch.cuda.memory_reserved": [[1020, "torch-cuda-memory-reserved"]], "torch.cuda.device_count": [[988, "torch-cuda-device-count"]], "torch.cuda.memory_usage": [[1024, "torch-cuda-memory-usage"]], "torch.cuda.max_memory_cached": [[1015, "torch-cuda-max-memory-cached"]], "torch.cuda.jiterator._create_jit_fn": [[1008, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.is_available": [[1005, "torch-cuda-is-available"]], "torch.cuda.comm.reduce_add": [[981, "torch-cuda-comm-reduce-add"]], "torch.cuda.get_device_capability": [[993, "torch-cuda-get-device-capability"]], "torch.cuda.power_draw": [[1028, "torch-cuda-power-draw"]], "torch.cuda.nvtx.range_pop": [[1026, "torch-cuda-nvtx-range-pop"]], "torch.cuda.is_initialized": [[1007, "torch-cuda-is-initialized"]], "torch.cuda.nvtx.mark": [[1025, "torch-cuda-nvtx-mark"]], "device": [[987, "device"]], "torch.cuda.graph_pool_handle": [[1001, "torch-cuda-graph-pool-handle"]], "torch.cuda.ipc_collect": [[1004, "torch-cuda-ipc-collect"]], "torch.cuda.memory_snapshot": [[1021, "torch-cuda-memory-snapshot"]], "torch.concat": [[948, "torch-concat"]], "StreamContext": [[959, "streamcontext"], [972, "streamcontext"]], "torch.compile": [[939, "torch-compile"]], "torch.cpu.is_available": [[962, "torch-cpu-is-available"]], "torch.count_nonzero": [[956, "torch-count-nonzero"]], "torch.compiler.allow_in_graph": [[941, "torch-compiler-allow-in-graph"], [1947, "torch-compiler-allow-in-graph"]], "torch.cosh": [[955, "torch-cosh"]], "torch.cuda.comm.broadcast_coalesced": [[979, "torch-cuda-comm-broadcast-coalesced"]], "torch.compiler.disable": [[944, "torch-compiler-disable"], [1947, "torch-compiler-disable"]], "torch.cpu.synchronize": [[964, "torch-cpu-synchronize"]], "torch.cuda.OutOfMemoryError": [[970, "torch-cuda-outofmemoryerror"]], "torch.conj_physical": [[951, "torch-conj-physical"]], "torch.cholesky_solve": [[932, "torch-cholesky-solve"]], "Stream": [[958, "stream"], [971, "stream"]], "torch.cpu.device_count": [[961, "torch-cpu-device-count"]], "torch.copysign": [[952, "torch-copysign"]], "torch.compiler.reset": [[946, "torch-compiler-reset"]], "torch.cuda.caching_allocator_delete": [[974, "torch-cuda-caching-allocator-delete"]], "torch.cuda.can_device_access_peer": [[975, "torch-cuda-can-device-access-peer"]], "torch.cpu.current_stream": [[960, "torch-cpu-current-stream"]], "torch.compiled_with_cxx11_abi": [[940, "torch-compiled-with-cxx11-abi"]], "torch.cross": [[965, "torch-cross"]], "torch.cuda.caching_allocator_alloc": [[973, "torch-cuda-caching-allocator-alloc"]], "torch.corrcoef": [[953, "torch-corrcoef"]], "torch.complex": [[947, "torch-complex"]], "torch.conj": [[950, "torch-conj"]], "torch.cos": [[954, "torch-cos"]], "torch.cov": [[957, "torch-cov"]], "torch.compiler.compile": [[943, "torch-compiler-compile"]], "torch.compiler.assume_constant_result": [[942, "torch-compiler-assume-constant-result"]], "ExternalStream": [[969, "externalstream"]], "torch.cuda.clock_rate": [[977, "torch-cuda-clock-rate"]], "torch.clip": [[935, "torch-clip"]], "torch.combinations": [[938, "torch-combinations"]], "torch.clone": [[936, "torch-clone"]], "torch.chunk": [[933, "torch-chunk"]], "torch.column_stack": [[937, "torch-column-stack"]], "torch.cpu.stream": [[963, "torch-cpu-stream"]], "torch.concatenate": [[949, "torch-concatenate"]], "torch.compiler.list_backends": [[945, "torch-compiler-list-backends"]], "CUDAGraph": [[966, "cudagraph"]], "CUDAPluggableAllocator": [[967, "cudapluggableallocator"]], "torch.cuda.change_current_allocator": [[976, "torch-cuda-change-current-allocator"]], "torch.clamp": [[934, "torch-clamp"]], "torch.cholesky_inverse": [[931, "torch-cholesky-inverse"]], "torch.cuda.comm.broadcast": [[978, "torch-cuda-comm-broadcast"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[884, "torch-autograd-function-functionctx-mark-dirty"]], "torch.autograd.grad": [[894, "torch-autograd-grad"]], "torch.autograd.functional.hessian": [[888, "torch-autograd-functional-hessian"]], "torch.autograd.profiler.profile.export_chrome_trace": [[903, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[885, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.broadcast_to": [[922, "torch-broadcast-to"]], "torch.cdist": [[927, "torch-cdist"]], "torch.autograd.profiler.profile.total_average": [[906, "torch-autograd-profiler-profile-total-average"]], "torch.can_cast": [[924, "torch-can-cast"]], "torch.baddbmm": [[907, "torch-baddbmm"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[886, "torch-autograd-function-functionctx-save-for-backward"]], "torch.block_diag": [[918, "torch-block-diag"]], "torch.autograd.gradgradcheck": [[896, "torch-autograd-gradgradcheck"]], "torch.autograd.profiler.load_nvprof": [[902, "torch-autograd-profiler-load-nvprof"]], "torch.autograd.graph.Node.next_functions": [[899, "torch-autograd-graph-node-next-functions"]], "torch.bitwise_right_shift": [[915, "torch-bitwise-right-shift"]], "torch.bartlett_window": [[908, "torch-bartlett-window"]], "torch.autograd.forward_ad.make_dual": [[882, "torch-autograd-forward-ad-make-dual"]], "torch.bmm": [[919, "torch-bmm"]], "torch.cartesian_prod": [[925, "torch-cartesian-prod"]], "torch.broadcast_tensors": [[921, "torch-broadcast-tensors"]], "torch.autograd.functional.jacobian": [[890, "torch-autograd-functional-jacobian"]], "torch.ceil": [[928, "torch-ceil"]], "torch.bucketize": [[923, "torch-bucketize"]], "torch.chain_matmul": [[929, "torch-chain-matmul"]], "torch.cat": [[926, "torch-cat"]], "torch.autograd.graph.Node.register_hook": [[900, "torch-autograd-graph-node-register-hook"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[887, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.cholesky": [[930, "torch-cholesky"]], "torch.autograd.graph.Node.metadata": [[897, "torch-autograd-graph-node-metadata"]], "torch.bernoulli": [[909, "torch-bernoulli"]], "torch.autograd.graph.Node.register_prehook": [[901, "torch-autograd-graph-node-register-prehook"]], "torch.autograd.functional.vjp": [[893, "torch-autograd-functional-vjp"]], "torch.bitwise_left_shift": [[912, "torch-bitwise-left-shift"]], "torch.autograd.gradcheck": [[895, "torch-autograd-gradcheck"]], "torch.autograd.functional.vhp": [[892, "torch-autograd-functional-vhp"]], "torch.autograd.profiler.profile.key_averages": [[904, "torch-autograd-profiler-profile-key-averages"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[905, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.bincount": [[910, "torch-bincount"]], "torch.bitwise_and": [[911, "torch-bitwise-and"]], "torch.bitwise_or": [[914, "torch-bitwise-or"]], "torch.broadcast_shapes": [[920, "torch-broadcast-shapes"]], "torch.autograd.forward_ad.unpack_dual": [[883, "torch-autograd-forward-ad-unpack-dual"]], "torch.autograd.functional.hvp": [[889, "torch-autograd-functional-hvp"]], "torch.bitwise_not": [[913, "torch-bitwise-not"]], "torch.bitwise_xor": [[916, "torch-bitwise-xor"]], "torch.blackman_window": [[917, "torch-blackman-window"]], "torch.autograd.graph.Node.name": [[898, "torch-autograd-graph-node-name"]], "torch.autograd.functional.jvp": [[891, "torch-autograd-functional-jvp"]], "default_qconfig": [[835, "default-qconfig"]], "default_weight_only_qconfig": [[836, "default-weight-only-qconfig"]], "torch.asin": [[868, "torch-asin"]], "fuse_fx": [[847, "fuse-fx"]], "torch.atleast_3d": [[875, "torch-atleast-3d"]], "float16_static_qconfig": [[838, "float16-static-qconfig"]], "prepare_qat_fx": [[849, "prepare-qat-fx"]], "torch.atleast_1d": [[873, "torch-atleast-1d"]], "float_qparams_weight_only_qconfig": [[839, "float-qparams-weight-only-qconfig"]], "torch.arctan2": [[858, "torch-arctan2"]], "quantize": [[844, "quantize"]], "quantize_dynamic": [[845, "quantize-dynamic"]], "default_qat_qconfig_v2": [[834, "default-qat-qconfig-v2"]], "torch.arctan": [[857, "torch-arctan"]], "torch.arcsin": [[855, "torch-arcsin"]], "torch.argwhere": [[864, "torch-argwhere"]], "torch.arcsinh": [[856, "torch-arcsinh"]], "torch.argmin": [[862, "torch-argmin"]], "torch.argsort": [[863, "torch-argsort"]], "torch.are_deterministic_algorithms_enabled": [[860, "torch-are-deterministic-algorithms-enabled"]], "torch.autograd.Function.forward": [[877, "torch-autograd-function-forward"]], "per_channel_dynamic_qconfig": [[840, "per-channel-dynamic-qconfig"]], "torch.atleast_2d": [[874, "torch-atleast-2d"]], "QConfigMapping": [[841, "qconfigmapping"]], "quantize_qat": [[850, "quantize-qat"]], "torch.arccos": [[853, "torch-arccos"]], "default_qat_qconfig": [[833, "default-qat-qconfig"]], "torch.asarray": [[867, "torch-asarray"]], "torch.autograd.Function.backward": [[876, "torch-autograd-function-backward"]], "torch.asinh": [[869, "torch-asinh"]], "convert_fx": [[846, "convert-fx"]], "torch.arccosh": [[854, "torch-arccosh"]], "torch.atanh": [[872, "torch-atanh"]], "torch.autograd.backward": [[880, "torch-autograd-backward"]], "torch.autograd.Function.jvp": [[878, "torch-autograd-function-jvp"]], "float16_dynamic_qconfig": [[837, "float16-dynamic-qconfig"]], "torch.as_strided": [[865, "torch-as-strided"]], "torch.as_tensor": [[866, "torch-as-tensor"]], "get_default_qconfig_mapping": [[843, "get-default-qconfig-mapping"]], "torch.autograd.Function.vmap": [[879, "torch-autograd-function-vmap"]], "get_default_qat_qconfig_mapping": [[842, "get-default-qat-qconfig-mapping"]], "prepare_fx": [[848, "prepare-fx"]], "torch.arctanh": [[859, "torch-arctanh"]], "torch.argmax": [[861, "torch-argmax"]], "swap_module": [[851, "swap-module"]], "dual_level": [[881, "dual-level"]], "torch.atan": [[870, "torch-atan"]], "torch.atan2": [[871, "torch-atan2"]], "torch.arange": [[852, "torch-arange"]], "propagate_qconfig": [[827, "propagate-qconfig"]], "default_debug_qconfig": [[830, "default-debug-qconfig"]], "default_activation_only_qconfig": [[829, "default-activation-only-qconfig"]], "HistogramObserver": [[806, "histogramobserver"]], "default_float_qparams_observer": [[817, "default-float-qparams-observer"]], "disable_fake_quant": [[797, "disable-fake-quant"]], "default_weight_fake_quant": [[796, "default-weight-fake-quant"]], "default_dynamic_quant_observer": [[816, "default-dynamic-quant-observer"]], "default_placeholder_observer": [[821, "default-placeholder-observer"]], "PerChannelMinMaxObserver": [[812, "perchannelminmaxobserver"]], "default_weight_observer": [[822, "default-weight-observer"]], "MovingAveragePerChannelMinMaxObserver": [[809, "movingaverageperchannelminmaxobserver"]], "default_debug_observer": [[815, "default-debug-observer"]], "FakeQuantize": [[786, "fakequantize"]], "RecordingObserver": [[814, "recordingobserver"]], "prepare_qat": [[826, "prepare-qat"]], "prepare": [[825, "prepare"]], "FixedQParamsFakeQuantize": [[788, "fixedqparamsfakequantize"]], "default_per_channel_qconfig": [[832, "default-per-channel-qconfig"]], "PrepareCustomConfig": [[804, "preparecustomconfig"]], "default_per_channel_weight_observer": [[820, "default-per-channel-weight-observer"]], "PlaceholderObserver": [[813, "placeholderobserver"]], "default_fake_quant": [[790, "default-fake-quant"]], "ConvertCustomConfig": [[802, "convertcustomconfig"]], "default_fused_per_channel_wt_fake_quant": [[792, "default-fused-per-channel-wt-fake-quant"]], "MovingAverageMinMaxObserver": [[808, "movingaverageminmaxobserver"]], "MinMaxObserver": [[807, "minmaxobserver"]], "default_histogram_observer": [[818, "default-histogram-observer"]], "QConfig": [[828, "qconfig"], [1918, "qconfig"]], "NoopObserver": [[810, "noopobserver"]], "get_observer_state_dict": [[823, "get-observer-state-dict"]], "enable_observer": [[800, "enable-observer"]], "FuseCustomConfig": [[803, "fusecustomconfig"]], "fuse_modules": [[801, "fuse-modules"]], "default_dynamic_qconfig": [[831, "default-dynamic-qconfig"]], "load_observer_state_dict": [[824, "load-observer-state-dict"]], "FakeQuantizeBase": [[787, "fakequantizebase"]], "disable_observer": [[798, "disable-observer"]], "default_histogram_fake_quant": [[794, "default-histogram-fake-quant"]], "convert": [[784, "convert"]], "FusedMovingAvgObsFakeQuantize": [[789, "fusedmovingavgobsfakequantize"]], "enable_fake_quant": [[799, "enable-fake-quant"]], "StandaloneModuleConfigEntry": [[805, "standalonemoduleconfigentry"]], "default_eval_fn": [[785, "default-eval-fn"]], "default_per_channel_weight_fake_quant": [[795, "default-per-channel-weight-fake-quant"]], "default_fused_act_fake_quant": [[791, "default-fused-act-fake-quant"]], "default_observer": [[819, "default-observer"]], "default_fused_wt_fake_quant": [[793, "default-fused-wt-fake-quant"]], "ObserverBase": [[811, "observerbase"]], "Quickstart": [[39, "quickstart"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[28, "tensor-parallelism-torch-distributed-tensor-parallel"]], "Elastic Agent": [[31, "module-torch.distributed.elastic.agent"]], "Server": [[31, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[31, "concepts"]], "Implementations": [[31, "implementations"], [40, "implementations"]], "Extending the Agent": [[31, "extending-the-agent"]], "Watchdog in the Agent": [[31, "watchdog-in-the-agent"]], "Customization": [[32, "customization"]], "Launcher": [[32, "launcher"]], "Rendezvous Handler": [[32, "rendezvous-handler"]], "Metric Handler": [[32, "metric-handler"]], "Events Handler": [[32, "events-handler"]], "Expiration Timers": [[42, "module-torch.distributed.elastic.timer"]], "Client Methods": [[42, "client-methods"]], "Server/Client Implementations": [[42, "server-client-implementations"]], "Writing a custom timer server/client": [[42, "writing-a-custom-timer-server-client"]], "Multiprocessing": [[38, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[38, "starting-multiple-workers"]], "Process Context": [[38, "process-context"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.func": [[47, "torch-func"]], "What are composable function transforms?": [[47, "what-are-composable-function-transforms"]], "Read More": [[47, "read-more"], [1938, "read-more"]], "torch.fft": [[45, "torch-fft"]], "Fast Fourier Transforms": [[45, "fast-fourier-transforms"]], "Helper Functions": [[45, "helper-functions"]], "torch.cpu": [[15, "module-torch.cpu"]], "Streams and events": [[15, "streams-and-events"], [16, "streams-and-events"]], "torch.utils.dlpack": [[30, "torch-utils-dlpack"]], "Error Propagation": [[33, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[33, "methods-and-classes"]], "DDP Communication Hooks": [[21, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[21, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[21, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[21, "default-communication-hooks"]], "PowerSGD Communication Hook": [[21, "powersgd-communication-hook"]], "PowerSGD State": [[21, "powersgd-state"]], "PowerSGD Hooks": [[21, "powersgd-hooks"]], "Debugging Communication Hooks": [[21, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[21, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[21, "acknowledgements"], [1916, "acknowledgements"]], "Events": [[34, "module-torch.distributed.elastic.events"]], "API Methods": [[34, "api-methods"]], "Event Objects": [[34, "event-objects"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "torch.cuda": [[16, "module-torch.cuda"]], "Random Number Generator": [[16, "random-number-generator"]], "Communication collectives": [[16, "communication-collectives"]], "Graphs (beta)": [[16, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[16, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[16, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[16, "stream-sanitizer-prototype"]], "torch.utils.cpp_extension": [[13, "torch-utils-cpp-extension"]], "torch.__config__": [[12, "module-torch.__config__"]], "C++": [[14, "c"]], "TorchScript C++ API": [[14, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[14, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[14, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[14, "authoring-models-in-c"]], "Packaging for C++": [[14, "packaging-for-c"]], "Torch Distributed Elastic": [[26, "torch-distributed-elastic"]], "Get Started": [[26, "get-started"]], "Usage": [[26, null], [41, "usage"], [17, "usage"]], "Documentation": [[26, "documentation"]], "API": [[26, null]], "Advanced": [[26, null]], "Plugins": [[26, null]], "Metrics": [[37, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[37, "metric-handlers"]], "Methods": [[37, "methods"]], "Train script": [[43, "train-script"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "torch.utils.data": [[20, "module-torch.utils.data"]], "Dataset Types": [[20, "dataset-types"]], "Map-style datasets": [[20, "map-style-datasets"]], "Iterable-style datasets": [[20, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[20, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[20, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[20, "automatic-batching-default"]], "Disable automatic batching": [[20, "disable-automatic-batching"]], "Working with collate_fn": [[20, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[20, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[20, "single-process-data-loading-default"]], "Multi-process data loading": [[20, "multi-process-data-loading"]], "Platform-specific behaviors": [[20, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[20, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[20, "memory-pinning"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"], [1949, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Core Maintainers": [[9, "core-maintainers"], [10, "core-maintainers"]], "Lead Core Maintainer (BDFL)": [[9, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "torch.func API Reference": [[48, "module-torch.func"]], "Function Transforms": [[48, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[48, "utilities-for-working-with-torch-nn-modules"]], "TorchElastic Kubernetes": [[36, "torchelastic-kubernetes"]], "torch::deploy has been moved to pytorch/multipy": [[22, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Rendezvous": [[40, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[40, "registry"]], "Handler": [[40, "handler"]], "Exceptions": [[40, "exceptions"]], "Dynamic Rendezvous": [[40, "dynamic-rendezvous"]], "C10d Backend": [[40, "c10d-backend"]], "Etcd Backend": [[40, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[40, "etcd-rendezvous-legacy"]], "Etcd Store": [[40, "etcd-store"]], "Etcd Server": [[40, "etcd-server"]], "torch.export": [[44, "torch-export"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Numerical gradient checking": [[1, "numerical-gradient-checking"]], "Profiler": [[1, "profiler"]], "Anomaly detection": [[1, "anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Getting Started": [[7, "getting-started"], [1948, "getting-started"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [1916, "tutorials"], [1923, "tutorials"], [1915, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "Examples": [[35, "examples"], [1942, "examples"]], "torchrun (Elastic Launch)": [[41, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[41, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Single-node multi-worker": [[41, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[41, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[41, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[41, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[41, "note-on-rendezvous-backend"]], "Definitions": [[41, "definitions"]], "Environment Variables": [[41, "environment-variables"]], "Deployment": [[41, "deployment"]], "Failure Modes": [[41, "failure-modes"]], "Membership Changes": [[41, "membership-changes"]], "Important Notices": [[41, "important-notices"]], "CUDA Stream Sanitizer": [[17, "cuda-stream-sanitizer"]], "Complex Numbers": [[11, "complex-numbers"]], "Creating Complex Tensors": [[11, "creating-complex-tensors"]], "Transition from the old representation": [[11, "transition-from-the-old-representation"]], "Accessing real and imag": [[11, "accessing-real-and-imag"]], "Angle and abs": [[11, "angle-and-abs"]], "Linear Algebra": [[11, "linear-algebra"]], "Serialization": [[11, "serialization"], [1935, "serialization"]], "Autograd": [[11, "autograd"]], "Generic Join Context Manager": [[24, "generic-join-context-manager"]], "Distributed Optimizers": [[27, "distributed-optimizers"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[25, "distributed-checkpoint-torch-distributed-checkpoint"]], "Probability distributions - torch.distributions": [[29, "module-torch.distributions"]], "Score function": [[29, "score-function"]], "Pathwise derivative": [[29, "pathwise-derivative"]], "Distribution": [[29, "distribution"]], "ExponentialFamily": [[29, "exponentialfamily"]], "Bernoulli": [[29, "bernoulli"]], "Beta": [[29, "beta"]], "Binomial": [[29, "binomial"]], "Categorical": [[29, "categorical"]], "Cauchy": [[29, "cauchy"]], "Chi2": [[29, "chi2"]], "ContinuousBernoulli": [[29, "continuousbernoulli"]], "Dirichlet": [[29, "dirichlet"]], "Exponential": [[29, "exponential"]], "FisherSnedecor": [[29, "fishersnedecor"]], "Gamma": [[29, "gamma"]], "Geometric": [[29, "geometric"]], "Gumbel": [[29, "gumbel"]], "HalfCauchy": [[29, "halfcauchy"]], "HalfNormal": [[29, "halfnormal"]], "Independent": [[29, "independent"]], "Kumaraswamy": [[29, "kumaraswamy"]], "LKJCholesky": [[29, "lkjcholesky"]], "Laplace": [[29, "laplace"]], "LogNormal": [[29, "lognormal"]], "LowRankMultivariateNormal": [[29, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[29, "mixturesamefamily"]], "Multinomial": [[29, "multinomial"]], "MultivariateNormal": [[29, "multivariatenormal"]], "NegativeBinomial": [[29, "negativebinomial"]], "Normal": [[29, "normal"]], "OneHotCategorical": [[29, "onehotcategorical"]], "Pareto": [[29, "pareto"]], "Poisson": [[29, "poisson"]], "RelaxedBernoulli": [[29, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[29, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[29, "relaxedonehotcategorical"]], "StudentT": [[29, "studentt"]], "TransformedDistribution": [[29, "transformeddistribution"]], "Uniform": [[29, "uniform"]], "VonMises": [[29, "vonmises"]], "Weibull": [[29, "weibull"]], "Wishart": [[29, "wishart"]], "KL Divergence": [[29, "module-torch.distributions.kl"]], "Transforms": [[29, "module-torch.distributions.transforms"]], "Constraint Registry": [[29, "module-torch.distributions.constraint_registry"]], "FullyShardedDataParallel": [[46, "module-torch.distributed.fsdp"]], "Distributed communication package - torch.distributed": [[23, "distributed-communication-package-torch-distributed"]], "Backends": [[23, "backends"], [1923, "backends"]], "Backends that come with PyTorch": [[23, "backends-that-come-with-pytorch"]], "Which backend to use?": [[23, "which-backend-to-use"]], "Common environment variables": [[23, "common-environment-variables"]], "Choosing the network interface to use": [[23, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[23, "other-nccl-environment-variables"]], "Basics": [[23, "basics"], [1923, "basics"]], "Initialization": [[23, "initialization"]], "TCP initialization": [[23, "tcp-initialization"]], "Shared file-system initialization": [[23, "shared-file-system-initialization"]], "Environment variable initialization": [[23, "environment-variable-initialization"]], "Post-Initialization": [[23, "post-initialization"]], "Distributed Key-Value Store": [[23, "distributed-key-value-store"]], "Groups": [[23, "groups"]], "Point-to-point communication": [[23, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[23, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[23, "collective-functions"]], "Profiling Collective Communication": [[23, "profiling-collective-communication"]], "Multi-GPU collective functions": [[23, "multi-gpu-collective-functions"]], "Third-party backends": [[23, "third-party-backends"]], "Launch utility": [[23, "launch-utility"]], "Spawn utility": [[23, "spawn-utility"]], "Debugging torch.distributed applications": [[23, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[23, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[23, "torch-distributed-debug"]], "Logging": [[23, "logging"]], "elu": [[762, "elu"]], "interpolate": [[766, "interpolate"]], "QuantWrapper": [[777, "quantwrapper"]], "adaptive_avg_pool3d": [[754, "adaptive-avg-pool3d"]], "adaptive_avg_pool2d": [[753, "adaptive-avg-pool2d"]], "avg_pool2d": [[755, "avg-pool2d"]], "hardtanh": [[765, "hardtanh"]], "upsample": [[772, "upsample"]], "leaky_relu": [[767, "leaky-relu"]], "QuantStub": [[776, "quantstub"]], "upsample_bilinear": [[773, "upsample-bilinear"]], "add_quant_dequant": [[778, "add-quant-dequant"]], "QFunctional": [[744, "qfunctional"]], "DeQuantStub": [[775, "dequantstub"]], "clamp": [[758, "clamp"]], "hardsigmoid": [[763, "hardsigmoid"]], "BackendConfig": [[779, "backendconfig"]], "conv1d": [[759, "conv1d"]], "max_pool2d": [[770, "max-pool2d"]], "ObservationType": [[783, "observationtype"]], "FloatFunctional": [[735, "floatfunctional"]], "avg_pool3d": [[756, "avg-pool3d"]], "DTypeWithConstraints": [[782, "dtypewithconstraints"]], "max_pool1d": [[769, "max-pool1d"]], "upsample_nearest": [[774, "upsample-nearest"]], "hardswish": [[764, "hardswish"]], "conv3d": [[761, "conv3d"]], "DTypeConfig": [[781, "dtypeconfig"]], "linear": [[768, "linear"]], "BackendPatternConfig": [[780, "backendpatternconfig"]], "celu": [[757, "celu"]], "threshold": [[771, "threshold"]], "conv2d": [[760, "conv2d"]], "ConvBnReLU2d": [[693, "convbnrelu2d"], [703, "convbnrelu2d"]], "FXFloatFunctional": [[734, "fxfloatfunctional"]], "BNReLU3d": [[688, "bnrelu3d"], [711, "bnrelu3d"]], "ConvReLU1d": [[695, "convrelu1d"], [712, "convrelu1d"]], "ConvBnReLU3d": [[694, "convbnrelu3d"], [704, "convbnrelu3d"]], "BNReLU2d": [[710, "bnrelu2d"], [687, "bnrelu2d"]], "ConvBn1d": [[689, "convbn1d"], [699, "convbn1d"]], "LinearReLU": [[715, "linearrelu"], [707, "linearrelu"], [698, "linearrelu"], [716, "linearrelu"]], "ConvBn3d": [[701, "convbn3d"], [691, "convbn3d"]], "ConvReLU2d": [[705, "convrelu2d"], [696, "convrelu2d"], [713, "convrelu2d"]], "ConvBnReLU1d": [[702, "convbnrelu1d"], [692, "convbnrelu1d"]], "ConvReLU3d": [[706, "convrelu3d"], [714, "convrelu3d"], [697, "convrelu3d"]], "ConvBn2d": [[690, "convbn2d"], [700, "convbn2d"]], "freeze_bn_stats": [[708, "freeze-bn-stats"]], "torch.any": [[686, "torch-any"]], "update_bn_stats": [[709, "update-bn-stats"]], "torch._foreach_frac_": [[637, "torch-foreach-frac"]], "torch.adjoint": [[679, "torch-adjoint"]], "torch.acosh": [[671, "torch-acosh"]], "torch._foreach_sigmoid_": [[655, "torch-foreach-sigmoid"]], "torch.amax": [[682, "torch-amax"]], "torch._foreach_log10": [[641, "torch-foreach-log10"]], "torch._foreach_reciprocal": [[650, "torch-foreach-reciprocal"]], "torch._foreach_reciprocal_": [[651, "torch-foreach-reciprocal"]], "torch._foreach_lgamma_": [[639, "torch-foreach-lgamma"]], "torch._foreach_sinh_": [[659, "torch-foreach-sinh"]], "torch._foreach_trunc_": [[665, "torch-foreach-trunc"]], "torch.addbmm": [[673, "torch-addbmm"]], "torch._foreach_log2_": [[646, "torch-foreach-log2"]], "torch._foreach_round_": [[653, "torch-foreach-round"]], "torch._foreach_log1p_": [[644, "torch-foreach-log1p"]], "torch.angle": [[685, "torch-angle"]], "torch._foreach_trunc": [[664, "torch-foreach-trunc"]], "torch.all": [[680, "torch-all"]], "torch.addcmul": [[675, "torch-addcmul"]], "torch._foreach_sin_": [[657, "torch-foreach-sin"]], "torch._foreach_log": [[640, "torch-foreach-log"]], "torch._foreach_sin": [[656, "torch-foreach-sin"]], "torch._foreach_log_": [[647, "torch-foreach-log"]], "torch.allclose": [[681, "torch-allclose"]], "torch._foreach_sqrt_": [[661, "torch-foreach-sqrt"]], "torch.amin": [[683, "torch-amin"]], "torch.abs": [[668, "torch-abs"]], "torch._foreach_log1p": [[643, "torch-foreach-log1p"]], "torch._foreach_sqrt": [[660, "torch-foreach-sqrt"]], "torch._foreach_tan_": [[663, "torch-foreach-tan"]], "torch.absolute": [[669, "torch-absolute"]], "torch.addr": [[678, "torch-addr"]], "torch._foreach_sigmoid": [[654, "torch-foreach-sigmoid"]], "torch.addmm": [[676, "torch-addmm"]], "torch._foreach_lgamma": [[638, "torch-foreach-lgamma"]], "torch._foreach_log2": [[645, "torch-foreach-log2"]], "torch._logging.set_logs": [[667, "torch-logging-set-logs"]], "torch._foreach_log10_": [[642, "torch-foreach-log10"]], "torch._foreach_neg": [[648, "torch-foreach-neg"]], "torch.aminmax": [[684, "torch-aminmax"]], "torch.addcdiv": [[674, "torch-addcdiv"]], "torch.addmv": [[677, "torch-addmv"]], "torch._foreach_neg_": [[649, "torch-foreach-neg"]], "torch._foreach_round": [[652, "torch-foreach-round"]], "torch._foreach_tan": [[662, "torch-foreach-tan"]], "torch.acos": [[670, "torch-acos"]], "torch._foreach_zero_": [[666, "torch-foreach-zero"]], "torch._foreach_sinh": [[658, "torch-foreach-sinh"]], "torch.add": [[672, "torch-add"]], "torch.optim": [[1914, "module-torch.optim"]], "How to use an optimizer": [[1914, "how-to-use-an-optimizer"]], "Constructing it": [[1914, "constructing-it"]], "Per-parameter options": [[1914, "per-parameter-options"]], "Taking an optimization step": [[1914, "taking-an-optimization-step"]], "optimizer.step()": [[1914, "optimizer-step"]], "optimizer.step(closure)": [[1914, "optimizer-step-closure"]], "Base class": [[1914, "base-class"]], "Algorithms": [[1914, "algorithms"]], "How to adjust learning rate": [[1914, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1914, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1914, "constructing-averaged-models"]], "Custom averaging strategies": [[1914, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1914, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1914, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1914, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1914, "putting-it-all-together-ema"]], "torch.utils.tensorboard": [[1932, "module-torch.utils.tensorboard"]], "ONNX supported TorchScript operators": [[1913, "onnx-supported-torchscript-operators"]], "Supported operators": [[1913, "supported-operators"]], "ONNX support for TorchScript operators": [[1913, "id1"]], "Unsupported operators": [[1913, "unsupported-operators"], [1913, "id2"]], "Guards Overview": [[1949, "guards-overview"]], "Caching and Guards Overview": [[1949, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[1949, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[1949, "instructiontranslator"]], "Making Guards": [[1949, "making-guards"]], "Remote Reference Protocol": [[1925, "remote-reference-protocol"]], "Background": [[1925, "background"], [1924, "background"]], "Assumptions": [[1925, "assumptions"]], "RRef Lifetime": [[1925, "rref-lifetime"]], "Design Reasoning": [[1925, "design-reasoning"]], "Protocol Scenarios": [[1925, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1925, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1925, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1925, "owner-share-rref-with-user"]], "User Share RRef with User": [[1925, "user-share-rref-with-user"]], "Fake tensor": [[1945, "fake-tensor"]], "Related work": [[1945, "related-work"]], "Overall architecture": [[1945, "overall-architecture"], [1944, "overall-architecture"]], "API: the important bits": [[1945, "api-the-important-bits"]], "Details": [[1945, "details"]], "About the tensor subclass": [[1945, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[1945, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[1945, "how-does-the-converter-work"]], "Performance characteristics": [[1945, "performance-characteristics"]], "Fake tensor of fake tensor?": [[1945, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[1945, "interaction-with-dynamic-shapes"]], "Other resources": [[1945, "other-resources"]], "torch.ao.ns._numeric_suite": [[1936, "torch-ao-ns-numeric-suite"]], "torch.onnx diagnostics": [[1912, "torch-onnx-diagnostics"]], "Diagnostic Rules": [[1912, "diagnostic-rules"]], "PyTorch 2.0 NNModule Support": [[1952, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[1952, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[1952, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[1952, "state-dict-hooks"]], "Writing Graph Transformations on ATen IR": [[1955, "writing-graph-transformations-on-aten-ir"]], "Passes": [[1955, "passes"]], "One-to-One Pass": [[1955, "one-to-one-pass"]], "One-to-X Pass": [[1955, "one-to-x-pass"]], "One-to-None Pass": [[1955, "one-to-none-pass"]], "Utilizing Local Information": [[1955, "utilizing-local-information"]], "Subgraph Rewriter": [[1955, "subgraph-rewriter"]], "Pass Manager": [[1955, "pass-manager"]], "Partitioner": [[1955, "partitioner"]], "Subgraph Matcher": [[1955, "subgraph-matcher"]], "Capability Based Partitioner": [[1955, "capability-based-partitioner"]], "Tensor Attributes": [[1930, "tensor-attributes"]], "torch.dtype": [[1930, "torch-dtype"]], "torch.device": [[1930, "torch-device"]], "torch.layout": [[1930, "torch-layout"]], "torch.memory_format": [[1930, "torch-memory-format"]], "PyTorch 2.0 Troubleshooting": [[1956, "pytorch-2-0-troubleshooting"]], "Title": [[1956, "id1"]], "Diagnosing Runtime Errors": [[1956, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[1956, "torchdynamo-errors"]], "Diagnosing TorchInductor Errors": [[1956, "diagnosing-torchinductor-errors"]], "Minifying TorchInductor Errors": [[1956, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[1956, "minifying-backend-compiler-errors"]], "Performance Profiling": [[1956, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[1956, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[1956, "torchinductor-debugging-using-torch-compile-debug"]], "Graph Breaks": [[1956, "graph-breaks"], [1946, "graph-breaks"]], "Identifying the Cause of a Graph Break": [[1956, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[1956, "excessive-recompilation"]], "Accuracy Debugging": [[1956, "accuracy-debugging"]], "torch.Storage": [[1929, "torch-storage"]], "PyTorch 2.0 Performance Dashboard": [[1953, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[1953, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[1953, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[1953, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[1953, "how-can-i-run-any-performance-test-locally"]], "Using a pretrained model": [[1948, "using-a-pretrained-model"]], "Next Steps": [[1948, "next-steps"]], "torch": [[1935, "module-torch"]], "Tensors": [[1935, "tensors"]], "Creation Ops": [[1935, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1935, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1935, "generators"]], "Random sampling": [[1935, "random-sampling"]], "In-place random sampling": [[1935, "in-place-random-sampling"]], "Quasi-random sampling": [[1935, "quasi-random-sampling"]], "Parallelism": [[1935, "parallelism"]], "Math operations": [[1935, "math-operations"]], "Pointwise Ops": [[1935, "pointwise-ops"]], "Reduction Ops": [[1935, "reduction-ops"]], "Comparison Ops": [[1935, "comparison-ops"]], "Spectral Ops": [[1935, "spectral-ops"]], "Other Operations": [[1935, "other-operations"]], "BLAS and LAPACK Operations": [[1935, "blas-and-lapack-operations"]], "Foreach Operations": [[1935, "foreach-operations"]], "Symbolic Numbers": [[1935, "symbolic-numbers"]], "Export Path": [[1935, "export-path"]], "Optimizations": [[1935, "optimizations"]], "Operator Tags": [[1935, "operator-tags"]], "TorchDynamo Deep Dive": [[1943, "torchdynamo-deep-dive"]], "TorchDynamo Internals": [[1943, "torchdynamo-internals"]], "What is a guard?": [[1943, "what-is-a-guard"]], "What is Dynamo doing?": [[1943, "what-is-dynamo-doing"]], "How to inspect artifacts generated by TorchDynamo?": [[1943, "how-to-inspect-artifacts-generated-by-torchdynamo"]], "Quantization Backend Configuration": [[1920, "quantization-backend-configuration"], [1918, "quantization-backend-configuration"]], "Default values for native configurations": [[1920, "default-values-for-native-configurations"]], "torch.Tensor": [[1933, "torch-tensor"]], "Data types": [[1933, "data-types"]], "Initializing and basic operations": [[1933, "initializing-and-basic-operations"]], "Tensor class reference": [[1933, "tensor-class-reference"]], "Best Practices for Backends": [[1940, "best-practices-for-backends"]], "x86 CPU": [[1940, "x86-cpu"]], "torch.special": [[1928, "torch-special"]], "IRs": [[1951, "irs"]], "Core Aten IR": [[1951, "core-aten-ir"]], "Prims IR": [[1951, "prims-ir"]], "Custom Backends": [[1942, "custom-backends"]], "Registering Custom Backends": [[1942, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[1942, "custom-backends-after-aotautograd"]], "Debugging Backend": [[1942, "debugging-backend"]], "Speedy Backend": [[1942, "speedy-backend"]], "Composable Backends": [[1942, "composable-backends"]], "Profiling to understand torch.compile performance": [[1954, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[1954, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[1954, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[1954, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[1954, "understanding-compilation-time"]], "Finding graph breaks": [[1954, "finding-graph-breaks"]], "Launch overhead": [[1954, "launch-overhead"]], "Quantization Accuracy Debugging": [[1919, "quantization-accuracy-debugging"], [1918, "quantization-accuracy-debugging"]], "Data insensitive error": [[1919, "data-insensitive-error"]], "General tips": [[1919, "general-tips"]], "Int8 quantization tips": [[1919, "int8-quantization-tips"]], "Data sensitive error": [[1919, "data-sensitive-error"]], "Implementation error": [[1919, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1919, "numerical-debugging-tooling-prototype"]], "Quantization API Reference": [[1921, "quantization-api-reference"], [1918, "quantization-api-reference"]], "torch.ao.quantization": [[1921, "torch-ao-quantization"]], "Top level APIs": [[1921, "top-level-apis"]], "Preparing model for quantization": [[1921, "preparing-model-for-quantization"]], "torch.ao.quantization.quantize_fx": [[1921, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1921, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1921, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1921, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[1921, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[1921, "module-torch.ao.quantization.pt2e"]], "torch (quantization related functions)": [[1921, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1921, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1921, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1921, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1921, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1921, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1921, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1921, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1921, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1921, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1921, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1921, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1921, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1921, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1921, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1921, "quantized-dtypes-and-quantization-schemes"]], "Pipeline Parallelism": [[1916, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1916, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1916, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1916, "pipe-apis-in-pytorch"]], "Skip connections": [[1916, "skip-connections"]], "torch.sparse": [[1927, "torch-sparse"]], "Why and when to use sparsity": [[1927, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1927, "functionality-overview"]], "Operator overview": [[1927, "operator-overview"]], "Sparse Semi-Structured Tensors": [[1927, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[1927, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[1927, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[1927, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[1927, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[1927, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1927, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1927, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1927, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1927, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1927, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1927, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1927, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1927, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1927, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1927, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1927, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1927, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1927, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1927, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[1927, "linear-algebra-operations"]], "Tensor methods and sparse": [[1927, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1927, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1927, "other-functions"]], "Unary functions": [[1927, "unary-functions"]], "TorchDynamo APIs for fine-grained tracing": [[1947, "torchdynamo-apis-for-fine-grained-tracing"]], "TorchDynamo APIs to control fine-grained tracing": [[1947, "id1"]], "torch._dynamo.disallow_in_graph": [[1947, "torch-dynamo-disallow-in-graph"]], "Limitations": [[1947, "limitations"], [1941, "limitations"], [1911, "limitations"]], "Understanding CUDA Memory Usage": [[1958, "understanding-cuda-memory-usage"]], "Generating a Snapshot": [[1958, "generating-a-snapshot"]], "Using the visualizer": [[1958, "using-the-visualizer"]], "Active Memory Timeline": [[1958, "active-memory-timeline"]], "Allocator State History": [[1958, "allocator-state-history"]], "Snapshot API Reference": [[1958, "snapshot-api-reference"]], "torch.testing": [[1934, "module-torch.testing"]], "Distributed RPC Framework": [[1923, "distributed-rpc-framework"]], "RPC": [[1923, "rpc"]], "TensorPipe Backend": [[1923, "tensorpipe-backend"]], "RRef": [[1923, "rref"]], "More Information about RRef": [[1923, null]], "RemoteModule": [[1923, "remotemodule"]], "Distributed Autograd Framework": [[1923, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1923, null]], "Distributed Optimizer": [[1923, "distributed-optimizer"], [1924, "distributed-optimizer"]], "torch.ao.ns._numeric_suite_fx": [[1937, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1937, "torch-ao-ns-fx-utils"]], "Tensor Views": [[1931, "tensor-views"]], "torch.overrides": [[1957, "torch-overrides"]], "torch.signal": [[1926, "module-torch.signal"]], "torch.signal.windows": [[1926, "module-torch.signal.windows"]], "TorchInductor GPU Profiling": [[1950, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[1950, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[1950, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[1950, "benchmark-individual-triton-kernel"]], "Quantization": [[1918, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1918, "introduction-to-quantization"]], "Quantization API Summary": [[1918, "quantization-api-summary"]], "Eager Mode Quantization": [[1918, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1918, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1918, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1918, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1918, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype) FX Graph Mode Quantization": [[1918, "prototype-fx-graph-mode-quantization"]], "Quantization Stack": [[1918, "quantization-stack"]], "Quantized Model": [[1918, "quantized-model"]], "Quantized Tensor": [[1918, "quantized-tensor"]], "Quantize and Dequantize": [[1918, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1918, "quantized-operators-modules"]], "Quantized Engine": [[1918, "quantized-engine"]], "Quantization Flow": [[1918, "quantization-flow"]], "Observer and FakeQuantize": [[1918, "observer-and-fakequantize"]], "General Quantization Flow": [[1918, "general-quantization-flow"]], "Quantization Support Matrix": [[1918, "quantization-support-matrix"]], "Quantization Mode Support": [[1918, "quantization-mode-support"]], "Quantization Flow Support": [[1918, "quantization-flow-support"]], "Backend/Hardware Support": [[1918, "backend-hardware-support"]], "Note for native CPU backends": [[1918, "note-for-native-cpu-backends"]], "Operator Support": [[1918, "operator-support"]], "Quantization Customizations": [[1918, "quantization-customizations"]], "Quantization Custom Module API": [[1918, "quantization-custom-module-api"]], "Best Practices": [[1918, "best-practices"]], "Common Errors": [[1918, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1918, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1918, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1918, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1918, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "torch.random": [[1922, "module-torch.random"]], "Distributed Autograd Design": [[1924, "distributed-autograd-design"]], "Autograd recording during the forward pass": [[1924, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1924, "distributed-autograd-context"]], "Distributed Backward Pass": [[1924, "distributed-backward-pass"]], "Computing dependencies": [[1924, "computing-dependencies"]], "FAST mode algorithm": [[1924, "fast-mode-algorithm"]], "SMART mode algorithm": [[1924, "smart-mode-algorithm"]], "Simple end to end example": [[1924, "simple-end-to-end-example"]], "torch.compiler API reference": [[1939, "torch-compiler-api-reference"]], "Dynamic shapes": [[1944, "dynamic-shapes"]], "Abridged public API": [[1944, "abridged-public-api"]], "The Guard Model": [[1944, "the-guard-model"]], "Abridged internal API": [[1944, "abridged-internal-api"]], "DimDynamic policy": [[1944, "dimdynamic-policy"]], "Unbacked SymInts": [[1944, "unbacked-symints"]], "CUDAGraph Trees": [[1941, "cudagraph-trees"]], "CUDAGraph Background": [[1941, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[1941, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[1941, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[1941, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[1941, "cudagraph-trees-integration"]], "torch.compiler": [[1938, "torch-compiler"]], "Getting Started for PyTorch Users": [[1938, null]], "Deep Dive for PyTorch Developers": [[1938, null]], "HowTo for PyTorch Backend Vendors": [[1938, null]], "torch.profiler": [[1917, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1917, "intel-instrumentation-and-tracing-technology-apis"]], "Does torch.compile support training?": [[1946, "does-torch-compile-support-training"]], "Do you support Distributed code?": [[1946, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[1946, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[1946, "why-is-my-code-crashing"]], "Why is compilation slow?": [[1946, "why-is-compilation-slow"]], "Why are you recompiling in production?": [[1946, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[1946, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[1946, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[1946, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[1946, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[1946, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[1946, "why-am-i-getting-ooms"]], "torch.func does not work with torch.compile": [[1946, "torch-func-does-not-work-with-torch-compile"]], "Applying a torch.func transform to a function handled with torch.compile": [[1946, "applying-a-torch-func-transform-to-a-function-handled-with-torch-compile"]], "Calling torch.func transform inside of a function handled with torch.compile": [[1946, "calling-torch-func-transform-inside-of-a-function-handled-with-torch-compile"]], "Which API to use for fine grain tracing?": [[1946, "which-api-to-use-for-fine-grain-tracing"]], "How do I graph break on a function?": [[1946, "how-do-i-graph-break-on-a-function"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo.disallow_in_graph": [[1946, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-disallow-in-graph"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo_skip": [[1946, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-skip"]], "torch.package": [[1915, "torch-package"]], "Packaging your first model": [[1915, "packaging-your-first-model"]], "How do I\u2026": [[1915, "how-do-i"]], "See what is inside a package?": [[1915, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1915, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1915, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1915, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1915, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1915, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1915, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1915, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1915, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1915, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1915, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1915, "package-a-torchscript-module"]], "Explanation": [[1915, "explanation"]], "torch.package Format Overview": [[1915, "torch-package-format-overview"]], "Framework files": [[1915, "framework-files"]], "User files": [[1915, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1915, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1915, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1915, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1915, "dependency-management"]], "intern": [[1915, "intern"]], "extern": [[1915, "extern"]], "mock": [[1915, "mock"]], "Refactoring": [[1915, "refactoring"]], "Patterns": [[1915, "patterns"]], "torch.package sharp edges": [[1915, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1915, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1915, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1915, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1915, "mangling"]], "Type Info": [[1959, "type-info"]], "torch.finfo": [[1959, "torch-finfo"]], "torch.iinfo": [[1959, "torch-iinfo"]], "torch.onnx": [[1911, "torch-onnx"]], "Example: AlexNet from PyTorch to ONNX": [[1911, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1911, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1911, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1911, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1911, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1911, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Differences in Operator Implementations": [[1911, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1911, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1911, "reads-gets"]], "Writes / Sets": [[1911, "writes-sets"]], "Adding support for operators": [[1911, "adding-support-for-operators"]], "ONNX exporter internals": [[1911, "onnx-exporter-internals"]], "ATen operators": [[1911, "aten-operators"]], "List of supported operators": [[1911, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1911, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1911, "torch-autograd-functions"]], "Static Symbolic Method": [[1911, "static-symbolic-method"]], "Inline Autograd Function": [[1911, "inline-autograd-function"]], "Custom operators": [[1911, "custom-operators"]], "ONNX-script functions": [[1911, "onnx-script-functions"]], "C++ Operators": [[1911, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1911, "discovering-all-unconvertible-aten-ops-at-once"]], "Contributing / developing": [[1911, "contributing-developing"]], "Classes": [[1911, "classes"]], "Preview: torch.onnx TorchDynamo Exporter": [[1911, "preview-torch-onnx-torchdynamo-exporter"]], "torch.Tensor.trunc": [[588, "torch-tensor-trunc"]], "torch._foreach_expm1": [[632, "torch-foreach-expm1"]], "torch._foreach_ceil_": [[621, "torch-foreach-ceil"]], "torch.Tensor.xlogy_": [[609, "torch-tensor-xlogy"]], "torch._foreach_acos_": [[615, "torch-foreach-acos"]], "torch.Tensor.type_as": [[591, "torch-tensor-type-as"]], "torch.Tensor.view_as": [[605, "torch-tensor-view-as"]], "torch._foreach_abs_": [[613, "torch-foreach-abs"]], "torch._foreach_acos": [[614, "torch-foreach-acos"]], "torch._foreach_erfc_": [[629, "torch-foreach-erfc"]], "torch._foreach_frac": [[636, "torch-foreach-frac"]], "torch._foreach_asin": [[616, "torch-foreach-asin"]], "torch.Tensor.unsqueeze_": [[599, "torch-tensor-unsqueeze"]], "torch.Tensor.uniform_": [[595, "torch-tensor-uniform"]], "torch.Tensor.unsqueeze": [[598, "torch-tensor-unsqueeze"]], "torch.Tensor.var": [[602, "torch-tensor-var"]], "torch._foreach_atan_": [[619, "torch-foreach-atan"]], "torch._foreach_exp_": [[631, "torch-foreach-exp"]], "torch._foreach_exp": [[630, "torch-foreach-exp"]], "torch.Tensor.unflatten": [[593, "torch-tensor-unflatten"]], "torch._foreach_cos": [[622, "torch-foreach-cos"]], "torch.Tensor.zero_": [[610, "torch-tensor-zero"]], "torch.Tensor.unbind": [[592, "torch-tensor-unbind"]], "torch._foreach_atan": [[618, "torch-foreach-atan"]], "torch.Tensor.unfold": [[594, "torch-tensor-unfold"]], "torch._foreach_cosh": [[624, "torch-foreach-cosh"]], "torch.Tensor.unique_consecutive": [[597, "torch-tensor-unique-consecutive"]], "torch.Tensor.trunc_": [[589, "torch-tensor-trunc"]], "torch.Tensor.vsplit": [[606, "torch-tensor-vsplit"]], "torch._foreach_erf_": [[627, "torch-foreach-erf"]], "torch.Tensor.view": [[604, "torch-tensor-view"]], "torch._assert": [[611, "torch-assert"]], "torch._foreach_asin_": [[617, "torch-foreach-asin"]], "torch.Tensor.type": [[590, "torch-tensor-type"]], "torch._foreach_cosh_": [[625, "torch-foreach-cosh"]], "torch.Tensor.unique": [[596, "torch-tensor-unique"]], "torch.Tensor.vdot": [[603, "torch-tensor-vdot"]], "torch.Tensor.xlogy": [[608, "torch-tensor-xlogy"]], "torch._foreach_expm1_": [[633, "torch-foreach-expm1"]], "torch.Tensor.where": [[607, "torch-tensor-where"]], "torch._foreach_floor": [[634, "torch-foreach-floor"]], "torch._foreach_abs": [[612, "torch-foreach-abs"]], "torch._foreach_cos_": [[623, "torch-foreach-cos"]], "torch._foreach_erf": [[626, "torch-foreach-erf"]], "torch.Tensor.untyped_storage": [[600, "torch-tensor-untyped-storage"]], "torch._foreach_floor_": [[635, "torch-foreach-floor"]], "torch._foreach_ceil": [[620, "torch-foreach-ceil"]], "torch._foreach_erfc": [[628, "torch-foreach-erfc"]], "torch.Tensor.values": [[601, "torch-tensor-values"]], "torch.Tensor.to": [[567, "torch-tensor-to"]], "torch.Tensor.take": [[559, "torch-tensor-take"]], "torch.Tensor.to_sparse_coo": [[573, "torch-tensor-to-sparse-coo"]], "torch.Tensor.t": [[557, "torch-tensor-t"]], "torch.Tensor.stft": [[543, "torch-tensor-stft"]], "torch.Tensor.transpose": [[579, "torch-tensor-transpose"]], "torch.Tensor.to_sparse": [[570, "torch-tensor-to-sparse"]], "torch.Tensor.subtract_": [[551, "torch-tensor-subtract"]], "torch.Tensor.topk": [[577, "torch-tensor-topk"]], "torch.Tensor.triu": [[584, "torch-tensor-triu"]], "torch.Tensor.sub_": [[549, "torch-tensor-sub"]], "torch.Tensor.triu_": [[585, "torch-tensor-triu"]], "torch.Tensor.to_sparse_csc": [[574, "torch-tensor-to-sparse-csc"]], "torch.Tensor.tan": [[561, "torch-tensor-tan"]], "torch.Tensor.tanh": [[563, "torch-tensor-tanh"]], "torch.Tensor.svd": [[554, "torch-tensor-svd"]], "torch.Tensor.tril_": [[583, "torch-tensor-tril"]], "torch.Tensor.tensor_split": [[565, "torch-tensor-tensor-split"]], "torch.Tensor.swapaxes": [[555, "torch-tensor-swapaxes"]], "torch.Tensor.tril": [[582, "torch-tensor-tril"]], "torch.Tensor.true_divide": [[586, "torch-tensor-true-divide"]], "torch.Tensor.storage": [[544, "torch-tensor-storage"]], "torch.Tensor.tolist": [[576, "torch-tensor-tolist"]], "torch.Tensor.tanh_": [[564, "torch-tensor-tanh"]], "torch.Tensor.transpose_": [[580, "torch-tensor-transpose"]], "torch.Tensor.sum": [[552, "torch-tensor-sum"]], "torch.Tensor.squeeze_": [[540, "torch-tensor-squeeze"]], "torch.Tensor.to_sparse_csr": [[575, "torch-tensor-to-sparse-csr"]], "torch.Tensor.squeeze": [[539, "torch-tensor-squeeze"]], "torch.Tensor.tan_": [[562, "torch-tensor-tan"]], "torch.Tensor.sub": [[548, "torch-tensor-sub"]], "torch.Tensor.to_dense": [[568, "torch-tensor-to-dense"]], "torch.Tensor.std": [[542, "torch-tensor-std"]], "torch.Tensor.take_along_dim": [[560, "torch-tensor-take-along-dim"]], "torch.Tensor.true_divide_": [[587, "torch-tensor-true-divide"]], "torch.Tensor.subtract": [[550, "torch-tensor-subtract"]], "torch.Tensor.sum_to_size": [[553, "torch-tensor-sum-to-size"]], "torch.Tensor.sspaddmm": [[541, "torch-tensor-sspaddmm"]], "torch.Tensor.t_": [[558, "torch-tensor-t"]], "torch.Tensor.stride": [[547, "torch-tensor-stride"]], "torch.Tensor.triangular_solve": [[581, "torch-tensor-triangular-solve"]], "torch.Tensor.storage_type": [[546, "torch-tensor-storage-type"]], "torch.Tensor.to_sparse_bsr": [[572, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.tile": [[566, "torch-tensor-tile"]], "torch.Tensor.to_sparse_bsc": [[571, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.storage_offset": [[545, "torch-tensor-storage-offset"]], "torch.Tensor.swapdims": [[556, "torch-tensor-swapdims"]], "torch.Tensor.to_mkldnn": [[569, "torch-tensor-to-mkldnn"]], "torch.Tensor.trace": [[578, "torch-tensor-trace"]], "torch.Tensor.rot90": [[493, "torch-tensor-rot90"]], "torch.Tensor.sparse_resize_": [[532, "torch-tensor-sparse-resize"]], "torch.Tensor.sin_": [[519, "torch-tensor-sin"]], "torch.Tensor.sinc": [[520, "torch-tensor-sinc"]], "torch.Tensor.sqrt_": [[536, "torch-tensor-sqrt"]], "torch.Tensor.square_": [[538, "torch-tensor-square"]], "torch.Tensor.select": [[505, "torch-tensor-select"]], "torch.Tensor.softmax": [[528, "torch-tensor-softmax"]], "torch.Tensor.scatter_reduce": [[503, "torch-tensor-scatter-reduce"]], "torch.Tensor.retains_grad": [[491, "torch-tensor-retains-grad"]], "torch.Tensor.slice_scatter": [[525, "torch-tensor-slice-scatter"]], "torch.Tensor.shape": [[510, "torch-tensor-shape"]], "torch.Tensor.row_indices": [[496, "torch-tensor-row-indices"]], "torch.Tensor.sinh_": [[523, "torch-tensor-sinh"]], "torch.Tensor.round": [[494, "torch-tensor-round"]], "torch.Tensor.signbit": [[517, "torch-tensor-signbit"]], "torch.Tensor.retain_grad": [[490, "torch-tensor-retain-grad"]], "torch.Tensor.sign": [[515, "torch-tensor-sign"]], "torch.Tensor.round_": [[495, "torch-tensor-round"]], "torch.Tensor.sgn": [[508, "torch-tensor-sgn"]], "torch.Tensor.sort": [[529, "torch-tensor-sort"]], "torch.Tensor.scatter_add_": [[502, "torch-tensor-scatter-add"]], "torch.Tensor.slogdet": [[526, "torch-tensor-slogdet"]], "torch.Tensor.sign_": [[516, "torch-tensor-sign"]], "torch.Tensor.sinc_": [[521, "torch-tensor-sinc"]], "torch.Tensor.sigmoid_": [[514, "torch-tensor-sigmoid"]], "torch.Tensor.sqrt": [[535, "torch-tensor-sqrt"]], "torch.Tensor.sparse_mask": [[531, "torch-tensor-sparse-mask"]], "torch.Tensor.scatter_reduce_": [[504, "torch-tensor-scatter-reduce"]], "torch.Tensor.sgn_": [[509, "torch-tensor-sgn"]], "torch.Tensor.set_": [[507, "torch-tensor-set"]], "torch.Tensor.sparse_resize_and_clear_": [[533, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.rsqrt_": [[498, "torch-tensor-rsqrt"]], "torch.Tensor.smm": [[527, "torch-tensor-smm"]], "torch.Tensor.scatter": [[499, "torch-tensor-scatter"]], "torch.Tensor.roll": [[492, "torch-tensor-roll"]], "torch.Tensor.sin": [[518, "torch-tensor-sin"]], "torch.Tensor.scatter_": [[500, "torch-tensor-scatter"]], "torch.Tensor.select_scatter": [[506, "torch-tensor-select-scatter"]], "torch.Tensor.sparse_dim": [[530, "torch-tensor-sparse-dim"]], "torch.Tensor.share_memory_": [[511, "torch-tensor-share-memory"]], "torch.Tensor.size": [[524, "torch-tensor-size"]], "torch.Tensor.short": [[512, "torch-tensor-short"]], "torch.Tensor.sinh": [[522, "torch-tensor-sinh"]], "torch.Tensor.square": [[537, "torch-tensor-square"]], "torch.Tensor.rsqrt": [[497, "torch-tensor-rsqrt"]], "torch.Tensor.scatter_add": [[501, "torch-tensor-scatter-add"]], "torch.Tensor.sigmoid": [[513, "torch-tensor-sigmoid"]], "torch.Tensor.split": [[534, "torch-tensor-split"]], "torch.Tensor.q_per_channel_axis": [[459, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.q_per_channel_scales": [[460, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.not_equal_": [[443, "torch-tensor-not-equal"]], "torch.Tensor.record_stream": [[473, "torch-tensor-record-stream"]], "torch.Tensor.reciprocal_": [[472, "torch-tensor-reciprocal"]], "torch.Tensor.renorm": [[478, "torch-tensor-renorm"]], "torch.Tensor.repeat": [[480, "torch-tensor-repeat"]], "torch.Tensor.resolve_conj": [[488, "torch-tensor-resolve-conj"]], "torch.Tensor.polygamma": [[452, "torch-tensor-polygamma"]], "torch.Tensor.normal_": [[441, "torch-tensor-normal"]], "torch.Tensor.permute": [[449, "torch-tensor-permute"]], "torch.Tensor.reshape_as": [[485, "torch-tensor-reshape-as"]], "torch.Tensor.real": [[470, "torch-tensor-real"]], "torch.Tensor.reshape": [[484, "torch-tensor-reshape"]], "torch.Tensor.rad2deg": [[467, "torch-tensor-rad2deg"]], "torch.Tensor.prod": [[457, "torch-tensor-prod"]], "torch.Tensor.q_zero_point": [[463, "torch-tensor-q-zero-point"]], "torch.Tensor.numel": [[444, "torch-tensor-numel"]], "torch.Tensor.numpy": [[445, "torch-tensor-numpy"]], "torch.Tensor.repeat_interleave": [[481, "torch-tensor-repeat-interleave"]], "torch.Tensor.polygamma_": [[453, "torch-tensor-polygamma"]], "torch.Tensor.resize_": [[486, "torch-tensor-resize"]], "torch.Tensor.pow": [[455, "torch-tensor-pow"]], "torch.Tensor.reciprocal": [[471, "torch-tensor-reciprocal"]], "torch.Tensor.register_post_accumulate_grad_hook": [[475, "torch-tensor-register-post-accumulate-grad-hook"]], "torch.Tensor.renorm_": [[479, "torch-tensor-renorm"]], "torch.Tensor.pinverse": [[451, "torch-tensor-pinverse"]], "torch.Tensor.requires_grad_": [[483, "torch-tensor-requires-grad"]], "torch.Tensor.ravel": [[469, "torch-tensor-ravel"]], "torch.Tensor.put_": [[458, "torch-tensor-put"]], "torch.Tensor.quantile": [[466, "torch-tensor-quantile"]], "torch.Tensor.qscheme": [[465, "torch-tensor-qscheme"]], "torch.Tensor.positive": [[454, "torch-tensor-positive"]], "torch.Tensor.remainder_": [[477, "torch-tensor-remainder"]], "torch.Tensor.requires_grad": [[482, "torch-tensor-requires-grad"]], "torch.Tensor.not_equal": [[442, "torch-tensor-not-equal"]], "torch.Tensor.register_hook": [[474, "torch-tensor-register-hook"]], "torch.Tensor.pow_": [[456, "torch-tensor-pow"]], "torch.Tensor.pin_memory": [[450, "torch-tensor-pin-memory"]], "torch.Tensor.remainder": [[476, "torch-tensor-remainder"]], "torch.Tensor.outer": [[448, "torch-tensor-outer"]], "torch.Tensor.q_per_channel_zero_points": [[461, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.random_": [[468, "torch-tensor-random"]], "torch.Tensor.orgqr": [[446, "torch-tensor-orgqr"]], "torch.Tensor.qr": [[464, "torch-tensor-qr"]], "torch.Tensor.resize_as_": [[487, "torch-tensor-resize-as"]], "torch.Tensor.q_scale": [[462, "torch-tensor-q-scale"]], "torch.Tensor.resolve_neg": [[489, "torch-tensor-resolve-neg"]], "torch.Tensor.ormqr": [[447, "torch-tensor-ormqr"]], "torch.Tensor.narrow": [[420, "torch-tensor-narrow"]], "torch.Tensor.negative": [[429, "torch-tensor-negative"]], "torch.Tensor.nbytes": [[422, "torch-tensor-nbytes"]], "torch.Tensor.ndim": [[423, "torch-tensor-ndim"]], "torch.Tensor.mul": [[406, "torch-tensor-mul"]], "torch.Tensor.mv": [[411, "torch-tensor-mv"]], "torch.Tensor.nanquantile": [[418, "torch-tensor-nanquantile"]], "torch.Tensor.mvlgamma_": [[413, "torch-tensor-mvlgamma"]], "torch.Tensor.movedim": [[404, "torch-tensor-movedim"]], "torch.Tensor.new_full": [[433, "torch-tensor-new-full"]], "torch.Tensor.ndimension": [[424, "torch-tensor-ndimension"]], "torch.Tensor.narrow_copy": [[421, "torch-tensor-narrow-copy"]], "torch.Tensor.new_zeros": [[436, "torch-tensor-new-zeros"]], "torch.Tensor.norm": [[440, "torch-tensor-norm"]], "torch.Tensor.nextafter": [[437, "torch-tensor-nextafter"]], "torch.Tensor.multinomial": [[408, "torch-tensor-multinomial"]], "torch.Tensor.maximum": [[396, "torch-tensor-maximum"]], "torch.Tensor.nanmean": [[416, "torch-tensor-nanmean"]], "torch.Tensor.ne_": [[426, "torch-tensor-ne"]], "torch.Tensor.nextafter_": [[438, "torch-tensor-nextafter"]], "torch.Tensor.multiply_": [[410, "torch-tensor-multiply"]], "torch.Tensor.matrix_power": [[394, "torch-tensor-matrix-power"]], "torch.Tensor.mvlgamma": [[412, "torch-tensor-mvlgamma"]], "torch.Tensor.new_empty": [[432, "torch-tensor-new-empty"]], "torch.Tensor.mode": [[402, "torch-tensor-mode"]], "torch.Tensor.nansum": [[419, "torch-tensor-nansum"]], "torch.Tensor.mm": [[401, "torch-tensor-mm"]], "torch.Tensor.matrix_exp": [[393, "torch-tensor-matrix-exp"]], "torch.Tensor.minimum": [[400, "torch-tensor-minimum"]], "torch.Tensor.matmul": [[392, "torch-tensor-matmul"]], "torch.Tensor.neg_": [[428, "torch-tensor-neg"]], "torch.Tensor.new_ones": [[434, "torch-tensor-new-ones"]], "torch.Tensor.mean": [[397, "torch-tensor-mean"]], "torch.Tensor.new_tensor": [[435, "torch-tensor-new-tensor"]], "torch.Tensor.multiply": [[409, "torch-tensor-multiply"]], "torch.Tensor.nanmedian": [[417, "torch-tensor-nanmedian"]], "torch.Tensor.moveaxis": [[403, "torch-tensor-moveaxis"]], "torch.Tensor.max": [[395, "torch-tensor-max"]], "torch.Tensor.mul_": [[407, "torch-tensor-mul"]], "torch.Tensor.min": [[399, "torch-tensor-min"]], "torch.Tensor.ne": [[425, "torch-tensor-ne"]], "torch.Tensor.nelement": [[431, "torch-tensor-nelement"]], "torch.Tensor.nan_to_num_": [[415, "torch-tensor-nan-to-num"]], "torch.Tensor.nonzero": [[439, "torch-tensor-nonzero"]], "torch.Tensor.negative_": [[430, "torch-tensor-negative"]], "torch.Tensor.neg": [[427, "torch-tensor-neg"]], "torch.Tensor.median": [[398, "torch-tensor-median"]], "torch.Tensor.nan_to_num": [[414, "torch-tensor-nan-to-num"]], "torch.Tensor.msort": [[405, "torch-tensor-msort"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.load_state_dict"]], "module": [[0, "module-torch.amp"], [0, "module-torch.cpu.amp"], [0, "module-torch.cuda.amp"], [1, "module-torch.autograd"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [12, "module-torch.__config__"], [15, "module-torch.cpu"], [16, "module-torch.cuda"], [17, "module-torch.cuda._sanitizer"], [20, "module-torch.utils.data"], [20, "module-torch.utils.data.datapipes"], [20, "module-torch.utils.data.datapipes.dataframe"], [20, "module-torch.utils.data.datapipes.iter"], [20, "module-torch.utils.data.datapipes.map"], [20, "module-torch.utils.data.datapipes.utils"], [23, "module-torch.distributed"], [23, "module-torch.distributed.algorithms"], [23, "module-torch.distributed.algorithms.ddp_comm_hooks"], [23, "module-torch.distributed.algorithms.model_averaging"], [23, "module-torch.distributed.elastic"], [23, "module-torch.distributed.elastic.utils"], [23, "module-torch.distributed.elastic.utils.data"], [23, "module-torch.distributed.launch"], [23, "module-torch.distributed.launcher"], [23, "module-torch.distributed.nn"], [23, "module-torch.distributed.nn.api"], [23, "module-torch.distributed.nn.jit"], [23, "module-torch.distributed.nn.jit.templates"], [23, "module-torch.distributed.pipeline"], [23, "module-torch.distributed.pipeline.sync"], [23, "module-torch.distributed.pipeline.sync.skip"], [23, "module-torch.distributed.tensor"], [25, "module-torch.distributed.checkpoint"], [27, "module-torch.distributed.optim"], [28, "module-torch.distributed.tensor.parallel"], [29, "module-torch.distributions"], [29, "module-torch.distributions.constraint_registry"], [29, "module-torch.distributions.constraints"], [29, "module-torch.distributions.kl"], [29, "module-torch.distributions.transforms"], [31, "module-torch.distributed.elastic.agent"], [31, "module-torch.distributed.elastic.agent.server"], [33, "module-torch.distributed.elastic.multiprocessing.errors"], [34, "module-torch.distributed.elastic.events"], [37, "module-torch.distributed.elastic.metrics"], [38, "module-torch.distributed.elastic.multiprocessing"], [40, "module-torch.distributed.elastic.rendezvous"], [40, "module-torch.distributed.elastic.rendezvous.registry"], [41, "module-torch.distributed.run"], [42, "module-torch.distributed.elastic.timer"], [44, "module-torch.export"], [45, "module-torch.fft"], [46, "module-torch.distributed.fsdp"], [48, "module-torch.func"], [53, "module-torch.futures"], [54, "module-torch.fx"], [54, "module-torch.fx.experimental"], [54, "module-torch.fx.experimental.migrate_gradual_types"], [54, "module-torch.fx.experimental.unification"], [54, "module-torch.fx.experimental.unification.multipledispatch"], [54, "module-torch.fx.passes"], [54, "module-torch.fx.passes.backends"], [54, "module-torch.fx.passes.dialect"], [54, "module-torch.fx.passes.dialect.common"], [54, "module-torch.fx.passes.infra"], [54, "module-torch.fx.passes.tests"], [54, "module-torch.fx.passes.utils"], [1868, "module-torch.hub"], [1870, "module-torch.jit"], [1870, "module-torch.jit.mobile"], [1871, "module-torch.jit.supported_ops"], [1875, "module-torch.jit.unsupported_tensor_ops"], [1876, "module-torch.utils.jit"], [1878, "module-torch.linalg"], [1879, "module-torch._logging"], [1880, "module-torch.masked"], [1880, "module-torch.masked.maskedtensor"], [1882, "module-torch.utils.model_zoo"], [1883, "module-torch.monitor"], [1884, "module-torch.mps"], [1885, "module-torch.multiprocessing"], [1888, "module-torch.nested"], [1889, "module-torch.nn"], [1889, "module-torch.nn.backends"], [1889, "module-torch.nn.modules"], [1889, "module-torch.nn.parallel"], [1889, "module-torch.nn.utils"], [1889, "module-torch.nn.utils.stateless"], [1911, "module-torch.onnx"], [1912, "module-torch.onnx._internal.diagnostics"], [1914, "module-torch.optim"], [1915, "module-torch.package"], [1915, "module-torch.package.analyze"], [1917, "module-torch.profiler"], [1918, "module-torch.ao"], [1918, "module-torch.ao.nn"], [1918, "module-torch.ao.nn.quantizable"], [1918, "module-torch.ao.nn.quantizable.modules"], [1918, "module-torch.ao.nn.quantized"], [1918, "module-torch.ao.nn.quantized.reference"], [1918, "module-torch.ao.nn.quantized.reference.modules"], [1918, "module-torch.ao.nn.sparse"], [1918, "module-torch.ao.nn.sparse.quantized"], [1918, "module-torch.ao.nn.sparse.quantized.dynamic"], [1918, "module-torch.ao.ns"], [1918, "module-torch.ao.ns.fx"], [1918, "module-torch.ao.pruning"], [1918, "module-torch.ao.pruning.scheduler"], [1918, "module-torch.ao.pruning.sparsifier"], [1918, "module-torch.ao.quantization"], [1918, "module-torch.ao.quantization.backend_config"], [1918, "module-torch.ao.quantization.fx"], [1921, "module-torch.ao.nn.intrinsic"], [1921, "module-torch.ao.nn.intrinsic.modules"], [1921, "module-torch.ao.nn.intrinsic.qat"], [1921, "module-torch.ao.nn.intrinsic.qat.modules"], [1921, "module-torch.ao.nn.intrinsic.quantized"], [1921, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1921, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1921, "module-torch.ao.nn.intrinsic.quantized.modules"], [1921, "module-torch.ao.nn.qat"], [1921, "module-torch.ao.nn.qat.dynamic"], [1921, "module-torch.ao.nn.qat.dynamic.modules"], [1921, "module-torch.ao.nn.qat.modules"], [1921, "module-torch.ao.nn.quantized.dynamic"], [1921, "module-torch.ao.nn.quantized.dynamic.modules"], [1921, "module-torch.ao.nn.quantized.functional"], [1921, "module-torch.ao.nn.quantized.modules"], [1921, "module-torch.ao.quantization.pt2e"], [1921, "module-torch.ao.quantization.pt2e.representation"], [1921, "module-torch.ao.quantization.quantizer"], [1921, "module-torch.nn.intrinsic"], [1921, "module-torch.nn.intrinsic.modules"], [1921, "module-torch.nn.intrinsic.qat"], [1921, "module-torch.nn.intrinsic.qat.modules"], [1921, "module-torch.nn.intrinsic.quantized"], [1921, "module-torch.nn.intrinsic.quantized.dynamic"], [1921, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1921, "module-torch.nn.intrinsic.quantized.modules"], [1921, "module-torch.nn.qat"], [1921, "module-torch.nn.qat.dynamic"], [1921, "module-torch.nn.qat.dynamic.modules"], [1921, "module-torch.nn.qat.modules"], [1921, "module-torch.nn.quantizable"], [1921, "module-torch.nn.quantizable.modules"], [1921, "module-torch.nn.quantized"], [1921, "module-torch.nn.quantized.dynamic"], [1921, "module-torch.nn.quantized.dynamic.modules"], [1921, "module-torch.nn.quantized.modules"], [1921, "module-torch.quantization"], [1921, "module-torch.quantization.fx"], [1922, "module-torch.random"], [1923, "module-torch.distributed.autograd"], [1923, "module-torch.distributed.rpc"], [1926, "module-torch.signal"], [1926, "module-torch.signal.windows"], [1927, "module-torch.sparse"], [1928, "module-torch.special"], [1932, "module-torch.utils.tensorboard"], [1934, "module-torch.testing"], [1935, "module-torch"], [1935, "module-torch.contrib"], [1935, "module-torch.utils.backcompat"], [1935, "module-torch.utils.hipify"], [1935, "module-torch.utils.model_dump"], [1935, "module-torch.utils.viz"], [1936, "module-torch.ao.ns._numeric_suite"], [1937, "module-torch.ao.ns._numeric_suite_fx"], [1939, "module-torch.compiler"], [1960, "module-torch.utils"]], "scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[0, "module-torch.amp"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "parallel_info() (in module torch.__config__)": [[12, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[12, "torch.__config__.show"]], "torch.__config__": [[12, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[15, "module-torch.cpu"]], "torch.cuda": [[16, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[17, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[17, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[20, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[20, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[20, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[20, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[20, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[20, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[20, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[20, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[20, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[20, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[20, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[20, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[20, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[20, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[20, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[20, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[20, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[20, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[20, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[20, "torch.utils.data.random_split"]], "torch.utils.data": [[20, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[20, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[20, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[20, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[20, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[20, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[21, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[23, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[23, "torch.distributed.DistBackendError"]], "disterror (class in torch.distributed)": [[23, "torch.distributed.DistError"]], "distnetworkerror (class in torch.distributed)": [[23, "torch.distributed.DistNetworkError"]], "diststoreerror (class in torch.distributed)": [[23, "torch.distributed.DistStoreError"]], "filestore (class in torch.distributed)": [[23, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[23, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[23, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[23, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[23, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[23, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[23, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[23, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[23, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[23, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[23, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[23, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[23, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[23, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[23, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[23, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[23, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[23, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[23, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[23, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[23, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[23, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[23, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[23, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[23, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[23, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[23, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[23, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[23, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[23, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[23, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[23, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[23, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[23, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[23, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[23, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[23, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[23, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[23, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[23, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[23, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[23, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[23, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[23, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[23, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[23, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[23, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[23, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[23, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[23, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[23, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[23, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[23, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[23, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[23, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[23, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[23, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[23, "module-torch.distributed"]], "torch.distributed.algorithms": [[23, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[23, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[23, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[23, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[23, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[23, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[23, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[23, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[23, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[23, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[23, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[23, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[23, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[23, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[23, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[23, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[23, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[24, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[24, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[24, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[24, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[24, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[24, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[24, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[24, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[24, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[25, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[25, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[25, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[25, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[25, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[27, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[27, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[27, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[28, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[28, "torch.distributed.tensor.parallel.parallelize_module"]], "pre_dp_module_transform() (in module torch.distributed.tensor.parallel.ddp)": [[28, "torch.distributed.tensor.parallel.ddp.pre_dp_module_transform"]], "torch.distributed.tensor.parallel": [[28, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[29, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[29, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[29, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[29, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[29, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[29, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[29, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[29, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[29, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[29, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[29, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[29, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[29, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[29, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[29, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[29, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[29, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[29, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[29, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[29, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[29, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[29, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[29, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[29, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[29, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[29, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[29, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[29, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[29, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[29, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[29, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[29, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[29, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[29, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[29, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[29, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[29, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[29, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[29, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[29, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[29, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[29, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[29, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[29, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[29, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[29, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[29, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[29, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[29, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[29, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[29, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[29, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[29, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[29, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[29, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[29, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[29, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[29, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[29, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[29, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[29, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[29, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[29, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[29, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[29, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[29, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[29, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[29, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[29, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[29, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[29, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[29, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[29, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[29, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[29, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[29, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[29, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[29, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[29, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[29, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[29, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[29, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[29, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[29, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[29, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[29, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[29, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[29, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[29, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[29, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[29, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[29, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[29, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[29, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[29, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[29, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[29, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[29, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[29, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[29, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[29, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[29, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[29, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[29, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[29, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[29, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[29, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[29, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[29, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[29, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[29, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[29, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[29, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[29, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[29, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[29, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[29, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[29, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[29, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[29, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[29, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[29, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[29, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[29, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[29, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[29, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[29, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[29, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[29, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[29, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[29, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[29, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[29, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[29, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[29, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[29, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[29, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[29, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[29, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[29, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[29, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[29, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[29, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[29, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[29, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[30, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[30, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[31, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[31, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[31, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[31, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[31, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[31, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[31, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[31, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[33, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[34, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[34, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[34, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[34, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[34, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[34, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[37, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[37, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[37, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[37, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[37, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[37, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[37, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[38, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[38, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[40, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[40, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[40, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[41, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[42, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[42, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[42, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[42, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[42, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[42, "module-torch.distributed.elastic.timer"]], "argumentkind (class in torch.export)": [[44, "torch.export.ArgumentKind"]], "argumentspec (class in torch.export)": [[44, "torch.export.ArgumentSpec"]], "constraint (class in torch.export)": [[44, "torch.export.Constraint"]], "exportbackwardsignature (class in torch.export)": [[44, "torch.export.ExportBackwardSignature"]], "exportgraphsignature (class in torch.export)": [[44, "torch.export.ExportGraphSignature"]], "exportedprogram (class in torch.export)": [[44, "torch.export.ExportedProgram"]], "modulecallentry (class in torch.export)": [[44, "torch.export.ModuleCallEntry"]], "modulecallsignature (class in torch.export)": [[44, "torch.export.ModuleCallSignature"]], "constrain_as_size() (in module torch.export)": [[44, "torch.export.constrain_as_size"]], "constrain_as_value() (in module torch.export)": [[44, "torch.export.constrain_as_value"]], "dynamic_dim() (in module torch.export)": [[44, "torch.export.dynamic_dim"]], "export() (in module torch.export)": [[44, "torch.export.export"]], "load() (in module torch.export)": [[44, "torch.export.load"]], "module() (torch.export.exportedprogram method)": [[44, "torch.export.ExportedProgram.module"]], "save() (in module torch.export)": [[44, "torch.export.save"]], "torch.export": [[44, "module-torch.export"]], "torch.fft": [[45, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[46, "module-torch.distributed.fsdp"]], "torch.func": [[48, "module-torch.func"]], "future (class in torch.futures)": [[53, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[53, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[53, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[53, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[53, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[53, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[53, "torch.futures.Future.then"]], "torch.futures": [[53, "module-torch.futures"]], "value() (torch.futures.future method)": [[53, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[53, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[53, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[54, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[54, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[54, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[54, "torch.fx.Node"]], "proxy (class in torch.fx)": [[54, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[54, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[54, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[54, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[54, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[54, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[54, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[54, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[54, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[54, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[54, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[54, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[54, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[54, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[54, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[54, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[54, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[54, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[54, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[54, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[54, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[54, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[54, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[54, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[54, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[54, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[54, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[54, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[54, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[54, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[54, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[54, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[54, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[54, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[54, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[54, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[54, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[54, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[54, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[54, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[54, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[54, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[54, "module-torch.fx"]], "torch.fx.experimental": [[54, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[54, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[54, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[54, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[54, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[54, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[54, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[54, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[54, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[54, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[54, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[54, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[54, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[54, "torch.fx.wrap"]], "generator (class in torch)": [[76, "torch.Generator"]], "device (torch.generator attribute)": [[76, "torch.Generator.device"]], "get_state() (torch.generator method)": [[76, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[76, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[76, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[76, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[76, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[77, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[78, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[79, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[80, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[81, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[82, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[83, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[84, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[85, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[86, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[87, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[88, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[89, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[90, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[91, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[92, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[93, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[94, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[95, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[96, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[97, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[98, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[99, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[100, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[101, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[102, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[103, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[104, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[105, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[106, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[107, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[108, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[109, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[110, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[111, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[112, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[113, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[114, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[115, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[116, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[117, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[118, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[119, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[120, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[121, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[122, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[123, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[124, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[125, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[126, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[127, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[128, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[129, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[130, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[131, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[132, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[133, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[134, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[135, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[136, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[137, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[138, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[139, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[140, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[141, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[142, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[143, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[144, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[145, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[146, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[147, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[148, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[149, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[150, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[151, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[152, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[153, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[154, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[155, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[156, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[157, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[158, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[159, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[160, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[161, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[162, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[163, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[164, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[165, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[166, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[167, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[168, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[169, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[170, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[171, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[172, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[173, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[174, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[175, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[176, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[177, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[178, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[179, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[180, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[181, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[182, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[183, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[184, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[185, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[186, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[187, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[188, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[189, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[190, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[191, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[192, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[193, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[194, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[195, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[196, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[197, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[198, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[199, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[200, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[201, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[202, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[203, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[204, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[205, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[206, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[207, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[208, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[209, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[210, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[211, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[212, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[213, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[214, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[215, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[216, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[217, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[218, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[219, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[220, "torch.Tensor.dim"]], "dim_order() (torch.tensor method)": [[221, "torch.Tensor.dim_order"]], "dist() (torch.tensor method)": [[222, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[223, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[224, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[225, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[226, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[227, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[228, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[229, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[230, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[231, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[232, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[233, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[234, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[235, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[236, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[237, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[238, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[239, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[240, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[241, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[242, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[243, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[244, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[245, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[246, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[247, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[248, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[249, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[250, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[251, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[252, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[253, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[254, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[255, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[256, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[257, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[258, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[259, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[260, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[261, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[262, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[263, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[264, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[265, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[266, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[267, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[268, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[269, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[270, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[271, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[272, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[273, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[274, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[275, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[276, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[277, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[278, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[279, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[280, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[281, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[282, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[283, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[284, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[285, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[286, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[287, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[288, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[289, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[290, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[291, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[292, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[293, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[294, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[295, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[296, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[297, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[298, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[299, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[300, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[301, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[302, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[303, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[304, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[305, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[306, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[307, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[308, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[309, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[310, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[311, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[312, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[313, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[314, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[315, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[316, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[317, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[318, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[319, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[320, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[321, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[322, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[323, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[324, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[325, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[326, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[327, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[328, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[329, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[330, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[331, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[332, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[333, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[334, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[335, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[336, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[337, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[338, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[339, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[340, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[341, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[342, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[343, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[344, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[345, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[346, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[347, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[348, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[349, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[350, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[351, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[352, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[353, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[354, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[355, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[356, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[357, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[358, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[359, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[360, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[361, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[362, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[363, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[364, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[365, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[366, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[367, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[368, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[369, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[370, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[371, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[372, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[373, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[374, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[375, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[376, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[377, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[378, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[379, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[380, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[381, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[382, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[383, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[384, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[385, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[386, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[387, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[388, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[389, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[390, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[391, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[392, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[393, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[394, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[395, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[396, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[397, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[398, "torch.Tensor.median"]], "min() (torch.tensor method)": [[399, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[400, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[401, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[402, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[403, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[404, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[405, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[406, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[407, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[408, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[409, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[410, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[411, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[412, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[413, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[414, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[415, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[416, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[417, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[418, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[419, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[420, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[421, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[422, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[423, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[424, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[425, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[426, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[427, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[428, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[429, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[430, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[431, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[432, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[433, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[434, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[435, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[436, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[437, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[438, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[439, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[440, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[441, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[442, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[443, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[444, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[445, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[446, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[447, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[448, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[449, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[450, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[451, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[452, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[453, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[454, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[455, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[456, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[457, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[458, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[459, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[460, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[461, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[462, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[463, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[464, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[465, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[466, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[467, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[468, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[469, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[470, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[471, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[472, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[473, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[474, "torch.Tensor.register_hook"]], "register_post_accumulate_grad_hook() (torch.tensor method)": [[475, "torch.Tensor.register_post_accumulate_grad_hook"]], "remainder() (torch.tensor method)": [[476, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[477, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[478, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[479, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[480, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[481, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[482, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[483, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[484, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[485, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[486, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[487, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[488, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[489, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[490, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[491, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[492, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[493, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[494, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[495, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[496, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[497, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[498, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[499, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[500, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[501, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[502, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[503, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[504, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[505, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[506, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[507, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[508, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[509, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[510, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[511, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[512, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[513, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[514, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[515, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[516, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[517, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[518, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[519, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[520, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[521, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[522, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[523, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[524, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[525, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[526, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[527, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[528, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[529, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[530, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[531, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[532, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[533, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[534, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[535, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[536, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[537, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[538, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[539, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[540, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[541, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[542, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[543, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[544, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[545, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[546, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[547, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[548, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[549, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[550, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[551, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[552, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[553, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[554, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[555, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[556, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[557, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[558, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[559, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[560, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[561, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[562, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[563, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[564, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[565, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[566, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[567, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[568, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[569, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[570, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[571, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[572, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[573, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[574, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[575, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[576, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[577, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[578, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[579, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[580, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[581, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[582, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[583, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[584, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[585, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[586, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[587, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[588, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[589, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[590, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[591, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[592, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[593, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[594, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[595, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[596, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[597, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[598, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[599, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[600, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[601, "torch.Tensor.values"]], "var() (torch.tensor method)": [[602, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[603, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[604, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[605, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[606, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[607, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[608, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[609, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[610, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[611, "torch._assert"]], "_foreach_abs() (in module torch)": [[612, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[613, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[614, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[615, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[616, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[617, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[618, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[619, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[620, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[621, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[622, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[623, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[624, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[625, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[626, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[627, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[628, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[629, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[630, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[631, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[632, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[633, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[634, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[635, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[636, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[637, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[638, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[639, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[640, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[641, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[642, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[643, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[644, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[645, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[646, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[647, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[648, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[649, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[650, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[651, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[652, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[653, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[654, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[655, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[656, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[657, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[658, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[659, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[660, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[661, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[662, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[663, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[664, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[665, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[666, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[667, "torch._logging.set_logs"]], "abs() (in module torch)": [[668, "torch.abs"]], "absolute() (in module torch)": [[669, "torch.absolute"]], "acos() (in module torch)": [[670, "torch.acos"]], "acosh() (in module torch)": [[671, "torch.acosh"]], "add() (in module torch)": [[672, "torch.add"]], "addbmm() (in module torch)": [[673, "torch.addbmm"]], "addcdiv() (in module torch)": [[674, "torch.addcdiv"]], "addcmul() (in module torch)": [[675, "torch.addcmul"]], "addmm() (in module torch)": [[676, "torch.addmm"]], "addmv() (in module torch)": [[677, "torch.addmv"]], "addr() (in module torch)": [[678, "torch.addr"]], "adjoint() (in module torch)": [[679, "torch.adjoint"]], "all() (in module torch)": [[680, "torch.all"]], "allclose() (in module torch)": [[681, "torch.allclose"]], "amax() (in module torch)": [[682, "torch.amax"]], "amin() (in module torch)": [[683, "torch.amin"]], "aminmax() (in module torch)": [[684, "torch.aminmax"]], "angle() (in module torch)": [[685, "torch.angle"]], "any() (in module torch)": [[686, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[687, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[688, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[689, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[690, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[691, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[692, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[693, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[694, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[695, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[699, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[700, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[701, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[702, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[703, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[704, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[705, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[706, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[707, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[710, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[711, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[712, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[713, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[714, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[715, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[716, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[717, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[718, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[719, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[719, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[720, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[721, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[722, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[722, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[722, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[723, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[724, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[725, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[725, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[726, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[726, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[727, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[727, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[728, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[729, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[730, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[731, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[732, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[733, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[743, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[743, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[747, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[748, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[749, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[750, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[751, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[751, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[751, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[752, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[753, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[754, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[755, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[756, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[757, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[758, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[759, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[760, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[761, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[775, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[776, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[777, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[778, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[779, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[779, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[779, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[779, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[779, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[779, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[779, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[780, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[781, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[781, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[781, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[782, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[783, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[783, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[783, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[783, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[784, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[785, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[786, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[787, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[788, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[789, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[790, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[791, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[792, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[793, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[794, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[801, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[802, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[802, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[802, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[802, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[802, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[803, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[803, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[803, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[803, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[804, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[804, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[804, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[805, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[806, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[807, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[807, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[807, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[807, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[808, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[809, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[810, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[811, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[811, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[811, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[812, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[812, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[813, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[814, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[825, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[826, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[827, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[828, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[829, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[830, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[831, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[832, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[833, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[834, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[835, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[836, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[841, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[841, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[841, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[841, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[841, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[841, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[841, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[841, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[842, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[843, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[844, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[845, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[846, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[847, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[848, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[849, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[850, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[851, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[852, "torch.arange"]], "arccos() (in module torch)": [[853, "torch.arccos"]], "arccosh() (in module torch)": [[854, "torch.arccosh"]], "arcsin() (in module torch)": [[855, "torch.arcsin"]], "arcsinh() (in module torch)": [[856, "torch.arcsinh"]], "arctan() (in module torch)": [[857, "torch.arctan"]], "arctan2() (in module torch)": [[858, "torch.arctan2"]], "arctanh() (in module torch)": [[859, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[860, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[861, "torch.argmax"]], "argmin() (in module torch)": [[862, "torch.argmin"]], "argsort() (in module torch)": [[863, "torch.argsort"]], "argwhere() (in module torch)": [[864, "torch.argwhere"]], "as_strided() (in module torch)": [[865, "torch.as_strided"]], "as_tensor() (in module torch)": [[866, "torch.as_tensor"]], "asarray() (in module torch)": [[867, "torch.asarray"]], "asin() (in module torch)": [[868, "torch.asin"]], "asinh() (in module torch)": [[869, "torch.asinh"]], "atan() (in module torch)": [[870, "torch.atan"]], "atan2() (in module torch)": [[871, "torch.atan2"]], "atanh() (in module torch)": [[872, "torch.atanh"]], "atleast_1d() (in module torch)": [[873, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[874, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[875, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[876, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[877, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[878, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[879, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[880, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[881, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[882, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[883, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[884, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[885, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[886, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[887, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[888, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[889, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[890, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[891, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[892, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[893, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[894, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[895, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[896, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[897, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[898, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[899, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[900, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[901, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[902, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[903, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[904, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[905, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[906, "torch.autograd.profiler.profile.total_average"]], "baddbmm() (in module torch)": [[907, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[908, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[909, "torch.bernoulli"]], "bincount() (in module torch)": [[910, "torch.bincount"]], "bitwise_and() (in module torch)": [[911, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[912, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[913, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[914, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[915, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[916, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[917, "torch.blackman_window"]], "block_diag() (in module torch)": [[918, "torch.block_diag"]], "bmm() (in module torch)": [[919, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[920, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[921, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[922, "torch.broadcast_to"]], "bucketize() (in module torch)": [[923, "torch.bucketize"]], "can_cast() (in module torch)": [[924, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[925, "torch.cartesian_prod"]], "cat() (in module torch)": [[926, "torch.cat"]], "cdist() (in module torch)": [[927, "torch.cdist"]], "ceil() (in module torch)": [[928, "torch.ceil"]], "chain_matmul() (in module torch)": [[929, "torch.chain_matmul"]], "cholesky() (in module torch)": [[930, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[931, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[932, "torch.cholesky_solve"]], "chunk() (in module torch)": [[933, "torch.chunk"]], "clamp() (in module torch)": [[934, "torch.clamp"]], "clip() (in module torch)": [[935, "torch.clip"]], "clone() (in module torch)": [[936, "torch.clone"]], "column_stack() (in module torch)": [[937, "torch.column_stack"]], "combinations() (in module torch)": [[938, "torch.combinations"]], "compile() (in module torch)": [[939, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[940, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[941, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[942, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[943, "torch.compiler.compile"]], "disable() (in module torch.compiler)": [[944, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[945, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[946, "torch.compiler.reset"]], "complex() (in module torch)": [[947, "torch.complex"]], "concat() (in module torch)": [[948, "torch.concat"]], "concatenate() (in module torch)": [[949, "torch.concatenate"]], "conj() (in module torch)": [[950, "torch.conj"]], "conj_physical() (in module torch)": [[951, "torch.conj_physical"]], "copysign() (in module torch)": [[952, "torch.copysign"]], "corrcoef() (in module torch)": [[953, "torch.corrcoef"]], "cos() (in module torch)": [[954, "torch.cos"]], "cosh() (in module torch)": [[955, "torch.cosh"]], "count_nonzero() (in module torch)": [[956, "torch.count_nonzero"]], "cov() (in module torch)": [[957, "torch.cov"]], "stream (class in torch.cpu)": [[958, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[959, "torch.cpu.StreamContext"]], "current_stream() (in module torch.cpu)": [[960, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[961, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[962, "torch.cpu.is_available"]], "stream() (in module torch.cpu)": [[963, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[964, "torch.cpu.synchronize"]], "cross() (in module torch)": [[965, "torch.cross"]], "cudagraph (class in torch.cuda)": [[966, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[966, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[966, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[966, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[966, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[966, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[966, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[966, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[967, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[968, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[968, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[968, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[968, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[968, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[968, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[968, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[968, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[969, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[969, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[969, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[969, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[969, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[969, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[970, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[971, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[971, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[971, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[971, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[971, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[971, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[972, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[973, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[974, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[975, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[976, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[977, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[978, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[979, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[980, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[981, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[982, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[983, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[984, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[985, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[986, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[987, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[988, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[989, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[990, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[991, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[992, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[993, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[994, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[995, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[996, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[997, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[998, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[999, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1000, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1001, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1002, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1003, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1004, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1005, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1006, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1007, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1008, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1009, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1010, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1011, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1012, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1013, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1014, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1015, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1016, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1017, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1018, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1019, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1020, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1021, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1022, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1023, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1024, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1025, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1026, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1027, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1028, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1029, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1030, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1031, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1032, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1033, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1034, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1035, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1036, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1037, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1038, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1039, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1040, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1041, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1042, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1043, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1044, "torch.cummax"]], "cummin() (in module torch)": [[1045, "torch.cummin"]], "cumprod() (in module torch)": [[1046, "torch.cumprod"]], "cumsum() (in module torch)": [[1047, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1048, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1049, "torch.deg2rad"]], "dequantize() (in module torch)": [[1050, "torch.dequantize"]], "det() (in module torch)": [[1051, "torch.det"]], "diag() (in module torch)": [[1052, "torch.diag"]], "diag_embed() (in module torch)": [[1053, "torch.diag_embed"]], "diagflat() (in module torch)": [[1054, "torch.diagflat"]], "diagonal() (in module torch)": [[1055, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1056, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1057, "torch.diff"]], "digamma() (in module torch)": [[1058, "torch.digamma"]], "dist() (in module torch)": [[1059, "torch.dist"]], "div() (in module torch)": [[1060, "torch.div"]], "divide() (in module torch)": [[1061, "torch.divide"]], "dot() (in module torch)": [[1062, "torch.dot"]], "dsplit() (in module torch)": [[1063, "torch.dsplit"]], "dstack() (in module torch)": [[1064, "torch.dstack"]], "einsum() (in module torch)": [[1065, "torch.einsum"]], "empty() (in module torch)": [[1066, "torch.empty"]], "empty_like() (in module torch)": [[1067, "torch.empty_like"]], "empty_strided() (in module torch)": [[1068, "torch.empty_strided"]], "enable_grad (class in torch)": [[1069, "torch.enable_grad"]], "eq() (in module torch)": [[1070, "torch.eq"]], "equal() (in module torch)": [[1071, "torch.equal"]], "erf() (in module torch)": [[1072, "torch.erf"]], "erfc() (in module torch)": [[1073, "torch.erfc"]], "erfinv() (in module torch)": [[1074, "torch.erfinv"]], "exp() (in module torch)": [[1075, "torch.exp"]], "exp2() (in module torch)": [[1076, "torch.exp2"]], "expm1() (in module torch)": [[1077, "torch.expm1"]], "eye() (in module torch)": [[1078, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1079, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1080, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1081, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1082, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1083, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1084, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1085, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1086, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1087, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1088, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1089, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1090, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1091, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1092, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1093, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1094, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1095, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1096, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1097, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1098, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1099, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1100, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1101, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1102, "torch.fft.rfftn"]], "fix() (in module torch)": [[1103, "torch.fix"]], "flatten() (in module torch)": [[1104, "torch.flatten"]], "flip() (in module torch)": [[1105, "torch.flip"]], "fliplr() (in module torch)": [[1106, "torch.fliplr"]], "flipud() (in module torch)": [[1107, "torch.flipud"]], "float_power() (in module torch)": [[1108, "torch.float_power"]], "floor() (in module torch)": [[1109, "torch.floor"]], "floor_divide() (in module torch)": [[1110, "torch.floor_divide"]], "fmax() (in module torch)": [[1111, "torch.fmax"]], "fmin() (in module torch)": [[1112, "torch.fmin"]], "fmod() (in module torch)": [[1113, "torch.fmod"]], "frac() (in module torch)": [[1114, "torch.frac"]], "frexp() (in module torch)": [[1115, "torch.frexp"]], "from_dlpack() (in module torch)": [[1116, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1117, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1118, "torch.frombuffer"]], "full() (in module torch)": [[1119, "torch.full"]], "full_like() (in module torch)": [[1120, "torch.full_like"]], "functional_call() (in module torch.func)": [[1121, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1122, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1123, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1124, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1125, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1126, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1127, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1128, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1129, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1130, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1131, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1132, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1133, "torch.func.vmap"]], "gather() (in module torch)": [[1134, "torch.gather"]], "gcd() (in module torch)": [[1135, "torch.gcd"]], "ge() (in module torch)": [[1136, "torch.ge"]], "geqrf() (in module torch)": [[1137, "torch.geqrf"]], "ger() (in module torch)": [[1138, "torch.ger"]], "get_default_dtype() (in module torch)": [[1139, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1140, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1141, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1142, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1143, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1144, "torch.get_rng_state"]], "gradient() (in module torch)": [[1145, "torch.gradient"]], "greater() (in module torch)": [[1146, "torch.greater"]], "greater_equal() (in module torch)": [[1147, "torch.greater_equal"]], "gt() (in module torch)": [[1148, "torch.gt"]], "hamming_window() (in module torch)": [[1149, "torch.hamming_window"]], "hann_window() (in module torch)": [[1150, "torch.hann_window"]], "heaviside() (in module torch)": [[1151, "torch.heaviside"]], "histc() (in module torch)": [[1152, "torch.histc"]], "histogram() (in module torch)": [[1153, "torch.histogram"]], "histogramdd() (in module torch)": [[1154, "torch.histogramdd"]], "hsplit() (in module torch)": [[1155, "torch.hsplit"]], "hspmm() (in module torch)": [[1156, "torch.hspmm"]], "hstack() (in module torch)": [[1157, "torch.hstack"]], "hypot() (in module torch)": [[1158, "torch.hypot"]], "i0() (in module torch)": [[1159, "torch.i0"]], "igamma() (in module torch)": [[1160, "torch.igamma"]], "igammac() (in module torch)": [[1161, "torch.igammac"]], "imag() (in module torch)": [[1162, "torch.imag"]], "index_add() (in module torch)": [[1163, "torch.index_add"]], "index_copy() (in module torch)": [[1164, "torch.index_copy"]], "index_reduce() (in module torch)": [[1165, "torch.index_reduce"]], "index_select() (in module torch)": [[1166, "torch.index_select"]], "inference_mode (class in torch)": [[1167, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1168, "torch.initial_seed"]], "inner() (in module torch)": [[1169, "torch.inner"]], "inverse() (in module torch)": [[1170, "torch.inverse"]], "is_complex() (in module torch)": [[1171, "torch.is_complex"]], "is_conj() (in module torch)": [[1172, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1173, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1174, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1175, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1176, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1177, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1178, "torch.is_storage"]], "is_tensor() (in module torch)": [[1179, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1180, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1181, "torch.isclose"]], "isfinite() (in module torch)": [[1182, "torch.isfinite"]], "isin() (in module torch)": [[1183, "torch.isin"]], "isinf() (in module torch)": [[1184, "torch.isinf"]], "isnan() (in module torch)": [[1185, "torch.isnan"]], "isneginf() (in module torch)": [[1186, "torch.isneginf"]], "isposinf() (in module torch)": [[1187, "torch.isposinf"]], "isreal() (in module torch)": [[1188, "torch.isreal"]], "istft() (in module torch)": [[1189, "torch.istft"]], "attribute (class in torch.jit)": [[1190, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1190, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1190, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1190, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1190, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1191, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1191, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1191, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1191, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1192, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1192, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1192, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1192, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1192, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1192, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1193, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1194, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1195, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1196, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1197, "torch.jit.ignore"]], "isinstance() (in module torch.jit)": [[1198, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1199, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1200, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1201, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1202, "torch.jit.save"]], "script() (in module torch.jit)": [[1203, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1204, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1205, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1206, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1207, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1208, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1209, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1210, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1211, "torch.kaiser_window"]], "kron() (in module torch)": [[1212, "torch.kron"]], "kthvalue() (in module torch)": [[1213, "torch.kthvalue"]], "lcm() (in module torch)": [[1214, "torch.lcm"]], "ldexp() (in module torch)": [[1215, "torch.ldexp"]], "le() (in module torch)": [[1216, "torch.le"]], "lerp() (in module torch)": [[1217, "torch.lerp"]], "less() (in module torch)": [[1218, "torch.less"]], "less_equal() (in module torch)": [[1219, "torch.less_equal"]], "lgamma() (in module torch)": [[1220, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1221, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1222, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1223, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1224, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1225, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1226, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1227, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1228, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1229, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1230, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1231, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1232, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1233, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1234, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1235, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1236, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1237, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1238, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1239, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1240, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1241, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1242, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1243, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1244, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1245, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1246, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1247, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1248, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1249, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1250, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1251, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1252, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1253, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1254, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1255, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1256, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1257, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1258, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1259, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1260, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1261, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1262, "torch.linspace"]], "load() (in module torch)": [[1263, "torch.load"]], "lobpcg() (in module torch)": [[1264, "torch.lobpcg"]], "log() (in module torch)": [[1265, "torch.log"]], "log10() (in module torch)": [[1266, "torch.log10"]], "log1p() (in module torch)": [[1267, "torch.log1p"]], "log2() (in module torch)": [[1268, "torch.log2"]], "logaddexp() (in module torch)": [[1269, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1270, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1271, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1272, "torch.logdet"]], "logical_and() (in module torch)": [[1273, "torch.logical_and"]], "logical_not() (in module torch)": [[1274, "torch.logical_not"]], "logical_or() (in module torch)": [[1275, "torch.logical_or"]], "logical_xor() (in module torch)": [[1276, "torch.logical_xor"]], "logit() (in module torch)": [[1277, "torch.logit"]], "logspace() (in module torch)": [[1278, "torch.logspace"]], "logsumexp() (in module torch)": [[1279, "torch.logsumexp"]], "lt() (in module torch)": [[1280, "torch.lt"]], "lu() (in module torch)": [[1281, "torch.lu"]], "lu_solve() (in module torch)": [[1282, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1283, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1284, "torch.manual_seed"]], "masked_select() (in module torch)": [[1285, "torch.masked_select"]], "matmul() (in module torch)": [[1286, "torch.matmul"]], "matrix_exp() (in module torch)": [[1287, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1288, "torch.matrix_power"]], "max() (in module torch)": [[1289, "torch.max"]], "maximum() (in module torch)": [[1290, "torch.maximum"]], "mean() (in module torch)": [[1291, "torch.mean"]], "median() (in module torch)": [[1292, "torch.median"]], "meshgrid() (in module torch)": [[1293, "torch.meshgrid"]], "min() (in module torch)": [[1294, "torch.min"]], "minimum() (in module torch)": [[1295, "torch.minimum"]], "mm() (in module torch)": [[1296, "torch.mm"]], "mode() (in module torch)": [[1297, "torch.mode"]], "moveaxis() (in module torch)": [[1298, "torch.moveaxis"]], "movedim() (in module torch)": [[1299, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1300, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1301, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1302, "torch.mps.empty_cache"]], "event (class in torch.mps.event)": [[1303, "torch.mps.event.Event"]], "elapsed_time() (torch.mps.event.event method)": [[1303, "torch.mps.event.Event.elapsed_time"]], "query() (torch.mps.event.event method)": [[1303, "torch.mps.event.Event.query"]], "record() (torch.mps.event.event method)": [[1303, "torch.mps.event.Event.record"]], "synchronize() (torch.mps.event.event method)": [[1303, "torch.mps.event.Event.synchronize"]], "wait() (torch.mps.event.event method)": [[1303, "torch.mps.event.Event.wait"]], "get_rng_state() (in module torch.mps)": [[1304, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1305, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1306, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1307, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1308, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1309, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1310, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1311, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1312, "torch.mps.synchronize"]], "msort() (in module torch)": [[1313, "torch.msort"]], "mul() (in module torch)": [[1314, "torch.mul"]], "multinomial() (in module torch)": [[1315, "torch.multinomial"]], "multiply() (in module torch)": [[1316, "torch.multiply"]], "mv() (in module torch)": [[1317, "torch.mv"]], "mvlgamma() (in module torch)": [[1318, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1319, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1320, "torch.nanmean"]], "nanmedian() (in module torch)": [[1321, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1322, "torch.nanquantile"]], "nansum() (in module torch)": [[1323, "torch.nansum"]], "narrow() (in module torch)": [[1324, "torch.narrow"]], "narrow_copy() (in module torch)": [[1325, "torch.narrow_copy"]], "ne() (in module torch)": [[1326, "torch.ne"]], "neg() (in module torch)": [[1327, "torch.neg"]], "negative() (in module torch)": [[1328, "torch.negative"]], "nextafter() (in module torch)": [[1329, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1330, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1331, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1332, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1333, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1333, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1333, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1334, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1335, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1336, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1337, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1338, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1339, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1340, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1341, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1342, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1343, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1344, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1345, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1346, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1347, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1348, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1349, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1350, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1351, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1352, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1353, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1354, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1355, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1356, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1357, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1358, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1359, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1360, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1361, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1362, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1363, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1364, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1365, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1366, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1367, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1368, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1368, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1369, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1369, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1369, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1370, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1371, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1372, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1373, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1374, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1375, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1376, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1377, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1378, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1379, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1380, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1381, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1382, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1383, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1384, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1385, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1386, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1387, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1388, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1389, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1390, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1391, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1392, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1393, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1394, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1395, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1396, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1397, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1398, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1398, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1399, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1399, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1400, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1400, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1401, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1401, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1402, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1402, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1403, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1403, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1404, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1404, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1405, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1405, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1406, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1406, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1407, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1407, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1408, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1408, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1409, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1409, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1410, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1410, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1411, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1412, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1413, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1414, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1415, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1416, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1417, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1418, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1419, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1420, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1421, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1422, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1423, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1424, "torch.nn.Mish"]], "module (class in torch.nn)": [[1425, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1425, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1425, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1425, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1425, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1425, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1425, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1425, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1425, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1425, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1425, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1425, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1425, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1425, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1425, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1425, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1425, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1425, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1425, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1425, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1425, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1425, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1425, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1425, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1425, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1425, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1425, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1425, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1425, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1425, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1425, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1425, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1425, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1425, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1425, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1425, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1425, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1425, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1425, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1425, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1425, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1425, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1425, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1425, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1425, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1425, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1425, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1426, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1426, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1426, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1426, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1426, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1426, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1426, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1427, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1427, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1427, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1427, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1428, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1429, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1430, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1431, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1431, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1431, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1432, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1433, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1434, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1435, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1435, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1435, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1435, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1435, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1435, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1435, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1435, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1435, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1435, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1435, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1435, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1436, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1436, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1436, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1437, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1438, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1439, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1440, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1441, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1441, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1442, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1443, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1444, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1445, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1446, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1447, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1448, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1449, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1450, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1451, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1452, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1453, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1453, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1454, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1455, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1456, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1457, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1458, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1459, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1460, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1461, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1462, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1463, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1464, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1464, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1465, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1466, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1467, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1468, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1468, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1468, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1469, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1469, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1470, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1470, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1471, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1471, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1472, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1472, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1473, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1474, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1475, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1476, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1477, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1478, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1479, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1480, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1481, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1482, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1483, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1484, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1485, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1486, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1487, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1488, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1489, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1490, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1491, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1492, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1493, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1494, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1495, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1496, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1497, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1498, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1499, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1500, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1501, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1502, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1503, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1504, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1505, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1506, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1507, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1508, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1509, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1510, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1511, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1512, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1513, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1514, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1515, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1516, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1517, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1518, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1519, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1520, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1521, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1522, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1523, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1524, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1525, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1526, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1527, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1528, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1529, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1530, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1531, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1532, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1533, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1534, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1535, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1536, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1537, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1538, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1539, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1540, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1541, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1542, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1543, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1544, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1545, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1546, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1547, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1548, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1549, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1550, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1551, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1552, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1553, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1554, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1555, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1556, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1557, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1558, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1559, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1560, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1561, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1562, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1563, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1564, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1565, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1566, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1567, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1568, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1569, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1570, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1571, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1572, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1573, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1574, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1575, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1576, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1577, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1578, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1579, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1580, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1581, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1582, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1583, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1584, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1585, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1586, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1587, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1588, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1589, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1590, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1591, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1592, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1593, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1594, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1595, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1596, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1596, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1596, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1597, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1598, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1599, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1600, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1601, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1602, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1603, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1604, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1605, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1605, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1605, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1605, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1605, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1606, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1607, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1608, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1608, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1609, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1610, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1611, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1612, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1613, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1614, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1614, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1615, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1616, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1617, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1618, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1619, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1619, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1619, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1619, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1619, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1619, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1620, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1620, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1620, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1620, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1620, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1621, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1621, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1621, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1621, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1621, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1622, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1622, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1622, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1622, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1622, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1623, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1623, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1623, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1623, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1623, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1623, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1624, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1624, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1624, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1624, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1624, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1624, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1624, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1625, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1625, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1625, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1625, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1625, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1625, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1626, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1626, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1626, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1626, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1626, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1627, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1628, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1629, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1630, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1631, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1632, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1633, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1634, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1635, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1636, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1637, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1638, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1638, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1638, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1638, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1638, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1638, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1638, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1638, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1638, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1638, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1639, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1640, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1641, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1642, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1643, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1644, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1645, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1646, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1647, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1648, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1649, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1650, "torch.no_grad"]], "nonzero() (in module torch)": [[1651, "torch.nonzero"]], "norm() (in module torch)": [[1652, "torch.norm"]], "normal() (in module torch)": [[1653, "torch.normal"]], "not_equal() (in module torch)": [[1654, "torch.not_equal"]], "numel() (in module torch)": [[1655, "torch.numel"]], "ones() (in module torch)": [[1656, "torch.ones"]], "ones_like() (in module torch)": [[1657, "torch.ones_like"]], "diagnosticoptions (class in torch.onnx)": [[1658, "torch.onnx.DiagnosticOptions"]], "exportoptions (class in torch.onnx)": [[1659, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1660, "torch.onnx.ExportOutput"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1660, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1660, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1660, "torch.onnx.ExportOutput.diagnostic_context"]], "fake_context (torch.onnx.exportoutput property)": [[1660, "torch.onnx.ExportOutput.fake_context"]], "model_proto (torch.onnx.exportoutput property)": [[1660, "torch.onnx.ExportOutput.model_proto"]], "save() (torch.onnx.exportoutput method)": [[1660, "torch.onnx.ExportOutput.save"]], "save_diagnostics() (torch.onnx.exportoutput method)": [[1660, "torch.onnx.ExportOutput.save_diagnostics"]], "exportoutputserializer (class in torch.onnx)": [[1661, "torch.onnx.ExportOutputSerializer"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1661, "torch.onnx.ExportOutputSerializer.serialize"]], "jitscalartype (class in torch.onnx)": [[1662, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1662, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1662, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1662, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1662, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1662, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1662, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1662, "torch.onnx.JitScalarType.torch_name"]], "onnxexportererror (class in torch.onnx)": [[1663, "torch.onnx.OnnxExporterError"]], "onnxregistry (class in torch.onnx)": [[1664, "torch.onnx.OnnxRegistry"]], "get_op_functions() (torch.onnx.onnxregistry method)": [[1664, "torch.onnx.OnnxRegistry.get_op_functions"]], "is_registered_op() (torch.onnx.onnxregistry method)": [[1664, "torch.onnx.OnnxRegistry.is_registered_op"]], "opset_version (torch.onnx.onnxregistry property)": [[1664, "torch.onnx.OnnxRegistry.opset_version"]], "register_op() (torch.onnx.onnxregistry method)": [[1664, "torch.onnx.OnnxRegistry.register_op"]], "graphinfo (class in torch.onnx.verification)": [[1665, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1666, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1667, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1668, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1669, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1670, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1670, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1670, "torch.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adam method)": [[1670, "torch.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adam method)": [[1670, "torch.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adam method)": [[1670, "torch.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adam method)": [[1670, "torch.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adam method)": [[1670, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1670, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1670, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1670, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1670, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1671, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1672, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1673, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1674, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1675, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1676, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1677, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1678, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1679, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1680, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1681, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1682, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1683, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1684, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1685, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1685, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1685, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1685, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1685, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1686, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1686, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1686, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1686, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1686, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1687, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1687, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1687, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1687, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1687, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1689, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1689, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1689, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1689, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1690, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1690, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1690, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1690, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1690, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1691, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1691, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1691, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1691, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1691, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1692, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1692, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1692, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1692, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1692, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1693, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1693, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1693, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1693, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1693, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1694, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1694, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1694, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1694, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1694, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1695, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1695, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1695, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1695, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1695, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1696, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1696, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1696, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1696, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1696, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1697, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1698, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1698, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1698, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1698, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1698, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1699, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1699, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1699, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1699, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1699, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1700, "torch.orgqr"]], "ormqr() (in module torch)": [[1701, "torch.ormqr"]], "outer() (in module torch)": [[1702, "torch.outer"]], "pca_lowrank() (in module torch)": [[1703, "torch.pca_lowrank"]], "permute() (in module torch)": [[1704, "torch.permute"]], "pinverse() (in module torch)": [[1705, "torch.pinverse"]], "poisson() (in module torch)": [[1706, "torch.poisson"]], "polar() (in module torch)": [[1707, "torch.polar"]], "polygamma() (in module torch)": [[1708, "torch.polygamma"]], "positive() (in module torch)": [[1709, "torch.positive"]], "pow() (in module torch)": [[1710, "torch.pow"]], "prod() (in module torch)": [[1711, "torch.prod"]], "promote_types() (in module torch)": [[1712, "torch.promote_types"]], "qr() (in module torch)": [[1713, "torch.qr"]], "quantile() (in module torch)": [[1714, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1715, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1716, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1717, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1718, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1719, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1720, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1720, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1720, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1720, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1720, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1721, "torch.rad2deg"]], "rand() (in module torch)": [[1722, "torch.rand"]], "rand_like() (in module torch)": [[1723, "torch.rand_like"]], "randint() (in module torch)": [[1724, "torch.randint"]], "randint_like() (in module torch)": [[1725, "torch.randint_like"]], "randn() (in module torch)": [[1726, "torch.randn"]], "randn_like() (in module torch)": [[1727, "torch.randn_like"]], "randperm() (in module torch)": [[1728, "torch.randperm"]], "range() (in module torch)": [[1729, "torch.range"]], "ravel() (in module torch)": [[1730, "torch.ravel"]], "real() (in module torch)": [[1731, "torch.real"]], "reciprocal() (in module torch)": [[1732, "torch.reciprocal"]], "remainder() (in module torch)": [[1733, "torch.remainder"]], "renorm() (in module torch)": [[1734, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1735, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1736, "torch.reshape"]], "resolve_conj() (in module torch)": [[1737, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1738, "torch.resolve_neg"]], "result_type() (in module torch)": [[1739, "torch.result_type"]], "roll() (in module torch)": [[1740, "torch.roll"]], "rot90() (in module torch)": [[1741, "torch.rot90"]], "round() (in module torch)": [[1742, "torch.round"]], "row_stack() (in module torch)": [[1743, "torch.row_stack"]], "rsqrt() (in module torch)": [[1744, "torch.rsqrt"]], "save() (in module torch)": [[1745, "torch.save"]], "scatter() (in module torch)": [[1746, "torch.scatter"]], "scatter_add() (in module torch)": [[1747, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1748, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1749, "torch.searchsorted"]], "seed() (in module torch)": [[1750, "torch.seed"]], "select() (in module torch)": [[1751, "torch.select"]], "select_scatter() (in module torch)": [[1752, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1753, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1754, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1755, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1756, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1757, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1758, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1759, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1760, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1761, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1762, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1763, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1764, "torch.set_warn_always"]], "sgn() (in module torch)": [[1765, "torch.sgn"]], "sigmoid() (in module torch)": [[1766, "torch.sigmoid"]], "sign() (in module torch)": [[1767, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1768, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1769, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1770, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1771, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1772, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1773, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1774, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1775, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1776, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1777, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1778, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1779, "torch.signbit"]], "sin() (in module torch)": [[1780, "torch.sin"]], "sinc() (in module torch)": [[1781, "torch.sinc"]], "sinh() (in module torch)": [[1782, "torch.sinh"]], "slice_scatter() (in module torch)": [[1783, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1784, "torch.slogdet"]], "smm() (in module torch)": [[1785, "torch.smm"]], "softmax() (in module torch)": [[1786, "torch.softmax"]], "sort() (in module torch)": [[1787, "torch.sort"]], "addmm() (in module torch.sparse)": [[1788, "torch.sparse.addmm"]], "as_sparse_gradcheck() (in module torch.sparse)": [[1789, "torch.sparse.as_sparse_gradcheck"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1790, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1790, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1790, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1790, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1791, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1792, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1793, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1794, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1795, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1796, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1797, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1798, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1799, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1800, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1801, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1802, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1803, "torch.split"]], "sqrt() (in module torch)": [[1804, "torch.sqrt"]], "square() (in module torch)": [[1805, "torch.square"]], "squeeze() (in module torch)": [[1806, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1807, "torch.sspaddmm"]], "stack() (in module torch)": [[1808, "torch.stack"]], "std() (in module torch)": [[1809, "torch.std"]], "std_mean() (in module torch)": [[1810, "torch.std_mean"]], "stft() (in module torch)": [[1811, "torch.stft"]], "sub() (in module torch)": [[1812, "torch.sub"]], "subtract() (in module torch)": [[1813, "torch.subtract"]], "sum() (in module torch)": [[1814, "torch.sum"]], "svd() (in module torch)": [[1815, "torch.svd"]], "svd_lowrank() (in module torch)": [[1816, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1817, "torch.swapaxes"]], "swapdims() (in module torch)": [[1818, "torch.swapdims"]], "sym_float() (in module torch)": [[1819, "torch.sym_float"]], "sym_int() (in module torch)": [[1820, "torch.sym_int"]], "sym_max() (in module torch)": [[1821, "torch.sym_max"]], "sym_min() (in module torch)": [[1822, "torch.sym_min"]], "sym_not() (in module torch)": [[1823, "torch.sym_not"]], "t() (in module torch)": [[1824, "torch.t"]], "take() (in module torch)": [[1825, "torch.take"]], "take_along_dim() (in module torch)": [[1826, "torch.take_along_dim"]], "tan() (in module torch)": [[1827, "torch.tan"]], "tanh() (in module torch)": [[1828, "torch.tanh"]], "tensor() (in module torch)": [[1829, "torch.tensor"]], "tensor_split() (in module torch)": [[1830, "torch.tensor_split"]], "tensordot() (in module torch)": [[1831, "torch.tensordot"]], "tile() (in module torch)": [[1832, "torch.tile"]], "topk() (in module torch)": [[1833, "torch.topk"]], "trace() (in module torch)": [[1834, "torch.trace"]], "transpose() (in module torch)": [[1835, "torch.transpose"]], "trapezoid() (in module torch)": [[1836, "torch.trapezoid"]], "trapz() (in module torch)": [[1837, "torch.trapz"]], "triangular_solve() (in module torch)": [[1838, "torch.triangular_solve"]], "tril() (in module torch)": [[1839, "torch.tril"]], "tril_indices() (in module torch)": [[1840, "torch.tril_indices"]], "triu() (in module torch)": [[1841, "torch.triu"]], "triu_indices() (in module torch)": [[1842, "torch.triu_indices"]], "true_divide() (in module torch)": [[1843, "torch.true_divide"]], "trunc() (in module torch)": [[1844, "torch.trunc"]], "unbind() (in module torch)": [[1845, "torch.unbind"]], "unflatten() (in module torch)": [[1846, "torch.unflatten"]], "unique() (in module torch)": [[1847, "torch.unique"]], "unique_consecutive() (in module torch)": [[1848, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1849, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1850, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1851, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1852, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1853, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1854, "torch.utils.set_module"]], "vander() (in module torch)": [[1855, "torch.vander"]], "var() (in module torch)": [[1856, "torch.var"]], "var_mean() (in module torch)": [[1857, "torch.var_mean"]], "vdot() (in module torch)": [[1858, "torch.vdot"]], "view_as_complex() (in module torch)": [[1859, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1860, "torch.view_as_real"]], "vmap() (in module torch)": [[1861, "torch.vmap"]], "vsplit() (in module torch)": [[1862, "torch.vsplit"]], "vstack() (in module torch)": [[1863, "torch.vstack"]], "where() (in module torch)": [[1864, "torch.where"]], "xlogy() (in module torch)": [[1865, "torch.xlogy"]], "zeros() (in module torch)": [[1866, "torch.zeros"]], "zeros_like() (in module torch)": [[1867, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1868, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1868, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1868, "torch.hub.help"]], "list() (in module torch.hub)": [[1868, "torch.hub.list"]], "load() (in module torch.hub)": [[1868, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1868, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1868, "torch.hub.set_dir"]], "torch.hub": [[1868, "module-torch.hub"]], "pytorch_jit": [[1870, "envvar-PYTORCH_JIT"]], "environment variable": [[1870, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1870, "torch.jit.export"]], "torch.jit": [[1870, "module-torch.jit"]], "torch.jit.mobile": [[1870, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1871, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1872, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1872, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1875, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1876, "module-torch.utils.jit"]], "library (class in torch.library)": [[1877, "torch.library.Library"]], "define() (torch.library.library method)": [[1877, "torch.library.Library.define"]], "fallthrough_kernel() (in module torch.library)": [[1877, "torch.library.fallthrough_kernel"]], "impl() (torch.library.library method)": [[1877, "torch.library.Library.impl"]], "torch.linalg": [[1878, "module-torch.linalg"]], "torch._logging": [[1879, "module-torch._logging"]], "torch.masked": [[1880, "module-torch.masked"]], "torch.masked.maskedtensor": [[1880, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1881, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1882, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1882, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1883, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1883, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1883, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1883, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1883, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1883, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1883, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1883, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1883, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1883, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1883, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1883, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1883, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1883, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1883, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1883, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1883, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1883, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1883, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1883, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1883, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1884, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1885, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1885, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1885, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1885, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1885, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1885, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1885, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1887, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1887, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1887, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1887, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1887, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1887, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1888, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1888, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1888, "torch.nested.to_padded_tensor"]], "torch.nested": [[1888, "module-torch.nested"]], "torch.nn": [[1889, "module-torch.nn"]], "torch.nn.backends": [[1889, "module-torch.nn.backends"]], "torch.nn.modules": [[1889, "module-torch.nn.modules"]], "torch.nn.parallel": [[1889, "module-torch.nn.parallel"]], "torch.nn.utils": [[1889, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1889, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1891, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1891, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1891, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1891, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1891, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1891, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1891, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1891, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1891, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1891, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1891, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1891, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1891, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1891, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1891, "torch.nn.init.zeros_"]], "get_default_load_endianness() (in module torch.serialization)": [[1909, "torch.serialization.get_default_load_endianness"]], "register_package() (in module torch.serialization)": [[1909, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[1909, "torch.serialization.set_default_load_endianness"]], "disable_log() (in module torch.onnx)": [[1911, "torch.onnx.disable_log"]], "dynamo_export() (in module torch.onnx)": [[1911, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[1911, "torch.onnx.enable_fake_mode"]], "enable_log() (in module torch.onnx)": [[1911, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1911, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1911, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1911, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1911, "torch.onnx.is_in_onnx_export"]], "is_onnxrt_backend_supported() (in module torch.onnx)": [[1911, "torch.onnx.is_onnxrt_backend_supported"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1911, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1911, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1911, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1911, "torch.onnx.unregister_custom_op_symbolic"]], "torch.onnx._internal.diagnostics": [[1912, "module-torch.onnx._internal.diagnostics"]], "optimizer (class in torch.optim)": [[1914, "torch.optim.Optimizer"]], "torch.optim": [[1914, "module-torch.optim"]], "directory (class in torch.package)": [[1915, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1915, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1915, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1915, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1915, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1915, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1915, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1915, "torch.package.PackageExporter.save_text"]], "torch.package": [[1915, "module-torch.package"]], "torch.package.analyze": [[1915, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1916, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1916, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1916, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1916, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1916, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1916, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1917, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1917, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1917, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1917, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1917, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1917, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1917, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1917, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1917, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1917, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1917, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1917, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1917, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1917, "module-torch.profiler"]], "torch.ao": [[1918, "module-torch.ao"]], "torch.ao.nn": [[1918, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1918, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1918, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1918, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1918, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1918, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1918, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1918, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1918, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1918, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1918, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1918, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1918, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1918, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1918, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1918, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1918, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1921, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1921, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1921, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1921, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1921, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1921, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1921, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1921, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1921, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1921, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1921, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1921, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1921, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1921, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1921, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1921, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[1921, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.representation": [[1921, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[1921, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[1921, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1921, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1921, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1921, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1921, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1921, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1921, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1921, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1921, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1921, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1921, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1921, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1921, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1921, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1921, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1921, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1921, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1921, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1921, "module-torch.quantization"]], "torch.quantization.fx": [[1921, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1922, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1922, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1922, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1922, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1922, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1922, "torch.random.set_rng_state"]], "torch.random": [[1922, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1923, "torch.distributed.rpc.BackendType"]], "pyrref (class in torch.distributed.rpc)": [[1923, "torch.distributed.rpc.PyRRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1923, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1923, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1923, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1923, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1923, "torch.distributed.autograd.backward"]], "backward() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.backward"]], "confirmed_by_owner() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.confirmed_by_owner"]], "context (class in torch.distributed.autograd)": [[1923, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1923, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1923, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1923, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1923, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.init_rpc"]], "is_owner() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.is_owner"]], "local_value() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.local_value"]], "name (torch.distributed.rpc.workerinfo property)": [[1923, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "owner() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.owner"]], "owner_name() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.owner_name"]], "remote() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.remote"]], "remote() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1923, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.rpc_async"]], "rpc_async() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.rpc_sync"]], "rpc_sync() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1923, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1923, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1923, "torch.distributed.rpc.shutdown"]], "to_here() (torch.distributed.rpc.pyrref method)": [[1923, "torch.distributed.rpc.PyRRef.to_here"]], "torch.distributed.autograd": [[1923, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1923, "module-torch.distributed.rpc"]], "torch.signal": [[1926, "module-torch.signal"]], "torch.signal.windows": [[1926, "module-torch.signal.windows"]], "torch.sparse": [[1927, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1928, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1928, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1928, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1928, "torch.special.digamma"]], "entr() (in module torch.special)": [[1928, "torch.special.entr"]], "erf() (in module torch.special)": [[1928, "torch.special.erf"]], "erfc() (in module torch.special)": [[1928, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1928, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1928, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1928, "torch.special.exp2"]], "expit() (in module torch.special)": [[1928, "torch.special.expit"]], "expm1() (in module torch.special)": [[1928, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1928, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1928, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1928, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1928, "torch.special.i0"]], "i0e() (in module torch.special)": [[1928, "torch.special.i0e"]], "i1() (in module torch.special)": [[1928, "torch.special.i1"]], "i1e() (in module torch.special)": [[1928, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1928, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1928, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1928, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1928, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1928, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1928, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1928, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1928, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1928, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1928, "torch.special.psi"]], "round() (in module torch.special)": [[1928, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1928, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1928, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1928, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1928, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1928, "torch.special.spherical_bessel_j0"]], "torch.special": [[1928, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1928, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1928, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1928, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1929, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1929, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1929, "torch.ByteStorage"]], "charstorage (class in torch)": [[1929, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1929, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1929, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1929, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1929, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1929, "torch.HalfStorage"]], "intstorage (class in torch)": [[1929, "torch.IntStorage"]], "longstorage (class in torch)": [[1929, "torch.LongStorage"]], "qint32storage (class in torch)": [[1929, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1929, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1929, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1929, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1929, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1929, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1929, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1929, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1929, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1929, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1929, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1929, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1929, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1929, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1929, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1929, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1929, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1929, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1929, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1929, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1929, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1929, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1929, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1929, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1929, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1929, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1929, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1929, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1929, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1929, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1929, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1929, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1929, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1929, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1929, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1929, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1929, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1929, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1929, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1929, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1929, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1929, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1929, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1929, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1929, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1929, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1929, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1929, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1929, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[1929, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[1929, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1929, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1929, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[1929, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[1929, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[1929, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1929, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1929, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1929, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1929, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1929, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1929, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1929, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1929, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1929, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1929, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1929, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1929, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1929, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1929, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1929, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1929, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1930, "torch.device"]], "dtype (class in torch)": [[1930, "torch.dtype"]], "layout (class in torch)": [[1930, "torch.layout"]], "memory_format (class in torch)": [[1930, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1932, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1932, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1933, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1933, "torch.Tensor.T"]], "tensor (class in torch)": [[1933, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1933, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1933, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1934, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1934, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1934, "torch.testing.make_tensor"]], "torch.testing": [[1934, "module-torch.testing"]], "symbool (class in torch)": [[1935, "torch.SymBool"]], "symfloat (class in torch)": [[1935, "torch.SymFloat"]], "symint (class in torch)": [[1935, "torch.SymInt"]], "tag (class in torch)": [[1935, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1935, "torch.torch.default_generator"]], "name (torch.tag property)": [[1935, "torch.Tag.name"]], "torch": [[1935, "module-torch"]], "torch.contrib": [[1935, "module-torch.contrib"]], "torch.utils.backcompat": [[1935, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1935, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1935, "module-torch.utils.model_dump"]], "torch.utils.viz": [[1935, "module-torch.utils.viz"]], "logger (class in torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1936, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1936, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1936, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1936, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1936, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1936, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1937, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1937, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1937, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1937, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1937, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1937, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1937, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1937, "module-torch.ao.ns._numeric_suite_fx"]], "torch.compiler": [[1939, "module-torch.compiler"]], "get_ignored_functions() (in module torch.overrides)": [[1957, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1957, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1957, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1957, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1957, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1957, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1957, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1957, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1957, "torch.overrides.wrap_torch_function"]], "_dump_snapshot() (in module torch.cuda.memory)": [[1958, "torch.cuda.memory._dump_snapshot"]], "_record_memory_history() (in module torch.cuda.memory)": [[1958, "torch.cuda.memory._record_memory_history"]], "_snapshot() (in module torch.cuda.memory)": [[1958, "torch.cuda.memory._snapshot"]], "torch.finfo (class in torch)": [[1959, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1959, "torch.torch.iinfo"]], "torch.utils": [[1960, "module-torch.utils"]]}})